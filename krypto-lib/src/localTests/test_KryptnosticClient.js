// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = typeof window === 'object';
// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in: 
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at: 
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      assert(args.length == sig.length-1);
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      assert(sig.length == 1);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      sigCache[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16);(assert((((STACKTOP|0) < (STACK_MAX|0))|0))|0); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + (assert(!staticSealed),size))|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + (assert(DYNAMICTOP > 0),size))|0;DYNAMICTOP = (((DYNAMICTOP)+15)&-16); if (DYNAMICTOP >= TOTAL_MEMORY) { var success = enlargeMemory(); if (!success) { DYNAMICTOP = ret; return 0; } }; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}



Module["Runtime"] = Runtime;



//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try {
      func = eval('_' + ident); // explicit lookup
    } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        ret = Runtime.stackAlloc((str.length << 2) + 1);
        writeStringToMemory(str, ret);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface. 
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    assert(returnType !== 'array', 'Return type should not be "array".');
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if ((!opts || !opts.async) && typeof EmterpreterAsync === 'object') {
      assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling ccall');
    }
    if (opts && opts.async) assert(!returnType, 'async ccalls cannot return values');
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }
  var JSsource = {};
  for (var fun in JSfuncs) {
    if (JSfuncs.hasOwnProperty(fun)) {
      // Elements of toCsource are arrays of three items:
      // the code, and the return value
      JSsource[fun] = parseJSFunc(JSfuncs[fun]);
    }
  }

  
  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=' + convertCode.returnValue + ';';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    funcstr += "if (typeof EmterpreterAsync === 'object') { assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling cwrap') }";
    if (!numericArgs) {
      // If we had a stack, restore it
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["ccall"] = ccall;
Module["cwrap"] = cwrap;

function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module["setValue"] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module["getValue"] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
Module["ALLOC_STACK"] = ALLOC_STACK;
Module["ALLOC_STATIC"] = ALLOC_STATIC;
Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
Module["ALLOC_NONE"] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    assert(type, 'Must know what type to store in allocate!');

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module["allocate"] = allocate;

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return Runtime.staticAlloc(size);
  if ((typeof _sbrk !== 'undefined' && !_sbrk.called) || !runtimeInitialized) return Runtime.dynamicAlloc(size);
  return _malloc(size);
}
Module["getMemory"] = getMemory;

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    assert(ptr + i < TOTAL_MEMORY);
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module["Pointer_stringify"] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module["AsciiToString"] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module["stringToAscii"] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

function UTF8ArrayToString(u8Array, idx) {
  var u0, u1, u2, u3, u4, u5;

  var str = '';
  while (1) {
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    u0 = u8Array[idx++];
    if (!u0) return str;
    if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
    u1 = u8Array[idx++] & 63;
    if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
    u2 = u8Array[idx++] & 63;
    if ((u0 & 0xF0) == 0xE0) {
      u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
    } else {
      u3 = u8Array[idx++] & 63;
      if ((u0 & 0xF8) == 0xF0) {
        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
      } else {
        u4 = u8Array[idx++] & 63;
        if ((u0 & 0xFC) == 0xF8) {
          u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
        } else {
          u5 = u8Array[idx++] & 63;
          u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
        }
      }
    }
    if (u0 < 0x10000) {
      str += String.fromCharCode(u0);
    } else {
      var ch = u0 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    }
  }
}
Module["UTF8ArrayToString"] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8, ptr);
}
Module["UTF8ToString"] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module["stringToUTF8Array"] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
}
Module["stringToUTF8"] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module["lengthBytesUTF8"] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module["UTF16ToString"] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}
Module["stringToUTF16"] = stringToUTF16;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}
Module["lengthBytesUTF16"] = lengthBytesUTF16;

function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module["UTF32ToString"] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}
Module["stringToUTF32"] = stringToUTF32;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}
Module["lengthBytesUTF32"] = lengthBytesUTF32;

function demangle(func) {
  var hasLibcxxabi = !!Module['___cxa_demangle'];
  if (hasLibcxxabi) {
    try {
      var buf = _malloc(func.length);
      writeStringToMemory(func.substr(1), buf);
      var status = _malloc(4);
      var ret = Module['___cxa_demangle'](buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed, we can try ours which may return a partial result
    } catch(e) {
      // failure when using libcxxabi, we can try ours which may return a partial result
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
  }
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    if (rawList) {
      if (ret) {
        list.push(ret + '?');
      }
      return list;
    } else {
      return ret + flushList();
    }
  }
  var parsed = func;
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    parsed = parse();
  } catch(e) {
    parsed += '?';
  }
  if (parsed.indexOf('?') >= 0 && !hasLibcxxabi) {
    Runtime.warnOnce('warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  }
  return parsed;
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  return demangleAll(jsStackTrace());
}
Module["stackTrace"] = stackTrace;

// Memory management

var PAGE_SIZE = 4096;

function alignMemoryPage(x) {
  if (x % 4096 > 0) {
    x += (4096 - (x % 4096));
  }
  return x;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk


function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 10000000;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;

var totalMemory = 64*1024;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be compliant with the asm.js spec (and given that TOTAL_STACK=' + TOTAL_STACK + ')');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer;
buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module["addOnPreRun"] = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module["addOnInit"] = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module["addOnPreMain"] = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module["addOnExit"] = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module["addOnPostRun"] = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module["intArrayFromString"] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module["intArrayToString"] = intArrayToString;

function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))>>0)]=chr;
    i = i + 1;
  }
}
Module["writeStringToMemory"] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[((buffer++)>>0)]=array[i];
  }
}
Module["writeArrayToMemory"] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module["writeAsciiToMemory"] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}


// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
var runDependencyTracking = {};

function getUniqueRunDependency(id) {
  var orig = id;
  while (1) {
    if (!runDependencyTracking[id]) return id;
    id = orig + Math.random();
  }
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(function() {
        if (ABORT) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
          return;
        }
        var shown = false;
        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            Module.printErr('still waiting on run dependencies:');
          }
          Module.printErr('dependency: ' + dep);
        }
        if (shown) {
          Module.printErr('(end of list)');
        }
      }, 10000);
    }
  } else {
    Module.printErr('warning: run dependency added without ID');
  }
}
Module["addRunDependency"] = addRunDependency;

function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    Module.printErr('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module["removeRunDependency"] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;



// === Body ===

var ASM_CONSTS = [];




STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 26960;
  /* global initializers */  __ATINIT__.push({ func: function() { __GLOBAL__sub_I_test_KryptnosticClient_cpp() } }, { func: function() { __GLOBAL__sub_I_bind_cpp() } }, { func: function() { __GLOBAL__sub_I_iostream_cpp() } });
  

/* memory initializer */ allocate([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,10,0,0,197,60,0,0,232,10,0,0,228,60,0,0,232,10,0,0,3,61,0,0,232,10,0,0,34,61,0,0,232,10,0,0,65,61,0,0,232,10,0,0,96,61,0,0,232,10,0,0,127,61,0,0,232,10,0,0,158,61,0,0,232,10,0,0,189,61,0,0,232,10,0,0,220,61,0,0,232,10,0,0,251,61,0,0,232,10,0,0,26,62,0,0,232,10,0,0,57,62,0,0,56,11,0,0,76,62,0,0,0,0,0,0,1,0,0,0,232,0,0,0,0,0,0,0,232,10,0,0,139,62,0,0,56,11,0,0,177,62,0,0,0,0,0,0,1,0,0,0,232,0,0,0,0,0,0,0,56,11,0,0,240,62,0,0,0,0,0,0,1,0,0,0,232,0,0,0,0,0,0,0,16,11,0,0,48,63,0,0,48,1,0,0,0,0,0,0,232,10,0,0,61,63,0,0,16,11,0,0,74,63,0,0,48,1,0,0,0,0,0,0,16,11,0,0,92,63,0,0,56,1,0,0,0,0,0,0,232,10,0,0,111,63,0,0,16,11,0,0,124,63,0,0,48,1,0,0,0,0,0,0,16,11,0,0,136,63,0,0,88,1,0,0,0,0,0,0,16,11,0,0,169,63,0,0,112,1,0,0,0,0,0,0,16,11,0,0,239,63,0,0,112,1,0,0,0,0,0,0,16,11,0,0,203,63,0,0,144,1,0,0,0,0,0,0,16,11,0,0,17,64,0,0,112,1,0,0,0,0,0,0,204,10,0,0,57,64,0,0,204,10,0,0,59,64,0,0,204,10,0,0,61,64,0,0,204,10,0,0,63,64,0,0,204,10,0,0,65,64,0,0,204,10,0,0,67,64,0,0,204,10,0,0,69,64,0,0,204,10,0,0,71,64,0,0,204,10,0,0,73,64,0,0,204,10,0,0,158,101,0,0,204,10,0,0,75,64,0,0,204,10,0,0,77,64,0,0,204,10,0,0,79,64,0,0,16,11,0,0,81,64,0,0,128,1,0,0,0,0,0,0,16,11,0,0,118,64,0,0,128,1,0,0,0,0,0,0,16,11,0,0,148,93,0,0,200,2,0,0,0,0,0,0,16,11,0,0,211,93,0,0,200,2,0,0,0,0,0,0,16,11,0,0,235,93,0,0,192,2,0,0,0,0,0,0,16,11,0,0,4,94,0,0,192,2,0,0,0,0,0,0,16,11,0,0,50,94,0,0,64,10,0,0,0,0,0,0,232,10,0,0,76,94,0,0,16,11,0,0,94,94,0,0,152,2,0,0,0,0,0,0,16,11,0,0,136,94,0,0,152,2,0,0,0,0,0,0,232,10,0,0,178,94,0,0,232,10,0,0,227,94,0,0,56,11,0,0,20,95,0,0,0,0,0,0,1,0,0,0,160,2,0,0,3,244,255,255,56,11,0,0,67,95,0,0,0,0,0,0,1,0,0,0,176,2,0,0,3,244,255,255,56,11,0,0,114,95,0,0,0,0,0,0,1,0,0,0,160,2,0,0,3,244,255,255,56,11,0,0,161,95,0,0,0,0,0,0,1,0,0,0,176,2,0,0,3,244,255,255,16,11,0,0,208,95,0,0,88,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,11,0,0,76,96,0,0,56,10,0,0,0,0,0,0,56,11,0,0,98,96,0,0,0,0,0,0,2,0,0,0,72,3,0,0,2,0,0,0,104,9,0,0,2,0,0,0,56,11,0,0,116,96,0,0,0,0,0,0,2,0,0,0,72,3,0,0,2,0,0,0,112,9,0,0,2,0,0,0,56,11,0,0,150,96,0,0,0,0,0,0,2,0,0,0,72,3,0,0,2,0,0,0,112,9,0,0,2,0,0,0,56,11,0,0,185,96,0,0,0,0,0,0,2,0,0,0,72,3,0,0,2,0,0,0,112,9,0,0,2,0,0,0,16,11,0,0,220,96,0,0,184,3,0,0,0,0,0,0,16,11,0,0,254,96,0,0,184,3,0,0,0,0,0,0,56,11,0,0,33,97,0,0,0,0,0,0,2,0,0,0,72,3,0,0,2,0,0,0,112,9,0,0,2,0,0,0,16,11,0,0,67,97,0,0,72,3,0,0,0,0,0,0,16,11,0,0,89,97,0,0,72,3,0,0,0,0,0,0,16,11,0,0,109,97,0,0,72,3,0,0,0,0,0,0,56,11,0,0,129,97,0,0,0,0,0,0,2,0,0,0,72,3,0,0,2,0,0,0,104,9,0,0,2,0,0,0,16,11,0,0,147,97,0,0,72,3,0,0,0,0,0,0,16,11,0,0,168,97,0,0,72,3,0,0,0,0,0,0,56,11,0,0,189,97,0,0,0,0,0,0,2,0,0,0,72,3,0,0,2,0,0,0,120,9,0,0,0,0,0,0,56,11,0,0,1,98,0,0,0,0,0,0,2,0,0,0,72,3,0,0,2,0,0,0,144,9,0,0,0,0,0,0,56,11,0,0,69,98,0,0,0,0,0,0,2,0,0,0,72,3,0,0,2,0,0,0,168,9,0,0,0,0,0,0,56,11,0,0,137,98,0,0,0,0,0,0,2,0,0,0,72,3,0,0,2,0,0,0,192,9,0,0,0,0,0,0,56,11,0,0,205,98,0,0,0,0,0,0,3,0,0,0,72,3,0,0,2,0,0,0,216,9,0,0,2,0,0,0,224,9,0,0,0,8,0,0,56,11,0,0,18,99,0,0,0,0,0,0,3,0,0,0,72,3,0,0,2,0,0,0,216,9,0,0,2,0,0,0,232,9,0,0,0,8,0,0,56,11,0,0,87,99,0,0,0,0,0,0,2,0,0,0,72,3,0,0,2,0,0,0,240,9,0,0,0,8,0,0,56,11,0,0,156,99,0,0,0,0,0,0,2,0,0,0,72,3,0,0,2,0,0,0,240,9,0,0,0,8,0,0,56,11,0,0,225,99,0,0,0,0,0,0,2,0,0,0,72,3,0,0,2,0,0,0,248,9,0,0,2,0,0,0,56,11,0,0,253,99,0,0,0,0,0,0,2,0,0,0,72,3,0,0,2,0,0,0,248,9,0,0,2,0,0,0,56,11,0,0,25,100,0,0,0,0,0,0,2,0,0,0,72,3,0,0,2,0,0,0,248,9,0,0,2,0,0,0,56,11,0,0,53,100,0,0,0,0,0,0,2,0,0,0,72,3,0,0,2,0,0,0,248,9,0,0,2,0,0,0,56,11,0,0,81,100,0,0,0,0,0,0,2,0,0,0,72,3,0,0,2,0,0,0,0,10,0,0,0,0,0,0,56,11,0,0,151,100,0,0,0,0,0,0,2,0,0,0,72,3,0,0,2,0,0,0,8,10,0,0,0,0,0,0,56,11,0,0,221,100,0,0,0,0,0,0,2,0,0,0,72,3,0,0,2,0,0,0,16,10,0,0,0,0,0,0,56,11,0,0,35,101,0,0,0,0,0,0,2,0,0,0,72,3,0,0,2,0,0,0,24,10,0,0,0,0,0,0,56,11,0,0,105,101,0,0,0,0,0,0,2,0,0,0,72,3,0,0,2,0,0,0,32,10,0,0,2,0,0,0,56,11,0,0,126,101,0,0,0,0,0,0,2,0,0,0,72,3,0,0,2,0,0,0,32,10,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,10,0,0,218,104,0,0,232,10,0,0,195,104,0,0,56,11,0,0,173,104,0,0,0,0,0,0,1,0,0,0,48,10,0,0,0,0,0,0,56,11,0,0,126,104,0,0,0,0,0,0,1,0,0,0,48,10,0,0,0,0,0,0,56,11,0,0,104,104,0,0,0,0,0,0,1,0,0,0,40,10,0,0,0,0,0,0,56,11,0,0,57,104,0,0,0,0,0,0,1,0,0,0,40,10,0,0,0,0,0,0,232,10,0,0,38,104,0,0,232,10,0,0,4,104,0,0,232,10,0,0,226,103,0,0,232,10,0,0,205,103,0,0,232,10,0,0,184,103,0,0,232,10,0,0,159,103,0,0,232,10,0,0,134,103,0,0,232,10,0,0,109,103,0,0,232,10,0,0,84,103,0,0,232,10,0,0,60,103,0,0,232,10,0,0,79,104,0,0,232,10,0,0,148,104,0,0,232,10,0,0,239,104,0,0,16,11,0,0,8,105,0,0,56,1,0,0,0,0,0,0,232,10,0,0,31,105,0,0,16,11,0,0,56,105,0,0,80,10,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,32,1,0,0,2,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,56,1,0,0,5,0,0,0,6,0,0,0,7,0,0,0,0,0,0,0,72,1,0,0,5,0,0,0,8,0,0,0,7,0,0,0,0,0,0,0,96,1,0,0,9,0,0,0,10,0,0,0,11,0,0,0,0,0,0,0,176,1,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,0,0,0,0,128,1,0,0,12,0,0,0,17,0,0,0,14,0,0,0,15,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,0,0,0,0,40,2,0,0,12,0,0,0,22,0,0,0,14,0,0,0,15,0,0,0,18,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,0,0,0,0,56,2,0,0,12,0,0,0,26,0,0,0,14,0,0,0,15,0,0,0,18,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,219,74,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,4,15,0,0,116,15,0,0,228,15,0,0,228,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,180,55,0,0,84,24,0,0,84,18,0,0,0,0,0,0,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,33,0,0,0,125,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,33,0,0,0,117,87,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,0,0,0,33,0,0,0,109,83,0,0,0,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,40,0,0,0,41,0,0,0,42,0,0,0,43,0,0,0,44,0,0,0,45,0,0,0,46,0,0,0,47,0,0,0,48,0,0,0,49,0,0,0,50,0,0,0,51,0,0,0,52,0,0,0,53,0,0,0,54,0,0,0,55,0,0,0,56,0,0,0,57,0,0,0,58,0,0,0,59,0,0,0,60,0,0,0,61,0,0,0,62,0,0,0,63,0,0,0,64,0,0,0,65,0,0,0,66,0,0,0,67,0,0,0,68,0,0,0,69,0,0,0,70,0,0,0,71,0,0,0,72,0,0,0,73,0,0,0,74,0,0,0,75,0,0,0,76,0,0,0,77,0,0,0,78,0,0,0,79,0,0,0,80,0,0,0,81,0,0,0,82,0,0,0,83,0,0,0,84,0,0,0,85,0,0,0,86,0,0,0,87,0,0,0,88,0,0,0,89,0,0,0,90,0,0,0,91,0,0,0,92,0,0,0,93,0,0,0,94,0,0,0,95,0,0,0,96,0,0,0,65,0,0,0,66,0,0,0,67,0,0,0,68,0,0,0,69,0,0,0,70,0,0,0,71,0,0,0,72,0,0,0,73,0,0,0,74,0,0,0,75,0,0,0,76,0,0,0,77,0,0,0,78,0,0,0,79,0,0,0,80,0,0,0,81,0,0,0,82,0,0,0,83,0,0,0,84,0,0,0,85,0,0,0,86,0,0,0,87,0,0,0,88,0,0,0,89,0,0,0,90,0,0,0,123,0,0,0,124,0,0,0,125,0,0,0,126,0,0,0,127], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,40,0,0,0,41,0,0,0,42,0,0,0,43,0,0,0,44,0,0,0,45,0,0,0,46,0,0,0,47,0,0,0,48,0,0,0,49,0,0,0,50,0,0,0,51,0,0,0,52,0,0,0,53,0,0,0,54,0,0,0,55,0,0,0,56,0,0,0,57,0,0,0,58,0,0,0,59,0,0,0,60,0,0,0,61,0,0,0,62,0,0,0,63,0,0,0,64,0,0,0,97,0,0,0,98,0,0,0,99,0,0,0,100,0,0,0,101,0,0,0,102,0,0,0,103,0,0,0,104,0,0,0,105,0,0,0,106,0,0,0,107,0,0,0,108,0,0,0,109,0,0,0,110,0,0,0,111,0,0,0,112,0,0,0,113,0,0,0,114,0,0,0,115,0,0,0,116,0,0,0,117,0,0,0,118,0,0,0,119,0,0,0,120,0,0,0,121,0,0,0,122,0,0,0,91,0,0,0,92,0,0,0,93,0,0,0,94,0,0,0,95,0,0,0,96,0,0,0,97,0,0,0,98,0,0,0,99,0,0,0,100,0,0,0,101,0,0,0,102,0,0,0,103,0,0,0,104,0,0,0,105,0,0,0,106,0,0,0,107,0,0,0,108,0,0,0,109,0,0,0,110,0,0,0,111,0,0,0,112,0,0,0,113,0,0,0,114,0,0,0,115,0,0,0,116,0,0,0,117,0,0,0,118,0,0,0,119,0,0,0,120,0,0,0,121,0,0,0,122,0,0,0,123,0,0,0,124,0,0,0,125,0,0,0,126,0,0,0,127], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+6224);
/* memory initializer */ allocate([72,2,0,0,36,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,40,0,0,0,41,0,0,0,42,0,0,0,43,0,0,0,44,0,0,0,45,0,0,0,46,0,0,0,47,0,0,0,48,0,0,0,49,0,0,0,0,0,0,0,88,2,0,0,36,0,0,0,50,0,0,0,51,0,0,0,39,0,0,0,40,0,0,0,41,0,0,0,52,0,0,0,43,0,0,0,44,0,0,0,53,0,0,0,54,0,0,0,55,0,0,0,56,0,0,0,57,0,0,0,0,0,0,0,104,2,0,0,58,0,0,0,59,0,0,0,60,0,0,0,61,0,0,0,62,0,0,0,63,0,0,0,64,0,0,0,65,0,0,0,66,0,0,0,67,0,0,0,68,0,0,0,69,0,0,0,70,0,0,0,71,0,0,0,0,0,0,0,120,2,0,0,58,0,0,0,72,0,0,0,73,0,0,0,61,0,0,0,62,0,0,0,63,0,0,0,74,0,0,0,65,0,0,0,66,0,0,0,75,0,0,0,76,0,0,0,77,0,0,0,78,0,0,0,79,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,5,0,0,0,7,0,0,0,11,0,0,0,13,0,0,0,17,0,0,0,19,0,0,0,23,0,0,0,29,0,0,0,31,0,0,0,37,0,0,0,41,0,0,0,43,0,0,0,47,0,0,0,53,0,0,0,59,0,0,0,61,0,0,0,67,0,0,0,71,0,0,0,73,0,0,0,79,0,0,0,83,0,0,0,89,0,0,0,97,0,0,0,101,0,0,0,103,0,0,0,107,0,0,0,109,0,0,0,113,0,0,0,127,0,0,0,131,0,0,0,137,0,0,0,139,0,0,0,149,0,0,0,151,0,0,0,157,0,0,0,163,0,0,0,167,0,0,0,173,0,0,0,179,0,0,0,181,0,0,0,191,0,0,0,193,0,0,0,197,0,0,0,199,0,0,0,211,0,0,0,1,0,0,0,11,0,0,0,13,0,0,0,17,0,0,0,19,0,0,0,23,0,0,0,29,0,0,0,31,0,0,0,37,0,0,0,41,0,0,0,43,0,0,0,47,0,0,0,53,0,0,0,59,0,0,0,61,0,0,0,67,0,0,0,71,0,0,0,73,0,0,0,79,0,0,0,83,0,0,0,89,0,0,0,97,0,0,0,101,0,0,0,103,0,0,0,107,0,0,0,109,0,0,0,113,0,0,0,121,0,0,0,127,0,0,0,131,0,0,0,137,0,0,0,139,0,0,0,143,0,0,0,149,0,0,0,151,0,0,0,157,0,0,0,163,0,0,0,167,0,0,0,169,0,0,0,173,0,0,0,179,0,0,0,181,0,0,0,187,0,0,0,191,0,0,0,193,0,0,0,197,0,0,0,199,0,0,0,209,0,0,0,0,0,0,0,192,2,0,0,58,0,0,0,80,0,0,0,81,0,0,0,61,0,0,0,62,0,0,0,63,0,0,0,74,0,0,0,65,0,0,0,66,0,0,0,67,0,0,0,68,0,0,0,69,0,0,0,78,0,0,0,79,0,0,0,0,0,0,0,200,2,0,0,36,0,0,0,82,0,0,0,83,0,0,0,39,0,0,0,40,0,0,0,41,0,0,0,52,0,0,0,43,0,0,0,44,0,0,0,45,0,0,0,46,0,0,0,47,0,0,0,56,0,0,0,57,0,0,0,8,0,0,0,0,0,0,0,208,2,0,0,84,0,0,0,85,0,0,0,248,255,255,255,248,255,255,255,208,2,0,0,86,0,0,0,87,0,0,0,8,0,0,0,0,0,0,0,232,2,0,0,88,0,0,0,89,0,0,0,248,255,255,255,248,255,255,255,232,2,0,0,90,0,0,0,91,0,0,0,4,0,0,0,0,0,0,0,0,3,0,0,92,0,0,0,93,0,0,0,252,255,255,255,252,255,255,255,0,3,0,0,94,0,0,0,95,0,0,0,4,0,0,0,0,0,0,0,24,3,0,0,96,0,0,0,97,0,0,0,252,255,255,255,252,255,255,255,24,3,0,0,98,0,0,0,99,0,0,0,0,0,0,0,136,2,0,0,100,0,0,0,101,0,0,0,7,0,0,0,0,0,0,0,152,2,0,0,102,0,0,0,103,0,0,0,0,0,0,0,48,3,0,0,104,0,0,0,105,0,0,0,106,0,0,0,107,0,0,0,108,0,0,0,109,0,0,0,110,0,0,0,0,0,0,0,0,0,0,0,40,4,0,0,111,0,0,0,112,0,0,0,113,0,0,0,114,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,4,0,0,117,0,0,0,118,0,0,0,113,0,0,0,119,0,0,0,120,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,4,0,0,122,0,0,0,123,0,0,0,113,0,0,0,124,0,0,0,125,0,0,0,126,0,0,0,127,0,0,0,128,0,0,0,129,0,0,0,130,0,0,0,131,0,0,0,132,0,0,0,133,0,0,0,134,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,4,0,0,135,0,0,0,136,0,0,0,113,0,0,0,137,0,0,0,138,0,0,0,139,0,0,0,140,0,0,0,141,0,0,0,142,0,0,0,143,0,0,0,144,0,0,0,145,0,0,0,146,0,0,0,147,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,4,0,0,148,0,0,0,149,0,0,0,113,0,0,0,150,0,0,0,151,0,0,0,152,0,0,0,153,0,0,0,154,0,0,0,155,0,0,0,156,0,0,0,157,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,4,0,0,158,0,0,0,159,0,0,0,113,0,0,0,160,0,0,0,161,0,0,0,162,0,0,0,163,0,0,0,164,0,0,0,165,0,0,0,166,0,0,0,167,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,5,0,0,168,0,0,0,169,0,0,0,113,0,0,0,170,0,0,0,171,0,0,0,172,0,0,0,173,0,0,0,174,0,0,0,175,0,0,0,176,0,0,0,248,255,255,255,8,5,0,0,177,0,0,0,178,0,0,0,179,0,0,0,180,0,0,0,181,0,0,0,182,0,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,5,0,0,184,0,0,0,185,0,0,0,113,0,0,0,186,0,0,0,187,0,0,0,188,0,0,0,189,0,0,0,190,0,0,0,191,0,0,0,192,0,0,0,248,255,255,255,48,5,0,0,193,0,0,0,194,0,0,0,195,0,0,0,196,0,0,0,197,0,0,0,198,0,0,0,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,5,0,0,200,0,0,0,201,0,0,0,113,0,0,0,202,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,5,0,0,203,0,0,0,204,0,0,0,113,0,0,0,205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,5,0,0,206,0,0,0,207,0,0,0,113,0,0,0,208,0,0,0,209,0,0,0,210,0,0,0,211,0,0,0,212,0,0,0,213,0,0,0,214,0,0,0,215,0,0,0,216,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,5,0,0,217,0,0,0,218,0,0,0,113,0,0,0,219,0,0,0,220,0,0,0,221,0,0,0,222,0,0,0,223,0,0,0,224,0,0,0,225,0,0,0,226,0,0,0,227,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,5,0,0,228,0,0,0,229,0,0,0,113,0,0,0,230,0,0,0,231,0,0,0,232,0,0,0,233,0,0,0,234,0,0,0,235,0,0,0,236,0,0,0,237,0,0,0,238,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,5,0,0,239,0,0,0,240,0,0,0,113,0,0,0,241,0,0,0,242,0,0,0,243,0,0,0,244,0,0,0,245,0,0,0,246,0,0,0,247,0,0,0,248,0,0,0,249,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,6,0,0,250,0,0,0,251,0,0,0,113,0,0,0,252,0,0,0,253,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,6,0,0,254,0,0,0,255,0,0,0,113,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,6,0,0,2,1,0,0,3,1,0,0,113,0,0,0,4,1,0,0,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,6,0,0,6,1,0,0,7,1,0,0,113,0,0,0,8,1,0,0,9,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,6,0,0,10,1,0,0,11,1,0,0,113,0,0,0,12,1,0,0,13,1,0,0,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,6,0,0,15,1,0,0,16,1,0,0,113,0,0,0,17,1,0,0,18,1,0,0,19,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,4,0,0,20,1,0,0,21,1,0,0,113,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,4,0,0,22,1,0,0,23,1,0,0,113,0,0,0,24,1,0,0,25,1,0,0,26,1,0,0,27,1,0,0,28,1,0,0,29,1,0,0,30,1,0,0,31,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,3,0,0,32,1,0,0,33,1,0,0,113,0,0,0,34,1,0,0,35,1,0,0,36,1,0,0,37,1,0,0,38,1,0,0,39,1,0,0,40,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,4,0,0,41,1,0,0,42,1,0,0,113,0,0,0,43,1,0,0,44,1,0,0,45,1,0,0,46,1,0,0,47,1,0,0,0,0,0,0,120,4,0,0,48,1,0,0,49,1,0,0,113,0,0,0,50,1,0,0,51,1,0,0,52,1,0,0,53,1,0,0,54,1,0,0,0,0,0,0,72,3,0,0,55,1,0,0,56,1,0,0,113,0,0,0,0,0,0,0,88,3,0,0,55,1,0,0,57,1,0,0,113,0,0,0,58,1,0,0,59,1,0,0,60,1,0,0,61,1,0,0,62,1,0,0,63,1,0,0,64,1,0,0,65,1,0,0,66,1,0,0,67,1,0,0,68,1,0,0,69,1,0,0,0,0,0,0,120,3,0,0,55,1,0,0,70,1,0,0,113,0,0,0,71,1,0,0,72,1,0,0,73,1,0,0,74,1,0,0,75,1,0,0,76,1,0,0,77,1,0,0,0,0,0,0,152,3,0,0,55,1,0,0,78,1,0,0,113,0,0,0,79,1,0,0,80,1,0,0,81,1,0,0,82,1,0,0,83,1,0,0,84,1,0,0,85,1,0,0,0,0,0,0,184,3,0,0,55,1,0,0,86,1,0,0,113,0,0,0,87,1,0,0,88,1,0,0,89,1,0,0,90,1,0,0,91,1,0,0,92,1,0,0,93,1,0,0,0,0,0,0,216,3,0,0,55,1,0,0,94,1,0,0,113,0,0,0,87,1,0,0,88,1,0,0,89,1,0,0,90,1,0,0,91,1,0,0,92,1,0,0,93,1,0,0,0,0,0,0,232,3,0,0,55,1,0,0,95,1,0,0,113,0,0,0,87,1,0,0,88,1,0,0,89,1,0,0,90,1,0,0,91,1,0,0,92,1,0,0,93,1,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,10,0,0,96,1,0,0,97,1,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,3,32,2,32,2,32,2,32,2,32,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,1,96,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,8,216,8,216,8,216,8,216,8,216,8,216,8,216,8,216,8,216,8,216,4,192,4,192,4,192,4,192,4,192,4,192,4,192,8,213,8,213,8,213,8,213,8,213,8,213,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,4,192,4,192,4,192,4,192,4,192,4,192,8,214,8,214,8,214,8,214,8,214,8,214,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,4,192,4,192,4,192,4,192,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,118,101,114,97,103,101,32,116,105,109,101,32,101,108,97,112,115,101,100,32,111,118,101,114,32,0,32,105,110,115,116,97,110,116,105,97,116,105,111,110,115,32,111,102,32,75,114,121,112,116,110,111,115,116,105,99,67,108,105,101,110,116,58,32,0,32,115,101,99,0,75,114,121,112,116,110,111,115,116,105,99,67,108,105,101,110,116,32,116,101,115,116,115,0,47,100,101,118,47,117,114,97,110,100,111,109,0,114,98,0,115,116,100,58,58,98,97,115,105,99,95,115,116,114,105,110,103,60,117,110,115,105,103,110,101,100,32,99,104,97,114,62,0,115,116,100,58,58,119,115,116,114,105,110,103,0,101,109,115,99,114,105,112,116,101,110,58,58,118,97,108,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,99,104,97,114,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,115,105,103,110,101,100,32,99,104,97,114,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,110,115,105,103,110,101,100,32,99,104,97,114,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,115,104,111,114,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,110,115,105,103,110,101,100,32,115,104,111,114,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,105,110,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,110,115,105,103,110,101,100,32,105,110,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,108,111,110,103,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,110,115,105,103,110,101,100,32,108,111,110,103,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,105,110,116,56,95,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,105,110,116,56,95,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,105,110,116,49,54,95,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,105,110,116,49,54,95,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,105,110,116,51,50,95,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,105,110,116,51,50,95,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,102,108,111,97,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,100,111,117,98,108,101,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,108,111,110,103,32,100,111,117,98,108,101,62,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,101,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,100,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,102,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,109,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,108,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,106,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,105,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,116,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,115,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,104,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,97,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,99,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,51,118,97,108,69,0,78,83,116,51,95,95,49,49,50,98,97,115,105,99,95,115,116,114,105,110,103,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,119,69,69,69,69,0,78,83,116,51,95,95,49,50,49,95,95,98,97,115,105,99,95,115,116,114,105,110,103,95,99,111,109,109,111,110,73,76,98,49,69,69,69,0,78,83,116,51,95,95,49,49,50,98,97,115,105,99,95,115,116,114,105,110,103,73,104,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,104,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,104,69,69,69,69,0,78,83,116,51,95,95,49,49,50,98,97,115,105,99,95,115,116,114,105,110,103,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,83,116,57,101,120,99,101,112,116,105,111,110,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,83,116,49,52,111,118,101,114,102,108,111,119,95,101,114,114,111,114,0,83,116,57,116,121,112,101,95,105,110,102,111,0,83,116,56,98,97,100,95,99,97,115,116,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,51,95,95,102,117,110,100,97,109,101,110,116,97,108,95,116,121,112,101,95,105,110,102,111,69,0,118,0,98,0,99,0,104,0,97,0,115,0,116,0,105,0,106,0,109,0,102,0,100,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,112,116,104,114,101,97,100,95,111,110,99,101,32,102,97,105,108,117,114,101,32,105,110,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,95,102,97,115,116,40,41,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,114,101,116,117,114,110,101,100,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,116,104,114,101,119,32,97,110,32,101,120,99,101,112,116,105,111,110,0,115,116,100,58,58,98,97,100,95,99,97,115,116,0,99,97,110,110,111,116,32,99,114,101,97,116,101,32,112,116,104,114,101,97,100,32,107,101,121,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,99,97,110,110,111,116,32,122,101,114,111,32,111,117,116,32,116,104,114,101,97,100,32,118,97,108,117,101,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,33,34,98,97,115,105,99,95,115,116,114,105,110,103,32,108,101,110,103,116,104,95,101,114,114,111,114,34,0,47,85,115,101,114,115,47,114,111,98,105,110,122,49,54,47,68,111,99,117,109,101,110,116,115,47,101,109,115,100,107,95,112,111,114,116,97,98,108,101,47,101,109,115,99,114,105,112,116,101,110,47,116,97,103,45,49,46,51,52,46,52,47,115,121,115,116,101,109,47,105,110,99,108,117,100,101,47,108,105,98,99,120,120,47,115,116,114,105,110,103,0,95,95,116,104,114,111,119,95,108,101,110,103,116,104,95,101,114,114,111,114,0,32,40,0,41,0,95,98,108,111,99,107,95,105,110,118,111,107,101,0,105,110,118,111,99,97,116,105,111,110,32,102,117,110,99,116,105,111,110,32,102,111,114,32,98,108,111,99,107,32,105,110,32,0,32,99,111,110,115,116,0,32,118,111,108,97,116,105,108,101,0,32,114,101,115,116,114,105,99,116,0,32,91,0,32,91,93,0,93,0,32,99,111,109,112,108,101,120,0,40,0,44,32,0,32,38,0,32,38,38,0,32,0,32,105,109,97,103,105,110,97,114,121,0,58,58,42,0,38,38,0,111,98,106,99,95,111,98,106,101,99,116,60,0,42,0,105,100,0,38,0,111,98,106,99,112,114,111,116,111,0,60,0,62,0,32,118,101,99,116,111,114,91,0,112,105,120,101,108,32,118,101,99,116,111,114,91,0,100,101,99,108,116,121,112,101,40,0,115,116,100,58,58,97,108,108,111,99,97,116,111,114,0,115,116,100,58,58,98,97,115,105,99,95,115,116,114,105,110,103,0,115,116,100,58,58,115,116,114,105,110,103,0,115,116,100,58,58,105,115,116,114,101,97,109,0,115,116,100,58,58,111,115,116,114,101,97,109,0,115,116,100,58,58,105,111,115,116,114,101,97,109,0,115,116,100,0,58,58,0,58,58,115,116,114,105,110,103,32,108,105,116,101,114,97,108,0,115,116,100,58,58,0,126,0,39,117,110,110,97,109,101,100,0,39,108,97,109,98,100,97,39,40,0,111,112,101,114,97,116,111,114,38,38,0,111,112,101,114,97,116,111,114,38,0,111,112,101,114,97,116,111,114,38,61,0,111,112,101,114,97,116,111,114,61,0,111,112,101,114,97,116,111,114,40,41,0,111,112,101,114,97,116,111,114,44,0,111,112,101,114,97,116,111,114,126,0,111,112,101,114,97,116,111,114,32,0,111,112,101,114,97,116,111,114,32,100,101,108,101,116,101,91,93,0,111,112,101,114,97,116,111,114,42,0,111,112,101,114,97,116,111,114,32,100,101,108,101,116,101,0,111,112,101,114,97,116,111,114,47,0,111,112,101,114,97,116,111,114,47,61,0,111,112,101,114,97,116,111,114,94,0,111,112,101,114,97,116,111,114,94,61,0,111,112,101,114,97,116,111,114,61,61,0,111,112,101,114,97,116,111,114,62,61,0,111,112,101,114,97,116,111,114,62,0,111,112,101,114,97,116,111,114,91,93,0,111,112,101,114,97,116,111,114,60,61,0,111,112,101,114,97,116,111,114,34,34,32,0,111,112,101,114,97,116,111,114,60,60,0,111,112,101,114,97,116,111,114,60,60,61,0,111,112,101,114,97,116,111,114,60,0,111,112,101,114,97,116,111,114,45,0,111,112,101,114,97,116,111,114,45,61,0,111,112,101,114,97,116,111,114,42,61,0,111,112,101,114,97,116,111,114,45,45,0,111,112,101,114,97,116,111,114,32,110,101,119,91,93,0,111,112,101,114,97,116,111,114,33,61,0,111,112,101,114,97,116,111,114,33,0,111,112,101,114,97,116,111,114,32,110,101,119,0,111,112,101,114,97,116,111,114,124,124,0,111,112,101,114,97,116,111,114,124,0,111,112,101,114,97,116,111,114,124,61,0,111,112,101,114,97,116,111,114,45,62,42,0,111,112,101,114,97,116,111,114,43,0,111,112,101,114,97,116,111,114,43,61,0,111,112,101,114,97,116,111,114,43,43,0,111,112,101,114,97,116,111,114,45,62,0,111,112,101,114,97,116,111,114,63,0,111,112,101,114,97,116,111,114,37,0,111,112,101,114,97,116,111,114,37,61,0,111,112,101,114,97,116,111,114,62,62,0,111,112,101,114,97,116,111,114,62,62,61,0,115,116,100,58,58,98,97,115,105,99,95,115,116,114,105,110,103,60,99,104,97,114,44,32,115,116,100,58,58,99,104,97,114,95,116,114,97,105,116,115,60,99,104,97,114,62,44,32,115,116,100,58,58,97,108,108,111,99,97,116,111,114,60,99,104,97,114,62,32,62,0,98,97,115,105,99,95,115,116,114,105,110,103,0,115,116,100,58,58,98,97,115,105,99,95,105,115,116,114,101,97,109,60,99,104,97,114,44,32,115,116,100,58,58,99,104,97,114,95,116,114,97,105,116,115,60,99,104,97,114,62,32,62,0,98,97,115,105,99,95,105,115,116,114,101,97,109,0,115,116,100,58,58,98,97,115,105,99,95,111,115,116,114,101,97,109,60,99,104,97,114,44,32,115,116,100,58,58,99,104,97,114,95,116,114,97,105,116,115,60,99,104,97,114,62,32,62,0,98,97,115,105,99,95,111,115,116,114,101,97,109,0,115,116,100,58,58,98,97,115,105,99,95,105,111,115,116,114,101,97,109,60,99,104,97,114,44,32,115,116,100,58,58,99,104,97,114,95,116,114,97,105,116,115,60,99,104,97,114,62,32,62,0,98,97,115,105,99,95,105,111,115,116,114,101,97,109,0,95,71,76,79,66,65,76,95,95,78,0,40,97,110,111,110,121,109,111,117,115,32,110,97,109,101,115,112,97,99,101,41,0,32,62,0,119,99,104,97,114,95,116,0,99,104,97,114,0,115,105,103,110,101,100,32,99,104,97,114,0,117,110,115,105,103,110,101,100,32,99,104,97,114,0,115,104,111,114,116,0,117,110,115,105,103,110,101,100,32,115,104,111,114,116,0,117,0,117,108,0,117,108,108,0,95,95,105,110,116,49,50,56,0,117,110,115,105,103,110,101,100,32,95,95,105,110,116,49,50,56,0,37,97,102,0,37,97,0,37,76,97,76,0,38,61,0,61,0,97,108,105,103,110,111,102,32,40,0,99,111,110,115,116,95,99,97,115,116,60,0,62,40,0,44,0,41,40,0,100,101,108,101,116,101,91,93,32,0,100,121,110,97,109,105,99,95,99,97,115,116,60,0,100,101,108,101,116,101,32,0,46,42,0,47,0,47,61,0,94,0,94,61,0,61,61,0,62,61,0,41,91,0,60,61,0,60,60,0,60,60,61,0,45,0,45,61,0,42,61,0,45,45,0,41,45,45,0,91,93,32,0,41,32,0,33,61,0,33,0,110,111,101,120,99,101,112,116,32,40,0,124,124,0,124,0,124,61,0,45,62,42,0,43,0,43,61,0,43,43,0,41,43,43,0,45,62,0,41,32,63,32,40,0,41,32,58,32,40,0,114,101,105,110,116,101,114,112,114,101,116,95,99,97,115,116,60,0,37,0,37,61,0,62,62,0,62,62,61,0,115,116,97,116,105,99,95,99,97,115,116,60,0,115,105,122,101,111,102,32,40,0,115,105,122,101,111,102,46,46,46,40,0,116,121,112,101,105,100,40,0,116,104,114,111,119,0,116,104,114,111,119,32,0,102,112,0,33,34,98,97,115,105,99,95,115,116,114,105,110,103,32,111,117,116,95,111,102,95,114,97,110,103,101,34,0,95,95,116,104,114,111,119,95,111,117,116,95,111,102,95,114,97,110,103,101,0,118,111,105,100,0,98], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+8280);
/* memory initializer */ allocate([111,111,108,0,105,110,116,0,117,110,115,105,103,110,101,100,32,105,110,116,0,108,111,110,103,0,117,110,115,105,103,110,101,100,32,108,111,110,103,0,108,111,110,103,32,108,111,110,103,0,117,110,115,105,103,110,101,100,32,108,111,110,103,32,108,111,110,103,0,102,108,111,97,116,0,100,111,117,98,108,101,0,108,111,110,103,32,100,111,117,98,108,101,0,95,95,102,108,111,97,116,49,50,56,0,46,46,46,0,100,101,99,105,109,97,108,54,52,0,100,101,99,105,109,97,108,49,50,56,0,100,101,99,105,109,97,108,51,50,0,100,101,99,105,109,97,108,49,54,0,99,104,97,114,51,50,95,116,0,99,104,97,114,49,54,95,116,0,97,117,116,111,0,115,116,100,58,58,110,117,108,108,112,116,114,95,116,0,33,34,118,101,99,116,111,114,32,108,101,110,103,116,104,95,101,114,114,111,114,34,0,47,85,115,101,114,115,47,114,111,98,105,110,122,49,54,47,68,111,99,117,109,101,110,116,115,47,101,109,115,100,107,95,112,111,114,116,97,98,108,101,47,101,109,115,99,114,105,112,116,101,110,47,116,97,103,45,49,46,51,52,46,52,47,115,121,115,116,101,109,47,105,110,99,108,117,100,101,47,108,105,98,99,120,120,47,118,101,99,116,111,114,0,118,116,97,98,108,101,32,102,111,114,32,0,86,84,84,32,102,111,114,32,0,116,121,112,101,105,110,102,111,32,102,111,114,32,0,116,121,112,101,105,110,102,111,32,110,97,109,101,32,102,111,114,32,0,99,111,118,97,114,105,97,110,116,32,114,101,116,117,114,110,32,116,104,117,110,107,32,116,111,32,0,99,111,110,115,116,114,117,99,116,105,111,110,32,118,116,97,98,108,101,32,102,111,114,32,0,45,105,110,45,0,118,105,114,116,117,97,108,32,116,104,117,110,107,32,116,111,32,0,110,111,110,45,118,105,114,116,117,97,108,32,116,104,117,110,107,32,116,111,32,0,103,117,97,114,100,32,118,97,114,105,97,98,108,101,32,102,111,114,32,0,114,101,102,101,114,101,110,99,101,32,116,101,109,112,111,114,97,114,121,32,102,111,114,32,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,58,32,37,115,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,102,111,114,101,105,103,110,32,101,120,99,101,112,116,105,111,110,0,116,101,114,109,105,110,97,116,105,110,103,0,117,110,99,97,117,103,104,116,0,84,33,34,25,13,1,2,3,17,75,28,12,16,4,11,29,18,30,39,104,110,111,112,113,98,32,5,6,15,19,20,21,26,8,22,7,40,36,23,24,9,10,14,27,31,37,35,131,130,125,38,42,43,60,61,62,63,67,71,74,77,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,105,106,107,108,114,115,116,121,122,123,124,0,73,108,108,101,103,97,108,32,98,121,116,101,32,115,101,113,117,101,110,99,101,0,68,111,109,97,105,110,32,101,114,114,111,114,0,82,101,115,117,108,116,32,110,111,116,32,114,101,112,114,101,115,101,110,116,97,98,108,101,0,78,111,116,32,97,32,116,116,121,0,80,101,114,109,105,115,115,105,111,110,32,100,101,110,105,101,100,0,79,112,101,114,97,116,105,111,110,32,110,111,116,32,112,101,114,109,105,116,116,101,100,0,78,111,32,115,117,99,104,32,102,105,108,101,32,111,114,32,100,105,114,101,99,116,111,114,121,0,78,111,32,115,117,99,104,32,112,114,111,99,101,115,115,0,70,105,108,101,32,101,120,105,115,116,115,0,86,97,108,117,101,32,116,111,111,32,108,97,114,103,101,32,102,111,114,32,100,97,116,97,32,116,121,112,101,0,78,111,32,115,112,97,99,101,32,108,101,102,116,32,111,110,32,100,101,118,105,99,101,0,79,117,116,32,111,102,32,109,101,109,111,114,121,0,82,101,115,111,117,114,99,101,32,98,117,115,121,0,73,110,116,101,114,114,117,112,116,101,100,32,115,121,115,116,101,109,32,99,97,108,108,0,82,101,115,111,117,114,99,101,32,116,101,109,112,111,114,97,114,105,108,121,32,117,110,97,118,97,105,108,97,98,108,101,0,73,110,118,97,108,105,100,32,115,101,101,107,0,67,114,111,115,115,45,100,101,118,105,99,101,32,108,105,110,107,0,82,101,97,100,45,111,110,108,121,32,102,105,108,101,32,115,121,115,116,101,109,0,68,105,114,101,99,116,111,114,121,32,110,111,116,32,101,109,112,116,121,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,112,101,101,114,0,79,112,101,114,97,116,105,111,110,32,116,105,109,101,100,32,111,117,116,0,67,111,110,110,101,99,116,105,111,110,32,114,101,102,117,115,101,100,0,72,111,115,116,32,105,115,32,100,111,119,110,0,72,111,115,116,32,105,115,32,117,110,114,101,97,99,104,97,98,108,101,0,65,100,100,114,101,115,115,32,105,110,32,117,115,101,0,66,114,111,107,101,110,32,112,105,112,101,0,73,47,79,32,101,114,114,111,114,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,32,111,114,32,97,100,100,114,101,115,115,0,66,108,111,99,107,32,100,101,118,105,99,101,32,114,101,113,117,105,114,101,100,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,0,78,111,116,32,97,32,100,105,114,101,99,116,111,114,121,0,73,115,32,97,32,100,105,114,101,99,116,111,114,121,0,84,101,120,116,32,102,105,108,101,32,98,117,115,121,0,69,120,101,99,32,102,111,114,109,97,116,32,101,114,114,111,114,0,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,0,65,114,103,117,109,101,110,116,32,108,105,115,116,32,116,111,111,32,108,111,110,103,0,83,121,109,98,111,108,105,99,32,108,105,110,107,32,108,111,111,112,0,70,105,108,101,110,97,109,101,32,116,111,111,32,108,111,110,103,0,84,111,111,32,109,97,110,121,32,111,112,101,110,32,102,105,108,101,115,32,105,110,32,115,121,115,116,101,109,0,78,111,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,115,32,97,118,97,105,108,97,98,108,101,0,66,97,100,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,0,78,111,32,99,104,105,108,100,32,112,114,111,99,101,115,115,0,66,97,100,32,97,100,100,114,101,115,115,0,70,105,108,101,32,116,111,111,32,108,97,114,103,101,0,84,111,111,32,109,97,110,121,32,108,105,110,107,115,0,78,111,32,108,111,99,107,115,32,97,118,97,105,108,97,98,108,101,0,82,101,115,111,117,114,99,101,32,100,101,97,100,108,111,99,107,32,119,111,117,108,100,32,111,99,99,117,114,0,83,116,97,116,101,32,110,111,116,32,114,101,99,111,118,101,114,97,98,108,101,0,80,114,101,118,105,111,117,115,32,111,119,110,101,114,32,100,105,101,100,0,79,112,101,114,97,116,105,111,110,32,99,97,110,99,101,108,101,100,0,70,117,110,99,116,105,111,110,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,78,111,32,109,101,115,115,97,103,101,32,111,102,32,100,101,115,105,114,101,100,32,116,121,112,101,0,73,100,101,110,116,105,102,105,101,114,32,114,101,109,111,118,101,100,0,68,101,118,105,99,101,32,110,111,116,32,97,32,115,116,114,101,97,109,0,78,111,32,100,97,116,97,32,97,118,97,105,108,97,98,108,101,0,68,101,118,105,99,101,32,116,105,109,101,111,117,116,0,79,117,116,32,111,102,32,115,116,114,101,97,109,115,32,114,101,115,111,117,114,99,101,115,0,76,105,110,107,32,104,97,115,32,98,101,101,110,32,115,101,118,101,114,101,100,0,80,114,111,116,111,99,111,108,32,101,114,114,111,114,0,66,97,100,32,109,101,115,115,97,103,101,0,70,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,105,110,32,98,97,100,32,115,116,97,116,101,0,78,111,116,32,97,32,115,111,99,107,101,116,0,68,101,115,116,105,110,97,116,105,111,110,32,97,100,100,114,101,115,115,32,114,101,113,117,105,114,101,100,0,77,101,115,115,97,103,101,32,116,111,111,32,108,97,114,103,101,0,80,114,111,116,111,99,111,108,32,119,114,111,110,103,32,116,121,112,101,32,102,111,114,32,115,111,99,107,101,116,0,80,114,111,116,111,99,111,108,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,80,114,111,116,111,99,111,108,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,83,111,99,107,101,116,32,116,121,112,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,78,111,116,32,115,117,112,112,111,114,116,101,100,0,80,114,111,116,111,99,111,108,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,65,100,100,114,101,115,115,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,98,121,32,112,114,111,116,111,99,111,108,0,65,100,100,114,101,115,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,78,101,116,119,111,114,107,32,105,115,32,100,111,119,110,0,78,101,116,119,111,114,107,32,117,110,114,101,97,99,104,97,98,108,101,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,110,101,116,119,111,114,107,0,67,111,110,110,101,99,116,105,111,110,32,97,98,111,114,116,101,100,0,78,111,32,98,117,102,102,101,114,32,115,112,97,99,101,32,97,118,97,105,108,97,98,108,101,0,83,111,99,107,101,116,32,105,115,32,99,111,110,110,101,99,116,101,100,0,83,111,99,107,101,116,32,110,111,116,32,99,111,110,110,101,99,116,101,100,0,67,97,110,110,111,116,32,115,101,110,100,32,97,102,116,101,114,32,115,111,99,107,101,116,32,115,104,117,116,100,111,119,110,0,79,112,101,114,97,116,105,111,110,32,97,108,114,101,97,100,121,32,105,110,32,112,114,111,103,114,101,115,115,0,79,112,101,114,97,116,105,111,110,32,105,110,32,112,114,111,103,114,101,115,115,0,83,116,97,108,101,32,102,105,108,101,32,104,97,110,100,108,101,0,82,101,109,111,116,101,32,73,47,79,32,101,114,114,111,114,0,81,117,111,116,97,32,101,120,99,101,101,100,101,100,0,78,111,32,109,101,100,105,117,109,32,102,111,117,110,100,0,87,114,111,110,103,32,109,101,100,105,117,109,32,116,121,112,101,0,78,111,32,101,114,114,111,114,32,105,110,102,111,114,109,97,116,105,111,110,0,0,105,110,102,105,110,105,116,121,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,3,4,5,6,7,8,9,255,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,4,7,3,6,5,0,80,79,83,73,88,0,114,119,97], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+18520);
/* memory initializer */ allocate([17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,45,43,32,32,32,48,88,48,120,0,40,110,117,108,108,41,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,105,110,102,0,73,78,70,0,110,97,110,0,78,65,78,0,46,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,119,69,69,0,117,110,115,117,112,112,111,114,116,101,100,32,108,111,99,97,108,101,32,102,111,114,32,115,116,97,110,100,97,114,100,32,105,110,112,117,116,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,119,69,69,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,99,69,69,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,99,69,69,0,95,95,110,101,120,116,95,112,114,105,109,101,32,111,118,101,114,102,108,111,119,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,55,102,97,105,108,117,114,101,69,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,78,83,116,51,95,95,49,49,57,95,95,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,69,0,105,111,115,95,98,97,115,101,58,58,99,108,101,97,114,0,105,111,115,116,114,101,97,109,0,117,110,115,112,101,99,105,102,105,101,100,32,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,37,112,0,67,0,37,0,0,0,0,0,108,0,108,108,0,0,76,0,37,112,0,0,0,0,37,72,58,37,77,58,37,83,37,109,47,37,100,47,37,121,37,89,45,37,109,45,37,100,37,73,58,37,77,58,37,83,32,37,112,37,72,58,37,77,37,72,58,37,77,58,37,83,108,111,99,97,108,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,48,49,50,51,52,53,54,55,56,57,0,37,76,102,0,109,111,110,101,121,95,103,101,116,32,101,114,114,111,114,0,48,49,50,51,52,53,54,55,56,57,0,37,46,48,76,102,0,116,114,117,101,0,102,97,108,115,101,0,83,117,110,100,97,121,0,77,111,110,100,97,121,0,84,117,101,115,100,97,121,0,87,101,100,110,101,115,100,97,121,0,84,104,117,114,115,100,97,121,0,70,114,105,100,97,121,0,83,97,116,117,114,100,97,121,0,83,117,110,0,77,111,110,0,84,117,101,0,87,101,100,0,84,104,117,0,70,114,105,0,83,97,116,0,74,97,110,117,97,114,121,0,70,101,98,114,117,97,114,121,0,77,97,114,99,104,0,65,112,114,105,108,0,77,97,121,0,74,117,110,101,0,74,117,108,121,0,65,117,103,117,115,116,0,83,101,112,116,101,109,98,101,114,0,79,99,116,111,98,101,114,0,78,111,118,101,109,98,101,114,0,68,101,99,101,109,98,101,114,0,74,97,110,0,70,101,98,0,77,97,114,0,65,112,114,0,74,117,110,0,74,117,108,0,65,117,103,0,83,101,112,0,79,99,116,0,78,111,118,0,68,101,99,0,65,77,0,80,77,0,37,109,47,37,100,47,37,121,0,37,72,58,37,77,58,37,83,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,37,73,58,37,77,58,37,83,32,37,112,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,78,83,116,51,95,95,49,49,50,115,121,115,116,101,109,95,101,114,114,111,114,69,0,78,83,116,51,95,95,49,49,52,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0,78,83,116,51,95,95,49,49,50,95,95,100,111,95,109,101,115,115,97,103,101,69,0,58,32,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+23413);





/* no memory initializer */
var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}


  
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }function ___cxa_atexit() {
  return _atexit.apply(null, arguments)
  }

   
  Module["_i64Subtract"] = _i64Subtract;

   
  Module["_i64Add"] = _i64Add;

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function (adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
        for (var ptr in EXCEPTIONS.infos) {
          var info = EXCEPTIONS.infos[ptr];
          if (info.adjusted === adjusted) {
            return ptr;
          }
        }
        return adjusted;
      },addRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      },decRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;
        if (info.refcount === 0) {
          if (info.destructor) {
            Runtime.dynCall('vi', info.destructor, [ptr]);
          }
          delete EXCEPTIONS.infos[ptr];
          ___cxa_free_exception(ptr);
        }
      },clearRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      }};
  function ___resumeException(ptr) {
      if (!EXCEPTIONS.last) { EXCEPTIONS.last = ptr; }
      EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr)); // exception refcount should be cleared, but don't free it
      throw ptr;
    }function ___cxa_find_matching_catch() {
      var thrown = EXCEPTIONS.last;
      if (!thrown) {
        // just pass through the null ptr
        return ((asm["setTempRet0"](0),0)|0);
      }
      var info = EXCEPTIONS.infos[thrown];
      var throwntype = info.type;
      if (!throwntype) {
        // just pass through the thrown ptr
        return ((asm["setTempRet0"](0),thrown)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);
  
      var pointer = Module['___cxa_is_pointer_type'](throwntype);
      // can_catch receives a **, add indirection
      if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
      HEAP32[((___cxa_find_matching_catch.buffer)>>2)]=thrown;
      thrown = ___cxa_find_matching_catch.buffer;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
          thrown = HEAP32[((thrown)>>2)]; // undo indirection
          info.adjusted = thrown;
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
        }
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      thrown = HEAP32[((thrown)>>2)]; // undo indirection
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      EXCEPTIONS.infos[ptr] = {
        ptr: ptr,
        adjusted: ptr,
        type: type,
        destructor: destructor,
        refcount: 0
      };
      EXCEPTIONS.last = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr;
    }

  
  function getShiftFromSize(size) {
      switch (size) {
          case 1: return 0;
          case 2: return 1;
          case 4: return 2;
          case 8: return 3;
          default:
              throw new TypeError('Unknown type size: ' + size);
      }
    }
  
  
  
  function embind_init_charCodes() {
      var codes = new Array(256);
      for (var i = 0; i < 256; ++i) {
          codes[i] = String.fromCharCode(i);
      }
      embind_charCodes = codes;
    }var embind_charCodes=undefined;function readLatin1String(ptr) {
      var ret = "";
      var c = ptr;
      while (HEAPU8[c]) {
          ret += embind_charCodes[HEAPU8[c++]];
      }
      return ret;
    }
  
  
  var awaitingDependencies={};
  
  var registeredTypes={};
  
  var typeDependencies={};
  
  
  
  
  
  
  var char_0=48;
  
  var char_9=57;function makeLegalFunctionName(name) {
      if (undefined === name) {
          return '_unknown';
      }
      name = name.replace(/[^a-zA-Z0-9_]/g, '$');
      var f = name.charCodeAt(0);
      if (f >= char_0 && f <= char_9) {
          return '_' + name;
      } else {
          return name;
      }
    }function createNamedFunction(name, body) {
      name = makeLegalFunctionName(name);
      /*jshint evil:true*/
      return new Function(
          "body",
          "return function " + name + "() {\n" +
          "    \"use strict\";" +
          "    return body.apply(this, arguments);\n" +
          "};\n"
      )(body);
    }function extendError(baseErrorType, errorName) {
      var errorClass = createNamedFunction(errorName, function(message) {
          this.name = errorName;
          this.message = message;
  
          var stack = (new Error(message)).stack;
          if (stack !== undefined) {
              this.stack = this.toString() + '\n' +
                  stack.replace(/^Error(:[^\n]*)?\n/, '');
          }
      });
      errorClass.prototype = Object.create(baseErrorType.prototype);
      errorClass.prototype.constructor = errorClass;
      errorClass.prototype.toString = function() {
          if (this.message === undefined) {
              return this.name;
          } else {
              return this.name + ': ' + this.message;
          }
      };
  
      return errorClass;
    }var BindingError=undefined;function throwBindingError(message) {
      throw new BindingError(message);
    }
  
  
  
  var InternalError=undefined;function throwInternalError(message) {
      throw new InternalError(message);
    }function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {
      myTypes.forEach(function(type) {
          typeDependencies[type] = dependentTypes;
      });
  
      function onComplete(typeConverters) {
          var myTypeConverters = getTypeConverters(typeConverters);
          if (myTypeConverters.length !== myTypes.length) {
              throwInternalError('Mismatched type converter count');
          }
          for (var i = 0; i < myTypes.length; ++i) {
              registerType(myTypes[i], myTypeConverters[i]);
          }
      }
  
      var typeConverters = new Array(dependentTypes.length);
      var unregisteredTypes = [];
      var registered = 0;
      dependentTypes.forEach(function(dt, i) {
          if (registeredTypes.hasOwnProperty(dt)) {
              typeConverters[i] = registeredTypes[dt];
          } else {
              unregisteredTypes.push(dt);
              if (!awaitingDependencies.hasOwnProperty(dt)) {
                  awaitingDependencies[dt] = [];
              }
              awaitingDependencies[dt].push(function() {
                  typeConverters[i] = registeredTypes[dt];
                  ++registered;
                  if (registered === unregisteredTypes.length) {
                      onComplete(typeConverters);
                  }
              });
          }
      });
      if (0 === unregisteredTypes.length) {
          onComplete(typeConverters);
      }
    }function registerType(rawType, registeredInstance, options) {
      options = options || {};
  
      if (!('argPackAdvance' in registeredInstance)) {
          throw new TypeError('registerType registeredInstance requires argPackAdvance');
      }
  
      var name = registeredInstance.name;
      if (!rawType) {
          throwBindingError('type "' + name + '" must have a positive integer typeid pointer');
      }
      if (registeredTypes.hasOwnProperty(rawType)) {
          if (options.ignoreDuplicateRegistrations) {
              return;
          } else {
              throwBindingError("Cannot register type '" + name + "' twice");
          }
      }
  
      registeredTypes[rawType] = registeredInstance;
      delete typeDependencies[rawType];
  
      if (awaitingDependencies.hasOwnProperty(rawType)) {
          var callbacks = awaitingDependencies[rawType];
          delete awaitingDependencies[rawType];
          callbacks.forEach(function(cb) {
              cb();
          });
      }
    }function __embind_register_bool(rawType, name, size, trueValue, falseValue) {
      var shift = getShiftFromSize(size);
  
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(wt) {
              // ambiguous emscripten ABI: sometimes return values are
              // true or false, and sometimes integers (0 or 1)
              return !!wt;
          },
          'toWireType': function(destructors, o) {
              return o ? trueValue : falseValue;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': function(pointer) {
              // TODO: if heap is fixed (like in asm.js) this could be executed outside
              var heap;
              if (size === 1) {
                  heap = HEAP8;
              } else if (size === 2) {
                  heap = HEAP16;
              } else if (size === 4) {
                  heap = HEAP32;
              } else {
                  throw new TypeError("Unknown boolean type size: " + name);
              }
              return this['fromWireType'](heap[pointer >> shift]);
          },
          destructorFunction: null, // This type does not need a destructor
      });
    }

  var _emscripten_landingpad=true;

  
  
  function _free() {
  }
  Module["_free"] = _free;function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr);
      } catch(e) { // XXX FIXME
        Module.printErr('exception during cxa_free_exception: ' + e);
      }
    }function ___cxa_end_catch() {
      if (___cxa_end_catch.rethrown) {
        ___cxa_end_catch.rethrown = false;
        return;
      }
      // Clear state flag.
      asm['setThrew'](0);
      // Call destructor if one is registered then clear it.
      var ptr = EXCEPTIONS.caught.pop();
      if (ptr) {
        EXCEPTIONS.decRef(EXCEPTIONS.deAdjust(ptr));
        EXCEPTIONS.last = 0; // XXX in decRef?
      }
    }

  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;
  
  function simpleReadValueFromPointer(pointer) {
      return this['fromWireType'](HEAPU32[pointer >> 2]);
    }function __embind_register_std_wstring(rawType, charSize, name) {
      // nb. do not cache HEAPU16 and HEAPU32, they may be destroyed by enlargeMemory().
      name = readLatin1String(name);
      var getHeap, shift;
      if (charSize === 2) {
          getHeap = function() { return HEAPU16; };
          shift = 1;
      } else if (charSize === 4) {
          getHeap = function() { return HEAPU32; };
          shift = 2;
      }
      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              var HEAP = getHeap();
              var length = HEAPU32[value >> 2];
              var a = new Array(length);
              var start = (value + 4) >> shift;
              for (var i = 0; i < length; ++i) {
                  a[i] = String.fromCharCode(HEAP[start + i]);
              }
              _free(value);
              return a.join('');
          },
          'toWireType': function(destructors, value) {
              // assumes 4-byte alignment
              var HEAP = getHeap();
              var length = value.length;
              var ptr = _malloc(4 + length * charSize);
              HEAPU32[ptr >> 2] = length;
              var start = (ptr + 4) >> shift;
              for (var i = 0; i < length; ++i) {
                  HEAP[start + i] = value.charCodeAt(i);
              }
              if (destructors !== null) {
                  destructors.push(_free, ptr);
              }
              return ptr;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: function(ptr) { _free(ptr); },
      });
    }

  
  function ___setErrNo(value) {
      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;
      else Module.printErr('failed to set errno from JS');
      return value;
    }
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 85: return totalMemory / PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 79:
          return 0;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: {
          if (typeof navigator === 'object') return navigator['hardwareConcurrency'] || 1;
          return 1;
        }
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  var _emscripten_postinvoke=true;

  
  var PTHREAD_SPECIFIC={};
  
  var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key, destructor) {
      if (key == 0) {
        return ERRNO_CODES.EINVAL;
      }
      HEAP32[((key)>>2)]=PTHREAD_SPECIFIC_NEXT_KEY;
      // values start at 0
      PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
      PTHREAD_SPECIFIC_NEXT_KEY++;
      return 0;
    }

  
  
  var emval_free_list=[];
  
  var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle) {
      if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {
          emval_handle_array[handle] = undefined;
          emval_free_list.push(handle);
      }
    }
  
  
  
  function count_emval_handles() {
      var count = 0;
      for (var i = 5; i < emval_handle_array.length; ++i) {
          if (emval_handle_array[i] !== undefined) {
              ++count;
          }
      }
      return count;
    }
  
  function get_first_emval() {
      for (var i = 5; i < emval_handle_array.length; ++i) {
          if (emval_handle_array[i] !== undefined) {
              return emval_handle_array[i];
          }
      }
      return null;
    }function init_emval() {
      Module['count_emval_handles'] = count_emval_handles;
      Module['get_first_emval'] = get_first_emval;
    }function __emval_register(value) {
  
      switch(value){
        case undefined :{ return 1; }
        case null :{ return 2; }
        case true :{ return 3; }
        case false :{ return 4; }
        default:{
          var handle = emval_free_list.length ?
              emval_free_list.pop() :
              emval_handle_array.length;
  
          emval_handle_array[handle] = {refcount: 1, value: value};
          return handle;
          }
        }
    }function __embind_register_emval(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(handle) {
              var rv = emval_handle_array[handle].value;
              __emval_decref(handle);
              return rv;
          },
          'toWireType': function(destructors, value) {
              return __emval_register(value);
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: null, // This type does not need a destructor
  
          // TODO: do we need a deleteObject here?  write a test where
          // emval is passed into JS via an interface
      });
    }

  
  
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            return ''; // an invalid portion invalidates the whole thing
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          stream.tty.ops.flush(stream.tty);
        },flush:function (stream) {
          stream.tty.ops.flush(stream.tty);
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              // we will read data by chunks of BUFSIZE
              var BUFSIZE = 256;
              var buf = new Buffer(BUFSIZE);
              var bytesRead = 0;
  
              var fd = process.stdin.fd;
              // Linux and Mac cannot use process.stdin.fd (which isn't set up as sync)
              var usingDevice = false;
              try {
                fd = fs.openSync('/dev/stdin', 'r');
                usingDevice = true;
              } catch (e) {}
  
              bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
  
              if (usingDevice) { fs.closeSync(fd); }
              if (bytesRead > 0) {
                result = buf.slice(0, bytesRead).toString('utf-8');
              } else {
                result = null;
              }
  
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val);
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }}};
  
  var MEMFS={ops_table:null,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap,
                msync: MEMFS.stream_ops.msync
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            }
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.buffer.byteLength which gives the whole capacity.
          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred
          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size
          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.
          node.contents = null; 
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },getFileDataAsRegularArray:function (node) {
        if (node.contents && node.contents.subarray) {
          var arr = [];
          for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
          return arr; // Returns a copy of the original data.
        }
        return node.contents; // No-op, the file contents are already in a JS array. Return as-is.
      },getFileDataAsTypedArray:function (node) {
        if (!node.contents) return new Uint8Array;
        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.
        return new Uint8Array(node.contents);
      },expandFileStorage:function (node, newCapacity) {
        // If we are asked to expand the size of a file that already exists, revert to using a standard JS array to store the file
        // instead of a typed array. This makes resizing the array more flexible because we can just .push() elements at the back to
        // increase the size.
        if (node.contents && node.contents.subarray && newCapacity > node.contents.length) {
          node.contents = MEMFS.getFileDataAsRegularArray(node);
          node.usedBytes = node.contents.length; // We might be writing to a lazy-loaded file which had overridden this property, so force-reset it.
        }
  
        if (!node.contents || node.contents.subarray) { // Keep using a typed array if creating a new storage, or if old one was a typed array as well.
          var prevCapacity = node.contents ? node.contents.buffer.byteLength : 0;
          if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.
          // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.
          // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to
          // avoid overshooting the allocation cap by a very large margin.
          var CAPACITY_DOUBLING_MAX = 1024 * 1024;
          newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) | 0);
          if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.
          var oldContents = node.contents;
          node.contents = new Uint8Array(newCapacity); // Allocate new storage.
          if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.
          return;
        }
        // Not using a typed array to back the file storage. Use a standard JS array instead.
        if (!node.contents && newCapacity > 0) node.contents = [];
        while (node.contents.length < newCapacity) node.contents.push(0);
      },resizeFileStorage:function (node, newSize) {
        if (node.usedBytes == newSize) return;
        if (newSize == 0) {
          node.contents = null; // Fully decommit when requesting a resize to zero.
          node.usedBytes = 0;
          return;
        }
        if (!node.contents || node.contents.subarray) { // Resize a typed array if that is being used as the backing store.
          var oldContents = node.contents;
          node.contents = new Uint8Array(new ArrayBuffer(newSize)); // Allocate new storage.
          if (oldContents) {
            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.
          }
          node.usedBytes = newSize;
          return;
        }
        // Backing with a JS array.
        if (!node.contents) node.contents = [];
        if (node.contents.length > newSize) node.contents.length = newSize;
        else while (node.contents.length < newSize) node.contents.push(0);
        node.usedBytes = newSize;
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.usedBytes;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.resizeFileStorage(node, attr.size);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= stream.node.usedBytes) return 0;
          var size = Math.min(stream.node.usedBytes - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else {
            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          if (!length) return 0;
          var node = stream.node;
          node.timestamp = Date.now();
  
          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?
            if (canOwn) { // Can we just reuse the buffer we are given?
              assert(position === 0, 'canOwn must imply no weird position inside the file');
              node.contents = buffer.subarray(offset, offset + length);
              node.usedBytes = length;
              return length;
            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.
              node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
              node.usedBytes = length;
              return length;
            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?
              node.contents.set(buffer.subarray(offset, offset + length), position);
              return length;
            }
          }
  
          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.
          MEMFS.expandFileStorage(node, position+length);
          if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); // Use typed array write if available.
          else {
            for (var i = 0; i < length; i++) {
             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.
            }
          }
          node.usedBytes = Math.max(node.usedBytes, position+length);
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.usedBytes;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.expandFileStorage(stream.node, offset + length);
          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < stream.node.usedBytes) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        },msync:function (stream, buffer, offset, length, mmapFlags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          if (mmapFlags & 2) {
            // MAP_PRIVATE calls need not to be synced back to underlying fs
            return 0;
          }
  
          var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
          // should we check if bytesWritten and length are the same?
          return 0;
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        if (typeof indexedDB !== 'undefined') return indexedDB;
        var ret = null;
        if (typeof window === 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
        assert(ret, 'IDBFS used, but indexedDB not supported');
        return ret;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          if (!fileStore.indexNames.contains('timestamp')) {
            fileStore.createIndex('timestamp', 'timestamp', { unique: false });
          }
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function(e) {
            callback(this.error);
            e.preventDefault();
          };
  
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          var index = store.index('timestamp');
  
          index.openKeyCursor().onsuccess = function(event) {
            var cursor = event.target.result;
  
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, entries: entries });
            }
  
            entries[cursor.primaryKey] = { timestamp: cursor.key };
  
            cursor.continue();
          };
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.
          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.
          node.contents = MEMFS.getFileDataAsTypedArray(node);
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.chmod(path, entry.mode);
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function(e) {
          done(this.error);
          e.preventDefault();
        };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            path = fs.readlinkSync(path);
            path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);
            return path;
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          if (length === 0) return 0; // node errors on 0 length reads
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          return position;
        }}};
  
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
  
      /*
      // Disabled, see https://github.com/kripken/emscripten/issues/2770
      stream = FS.getStreamFromPtr(stream);
      if (stream.stream_ops.flush) {
        stream.stream_ops.flush(stream);
      }
      */
    }
  Module["_fflush"] = _fflush;var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        if (!path) return { path: '', node: null };
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
  
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err, parent);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); }
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); }
            }
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        var err = FS.nodePermissions(dir, 'x');
        if (err) return err;
        if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;
        return 0;
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        // clone it, so we can return an instance of FSStream
        var newStream = new FS.FSStream();
        for (var p in stream) {
          newStream[p] = stream[p];
        }
        stream = newStream;
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            callback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        if (!name || name === '.' || name === '..') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        if (!PATH.resolve(oldpath)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        if (!parent) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        try {
          if (FS.trackingDelegate['willMovePath']) {
            FS.trackingDelegate['willMovePath'](old_path, new_path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
        try {
          if (FS.trackingDelegate['onMovePath']) FS.trackingDelegate['onMovePath'](old_path, new_path);
        } catch(e) {
          console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return PATH.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        if (path === "") {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        var created = false;
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
            created = true;
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // if asked only for a directory, then this must be one
        if ((flags & 65536) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        // check permissions, if this is not a file we just created now (it is ok to
        // create and write to a file with read-only permissions; it is read-only
        // for later use)
        if (!created) {
          var err = FS.mayOpen(node, flags);
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        try {
          if (FS.trackingDelegate['onOpenFile']) {
            var trackingFlags = 0;
            if ((flags & 2097155) !== 1) {
              trackingFlags |= FS.tracking.openFlags.READ;
            }
            if ((flags & 2097155) !== 0) {
              trackingFlags |= FS.tracking.openFlags.WRITE;
            }
            FS.trackingDelegate['onOpenFile'](path, trackingFlags);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: " + e.message);
        }
        return stream;
      },close:function (stream) {
        if (stream.getdents) stream.getdents = null; // free readdir state
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        stream.position = stream.stream_ops.llseek(stream, offset, whence);
        stream.ungotten = [];
        return stream.position;
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        try {
          if (stream.path && FS.trackingDelegate['onWriteToFile']) FS.trackingDelegate['onWriteToFile'](stream.path);
        } catch(e) {
          console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: " + e.message);
        }
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },msync:function (stream, buffer, offset, length, mmapFlags) {
        if (!stream || !stream.stream_ops.msync) {
          return 0;
        }
        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
      },munmap:function (stream) {
        return 0;
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = UTF8ArrayToString(buf, 0);
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var buf = new Uint8Array(lengthBytesUTF8(data)+1);
          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
          FS.write(stream, buf, 0, actualNumBytes, 0, opts.canOwn);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0, opts.canOwn);
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
        FS.mkdir('/home');
        FS.mkdir('/home/web_user');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function(stream, buffer, offset, length, pos) { return length; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // setup /dev/[u]random
        var random_device;
        if (typeof crypto !== 'undefined') {
          // for modern web browsers
          var randomBuffer = new Uint8Array(1);
          random_device = function() { crypto.getRandomValues(randomBuffer); return randomBuffer[0]; };
        } else if (ENVIRONMENT_IS_NODE) {
          // for nodejs
          random_device = function() { return require('crypto').randomBytes(1)[0]; };
        } else {
          // default for ES5 platforms
          random_device = function() { return (Math.random()*256)|0; };
        }
        FS.createDevice('/dev', 'random', random_device);
        FS.createDevice('/dev', 'urandom', random_device);
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createSpecialDirectories:function () {
        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the name of the stream for fd 6 (see test_unistd_ttyname)
        FS.mkdir('/proc');
        FS.mkdir('/proc/self');
        FS.mkdir('/proc/self/fd');
        FS.mount({
          mount: function() {
            var node = FS.createNode('/proc/self', 'fd', 16384 | 0777, 73);
            node.node_ops = {
              lookup: function(parent, name) {
                var fd = +name;
                var stream = FS.getStream(fd);
                if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
                var ret = {
                  parent: null,
                  mount: { mountpoint: 'fake' },
                  node_ops: { readlink: function() { return stream.path } }
                };
                ret.parent = ret; // make it look like a simple root node
                return ret;
              }
            };
            return node;
          }
        }, {}, '/proc/self/fd');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno, node) {
          //Module.printErr(stackTrace()); // useful for debugging
          this.node = node;
          this.setErrno = function(errno) {
            this.errno = errno;
            for (var key in ERRNO_CODES) {
              if (ERRNO_CODES[key] === errno) {
                this.code = key;
                break;
              }
            }
          };
          this.setErrno(errno);
          this.message = ERRNO_MESSAGES[errno];
          if (this.stack) this.stack = demangleAll(this.stack);
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
        FS.createSpecialDirectories();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        // force-flush all streams, so we get musl std streams printed out
        var fflush = Module['_fflush'];
        if (fflush) fflush(0);
        // close all of our streams
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
            obj.usedBytes = obj.contents.length;
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
        function LazyUint8Array() {
          this.lengthKnown = false;
          this.chunks = []; // Loaded chunks. Index is the chunk number
        }
        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
          if (idx > this.length-1 || idx < 0) {
            return undefined;
          }
          var chunkOffset = idx % this.chunkSize;
          var chunkNum = (idx / this.chunkSize)|0;
          return this.getter(chunkNum)[chunkOffset];
        }
        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
          this.getter = getter;
        }
        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
          // Find length
          var xhr = new XMLHttpRequest();
          xhr.open('HEAD', url, false);
          xhr.send(null);
          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
          var datalength = Number(xhr.getResponseHeader("Content-length"));
          var header;
          var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
          var chunkSize = 1024*1024; // Chunk size in bytes
  
          if (!hasByteServing) chunkSize = datalength;
  
          // Function to get a range from the remote URL.
          var doXHR = (function(from, to) {
            if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
            if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
            var xhr = new XMLHttpRequest();
            xhr.open('GET', url, false);
            if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
            // Some hints to the browser that we want binary data.
            if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
            if (xhr.overrideMimeType) {
              xhr.overrideMimeType('text/plain; charset=x-user-defined');
            }
  
            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            if (xhr.response !== undefined) {
              return new Uint8Array(xhr.response || []);
            } else {
              return intArrayFromString(xhr.responseText || '', true);
            }
          });
          var lazyArray = this;
          lazyArray.setDataGetter(function(chunkNum) {
            var start = chunkNum * chunkSize;
            var end = (chunkNum+1) * chunkSize - 1; // including this byte
            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
              lazyArray.chunks[chunkNum] = doXHR(start, end);
            }
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
            return lazyArray.chunks[chunkNum];
          });
  
          this._length = datalength;
          this._chunkSize = chunkSize;
          this.lengthKnown = true;
        }
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // Add a function that defers querying the file size until it is asked the first time.
        Object.defineProperty(node, "usedBytes", {
            get: function() { return this.contents.length; }
        });
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        var dep = getUniqueRunDependency('cp ' + fullname); // might have several active requests for the same fullname
        function processData(byteArray) {
          function finish(byteArray) {
            if (preFinish) preFinish();
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency(dep);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency(dep);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency(dep);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:function (dirfd, path) {
        if (path[0] !== '/') {
          // relative path
          var dir;
          if (dirfd === -100) {
            dir = FS.cwd();
          } else {
            var dirstream = FS.getStream(dirfd);
            if (!dirstream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
            dir = dirstream.path;
          }
          path = PATH.join2(dir, path);
        }
        return path;
      },doStat:function (func, path, buf) {
        try {
          var stat = func(path);
        } catch (e) {
          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
            // an error occurred while trying to look up the path; we should just report ENOTDIR
            return -ERRNO_CODES.ENOTDIR;
          }
          throw e;
        }
        HEAP32[((buf)>>2)]=stat.dev;
        HEAP32[(((buf)+(4))>>2)]=0;
        HEAP32[(((buf)+(8))>>2)]=stat.ino;
        HEAP32[(((buf)+(12))>>2)]=stat.mode;
        HEAP32[(((buf)+(16))>>2)]=stat.nlink;
        HEAP32[(((buf)+(20))>>2)]=stat.uid;
        HEAP32[(((buf)+(24))>>2)]=stat.gid;
        HEAP32[(((buf)+(28))>>2)]=stat.rdev;
        HEAP32[(((buf)+(32))>>2)]=0;
        HEAP32[(((buf)+(36))>>2)]=stat.size;
        HEAP32[(((buf)+(40))>>2)]=4096;
        HEAP32[(((buf)+(44))>>2)]=stat.blocks;
        HEAP32[(((buf)+(48))>>2)]=(stat.atime.getTime() / 1000)|0;
        HEAP32[(((buf)+(52))>>2)]=0;
        HEAP32[(((buf)+(56))>>2)]=(stat.mtime.getTime() / 1000)|0;
        HEAP32[(((buf)+(60))>>2)]=0;
        HEAP32[(((buf)+(64))>>2)]=(stat.ctime.getTime() / 1000)|0;
        HEAP32[(((buf)+(68))>>2)]=0;
        HEAP32[(((buf)+(72))>>2)]=stat.ino;
        return 0;
      },doMsync:function (addr, stream, len, flags) {
        var buffer = new Uint8Array(HEAPU8.buffer, addr, len);
        FS.msync(stream, buffer, 0, len, flags);
      },doMkdir:function (path, mode) {
        // remove a trailing slash, if one - /a/b/ has basename of '', but
        // we want to create b in the context of this function
        path = PATH.normalize(path);
        if (path[path.length-1] === '/') path = path.substr(0, path.length-1);
        FS.mkdir(path, mode, 0);
        return 0;
      },doMknod:function (path, mode, dev) {
        // we don't want this in the JS API as it uses mknod to create all nodes.
        switch (mode & 61440) {
          case 32768:
          case 8192:
          case 24576:
          case 4096:
          case 49152:
            break;
          default: return -ERRNO_CODES.EINVAL;
        }
        FS.mknod(path, mode, dev);
        return 0;
      },doReadlink:function (path, buf, bufsize) {
        if (bufsize <= 0) return -ERRNO_CODES.EINVAL;
        var ret = FS.readlink(path);
        ret = ret.slice(0, Math.max(0, bufsize));
        writeStringToMemory(ret, buf, true);
        return ret.length;
      },doAccess:function (path, amode) {
        if (amode & ~7) {
          // need a valid mode
          return -ERRNO_CODES.EINVAL;
        }
        var node;
        var lookup = FS.lookupPath(path, { follow: true });
        node = lookup.node;
        var perms = '';
        if (amode & 4) perms += 'r';
        if (amode & 2) perms += 'w';
        if (amode & 1) perms += 'x';
        if (perms /* otherwise, they've just passed F_OK */ && FS.nodePermissions(node, perms)) {
          return -ERRNO_CODES.EACCES;
        }
        return 0;
      },doDup:function (path, flags, suggestFD) {
        var suggest = FS.getStream(suggestFD);
        if (suggest) FS.close(suggest);
        return FS.open(path, flags, 0, suggestFD, suggestFD).fd;
      },doReadv:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = HEAP32[(((iov)+(i*8))>>2)];
          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
          var curr = FS.read(stream, HEAP8, ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
          if (curr < len) break; // nothing more to read
        }
        return ret;
      },doWritev:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = HEAP32[(((iov)+(i*8))>>2)];
          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
          var curr = FS.write(stream, HEAP8, ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
        }
        return ret;
      },varargs:0,get:function (varargs) {
        SYSCALLS.varargs += 4;
        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];
        return ret;
      },getStr:function () {
        var ret = Pointer_stringify(SYSCALLS.get());
        return ret;
      },getStreamFromFD:function () {
        var stream = FS.getStream(SYSCALLS.get());
        if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        return stream;
      },getSocketFromFD:function () {
        var socket = SOCKFS.getSocket(SYSCALLS.get());
        if (!socket) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        return socket;
      },getSocketAddress:function (allowNull) {
        var addrp = SYSCALLS.get(), addrlen = SYSCALLS.get();
        if (allowNull && addrp === 0) return null;
        var info = __read_sockaddr(addrp, addrlen);
        if (info.errno) throw new FS.ErrnoError(info.errno);
        info.addr = DNS.lookup_addr(info.addr) || info.addr;
        return info;
      },get64:function () {
        var low = SYSCALLS.get(), high = SYSCALLS.get();
        if (low >= 0) assert(high === 0);
        else assert(high === -1);
        return low;
      },getZero:function () {
        assert(SYSCALLS.get() === 0);
      }};function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // ioctl
      var stream = SYSCALLS.getStreamFromFD(), op = SYSCALLS.get();
      switch (op) {
        case 21505: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0;
        }
        case 21506: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0; // no-op, not actually adjusting terminal settings
        }
        case 21519: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          var argp = SYSCALLS.get();
          HEAP32[((argp)>>2)]=0;
          return 0;
        }
        case 21520: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return -ERRNO_CODES.EINVAL; // not supported
        }
        case 21531: {
          var argp = SYSCALLS.get();
          return FS.ioctl(stream, op, argp);
        }
        default: abort('bad ioctl syscall ' + op);
      }
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

   
  Module["_memset"] = _memset;

  var _BDtoIHigh=true;

  function _pthread_cleanup_push(routine, arg) {
      __ATEXIT__.push(function() { Runtime.dynCall('vi', routine, [arg]) })
      _pthread_cleanup_push.level = __ATEXIT__.length;
    }

  function _pthread_cond_broadcast() {
      return 0;
    }

  var _emscripten_resume=true;

  function _pthread_cleanup_pop() {
      assert(_pthread_cleanup_push.level == __ATEXIT__.length, 'cannot pop if something else added meanwhile!');
      __ATEXIT__.pop();
      _pthread_cleanup_push.level = __ATEXIT__.length;
    }

  function _pthread_mutex_unlock() {}

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  function _pthread_mutex_lock() {}

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) {
        var success = self.alloc(bytes);
        if (!success) return -1 >>> 0; // sbrk failure code
      }
      return ret;  // Previous break location.
    }

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  function ___cxa_guard_abort() {}

   
  Module["_memmove"] = _memmove;

  var _emscripten_preinvoke=true;

  var _BItoD=true;

  function _pthread_cond_wait() {
      return 0;
    }

  function ___cxa_rethrow() {
      ___cxa_end_catch.rethrown = true;
      var ptr = EXCEPTIONS.caught.pop();
      EXCEPTIONS.last = ptr;
      throw ptr;
    }

  function __embind_register_memory_view(rawType, dataTypeIndex, name) {
      var typeMapping = [
          Int8Array,
          Uint8Array,
          Int16Array,
          Uint16Array,
          Int32Array,
          Uint32Array,
          Float32Array,
          Float64Array,
      ];
  
      var TA = typeMapping[dataTypeIndex];
  
      function decodeMemoryView(handle) {
          handle = handle >> 2;
          var heap = HEAPU32;
          var size = heap[handle]; // in elements
          var data = heap[handle + 1]; // byte offset into emscripten heap
          return new TA(heap['buffer'], data, size);
      }
  
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': decodeMemoryView,
          'argPackAdvance': 8,
          'readValueFromPointer': decodeMemoryView,
      }, {
          ignoreDuplicateRegistrations: true,
      });
    }

  function ___cxa_guard_release() {}

  function __embind_register_std_string(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              var length = HEAPU32[value >> 2];
              var a = new Array(length);
              for (var i = 0; i < length; ++i) {
                  a[i] = String.fromCharCode(HEAPU8[value + 4 + i]);
              }
              _free(value);
              return a.join('');
          },
          'toWireType': function(destructors, value) {
              if (value instanceof ArrayBuffer) {
                  value = new Uint8Array(value);
              }
  
              function getTAElement(ta, index) {
                  return ta[index];
              }
              function getStringElement(string, index) {
                  return string.charCodeAt(index);
              }
              var getElement;
              if (value instanceof Uint8Array) {
                  getElement = getTAElement;
              } else if (value instanceof Int8Array) {
                  getElement = getTAElement;
              } else if (typeof value === 'string') {
                  getElement = getStringElement;
              } else {
                  throwBindingError('Cannot pass non-string to std::string');
              }
  
              // assumes 4-byte alignment
              var length = value.length;
              var ptr = _malloc(4 + length);
              HEAPU32[ptr >> 2] = length;
              for (var i = 0; i < length; ++i) {
                  var charCode = getElement(value, i);
                  if (charCode > 255) {
                      _free(ptr);
                      throwBindingError('String has UTF-16 code units that do not fit in 8 bits');
                  }
                  HEAPU8[ptr + 4 + i] = charCode;
              }
              if (destructors !== null) {
                  destructors.push(_free, ptr);
              }
              return ptr;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: function(ptr) { _free(ptr); },
      });
    }

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

  function __embind_register_void(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, {
          isVoid: true, // void return values can be optimized out sometimes
          name: name,
          'argPackAdvance': 0,
          'fromWireType': function() {
              return undefined;
          },
          'toWireType': function(destructors, o) {
              // TODO: assert if anything else is given?
              return undefined;
          },
      });
    }

  
  function _embind_repr(v) {
      if (v === null) {
          return 'null';
      }
      var t = typeof v;
      if (t === 'object' || t === 'array' || t === 'function') {
          return v.toString();
      } else {
          return '' + v;
      }
    }
  
  function integerReadValueFromPointer(name, shift, signed) {
      // integers are quite common, so generate very specialized functions
      switch (shift) {
          case 0: return signed ?
              function readS8FromPointer(pointer) { return HEAP8[pointer]; } :
              function readU8FromPointer(pointer) { return HEAPU8[pointer]; };
          case 1: return signed ?
              function readS16FromPointer(pointer) { return HEAP16[pointer >> 1]; } :
              function readU16FromPointer(pointer) { return HEAPU16[pointer >> 1]; };
          case 2: return signed ?
              function readS32FromPointer(pointer) { return HEAP32[pointer >> 2]; } :
              function readU32FromPointer(pointer) { return HEAPU32[pointer >> 2]; };
          default:
              throw new TypeError("Unknown integer type: " + name);
      }
    }function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {
      name = readLatin1String(name);
      if (maxRange === -1) { // LLVM doesn't have signed and unsigned 32-bit types, so u32 literals come out as 'i32 -1'. Always treat those as max u32.
          maxRange = 4294967295;
      }
  
      var shift = getShiftFromSize(size);
      
      var fromWireType = function(value) {
          return value;
      };
      
      if (minRange === 0) {
          var bitshift = 32 - 8*size;
          fromWireType = function(value) {
              return (value << bitshift) >>> bitshift;
          };
      }
  
      registerType(primitiveType, {
          name: name,
          'fromWireType': fromWireType,
          'toWireType': function(destructors, value) {
              // todo: Here we have an opportunity for -O3 level "unsafe" optimizations: we could
              // avoid the following two if()s and assume value is of proper type.
              if (typeof value !== "number" && typeof value !== "boolean") {
                  throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
              }
              if (value < minRange || value > maxRange) {
                  throw new TypeError('Passing a number "' + _embind_repr(value) + '" from JS side to C/C++ side to an argument of type "' + name + '", which is outside the valid range [' + minRange + ', ' + maxRange + ']!');
              }
              return value | 0;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': integerReadValueFromPointer(name, shift, minRange !== 0),
          destructorFunction: null, // This type does not need a destructor
      });
    }

  var _BDtoILow=true;

  function ___gxx_personality_v0() {
    }

  
  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
  
      var tm_zone = HEAP32[(((tm)+(40))>>2)];
  
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)],
        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],
        tm_zone: tm_zone ? Pointer_stringify(tm_zone) : ''
      };
  
      var pattern = Pointer_stringify(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S'                  // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls((year/100)|0,2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour-12, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour > 0 && date.tm_hour < 13) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich).
          var off = date.tm_gmtoff;
          var ahead = off >= 0;
          off = Math.abs(off) / 60;
          // convert from minutes into hhmm format (which means 60 minutes = 100 units)
          off = (off / 60)*100 + (off % 60);
          return (ahead ? '+' : '-') + String("0000" + off).slice(-4);
        },
        '%Z': function(date) {
          return date.tm_zone;
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }function _strftime_l(s, maxsize, format, tm) {
      return _strftime(s, maxsize, format, tm); // no locale support yet
    }

  function _abort() {
      Module['abort']();
    }


  function _pthread_once(ptr, func) {
      if (!_pthread_once.seen) _pthread_once.seen = {};
      if (ptr in _pthread_once.seen) return;
      Runtime.dynCall('v', func);
      _pthread_once.seen[ptr] = 1;
    }

  function ___lock() {}

  function ___unlock() {}

  function _pthread_getspecific(key) {
      return PTHREAD_SPECIFIC[key] || 0;
    }

  var _fabs=Math_abs;

  function _clock() {
      if (_clock.start === undefined) _clock.start = Date.now();
      return ((Date.now() - _clock.start) * (1000000 / 1000))|0;
    }

  
  
  function _emscripten_set_main_loop_timing(mode, value) {
      Browser.mainLoop.timingMode = mode;
      Browser.mainLoop.timingValue = value;
  
      if (!Browser.mainLoop.func) {
        console.error('emscripten_set_main_loop_timing: Cannot set timing mode for main loop since a main loop does not exist! Call emscripten_set_main_loop first to set one up.');
        return 1; // Return non-zero on failure, can't set timing mode when there is no main loop.
      }
  
      if (mode == 0 /*EM_TIMING_SETTIMEOUT*/) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
          setTimeout(Browser.mainLoop.runner, value); // doing this each time means that on exception, we stop
        };
        Browser.mainLoop.method = 'timeout';
      } else if (mode == 1 /*EM_TIMING_RAF*/) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
          Browser.requestAnimationFrame(Browser.mainLoop.runner);
        };
        Browser.mainLoop.method = 'rAF';
      }
      return 0;
    }function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop, arg, noSetTiming) {
      Module['noExitRuntime'] = true;
  
      assert(!Browser.mainLoop.func, 'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.');
  
      Browser.mainLoop.func = func;
      Browser.mainLoop.arg = arg;
  
      var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop;
  
      Browser.mainLoop.runner = function Browser_mainLoop_runner() {
        if (ABORT) return;
        if (Browser.mainLoop.queue.length > 0) {
          var start = Date.now();
          var blocker = Browser.mainLoop.queue.shift();
          blocker.func(blocker.arg);
          if (Browser.mainLoop.remainingBlockers) {
            var remaining = Browser.mainLoop.remainingBlockers;
            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);
            if (blocker.counted) {
              Browser.mainLoop.remainingBlockers = next;
            } else {
              // not counted, but move the progress along a tiny bit
              next = next + 0.5; // do not steal all the next one's progress
              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;
            }
          }
          console.log('main loop blocker "' + blocker.name + '" took ' + (Date.now() - start) + ' ms'); //, left: ' + Browser.mainLoop.remainingBlockers);
          Browser.mainLoop.updateStatus();
          setTimeout(Browser.mainLoop.runner, 0);
          return;
        }
  
        // catch pauses from non-main loop sources
        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  
        // Implement very basic swap interval control
        Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;
        if (Browser.mainLoop.timingMode == 1/*EM_TIMING_RAF*/ && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {
          // Not the scheduled time to render this frame - skip.
          Browser.mainLoop.scheduler();
          return;
        }
  
        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize
        // VBO double-buffering and reduce GPU stalls.
  
        if (Browser.mainLoop.method === 'timeout' && Module.ctx) {
          Module.printErr('Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!');
          Browser.mainLoop.method = ''; // just warn once per call to set main loop
        }
  
        Browser.mainLoop.runIter(function() {
          if (typeof arg !== 'undefined') {
            Runtime.dynCall('vi', func, [arg]);
          } else {
            Runtime.dynCall('v', func);
          }
        });
  
        // catch pauses from the main loop itself
        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  
        // Queue new audio data. This is important to be right after the main loop invocation, so that we will immediately be able
        // to queue the newest produced audio samples.
        // TODO: Consider adding pre- and post- rAF callbacks so that GL.newRenderingFrameStarted() and SDL.audio.queueNewAudioData()
        //       do not need to be hardcoded into this function, but can be more generic.
        if (typeof SDL === 'object' && SDL.audio && SDL.audio.queueNewAudioData) SDL.audio.queueNewAudioData();
  
        Browser.mainLoop.scheduler();
      }
  
      if (!noSetTiming) {
        if (fps && fps > 0) _emscripten_set_main_loop_timing(0/*EM_TIMING_SETTIMEOUT*/, 1000.0 / fps);
        else _emscripten_set_main_loop_timing(1/*EM_TIMING_RAF*/, 1); // Do rAF by rendering each frame (no decimating)
  
        Browser.mainLoop.scheduler();
      }
  
      if (simulateInfiniteLoop) {
        throw 'SimulateInfiniteLoop';
      }
    }var Browser={mainLoop:{scheduler:null,method:"",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:function () {
          Browser.mainLoop.scheduler = null;
          Browser.mainLoop.currentlyRunningMainloop++; // Incrementing this signals the previous main loop that it's now become old, and it must return.
        },resume:function () {
          Browser.mainLoop.currentlyRunningMainloop++;
          var timingMode = Browser.mainLoop.timingMode;
          var timingValue = Browser.mainLoop.timingValue;
          var func = Browser.mainLoop.func;
          Browser.mainLoop.func = null;
          _emscripten_set_main_loop(func, 0, false, Browser.mainLoop.arg, true /* do not set timing and call scheduler, we will do it on the next lines */);
          _emscripten_set_main_loop_timing(timingMode, timingValue);
          Browser.mainLoop.scheduler();
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        },runIter:function (func) {
          if (ABORT) return;
          if (Module['preMainLoop']) {
            var preRet = Module['preMainLoop']();
            if (preRet === false) {
              return; // |return false| skips a frame
            }
          }
          try {
            func();
          } catch (e) {
            if (e instanceof ExitStatus) {
              return;
            } else {
              if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
              throw e;
            }
          }
          if (Module['postMainLoop']) Module['postMainLoop']();
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
  
        if (Browser.initted) return;
        Browser.initted = true;
  
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          assert(typeof url == 'string', 'createObjectURL must return a url as a string');
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            assert(typeof url == 'string', 'createObjectURL must return a url as a string');
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
  
        // Canvas event setup
  
        var canvas = Module['canvas'];
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas ||
                                document['msPointerLockElement'] === canvas;
        }
        if (canvas) {
          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module
          // Module['forcedAspectRatio'] = 4 / 3;
          
          canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                      canvas['mozRequestPointerLock'] ||
                                      canvas['webkitRequestPointerLock'] ||
                                      canvas['msRequestPointerLock'] ||
                                      function(){};
          canvas.exitPointerLock = document['exitPointerLock'] ||
                                   document['mozExitPointerLock'] ||
                                   document['webkitExitPointerLock'] ||
                                   document['msExitPointerLock'] ||
                                   function(){}; // no-op if function does not exist
          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
  
  
          document.addEventListener('pointerlockchange', pointerLockChange, false);
          document.addEventListener('mozpointerlockchange', pointerLockChange, false);
          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
          document.addEventListener('mspointerlockchange', pointerLockChange, false);
  
          if (Module['elementPointerLock']) {
            canvas.addEventListener("click", function(ev) {
              if (!Browser.pointerLock && canvas.requestPointerLock) {
                canvas.requestPointerLock();
                ev.preventDefault();
              }
            }, false);
          }
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        if (useWebGL && Module.ctx && canvas == Module.canvas) return Module.ctx; // no need to recreate GL context if it's already been created for this canvas.
  
        var ctx;
        var contextHandle;
        if (useWebGL) {
          // For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.
          var contextAttributes = {
            antialias: false,
            alpha: false
          };
  
          if (webGLContextAttributes) {
            for (var attribute in webGLContextAttributes) {
              contextAttributes[attribute] = webGLContextAttributes[attribute];
            }
          }
  
          contextHandle = GL.createContext(canvas, contextAttributes);
          if (contextHandle) {
            ctx = GL.getContext(contextHandle).GLctx;
          }
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
        } else {
          ctx = canvas.getContext('2d');
        }
  
        if (!ctx) return null;
  
        if (setInModule) {
          if (!useWebGL) assert(typeof GLctx === 'undefined', 'cannot set in module if GLctx is used, but we are a non-GL context that would replace it');
  
          Module.ctx = ctx;
          if (useWebGL) GL.makeContextCurrent(contextHandle);
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas, vrDevice) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        Browser.vrDevice = vrDevice;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
        if (typeof Browser.vrDevice === 'undefined') Browser.vrDevice = null;
  
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          var canvasContainer = canvas.parentNode;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement'] ||
               document['msFullScreenElement'] || document['msFullscreenElement'] ||
               document['webkitCurrentFullScreenElement']) === canvasContainer) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'] ||
                                      document['msExitFullscreen'] ||
                                      document['exitFullscreen'] ||
                                      function() {};
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else {
            
            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen
            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);
            canvasContainer.parentNode.removeChild(canvasContainer);
            
            if (Browser.resizeCanvas) Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
          Browser.updateCanvasDimensions(canvas);
        }
  
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
          document.addEventListener('MSFullscreenChange', fullScreenChange, false);
        }
  
        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root
        var canvasContainer = document.createElement("div");
        canvas.parentNode.insertBefore(canvasContainer, canvas);
        canvasContainer.appendChild(canvas);
  
        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)
        canvasContainer.requestFullScreen = canvasContainer['requestFullScreen'] ||
                                            canvasContainer['mozRequestFullScreen'] ||
                                            canvasContainer['msRequestFullscreen'] ||
                                           (canvasContainer['webkitRequestFullScreen'] ? function() { canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
  
        if (vrDevice) {
          canvasContainer.requestFullScreen({ vrDisplay: vrDevice });
        } else {
          canvasContainer.requestFullScreen();
        }
      },nextRAF:0,fakeRequestAnimationFrame:function (func) {
        // try to keep 60fps between calls to here
        var now = Date.now();
        if (Browser.nextRAF === 0) {
          Browser.nextRAF = now + 1000/60;
        } else {
          while (now + 2 >= Browser.nextRAF) { // fudge a little, to avoid timer jitter causing us to do lots of delay:0
            Browser.nextRAF += 1000/60;
          }
        }
        var delay = Math.max(Browser.nextRAF - now, 0);
        setTimeout(func, delay);
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          Browser.fakeRequestAnimationFrame(func);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           Browser.fakeRequestAnimationFrame;
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },allowAsyncCallbacks:true,queuedAsyncCallbacks:[],pauseAsyncCallbacks:function () {
        Browser.allowAsyncCallbacks = false;
      },resumeAsyncCallbacks:function () { // marks future callbacks as ok to execute, and synchronously runs any remaining ones right now
        Browser.allowAsyncCallbacks = true;
        if (Browser.queuedAsyncCallbacks.length > 0) {
          var callbacks = Browser.queuedAsyncCallbacks;
          Browser.queuedAsyncCallbacks = [];
          callbacks.forEach(function(func) {
            func();
          });
        }
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } else {
            Browser.queuedAsyncCallbacks.push(func);
          }
        });
      },safeSetTimeout:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setTimeout(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } else {
            Browser.queuedAsyncCallbacks.push(func);
          }
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setInterval(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } // drop it on the floor otherwise, next interval will kick in
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },getMouseWheelDelta:function (event) {
        var delta = 0;
        switch (event.type) {
          case 'DOMMouseScroll': 
            delta = event.detail;
            break;
          case 'mousewheel': 
            delta = event.wheelDelta;
            break;
          case 'wheel': 
            delta = event['deltaY'];
            break;
          default:
            throw 'unrecognized mouse wheel event: ' + event.type;
        }
        return delta;
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
  
          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
          // If this assert lands, it's likely because the browser doesn't support scrollX or pageXOffset
          // and we have no viable fallback.
          assert((typeof scrollX !== 'undefined') && (typeof scrollY !== 'undefined'), 'Unable to retrieve scroll position, mouse positions likely broken.');
  
          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {
            var touch = event.touch;
            if (touch === undefined) {
              return; // the "touch" property is only defined in SDL
  
            }
            var adjustedX = touch.pageX - (scrollX + rect.left);
            var adjustedY = touch.pageY - (scrollY + rect.top);
  
            adjustedX = adjustedX * (cw / rect.width);
            adjustedY = adjustedY * (ch / rect.height);
  
            var coords = { x: adjustedX, y: adjustedY };
            
            if (event.type === 'touchstart') {
              Browser.lastTouches[touch.identifier] = coords;
              Browser.touches[touch.identifier] = coords;
            } else if (event.type === 'touchend' || event.type === 'touchmove') {
              var last = Browser.touches[touch.identifier];
              if (!last) last = coords;
              Browser.lastTouches[touch.identifier] = last;
              Browser.touches[touch.identifier] = coords;
            } 
            return;
          }
  
          var x = event.pageX - (scrollX + rect.left);
          var y = event.pageY - (scrollY + rect.top);
  
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
  
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        Browser.updateCanvasDimensions(canvas, width, height);
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },updateCanvasDimensions:function (canvas, wNative, hNative) {
        if (wNative && hNative) {
          canvas.widthNative = wNative;
          canvas.heightNative = hNative;
        } else {
          wNative = canvas.widthNative;
          hNative = canvas.heightNative;
        }
        var w = wNative;
        var h = hNative;
        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {
          if (w/h < Module['forcedAspectRatio']) {
            w = Math.round(h * Module['forcedAspectRatio']);
          } else {
            h = Math.round(w / Module['forcedAspectRatio']);
          }
        }
        if (((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
             document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
             document['fullScreenElement'] || document['fullscreenElement'] ||
             document['msFullScreenElement'] || document['msFullscreenElement'] ||
             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {
           var factor = Math.min(screen.width / w, screen.height / h);
           w = Math.round(w * factor);
           h = Math.round(h * factor);
        }
        if (Browser.resizeCanvas) {
          if (canvas.width  != w) canvas.width  = w;
          if (canvas.height != h) canvas.height = h;
          if (typeof canvas.style != 'undefined') {
            canvas.style.removeProperty( "width");
            canvas.style.removeProperty("height");
          }
        } else {
          if (canvas.width  != wNative) canvas.width  = wNative;
          if (canvas.height != hNative) canvas.height = hNative;
          if (typeof canvas.style != 'undefined') {
            if (w != wNative || h != hNative) {
              canvas.style.setProperty( "width", w + "px", "important");
              canvas.style.setProperty("height", h + "px", "important");
            } else {
              canvas.style.removeProperty( "width");
              canvas.style.removeProperty("height");
            }
          }
        }
      },wgetRequests:{},nextWgetRequestHandle:0,getNextWgetRequestHandle:function () {
        var handle = Browser.nextWgetRequestHandle;
        Browser.nextWgetRequestHandle++;
        return handle;
      }};

  function _pthread_setspecific(key, value) {
      if (!(key in PTHREAD_SPECIFIC)) {
        return ERRNO_CODES.EINVAL;
      }
      PTHREAD_SPECIFIC[key] = value;
      return 0;
    }

  function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

  var _ceilf=Math_ceil;

  var _llvm_ctlz_i32=true;

  
  function floatReadValueFromPointer(name, shift) {
      switch (shift) {
          case 2: return function(pointer) {
              return this['fromWireType'](HEAPF32[pointer >> 2]);
          };
          case 3: return function(pointer) {
              return this['fromWireType'](HEAPF64[pointer >> 3]);
          };
          default:
              throw new TypeError("Unknown float type: " + name);
      }
    }function __embind_register_float(rawType, name, size) {
      var shift = getShiftFromSize(size);
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              return value;
          },
          'toWireType': function(destructors, value) {
              // todo: Here we have an opportunity for -O3 level "unsafe" optimizations: we could
              // avoid the following if() and assume value is of proper type.
              if (typeof value !== "number" && typeof value !== "boolean") {
                  throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
              }
              return value;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': floatReadValueFromPointer(name, shift),
          destructorFunction: null, // This type does not need a destructor
      });
    }

  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[((variable)>>0)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[((variable)>>0)]=1;
        return 1;
      }
      return 0;
    }

  function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      EXCEPTIONS.caught.push(ptr);
      EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
      return ptr;
    }

  function ___syscall5(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // open
      var pathname = SYSCALLS.getStr(), flags = SYSCALLS.get(), mode = SYSCALLS.get() // optional TODO
      var stream = FS.open(pathname, flags, mode);
      return stream.fd;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // close
      var stream = SYSCALLS.getStreamFromFD();
      FS.close(stream);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }


  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  function _pthread_self() {
      //FIXME: assumes only a single thread
      return 0;
    }

  function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // llseek
      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
      var offset = offset_low;
      assert(offset_high === 0);
      FS.llseek(stream, offset, whence);
      HEAP32[((result)>>2)]=stream.position;
      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // writev
      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      return SYSCALLS.doWritev(stream, iov, iovcnt);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall221(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // fcntl64
      var stream = SYSCALLS.getStreamFromFD(), cmd = SYSCALLS.get();
      switch (cmd) {
        case 0: {
          var arg = SYSCALLS.get();
          if (arg < 0) {
            return -ERRNO_CODES.EINVAL;
          }
          var newStream;
          newStream = FS.open(stream.path, stream.flags, 0, arg);
          return newStream.fd;
        }
        case 1:
        case 2:
          return 0;  // FD_CLOEXEC makes no sense for a single process.
        case 3:
          return stream.flags;
        case 4: {
          var arg = SYSCALLS.get();
          stream.flags |= arg;
          return 0;
        }
        case 12:
        case 12: {
          var arg = SYSCALLS.get();
          var offset = 0;
          // We're always unlocked.
          HEAP16[(((arg)+(offset))>>1)]=2;
          return 0;
        }
        case 13:
        case 14:
        case 13:
        case 14:
          return 0; // Pretend that the locking is successful.
        case 16:
        case 8:
          return -ERRNO_CODES.EINVAL; // These are for sockets. We don't have them fully implemented yet.
        case 9:
          // musl trusts getown return values, due to a bug where they must be, as they overlap with errors. just return -1 here, so fnctl() returns that, and we set errno ourselves.
          ___setErrNo(ERRNO_CODES.EINVAL);
          return -1;
        default: {
          return -ERRNO_CODES.EINVAL;
        }
      }
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall145(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // readv
      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      return SYSCALLS.doReadv(stream, iov, iovcnt);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  var ___dso_handle=allocate(1, "i32*", ALLOC_STATIC);
embind_init_charCodes()
BindingError = Module['BindingError'] = extendError(Error, 'BindingError');
InternalError = Module['InternalError'] = extendError(Error, 'InternalError');
init_emval();
FS.staticInit();__ATINIT__.unshift(function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() });__ATMAIN__.push(function() { FS.ignorePermissions = false });__ATEXIT__.push(function() { FS.quit() });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;Module["FS_unlink"] = FS.unlink;
__ATINIT__.unshift(function() { TTY.init() });__ATEXIT__.push(function() { TTY.shutdown() });
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); var NODEJS_PATH = require("path"); NODEFS.staticInit(); }
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas, vrDevice) { Browser.requestFullScreen(lockPointer, resizeCanvas, vrDevice) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
  Module["createContext"] = function Module_createContext(canvas, useWebGL, setInModule, webGLContextAttributes) { return Browser.createContext(canvas, useWebGL, setInModule, webGLContextAttributes) }
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);


function nullFunc_iiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiid(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vi(x) { Module["printErr"]("Invalid function pointer called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vii(x) { Module["printErr"]("Invalid function pointer called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_ii(x) { Module["printErr"]("Invalid function pointer called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiiiiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiiiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iii(x) { Module["printErr"]("Invalid function pointer called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_diii(x) { Module["printErr"]("Invalid function pointer called with signature 'diii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_i(x) { Module["printErr"]("Invalid function pointer called with signature 'i'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viii(x) { Module["printErr"]("Invalid function pointer called with signature 'viii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_v(x) { Module["printErr"]("Invalid function pointer called with signature 'v'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiid(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiid(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiid"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11) {
  try {
    return Module["dynCall_iiiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15) {
  try {
    Module["dynCall_viiiiiiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  try {
    Module["dynCall_viiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_diii(index,a1,a2,a3) {
  try {
    return Module["dynCall_diii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_i(index) {
  try {
    return Module["dynCall_i"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiid(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiid"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };
Module.asmLibraryArg = { "abort": abort, "assert": assert, "nullFunc_iiiiiiii": nullFunc_iiiiiiii, "nullFunc_viiiii": nullFunc_viiiii, "nullFunc_iiiiiid": nullFunc_iiiiiid, "nullFunc_vi": nullFunc_vi, "nullFunc_vii": nullFunc_vii, "nullFunc_iiiiiii": nullFunc_iiiiiii, "nullFunc_ii": nullFunc_ii, "nullFunc_iiiiiiiiiiii": nullFunc_iiiiiiiiiiii, "nullFunc_iiii": nullFunc_iiii, "nullFunc_viiiiiiiiiiiiiii": nullFunc_viiiiiiiiiiiiiii, "nullFunc_viiiiii": nullFunc_viiiiii, "nullFunc_viiiiiii": nullFunc_viiiiiii, "nullFunc_viiiiiiiiii": nullFunc_viiiiiiiiii, "nullFunc_iii": nullFunc_iii, "nullFunc_iiiiii": nullFunc_iiiiii, "nullFunc_diii": nullFunc_diii, "nullFunc_i": nullFunc_i, "nullFunc_iiiii": nullFunc_iiiii, "nullFunc_viii": nullFunc_viii, "nullFunc_v": nullFunc_v, "nullFunc_iiiiiiiii": nullFunc_iiiiiiiii, "nullFunc_iiiiid": nullFunc_iiiiid, "nullFunc_viiii": nullFunc_viiii, "invoke_iiiiiiii": invoke_iiiiiiii, "invoke_viiiii": invoke_viiiii, "invoke_iiiiiid": invoke_iiiiiid, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_iiiiiii": invoke_iiiiiii, "invoke_ii": invoke_ii, "invoke_iiiiiiiiiiii": invoke_iiiiiiiiiiii, "invoke_iiii": invoke_iiii, "invoke_viiiiiiiiiiiiiii": invoke_viiiiiiiiiiiiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_viiiiiii": invoke_viiiiiii, "invoke_viiiiiiiiii": invoke_viiiiiiiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_diii": invoke_diii, "invoke_i": invoke_i, "invoke_iiiii": invoke_iiiii, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_iiiiid": invoke_iiiiid, "invoke_viiii": invoke_viiii, "_fabs": _fabs, "___syscall221": ___syscall221, "_pthread_cond_wait": _pthread_cond_wait, "___lock": ___lock, "floatReadValueFromPointer": floatReadValueFromPointer, "simpleReadValueFromPointer": simpleReadValueFromPointer, "_pthread_cond_broadcast": _pthread_cond_broadcast, "___syscall54": ___syscall54, "__embind_register_memory_view": __embind_register_memory_view, "throwInternalError": throwInternalError, "get_first_emval": get_first_emval, "___syscall6": ___syscall6, "___cxa_guard_acquire": ___cxa_guard_acquire, "___setErrNo": ___setErrNo, "___gxx_personality_v0": ___gxx_personality_v0, "extendError": extendError, "___assert_fail": ___assert_fail, "___cxa_free_exception": ___cxa_free_exception, "___cxa_allocate_exception": ___cxa_allocate_exception, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "_ceilf": _ceilf, "getShiftFromSize": getShiftFromSize, "__embind_register_emval": __embind_register_emval, "__addDays": __addDays, "_strftime_l": _strftime_l, "throwBindingError": throwBindingError, "_emscripten_set_main_loop_timing": _emscripten_set_main_loop_timing, "__emval_register": __emval_register, "_sbrk": _sbrk, "__embind_register_void": __embind_register_void, "_emscripten_memcpy_big": _emscripten_memcpy_big, "___cxa_end_catch": ___cxa_end_catch, "__embind_register_bool": __embind_register_bool, "___resumeException": ___resumeException, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "_sysconf": _sysconf, "_embind_repr": _embind_repr, "___cxa_begin_catch": ___cxa_begin_catch, "_strftime": _strftime, "_clock": _clock, "createNamedFunction": createNamedFunction, "embind_init_charCodes": embind_init_charCodes, "readLatin1String": readLatin1String, "_pthread_self": _pthread_self, "__embind_register_integer": __embind_register_integer, "_pthread_once": _pthread_once, "__emval_decref": __emval_decref, "_pthread_getspecific": _pthread_getspecific, "___cxa_guard_abort": ___cxa_guard_abort, "__embind_register_float": __embind_register_float, "makeLegalFunctionName": makeLegalFunctionName, "whenDependentTypesAreResolved": whenDependentTypesAreResolved, "integerReadValueFromPointer": integerReadValueFromPointer, "___unlock": ___unlock, "__embind_register_std_wstring": __embind_register_std_wstring, "_pthread_cleanup_pop": _pthread_cleanup_pop, "__isLeapYear": __isLeapYear, "_emscripten_set_main_loop": _emscripten_set_main_loop, "___cxa_guard_release": ___cxa_guard_release, "___syscall5": ___syscall5, "_pthread_setspecific": _pthread_setspecific, "___cxa_atexit": ___cxa_atexit, "registerType": registerType, "___cxa_throw": ___cxa_throw, "_pthread_mutex_unlock": _pthread_mutex_unlock, "___cxa_rethrow": ___cxa_rethrow, "__arraySum": __arraySum, "_abort": _abort, "_pthread_cleanup_push": _pthread_cleanup_push, "___syscall145": ___syscall145, "init_emval": init_emval, "_time": _time, "_pthread_mutex_lock": _pthread_mutex_lock, "_pthread_key_create": _pthread_key_create, "_atexit": _atexit, "___syscall140": ___syscall140, "__embind_register_std_string": __embind_register_std_string, "count_emval_handles": count_emval_handles, "___syscall146": ___syscall146, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "___dso_handle": ___dso_handle };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'almost asm';
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;
  var ___dso_handle=env.___dso_handle|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var nullFunc_iiiiiiii=env.nullFunc_iiiiiiii;
  var nullFunc_viiiii=env.nullFunc_viiiii;
  var nullFunc_iiiiiid=env.nullFunc_iiiiiid;
  var nullFunc_vi=env.nullFunc_vi;
  var nullFunc_vii=env.nullFunc_vii;
  var nullFunc_iiiiiii=env.nullFunc_iiiiiii;
  var nullFunc_ii=env.nullFunc_ii;
  var nullFunc_iiiiiiiiiiii=env.nullFunc_iiiiiiiiiiii;
  var nullFunc_iiii=env.nullFunc_iiii;
  var nullFunc_viiiiiiiiiiiiiii=env.nullFunc_viiiiiiiiiiiiiii;
  var nullFunc_viiiiii=env.nullFunc_viiiiii;
  var nullFunc_viiiiiii=env.nullFunc_viiiiiii;
  var nullFunc_viiiiiiiiii=env.nullFunc_viiiiiiiiii;
  var nullFunc_iii=env.nullFunc_iii;
  var nullFunc_iiiiii=env.nullFunc_iiiiii;
  var nullFunc_diii=env.nullFunc_diii;
  var nullFunc_i=env.nullFunc_i;
  var nullFunc_iiiii=env.nullFunc_iiiii;
  var nullFunc_viii=env.nullFunc_viii;
  var nullFunc_v=env.nullFunc_v;
  var nullFunc_iiiiiiiii=env.nullFunc_iiiiiiiii;
  var nullFunc_iiiiid=env.nullFunc_iiiiid;
  var nullFunc_viiii=env.nullFunc_viiii;
  var invoke_iiiiiiii=env.invoke_iiiiiiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_iiiiiid=env.invoke_iiiiiid;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_iiiiiii=env.invoke_iiiiiii;
  var invoke_ii=env.invoke_ii;
  var invoke_iiiiiiiiiiii=env.invoke_iiiiiiiiiiii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viiiiiiiiiiiiiii=env.invoke_viiiiiiiiiiiiiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_viiiiiii=env.invoke_viiiiiii;
  var invoke_viiiiiiiiii=env.invoke_viiiiiiiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_diii=env.invoke_diii;
  var invoke_i=env.invoke_i;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viii=env.invoke_viii;
  var invoke_v=env.invoke_v;
  var invoke_iiiiiiiii=env.invoke_iiiiiiiii;
  var invoke_iiiiid=env.invoke_iiiiid;
  var invoke_viiii=env.invoke_viiii;
  var _fabs=env._fabs;
  var ___syscall221=env.___syscall221;
  var _pthread_cond_wait=env._pthread_cond_wait;
  var ___lock=env.___lock;
  var floatReadValueFromPointer=env.floatReadValueFromPointer;
  var simpleReadValueFromPointer=env.simpleReadValueFromPointer;
  var _pthread_cond_broadcast=env._pthread_cond_broadcast;
  var ___syscall54=env.___syscall54;
  var __embind_register_memory_view=env.__embind_register_memory_view;
  var throwInternalError=env.throwInternalError;
  var get_first_emval=env.get_first_emval;
  var ___syscall6=env.___syscall6;
  var ___cxa_guard_acquire=env.___cxa_guard_acquire;
  var ___setErrNo=env.___setErrNo;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var extendError=env.extendError;
  var ___assert_fail=env.___assert_fail;
  var ___cxa_free_exception=env.___cxa_free_exception;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var _ceilf=env._ceilf;
  var getShiftFromSize=env.getShiftFromSize;
  var __embind_register_emval=env.__embind_register_emval;
  var __addDays=env.__addDays;
  var _strftime_l=env._strftime_l;
  var throwBindingError=env.throwBindingError;
  var _emscripten_set_main_loop_timing=env._emscripten_set_main_loop_timing;
  var __emval_register=env.__emval_register;
  var _sbrk=env._sbrk;
  var __embind_register_void=env.__embind_register_void;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var ___cxa_end_catch=env.___cxa_end_catch;
  var __embind_register_bool=env.__embind_register_bool;
  var ___resumeException=env.___resumeException;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var _sysconf=env._sysconf;
  var _embind_repr=env._embind_repr;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var _strftime=env._strftime;
  var _clock=env._clock;
  var createNamedFunction=env.createNamedFunction;
  var embind_init_charCodes=env.embind_init_charCodes;
  var readLatin1String=env.readLatin1String;
  var _pthread_self=env._pthread_self;
  var __embind_register_integer=env.__embind_register_integer;
  var _pthread_once=env._pthread_once;
  var __emval_decref=env.__emval_decref;
  var _pthread_getspecific=env._pthread_getspecific;
  var ___cxa_guard_abort=env.___cxa_guard_abort;
  var __embind_register_float=env.__embind_register_float;
  var makeLegalFunctionName=env.makeLegalFunctionName;
  var whenDependentTypesAreResolved=env.whenDependentTypesAreResolved;
  var integerReadValueFromPointer=env.integerReadValueFromPointer;
  var ___unlock=env.___unlock;
  var __embind_register_std_wstring=env.__embind_register_std_wstring;
  var _pthread_cleanup_pop=env._pthread_cleanup_pop;
  var __isLeapYear=env.__isLeapYear;
  var _emscripten_set_main_loop=env._emscripten_set_main_loop;
  var ___cxa_guard_release=env.___cxa_guard_release;
  var ___syscall5=env.___syscall5;
  var _pthread_setspecific=env._pthread_setspecific;
  var ___cxa_atexit=env.___cxa_atexit;
  var registerType=env.registerType;
  var ___cxa_throw=env.___cxa_throw;
  var _pthread_mutex_unlock=env._pthread_mutex_unlock;
  var ___cxa_rethrow=env.___cxa_rethrow;
  var __arraySum=env.__arraySum;
  var _abort=env._abort;
  var _pthread_cleanup_push=env._pthread_cleanup_push;
  var ___syscall145=env.___syscall145;
  var init_emval=env.init_emval;
  var _time=env._time;
  var _pthread_mutex_lock=env._pthread_mutex_lock;
  var _pthread_key_create=env._pthread_key_create;
  var _atexit=env._atexit;
  var ___syscall140=env.___syscall140;
  var __embind_register_std_string=env.__embind_register_std_string;
  var count_emval_handles=env.count_emval_handles;
  var ___syscall146=env.___syscall146;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS
function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;
if ((STACKTOP|0) >= (STACK_MAX|0)) abort();

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}
function establishStackSpace(stackBase, stackMax) {
  stackBase = stackBase|0;
  stackMax = stackMax|0;
  STACKTOP = stackBase;
  STACK_MAX = stackMax;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}
function copyTempFloat(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
}
function copyTempDouble(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
  HEAP8[tempDoublePtr+4>>0] = HEAP8[ptr+4>>0];
  HEAP8[tempDoublePtr+5>>0] = HEAP8[ptr+5>>0];
  HEAP8[tempDoublePtr+6>>0] = HEAP8[ptr+6>>0];
  HEAP8[tempDoublePtr+7>>0] = HEAP8[ptr+7>>0];
}

function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function __Z17testInstantiateKEv() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0.0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $begin = 0, $diff = 0, $end = 0, $engine = 0, $run = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 333888|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $engine = sp;
 $diff = 0;
 $run = 0;
 while(1) {
  $2 = $run;
  $3 = ($2|0)<(1);
  if (!($3)) {
   break;
  }
  $4 = (_clock()|0);
  $begin = $4;
  __ZN17KryptnosticClientILj128EEC2Ev($engine);
  $5 = (_clock()|0);
  $end = $5;
  $6 = $end;
  $7 = $begin;
  $8 = (($6) - ($7))|0;
  $9 = $diff;
  $10 = (($9) + ($8))|0;
  $diff = $10;
  $11 = $run;
  $12 = (($11) + 1)|0;
  $run = $12;
 }
 $13 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(7340,14772)|0);
 $14 = (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($13,1)|0);
 $15 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($14,14799)|0);
 $16 = $diff;
 $17 = (+($16|0));
 $18 = $17 / 1.0E+6;
 $19 = (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd($15,$18)|0);
 $20 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($19,14838)|0);
 $0 = $20;
 $1 = 354;
 $21 = $0;
 $22 = $1;
 (FUNCTION_TABLE_ii[$22 & 1023]($21)|0);
 STACKTOP = sp;return;
}
function _main($argc,$argv) {
 $argc = $argc|0;
 $argv = $argv|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = 0;
 $3 = $argc;
 $4 = $argv;
 $5 = (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(7340,14843)|0);
 $0 = $5;
 $1 = 354;
 $6 = $0;
 $7 = $1;
 (FUNCTION_TABLE_ii[$7 & 1023]($6)|0);
 __Z17testInstantiateKEv();
 STACKTOP = sp;return 0;
}
function __ZN17KryptnosticClientILj128EEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN10PrivateKeyILj128EEC2Ev($1);
 $2 = ((($1)) + 329760|0);
 __ZN16SearchPrivateKeyILj128EEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($__os,$__str) {
 $__os = $__os|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__os;
 $1 = $__str;
 $2 = $0;
 $3 = $1;
 $4 = $1;
 $5 = (__ZNSt3__111char_traitsIcE6lengthEPKc($4)|0);
 $6 = (__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($2,$3,$5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_($__os) {
 $__os = $__os|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = sp + 12|0;
 $8 = $__os;
 $9 = $8;
 $10 = $8;
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($11)) + -12|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (($10) + ($13)|0);
 $3 = $14;
 $4 = 10;
 $15 = $3;
 $16 = (__ZNKSt3__18ios_base6getlocEv($15)|0);
 HEAP32[$5>>2] = $16;
 $2 = $5;
 $17 = $2;
 __THREW__ = 0;
 $18 = (invoke_iii(355,($17|0),(10392|0))|0);
 $19 = __THREW__; __THREW__ = 0;
 $20 = $19&1;
 if ($20) {
  $30 = ___cxa_find_matching_catch()|0;
  $31 = tempRet0;
  $6 = $30;
  $7 = $31;
  __ZNSt3__16localeD2Ev($5);
  $32 = $6;
  $33 = $7;
  ___resumeException($32|0);
  // unreachable;
 }
 $21 = $4;
 $0 = $18;
 $1 = $21;
 $22 = $0;
 $23 = HEAP32[$22>>2]|0;
 $24 = ((($23)) + 28|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = $1;
 __THREW__ = 0;
 $27 = (invoke_iii($25|0,($22|0),($26|0))|0);
 $28 = __THREW__; __THREW__ = 0;
 $29 = $28&1;
 if ($29) {
  $30 = ___cxa_find_matching_catch()|0;
  $31 = tempRet0;
  $6 = $30;
  $7 = $31;
  __ZNSt3__16localeD2Ev($5);
  $32 = $6;
  $33 = $7;
  ___resumeException($32|0);
  // unreachable;
 } else {
  __ZNSt3__16localeD2Ev($5);
  (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($9,$27)|0);
  $34 = $8;
  (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($34)|0);
  $35 = $8;
  STACKTOP = sp;return ($35|0);
 }
 return (0)|0;
}
function __GLOBAL__sub_I_test_KryptnosticClient_cpp() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___cxx_global_var_init();
 return;
}
function ___cxx_global_var_init() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_fopen(14867,14880)|0);
 HEAP32[2664>>2] = $0;
 return;
}
function __ZNSt3__111char_traitsIcE6lengthEPKc($__s) {
 $__s = $__s|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__s;
 $1 = $0;
 $2 = (_strlen($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($__os,$__str,$__len) {
 $__os = $__os|0;
 $__str = $__str|0;
 $__len = $__len|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__s = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 108|0;
 $5 = sp + 92|0;
 $__s = sp + 16|0;
 $25 = sp + 4|0;
 $26 = sp;
 $20 = $__os;
 $21 = $__str;
 $22 = $__len;
 $27 = $20;
 __THREW__ = 0;
 invoke_vii(356,($__s|0),($27|0));
 $28 = __THREW__; __THREW__ = 0;
 $29 = $28&1;
 L1: do {
  if ($29) {
   $123 = ___cxa_find_matching_catch(0|0)|0;
   $124 = tempRet0;
   $23 = $123;
   $24 = $124;
  } else {
   $19 = $__s;
   $30 = $19;
   $31 = HEAP8[$30>>0]|0;
   $32 = $31&1;
   do {
    if ($32) {
     $33 = $20;
     $17 = $25;
     $18 = $33;
     $34 = $17;
     $35 = $18;
     $36 = HEAP32[$35>>2]|0;
     $37 = ((($36)) + -12|0);
     $38 = HEAP32[$37>>2]|0;
     $39 = (($35) + ($38)|0);
     $16 = $39;
     $40 = $16;
     $15 = $40;
     $41 = $15;
     $42 = ((($41)) + 24|0);
     $43 = HEAP32[$42>>2]|0;
     HEAP32[$34>>2] = $43;
     $44 = $21;
     $45 = $20;
     $46 = HEAP32[$45>>2]|0;
     $47 = ((($46)) + -12|0);
     $48 = HEAP32[$47>>2]|0;
     $49 = (($45) + ($48)|0);
     $10 = $49;
     $50 = $10;
     $51 = ((($50)) + 4|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = $52 & 176;
     $54 = ($53|0)==(32);
     $55 = $21;
     $56 = $22;
     $57 = (($55) + ($56)|0);
     $58 = $54 ? $57 : $55;
     $59 = $21;
     $60 = $22;
     $61 = (($59) + ($60)|0);
     $62 = $20;
     $63 = HEAP32[$62>>2]|0;
     $64 = ((($63)) + -12|0);
     $65 = HEAP32[$64>>2]|0;
     $66 = (($62) + ($65)|0);
     $67 = $20;
     $68 = HEAP32[$67>>2]|0;
     $69 = ((($68)) + -12|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = (($67) + ($70)|0);
     $8 = $71;
     $72 = $8;
     $73 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
     $74 = ((($72)) + 76|0);
     $75 = HEAP32[$74>>2]|0;
     $76 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii($73,$75)|0);
     do {
      if ($76) {
       $3 = $72;
       $4 = 32;
       $77 = $3;
       __THREW__ = 0;
       $78 = (invoke_ii(357,($77|0))|0);
       $79 = __THREW__; __THREW__ = 0;
       $80 = $79&1;
       if ($80) {
        label = 13;
       } else {
        HEAP32[$5>>2] = $78;
        $2 = $5;
        $81 = $2;
        __THREW__ = 0;
        $82 = (invoke_iii(355,($81|0),(10392|0))|0);
        $83 = __THREW__; __THREW__ = 0;
        $84 = $83&1;
        if (!($84)) {
         $85 = $4;
         $0 = $82;
         $1 = $85;
         $86 = $0;
         $87 = HEAP32[$86>>2]|0;
         $88 = ((($87)) + 28|0);
         $89 = HEAP32[$88>>2]|0;
         $90 = $1;
         __THREW__ = 0;
         $91 = (invoke_iii($89|0,($86|0),($90|0))|0);
         $92 = __THREW__; __THREW__ = 0;
         $93 = $92&1;
         if (!($93)) {
          __ZNSt3__16localeD2Ev($5);
          $98 = $91 << 24 >> 24;
          $99 = ((($72)) + 76|0);
          HEAP32[$99>>2] = $98;
          label = 9;
          break;
         }
        }
        $94 = ___cxa_find_matching_catch(0|0)|0;
        $95 = tempRet0;
        $6 = $94;
        $7 = $95;
        __ZNSt3__16localeD2Ev($5);
        $96 = $6;
        $97 = $7;
        $eh$lpad$body$index2Z2D = $97;$eh$lpad$body$indexZ2D = $96;
       }
      } else {
       label = 9;
      }
     } while(0);
     if ((label|0) == 9) {
      $100 = ((($72)) + 76|0);
      $101 = HEAP32[$100>>2]|0;
      $102 = $101&255;
      __THREW__ = 0;
      ;HEAP32[$$byval_copy>>2]=HEAP32[$25>>2]|0;
      $103 = (invoke_iiiiiii(358,($$byval_copy|0),($44|0),($58|0),($61|0),($66|0),($102|0))|0);
      $104 = __THREW__; __THREW__ = 0;
      $105 = $104&1;
      if ($105) {
       label = 13;
      } else {
       HEAP32[$26>>2] = $103;
       $9 = $26;
       $106 = $9;
       $107 = HEAP32[$106>>2]|0;
       $108 = ($107|0)==(0|0);
       if (!($108)) {
        break;
       }
       $109 = $20;
       $110 = HEAP32[$109>>2]|0;
       $111 = ((($110)) + -12|0);
       $112 = HEAP32[$111>>2]|0;
       $113 = (($109) + ($112)|0);
       $13 = $113;
       $14 = 5;
       $114 = $13;
       $115 = $14;
       $11 = $114;
       $12 = $115;
       $116 = $11;
       $117 = ((($116)) + 16|0);
       $118 = HEAP32[$117>>2]|0;
       $119 = $12;
       $120 = $118 | $119;
       __THREW__ = 0;
       invoke_vii(359,($116|0),($120|0));
       $121 = __THREW__; __THREW__ = 0;
       $122 = $121&1;
       if ($122) {
        label = 13;
       } else {
        break;
       }
      }
     }
     if ((label|0) == 13) {
      $125 = ___cxa_find_matching_catch(0|0)|0;
      $126 = tempRet0;
      $eh$lpad$body$index2Z2D = $126;$eh$lpad$body$indexZ2D = $125;
     }
     $23 = $eh$lpad$body$indexZ2D;
     $24 = $eh$lpad$body$index2Z2D;
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
     break L1;
    }
   } while(0);
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $135 = $20;
   STACKTOP = sp;return ($135|0);
  }
 } while(0);
 $127 = $23;
 (___cxa_begin_catch(($127|0))|0);
 $128 = $20;
 $129 = HEAP32[$128>>2]|0;
 $130 = ((($129)) + -12|0);
 $131 = HEAP32[$130>>2]|0;
 $132 = (($128) + ($131)|0);
 __THREW__ = 0;
 invoke_vi(360,($132|0));
 $133 = __THREW__; __THREW__ = 0;
 $134 = $133&1;
 if (!($134)) {
  ___cxa_end_catch();
  $135 = $20;
  STACKTOP = sp;return ($135|0);
 }
 $136 = ___cxa_find_matching_catch()|0;
 $137 = tempRet0;
 $23 = $136;
 $24 = $137;
 __THREW__ = 0;
 invoke_v(361);
 $138 = __THREW__; __THREW__ = 0;
 $139 = $138&1;
 if ($139) {
  $142 = ___cxa_find_matching_catch(0|0)|0;
  $143 = tempRet0;
  ___clang_call_terminate($142);
  // unreachable;
 } else {
  $140 = $23;
  $141 = $24;
  ___resumeException($140|0);
  // unreachable;
 }
 return (0)|0;
}
function __ZNSt3__111char_traitsIcE3eofEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__111char_traitsIcE11eq_int_typeEii($__c1,$__c2) {
 $__c1 = $__c1|0;
 $__c2 = $__c2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__c1;
 $1 = $__c2;
 $2 = $0;
 $3 = $1;
 $4 = ($2|0)==($3|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($__s,$__ob,$__op,$__oe,$__iob,$__fl) {
 $__s = $__s|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__np = 0, $__ns = 0, $__r$i = 0, $__sp = 0, $__sz = 0, $cleanup$dest = 0, $switch = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $32 = sp + 52|0;
 $__sp = sp + 12|0;
 $33 = $__ob;
 $34 = $__op;
 $35 = $__oe;
 $36 = $__iob;
 $37 = $__fl;
 $41 = HEAP32[$__s>>2]|0;
 $42 = ($41|0)==(0|0);
 if ($42) {
  ;HEAP32[$32>>2]=HEAP32[$__s>>2]|0;
  $150 = HEAP32[$32>>2]|0;
  STACKTOP = sp;return ($150|0);
 }
 $43 = $35;
 $44 = $33;
 $45 = $43;
 $46 = $44;
 $47 = (($45) - ($46))|0;
 $__sz = $47;
 $48 = $36;
 $31 = $48;
 $49 = $31;
 $50 = ((($49)) + 12|0);
 $51 = HEAP32[$50>>2]|0;
 $__ns = $51;
 $52 = $__ns;
 $53 = $__sz;
 $54 = ($52|0)>($53|0);
 if ($54) {
  $55 = $__sz;
  $56 = $__ns;
  $57 = (($56) - ($55))|0;
  $__ns = $57;
 } else {
  $__ns = 0;
 }
 $58 = $34;
 $59 = $33;
 $60 = $58;
 $61 = $59;
 $62 = (($60) - ($61))|0;
 $__np = $62;
 $63 = $__np;
 $64 = ($63|0)>(0);
 if ($64) {
  $65 = HEAP32[$__s>>2]|0;
  $66 = $33;
  $67 = $__np;
  $23 = $65;
  $24 = $66;
  $25 = $67;
  $68 = $23;
  $69 = HEAP32[$68>>2]|0;
  $70 = ((($69)) + 48|0);
  $71 = HEAP32[$70>>2]|0;
  $72 = $24;
  $73 = $25;
  $74 = (FUNCTION_TABLE_iiii[$71 & 1023]($68,$72,$73)|0);
  $75 = $__np;
  $76 = ($74|0)!=($75|0);
  if ($76) {
   HEAP32[$__s>>2] = 0;
   ;HEAP32[$32>>2]=HEAP32[$__s>>2]|0;
   $150 = HEAP32[$32>>2]|0;
   STACKTOP = sp;return ($150|0);
  }
 }
 $77 = $__ns;
 $78 = ($77|0)>(0);
 if ($78) {
  $79 = $__ns;
  $80 = $37;
  $20 = $__sp;
  $21 = $79;
  $22 = $80;
  $81 = $20;
  $19 = $81;
  $82 = $19;
  $18 = $82;
  $83 = $18;
  $17 = $83;
  $84 = $21;
  $85 = $22;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($81,$84,$85);
  $86 = HEAP32[$__s>>2]|0;
  $16 = $__sp;
  $87 = $16;
  $15 = $87;
  $88 = $15;
  $14 = $88;
  $89 = $14;
  $13 = $89;
  $90 = $13;
  $12 = $90;
  $91 = $12;
  $92 = HEAP8[$91>>0]|0;
  $93 = $92&255;
  $94 = $93 & 1;
  $95 = ($94|0)!=(0);
  if ($95) {
   $6 = $88;
   $96 = $6;
   $5 = $96;
   $97 = $5;
   $4 = $97;
   $98 = $4;
   $99 = ((($98)) + 8|0);
   $100 = HEAP32[$99>>2]|0;
   $107 = $100;
  } else {
   $11 = $88;
   $101 = $11;
   $10 = $101;
   $102 = $10;
   $9 = $102;
   $103 = $9;
   $104 = ((($103)) + 1|0);
   $8 = $104;
   $105 = $8;
   $7 = $105;
   $106 = $7;
   $107 = $106;
  }
  $3 = $107;
  $108 = $3;
  $109 = $__ns;
  $0 = $86;
  $1 = $108;
  $2 = $109;
  $110 = $0;
  $111 = HEAP32[$110>>2]|0;
  $112 = ((($111)) + 48|0);
  $113 = HEAP32[$112>>2]|0;
  $114 = $1;
  $115 = $2;
  __THREW__ = 0;
  $116 = (invoke_iiii($113|0,($110|0),($114|0),($115|0))|0);
  $117 = __THREW__; __THREW__ = 0;
  $118 = $117&1;
  if ($118) {
   $121 = ___cxa_find_matching_catch()|0;
   $122 = tempRet0;
   $38 = $121;
   $39 = $122;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sp);
   $123 = $38;
   $124 = $39;
   ___resumeException($123|0);
   // unreachable;
  }
  $119 = $__ns;
  $120 = ($116|0)!=($119|0);
  if ($120) {
   HEAP32[$__s>>2] = 0;
   ;HEAP32[$32>>2]=HEAP32[$__s>>2]|0;
   $40 = 1;
  } else {
   $40 = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sp);
  $cleanup$dest = $40;
  $switch = ($cleanup$dest>>>0)<(1);
  if (!($switch)) {
   $150 = HEAP32[$32>>2]|0;
   STACKTOP = sp;return ($150|0);
  }
 }
 $125 = $35;
 $126 = $34;
 $127 = $125;
 $128 = $126;
 $129 = (($127) - ($128))|0;
 $__np = $129;
 $130 = $__np;
 $131 = ($130|0)>(0);
 if ($131) {
  $132 = HEAP32[$__s>>2]|0;
  $133 = $34;
  $134 = $__np;
  $26 = $132;
  $27 = $133;
  $28 = $134;
  $135 = $26;
  $136 = HEAP32[$135>>2]|0;
  $137 = ((($136)) + 48|0);
  $138 = HEAP32[$137>>2]|0;
  $139 = $27;
  $140 = $28;
  $141 = (FUNCTION_TABLE_iiii[$138 & 1023]($135,$139,$140)|0);
  $142 = $__np;
  $143 = ($141|0)!=($142|0);
  if ($143) {
   HEAP32[$__s>>2] = 0;
   ;HEAP32[$32>>2]=HEAP32[$__s>>2]|0;
   $150 = HEAP32[$32>>2]|0;
   STACKTOP = sp;return ($150|0);
  }
 }
 $144 = $36;
 $29 = $144;
 $30 = 0;
 $145 = $29;
 $146 = ((($145)) + 12|0);
 $147 = HEAP32[$146>>2]|0;
 $__r$i = $147;
 $148 = $30;
 $149 = ((($145)) + 12|0);
 HEAP32[$149>>2] = $148;
 ;HEAP32[$32>>2]=HEAP32[$__s>>2]|0;
 $150 = HEAP32[$32>>2]|0;
 STACKTOP = sp;return ($150|0);
}
function ___clang_call_terminate($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (___cxa_begin_catch(($0|0))|0);
 __ZSt9terminatev();
 // unreachable;
}
function __ZN10PrivateKeyILj128EEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN9BitMatrixILj128ELj128EE22randomInvertibleMatrixEv($1);
 $2 = ((($1)) + 2048|0);
 __ZN9BitMatrixILj128ELj128EE22randomInvertibleMatrixEv($2);
 $3 = ((($1)) + 4096|0);
 __ZN9BitMatrixILj256ELj256EE22randomInvertibleMatrixEv($3);
 $4 = ((($1)) + 12288|0);
 __ZN19MultiQuadTupleChainILj128ELj2EE25randomMultiQuadTupleChainEv($4);
 __ZN10PrivateKeyILj128EE31generateObfuscationMatrixChainsEv($1);
 STACKTOP = sp;return;
}
function __ZN16SearchPrivateKeyILj128EEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN9BitMatrixILj128ELj128EE22randomInvertibleMatrixEv($1);
 $2 = ((($1)) + 2048|0);
 __ZN9BitMatrixILj128ELj128EE22randomInvertibleMatrixEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj128ELj128EE22randomInvertibleMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0.0, $13 = 0, $130 = 0, $131 = 0, $132 = 0.0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $A = 0;
 var $T = 0, $it = 0, $leadingZeroes = 0, $minorIndex = 0, $r = 0, $usedRows = 0, $v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4576|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $11 = sp + 4512|0;
 $22 = sp + 4464|0;
 $26 = sp + 4448|0;
 $27 = sp + 4444|0;
 $32 = sp + 4424|0;
 $34 = sp + 4416|0;
 $40 = sp + 4392|0;
 $42 = sp + 4384|0;
 $50 = sp + 4352|0;
 $54 = sp + 4336|0;
 $55 = sp + 4332|0;
 $60 = sp + 4312|0;
 $63 = sp + 4300|0;
 $66 = sp + 4288|0;
 $69 = sp + 4276|0;
 $77 = sp + 4244|0;
 $80 = sp + 4232|0;
 $84 = sp + 4216|0;
 $87 = sp + 4204|0;
 $A = sp + 2080|0;
 $T = sp + 32|0;
 $usedRows = sp + 4172|0;
 $v = sp + 16|0;
 $r = sp + 4152|0;
 $93 = sp;
 $it = sp + 4148|0;
 $94 = sp + 4144|0;
 $95 = sp + 4136|0;
 $96 = sp + 4132|0;
 __ZN9BitMatrixILj128ELj128EE10zeroMatrixEv($A);
 __ZN9BitMatrixILj128ELj128EE10zeroMatrixEv($T);
 $90 = $usedRows;
 $98 = $90;
 $89 = $98;
 $99 = $89;
 $88 = $99;
 $100 = $88;
 $86 = $100;
 HEAP32[$87>>2] = 0;
 $101 = $86;
 $85 = $87;
 $102 = $85;
 $103 = HEAP32[$102>>2]|0;
 $83 = $101;
 HEAP32[$84>>2] = $103;
 $104 = $83;
 $82 = $84;
 $105 = $82;
 $106 = HEAP32[$105>>2]|0;
 HEAP32[$104>>2] = $106;
 $107 = ((($104)) + 4|0);
 $81 = $107;
 $108 = $81;
 $79 = $108;
 HEAP32[$80>>2] = 0;
 $109 = $79;
 $78 = $80;
 $110 = $78;
 $111 = HEAP32[$110>>2]|0;
 $76 = $109;
 HEAP32[$77>>2] = $111;
 $112 = $76;
 $75 = $112;
 $74 = $77;
 $113 = $74;
 $114 = HEAP32[$113>>2]|0;
 HEAP32[$112>>2] = $114;
 $115 = ((($99)) + 8|0);
 $73 = $115;
 $116 = $73;
 $72 = $116;
 $117 = $72;
 $71 = $117;
 $70 = $117;
 $118 = $70;
 HEAP32[$118>>2] = 0;
 $119 = ((($99)) + 12|0);
 $68 = $119;
 HEAP32[$69>>2] = 0;
 $120 = $68;
 $67 = $69;
 $121 = $67;
 $122 = HEAP32[$121>>2]|0;
 $65 = $120;
 HEAP32[$66>>2] = $122;
 $123 = $65;
 $64 = $66;
 $124 = $64;
 $125 = HEAP32[$124>>2]|0;
 HEAP32[$123>>2] = $125;
 $126 = ((($99)) + 16|0);
 $62 = $126;
 HEAPF32[$63>>2] = 1.0;
 $127 = $62;
 $61 = $63;
 $128 = $61;
 $129 = +HEAPF32[$128>>2];
 $59 = $127;
 HEAPF32[$60>>2] = $129;
 $130 = $59;
 $58 = $60;
 $131 = $58;
 $132 = +HEAPF32[$131>>2];
 HEAPF32[$130>>2] = $132;
 $leadingZeroes = 0;
 $minorIndex = 0;
 L1: while(1) {
  $133 = $minorIndex;
  $134 = ($133>>>0)<(128);
  if (!($134)) {
   label = 25;
   break;
  }
  $135 = $leadingZeroes;
  __THREW__ = 0;
  invoke_vii(362,($v|0),($135|0));
  $136 = __THREW__; __THREW__ = 0;
  $137 = $136&1;
  if ($137) {
   break;
  }
  __THREW__ = 0;
  $138 = (invoke_ii(363,($v|0))|0);
  $139 = __THREW__; __THREW__ = 0;
  $140 = $139&1;
  if ($140) {
   break;
  }
  HEAP32[$r>>2] = $138;
  while(1) {
   $56 = $usedRows;
   $57 = $r;
   $141 = $56;
   $142 = $57;
   $52 = $141;
   $53 = $142;
   $143 = $52;
   $144 = $53;
   __THREW__ = 0;
   $145 = (invoke_iii(364,($143|0),($144|0))|0);
   $146 = __THREW__; __THREW__ = 0;
   $147 = $146&1;
   if ($147) {
    break L1;
   }
   HEAP32[$54>>2] = $145;
   $51 = $143;
   $48 = $50;
   $49 = 0;
   $148 = $48;
   $149 = $49;
   HEAP32[$148>>2] = $149;
   $150 = HEAP32[$50>>2]|0;
   HEAP32[$55>>2] = $150;
   $46 = $54;
   $47 = $55;
   $151 = $46;
   $152 = $47;
   $44 = $151;
   $45 = $152;
   $153 = $44;
   $154 = HEAP32[$153>>2]|0;
   $155 = $45;
   $156 = HEAP32[$155>>2]|0;
   $157 = ($154|0)==($156|0);
   $158 = $157 ^ 1;
   $159 = $158&1;
   $160 = ($159>>>0)>(0);
   $161 = HEAP32[$r>>2]|0;
   $162 = ($161|0)==(-1);
   $163 = $160 ? 1 : $162;
   if (!($163)) {
    break;
   }
   $164 = $leadingZeroes;
   __THREW__ = 0;
   invoke_vii(362,($93|0),($164|0));
   $165 = __THREW__; __THREW__ = 0;
   $166 = $165&1;
   if ($166) {
    break L1;
   }
   __THREW__ = 0;
   (invoke_iii(365,($v|0),($93|0))|0);
   $167 = __THREW__; __THREW__ = 0;
   $168 = $167&1;
   if ($168) {
    break L1;
   }
   __THREW__ = 0;
   $169 = (invoke_ii(363,($v|0))|0);
   $170 = __THREW__; __THREW__ = 0;
   $171 = $170&1;
   if ($171) {
    break L1;
   }
   HEAP32[$r>>2] = $169;
  }
  $176 = $minorIndex;
  $177 = HEAP32[$r>>2]|0;
  __THREW__ = 0;
  invoke_viii(366,($A|0),($176|0),($177|0));
  $178 = __THREW__; __THREW__ = 0;
  $179 = $178&1;
  if ($179) {
   break;
  }
  $43 = $usedRows;
  $180 = $43;
  $41 = $180;
  $181 = $41;
  $182 = ((($181)) + 8|0);
  $39 = $182;
  $183 = $39;
  $38 = $183;
  $184 = $38;
  $185 = HEAP32[$184>>2]|0;
  $36 = $40;
  $37 = $185;
  $186 = $36;
  $187 = $37;
  HEAP32[$186>>2] = $187;
  $188 = HEAP32[$40>>2]|0;
  HEAP32[$42>>2] = $188;
  $189 = HEAP32[$42>>2]|0;
  HEAP32[$it>>2] = $189;
  while(1) {
   $35 = $usedRows;
   $190 = $35;
   $33 = $190;
   $30 = $32;
   $31 = 0;
   $191 = $30;
   $192 = $31;
   HEAP32[$191>>2] = $192;
   $193 = HEAP32[$32>>2]|0;
   HEAP32[$34>>2] = $193;
   $194 = HEAP32[$34>>2]|0;
   HEAP32[$94>>2] = $194;
   $14 = $it;
   $15 = $94;
   $195 = $14;
   $196 = $15;
   $12 = $195;
   $13 = $196;
   $197 = $12;
   $198 = HEAP32[$197>>2]|0;
   $199 = $13;
   $200 = HEAP32[$199>>2]|0;
   $201 = ($198|0)==($200|0);
   $202 = $201 ^ 1;
   if (!($202)) {
    break;
   }
   $1 = $it;
   $203 = $1;
   $204 = HEAP32[$203>>2]|0;
   $205 = ((($204)) + 8|0);
   $206 = HEAP32[$205>>2]|0;
   __THREW__ = 0;
   invoke_vii(367,($v|0),($206|0));
   $207 = __THREW__; __THREW__ = 0;
   $208 = $207&1;
   if ($208) {
    break L1;
   }
   $0 = $it;
   $209 = $0;
   $210 = HEAP32[$209>>2]|0;
   $211 = HEAP32[$210>>2]|0;
   HEAP32[$209>>2] = $211;
  }
  $212 = HEAP32[$r>>2]|0;
  __THREW__ = 0;
  invoke_viii(368,($T|0),($212|0),($v|0));
  $213 = __THREW__; __THREW__ = 0;
  $214 = $213&1;
  if ($214) {
   break;
  }
  $9 = $usedRows;
  $10 = $r;
  $215 = $9;
  $216 = $10;
  __THREW__ = 0;
  invoke_viii(369,($11|0),($215|0),($216|0));
  $217 = __THREW__; __THREW__ = 0;
  $218 = $217&1;
  if ($218) {
   break;
  }
  $6 = $95;
  $7 = $11;
  $8 = 0;
  $219 = $6;
  $220 = $7;
  $5 = $220;
  $221 = $5;
  $2 = $219;
  $3 = $221;
  $222 = $2;
  $223 = $3;
  $224 = HEAP32[$223>>2]|0;
  HEAP32[$222>>2] = $224;
  $225 = ((($219)) + 4|0);
  $226 = $7;
  $227 = ((($226)) + 4|0);
  $4 = $227;
  $228 = $4;
  $229 = HEAP8[$228>>0]|0;
  $230 = $229&1;
  $231 = $230&1;
  HEAP8[$225>>0] = $231;
  while(1) {
   $232 = $leadingZeroes;
   HEAP32[$96>>2] = $232;
   $28 = $usedRows;
   $29 = $96;
   $233 = $28;
   $234 = $29;
   $24 = $233;
   $25 = $234;
   $235 = $24;
   $236 = $25;
   __THREW__ = 0;
   $237 = (invoke_iii(364,($235|0),($236|0))|0);
   $238 = __THREW__; __THREW__ = 0;
   $239 = $238&1;
   if ($239) {
    break L1;
   }
   HEAP32[$26>>2] = $237;
   $23 = $235;
   $20 = $22;
   $21 = 0;
   $240 = $20;
   $241 = $21;
   HEAP32[$240>>2] = $241;
   $242 = HEAP32[$22>>2]|0;
   HEAP32[$27>>2] = $242;
   $18 = $26;
   $19 = $27;
   $243 = $18;
   $244 = $19;
   $16 = $243;
   $17 = $244;
   $245 = $16;
   $246 = HEAP32[$245>>2]|0;
   $247 = $17;
   $248 = HEAP32[$247>>2]|0;
   $249 = ($246|0)==($248|0);
   $250 = $249 ^ 1;
   $251 = $250&1;
   $252 = ($251>>>0)>(0);
   if (!($252)) {
    break;
   }
   $253 = $leadingZeroes;
   $254 = (($253) + 1)|0;
   $leadingZeroes = $254;
  }
  $255 = $minorIndex;
  $256 = (($255) + 1)|0;
  $minorIndex = $256;
 }
 if ((label|0) == 25) {
  __THREW__ = 0;
  invoke_viii(370,($agg$result|0),($A|0),($T|0));
  $257 = __THREW__; __THREW__ = 0;
  $258 = $257&1;
  if (!($258)) {
   $97 = 1;
   __ZNSt3__113unordered_setIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEED2Ev($usedRows);
   STACKTOP = sp;return;
  }
 }
 $172 = ___cxa_find_matching_catch()|0;
 $173 = tempRet0;
 $91 = $172;
 $92 = $173;
 __ZNSt3__113unordered_setIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEED2Ev($usedRows);
 $174 = $91;
 $175 = $92;
 ___resumeException($174|0);
 // unreachable;
}
function __ZN9BitMatrixILj128ELj128EE10zeroMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $i = 0;
 while(1) {
  $0 = $i;
  $1 = ($0>>>0)<(128);
  if (!($1)) {
   break;
  }
  $2 = $i;
  $3 = (($agg$result) + ($2<<4)|0);
  $4 = (__ZN9BitVectorILj128EE10zeroVectorEv()|0);
  (__ZN9BitVectorILj128EEaSERKS0_($3,$4)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN9BitVectorILj128EE25randomVectorLeadingZeroesEj($agg$result,$n) {
 $agg$result = $agg$result|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $n;
 __ZN9BitVectorILj128EE12randomVectorEv($agg$result);
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = $0;
  $3 = ($1>>>0)<($2>>>0);
  if (!($3)) {
   break;
  }
  $4 = $i;
  __ZN9BitVectorILj128EE5clearEj($agg$result,$4);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZNK9BitVectorILj128EE11getFirstOneEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $1;
 $i = 0;
 while(1) {
  $3 = $i;
  $4 = ($3>>>0)<(128);
  if (!($4)) {
   label = 6;
   break;
  }
  $5 = $i;
  $6 = (__ZNK9BitVectorILj128EE3getEj($2,$5)|0);
  $7 = $i;
  if ($6) {
   label = 4;
   break;
  }
  $8 = (($7) + 1)|0;
  $i = $8;
 }
 if ((label|0) == 4) {
  $0 = $7;
  $9 = $0;
  STACKTOP = sp;return ($9|0);
 }
 else if ((label|0) == 6) {
  $0 = -1;
  $9 = $0;
  STACKTOP = sp;return ($9|0);
 }
 return (0)|0;
}
function __ZNKSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE4findIiEENS_21__hash_const_iteratorIPNS_11__hash_nodeIiPvEEEERKT_($this,$__k) {
 $this = $this|0;
 $__k = $__k|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__bc = 0, $__chash = 0;
 var $__hash = 0, $__nd = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $27 = sp + 44|0;
 $32 = sp + 24|0;
 $33 = $this;
 $34 = $__k;
 $35 = $33;
 $31 = $35;
 $36 = $31;
 $37 = ((($36)) + 12|0);
 $30 = $37;
 $38 = $30;
 $29 = $38;
 $39 = $29;
 $40 = $34;
 $41 = HEAP32[$40>>2]|0;
 $0 = $39;
 $1 = $41;
 $42 = $1;
 $__hash = $42;
 $8 = $35;
 $43 = $8;
 $7 = $43;
 $44 = $7;
 $6 = $44;
 $45 = $6;
 $5 = $45;
 $46 = $5;
 $47 = ((($46)) + 4|0);
 $4 = $47;
 $48 = $4;
 $3 = $48;
 $49 = $3;
 $2 = $49;
 $50 = $2;
 $51 = HEAP32[$50>>2]|0;
 $__bc = $51;
 $52 = $__bc;
 $53 = ($52|0)!=(0);
 L1: do {
  if ($53) {
   $54 = $__hash;
   $55 = $__bc;
   $9 = $54;
   $10 = $55;
   $56 = $10;
   $57 = $10;
   $58 = (($57) - 1)|0;
   $59 = $56 & $58;
   $60 = ($59|0)!=(0);
   $61 = $9;
   $62 = $10;
   if ($60) {
    $65 = (($61>>>0) % ($62>>>0))&-1;
    $66 = $65;
   } else {
    $63 = (($62) - 1)|0;
    $64 = $61 & $63;
    $66 = $64;
   }
   $__chash = $66;
   $67 = $__chash;
   $13 = $35;
   $14 = $67;
   $68 = $13;
   $69 = $14;
   $12 = $68;
   $70 = $12;
   $11 = $70;
   $71 = $11;
   $72 = HEAP32[$71>>2]|0;
   $73 = (($72) + ($69<<2)|0);
   $74 = HEAP32[$73>>2]|0;
   $__nd = $74;
   $75 = $__nd;
   $76 = ($75|0)!=(0|0);
   if ($76) {
    $77 = $__nd;
    $78 = HEAP32[$77>>2]|0;
    $__nd = $78;
    while(1) {
     $79 = $__nd;
     $80 = ($79|0)!=(0|0);
     if (!($80)) {
      break L1;
     }
     $81 = $__nd;
     $82 = ((($81)) + 4|0);
     $83 = HEAP32[$82>>2]|0;
     $84 = $__bc;
     $15 = $83;
     $16 = $84;
     $85 = $16;
     $86 = $16;
     $87 = (($86) - 1)|0;
     $88 = $85 & $87;
     $89 = ($88|0)!=(0);
     $90 = $15;
     $91 = $16;
     if ($89) {
      $94 = (($90>>>0) % ($91>>>0))&-1;
      $97 = $94;
     } else {
      $92 = (($91) - 1)|0;
      $93 = $90 & $92;
      $97 = $93;
     }
     $95 = $__chash;
     $96 = ($97|0)==($95|0);
     if (!($96)) {
      break L1;
     }
     $19 = $35;
     $98 = $19;
     $99 = ((($98)) + 16|0);
     $18 = $99;
     $100 = $18;
     $17 = $100;
     $101 = $17;
     $102 = $__nd;
     $103 = ((($102)) + 8|0);
     $104 = $34;
     $20 = $101;
     $21 = $103;
     $22 = $104;
     $105 = $21;
     $106 = HEAP32[$105>>2]|0;
     $107 = $22;
     $108 = HEAP32[$107>>2]|0;
     $109 = ($106|0)==($108|0);
     $110 = $__nd;
     if ($109) {
      break;
     }
     $113 = HEAP32[$110>>2]|0;
     $__nd = $113;
    }
    $23 = $32;
    $24 = $110;
    $111 = $23;
    $112 = $24;
    HEAP32[$111>>2] = $112;
    $117 = HEAP32[$32>>2]|0;
    STACKTOP = sp;return ($117|0);
   }
  }
 } while(0);
 $28 = $35;
 $25 = $27;
 $26 = 0;
 $114 = $25;
 $115 = $26;
 HEAP32[$114>>2] = $115;
 $116 = HEAP32[$27>>2]|0;
 HEAP32[$32>>2] = $116;
 $117 = HEAP32[$32>>2]|0;
 STACKTOP = sp;return ($117|0);
}
function __ZN9BitVectorILj128EEaSERKS0_($this,$rhs) {
 $this = $this|0;
 $rhs = $rhs|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $rhs;
 $2 = $0;
 $i = 0;
 while(1) {
  $3 = $i;
  $4 = ($3>>>0)<(2);
  if (!($4)) {
   break;
  }
  $5 = $i;
  $6 = $1;
  $7 = (($6) + ($5<<3)|0);
  $8 = $7;
  $9 = $8;
  $10 = HEAP32[$9>>2]|0;
  $11 = (($8) + 4)|0;
  $12 = $11;
  $13 = HEAP32[$12>>2]|0;
  $14 = $i;
  $15 = (($2) + ($14<<3)|0);
  $16 = $15;
  $17 = $16;
  HEAP32[$17>>2] = $10;
  $18 = (($16) + 4)|0;
  $19 = $18;
  HEAP32[$19>>2] = $13;
  $20 = $i;
  $21 = (($20) + 1)|0;
  $i = $21;
 }
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__113unordered_setIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEED2Ev($1);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj128ELj128EE3setEjj($this,$rowIndex,$colIndex) {
 $this = $this|0;
 $rowIndex = $rowIndex|0;
 $colIndex = $colIndex|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $rowIndex;
 $2 = $colIndex;
 $3 = $0;
 $4 = $1;
 $5 = (($3) + ($4<<4)|0);
 $6 = $2;
 __ZN9BitVectorILj128EE3setEj($5,$6);
 STACKTOP = sp;return;
}
function __ZN9BitVectorILj128EE5clearEj($this,$n) {
 $this = $this|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $n;
 $2 = $0;
 $3 = $1;
 $4 = $3 & 63;
 $5 = (_bitshift64Shl(1,0,($4|0))|0);
 $6 = tempRet0;
 $7 = $5 ^ -1;
 $8 = $6 ^ -1;
 $9 = $1;
 $10 = $9 >>> 6;
 $11 = (($2) + ($10<<3)|0);
 $12 = $11;
 $13 = $12;
 $14 = HEAP32[$13>>2]|0;
 $15 = (($12) + 4)|0;
 $16 = $15;
 $17 = HEAP32[$16>>2]|0;
 $18 = $14 & $7;
 $19 = $17 & $8;
 $20 = $11;
 $21 = $20;
 HEAP32[$21>>2] = $18;
 $22 = (($20) + 4)|0;
 $23 = $22;
 HEAP32[$23>>2] = $19;
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj128ELj128EE6setRowEjRK9BitVectorILj128EE($this,$rowIndex,$v) {
 $this = $this|0;
 $rowIndex = $rowIndex|0;
 $v = $v|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $rowIndex;
 $2 = $v;
 $3 = $0;
 $4 = $1;
 $5 = (($3) + ($4<<4)|0);
 $6 = $2;
 (__ZN9BitVectorILj128EEaSERKS0_($5,$6)|0);
 STACKTOP = sp;return;
}
function __ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE15__insert_uniqueERKi($agg$result,$this,$__x) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0.0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0.0, $255 = 0, $256 = 0.0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0.0, $262 = 0.0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0.0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0.0, $293 = 0.0, $294 = 0.0, $295 = 0.0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0;
 var $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0;
 var $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__bc = 0, $__chash = 0, $__h = 0, $__hash = 0, $__inserted = 0, $__nd = 0, $__pn = 0, $__t$i = 0, $__tmp$i$i = 0, $__tmp$i$i1 = 0, $or$cond = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 720|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $31 = sp + 16|0;
 $34 = sp + 719|0;
 $66 = sp + 8|0;
 $69 = sp + 718|0;
 $140 = sp;
 $143 = sp + 717|0;
 $__inserted = sp + 716|0;
 $__h = sp + 44|0;
 $164 = sp + 40|0;
 $167 = sp + 28|0;
 $168 = sp + 20|0;
 $162 = $this;
 $163 = $__x;
 $169 = $162;
 $161 = $169;
 $170 = $161;
 $171 = ((($170)) + 12|0);
 $160 = $171;
 $172 = $160;
 $159 = $172;
 $173 = $159;
 $174 = $163;
 $175 = HEAP32[$174>>2]|0;
 $125 = $173;
 $126 = $175;
 $176 = $126;
 $__hash = $176;
 $52 = $169;
 $177 = $52;
 $51 = $177;
 $178 = $51;
 $50 = $178;
 $179 = $50;
 $49 = $179;
 $180 = $49;
 $181 = ((($180)) + 4|0);
 $48 = $181;
 $182 = $48;
 $47 = $182;
 $183 = $47;
 $46 = $183;
 $184 = $46;
 $185 = HEAP32[$184>>2]|0;
 $__bc = $185;
 HEAP8[$__inserted>>0] = 0;
 $186 = $__bc;
 $187 = ($186|0)!=(0);
 L1: do {
  if ($187) {
   $188 = $__hash;
   $189 = $__bc;
   $35 = $188;
   $36 = $189;
   $190 = $36;
   $191 = $36;
   $192 = (($191) - 1)|0;
   $193 = $190 & $192;
   $194 = ($193|0)!=(0);
   $195 = $35;
   $196 = $36;
   if ($194) {
    $199 = (($195>>>0) % ($196>>>0))&-1;
    $200 = $199;
   } else {
    $197 = (($196) - 1)|0;
    $198 = $195 & $197;
    $200 = $198;
   }
   $__chash = $200;
   $201 = $__chash;
   $23 = $169;
   $24 = $201;
   $202 = $23;
   $203 = $24;
   $22 = $202;
   $204 = $22;
   $21 = $204;
   $205 = $21;
   $206 = HEAP32[$205>>2]|0;
   $207 = (($206) + ($203<<2)|0);
   $208 = HEAP32[$207>>2]|0;
   $__nd = $208;
   $209 = $__nd;
   $210 = ($209|0)!=(0|0);
   if ($210) {
    $211 = $__nd;
    $212 = HEAP32[$211>>2]|0;
    $__nd = $212;
    while(1) {
     $213 = $__nd;
     $214 = ($213|0)!=(0|0);
     if (!($214)) {
      break L1;
     }
     $215 = $__nd;
     $216 = ((($215)) + 4|0);
     $217 = HEAP32[$216>>2]|0;
     $218 = $__bc;
     $6 = $217;
     $7 = $218;
     $219 = $7;
     $220 = $7;
     $221 = (($220) - 1)|0;
     $222 = $219 & $221;
     $223 = ($222|0)!=(0);
     $224 = $6;
     $225 = $7;
     if ($223) {
      $228 = (($224>>>0) % ($225>>>0))&-1;
      $231 = $228;
     } else {
      $226 = (($225) - 1)|0;
      $227 = $224 & $226;
      $231 = $227;
     }
     $229 = $__chash;
     $230 = ($231|0)==($229|0);
     if (!($230)) {
      break L1;
     }
     $2 = $169;
     $232 = $2;
     $233 = ((($232)) + 16|0);
     $1 = $233;
     $234 = $1;
     $0 = $234;
     $235 = $0;
     $236 = $__nd;
     $237 = ((($236)) + 8|0);
     $238 = $163;
     $3 = $235;
     $4 = $237;
     $5 = $238;
     $239 = $4;
     $240 = HEAP32[$239>>2]|0;
     $241 = $5;
     $242 = HEAP32[$241>>2]|0;
     $243 = ($240|0)==($242|0);
     if ($243) {
      break;
     }
     $244 = $__nd;
     $245 = HEAP32[$244>>2]|0;
     $__nd = $245;
    }
    $495 = $__nd;
    $152 = $168;
    $153 = $495;
    $496 = $152;
    $497 = $153;
    HEAP32[$496>>2] = $497;
    $156 = $agg$result;
    $157 = $168;
    $158 = $__inserted;
    $498 = $156;
    $499 = $157;
    $155 = $499;
    $500 = $155;
    ;HEAP32[$498>>2]=HEAP32[$500>>2]|0;
    $501 = ((($498)) + 4|0);
    $502 = $158;
    $154 = $502;
    $503 = $154;
    $504 = HEAP8[$503>>0]|0;
    $505 = $504&1;
    $506 = $505&1;
    HEAP8[$501>>0] = $506;
    STACKTOP = sp;return;
   }
  }
 } while(0);
 $246 = $163;
 $247 = $__hash;
 __ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE16__construct_nodeERKij($__h,$169,$246,$247);
 $10 = $169;
 $248 = $10;
 $249 = ((($248)) + 12|0);
 $9 = $249;
 $250 = $9;
 $8 = $250;
 $251 = $8;
 $252 = HEAP32[$251>>2]|0;
 $253 = (($252) + 1)|0;
 $254 = (+($253>>>0));
 $255 = $__bc;
 $256 = (+($255>>>0));
 $13 = $169;
 $257 = $13;
 $258 = ((($257)) + 16|0);
 $12 = $258;
 $259 = $12;
 $11 = $259;
 $260 = $11;
 $261 = +HEAPF32[$260>>2];
 $262 = $256 * $261;
 $263 = $254 > $262;
 $264 = $__bc;
 $265 = ($264|0)==(0);
 $or$cond = $263 | $265;
 do {
  if ($or$cond) {
   $266 = $__bc;
   $267 = $266<<1;
   $268 = $__bc;
   $14 = $268;
   $269 = $14;
   $270 = ($269>>>0)>(2);
   if ($270) {
    $271 = $14;
    $272 = $14;
    $273 = (($272) - 1)|0;
    $274 = $271 & $273;
    $275 = ($274|0)!=(0);
    $276 = $275 ^ 1;
    $278 = $276;
   } else {
    $278 = 0;
   }
   $277 = $278 ^ 1;
   $279 = $277&1;
   $280 = (($267) + ($279))|0;
   HEAP32[$164>>2] = $280;
   $17 = $169;
   $281 = $17;
   $282 = ((($281)) + 12|0);
   $16 = $282;
   $283 = $16;
   $15 = $283;
   $284 = $15;
   $285 = HEAP32[$284>>2]|0;
   $286 = (($285) + 1)|0;
   $287 = (+($286>>>0));
   $20 = $169;
   $288 = $20;
   $289 = ((($288)) + 16|0);
   $19 = $289;
   $290 = $19;
   $18 = $290;
   $291 = $18;
   $292 = +HEAPF32[$291>>2];
   $293 = $287 / $292;
   $25 = $293;
   $294 = $25;
   $295 = (+Math_ceil((+$294)));
   $296 = (~~(($295))>>>0);
   HEAP32[$167>>2] = $296;
   $32 = $164;
   $33 = $167;
   $297 = $32;
   $298 = $33;
   ;HEAP8[$31>>0]=HEAP8[$34>>0]|0;
   $29 = $297;
   $30 = $298;
   $299 = $29;
   $300 = $30;
   $26 = $31;
   $27 = $299;
   $28 = $300;
   $301 = $27;
   $302 = HEAP32[$301>>2]|0;
   $303 = $28;
   $304 = HEAP32[$303>>2]|0;
   $305 = ($302>>>0)<($304>>>0);
   $306 = $30;
   $307 = $29;
   $308 = $305 ? $306 : $307;
   $309 = HEAP32[$308>>2]|0;
   __THREW__ = 0;
   invoke_vii(371,($169|0),($309|0));
   $310 = __THREW__; __THREW__ = 0;
   $311 = $310&1;
   if (!($311)) {
    $43 = $169;
    $312 = $43;
    $42 = $312;
    $313 = $42;
    $41 = $313;
    $314 = $41;
    $40 = $314;
    $315 = $40;
    $316 = ((($315)) + 4|0);
    $39 = $316;
    $317 = $39;
    $38 = $317;
    $318 = $38;
    $37 = $318;
    $319 = $37;
    $320 = HEAP32[$319>>2]|0;
    $__bc = $320;
    $321 = $__hash;
    $322 = $__bc;
    $44 = $321;
    $45 = $322;
    $323 = $45;
    $324 = $45;
    $325 = (($324) - 1)|0;
    $326 = $323 & $325;
    $327 = ($326|0)!=(0);
    $328 = $44;
    $329 = $45;
    if ($327) {
     $332 = (($328>>>0) % ($329>>>0))&-1;
     $333 = $332;
    } else {
     $330 = (($329) - 1)|0;
     $331 = $328 & $330;
     $333 = $331;
    }
    $__chash = $333;
    break;
   }
   $334 = ___cxa_find_matching_catch()|0;
   $335 = tempRet0;
   $165 = $334;
   $166 = $335;
   $77 = $__h;
   $336 = $77;
   $75 = $336;
   $76 = 0;
   $337 = $75;
   $74 = $337;
   $338 = $74;
   $73 = $338;
   $339 = $73;
   $340 = HEAP32[$339>>2]|0;
   $__tmp$i$i1 = $340;
   $341 = $76;
   $56 = $337;
   $342 = $56;
   $55 = $342;
   $343 = $55;
   HEAP32[$343>>2] = $341;
   $344 = $__tmp$i$i1;
   $345 = ($344|0)!=(0|0);
   if (!($345)) {
    $507 = $165;
    $508 = $166;
    ___resumeException($507|0);
    // unreachable;
   }
   $54 = $337;
   $346 = $54;
   $53 = $346;
   $347 = $53;
   $348 = ((($347)) + 4|0);
   $349 = $__tmp$i$i1;
   $71 = $348;
   $72 = $349;
   $350 = $71;
   $351 = ((($350)) + 4|0);
   $352 = HEAP8[$351>>0]|0;
   $353 = $352&1;
   if ($353) {
    $354 = HEAP32[$350>>2]|0;
    $355 = $72;
    $356 = ((($355)) + 8|0);
    $70 = $356;
    $357 = $70;
    $67 = $354;
    $68 = $357;
    $358 = $67;
    $359 = $68;
    ;HEAP8[$66>>0]=HEAP8[$69>>0]|0;
    $64 = $358;
    $65 = $359;
   }
   $360 = $72;
   $361 = ($360|0)!=(0|0);
   if (!($361)) {
    $507 = $165;
    $508 = $166;
    ___resumeException($507|0);
    // unreachable;
   }
   $362 = HEAP32[$350>>2]|0;
   $363 = $72;
   $61 = $362;
   $62 = $363;
   $63 = 1;
   $364 = $61;
   $365 = $62;
   $366 = $63;
   $58 = $364;
   $59 = $365;
   $60 = $366;
   $367 = $59;
   $57 = $367;
   $368 = $57;
   __ZdlPv($368);
   $507 = $165;
   $508 = $166;
   ___resumeException($507|0);
   // unreachable;
  }
 } while(0);
 $369 = $__chash;
 $80 = $169;
 $81 = $369;
 $370 = $80;
 $371 = $81;
 $79 = $370;
 $372 = $79;
 $78 = $372;
 $373 = $78;
 $374 = HEAP32[$373>>2]|0;
 $375 = (($374) + ($371<<2)|0);
 $376 = HEAP32[$375>>2]|0;
 $__pn = $376;
 $377 = $__pn;
 $378 = ($377|0)==(0|0);
 if ($378) {
  $379 = ((($169)) + 8|0);
  $83 = $379;
  $380 = $83;
  $82 = $380;
  $381 = $82;
  $85 = $381;
  $382 = $85;
  $84 = $382;
  $383 = $84;
  $__pn = $383;
  $384 = $__pn;
  $385 = HEAP32[$384>>2]|0;
  $88 = $__h;
  $386 = $88;
  $87 = $386;
  $387 = $87;
  $86 = $387;
  $388 = $86;
  $389 = HEAP32[$388>>2]|0;
  HEAP32[$389>>2] = $385;
  $91 = $__h;
  $390 = $91;
  $90 = $390;
  $391 = $90;
  $89 = $391;
  $392 = $89;
  $393 = HEAP32[$392>>2]|0;
  $394 = $__pn;
  HEAP32[$394>>2] = $393;
  $395 = $__pn;
  $396 = $__chash;
  $94 = $169;
  $95 = $396;
  $397 = $94;
  $398 = $95;
  $93 = $397;
  $399 = $93;
  $92 = $399;
  $400 = $92;
  $401 = HEAP32[$400>>2]|0;
  $402 = (($401) + ($398<<2)|0);
  HEAP32[$402>>2] = $395;
  $98 = $__h;
  $403 = $98;
  $97 = $403;
  $404 = $97;
  $96 = $404;
  $405 = $96;
  $406 = HEAP32[$405>>2]|0;
  $407 = HEAP32[$406>>2]|0;
  $408 = ($407|0)!=(0|0);
  if ($408) {
   $101 = $__h;
   $409 = $101;
   $100 = $409;
   $410 = $100;
   $99 = $410;
   $411 = $99;
   $412 = HEAP32[$411>>2]|0;
   $104 = $__h;
   $413 = $104;
   $103 = $413;
   $414 = $103;
   $102 = $414;
   $415 = $102;
   $416 = HEAP32[$415>>2]|0;
   $417 = HEAP32[$416>>2]|0;
   $418 = ((($417)) + 4|0);
   $419 = HEAP32[$418>>2]|0;
   $420 = $__bc;
   $105 = $419;
   $106 = $420;
   $421 = $106;
   $422 = $106;
   $423 = (($422) - 1)|0;
   $424 = $421 & $423;
   $425 = ($424|0)!=(0);
   $426 = $105;
   $427 = $106;
   if ($425) {
    $430 = (($426>>>0) % ($427>>>0))&-1;
    $431 = $430;
   } else {
    $428 = (($427) - 1)|0;
    $429 = $426 & $428;
    $431 = $429;
   }
   $109 = $169;
   $110 = $431;
   $432 = $109;
   $433 = $110;
   $108 = $432;
   $434 = $108;
   $107 = $434;
   $435 = $107;
   $436 = HEAP32[$435>>2]|0;
   $437 = (($436) + ($433<<2)|0);
   HEAP32[$437>>2] = $412;
  }
 } else {
  $438 = $__pn;
  $439 = HEAP32[$438>>2]|0;
  $113 = $__h;
  $440 = $113;
  $112 = $440;
  $441 = $112;
  $111 = $441;
  $442 = $111;
  $443 = HEAP32[$442>>2]|0;
  HEAP32[$443>>2] = $439;
  $116 = $__h;
  $444 = $116;
  $115 = $444;
  $445 = $115;
  $114 = $445;
  $446 = $114;
  $447 = HEAP32[$446>>2]|0;
  $448 = $__pn;
  HEAP32[$448>>2] = $447;
 }
 $121 = $__h;
 $449 = $121;
 $120 = $449;
 $450 = $120;
 $119 = $450;
 $451 = $119;
 $452 = HEAP32[$451>>2]|0;
 $__t$i = $452;
 $118 = $449;
 $453 = $118;
 $117 = $453;
 $454 = $117;
 HEAP32[$454>>2] = 0;
 $455 = $__t$i;
 $__nd = $455;
 $124 = $169;
 $456 = $124;
 $457 = ((($456)) + 12|0);
 $123 = $457;
 $458 = $123;
 $122 = $458;
 $459 = $122;
 $460 = HEAP32[$459>>2]|0;
 $461 = (($460) + 1)|0;
 HEAP32[$459>>2] = $461;
 HEAP8[$__inserted>>0] = 1;
 $151 = $__h;
 $462 = $151;
 $149 = $462;
 $150 = 0;
 $463 = $149;
 $148 = $463;
 $464 = $148;
 $147 = $464;
 $465 = $147;
 $466 = HEAP32[$465>>2]|0;
 $__tmp$i$i = $466;
 $467 = $150;
 $130 = $463;
 $468 = $130;
 $129 = $468;
 $469 = $129;
 HEAP32[$469>>2] = $467;
 $470 = $__tmp$i$i;
 $471 = ($470|0)!=(0|0);
 if (!($471)) {
  $495 = $__nd;
  $152 = $168;
  $153 = $495;
  $496 = $152;
  $497 = $153;
  HEAP32[$496>>2] = $497;
  $156 = $agg$result;
  $157 = $168;
  $158 = $__inserted;
  $498 = $156;
  $499 = $157;
  $155 = $499;
  $500 = $155;
  ;HEAP32[$498>>2]=HEAP32[$500>>2]|0;
  $501 = ((($498)) + 4|0);
  $502 = $158;
  $154 = $502;
  $503 = $154;
  $504 = HEAP8[$503>>0]|0;
  $505 = $504&1;
  $506 = $505&1;
  HEAP8[$501>>0] = $506;
  STACKTOP = sp;return;
 }
 $128 = $463;
 $472 = $128;
 $127 = $472;
 $473 = $127;
 $474 = ((($473)) + 4|0);
 $475 = $__tmp$i$i;
 $145 = $474;
 $146 = $475;
 $476 = $145;
 $477 = ((($476)) + 4|0);
 $478 = HEAP8[$477>>0]|0;
 $479 = $478&1;
 if ($479) {
  $480 = HEAP32[$476>>2]|0;
  $481 = $146;
  $482 = ((($481)) + 8|0);
  $144 = $482;
  $483 = $144;
  $141 = $480;
  $142 = $483;
  $484 = $141;
  $485 = $142;
  ;HEAP8[$140>>0]=HEAP8[$143>>0]|0;
  $138 = $484;
  $139 = $485;
 }
 $486 = $146;
 $487 = ($486|0)!=(0|0);
 if (!($487)) {
  $495 = $__nd;
  $152 = $168;
  $153 = $495;
  $496 = $152;
  $497 = $153;
  HEAP32[$496>>2] = $497;
  $156 = $agg$result;
  $157 = $168;
  $158 = $__inserted;
  $498 = $156;
  $499 = $157;
  $155 = $499;
  $500 = $155;
  ;HEAP32[$498>>2]=HEAP32[$500>>2]|0;
  $501 = ((($498)) + 4|0);
  $502 = $158;
  $154 = $502;
  $503 = $154;
  $504 = HEAP8[$503>>0]|0;
  $505 = $504&1;
  $506 = $505&1;
  HEAP8[$501>>0] = $506;
  STACKTOP = sp;return;
 }
 $488 = HEAP32[$476>>2]|0;
 $489 = $146;
 $135 = $488;
 $136 = $489;
 $137 = 1;
 $490 = $135;
 $491 = $136;
 $492 = $137;
 $132 = $490;
 $133 = $491;
 $134 = $492;
 $493 = $133;
 $131 = $493;
 $494 = $131;
 __ZdlPv($494);
 $495 = $__nd;
 $152 = $168;
 $153 = $495;
 $496 = $152;
 $497 = $153;
 HEAP32[$496>>2] = $497;
 $156 = $agg$result;
 $157 = $168;
 $158 = $__inserted;
 $498 = $156;
 $499 = $157;
 $155 = $499;
 $500 = $155;
 ;HEAP32[$498>>2]=HEAP32[$500>>2]|0;
 $501 = ((($498)) + 4|0);
 $502 = $158;
 $154 = $502;
 $503 = $154;
 $504 = HEAP8[$503>>0]|0;
 $505 = $504&1;
 $506 = $505&1;
 HEAP8[$501>>0] = $506;
 STACKTOP = sp;return;
}
function __ZNK9BitMatrixILj128ELj128EEmlILj128EEEKS_ILj128EXT_EERS3_($agg$result,$this,$rhs) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $rhs = $rhs|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $j = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $rhs;
 $2 = $0;
 __ZN9BitMatrixILj128ELj128EE10zeroMatrixEv($agg$result);
 $i = 0;
 while(1) {
  $3 = $i;
  $4 = ($3>>>0)<(128);
  if (!($4)) {
   break;
  }
  $j = 0;
  while(1) {
   $5 = $j;
   $6 = ($5>>>0)<(128);
   $7 = $i;
   if (!($6)) {
    break;
   }
   $8 = $j;
   $9 = (__ZNK9BitMatrixILj128ELj128EE3getEjj($2,$7,$8)|0);
   if ($9) {
    $10 = $i;
    $11 = (__ZN9BitMatrixILj128ELj128EEixEj($agg$result,$10)|0);
    $12 = $1;
    $13 = $j;
    $14 = (__ZNK9BitMatrixILj128ELj128EEixEj($12,$13)|0);
    (__ZN9BitVectorILj128EEeOERKS0_($11,$14)|0);
   }
   $15 = $j;
   $16 = (($15) + 1)|0;
   $j = $16;
  }
  $17 = (($7) + 1)|0;
  $i = $17;
 }
 STACKTOP = sp;return;
}
function __ZNK9BitMatrixILj128ELj128EE3getEjj($this,$rowIndex,$colIndex) {
 $this = $this|0;
 $rowIndex = $rowIndex|0;
 $colIndex = $colIndex|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $rowIndex;
 $2 = $colIndex;
 $3 = $0;
 $4 = $1;
 $5 = (($3) + ($4<<4)|0);
 $6 = $2;
 $7 = (__ZNK9BitVectorILj128EE3getEj($5,$6)|0);
 STACKTOP = sp;return ($7|0);
}
function __ZN9BitMatrixILj128ELj128EEixEj($this,$rowIndex) {
 $this = $this|0;
 $rowIndex = $rowIndex|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $rowIndex;
 $2 = $0;
 $3 = $1;
 $4 = (($2) + ($3<<4)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK9BitMatrixILj128ELj128EEixEj($this,$rowIndex) {
 $this = $this|0;
 $rowIndex = $rowIndex|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $rowIndex;
 $2 = $0;
 $3 = $1;
 $4 = (($2) + ($3<<4)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN9BitVectorILj128EEeOERKS0_($this,$rhs) {
 $this = $this|0;
 $rhs = $rhs|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $rhs;
 $2 = $0;
 $i = 0;
 while(1) {
  $3 = $i;
  $4 = ($3>>>0)<(2);
  if (!($4)) {
   break;
  }
  $5 = $i;
  $6 = $1;
  $7 = (($6) + ($5<<3)|0);
  $8 = $7;
  $9 = $8;
  $10 = HEAP32[$9>>2]|0;
  $11 = (($8) + 4)|0;
  $12 = $11;
  $13 = HEAP32[$12>>2]|0;
  $14 = $i;
  $15 = (($2) + ($14<<3)|0);
  $16 = $15;
  $17 = $16;
  $18 = HEAP32[$17>>2]|0;
  $19 = (($16) + 4)|0;
  $20 = $19;
  $21 = HEAP32[$20>>2]|0;
  $22 = $18 ^ $10;
  $23 = $21 ^ $13;
  $24 = $15;
  $25 = $24;
  HEAP32[$25>>2] = $22;
  $26 = (($24) + 4)|0;
  $27 = $26;
  HEAP32[$27>>2] = $23;
  $28 = $i;
  $29 = (($28) + 1)|0;
  $i = $29;
 }
 STACKTOP = sp;return ($2|0);
}
function __ZNK9BitVectorILj128EE3getEj($this,$n) {
 $this = $this|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $n;
 $2 = $0;
 $3 = $1;
 $4 = $3 >>> 6;
 $5 = (($2) + ($4<<3)|0);
 $6 = $5;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = (($6) + 4)|0;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = $1;
 $13 = $12 & 63;
 $14 = (_bitshift64Shl(1,0,($13|0))|0);
 $15 = tempRet0;
 $16 = $8 & $14;
 $17 = $11 & $15;
 $18 = ($16|0)!=(0);
 $19 = ($17|0)!=(0);
 $20 = $18 | $19;
 STACKTOP = sp;return ($20|0);
}
function __ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE16__construct_nodeERKij($agg$result,$this,$__v,$__hash) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__v = $__v|0;
 $__hash = $__hash|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__h = 0, $__na = 0, $__t$i$i = 0, $__tmp$i$i1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 496|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $12 = sp + 40|0;
 $17 = sp + 494|0;
 $33 = sp + 364|0;
 $34 = sp + 32|0;
 $37 = sp + 352|0;
 $38 = sp + 344|0;
 $39 = sp + 24|0;
 $50 = sp + 288|0;
 $55 = sp + 268|0;
 $56 = sp + 16|0;
 $59 = sp + 256|0;
 $60 = sp + 248|0;
 $61 = sp + 8|0;
 $66 = sp + 224|0;
 $80 = sp;
 $83 = sp + 493|0;
 $__h = sp + 56|0;
 $107 = sp + 48|0;
 $104 = $this;
 $105 = $__v;
 $106 = $__hash;
 $109 = $104;
 $103 = $109;
 $110 = $103;
 $111 = ((($110)) + 8|0);
 $102 = $111;
 $112 = $102;
 $101 = $112;
 $113 = $101;
 $__na = $113;
 $114 = $__na;
 $99 = $114;
 $100 = 1;
 $115 = $99;
 $116 = $100;
 $96 = $115;
 $97 = $116;
 $98 = 0;
 $117 = $97;
 $118 = ($117*12)|0;
 $95 = $118;
 $119 = $95;
 $120 = (__Znwj($119)|0);
 $121 = $__na;
 $92 = $107;
 $93 = $121;
 $94 = 0;
 $122 = $92;
 $123 = $93;
 HEAP32[$122>>2] = $123;
 $124 = ((($122)) + 4|0);
 $125 = $94;
 $126 = $125&1;
 $127 = $126&1;
 HEAP8[$124>>0] = $127;
 $63 = $__h;
 $64 = $120;
 $65 = $107;
 $128 = $63;
 $129 = $64;
 $130 = $65;
 $62 = $130;
 $131 = $62;
 ;HEAP32[$66>>2]=HEAP32[$131>>2]|0;HEAP32[$66+4>>2]=HEAP32[$131+4>>2]|0;
 ;HEAP8[$61>>0]=HEAP8[$66>>0]|0;HEAP8[$61+1>>0]=HEAP8[$66+1>>0]|0;HEAP8[$61+2>>0]=HEAP8[$66+2>>0]|0;HEAP8[$61+3>>0]=HEAP8[$66+3>>0]|0;HEAP8[$61+4>>0]=HEAP8[$66+4>>0]|0;HEAP8[$61+5>>0]=HEAP8[$66+5>>0]|0;HEAP8[$61+6>>0]=HEAP8[$66+6>>0]|0;HEAP8[$61+7>>0]=HEAP8[$66+7>>0]|0;
 $58 = $128;
 HEAP32[$59>>2] = $129;
 $132 = $58;
 $57 = $59;
 $133 = $57;
 $134 = HEAP32[$133>>2]|0;
 $51 = $61;
 $135 = $51;
 ;HEAP32[$60>>2]=HEAP32[$135>>2]|0;HEAP32[$60+4>>2]=HEAP32[$135+4>>2]|0;
 ;HEAP8[$56>>0]=HEAP8[$60>>0]|0;HEAP8[$56+1>>0]=HEAP8[$60+1>>0]|0;HEAP8[$56+2>>0]=HEAP8[$60+2>>0]|0;HEAP8[$56+3>>0]=HEAP8[$60+3>>0]|0;HEAP8[$56+4>>0]=HEAP8[$60+4>>0]|0;HEAP8[$56+5>>0]=HEAP8[$60+5>>0]|0;HEAP8[$56+6>>0]=HEAP8[$60+6>>0]|0;HEAP8[$56+7>>0]=HEAP8[$60+7>>0]|0;
 $54 = $132;
 HEAP32[$55>>2] = $134;
 $136 = $54;
 $53 = $55;
 $137 = $53;
 $138 = HEAP32[$137>>2]|0;
 HEAP32[$136>>2] = $138;
 $139 = ((($136)) + 4|0);
 $52 = $56;
 $140 = $52;
 ;HEAP32[$139>>2]=HEAP32[$140>>2]|0;HEAP32[$139+4>>2]=HEAP32[$140+4>>2]|0;
 $141 = $__na;
 $2 = $__h;
 $142 = $2;
 $1 = $142;
 $143 = $1;
 $0 = $143;
 $144 = $0;
 $145 = HEAP32[$144>>2]|0;
 $146 = ((($145)) + 8|0);
 $3 = $146;
 $147 = $3;
 $148 = $105;
 $14 = $141;
 $15 = $147;
 $16 = $148;
 $149 = $14;
 $150 = $15;
 $151 = $16;
 $13 = $151;
 $152 = $13;
 ;HEAP8[$12>>0]=HEAP8[$17>>0]|0;
 $9 = $149;
 $10 = $150;
 $11 = $152;
 $153 = $9;
 $154 = $10;
 $155 = $11;
 $8 = $155;
 $156 = $8;
 $5 = $153;
 $6 = $154;
 $7 = $156;
 $157 = $6;
 $158 = $7;
 $4 = $158;
 $159 = $4;
 $160 = HEAP32[$159>>2]|0;
 HEAP32[$157>>2] = $160;
 $20 = $__h;
 $161 = $20;
 $19 = $161;
 $162 = $19;
 $18 = $162;
 $163 = $18;
 $164 = ((($163)) + 4|0);
 $165 = ((($164)) + 4|0);
 HEAP8[$165>>0] = 1;
 $166 = $106;
 $23 = $__h;
 $167 = $23;
 $22 = $167;
 $168 = $22;
 $21 = $168;
 $169 = $21;
 $170 = HEAP32[$169>>2]|0;
 $171 = ((($170)) + 4|0);
 HEAP32[$171>>2] = $166;
 $26 = $__h;
 $172 = $26;
 $25 = $172;
 $173 = $25;
 $24 = $173;
 $174 = $24;
 $175 = HEAP32[$174>>2]|0;
 HEAP32[$175>>2] = 0;
 $27 = $__h;
 $176 = $27;
 $48 = $agg$result;
 $49 = $176;
 $177 = $48;
 $178 = $49;
 $47 = $178;
 $179 = $47;
 $46 = $179;
 $180 = $46;
 $45 = $180;
 $181 = $45;
 $182 = HEAP32[$181>>2]|0;
 $__t$i$i = $182;
 $44 = $179;
 $183 = $44;
 $43 = $183;
 $184 = $43;
 HEAP32[$184>>2] = 0;
 $185 = $__t$i$i;
 $186 = $49;
 $42 = $186;
 $187 = $42;
 $41 = $187;
 $188 = $41;
 $40 = $188;
 $189 = $40;
 $190 = ((($189)) + 4|0);
 $28 = $190;
 $191 = $28;
 ;HEAP32[$50>>2]=HEAP32[$191>>2]|0;HEAP32[$50+4>>2]=HEAP32[$191+4>>2]|0;
 ;HEAP8[$39>>0]=HEAP8[$50>>0]|0;HEAP8[$39+1>>0]=HEAP8[$50+1>>0]|0;HEAP8[$39+2>>0]=HEAP8[$50+2>>0]|0;HEAP8[$39+3>>0]=HEAP8[$50+3>>0]|0;HEAP8[$39+4>>0]=HEAP8[$50+4>>0]|0;HEAP8[$39+5>>0]=HEAP8[$50+5>>0]|0;HEAP8[$39+6>>0]=HEAP8[$50+6>>0]|0;HEAP8[$39+7>>0]=HEAP8[$50+7>>0]|0;
 $36 = $177;
 HEAP32[$37>>2] = $185;
 $192 = $36;
 $35 = $37;
 $193 = $35;
 $194 = HEAP32[$193>>2]|0;
 $29 = $39;
 $195 = $29;
 ;HEAP32[$38>>2]=HEAP32[$195>>2]|0;HEAP32[$38+4>>2]=HEAP32[$195+4>>2]|0;
 ;HEAP8[$34>>0]=HEAP8[$38>>0]|0;HEAP8[$34+1>>0]=HEAP8[$38+1>>0]|0;HEAP8[$34+2>>0]=HEAP8[$38+2>>0]|0;HEAP8[$34+3>>0]=HEAP8[$38+3>>0]|0;HEAP8[$34+4>>0]=HEAP8[$38+4>>0]|0;HEAP8[$34+5>>0]=HEAP8[$38+5>>0]|0;HEAP8[$34+6>>0]=HEAP8[$38+6>>0]|0;HEAP8[$34+7>>0]=HEAP8[$38+7>>0]|0;
 $32 = $192;
 HEAP32[$33>>2] = $194;
 $196 = $32;
 $31 = $33;
 $197 = $31;
 $198 = HEAP32[$197>>2]|0;
 HEAP32[$196>>2] = $198;
 $199 = ((($196)) + 4|0);
 $30 = $34;
 $200 = $30;
 ;HEAP32[$199>>2]=HEAP32[$200>>2]|0;HEAP32[$199+4>>2]=HEAP32[$200+4>>2]|0;
 $108 = 1;
 $91 = $__h;
 $201 = $91;
 $89 = $201;
 $90 = 0;
 $202 = $89;
 $88 = $202;
 $203 = $88;
 $87 = $203;
 $204 = $87;
 $205 = HEAP32[$204>>2]|0;
 $__tmp$i$i1 = $205;
 $206 = $90;
 $70 = $202;
 $207 = $70;
 $69 = $207;
 $208 = $69;
 HEAP32[$208>>2] = $206;
 $209 = $__tmp$i$i1;
 $210 = ($209|0)!=(0|0);
 if (!($210)) {
  STACKTOP = sp;return;
 }
 $68 = $202;
 $211 = $68;
 $67 = $211;
 $212 = $67;
 $213 = ((($212)) + 4|0);
 $214 = $__tmp$i$i1;
 $85 = $213;
 $86 = $214;
 $215 = $85;
 $216 = ((($215)) + 4|0);
 $217 = HEAP8[$216>>0]|0;
 $218 = $217&1;
 if ($218) {
  $219 = HEAP32[$215>>2]|0;
  $220 = $86;
  $221 = ((($220)) + 8|0);
  $84 = $221;
  $222 = $84;
  $81 = $219;
  $82 = $222;
  $223 = $81;
  $224 = $82;
  ;HEAP8[$80>>0]=HEAP8[$83>>0]|0;
  $78 = $223;
  $79 = $224;
 }
 $225 = $86;
 $226 = ($225|0)!=(0|0);
 if (!($226)) {
  STACKTOP = sp;return;
 }
 $227 = HEAP32[$215>>2]|0;
 $228 = $86;
 $75 = $227;
 $76 = $228;
 $77 = 1;
 $229 = $75;
 $230 = $76;
 $231 = $77;
 $72 = $229;
 $73 = $230;
 $74 = $231;
 $232 = $73;
 $71 = $232;
 $233 = $71;
 __ZdlPv($233);
 STACKTOP = sp;return;
}
function __ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE6rehashEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0.0, $102 = 0.0, $103 = 0.0, $104 = 0.0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $13 = 0, $14 = 0, $15 = 0.0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0.0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0.0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0.0, $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0.0, $97 = 0, $98 = 0, $99 = 0, $__bc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $21 = sp;
 $24 = sp + 144|0;
 $34 = sp + 12|0;
 $35 = sp + 4|0;
 $33 = $this;
 HEAP32[$34>>2] = $__n;
 $36 = $33;
 $37 = HEAP32[$34>>2]|0;
 $38 = ($37|0)==(1);
 if ($38) {
  HEAP32[$34>>2] = 2;
 } else {
  $39 = HEAP32[$34>>2]|0;
  $40 = HEAP32[$34>>2]|0;
  $41 = (($40) - 1)|0;
  $42 = $39 & $41;
  $43 = ($42|0)!=(0);
  if ($43) {
   $44 = HEAP32[$34>>2]|0;
   $45 = (__ZNSt3__112__next_primeEj($44)|0);
   HEAP32[$34>>2] = $45;
  }
 }
 $32 = $36;
 $46 = $32;
 $31 = $46;
 $47 = $31;
 $30 = $47;
 $48 = $30;
 $29 = $48;
 $49 = $29;
 $50 = ((($49)) + 4|0);
 $28 = $50;
 $51 = $28;
 $27 = $51;
 $52 = $27;
 $26 = $52;
 $53 = $26;
 $54 = HEAP32[$53>>2]|0;
 $__bc = $54;
 $55 = HEAP32[$34>>2]|0;
 $56 = $__bc;
 $57 = ($55>>>0)>($56>>>0);
 $58 = HEAP32[$34>>2]|0;
 if ($57) {
  __ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE8__rehashEj($36,$58);
  STACKTOP = sp;return;
 }
 $59 = $__bc;
 $60 = ($58>>>0)<($59>>>0);
 if (!($60)) {
  STACKTOP = sp;return;
 }
 $61 = $__bc;
 $25 = $61;
 $62 = $25;
 $63 = ($62>>>0)>(2);
 if ($63) {
  $64 = $25;
  $65 = $25;
  $66 = (($65) - 1)|0;
  $67 = $64 & $66;
  $68 = ($67|0)!=(0);
  $69 = $68 ^ 1;
  if ($69) {
   $14 = $36;
   $70 = $14;
   $71 = ((($70)) + 12|0);
   $13 = $71;
   $72 = $13;
   $12 = $72;
   $73 = $12;
   $74 = HEAP32[$73>>2]|0;
   $75 = (+($74>>>0));
   $2 = $36;
   $76 = $2;
   $77 = ((($76)) + 16|0);
   $1 = $77;
   $78 = $1;
   $0 = $78;
   $79 = $0;
   $80 = +HEAPF32[$79>>2];
   $81 = $75 / $80;
   $3 = $81;
   $82 = $3;
   $83 = (+Math_ceil((+$82)));
   $84 = (~~(($83))>>>0);
   $5 = $84;
   $85 = $5;
   $86 = (($85) - 1)|0;
   $4 = $86;
   $87 = $4;
   $88 = (Math_clz32(($87|0))|0);
   $89 = (32 - ($88))|0;
   $90 = 1 << $89;
   $107 = $90;
  } else {
   label = 11;
  }
 } else {
  label = 11;
 }
 if ((label|0) == 11) {
  $8 = $36;
  $91 = $8;
  $92 = ((($91)) + 12|0);
  $7 = $92;
  $93 = $7;
  $6 = $93;
  $94 = $6;
  $95 = HEAP32[$94>>2]|0;
  $96 = (+($95>>>0));
  $11 = $36;
  $97 = $11;
  $98 = ((($97)) + 16|0);
  $10 = $98;
  $99 = $10;
  $9 = $99;
  $100 = $9;
  $101 = +HEAPF32[$100>>2];
  $102 = $96 / $101;
  $15 = $102;
  $103 = $15;
  $104 = (+Math_ceil((+$103)));
  $105 = (~~(($104))>>>0);
  $106 = (__ZNSt3__112__next_primeEj($105)|0);
  $107 = $106;
 }
 HEAP32[$35>>2] = $107;
 $22 = $34;
 $23 = $35;
 $108 = $22;
 $109 = $23;
 ;HEAP8[$21>>0]=HEAP8[$24>>0]|0;
 $19 = $108;
 $20 = $109;
 $110 = $19;
 $111 = $20;
 $16 = $21;
 $17 = $110;
 $18 = $111;
 $112 = $17;
 $113 = HEAP32[$112>>2]|0;
 $114 = $18;
 $115 = HEAP32[$114>>2]|0;
 $116 = ($113>>>0)<($115>>>0);
 $117 = $20;
 $118 = $19;
 $119 = $116 ? $117 : $118;
 $120 = HEAP32[$119>>2]|0;
 HEAP32[$34>>2] = $120;
 $121 = HEAP32[$34>>2]|0;
 $122 = $__bc;
 $123 = ($121>>>0)<($122>>>0);
 if (!($123)) {
  STACKTOP = sp;return;
 }
 $124 = HEAP32[$34>>2]|0;
 __ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE8__rehashEj($36,$124);
 STACKTOP = sp;return;
}
function __ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE8__rehashEj($this,$__nbc) {
 $this = $this|0;
 $__nbc = $__nbc|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__chash = 0, $__cp = 0, $__i = 0, $__np = 0, $__npa = 0, $__phash = 0, $__pp = 0, $__tmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 368|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $79 = $this;
 $80 = $__nbc;
 $81 = $79;
 $78 = $81;
 $82 = $78;
 $77 = $82;
 $83 = $77;
 $76 = $83;
 $84 = $76;
 $85 = ((($84)) + 4|0);
 $8 = $85;
 $86 = $8;
 $7 = $86;
 $87 = $7;
 $6 = $87;
 $88 = $6;
 $__npa = $88;
 $89 = $80;
 $90 = ($89>>>0)>(0);
 if ($90) {
  $91 = $__npa;
  $92 = $80;
  $4 = $91;
  $5 = $92;
  $93 = $4;
  $94 = $5;
  $1 = $93;
  $2 = $94;
  $3 = 0;
  $95 = $2;
  $96 = $95<<2;
  $0 = $96;
  $97 = $0;
  $98 = (__Znwj($97)|0);
  $99 = $98;
 } else {
  $99 = 0;
 }
 $30 = $81;
 $31 = $99;
 $100 = $30;
 $29 = $100;
 $101 = $29;
 $28 = $101;
 $102 = $28;
 $103 = HEAP32[$102>>2]|0;
 $__tmp$i = $103;
 $104 = $31;
 $12 = $100;
 $105 = $12;
 $11 = $105;
 $106 = $11;
 HEAP32[$106>>2] = $104;
 $107 = $__tmp$i;
 $108 = ($107|0)!=(0|0);
 if ($108) {
  $10 = $100;
  $109 = $10;
  $9 = $109;
  $110 = $9;
  $111 = ((($110)) + 4|0);
  $112 = $__tmp$i;
  $26 = $111;
  $27 = $112;
  $113 = $26;
  $25 = $113;
  $114 = $25;
  $24 = $114;
  $115 = $24;
  $23 = $115;
  $116 = $23;
  $117 = $27;
  $15 = $113;
  $118 = $15;
  $14 = $118;
  $119 = $14;
  $13 = $119;
  $120 = $13;
  $121 = HEAP32[$120>>2]|0;
  $20 = $116;
  $21 = $117;
  $22 = $121;
  $122 = $20;
  $123 = $21;
  $124 = $22;
  $17 = $122;
  $18 = $123;
  $19 = $124;
  $125 = $18;
  $16 = $125;
  $126 = $16;
  __ZdlPv($126);
 }
 $127 = $80;
 $34 = $81;
 $128 = $34;
 $33 = $128;
 $129 = $33;
 $32 = $129;
 $130 = $32;
 $131 = ((($130)) + 4|0);
 $37 = $131;
 $132 = $37;
 $36 = $132;
 $133 = $36;
 $35 = $133;
 $134 = $35;
 HEAP32[$134>>2] = $127;
 $135 = $80;
 $136 = ($135>>>0)>(0);
 if (!($136)) {
  STACKTOP = sp;return;
 }
 $__i = 0;
 while(1) {
  $137 = $__i;
  $138 = $80;
  $139 = ($137>>>0)<($138>>>0);
  if (!($139)) {
   break;
  }
  $140 = $__i;
  $40 = $81;
  $41 = $140;
  $141 = $40;
  $142 = $41;
  $39 = $141;
  $143 = $39;
  $38 = $143;
  $144 = $38;
  $145 = HEAP32[$144>>2]|0;
  $146 = (($145) + ($142<<2)|0);
  HEAP32[$146>>2] = 0;
  $147 = $__i;
  $148 = (($147) + 1)|0;
  $__i = $148;
 }
 $149 = ((($81)) + 8|0);
 $43 = $149;
 $150 = $43;
 $42 = $150;
 $151 = $42;
 $45 = $151;
 $152 = $45;
 $44 = $152;
 $153 = $44;
 $__pp = $153;
 $154 = $__pp;
 $155 = HEAP32[$154>>2]|0;
 $__cp = $155;
 $156 = $__cp;
 $157 = ($156|0)!=(0|0);
 if (!($157)) {
  STACKTOP = sp;return;
 }
 $158 = $__cp;
 $159 = ((($158)) + 4|0);
 $160 = HEAP32[$159>>2]|0;
 $161 = $80;
 $46 = $160;
 $47 = $161;
 $162 = $47;
 $163 = $47;
 $164 = (($163) - 1)|0;
 $165 = $162 & $164;
 $166 = ($165|0)!=(0);
 $167 = $46;
 $168 = $47;
 if ($166) {
  $171 = (($167>>>0) % ($168>>>0))&-1;
  $172 = $171;
 } else {
  $169 = (($168) - 1)|0;
  $170 = $167 & $169;
  $172 = $170;
 }
 $__chash = $172;
 $173 = $__pp;
 $174 = $__chash;
 $50 = $81;
 $51 = $174;
 $175 = $50;
 $176 = $51;
 $49 = $175;
 $177 = $49;
 $48 = $177;
 $178 = $48;
 $179 = HEAP32[$178>>2]|0;
 $180 = (($179) + ($176<<2)|0);
 HEAP32[$180>>2] = $173;
 $181 = $__chash;
 $__phash = $181;
 $182 = $__cp;
 $__pp = $182;
 $183 = $__cp;
 $184 = HEAP32[$183>>2]|0;
 $__cp = $184;
 while(1) {
  $185 = $__cp;
  $186 = ($185|0)!=(0|0);
  if (!($186)) {
   break;
  }
  $187 = $__cp;
  $188 = ((($187)) + 4|0);
  $189 = HEAP32[$188>>2]|0;
  $190 = $80;
  $52 = $189;
  $53 = $190;
  $191 = $53;
  $192 = $53;
  $193 = (($192) - 1)|0;
  $194 = $191 & $193;
  $195 = ($194|0)!=(0);
  $196 = $52;
  $197 = $53;
  if ($195) {
   $200 = (($196>>>0) % ($197>>>0))&-1;
   $201 = $200;
  } else {
   $198 = (($197) - 1)|0;
   $199 = $196 & $198;
   $201 = $199;
  }
  $__chash = $201;
  $202 = $__chash;
  $203 = $__phash;
  $204 = ($202|0)==($203|0);
  do {
   if ($204) {
    $205 = $__cp;
    $__pp = $205;
   } else {
    $206 = $__chash;
    $56 = $81;
    $57 = $206;
    $207 = $56;
    $208 = $57;
    $55 = $207;
    $209 = $55;
    $54 = $209;
    $210 = $54;
    $211 = HEAP32[$210>>2]|0;
    $212 = (($211) + ($208<<2)|0);
    $213 = HEAP32[$212>>2]|0;
    $214 = ($213|0)==(0|0);
    if ($214) {
     $215 = $__pp;
     $216 = $__chash;
     $60 = $81;
     $61 = $216;
     $217 = $60;
     $218 = $61;
     $59 = $217;
     $219 = $59;
     $58 = $219;
     $220 = $58;
     $221 = HEAP32[$220>>2]|0;
     $222 = (($221) + ($218<<2)|0);
     HEAP32[$222>>2] = $215;
     $223 = $__cp;
     $__pp = $223;
     $224 = $__chash;
     $__phash = $224;
     break;
    }
    $225 = $__cp;
    $__np = $225;
    while(1) {
     $226 = $__np;
     $227 = HEAP32[$226>>2]|0;
     $228 = ($227|0)!=(0|0);
     if (!($228)) {
      break;
     }
     $64 = $81;
     $229 = $64;
     $230 = ((($229)) + 16|0);
     $63 = $230;
     $231 = $63;
     $62 = $231;
     $232 = $62;
     $233 = $__cp;
     $234 = ((($233)) + 8|0);
     $235 = $__np;
     $236 = HEAP32[$235>>2]|0;
     $237 = ((($236)) + 8|0);
     $65 = $232;
     $66 = $234;
     $67 = $237;
     $238 = $66;
     $239 = HEAP32[$238>>2]|0;
     $240 = $67;
     $241 = HEAP32[$240>>2]|0;
     $242 = ($239|0)==($241|0);
     if (!($242)) {
      break;
     }
     $243 = $__np;
     $244 = HEAP32[$243>>2]|0;
     $__np = $244;
    }
    $245 = $__np;
    $246 = HEAP32[$245>>2]|0;
    $247 = $__pp;
    HEAP32[$247>>2] = $246;
    $248 = $__chash;
    $70 = $81;
    $71 = $248;
    $249 = $70;
    $250 = $71;
    $69 = $249;
    $251 = $69;
    $68 = $251;
    $252 = $68;
    $253 = HEAP32[$252>>2]|0;
    $254 = (($253) + ($250<<2)|0);
    $255 = HEAP32[$254>>2]|0;
    $256 = HEAP32[$255>>2]|0;
    $257 = $__np;
    HEAP32[$257>>2] = $256;
    $258 = $__cp;
    $259 = $__chash;
    $74 = $81;
    $75 = $259;
    $260 = $74;
    $261 = $75;
    $73 = $260;
    $262 = $73;
    $72 = $262;
    $263 = $72;
    $264 = HEAP32[$263>>2]|0;
    $265 = (($264) + ($261<<2)|0);
    $266 = HEAP32[$265>>2]|0;
    HEAP32[$266>>2] = $258;
   }
  } while(0);
  $267 = $__pp;
  $268 = HEAP32[$267>>2]|0;
  $__cp = $268;
 }
 STACKTOP = sp;return;
}
function __ZN9BitVectorILj128EE3setEj($this,$n) {
 $this = $this|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $n;
 $2 = $0;
 $3 = $1;
 $4 = $3 & 63;
 $5 = (_bitshift64Shl(1,0,($4|0))|0);
 $6 = tempRet0;
 $7 = $1;
 $8 = $7 >>> 6;
 $9 = (($2) + ($8<<3)|0);
 $10 = $9;
 $11 = $10;
 $12 = HEAP32[$11>>2]|0;
 $13 = (($10) + 4)|0;
 $14 = $13;
 $15 = HEAP32[$14>>2]|0;
 $16 = $12 | $5;
 $17 = $15 | $6;
 $18 = $9;
 $19 = $18;
 HEAP32[$19>>2] = $16;
 $20 = (($18) + 4)|0;
 $21 = $20;
 HEAP32[$21>>2] = $17;
 STACKTOP = sp;return;
}
function __ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__tmp$i$i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $25 = $this;
 $26 = $25;
 $27 = ((($26)) + 8|0);
 $24 = $27;
 $28 = $24;
 $23 = $28;
 $29 = $23;
 $30 = HEAP32[$29>>2]|0;
 __ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE12__deallocateEPNS_11__hash_nodeIiPvEE($26,$30);
 $22 = $26;
 $31 = $22;
 $21 = $31;
 $32 = $21;
 $20 = $32;
 $33 = $20;
 $19 = $33;
 $34 = $19;
 $35 = HEAP32[$34>>2]|0;
 $__tmp$i$i = $35;
 $3 = $32;
 $36 = $3;
 $2 = $36;
 $37 = $2;
 HEAP32[$37>>2] = 0;
 $38 = $__tmp$i$i;
 $39 = ($38|0)!=(0|0);
 if (!($39)) {
  STACKTOP = sp;return;
 }
 $1 = $32;
 $40 = $1;
 $0 = $40;
 $41 = $0;
 $42 = ((($41)) + 4|0);
 $43 = $__tmp$i$i;
 $17 = $42;
 $18 = $43;
 $44 = $17;
 $16 = $44;
 $45 = $16;
 $15 = $45;
 $46 = $15;
 $14 = $46;
 $47 = $14;
 $48 = $18;
 $6 = $44;
 $49 = $6;
 $5 = $49;
 $50 = $5;
 $4 = $50;
 $51 = $4;
 $52 = HEAP32[$51>>2]|0;
 $11 = $47;
 $12 = $48;
 $13 = $52;
 $53 = $11;
 $54 = $12;
 $55 = $13;
 $8 = $53;
 $9 = $54;
 $10 = $55;
 $56 = $9;
 $7 = $56;
 $57 = $7;
 __ZdlPv($57);
 STACKTOP = sp;return;
}
function __ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE12__deallocateEPNS_11__hash_nodeIiPvEE($this,$__np) {
 $this = $this|0;
 $__np = $__np|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $__na = 0, $__next = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp;
 $5 = sp + 80|0;
 $17 = $this;
 $18 = $__np;
 $19 = $17;
 $16 = $19;
 $20 = $16;
 $21 = ((($20)) + 8|0);
 $15 = $21;
 $22 = $15;
 $14 = $22;
 $23 = $14;
 $__na = $23;
 while(1) {
  $24 = $18;
  $25 = ($24|0)!=(0|0);
  if (!($25)) {
   break;
  }
  $26 = $18;
  $27 = HEAP32[$26>>2]|0;
  $__next = $27;
  $28 = $__na;
  $29 = $18;
  $30 = ((($29)) + 8|0);
  $13 = $30;
  $31 = $13;
  $3 = $28;
  $4 = $31;
  $32 = $3;
  $33 = $4;
  ;HEAP8[$2>>0]=HEAP8[$5>>0]|0;
  $0 = $32;
  $1 = $33;
  $34 = $__na;
  $35 = $18;
  $10 = $34;
  $11 = $35;
  $12 = 1;
  $36 = $10;
  $37 = $11;
  $38 = $12;
  $7 = $36;
  $8 = $37;
  $9 = $38;
  $39 = $8;
  $6 = $39;
  $40 = $6;
  __ZdlPv($40);
  $41 = $__next;
  $18 = $41;
 }
 STACKTOP = sp;return;
}
function __ZN9BitVectorILj128EE12randomVectorEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN9BitVectorILj128EE10zeroVectorEv()|0);
 ;HEAP32[$agg$result>>2]=HEAP32[$0>>2]|0;HEAP32[$agg$result+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$agg$result+8>>2]=HEAP32[$0+8>>2]|0;HEAP32[$agg$result+12>>2]=HEAP32[$0+12>>2]|0;
 while(1) {
  $1 = (__ZNK9BitVectorILj128EE6isZeroEv($agg$result)|0);
  if (!($1)) {
   break;
  }
  $2 = HEAP32[2664>>2]|0;
  (_fread($agg$result,8,2,$2)|0);
 }
 return;
}
function __ZN9BitVectorILj128EE10zeroVectorEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN9BitVectorILj128EE4zeroEv(8);
 return (8|0);
}
function __ZNK9BitVectorILj128EE6isZeroEv($this) {
 $this = $this|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 8|0;
 $1 = $this;
 $2 = $1;
 $i = 0;
 while(1) {
  $3 = $i;
  $4 = ($3>>>0)<(2);
  if (!($4)) {
   label = 6;
   break;
  }
  $5 = $i;
  $6 = (($2) + ($5<<3)|0);
  $7 = $6;
  $8 = $7;
  $9 = HEAP32[$8>>2]|0;
  $10 = (($7) + 4)|0;
  $11 = $10;
  $12 = HEAP32[$11>>2]|0;
  $13 = ($9|0)!=(0);
  $14 = ($12|0)!=(0);
  $15 = $13 | $14;
  if ($15) {
   label = 4;
   break;
  }
  $16 = $i;
  $17 = (($16) + 1)|0;
  $i = $17;
 }
 if ((label|0) == 4) {
  $$expand_i1_val = 0;
  HEAP8[$0>>0] = $$expand_i1_val;
  $$pre_trunc = HEAP8[$0>>0]|0;
  $18 = $$pre_trunc&1;
  STACKTOP = sp;return ($18|0);
 }
 else if ((label|0) == 6) {
  $$expand_i1_val2 = 1;
  HEAP8[$0>>0] = $$expand_i1_val2;
  $$pre_trunc = HEAP8[$0>>0]|0;
  $18 = $$pre_trunc&1;
  STACKTOP = sp;return ($18|0);
 }
 return (0)|0;
}
function __ZN9BitVectorILj128EE4zeroEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $i = 0;
 while(1) {
  $2 = $i;
  $3 = ($2>>>0)<(2);
  if (!($3)) {
   break;
  }
  $4 = $i;
  $5 = (($1) + ($4<<3)|0);
  $6 = $5;
  $7 = $6;
  $8 = HEAP32[$7>>2]|0;
  $9 = (($6) + 4)|0;
  $10 = $9;
  $11 = HEAP32[$10>>2]|0;
  $12 = $5;
  $13 = $12;
  HEAP32[$13>>2] = 0;
  $14 = (($12) + 4)|0;
  $15 = $14;
  HEAP32[$15>>2] = 0;
  $16 = $i;
  $17 = (($16) + 1)|0;
  $i = $17;
 }
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj256ELj256EE22randomInvertibleMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0.0, $13 = 0, $130 = 0, $131 = 0, $132 = 0.0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $A = 0;
 var $T = 0, $it = 0, $leadingZeroes = 0, $minorIndex = 0, $r = 0, $usedRows = 0, $v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16896|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $11 = sp + 16832|0;
 $22 = sp + 16784|0;
 $26 = sp + 16768|0;
 $27 = sp + 16764|0;
 $32 = sp + 16744|0;
 $34 = sp + 16736|0;
 $40 = sp + 16712|0;
 $42 = sp + 16704|0;
 $50 = sp + 16672|0;
 $54 = sp + 16656|0;
 $55 = sp + 16652|0;
 $60 = sp + 16632|0;
 $63 = sp + 16620|0;
 $66 = sp + 16608|0;
 $69 = sp + 16596|0;
 $77 = sp + 16564|0;
 $80 = sp + 16552|0;
 $84 = sp + 16536|0;
 $87 = sp + 16524|0;
 $A = sp + 8256|0;
 $T = sp + 64|0;
 $usedRows = sp + 16492|0;
 $v = sp + 32|0;
 $r = sp + 16472|0;
 $93 = sp;
 $it = sp + 16468|0;
 $94 = sp + 16464|0;
 $95 = sp + 16456|0;
 $96 = sp + 16452|0;
 __ZN9BitMatrixILj256ELj256EE10zeroMatrixEv($A);
 __ZN9BitMatrixILj256ELj256EE10zeroMatrixEv($T);
 $90 = $usedRows;
 $98 = $90;
 $89 = $98;
 $99 = $89;
 $88 = $99;
 $100 = $88;
 $86 = $100;
 HEAP32[$87>>2] = 0;
 $101 = $86;
 $85 = $87;
 $102 = $85;
 $103 = HEAP32[$102>>2]|0;
 $83 = $101;
 HEAP32[$84>>2] = $103;
 $104 = $83;
 $82 = $84;
 $105 = $82;
 $106 = HEAP32[$105>>2]|0;
 HEAP32[$104>>2] = $106;
 $107 = ((($104)) + 4|0);
 $81 = $107;
 $108 = $81;
 $79 = $108;
 HEAP32[$80>>2] = 0;
 $109 = $79;
 $78 = $80;
 $110 = $78;
 $111 = HEAP32[$110>>2]|0;
 $76 = $109;
 HEAP32[$77>>2] = $111;
 $112 = $76;
 $75 = $112;
 $74 = $77;
 $113 = $74;
 $114 = HEAP32[$113>>2]|0;
 HEAP32[$112>>2] = $114;
 $115 = ((($99)) + 8|0);
 $73 = $115;
 $116 = $73;
 $72 = $116;
 $117 = $72;
 $71 = $117;
 $70 = $117;
 $118 = $70;
 HEAP32[$118>>2] = 0;
 $119 = ((($99)) + 12|0);
 $68 = $119;
 HEAP32[$69>>2] = 0;
 $120 = $68;
 $67 = $69;
 $121 = $67;
 $122 = HEAP32[$121>>2]|0;
 $65 = $120;
 HEAP32[$66>>2] = $122;
 $123 = $65;
 $64 = $66;
 $124 = $64;
 $125 = HEAP32[$124>>2]|0;
 HEAP32[$123>>2] = $125;
 $126 = ((($99)) + 16|0);
 $62 = $126;
 HEAPF32[$63>>2] = 1.0;
 $127 = $62;
 $61 = $63;
 $128 = $61;
 $129 = +HEAPF32[$128>>2];
 $59 = $127;
 HEAPF32[$60>>2] = $129;
 $130 = $59;
 $58 = $60;
 $131 = $58;
 $132 = +HEAPF32[$131>>2];
 HEAPF32[$130>>2] = $132;
 $leadingZeroes = 0;
 $minorIndex = 0;
 L1: while(1) {
  $133 = $minorIndex;
  $134 = ($133>>>0)<(256);
  if (!($134)) {
   label = 25;
   break;
  }
  $135 = $leadingZeroes;
  __THREW__ = 0;
  invoke_vii(372,($v|0),($135|0));
  $136 = __THREW__; __THREW__ = 0;
  $137 = $136&1;
  if ($137) {
   break;
  }
  __THREW__ = 0;
  $138 = (invoke_ii(373,($v|0))|0);
  $139 = __THREW__; __THREW__ = 0;
  $140 = $139&1;
  if ($140) {
   break;
  }
  HEAP32[$r>>2] = $138;
  while(1) {
   $56 = $usedRows;
   $57 = $r;
   $141 = $56;
   $142 = $57;
   $52 = $141;
   $53 = $142;
   $143 = $52;
   $144 = $53;
   __THREW__ = 0;
   $145 = (invoke_iii(364,($143|0),($144|0))|0);
   $146 = __THREW__; __THREW__ = 0;
   $147 = $146&1;
   if ($147) {
    break L1;
   }
   HEAP32[$54>>2] = $145;
   $51 = $143;
   $48 = $50;
   $49 = 0;
   $148 = $48;
   $149 = $49;
   HEAP32[$148>>2] = $149;
   $150 = HEAP32[$50>>2]|0;
   HEAP32[$55>>2] = $150;
   $46 = $54;
   $47 = $55;
   $151 = $46;
   $152 = $47;
   $44 = $151;
   $45 = $152;
   $153 = $44;
   $154 = HEAP32[$153>>2]|0;
   $155 = $45;
   $156 = HEAP32[$155>>2]|0;
   $157 = ($154|0)==($156|0);
   $158 = $157 ^ 1;
   $159 = $158&1;
   $160 = ($159>>>0)>(0);
   $161 = HEAP32[$r>>2]|0;
   $162 = ($161|0)==(-1);
   $163 = $160 ? 1 : $162;
   if (!($163)) {
    break;
   }
   $164 = $leadingZeroes;
   __THREW__ = 0;
   invoke_vii(372,($93|0),($164|0));
   $165 = __THREW__; __THREW__ = 0;
   $166 = $165&1;
   if ($166) {
    break L1;
   }
   __THREW__ = 0;
   (invoke_iii(374,($v|0),($93|0))|0);
   $167 = __THREW__; __THREW__ = 0;
   $168 = $167&1;
   if ($168) {
    break L1;
   }
   __THREW__ = 0;
   $169 = (invoke_ii(373,($v|0))|0);
   $170 = __THREW__; __THREW__ = 0;
   $171 = $170&1;
   if ($171) {
    break L1;
   }
   HEAP32[$r>>2] = $169;
  }
  $176 = $minorIndex;
  $177 = HEAP32[$r>>2]|0;
  __THREW__ = 0;
  invoke_viii(375,($A|0),($176|0),($177|0));
  $178 = __THREW__; __THREW__ = 0;
  $179 = $178&1;
  if ($179) {
   break;
  }
  $43 = $usedRows;
  $180 = $43;
  $41 = $180;
  $181 = $41;
  $182 = ((($181)) + 8|0);
  $39 = $182;
  $183 = $39;
  $38 = $183;
  $184 = $38;
  $185 = HEAP32[$184>>2]|0;
  $36 = $40;
  $37 = $185;
  $186 = $36;
  $187 = $37;
  HEAP32[$186>>2] = $187;
  $188 = HEAP32[$40>>2]|0;
  HEAP32[$42>>2] = $188;
  $189 = HEAP32[$42>>2]|0;
  HEAP32[$it>>2] = $189;
  while(1) {
   $35 = $usedRows;
   $190 = $35;
   $33 = $190;
   $30 = $32;
   $31 = 0;
   $191 = $30;
   $192 = $31;
   HEAP32[$191>>2] = $192;
   $193 = HEAP32[$32>>2]|0;
   HEAP32[$34>>2] = $193;
   $194 = HEAP32[$34>>2]|0;
   HEAP32[$94>>2] = $194;
   $14 = $it;
   $15 = $94;
   $195 = $14;
   $196 = $15;
   $12 = $195;
   $13 = $196;
   $197 = $12;
   $198 = HEAP32[$197>>2]|0;
   $199 = $13;
   $200 = HEAP32[$199>>2]|0;
   $201 = ($198|0)==($200|0);
   $202 = $201 ^ 1;
   if (!($202)) {
    break;
   }
   $1 = $it;
   $203 = $1;
   $204 = HEAP32[$203>>2]|0;
   $205 = ((($204)) + 8|0);
   $206 = HEAP32[$205>>2]|0;
   __THREW__ = 0;
   invoke_vii(376,($v|0),($206|0));
   $207 = __THREW__; __THREW__ = 0;
   $208 = $207&1;
   if ($208) {
    break L1;
   }
   $0 = $it;
   $209 = $0;
   $210 = HEAP32[$209>>2]|0;
   $211 = HEAP32[$210>>2]|0;
   HEAP32[$209>>2] = $211;
  }
  $212 = HEAP32[$r>>2]|0;
  __THREW__ = 0;
  invoke_viii(377,($T|0),($212|0),($v|0));
  $213 = __THREW__; __THREW__ = 0;
  $214 = $213&1;
  if ($214) {
   break;
  }
  $9 = $usedRows;
  $10 = $r;
  $215 = $9;
  $216 = $10;
  __THREW__ = 0;
  invoke_viii(369,($11|0),($215|0),($216|0));
  $217 = __THREW__; __THREW__ = 0;
  $218 = $217&1;
  if ($218) {
   break;
  }
  $6 = $95;
  $7 = $11;
  $8 = 0;
  $219 = $6;
  $220 = $7;
  $5 = $220;
  $221 = $5;
  $2 = $219;
  $3 = $221;
  $222 = $2;
  $223 = $3;
  $224 = HEAP32[$223>>2]|0;
  HEAP32[$222>>2] = $224;
  $225 = ((($219)) + 4|0);
  $226 = $7;
  $227 = ((($226)) + 4|0);
  $4 = $227;
  $228 = $4;
  $229 = HEAP8[$228>>0]|0;
  $230 = $229&1;
  $231 = $230&1;
  HEAP8[$225>>0] = $231;
  while(1) {
   $232 = $leadingZeroes;
   HEAP32[$96>>2] = $232;
   $28 = $usedRows;
   $29 = $96;
   $233 = $28;
   $234 = $29;
   $24 = $233;
   $25 = $234;
   $235 = $24;
   $236 = $25;
   __THREW__ = 0;
   $237 = (invoke_iii(364,($235|0),($236|0))|0);
   $238 = __THREW__; __THREW__ = 0;
   $239 = $238&1;
   if ($239) {
    break L1;
   }
   HEAP32[$26>>2] = $237;
   $23 = $235;
   $20 = $22;
   $21 = 0;
   $240 = $20;
   $241 = $21;
   HEAP32[$240>>2] = $241;
   $242 = HEAP32[$22>>2]|0;
   HEAP32[$27>>2] = $242;
   $18 = $26;
   $19 = $27;
   $243 = $18;
   $244 = $19;
   $16 = $243;
   $17 = $244;
   $245 = $16;
   $246 = HEAP32[$245>>2]|0;
   $247 = $17;
   $248 = HEAP32[$247>>2]|0;
   $249 = ($246|0)==($248|0);
   $250 = $249 ^ 1;
   $251 = $250&1;
   $252 = ($251>>>0)>(0);
   if (!($252)) {
    break;
   }
   $253 = $leadingZeroes;
   $254 = (($253) + 1)|0;
   $leadingZeroes = $254;
  }
  $255 = $minorIndex;
  $256 = (($255) + 1)|0;
  $minorIndex = $256;
 }
 if ((label|0) == 25) {
  __THREW__ = 0;
  invoke_viii(378,($agg$result|0),($A|0),($T|0));
  $257 = __THREW__; __THREW__ = 0;
  $258 = $257&1;
  if (!($258)) {
   $97 = 1;
   __ZNSt3__113unordered_setIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEED2Ev($usedRows);
   STACKTOP = sp;return;
  }
 }
 $172 = ___cxa_find_matching_catch()|0;
 $173 = tempRet0;
 $91 = $172;
 $92 = $173;
 __ZNSt3__113unordered_setIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEED2Ev($usedRows);
 $174 = $91;
 $175 = $92;
 ___resumeException($174|0);
 // unreachable;
}
function __ZN19MultiQuadTupleChainILj128ELj2EE25randomMultiQuadTupleChainEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $i = 0, $mqt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 132128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $mqt = sp;
 __ZN19MultiQuadTupleChainILj128ELj2EEC2Ev($agg$result);
 $i = 0;
 while(1) {
  $0 = $i;
  $1 = ($0>>>0)<(2);
  if (!($1)) {
   break;
  }
  __ZN14MultiQuadTupleILj128ELj128ELj128EE9randomizeEv($mqt);
  $2 = $i;
  $3 = (($agg$result) + (($2*132112)|0)|0);
  (__ZN14MultiQuadTupleILj128ELj128ELj128EEaSERKS0_($3,$mqt)|0);
  $4 = $i;
  $5 = (($4) + 1)|0;
  $i = $5;
 }
 STACKTOP = sp;return;
}
function __ZN10PrivateKeyILj128EE31generateObfuscationMatrixChainsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 26640|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 18432|0;
 $2 = sp;
 $0 = $this;
 $3 = $0;
 $i = 0;
 while(1) {
  $4 = $i;
  $5 = ($4>>>0)<(2);
  if (!($5)) {
   break;
  }
  $6 = $i;
  $7 = ((($3)) + 276512|0);
  $8 = (($7) + ($6<<13)|0);
  __ZN9BitMatrixILj256ELj256EE22randomInvertibleMatrixEv($1);
  (__ZN9BitMatrixILj256ELj256EEaSERKS0_($8,$1)|0);
  $9 = $i;
  $10 = ((($3)) + 292896|0);
  $11 = (($10) + (($9*18432)|0)|0);
  __ZN9BitMatrixILj384ELj384EE22randomInvertibleMatrixEv($2);
  (__ZN9BitMatrixILj384ELj384EEaSERKS0_($11,$2)|0);
  $12 = $i;
  $13 = (($12) + 1)|0;
  $i = $13;
 }
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj256ELj256EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(256);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<5)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<5)|0);
  (__ZN9BitVectorILj256EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj384ELj384EE22randomInvertibleMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0.0, $13 = 0, $130 = 0, $131 = 0, $132 = 0.0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $A = 0;
 var $T = 0, $it = 0, $leadingZeroes = 0, $minorIndex = 0, $r = 0, $usedRows = 0, $v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 37408|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $11 = sp + 37344|0;
 $22 = sp + 37296|0;
 $26 = sp + 37280|0;
 $27 = sp + 37276|0;
 $32 = sp + 37256|0;
 $34 = sp + 37248|0;
 $40 = sp + 37224|0;
 $42 = sp + 37216|0;
 $50 = sp + 37184|0;
 $54 = sp + 37168|0;
 $55 = sp + 37164|0;
 $60 = sp + 37144|0;
 $63 = sp + 37132|0;
 $66 = sp + 37120|0;
 $69 = sp + 37108|0;
 $77 = sp + 37076|0;
 $80 = sp + 37064|0;
 $84 = sp + 37048|0;
 $87 = sp + 37036|0;
 $A = sp + 18528|0;
 $T = sp + 96|0;
 $usedRows = sp + 37004|0;
 $v = sp + 48|0;
 $r = sp + 36984|0;
 $93 = sp;
 $it = sp + 36980|0;
 $94 = sp + 36976|0;
 $95 = sp + 36968|0;
 $96 = sp + 36964|0;
 __ZN9BitMatrixILj384ELj384EE10zeroMatrixEv($A);
 __ZN9BitMatrixILj384ELj384EE10zeroMatrixEv($T);
 $90 = $usedRows;
 $98 = $90;
 $89 = $98;
 $99 = $89;
 $88 = $99;
 $100 = $88;
 $86 = $100;
 HEAP32[$87>>2] = 0;
 $101 = $86;
 $85 = $87;
 $102 = $85;
 $103 = HEAP32[$102>>2]|0;
 $83 = $101;
 HEAP32[$84>>2] = $103;
 $104 = $83;
 $82 = $84;
 $105 = $82;
 $106 = HEAP32[$105>>2]|0;
 HEAP32[$104>>2] = $106;
 $107 = ((($104)) + 4|0);
 $81 = $107;
 $108 = $81;
 $79 = $108;
 HEAP32[$80>>2] = 0;
 $109 = $79;
 $78 = $80;
 $110 = $78;
 $111 = HEAP32[$110>>2]|0;
 $76 = $109;
 HEAP32[$77>>2] = $111;
 $112 = $76;
 $75 = $112;
 $74 = $77;
 $113 = $74;
 $114 = HEAP32[$113>>2]|0;
 HEAP32[$112>>2] = $114;
 $115 = ((($99)) + 8|0);
 $73 = $115;
 $116 = $73;
 $72 = $116;
 $117 = $72;
 $71 = $117;
 $70 = $117;
 $118 = $70;
 HEAP32[$118>>2] = 0;
 $119 = ((($99)) + 12|0);
 $68 = $119;
 HEAP32[$69>>2] = 0;
 $120 = $68;
 $67 = $69;
 $121 = $67;
 $122 = HEAP32[$121>>2]|0;
 $65 = $120;
 HEAP32[$66>>2] = $122;
 $123 = $65;
 $64 = $66;
 $124 = $64;
 $125 = HEAP32[$124>>2]|0;
 HEAP32[$123>>2] = $125;
 $126 = ((($99)) + 16|0);
 $62 = $126;
 HEAPF32[$63>>2] = 1.0;
 $127 = $62;
 $61 = $63;
 $128 = $61;
 $129 = +HEAPF32[$128>>2];
 $59 = $127;
 HEAPF32[$60>>2] = $129;
 $130 = $59;
 $58 = $60;
 $131 = $58;
 $132 = +HEAPF32[$131>>2];
 HEAPF32[$130>>2] = $132;
 $leadingZeroes = 0;
 $minorIndex = 0;
 L1: while(1) {
  $133 = $minorIndex;
  $134 = ($133>>>0)<(384);
  if (!($134)) {
   label = 25;
   break;
  }
  $135 = $leadingZeroes;
  __THREW__ = 0;
  invoke_vii(379,($v|0),($135|0));
  $136 = __THREW__; __THREW__ = 0;
  $137 = $136&1;
  if ($137) {
   break;
  }
  __THREW__ = 0;
  $138 = (invoke_ii(380,($v|0))|0);
  $139 = __THREW__; __THREW__ = 0;
  $140 = $139&1;
  if ($140) {
   break;
  }
  HEAP32[$r>>2] = $138;
  while(1) {
   $56 = $usedRows;
   $57 = $r;
   $141 = $56;
   $142 = $57;
   $52 = $141;
   $53 = $142;
   $143 = $52;
   $144 = $53;
   __THREW__ = 0;
   $145 = (invoke_iii(364,($143|0),($144|0))|0);
   $146 = __THREW__; __THREW__ = 0;
   $147 = $146&1;
   if ($147) {
    break L1;
   }
   HEAP32[$54>>2] = $145;
   $51 = $143;
   $48 = $50;
   $49 = 0;
   $148 = $48;
   $149 = $49;
   HEAP32[$148>>2] = $149;
   $150 = HEAP32[$50>>2]|0;
   HEAP32[$55>>2] = $150;
   $46 = $54;
   $47 = $55;
   $151 = $46;
   $152 = $47;
   $44 = $151;
   $45 = $152;
   $153 = $44;
   $154 = HEAP32[$153>>2]|0;
   $155 = $45;
   $156 = HEAP32[$155>>2]|0;
   $157 = ($154|0)==($156|0);
   $158 = $157 ^ 1;
   $159 = $158&1;
   $160 = ($159>>>0)>(0);
   $161 = HEAP32[$r>>2]|0;
   $162 = ($161|0)==(-1);
   $163 = $160 ? 1 : $162;
   if (!($163)) {
    break;
   }
   $164 = $leadingZeroes;
   __THREW__ = 0;
   invoke_vii(379,($93|0),($164|0));
   $165 = __THREW__; __THREW__ = 0;
   $166 = $165&1;
   if ($166) {
    break L1;
   }
   __THREW__ = 0;
   (invoke_iii(381,($v|0),($93|0))|0);
   $167 = __THREW__; __THREW__ = 0;
   $168 = $167&1;
   if ($168) {
    break L1;
   }
   __THREW__ = 0;
   $169 = (invoke_ii(380,($v|0))|0);
   $170 = __THREW__; __THREW__ = 0;
   $171 = $170&1;
   if ($171) {
    break L1;
   }
   HEAP32[$r>>2] = $169;
  }
  $176 = $minorIndex;
  $177 = HEAP32[$r>>2]|0;
  __THREW__ = 0;
  invoke_viii(382,($A|0),($176|0),($177|0));
  $178 = __THREW__; __THREW__ = 0;
  $179 = $178&1;
  if ($179) {
   break;
  }
  $43 = $usedRows;
  $180 = $43;
  $41 = $180;
  $181 = $41;
  $182 = ((($181)) + 8|0);
  $39 = $182;
  $183 = $39;
  $38 = $183;
  $184 = $38;
  $185 = HEAP32[$184>>2]|0;
  $36 = $40;
  $37 = $185;
  $186 = $36;
  $187 = $37;
  HEAP32[$186>>2] = $187;
  $188 = HEAP32[$40>>2]|0;
  HEAP32[$42>>2] = $188;
  $189 = HEAP32[$42>>2]|0;
  HEAP32[$it>>2] = $189;
  while(1) {
   $35 = $usedRows;
   $190 = $35;
   $33 = $190;
   $30 = $32;
   $31 = 0;
   $191 = $30;
   $192 = $31;
   HEAP32[$191>>2] = $192;
   $193 = HEAP32[$32>>2]|0;
   HEAP32[$34>>2] = $193;
   $194 = HEAP32[$34>>2]|0;
   HEAP32[$94>>2] = $194;
   $14 = $it;
   $15 = $94;
   $195 = $14;
   $196 = $15;
   $12 = $195;
   $13 = $196;
   $197 = $12;
   $198 = HEAP32[$197>>2]|0;
   $199 = $13;
   $200 = HEAP32[$199>>2]|0;
   $201 = ($198|0)==($200|0);
   $202 = $201 ^ 1;
   if (!($202)) {
    break;
   }
   $1 = $it;
   $203 = $1;
   $204 = HEAP32[$203>>2]|0;
   $205 = ((($204)) + 8|0);
   $206 = HEAP32[$205>>2]|0;
   __THREW__ = 0;
   invoke_vii(383,($v|0),($206|0));
   $207 = __THREW__; __THREW__ = 0;
   $208 = $207&1;
   if ($208) {
    break L1;
   }
   $0 = $it;
   $209 = $0;
   $210 = HEAP32[$209>>2]|0;
   $211 = HEAP32[$210>>2]|0;
   HEAP32[$209>>2] = $211;
  }
  $212 = HEAP32[$r>>2]|0;
  __THREW__ = 0;
  invoke_viii(384,($T|0),($212|0),($v|0));
  $213 = __THREW__; __THREW__ = 0;
  $214 = $213&1;
  if ($214) {
   break;
  }
  $9 = $usedRows;
  $10 = $r;
  $215 = $9;
  $216 = $10;
  __THREW__ = 0;
  invoke_viii(369,($11|0),($215|0),($216|0));
  $217 = __THREW__; __THREW__ = 0;
  $218 = $217&1;
  if ($218) {
   break;
  }
  $6 = $95;
  $7 = $11;
  $8 = 0;
  $219 = $6;
  $220 = $7;
  $5 = $220;
  $221 = $5;
  $2 = $219;
  $3 = $221;
  $222 = $2;
  $223 = $3;
  $224 = HEAP32[$223>>2]|0;
  HEAP32[$222>>2] = $224;
  $225 = ((($219)) + 4|0);
  $226 = $7;
  $227 = ((($226)) + 4|0);
  $4 = $227;
  $228 = $4;
  $229 = HEAP8[$228>>0]|0;
  $230 = $229&1;
  $231 = $230&1;
  HEAP8[$225>>0] = $231;
  while(1) {
   $232 = $leadingZeroes;
   HEAP32[$96>>2] = $232;
   $28 = $usedRows;
   $29 = $96;
   $233 = $28;
   $234 = $29;
   $24 = $233;
   $25 = $234;
   $235 = $24;
   $236 = $25;
   __THREW__ = 0;
   $237 = (invoke_iii(364,($235|0),($236|0))|0);
   $238 = __THREW__; __THREW__ = 0;
   $239 = $238&1;
   if ($239) {
    break L1;
   }
   HEAP32[$26>>2] = $237;
   $23 = $235;
   $20 = $22;
   $21 = 0;
   $240 = $20;
   $241 = $21;
   HEAP32[$240>>2] = $241;
   $242 = HEAP32[$22>>2]|0;
   HEAP32[$27>>2] = $242;
   $18 = $26;
   $19 = $27;
   $243 = $18;
   $244 = $19;
   $16 = $243;
   $17 = $244;
   $245 = $16;
   $246 = HEAP32[$245>>2]|0;
   $247 = $17;
   $248 = HEAP32[$247>>2]|0;
   $249 = ($246|0)==($248|0);
   $250 = $249 ^ 1;
   $251 = $250&1;
   $252 = ($251>>>0)>(0);
   if (!($252)) {
    break;
   }
   $253 = $leadingZeroes;
   $254 = (($253) + 1)|0;
   $leadingZeroes = $254;
  }
  $255 = $minorIndex;
  $256 = (($255) + 1)|0;
  $minorIndex = $256;
 }
 if ((label|0) == 25) {
  __THREW__ = 0;
  invoke_viii(385,($agg$result|0),($A|0),($T|0));
  $257 = __THREW__; __THREW__ = 0;
  $258 = $257&1;
  if (!($258)) {
   $97 = 1;
   __ZNSt3__113unordered_setIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEED2Ev($usedRows);
   STACKTOP = sp;return;
  }
 }
 $172 = ___cxa_find_matching_catch()|0;
 $173 = tempRet0;
 $91 = $172;
 $92 = $173;
 __ZNSt3__113unordered_setIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEED2Ev($usedRows);
 $174 = $91;
 $175 = $92;
 ___resumeException($174|0);
 // unreachable;
}
function __ZN9BitMatrixILj384ELj384EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(384);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + (($6*48)|0)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + (($8*48)|0)|0);
  (__ZN9BitVectorILj384EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitVectorILj384EEaSERKS0_($this,$rhs) {
 $this = $this|0;
 $rhs = $rhs|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $rhs;
 $2 = $0;
 $i = 0;
 while(1) {
  $3 = $i;
  $4 = ($3>>>0)<(6);
  if (!($4)) {
   break;
  }
  $5 = $i;
  $6 = $1;
  $7 = (($6) + ($5<<3)|0);
  $8 = $7;
  $9 = $8;
  $10 = HEAP32[$9>>2]|0;
  $11 = (($8) + 4)|0;
  $12 = $11;
  $13 = HEAP32[$12>>2]|0;
  $14 = $i;
  $15 = (($2) + ($14<<3)|0);
  $16 = $15;
  $17 = $16;
  HEAP32[$17>>2] = $10;
  $18 = (($16) + 4)|0;
  $19 = $18;
  HEAP32[$19>>2] = $13;
  $20 = $i;
  $21 = (($20) + 1)|0;
  $i = $21;
 }
 STACKTOP = sp;return ($2|0);
}
function __ZN9BitMatrixILj384ELj384EE10zeroMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $i = 0;
 while(1) {
  $0 = $i;
  $1 = ($0>>>0)<(384);
  if (!($1)) {
   break;
  }
  $2 = $i;
  $3 = (($agg$result) + (($2*48)|0)|0);
  $4 = (__ZN9BitVectorILj384EE10zeroVectorEv()|0);
  (__ZN9BitVectorILj384EEaSERKS0_($3,$4)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN9BitVectorILj384EE25randomVectorLeadingZeroesEj($agg$result,$n) {
 $agg$result = $agg$result|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $n;
 __ZN9BitVectorILj384EE12randomVectorEv($agg$result);
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = $0;
  $3 = ($1>>>0)<($2>>>0);
  if (!($3)) {
   break;
  }
  $4 = $i;
  __ZN9BitVectorILj384EE5clearEj($agg$result,$4);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZNK9BitVectorILj384EE11getFirstOneEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $1;
 $i = 0;
 while(1) {
  $3 = $i;
  $4 = ($3>>>0)<(384);
  if (!($4)) {
   label = 6;
   break;
  }
  $5 = $i;
  $6 = (__ZNK9BitVectorILj384EE3getEj($2,$5)|0);
  $7 = $i;
  if ($6) {
   label = 4;
   break;
  }
  $8 = (($7) + 1)|0;
  $i = $8;
 }
 if ((label|0) == 4) {
  $0 = $7;
  $9 = $0;
  STACKTOP = sp;return ($9|0);
 }
 else if ((label|0) == 6) {
  $0 = -1;
  $9 = $0;
  STACKTOP = sp;return ($9|0);
 }
 return (0)|0;
}
function __ZN9BitMatrixILj384ELj384EE3setEjj($this,$rowIndex,$colIndex) {
 $this = $this|0;
 $rowIndex = $rowIndex|0;
 $colIndex = $colIndex|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $rowIndex;
 $2 = $colIndex;
 $3 = $0;
 $4 = $1;
 $5 = (($3) + (($4*48)|0)|0);
 $6 = $2;
 __ZN9BitVectorILj384EE3setEj($5,$6);
 STACKTOP = sp;return;
}
function __ZN9BitVectorILj384EE5clearEj($this,$n) {
 $this = $this|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $n;
 $2 = $0;
 $3 = $1;
 $4 = $3 & 63;
 $5 = (_bitshift64Shl(1,0,($4|0))|0);
 $6 = tempRet0;
 $7 = $5 ^ -1;
 $8 = $6 ^ -1;
 $9 = $1;
 $10 = $9 >>> 6;
 $11 = (($2) + ($10<<3)|0);
 $12 = $11;
 $13 = $12;
 $14 = HEAP32[$13>>2]|0;
 $15 = (($12) + 4)|0;
 $16 = $15;
 $17 = HEAP32[$16>>2]|0;
 $18 = $14 & $7;
 $19 = $17 & $8;
 $20 = $11;
 $21 = $20;
 HEAP32[$21>>2] = $18;
 $22 = (($20) + 4)|0;
 $23 = $22;
 HEAP32[$23>>2] = $19;
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj384ELj384EE6setRowEjRK9BitVectorILj384EE($this,$rowIndex,$v) {
 $this = $this|0;
 $rowIndex = $rowIndex|0;
 $v = $v|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $rowIndex;
 $2 = $v;
 $3 = $0;
 $4 = $1;
 $5 = (($3) + (($4*48)|0)|0);
 $6 = $2;
 (__ZN9BitVectorILj384EEaSERKS0_($5,$6)|0);
 STACKTOP = sp;return;
}
function __ZNK9BitMatrixILj384ELj384EEmlILj384EEEKS_ILj384EXT_EERS3_($agg$result,$this,$rhs) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $rhs = $rhs|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $j = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $rhs;
 $2 = $0;
 __ZN9BitMatrixILj384ELj384EE10zeroMatrixEv($agg$result);
 $i = 0;
 while(1) {
  $3 = $i;
  $4 = ($3>>>0)<(384);
  if (!($4)) {
   break;
  }
  $j = 0;
  while(1) {
   $5 = $j;
   $6 = ($5>>>0)<(384);
   $7 = $i;
   if (!($6)) {
    break;
   }
   $8 = $j;
   $9 = (__ZNK9BitMatrixILj384ELj384EE3getEjj($2,$7,$8)|0);
   if ($9) {
    $10 = $i;
    $11 = (__ZN9BitMatrixILj384ELj384EEixEj($agg$result,$10)|0);
    $12 = $1;
    $13 = $j;
    $14 = (__ZNK9BitMatrixILj384ELj384EEixEj($12,$13)|0);
    (__ZN9BitVectorILj384EEeOERKS0_($11,$14)|0);
   }
   $15 = $j;
   $16 = (($15) + 1)|0;
   $j = $16;
  }
  $17 = (($7) + 1)|0;
  $i = $17;
 }
 STACKTOP = sp;return;
}
function __ZNK9BitMatrixILj384ELj384EE3getEjj($this,$rowIndex,$colIndex) {
 $this = $this|0;
 $rowIndex = $rowIndex|0;
 $colIndex = $colIndex|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $rowIndex;
 $2 = $colIndex;
 $3 = $0;
 $4 = $1;
 $5 = (($3) + (($4*48)|0)|0);
 $6 = $2;
 $7 = (__ZNK9BitVectorILj384EE3getEj($5,$6)|0);
 STACKTOP = sp;return ($7|0);
}
function __ZN9BitMatrixILj384ELj384EEixEj($this,$rowIndex) {
 $this = $this|0;
 $rowIndex = $rowIndex|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $rowIndex;
 $2 = $0;
 $3 = $1;
 $4 = (($2) + (($3*48)|0)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK9BitMatrixILj384ELj384EEixEj($this,$rowIndex) {
 $this = $this|0;
 $rowIndex = $rowIndex|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $rowIndex;
 $2 = $0;
 $3 = $1;
 $4 = (($2) + (($3*48)|0)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN9BitVectorILj384EEeOERKS0_($this,$rhs) {
 $this = $this|0;
 $rhs = $rhs|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $rhs;
 $2 = $0;
 $i = 0;
 while(1) {
  $3 = $i;
  $4 = ($3>>>0)<(6);
  if (!($4)) {
   break;
  }
  $5 = $i;
  $6 = $1;
  $7 = (($6) + ($5<<3)|0);
  $8 = $7;
  $9 = $8;
  $10 = HEAP32[$9>>2]|0;
  $11 = (($8) + 4)|0;
  $12 = $11;
  $13 = HEAP32[$12>>2]|0;
  $14 = $i;
  $15 = (($2) + ($14<<3)|0);
  $16 = $15;
  $17 = $16;
  $18 = HEAP32[$17>>2]|0;
  $19 = (($16) + 4)|0;
  $20 = $19;
  $21 = HEAP32[$20>>2]|0;
  $22 = $18 ^ $10;
  $23 = $21 ^ $13;
  $24 = $15;
  $25 = $24;
  HEAP32[$25>>2] = $22;
  $26 = (($24) + 4)|0;
  $27 = $26;
  HEAP32[$27>>2] = $23;
  $28 = $i;
  $29 = (($28) + 1)|0;
  $i = $29;
 }
 STACKTOP = sp;return ($2|0);
}
function __ZNK9BitVectorILj384EE3getEj($this,$n) {
 $this = $this|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $n;
 $2 = $0;
 $3 = $1;
 $4 = $3 >>> 6;
 $5 = (($2) + ($4<<3)|0);
 $6 = $5;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = (($6) + 4)|0;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = $1;
 $13 = $12 & 63;
 $14 = (_bitshift64Shl(1,0,($13|0))|0);
 $15 = tempRet0;
 $16 = $8 & $14;
 $17 = $11 & $15;
 $18 = ($16|0)!=(0);
 $19 = ($17|0)!=(0);
 $20 = $18 | $19;
 STACKTOP = sp;return ($20|0);
}
function __ZN9BitVectorILj384EE3setEj($this,$n) {
 $this = $this|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $n;
 $2 = $0;
 $3 = $1;
 $4 = $3 & 63;
 $5 = (_bitshift64Shl(1,0,($4|0))|0);
 $6 = tempRet0;
 $7 = $1;
 $8 = $7 >>> 6;
 $9 = (($2) + ($8<<3)|0);
 $10 = $9;
 $11 = $10;
 $12 = HEAP32[$11>>2]|0;
 $13 = (($10) + 4)|0;
 $14 = $13;
 $15 = HEAP32[$14>>2]|0;
 $16 = $12 | $5;
 $17 = $15 | $6;
 $18 = $9;
 $19 = $18;
 HEAP32[$19>>2] = $16;
 $20 = (($18) + 4)|0;
 $21 = $20;
 HEAP32[$21>>2] = $17;
 STACKTOP = sp;return;
}
function __ZN9BitVectorILj384EE12randomVectorEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 $0 = (__ZN9BitVectorILj384EE10zeroVectorEv()|0);
 dest=$agg$result; src=$0; stop=dest+48|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 while(1) {
  $1 = (__ZNK9BitVectorILj384EE6isZeroEv($agg$result)|0);
  if (!($1)) {
   break;
  }
  $2 = HEAP32[2664>>2]|0;
  (_fread($agg$result,8,6,$2)|0);
 }
 return;
}
function __ZN9BitVectorILj384EE10zeroVectorEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN9BitVectorILj384EE4zeroEv(24);
 return (24|0);
}
function __ZNK9BitVectorILj384EE6isZeroEv($this) {
 $this = $this|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 8|0;
 $1 = $this;
 $2 = $1;
 $i = 0;
 while(1) {
  $3 = $i;
  $4 = ($3>>>0)<(6);
  if (!($4)) {
   label = 6;
   break;
  }
  $5 = $i;
  $6 = (($2) + ($5<<3)|0);
  $7 = $6;
  $8 = $7;
  $9 = HEAP32[$8>>2]|0;
  $10 = (($7) + 4)|0;
  $11 = $10;
  $12 = HEAP32[$11>>2]|0;
  $13 = ($9|0)!=(0);
  $14 = ($12|0)!=(0);
  $15 = $13 | $14;
  if ($15) {
   label = 4;
   break;
  }
  $16 = $i;
  $17 = (($16) + 1)|0;
  $i = $17;
 }
 if ((label|0) == 4) {
  $$expand_i1_val = 0;
  HEAP8[$0>>0] = $$expand_i1_val;
  $$pre_trunc = HEAP8[$0>>0]|0;
  $18 = $$pre_trunc&1;
  STACKTOP = sp;return ($18|0);
 }
 else if ((label|0) == 6) {
  $$expand_i1_val2 = 1;
  HEAP8[$0>>0] = $$expand_i1_val2;
  $$pre_trunc = HEAP8[$0>>0]|0;
  $18 = $$pre_trunc&1;
  STACKTOP = sp;return ($18|0);
 }
 return (0)|0;
}
function __ZN9BitVectorILj384EE4zeroEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $i = 0;
 while(1) {
  $2 = $i;
  $3 = ($2>>>0)<(6);
  if (!($3)) {
   break;
  }
  $4 = $i;
  $5 = (($1) + ($4<<3)|0);
  $6 = $5;
  $7 = $6;
  $8 = HEAP32[$7>>2]|0;
  $9 = (($6) + 4)|0;
  $10 = $9;
  $11 = HEAP32[$10>>2]|0;
  $12 = $5;
  $13 = $12;
  HEAP32[$13>>2] = 0;
  $14 = (($12) + 4)|0;
  $15 = $14;
  HEAP32[$15>>2] = 0;
  $16 = $i;
  $17 = (($16) + 1)|0;
  $i = $17;
 }
 STACKTOP = sp;return;
}
function __ZN9BitVectorILj256EEaSERKS0_($this,$rhs) {
 $this = $this|0;
 $rhs = $rhs|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $rhs;
 $2 = $0;
 $i = 0;
 while(1) {
  $3 = $i;
  $4 = ($3>>>0)<(4);
  if (!($4)) {
   break;
  }
  $5 = $i;
  $6 = $1;
  $7 = (($6) + ($5<<3)|0);
  $8 = $7;
  $9 = $8;
  $10 = HEAP32[$9>>2]|0;
  $11 = (($8) + 4)|0;
  $12 = $11;
  $13 = HEAP32[$12>>2]|0;
  $14 = $i;
  $15 = (($2) + ($14<<3)|0);
  $16 = $15;
  $17 = $16;
  HEAP32[$17>>2] = $10;
  $18 = (($16) + 4)|0;
  $19 = $18;
  HEAP32[$19>>2] = $13;
  $20 = $i;
  $21 = (($20) + 1)|0;
  $i = $21;
 }
 STACKTOP = sp;return ($2|0);
}
function __ZN19MultiQuadTupleChainILj128ELj2EEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj128EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2064|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 130064|0);
 __ZN9BitMatrixILj128ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj128ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj127EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj127EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 130064|0);
 $6 = $2;
 $7 = ((($6)) + 130064|0);
 (__ZN9BitMatrixILj128ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj127EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj126EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 128032|0);
 $6 = $2;
 $7 = ((($6)) + 128032|0);
 (__ZN9BitMatrixILj127ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj128ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(128);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj126EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj125EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 126016|0);
 $6 = $2;
 $7 = ((($6)) + 126016|0);
 (__ZN9BitMatrixILj126ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj127ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(127);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj125EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj124EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 124016|0);
 $6 = $2;
 $7 = ((($6)) + 124016|0);
 (__ZN9BitMatrixILj125ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj126ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(126);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj124EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj123EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 122032|0);
 $6 = $2;
 $7 = ((($6)) + 122032|0);
 (__ZN9BitMatrixILj124ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj125ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(125);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj123EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj122EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 120064|0);
 $6 = $2;
 $7 = ((($6)) + 120064|0);
 (__ZN9BitMatrixILj123ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj124ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(124);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj122EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj121EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 118112|0);
 $6 = $2;
 $7 = ((($6)) + 118112|0);
 (__ZN9BitMatrixILj122ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj123ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(123);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj121EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj120EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 116176|0);
 $6 = $2;
 $7 = ((($6)) + 116176|0);
 (__ZN9BitMatrixILj121ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj122ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(122);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj120EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj119EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 114256|0);
 $6 = $2;
 $7 = ((($6)) + 114256|0);
 (__ZN9BitMatrixILj120ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj121ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(121);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj119EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj118EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 112352|0);
 $6 = $2;
 $7 = ((($6)) + 112352|0);
 (__ZN9BitMatrixILj119ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj120ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(120);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj118EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj117EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 110464|0);
 $6 = $2;
 $7 = ((($6)) + 110464|0);
 (__ZN9BitMatrixILj118ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj119ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(119);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj117EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj116EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 108592|0);
 $6 = $2;
 $7 = ((($6)) + 108592|0);
 (__ZN9BitMatrixILj117ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj118ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(118);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj116EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj115EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 106736|0);
 $6 = $2;
 $7 = ((($6)) + 106736|0);
 (__ZN9BitMatrixILj116ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj117ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(117);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj115EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj114EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 104896|0);
 $6 = $2;
 $7 = ((($6)) + 104896|0);
 (__ZN9BitMatrixILj115ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj116ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(116);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj114EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj113EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 103072|0);
 $6 = $2;
 $7 = ((($6)) + 103072|0);
 (__ZN9BitMatrixILj114ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj115ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(115);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj113EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj112EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 101264|0);
 $6 = $2;
 $7 = ((($6)) + 101264|0);
 (__ZN9BitMatrixILj113ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj114ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(114);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj112EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj111EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 99472|0);
 $6 = $2;
 $7 = ((($6)) + 99472|0);
 (__ZN9BitMatrixILj112ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj113ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(113);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj111EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj110EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 97696|0);
 $6 = $2;
 $7 = ((($6)) + 97696|0);
 (__ZN9BitMatrixILj111ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj112ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(112);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj110EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj109EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 95936|0);
 $6 = $2;
 $7 = ((($6)) + 95936|0);
 (__ZN9BitMatrixILj110ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj111ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(111);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj109EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj108EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 94192|0);
 $6 = $2;
 $7 = ((($6)) + 94192|0);
 (__ZN9BitMatrixILj109ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj110ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(110);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj108EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj107EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 92464|0);
 $6 = $2;
 $7 = ((($6)) + 92464|0);
 (__ZN9BitMatrixILj108ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj109ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(109);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj107EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj106EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 90752|0);
 $6 = $2;
 $7 = ((($6)) + 90752|0);
 (__ZN9BitMatrixILj107ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj108ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(108);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj106EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj105EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 89056|0);
 $6 = $2;
 $7 = ((($6)) + 89056|0);
 (__ZN9BitMatrixILj106ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj107ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(107);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj105EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj104EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 87376|0);
 $6 = $2;
 $7 = ((($6)) + 87376|0);
 (__ZN9BitMatrixILj105ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj106ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(106);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj104EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj103EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 85712|0);
 $6 = $2;
 $7 = ((($6)) + 85712|0);
 (__ZN9BitMatrixILj104ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj105ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(105);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj103EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj102EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 84064|0);
 $6 = $2;
 $7 = ((($6)) + 84064|0);
 (__ZN9BitMatrixILj103ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj104ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(104);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj102EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj101EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 82432|0);
 $6 = $2;
 $7 = ((($6)) + 82432|0);
 (__ZN9BitMatrixILj102ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj103ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(103);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj101EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj100EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 80816|0);
 $6 = $2;
 $7 = ((($6)) + 80816|0);
 (__ZN9BitMatrixILj101ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj102ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(102);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj100EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj99EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 79216|0);
 $6 = $2;
 $7 = ((($6)) + 79216|0);
 (__ZN9BitMatrixILj100ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj101ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(101);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj99EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj98EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 77632|0);
 $6 = $2;
 $7 = ((($6)) + 77632|0);
 (__ZN9BitMatrixILj99ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj100ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(100);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj98EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj97EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 76064|0);
 $6 = $2;
 $7 = ((($6)) + 76064|0);
 (__ZN9BitMatrixILj98ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj99ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(99);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj97EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj96EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 74512|0);
 $6 = $2;
 $7 = ((($6)) + 74512|0);
 (__ZN9BitMatrixILj97ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj98ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(98);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj96EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj95EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 72976|0);
 $6 = $2;
 $7 = ((($6)) + 72976|0);
 (__ZN9BitMatrixILj96ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj97ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(97);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj95EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj94EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 71456|0);
 $6 = $2;
 $7 = ((($6)) + 71456|0);
 (__ZN9BitMatrixILj95ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj96ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(96);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj94EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj93EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 69952|0);
 $6 = $2;
 $7 = ((($6)) + 69952|0);
 (__ZN9BitMatrixILj94ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj95ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(95);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj93EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj92EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 68464|0);
 $6 = $2;
 $7 = ((($6)) + 68464|0);
 (__ZN9BitMatrixILj93ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj94ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(94);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj92EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj91EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 66992|0);
 $6 = $2;
 $7 = ((($6)) + 66992|0);
 (__ZN9BitMatrixILj92ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj93ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(93);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj91EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj90EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 65536|0);
 $6 = $2;
 $7 = ((($6)) + 65536|0);
 (__ZN9BitMatrixILj91ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj92ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(92);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj90EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj89EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 64096|0);
 $6 = $2;
 $7 = ((($6)) + 64096|0);
 (__ZN9BitMatrixILj90ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj91ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(91);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj89EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj88EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 62672|0);
 $6 = $2;
 $7 = ((($6)) + 62672|0);
 (__ZN9BitMatrixILj89ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj90ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(90);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj88EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj87EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 61264|0);
 $6 = $2;
 $7 = ((($6)) + 61264|0);
 (__ZN9BitMatrixILj88ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj89ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(89);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj87EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj86EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 59872|0);
 $6 = $2;
 $7 = ((($6)) + 59872|0);
 (__ZN9BitMatrixILj87ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj88ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(88);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj86EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj85EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 58496|0);
 $6 = $2;
 $7 = ((($6)) + 58496|0);
 (__ZN9BitMatrixILj86ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj87ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(87);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj85EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj84EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 57136|0);
 $6 = $2;
 $7 = ((($6)) + 57136|0);
 (__ZN9BitMatrixILj85ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj86ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(86);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj84EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj83EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 55792|0);
 $6 = $2;
 $7 = ((($6)) + 55792|0);
 (__ZN9BitMatrixILj84ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj85ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(85);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj83EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj82EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 54464|0);
 $6 = $2;
 $7 = ((($6)) + 54464|0);
 (__ZN9BitMatrixILj83ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj84ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(84);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj82EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj81EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 53152|0);
 $6 = $2;
 $7 = ((($6)) + 53152|0);
 (__ZN9BitMatrixILj82ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj83ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(83);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj81EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj80EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 51856|0);
 $6 = $2;
 $7 = ((($6)) + 51856|0);
 (__ZN9BitMatrixILj81ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj82ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(82);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj80EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj79EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 50576|0);
 $6 = $2;
 $7 = ((($6)) + 50576|0);
 (__ZN9BitMatrixILj80ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj81ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(81);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj79EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj78EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 49312|0);
 $6 = $2;
 $7 = ((($6)) + 49312|0);
 (__ZN9BitMatrixILj79ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj80ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(80);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj78EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj77EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 48064|0);
 $6 = $2;
 $7 = ((($6)) + 48064|0);
 (__ZN9BitMatrixILj78ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj79ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(79);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj77EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj76EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 46832|0);
 $6 = $2;
 $7 = ((($6)) + 46832|0);
 (__ZN9BitMatrixILj77ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj78ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(78);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj76EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj75EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 45616|0);
 $6 = $2;
 $7 = ((($6)) + 45616|0);
 (__ZN9BitMatrixILj76ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj77ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(77);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj75EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj74EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 44416|0);
 $6 = $2;
 $7 = ((($6)) + 44416|0);
 (__ZN9BitMatrixILj75ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj76ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(76);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj74EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj73EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 43232|0);
 $6 = $2;
 $7 = ((($6)) + 43232|0);
 (__ZN9BitMatrixILj74ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj75ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(75);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj73EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj72EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 42064|0);
 $6 = $2;
 $7 = ((($6)) + 42064|0);
 (__ZN9BitMatrixILj73ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj74ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(74);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj72EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj71EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 40912|0);
 $6 = $2;
 $7 = ((($6)) + 40912|0);
 (__ZN9BitMatrixILj72ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj73ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(73);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj71EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj70EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 39776|0);
 $6 = $2;
 $7 = ((($6)) + 39776|0);
 (__ZN9BitMatrixILj71ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj72ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(72);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj70EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj69EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 38656|0);
 $6 = $2;
 $7 = ((($6)) + 38656|0);
 (__ZN9BitMatrixILj70ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj71ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(71);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj69EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj68EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 37552|0);
 $6 = $2;
 $7 = ((($6)) + 37552|0);
 (__ZN9BitMatrixILj69ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj70ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(70);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj68EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj67EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 36464|0);
 $6 = $2;
 $7 = ((($6)) + 36464|0);
 (__ZN9BitMatrixILj68ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj69ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(69);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj67EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj66EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 35392|0);
 $6 = $2;
 $7 = ((($6)) + 35392|0);
 (__ZN9BitMatrixILj67ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj68ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(68);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj66EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj65EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 34336|0);
 $6 = $2;
 $7 = ((($6)) + 34336|0);
 (__ZN9BitMatrixILj66ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj67ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(67);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj65EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj64EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 33296|0);
 $6 = $2;
 $7 = ((($6)) + 33296|0);
 (__ZN9BitMatrixILj65ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj66ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(66);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj64EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj63EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 32272|0);
 $6 = $2;
 $7 = ((($6)) + 32272|0);
 (__ZN9BitMatrixILj64ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj65ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(65);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj63EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj62EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 31264|0);
 $6 = $2;
 $7 = ((($6)) + 31264|0);
 (__ZN9BitMatrixILj63ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj64ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(64);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj62EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj61EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 30272|0);
 $6 = $2;
 $7 = ((($6)) + 30272|0);
 (__ZN9BitMatrixILj62ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj63ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(63);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj61EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj60EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 29296|0);
 $6 = $2;
 $7 = ((($6)) + 29296|0);
 (__ZN9BitMatrixILj61ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj62ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(62);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj60EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj59EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 28336|0);
 $6 = $2;
 $7 = ((($6)) + 28336|0);
 (__ZN9BitMatrixILj60ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj61ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(61);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj59EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj58EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 27392|0);
 $6 = $2;
 $7 = ((($6)) + 27392|0);
 (__ZN9BitMatrixILj59ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj60ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(60);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj58EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj57EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 26464|0);
 $6 = $2;
 $7 = ((($6)) + 26464|0);
 (__ZN9BitMatrixILj58ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj59ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(59);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj57EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj56EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 25552|0);
 $6 = $2;
 $7 = ((($6)) + 25552|0);
 (__ZN9BitMatrixILj57ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj58ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(58);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj56EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj55EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 24656|0);
 $6 = $2;
 $7 = ((($6)) + 24656|0);
 (__ZN9BitMatrixILj56ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj57ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(57);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj55EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj54EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 23776|0);
 $6 = $2;
 $7 = ((($6)) + 23776|0);
 (__ZN9BitMatrixILj55ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj56ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(56);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj54EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj53EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 22912|0);
 $6 = $2;
 $7 = ((($6)) + 22912|0);
 (__ZN9BitMatrixILj54ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj55ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(55);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj53EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj52EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 22064|0);
 $6 = $2;
 $7 = ((($6)) + 22064|0);
 (__ZN9BitMatrixILj53ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj54ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(54);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj52EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj51EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 21232|0);
 $6 = $2;
 $7 = ((($6)) + 21232|0);
 (__ZN9BitMatrixILj52ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj53ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(53);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj51EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj50EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 20416|0);
 $6 = $2;
 $7 = ((($6)) + 20416|0);
 (__ZN9BitMatrixILj51ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj52ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(52);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj50EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj49EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 19616|0);
 $6 = $2;
 $7 = ((($6)) + 19616|0);
 (__ZN9BitMatrixILj50ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj51ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(51);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj49EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj48EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 18832|0);
 $6 = $2;
 $7 = ((($6)) + 18832|0);
 (__ZN9BitMatrixILj49ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj50ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(50);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj48EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj47EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 18064|0);
 $6 = $2;
 $7 = ((($6)) + 18064|0);
 (__ZN9BitMatrixILj48ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj49ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(49);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj47EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj46EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 17312|0);
 $6 = $2;
 $7 = ((($6)) + 17312|0);
 (__ZN9BitMatrixILj47ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj48ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(48);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj46EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj45EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 16576|0);
 $6 = $2;
 $7 = ((($6)) + 16576|0);
 (__ZN9BitMatrixILj46ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj47ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(47);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj45EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj44EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 15856|0);
 $6 = $2;
 $7 = ((($6)) + 15856|0);
 (__ZN9BitMatrixILj45ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj46ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(46);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj44EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj43EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 15152|0);
 $6 = $2;
 $7 = ((($6)) + 15152|0);
 (__ZN9BitMatrixILj44ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj45ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(45);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj43EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj42EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 14464|0);
 $6 = $2;
 $7 = ((($6)) + 14464|0);
 (__ZN9BitMatrixILj43ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj44ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(44);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj42EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj41EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 13792|0);
 $6 = $2;
 $7 = ((($6)) + 13792|0);
 (__ZN9BitMatrixILj42ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj43ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(43);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj41EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj40EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 13136|0);
 $6 = $2;
 $7 = ((($6)) + 13136|0);
 (__ZN9BitMatrixILj41ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj42ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(42);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj40EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj39EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 12496|0);
 $6 = $2;
 $7 = ((($6)) + 12496|0);
 (__ZN9BitMatrixILj40ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj41ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(41);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj39EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj38EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 11872|0);
 $6 = $2;
 $7 = ((($6)) + 11872|0);
 (__ZN9BitMatrixILj39ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj40ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(40);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj38EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj37EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 11264|0);
 $6 = $2;
 $7 = ((($6)) + 11264|0);
 (__ZN9BitMatrixILj38ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj39ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(39);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj37EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj36EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 10672|0);
 $6 = $2;
 $7 = ((($6)) + 10672|0);
 (__ZN9BitMatrixILj37ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj38ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(38);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj36EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj35EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 10096|0);
 $6 = $2;
 $7 = ((($6)) + 10096|0);
 (__ZN9BitMatrixILj36ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj37ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(37);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj35EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj34EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 9536|0);
 $6 = $2;
 $7 = ((($6)) + 9536|0);
 (__ZN9BitMatrixILj35ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj36ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(36);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj34EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj33EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 8992|0);
 $6 = $2;
 $7 = ((($6)) + 8992|0);
 (__ZN9BitMatrixILj34ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj35ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(35);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj33EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj32EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 8464|0);
 $6 = $2;
 $7 = ((($6)) + 8464|0);
 (__ZN9BitMatrixILj33ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj34ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(34);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj32EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj31EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 7952|0);
 $6 = $2;
 $7 = ((($6)) + 7952|0);
 (__ZN9BitMatrixILj32ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj33ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(33);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj31EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj30EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 7456|0);
 $6 = $2;
 $7 = ((($6)) + 7456|0);
 (__ZN9BitMatrixILj31ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj32ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(32);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj30EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj29EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 6976|0);
 $6 = $2;
 $7 = ((($6)) + 6976|0);
 (__ZN9BitMatrixILj30ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj31ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(31);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj29EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj28EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 6512|0);
 $6 = $2;
 $7 = ((($6)) + 6512|0);
 (__ZN9BitMatrixILj29ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj30ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(30);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj28EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj27EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 6064|0);
 $6 = $2;
 $7 = ((($6)) + 6064|0);
 (__ZN9BitMatrixILj28ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj29ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(29);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj27EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj26EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 5632|0);
 $6 = $2;
 $7 = ((($6)) + 5632|0);
 (__ZN9BitMatrixILj27ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj28ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(28);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj26EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj25EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 5216|0);
 $6 = $2;
 $7 = ((($6)) + 5216|0);
 (__ZN9BitMatrixILj26ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj27ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(27);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj25EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj24EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 4816|0);
 $6 = $2;
 $7 = ((($6)) + 4816|0);
 (__ZN9BitMatrixILj25ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj26ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(26);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj24EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj23EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 4432|0);
 $6 = $2;
 $7 = ((($6)) + 4432|0);
 (__ZN9BitMatrixILj24ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj25ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(25);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj23EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj22EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 4064|0);
 $6 = $2;
 $7 = ((($6)) + 4064|0);
 (__ZN9BitMatrixILj23ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj24ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(24);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj22EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj21EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 3712|0);
 $6 = $2;
 $7 = ((($6)) + 3712|0);
 (__ZN9BitMatrixILj22ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj23ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(23);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj21EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj20EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 3376|0);
 $6 = $2;
 $7 = ((($6)) + 3376|0);
 (__ZN9BitMatrixILj21ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj22ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(22);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj20EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj19EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 3056|0);
 $6 = $2;
 $7 = ((($6)) + 3056|0);
 (__ZN9BitMatrixILj20ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj21ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(21);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj19EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj18EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 2752|0);
 $6 = $2;
 $7 = ((($6)) + 2752|0);
 (__ZN9BitMatrixILj19ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj20ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(20);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj18EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj17EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 2464|0);
 $6 = $2;
 $7 = ((($6)) + 2464|0);
 (__ZN9BitMatrixILj18ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj19ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(19);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj17EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj16EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 2192|0);
 $6 = $2;
 $7 = ((($6)) + 2192|0);
 (__ZN9BitMatrixILj17ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj18ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(18);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj16EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj15EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 1936|0);
 $6 = $2;
 $7 = ((($6)) + 1936|0);
 (__ZN9BitMatrixILj16ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj17ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(17);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj15EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj14EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 1696|0);
 $6 = $2;
 $7 = ((($6)) + 1696|0);
 (__ZN9BitMatrixILj15ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj16ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(16);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj14EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj13EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 1472|0);
 $6 = $2;
 $7 = ((($6)) + 1472|0);
 (__ZN9BitMatrixILj14ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj15ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(15);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj13EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj12EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 1264|0);
 $6 = $2;
 $7 = ((($6)) + 1264|0);
 (__ZN9BitMatrixILj13ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj14ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(14);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj12EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj11EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 1072|0);
 $6 = $2;
 $7 = ((($6)) + 1072|0);
 (__ZN9BitMatrixILj12ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj13ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(13);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj11EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj10EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 896|0);
 $6 = $2;
 $7 = ((($6)) + 896|0);
 (__ZN9BitMatrixILj11ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj12ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(12);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj10EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj9EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 736|0);
 $6 = $2;
 $7 = ((($6)) + 736|0);
 (__ZN9BitMatrixILj10ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj11ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(11);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj9EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj8EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 592|0);
 $6 = $2;
 $7 = ((($6)) + 592|0);
 (__ZN9BitMatrixILj9ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj10ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(10);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj8EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj7EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 464|0);
 $6 = $2;
 $7 = ((($6)) + 464|0);
 (__ZN9BitMatrixILj8ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj9ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(9);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj7EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj6EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 352|0);
 $6 = $2;
 $7 = ((($6)) + 352|0);
 (__ZN9BitMatrixILj7ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj8ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(8);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj6EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj5EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 256|0);
 $6 = $2;
 $7 = ((($6)) + 256|0);
 (__ZN9BitMatrixILj6ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj7ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(7);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj5EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj4EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 176|0);
 $6 = $2;
 $7 = ((($6)) + 176|0);
 (__ZN9BitMatrixILj5ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj6ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(6);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj4EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj3EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 112|0);
 $6 = $2;
 $7 = ((($6)) + 112|0);
 (__ZN9BitMatrixILj4ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj5ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(5);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj3EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj2EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 64|0);
 $6 = $2;
 $7 = ((($6)) + 64|0);
 (__ZN9BitMatrixILj3ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj4ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(4);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj2EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj1EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 32|0);
 $6 = $2;
 $7 = ((($6)) + 32|0);
 (__ZN9BitMatrixILj2ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj3ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(3);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj1EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN14MultiQuadTupleILj128ELj128ELj0EEaSERKS0_($3,$4)|0);
 $5 = ((($3)) + 16|0);
 $6 = $2;
 $7 = ((($6)) + 16|0);
 (__ZN9BitMatrixILj1ELj128EEaSERKS0_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj2ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(2);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN14MultiQuadTupleILj128ELj128ELj0EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZN9BitVectorILj128EEaSERKS0_($3,$4)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj1ELj128EEaSERKS0_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $__i0 = 0;
 while(1) {
  $4 = $__i0;
  $5 = ($4|0)!=(1);
  if (!($5)) {
   break;
  }
  $6 = $__i0;
  $7 = (($3) + ($6<<4)|0);
  $8 = $__i0;
  $9 = $2;
  $10 = (($9) + ($8<<4)|0);
  (__ZN9BitVectorILj128EEaSERKS0_($7,$10)|0);
  $11 = $__i0;
  $12 = (($11) + 1)|0;
  $__i0 = $12;
 }
 STACKTOP = sp;return ($3|0);
}
function __ZN9BitMatrixILj128ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(128);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj127EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2048|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 128032|0);
 __ZN9BitMatrixILj127ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj127ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj126EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj127ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(127);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj126EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2032|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 126016|0);
 __ZN9BitMatrixILj126ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj126ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj125EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj126ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(126);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj125EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2016|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 124016|0);
 __ZN9BitMatrixILj125ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj125ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj124EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj125ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(125);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj124EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2000|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 122032|0);
 __ZN9BitMatrixILj124ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj124ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj123EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj124ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(124);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj123EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1984|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 120064|0);
 __ZN9BitMatrixILj123ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj123ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj122EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj123ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(123);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj122EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1968|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 118112|0);
 __ZN9BitMatrixILj122ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj122ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj121EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj122ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(122);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj121EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1952|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 116176|0);
 __ZN9BitMatrixILj121ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj121ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj120EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj121ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(121);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj120EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1936|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 114256|0);
 __ZN9BitMatrixILj120ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj120ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj119EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj120ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(120);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj119EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1920|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 112352|0);
 __ZN9BitMatrixILj119ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj119ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj118EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj119ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(119);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj118EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1904|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 110464|0);
 __ZN9BitMatrixILj118ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj118ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj117EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj118ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(118);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj117EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1888|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 108592|0);
 __ZN9BitMatrixILj117ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj117ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj116EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj117ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(117);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj116EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1872|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 106736|0);
 __ZN9BitMatrixILj116ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj116ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj115EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj116ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(116);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj115EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1856|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 104896|0);
 __ZN9BitMatrixILj115ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj115ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj114EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj115ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(115);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj114EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1840|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 103072|0);
 __ZN9BitMatrixILj114ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj114ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj113EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj114ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(114);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj113EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1824|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 101264|0);
 __ZN9BitMatrixILj113ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj113ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj112EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj113ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(113);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj112EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1808|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 99472|0);
 __ZN9BitMatrixILj112ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj112ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj111EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj112ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(112);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj111EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1792|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 97696|0);
 __ZN9BitMatrixILj111ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj111ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj110EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj111ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(111);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj110EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1776|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 95936|0);
 __ZN9BitMatrixILj110ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj110ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj109EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj110ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(110);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj109EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1760|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 94192|0);
 __ZN9BitMatrixILj109ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj109ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj108EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj109ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(109);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj108EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1744|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 92464|0);
 __ZN9BitMatrixILj108ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj108ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj107EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj108ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(108);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj107EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1728|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 90752|0);
 __ZN9BitMatrixILj107ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj107ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj106EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj107ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(107);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj106EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1712|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 89056|0);
 __ZN9BitMatrixILj106ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj106ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj105EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj106ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(106);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj105EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1696|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 87376|0);
 __ZN9BitMatrixILj105ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj105ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj104EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj105ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(105);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj104EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1680|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 85712|0);
 __ZN9BitMatrixILj104ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj104ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj103EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj104ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(104);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj103EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1664|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 84064|0);
 __ZN9BitMatrixILj103ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj103ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj102EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj103ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(103);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj102EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1648|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 82432|0);
 __ZN9BitMatrixILj102ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj102ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj101EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj102ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(102);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj101EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1632|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 80816|0);
 __ZN9BitMatrixILj101ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj101ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj100EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj101ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(101);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj100EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1616|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 79216|0);
 __ZN9BitMatrixILj100ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj100ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj99EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj100ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(100);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj99EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1600|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 77632|0);
 __ZN9BitMatrixILj99ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj99ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj98EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj99ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(99);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj98EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1584|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 76064|0);
 __ZN9BitMatrixILj98ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj98ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj97EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj98ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(98);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj97EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1568|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 74512|0);
 __ZN9BitMatrixILj97ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj97ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj96EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj97ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(97);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj96EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1552|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 72976|0);
 __ZN9BitMatrixILj96ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj96ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj95EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj96ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(96);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj95EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1536|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 71456|0);
 __ZN9BitMatrixILj95ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj95ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj94EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj95ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(95);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj94EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1520|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 69952|0);
 __ZN9BitMatrixILj94ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj94ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj93EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj94ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(94);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj93EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1504|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 68464|0);
 __ZN9BitMatrixILj93ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj93ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj92EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj93ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(93);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj92EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1488|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 66992|0);
 __ZN9BitMatrixILj92ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj92ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj91EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj92ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(92);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj91EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1472|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 65536|0);
 __ZN9BitMatrixILj91ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj91ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj90EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj91ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(91);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj90EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1456|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 64096|0);
 __ZN9BitMatrixILj90ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj90ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj89EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj90ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(90);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj89EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1440|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 62672|0);
 __ZN9BitMatrixILj89ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj89ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj88EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj89ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(89);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj88EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1424|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 61264|0);
 __ZN9BitMatrixILj88ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj88ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj87EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj88ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(88);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj87EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1408|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 59872|0);
 __ZN9BitMatrixILj87ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj87ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj86EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj87ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(87);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj86EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1392|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 58496|0);
 __ZN9BitMatrixILj86ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj86ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj85EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj86ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(86);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj85EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1376|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 57136|0);
 __ZN9BitMatrixILj85ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj85ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj84EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj85ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(85);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj84EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1360|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 55792|0);
 __ZN9BitMatrixILj84ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj84ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj83EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj84ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(84);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj83EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1344|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 54464|0);
 __ZN9BitMatrixILj83ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj83ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj82EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj83ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(83);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj82EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1328|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 53152|0);
 __ZN9BitMatrixILj82ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj82ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj81EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj82ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(82);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj81EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1312|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 51856|0);
 __ZN9BitMatrixILj81ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj81ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj80EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj81ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(81);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj80EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1296|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 50576|0);
 __ZN9BitMatrixILj80ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj80ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj79EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj80ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(80);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj79EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1280|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 49312|0);
 __ZN9BitMatrixILj79ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj79ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj78EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj79ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(79);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj78EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1264|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 48064|0);
 __ZN9BitMatrixILj78ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj78ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj77EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj78ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(78);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj77EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1248|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 46832|0);
 __ZN9BitMatrixILj77ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj77ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj76EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj77ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(77);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj76EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1232|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 45616|0);
 __ZN9BitMatrixILj76ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj76ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj75EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj76ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(76);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj75EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1216|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 44416|0);
 __ZN9BitMatrixILj75ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj75ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj74EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj75ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(75);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj74EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1200|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 43232|0);
 __ZN9BitMatrixILj74ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj74ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj73EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj74ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(74);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj73EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1184|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 42064|0);
 __ZN9BitMatrixILj73ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj73ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj72EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj73ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(73);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj72EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1168|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 40912|0);
 __ZN9BitMatrixILj72ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj72ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj71EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj72ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(72);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj71EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1152|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 39776|0);
 __ZN9BitMatrixILj71ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj71ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj70EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj71ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(71);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj70EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1136|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 38656|0);
 __ZN9BitMatrixILj70ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj70ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj69EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj70ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(70);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj69EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1120|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 37552|0);
 __ZN9BitMatrixILj69ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj69ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj68EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj69ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(69);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj68EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1104|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 36464|0);
 __ZN9BitMatrixILj68ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj68ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj67EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj68ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(68);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj67EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1088|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 35392|0);
 __ZN9BitMatrixILj67ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj67ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj66EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj67ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(67);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj66EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1072|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 34336|0);
 __ZN9BitMatrixILj66ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj66ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj65EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj66ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(66);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj65EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1056|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 33296|0);
 __ZN9BitMatrixILj65ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj65ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj64EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj65ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(65);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj64EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 32272|0);
 __ZN9BitMatrixILj64ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj64ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj63EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj64ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(64);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj63EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1024|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 31264|0);
 __ZN9BitMatrixILj63ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj63ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj62EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj63ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(63);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj62EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1008|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 30272|0);
 __ZN9BitMatrixILj62ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj62ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj61EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj62ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(62);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj61EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 992|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 29296|0);
 __ZN9BitMatrixILj61ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj61ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj60EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj61ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(61);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj60EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 976|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 28336|0);
 __ZN9BitMatrixILj60ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj60ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj59EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj60ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(60);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj59EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 960|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 27392|0);
 __ZN9BitMatrixILj59ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj59ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj58EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj59ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(59);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj58EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 944|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 26464|0);
 __ZN9BitMatrixILj58ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj58ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj57EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj58ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(58);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj57EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 928|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 25552|0);
 __ZN9BitMatrixILj57ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj57ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj56EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj57ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(57);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj56EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 912|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 24656|0);
 __ZN9BitMatrixILj56ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj56ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj55EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj56ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(56);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj55EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 896|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 23776|0);
 __ZN9BitMatrixILj55ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj55ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj54EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj55ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(55);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj54EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 880|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 22912|0);
 __ZN9BitMatrixILj54ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj54ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj53EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj54ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(54);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj53EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 864|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 22064|0);
 __ZN9BitMatrixILj53ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj53ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj52EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj53ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(53);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj52EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 848|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 21232|0);
 __ZN9BitMatrixILj52ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj52ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj51EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj52ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(52);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj51EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 832|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 20416|0);
 __ZN9BitMatrixILj51ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj51ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj50EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj51ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(51);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj50EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 816|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 19616|0);
 __ZN9BitMatrixILj50ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj50ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj49EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj50ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(50);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj49EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 800|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 18832|0);
 __ZN9BitMatrixILj49ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj49ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj48EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj49ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(49);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj48EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 784|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 18064|0);
 __ZN9BitMatrixILj48ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj48ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj47EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj48ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(48);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj47EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 768|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 17312|0);
 __ZN9BitMatrixILj47ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj47ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj46EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj47ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(47);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj46EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 752|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 16576|0);
 __ZN9BitMatrixILj46ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj46ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj45EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj46ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(46);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj45EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 736|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 15856|0);
 __ZN9BitMatrixILj45ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj45ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj44EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj45ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(45);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj44EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 720|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 15152|0);
 __ZN9BitMatrixILj44ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj44ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj43EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj44ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(44);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj43EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 704|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 14464|0);
 __ZN9BitMatrixILj43ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj43ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj42EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj43ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(43);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj42EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 688|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 13792|0);
 __ZN9BitMatrixILj42ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj42ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj41EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj42ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(42);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj41EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 672|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 13136|0);
 __ZN9BitMatrixILj41ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj41ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj40EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj41ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(41);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj40EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 656|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 12496|0);
 __ZN9BitMatrixILj40ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj40ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj39EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj40ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(40);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj39EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 640|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 11872|0);
 __ZN9BitMatrixILj39ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj39ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj38EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj39ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(39);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj38EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 624|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 11264|0);
 __ZN9BitMatrixILj38ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj38ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj37EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj38ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(38);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj37EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 608|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 10672|0);
 __ZN9BitMatrixILj37ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj37ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj36EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj37ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(37);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj36EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 592|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 10096|0);
 __ZN9BitMatrixILj36ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj36ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj35EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj36ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(36);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj35EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 576|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 9536|0);
 __ZN9BitMatrixILj35ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj35ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj34EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj35ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(35);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj34EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 560|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 8992|0);
 __ZN9BitMatrixILj34ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj34ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj33EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj34ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(34);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj33EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 544|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 8464|0);
 __ZN9BitMatrixILj33ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj33ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj32EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj33ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(33);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj32EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 528|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 7952|0);
 __ZN9BitMatrixILj32ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj32ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj31EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj32ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(32);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj31EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 7456|0);
 __ZN9BitMatrixILj31ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj31ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj30EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj31ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(31);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj30EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 496|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 6976|0);
 __ZN9BitMatrixILj30ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj30ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj29EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj30ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(30);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj29EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 480|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 6512|0);
 __ZN9BitMatrixILj29ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj29ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj28EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj29ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(29);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj28EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 464|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 6064|0);
 __ZN9BitMatrixILj28ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj28ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj27EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj28ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(28);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj27EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 448|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 5632|0);
 __ZN9BitMatrixILj27ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj27ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj26EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj27ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(27);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj26EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 432|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 5216|0);
 __ZN9BitMatrixILj26ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj26ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj25EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj26ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(26);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj25EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 4816|0);
 __ZN9BitMatrixILj25ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj25ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj24EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj25ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(25);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj24EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 400|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 4432|0);
 __ZN9BitMatrixILj24ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj24ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj23EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj24ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(24);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj23EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 384|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 4064|0);
 __ZN9BitMatrixILj23ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj23ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj22EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj23ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(23);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj22EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 368|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 3712|0);
 __ZN9BitMatrixILj22ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj22ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj21EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj22ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(22);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj21EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 3376|0);
 __ZN9BitMatrixILj21ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj21ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj20EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj21ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(21);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj20EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 3056|0);
 __ZN9BitMatrixILj20ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj20ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj19EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj20ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(20);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj19EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 2752|0);
 __ZN9BitMatrixILj19ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj19ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj18EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj19ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(19);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj18EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 2464|0);
 __ZN9BitMatrixILj18ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj18ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj17EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj18ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(18);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj17EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 2192|0);
 __ZN9BitMatrixILj17ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj17ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj16EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj17ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(17);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj16EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 1936|0);
 __ZN9BitMatrixILj16ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj16ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj15EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj16ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(16);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj15EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 1696|0);
 __ZN9BitMatrixILj15ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj15ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj14EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj15ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(15);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj14EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 1472|0);
 __ZN9BitMatrixILj14ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj14ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj13EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj14ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(14);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj13EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 1264|0);
 __ZN9BitMatrixILj13ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj13ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj12EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj13ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(13);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj12EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 1072|0);
 __ZN9BitMatrixILj12ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj12ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj11EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj12ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(12);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj11EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 896|0);
 __ZN9BitMatrixILj11ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj11ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj10EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj11ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(11);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj10EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 736|0);
 __ZN9BitMatrixILj10ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj10ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj9EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj10ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(10);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj9EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 592|0);
 __ZN9BitMatrixILj9ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj9ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj8EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj9ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(9);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj8EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 464|0);
 __ZN9BitMatrixILj8ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj8ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj7EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj8ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(8);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj7EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 352|0);
 __ZN9BitMatrixILj7ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj7ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj6EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj7ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(7);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj6EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 256|0);
 __ZN9BitMatrixILj6ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj6ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj5EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj6ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(6);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj5EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 176|0);
 __ZN9BitMatrixILj5ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj5ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj4EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj5ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(5);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj4EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 112|0);
 __ZN9BitMatrixILj4ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj4ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj3EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj4ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(4);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj3EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 64|0);
 __ZN9BitMatrixILj3ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj3ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj2EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj3ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(3);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj2EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 32|0);
 __ZN9BitMatrixILj2ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj2ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj1EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj2ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(2);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj1EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = ((($2)) + 16|0);
 __ZN9BitMatrixILj1ELj128EE12randomMatrixEv($1);
 (__ZN9BitMatrixILj1ELj128EEaSERKS0_($3,$1)|0);
 __ZN14MultiQuadTupleILj128ELj128ELj0EE9randomizeEv($2);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj1ELj128EE12randomMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = ($1>>>0)<(1);
  if (!($2)) {
   break;
  }
  $3 = $i;
  $4 = (($agg$result) + ($3<<4)|0);
  __ZN9BitVectorILj128EE12randomVectorEv($0);
  (__ZN9BitVectorILj128EEaSERKS0_($4,$0)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN14MultiQuadTupleILj128ELj128ELj0EE9randomizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 __ZN9BitVectorILj128EE12randomVectorEv($1);
 (__ZN9BitVectorILj128EEaSERKS0_($2,$1)|0);
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj256ELj256EE10zeroMatrixEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $i = 0;
 while(1) {
  $0 = $i;
  $1 = ($0>>>0)<(256);
  if (!($1)) {
   break;
  }
  $2 = $i;
  $3 = (($agg$result) + ($2<<5)|0);
  $4 = (__ZN9BitVectorILj256EE10zeroVectorEv()|0);
  (__ZN9BitVectorILj256EEaSERKS0_($3,$4)|0);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZN9BitVectorILj256EE25randomVectorLeadingZeroesEj($agg$result,$n) {
 $agg$result = $agg$result|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $n;
 __ZN9BitVectorILj256EE12randomVectorEv($agg$result);
 $i = 0;
 while(1) {
  $1 = $i;
  $2 = $0;
  $3 = ($1>>>0)<($2>>>0);
  if (!($3)) {
   break;
  }
  $4 = $i;
  __ZN9BitVectorILj256EE5clearEj($agg$result,$4);
  $5 = $i;
  $6 = (($5) + 1)|0;
  $i = $6;
 }
 STACKTOP = sp;return;
}
function __ZNK9BitVectorILj256EE11getFirstOneEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $1;
 $i = 0;
 while(1) {
  $3 = $i;
  $4 = ($3>>>0)<(256);
  if (!($4)) {
   label = 6;
   break;
  }
  $5 = $i;
  $6 = (__ZNK9BitVectorILj256EE3getEj($2,$5)|0);
  $7 = $i;
  if ($6) {
   label = 4;
   break;
  }
  $8 = (($7) + 1)|0;
  $i = $8;
 }
 if ((label|0) == 4) {
  $0 = $7;
  $9 = $0;
  STACKTOP = sp;return ($9|0);
 }
 else if ((label|0) == 6) {
  $0 = -1;
  $9 = $0;
  STACKTOP = sp;return ($9|0);
 }
 return (0)|0;
}
function __ZN9BitMatrixILj256ELj256EE3setEjj($this,$rowIndex,$colIndex) {
 $this = $this|0;
 $rowIndex = $rowIndex|0;
 $colIndex = $colIndex|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $rowIndex;
 $2 = $colIndex;
 $3 = $0;
 $4 = $1;
 $5 = (($3) + ($4<<5)|0);
 $6 = $2;
 __ZN9BitVectorILj256EE3setEj($5,$6);
 STACKTOP = sp;return;
}
function __ZN9BitVectorILj256EE5clearEj($this,$n) {
 $this = $this|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $n;
 $2 = $0;
 $3 = $1;
 $4 = $3 & 63;
 $5 = (_bitshift64Shl(1,0,($4|0))|0);
 $6 = tempRet0;
 $7 = $5 ^ -1;
 $8 = $6 ^ -1;
 $9 = $1;
 $10 = $9 >>> 6;
 $11 = (($2) + ($10<<3)|0);
 $12 = $11;
 $13 = $12;
 $14 = HEAP32[$13>>2]|0;
 $15 = (($12) + 4)|0;
 $16 = $15;
 $17 = HEAP32[$16>>2]|0;
 $18 = $14 & $7;
 $19 = $17 & $8;
 $20 = $11;
 $21 = $20;
 HEAP32[$21>>2] = $18;
 $22 = (($20) + 4)|0;
 $23 = $22;
 HEAP32[$23>>2] = $19;
 STACKTOP = sp;return;
}
function __ZN9BitMatrixILj256ELj256EE6setRowEjRK9BitVectorILj256EE($this,$rowIndex,$v) {
 $this = $this|0;
 $rowIndex = $rowIndex|0;
 $v = $v|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $rowIndex;
 $2 = $v;
 $3 = $0;
 $4 = $1;
 $5 = (($3) + ($4<<5)|0);
 $6 = $2;
 (__ZN9BitVectorILj256EEaSERKS0_($5,$6)|0);
 STACKTOP = sp;return;
}
function __ZNK9BitMatrixILj256ELj256EEmlILj256EEEKS_ILj256EXT_EERS3_($agg$result,$this,$rhs) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $rhs = $rhs|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $j = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $rhs;
 $2 = $0;
 __ZN9BitMatrixILj256ELj256EE10zeroMatrixEv($agg$result);
 $i = 0;
 while(1) {
  $3 = $i;
  $4 = ($3>>>0)<(256);
  if (!($4)) {
   break;
  }
  $j = 0;
  while(1) {
   $5 = $j;
   $6 = ($5>>>0)<(256);
   $7 = $i;
   if (!($6)) {
    break;
   }
   $8 = $j;
   $9 = (__ZNK9BitMatrixILj256ELj256EE3getEjj($2,$7,$8)|0);
   if ($9) {
    $10 = $i;
    $11 = (__ZN9BitMatrixILj256ELj256EEixEj($agg$result,$10)|0);
    $12 = $1;
    $13 = $j;
    $14 = (__ZNK9BitMatrixILj256ELj256EEixEj($12,$13)|0);
    (__ZN9BitVectorILj256EEeOERKS0_($11,$14)|0);
   }
   $15 = $j;
   $16 = (($15) + 1)|0;
   $j = $16;
  }
  $17 = (($7) + 1)|0;
  $i = $17;
 }
 STACKTOP = sp;return;
}
function __ZNK9BitMatrixILj256ELj256EE3getEjj($this,$rowIndex,$colIndex) {
 $this = $this|0;
 $rowIndex = $rowIndex|0;
 $colIndex = $colIndex|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $rowIndex;
 $2 = $colIndex;
 $3 = $0;
 $4 = $1;
 $5 = (($3) + ($4<<5)|0);
 $6 = $2;
 $7 = (__ZNK9BitVectorILj256EE3getEj($5,$6)|0);
 STACKTOP = sp;return ($7|0);
}
function __ZN9BitMatrixILj256ELj256EEixEj($this,$rowIndex) {
 $this = $this|0;
 $rowIndex = $rowIndex|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $rowIndex;
 $2 = $0;
 $3 = $1;
 $4 = (($2) + ($3<<5)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK9BitMatrixILj256ELj256EEixEj($this,$rowIndex) {
 $this = $this|0;
 $rowIndex = $rowIndex|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $rowIndex;
 $2 = $0;
 $3 = $1;
 $4 = (($2) + ($3<<5)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN9BitVectorILj256EEeOERKS0_($this,$rhs) {
 $this = $this|0;
 $rhs = $rhs|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $rhs;
 $2 = $0;
 $i = 0;
 while(1) {
  $3 = $i;
  $4 = ($3>>>0)<(4);
  if (!($4)) {
   break;
  }
  $5 = $i;
  $6 = $1;
  $7 = (($6) + ($5<<3)|0);
  $8 = $7;
  $9 = $8;
  $10 = HEAP32[$9>>2]|0;
  $11 = (($8) + 4)|0;
  $12 = $11;
  $13 = HEAP32[$12>>2]|0;
  $14 = $i;
  $15 = (($2) + ($14<<3)|0);
  $16 = $15;
  $17 = $16;
  $18 = HEAP32[$17>>2]|0;
  $19 = (($16) + 4)|0;
  $20 = $19;
  $21 = HEAP32[$20>>2]|0;
  $22 = $18 ^ $10;
  $23 = $21 ^ $13;
  $24 = $15;
  $25 = $24;
  HEAP32[$25>>2] = $22;
  $26 = (($24) + 4)|0;
  $27 = $26;
  HEAP32[$27>>2] = $23;
  $28 = $i;
  $29 = (($28) + 1)|0;
  $i = $29;
 }
 STACKTOP = sp;return ($2|0);
}
function __ZNK9BitVectorILj256EE3getEj($this,$n) {
 $this = $this|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $n;
 $2 = $0;
 $3 = $1;
 $4 = $3 >>> 6;
 $5 = (($2) + ($4<<3)|0);
 $6 = $5;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = (($6) + 4)|0;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = $1;
 $13 = $12 & 63;
 $14 = (_bitshift64Shl(1,0,($13|0))|0);
 $15 = tempRet0;
 $16 = $8 & $14;
 $17 = $11 & $15;
 $18 = ($16|0)!=(0);
 $19 = ($17|0)!=(0);
 $20 = $18 | $19;
 STACKTOP = sp;return ($20|0);
}
function __ZN9BitVectorILj256EE3setEj($this,$n) {
 $this = $this|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $n;
 $2 = $0;
 $3 = $1;
 $4 = $3 & 63;
 $5 = (_bitshift64Shl(1,0,($4|0))|0);
 $6 = tempRet0;
 $7 = $1;
 $8 = $7 >>> 6;
 $9 = (($2) + ($8<<3)|0);
 $10 = $9;
 $11 = $10;
 $12 = HEAP32[$11>>2]|0;
 $13 = (($10) + 4)|0;
 $14 = $13;
 $15 = HEAP32[$14>>2]|0;
 $16 = $12 | $5;
 $17 = $15 | $6;
 $18 = $9;
 $19 = $18;
 HEAP32[$19>>2] = $16;
 $20 = (($18) + 4)|0;
 $21 = $20;
 HEAP32[$21>>2] = $17;
 STACKTOP = sp;return;
}
function __ZN9BitVectorILj256EE12randomVectorEv($agg$result) {
 $agg$result = $agg$result|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN9BitVectorILj256EE10zeroVectorEv()|0);
 ;HEAP32[$agg$result>>2]=HEAP32[$0>>2]|0;HEAP32[$agg$result+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$agg$result+8>>2]=HEAP32[$0+8>>2]|0;HEAP32[$agg$result+12>>2]=HEAP32[$0+12>>2]|0;HEAP32[$agg$result+16>>2]=HEAP32[$0+16>>2]|0;HEAP32[$agg$result+20>>2]=HEAP32[$0+20>>2]|0;HEAP32[$agg$result+24>>2]=HEAP32[$0+24>>2]|0;HEAP32[$agg$result+28>>2]=HEAP32[$0+28>>2]|0;
 while(1) {
  $1 = (__ZNK9BitVectorILj256EE6isZeroEv($agg$result)|0);
  if (!($1)) {
   break;
  }
  $2 = HEAP32[2664>>2]|0;
  (_fread($agg$result,8,4,$2)|0);
 }
 return;
}
function __ZN9BitVectorILj256EE10zeroVectorEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN9BitVectorILj256EE4zeroEv(72);
 return (72|0);
}
function __ZNK9BitVectorILj256EE6isZeroEv($this) {
 $this = $this|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 8|0;
 $1 = $this;
 $2 = $1;
 $i = 0;
 while(1) {
  $3 = $i;
  $4 = ($3>>>0)<(4);
  if (!($4)) {
   label = 6;
   break;
  }
  $5 = $i;
  $6 = (($2) + ($5<<3)|0);
  $7 = $6;
  $8 = $7;
  $9 = HEAP32[$8>>2]|0;
  $10 = (($7) + 4)|0;
  $11 = $10;
  $12 = HEAP32[$11>>2]|0;
  $13 = ($9|0)!=(0);
  $14 = ($12|0)!=(0);
  $15 = $13 | $14;
  if ($15) {
   label = 4;
   break;
  }
  $16 = $i;
  $17 = (($16) + 1)|0;
  $i = $17;
 }
 if ((label|0) == 4) {
  $$expand_i1_val = 0;
  HEAP8[$0>>0] = $$expand_i1_val;
  $$pre_trunc = HEAP8[$0>>0]|0;
  $18 = $$pre_trunc&1;
  STACKTOP = sp;return ($18|0);
 }
 else if ((label|0) == 6) {
  $$expand_i1_val2 = 1;
  HEAP8[$0>>0] = $$expand_i1_val2;
  $$pre_trunc = HEAP8[$0>>0]|0;
  $18 = $$pre_trunc&1;
  STACKTOP = sp;return ($18|0);
 }
 return (0)|0;
}
function __ZN9BitVectorILj256EE4zeroEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $i = 0;
 while(1) {
  $2 = $i;
  $3 = ($2>>>0)<(4);
  if (!($3)) {
   break;
  }
  $4 = $i;
  $5 = (($1) + ($4<<3)|0);
  $6 = $5;
  $7 = $6;
  $8 = HEAP32[$7>>2]|0;
  $9 = (($6) + 4)|0;
  $10 = $9;
  $11 = HEAP32[$10>>2]|0;
  $12 = $5;
  $13 = $12;
  HEAP32[$13>>2] = 0;
  $14 = (($12) + 4)|0;
  $15 = $14;
  HEAP32[$15>>2] = 0;
  $16 = $i;
  $17 = (($16) + 1)|0;
  $i = $17;
 }
 STACKTOP = sp;return;
}
function ___getTypeName($ti) {
 $ti = $ti|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $ti;
 $2 = $1;
 $0 = $2;
 $3 = $0;
 $4 = ((($3)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (___strdup($5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZN53EmscriptenBindingInitializer_native_and_builtin_typesC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = (__ZN10emscripten8internal6TypeIDIvE3getEv()|0);
 __embind_register_void(($1|0),(18522|0));
 $2 = (__ZN10emscripten8internal6TypeIDIbE3getEv()|0);
 __embind_register_bool(($2|0),(18527|0),1,1,0);
 __ZN12_GLOBAL__N_1L16register_integerIcEEvPKc(18109);
 __ZN12_GLOBAL__N_1L16register_integerIaEEvPKc(18114);
 __ZN12_GLOBAL__N_1L16register_integerIhEEvPKc(18126);
 __ZN12_GLOBAL__N_1L16register_integerIsEEvPKc(18140);
 __ZN12_GLOBAL__N_1L16register_integerItEEvPKc(18146);
 __ZN12_GLOBAL__N_1L16register_integerIiEEvPKc(18532);
 __ZN12_GLOBAL__N_1L16register_integerIjEEvPKc(18536);
 __ZN12_GLOBAL__N_1L16register_integerIlEEvPKc(18549);
 __ZN12_GLOBAL__N_1L16register_integerImEEvPKc(18554);
 __ZN12_GLOBAL__N_1L14register_floatIfEEvPKc(18597);
 __ZN12_GLOBAL__N_1L14register_floatIdEEvPKc(18603);
 $3 = (__ZN10emscripten8internal6TypeIDINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv()|0);
 __embind_register_std_string(($3|0),(17183|0));
 $4 = (__ZN10emscripten8internal6TypeIDINSt3__112basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv()|0);
 __embind_register_std_string(($4|0),(14883|0));
 $5 = (__ZN10emscripten8internal6TypeIDINSt3__112basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv()|0);
 __embind_register_std_wstring(($5|0),4,(14916|0));
 $6 = (__ZN10emscripten8internal6TypeIDINS_3valEE3getEv()|0);
 __embind_register_emval(($6|0),(14929|0));
 __ZN12_GLOBAL__N_1L20register_memory_viewIcEEvPKc(14945);
 __ZN12_GLOBAL__N_1L20register_memory_viewIaEEvPKc(14975);
 __ZN12_GLOBAL__N_1L20register_memory_viewIhEEvPKc(15012);
 __ZN12_GLOBAL__N_1L20register_memory_viewIsEEvPKc(15051);
 __ZN12_GLOBAL__N_1L20register_memory_viewItEEvPKc(15082);
 __ZN12_GLOBAL__N_1L20register_memory_viewIiEEvPKc(15122);
 __ZN12_GLOBAL__N_1L20register_memory_viewIjEEvPKc(15151);
 __ZN12_GLOBAL__N_1L20register_memory_viewIlEEvPKc(15189);
 __ZN12_GLOBAL__N_1L20register_memory_viewImEEvPKc(15219);
 __ZN12_GLOBAL__N_1L20register_memory_viewIaEEvPKc(15258);
 __ZN12_GLOBAL__N_1L20register_memory_viewIhEEvPKc(15290);
 __ZN12_GLOBAL__N_1L20register_memory_viewIsEEvPKc(15323);
 __ZN12_GLOBAL__N_1L20register_memory_viewItEEvPKc(15356);
 __ZN12_GLOBAL__N_1L20register_memory_viewIiEEvPKc(15390);
 __ZN12_GLOBAL__N_1L20register_memory_viewIjEEvPKc(15423);
 __ZN12_GLOBAL__N_1L20register_memory_viewIfEEvPKc(15457);
 __ZN12_GLOBAL__N_1L20register_memory_viewIdEEvPKc(15488);
 __ZN12_GLOBAL__N_1L20register_memory_viewIeEEvPKc(15520);
 STACKTOP = sp;return;
}
function __GLOBAL__sub_I_bind_cpp() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___cxx_global_var_init15();
 return;
}
function __ZN10emscripten8internal6TypeIDIvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIvE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal6TypeIDIbE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIbE3getEv()|0);
 return ($0|0);
}
function __ZN12_GLOBAL__N_1L16register_integerIcEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDIcE3getEv()|0);
 $2 = $0;
 $3 = -128 << 24 >> 24;
 $4 = 127 << 24 >> 24;
 __embind_register_integer(($1|0),($2|0),1,($3|0),($4|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L16register_integerIaEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDIaE3getEv()|0);
 $2 = $0;
 $3 = -128 << 24 >> 24;
 $4 = 127 << 24 >> 24;
 __embind_register_integer(($1|0),($2|0),1,($3|0),($4|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L16register_integerIhEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDIhE3getEv()|0);
 $2 = $0;
 $3 = 0;
 $4 = 255;
 __embind_register_integer(($1|0),($2|0),1,($3|0),($4|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L16register_integerIsEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDIsE3getEv()|0);
 $2 = $0;
 $3 = -32768 << 16 >> 16;
 $4 = 32767 << 16 >> 16;
 __embind_register_integer(($1|0),($2|0),2,($3|0),($4|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L16register_integerItEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDItE3getEv()|0);
 $2 = $0;
 $3 = 0;
 $4 = 65535;
 __embind_register_integer(($1|0),($2|0),2,($3|0),($4|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L16register_integerIiEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDIiE3getEv()|0);
 $2 = $0;
 __embind_register_integer(($1|0),($2|0),4,-2147483648,2147483647);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L16register_integerIjEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDIjE3getEv()|0);
 $2 = $0;
 __embind_register_integer(($1|0),($2|0),4,0,-1);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L16register_integerIlEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDIlE3getEv()|0);
 $2 = $0;
 __embind_register_integer(($1|0),($2|0),4,-2147483648,2147483647);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L16register_integerImEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDImE3getEv()|0);
 $2 = $0;
 __embind_register_integer(($1|0),($2|0),4,0,-1);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L14register_floatIfEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDIfE3getEv()|0);
 $2 = $0;
 __embind_register_float(($1|0),($2|0),4);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L14register_floatIdEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDIdE3getEv()|0);
 $2 = $0;
 __embind_register_float(($1|0),($2|0),8);
 STACKTOP = sp;return;
}
function __ZN10emscripten8internal6TypeIDINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal6TypeIDINSt3__112basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINSt3__112basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal6TypeIDINSt3__112basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINSt3__112basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal6TypeIDINS_3valEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_3valEE3getEv()|0);
 return ($0|0);
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIcEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIcEEE3getEv()|0);
 $2 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIcEENS_15TypedArrayIndexEv()|0);
 $3 = $0;
 __embind_register_memory_view(($1|0),($2|0),($3|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIaEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIaEEE3getEv()|0);
 $2 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIaEENS_15TypedArrayIndexEv()|0);
 $3 = $0;
 __embind_register_memory_view(($1|0),($2|0),($3|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIhEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIhEEE3getEv()|0);
 $2 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIhEENS_15TypedArrayIndexEv()|0);
 $3 = $0;
 __embind_register_memory_view(($1|0),($2|0),($3|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIsEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIsEEE3getEv()|0);
 $2 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIsEENS_15TypedArrayIndexEv()|0);
 $3 = $0;
 __embind_register_memory_view(($1|0),($2|0),($3|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L20register_memory_viewItEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewItEEE3getEv()|0);
 $2 = (__ZN12_GLOBAL__N_118getTypedArrayIndexItEENS_15TypedArrayIndexEv()|0);
 $3 = $0;
 __embind_register_memory_view(($1|0),($2|0),($3|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIiEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIiEEE3getEv()|0);
 $2 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIiEENS_15TypedArrayIndexEv()|0);
 $3 = $0;
 __embind_register_memory_view(($1|0),($2|0),($3|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIjEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIjEEE3getEv()|0);
 $2 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIjEENS_15TypedArrayIndexEv()|0);
 $3 = $0;
 __embind_register_memory_view(($1|0),($2|0),($3|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIlEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIlEEE3getEv()|0);
 $2 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIlEENS_15TypedArrayIndexEv()|0);
 $3 = $0;
 __embind_register_memory_view(($1|0),($2|0),($3|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L20register_memory_viewImEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewImEEE3getEv()|0);
 $2 = (__ZN12_GLOBAL__N_118getTypedArrayIndexImEENS_15TypedArrayIndexEv()|0);
 $3 = $0;
 __embind_register_memory_view(($1|0),($2|0),($3|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIfEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIfEEE3getEv()|0);
 $2 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIfEENS_15TypedArrayIndexEv()|0);
 $3 = $0;
 __embind_register_memory_view(($1|0),($2|0),($3|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIdEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIdEEE3getEv()|0);
 $2 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIdEENS_15TypedArrayIndexEv()|0);
 $3 = $0;
 __embind_register_memory_view(($1|0),($2|0),($3|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIeEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $name;
 $1 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIeEEE3getEv()|0);
 $2 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIeEENS_15TypedArrayIndexEv()|0);
 $3 = $0;
 __embind_register_memory_view(($1|0),($2|0),($3|0));
 STACKTOP = sp;return;
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIeEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIeEEE3getEv()|0);
 return ($0|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIeEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 7;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIeEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (104|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIdEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIdEEE3getEv()|0);
 return ($0|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIdEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 7;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIdEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (112|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIfEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIfEEE3getEv()|0);
 return ($0|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIfEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 6;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIfEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (120|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewImEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewImEEE3getEv()|0);
 return ($0|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexImEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 5;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewImEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (128|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIlEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIlEEE3getEv()|0);
 return ($0|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIlEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIlEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (136|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIjEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIjEEE3getEv()|0);
 return ($0|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIjEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 5;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIjEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (144|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIiEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIiEEE3getEv()|0);
 return ($0|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIiEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIiEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (152|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewItEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewItEEE3getEv()|0);
 return ($0|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexItEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 3;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewItEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (160|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIsEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIsEEE3getEv()|0);
 return ($0|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIsEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIsEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (168|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIhEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIhEEE3getEv()|0);
 return ($0|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIhEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIhEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (176|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIaEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIaEEE3getEv()|0);
 return ($0|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIaEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIaEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (184|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIcEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIcEEE3getEv()|0);
 return ($0|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIcEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIcEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (192|0);
}
function __ZN10emscripten8internal11LightTypeIDINS_3valEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (200|0);
}
function __ZN10emscripten8internal11LightTypeIDINSt3__112basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (208|0);
}
function __ZN10emscripten8internal11LightTypeIDINSt3__112basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (240|0);
}
function __ZN10emscripten8internal11LightTypeIDINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (264|0);
}
function __ZN10emscripten8internal6TypeIDIdE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIdE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal11LightTypeIDIdE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (544|0);
}
function __ZN10emscripten8internal6TypeIDIfE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIfE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal11LightTypeIDIfE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (536|0);
}
function __ZN10emscripten8internal6TypeIDImE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDImE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal11LightTypeIDImE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (528|0);
}
function __ZN10emscripten8internal6TypeIDIlE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIlE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal11LightTypeIDIlE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (520|0);
}
function __ZN10emscripten8internal6TypeIDIjE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIjE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal11LightTypeIDIjE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (512|0);
}
function __ZN10emscripten8internal6TypeIDIiE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIiE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal11LightTypeIDIiE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (504|0);
}
function __ZN10emscripten8internal6TypeIDItE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDItE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal11LightTypeIDItE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (496|0);
}
function __ZN10emscripten8internal6TypeIDIsE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIsE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal11LightTypeIDIsE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (488|0);
}
function __ZN10emscripten8internal6TypeIDIhE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIhE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal11LightTypeIDIhE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (472|0);
}
function __ZN10emscripten8internal6TypeIDIaE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIaE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal11LightTypeIDIaE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (480|0);
}
function __ZN10emscripten8internal6TypeIDIcE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIcE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal11LightTypeIDIcE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (464|0);
}
function __ZN10emscripten8internal11LightTypeIDIbE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (456|0);
}
function __ZN10emscripten8internal11LightTypeIDIvE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (448|0);
}
function ___cxx_global_var_init15() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN53EmscriptenBindingInitializer_native_and_builtin_typesC2Ev(16175);
 return;
}
function _abort_message($format,$varargs) {
 $format = $format|0;
 $varargs = $varargs|0;
 var $0 = 0, $list = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $list = sp;
 HEAP32[$list>>2] = $varargs;
 $0 = HEAP32[3164>>2]|0;
 (_vfprintf($0,$format,$list)|0);
 (_fputc(10,$0)|0);
 _abort();
 // unreachable;
}
function ___cxa_demangle($mangled_name,$buf,$n,$status) {
 $mangled_name = $mangled_name|0;
 $buf = $buf|0;
 $n = $n|0;
 $status = $status|0;
 var $$0 = 0, $$028 = 0, $$1 = 0, $$pr$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__v$i$i = 0, $a = 0, $db = 0, $internal_status = 0, $or$cond = 0, $or$cond6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v$i$i = sp + 4184|0;
 $a = sp;
 $db = sp + 4120|0;
 $internal_status = sp + 4112|0;
 $0 = ($mangled_name|0)==(0|0);
 L1: do {
  if ($0) {
   label = 3;
  } else {
   $1 = ($buf|0)!=(0|0);
   $2 = ($n|0)==(0|0);
   $or$cond = $1 & $2;
   if ($or$cond) {
    label = 3;
   } else {
    if ($1) {
     $4 = HEAP32[$n>>2]|0;
     $86 = $4;
    } else {
     $86 = 0;
    }
    $5 = ((($a)) + 4096|0);
    HEAP32[$5>>2] = $a;
    $6 = $a;
    HEAP32[$db>>2] = 0;
    $7 = ((($db)) + 4|0);
    HEAP32[$7>>2] = 0;
    $8 = ((($db)) + 8|0);
    HEAP32[$8>>2] = 0;
    $9 = ((($db)) + 12|0);
    HEAP32[$9>>2] = $6;
    $10 = ((($db)) + 16|0);
    HEAP32[$10>>2] = 0;
    $11 = ((($db)) + 20|0);
    HEAP32[$11>>2] = 0;
    $12 = ((($db)) + 24|0);
    HEAP32[$12>>2] = 0;
    $13 = ((($db)) + 28|0);
    HEAP32[$13>>2] = $6;
    $14 = ((($db)) + 32|0);
    HEAP32[$14>>2] = 0;
    $15 = ((($db)) + 36|0);
    HEAP32[$15>>2] = 0;
    $16 = ((($db)) + 40|0);
    HEAP32[$16>>2] = 0;
    $17 = ((($db)) + 44|0);
    HEAP32[$17>>2] = $6;
    $18 = ((($db)) + 48|0);
    $19 = ((($db)) + 61|0);
    ;HEAP32[$18>>2]=0|0;HEAP32[$18+4>>2]=0|0;HEAP32[$18+8>>2]=0|0;HEAP8[$18+12>>0]=0|0;
    HEAP8[$19>>0] = 1;
    $20 = ((($db)) + 32|0);
    __ZNSt3__114__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEEC2EjjSB_($__v$i$i,1,0,$17);
    $21 = ((($__v$i$i)) + 8|0);
    $22 = HEAP32[$21>>2]|0;
    HEAP32[$22>>2] = 0;
    $23 = ((($22)) + 4|0);
    HEAP32[$23>>2] = 0;
    $24 = ((($22)) + 8|0);
    HEAP32[$24>>2] = 0;
    $25 = ((($22)) + 12|0);
    HEAP32[$25>>2] = $6;
    $26 = ((($22)) + 16|0);
    HEAP32[$21>>2] = $26;
    __ZNSt3__16vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE($20,$__v$i$i);
    __ZNSt3__114__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEED2Ev($__v$i$i);
    $27 = ((($db)) + 62|0);
    HEAP8[$27>>0] = 0;
    $28 = ((($db)) + 63|0);
    HEAP8[$28>>0] = 1;
    HEAP32[$internal_status>>2] = 0;
    $29 = (_strlen($mangled_name)|0);
    $30 = (($mangled_name) + ($29)|0);
    __THREW__ = 0;
    invoke_viiii(386,($mangled_name|0),($30|0),($db|0),($internal_status|0));
    $31 = __THREW__; __THREW__ = 0;
    $32 = $31&1;
    L7: do {
     if (!($32)) {
      $33 = HEAP32[$internal_status>>2]|0;
      $34 = ($33|0)!=(0);
      $35 = HEAP8[$27>>0]|0;
      $36 = ($35<<24>>24)==(0);
      $or$cond6 = $34 | $36;
      do {
       if ($or$cond6) {
        $63 = $33;
        label = 19;
       } else {
        $37 = HEAP32[$20>>2]|0;
        $38 = HEAP32[$15>>2]|0;
        $39 = ($37|0)==($38|0);
        if ($39) {
         label = 20;
        } else {
         $40 = HEAP32[$37>>2]|0;
         $41 = ((($37)) + 4|0);
         $42 = HEAP32[$41>>2]|0;
         $43 = ($40|0)==($42|0);
         if ($43) {
          label = 20;
         } else {
          HEAP8[$27>>0] = 0;
          HEAP8[$19>>0] = 0;
          $44 = HEAP32[$db>>2]|0;
          $45 = HEAP32[$7>>2]|0;
          $46 = ($45|0)==($44|0);
          if (!($46)) {
           $48 = $45;
           while(1) {
            $47 = ((($48)) + -24|0);
            HEAP32[$7>>2] = $47;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($47);
            $49 = HEAP32[$7>>2]|0;
            $50 = ($49|0)==($44|0);
            if ($50) {
             break;
            } else {
             $48 = $49;
            }
           }
          }
          $51 = HEAP32[$10>>2]|0;
          $52 = HEAP32[$11>>2]|0;
          $53 = ($52|0)==($51|0);
          if (!($53)) {
           $55 = $52;
           while(1) {
            $54 = ((($55)) + -16|0);
            HEAP32[$11>>2] = $54;
            __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($54);
            $56 = HEAP32[$11>>2]|0;
            $57 = ($56|0)==($51|0);
            if ($57) {
             break;
            } else {
             $55 = $56;
            }
           }
          }
          __THREW__ = 0;
          invoke_viiii(386,($mangled_name|0),($30|0),($db|0),($internal_status|0));
          $58 = __THREW__; __THREW__ = 0;
          $59 = $58&1;
          if ($59) {
           break L7;
          }
          $60 = HEAP8[$27>>0]|0;
          $61 = ($60<<24>>24)==(0);
          if ($61) {
           $$pr$pre = HEAP32[$internal_status>>2]|0;
           $63 = $$pr$pre;
           label = 19;
           break;
          } else {
           HEAP32[$internal_status>>2] = -2;
           $$1 = 0;$118 = -2;
           break;
          }
         }
        }
       }
      } while(0);
      if ((label|0) == 19) {
       $62 = ($63|0)==(0);
       if ($62) {
        label = 20;
       } else {
        $$1 = 0;$118 = $63;
       }
      }
      do {
       if ((label|0) == 20) {
        $64 = HEAP32[$7>>2]|0;
        $65 = ((($64)) + -24|0);
        $66 = HEAP8[$65>>0]|0;
        $67 = $66 & 1;
        $68 = ($67<<24>>24)==(0);
        if ($68) {
         $71 = $66&255;
         $72 = $71 >>> 1;
         $83 = $72;
        } else {
         $69 = ((($64)) + -20|0);
         $70 = HEAP32[$69>>2]|0;
         $83 = $70;
        }
        $73 = ((($64)) + -12|0);
        $74 = HEAP8[$73>>0]|0;
        $75 = $74 & 1;
        $76 = ($75<<24>>24)==(0);
        if ($76) {
         $79 = $74&255;
         $80 = $79 >>> 1;
         $82 = $80;
        } else {
         $77 = ((($64)) + -8|0);
         $78 = HEAP32[$77>>2]|0;
         $82 = $78;
        }
        $81 = (($82) + ($83))|0;
        $84 = (($81) + 1)|0;
        $85 = ($84>>>0)>($86>>>0);
        if ($85) {
         $87 = (_realloc($buf,$84)|0);
         $88 = ($87|0)==(0|0);
         if ($88) {
          HEAP32[$internal_status>>2] = -1;
          $$1 = 0;$118 = -1;
          break;
         }
         if ($2) {
          $$028 = $87;
         } else {
          HEAP32[$n>>2] = $84;
          $$028 = $87;
         }
        } else {
         $89 = ($buf|0)==(0|0);
         if ($89) {
          $$1 = 0;$118 = 0;
          break;
         } else {
          $$028 = $buf;
         }
        }
        $90 = HEAP32[$7>>2]|0;
        $91 = ((($90)) + -24|0);
        $92 = ((($90)) + -12|0);
        $93 = HEAP8[$92>>0]|0;
        $94 = $93 & 1;
        $95 = ($94<<24>>24)==(0);
        $96 = ((($90)) + -4|0);
        $97 = HEAP32[$96>>2]|0;
        $98 = ((($92)) + 1|0);
        $99 = $95 ? $98 : $97;
        $100 = ((($90)) + -8|0);
        $101 = HEAP32[$100>>2]|0;
        $102 = $93&255;
        $103 = $102 >>> 1;
        $104 = $95 ? $103 : $101;
        __THREW__ = 0;
        (invoke_iiii(387,($91|0),($99|0),($104|0))|0);
        $105 = __THREW__; __THREW__ = 0;
        $106 = $105&1;
        if ($106) {
         break L7;
        }
        $107 = HEAP32[$7>>2]|0;
        $108 = ((($107)) + -24|0);
        $109 = HEAP8[$108>>0]|0;
        $110 = $109 & 1;
        $111 = ($110<<24>>24)==(0);
        if ($111) {
         $114 = ((($108)) + 1|0);
         $115 = $114;
        } else {
         $112 = ((($107)) + -16|0);
         $113 = HEAP32[$112>>2]|0;
         $115 = $113;
        }
        _memcpy(($$028|0),($115|0),($81|0))|0;
        $116 = (($$028) + ($81)|0);
        HEAP8[$116>>0] = 0;
        $$1 = $$028;$118 = 0;
       }
      } while(0);
      $117 = ($status|0)==(0|0);
      if (!($117)) {
       HEAP32[$status>>2] = $118;
      }
      __ZN10__cxxabiv112_GLOBAL__N_12DbD2Ev($db);
      $$0 = $$1;
      break L1;
     }
    } while(0);
    $119 = ___cxa_find_matching_catch()|0;
    $120 = tempRet0;
    __ZN10__cxxabiv112_GLOBAL__N_12DbD2Ev($db);
    ___resumeException($119|0);
    // unreachable;
   }
  }
 } while(0);
 if ((label|0) == 3) {
  $3 = ($status|0)==(0|0);
  if ($3) {
   $$0 = 0;
  } else {
   HEAP32[$status>>2] = -3;
   $$0 = 0;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function ___cxa_get_globals_fast() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = (_pthread_once((2908|0),(388|0))|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $2 = HEAP32[2904>>2]|0;
  $3 = (_pthread_getspecific(($2|0))|0);
  STACKTOP = sp;return ($3|0);
 } else {
  _abort_message(16540,$vararg_buffer);
  // unreachable;
 }
 return (0)|0;
}
function __Znwj($size) {
 $size = $size|0;
 var $$lcssa = 0, $$size = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($size|0)==(0);
 $$size = $0 ? 1 : $size;
 $1 = (_malloc($$size)|0);
 $2 = ($1|0)==(0|0);
 L1: do {
  if ($2) {
   while(1) {
    $3 = (__ZSt15get_new_handlerv()|0);
    $4 = ($3|0)==(0|0);
    if ($4) {
     break;
    }
    FUNCTION_TABLE_v[$3 & 1023]();
    $5 = (_malloc($$size)|0);
    $6 = ($5|0)==(0|0);
    if (!($6)) {
     $$lcssa = $5;
     break L1;
    }
   }
   $7 = (___cxa_allocate_exception(4)|0);
   HEAP32[$7>>2] = (2680);
   ___cxa_throw(($7|0),(288|0),(2|0));
   // unreachable;
  } else {
   $$lcssa = $1;
  }
 } while(0);
 return ($$lcssa|0);
}
function __ZdlPv($ptr) {
 $ptr = $ptr|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($ptr);
 return;
}
function __ZdaPv($ptr) {
 $ptr = $ptr|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($ptr);
 return;
}
function __ZNSt9bad_allocC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (2680);
 return;
}
function __ZNSt9bad_allocD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt9bad_allocD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt9bad_alloc4whatEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (16589|0);
}
function __ZSt11__terminatePFvvE($func) {
 $func = $func|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 __THREW__ = 0;
 invoke_v($func|0);
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if (!($1)) {
  __THREW__ = 0;
  invoke_vii(389,(16604|0),($vararg_buffer|0));
  $2 = __THREW__; __THREW__ = 0;
 }
 $3 = ___cxa_find_matching_catch(0|0)|0;
 $4 = tempRet0;
 (___cxa_begin_catch(($3|0))|0);
 __THREW__ = 0;
 invoke_vii(389,(16644|0),($vararg_buffer1|0));
 $5 = __THREW__; __THREW__ = 0;
 $6 = ___cxa_find_matching_catch(0|0)|0;
 $7 = tempRet0;
 __THREW__ = 0;
 invoke_v(361);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if ($9) {
  $10 = ___cxa_find_matching_catch(0|0)|0;
  $11 = tempRet0;
  ___clang_call_terminate($10);
  // unreachable;
 } else {
  ___clang_call_terminate($6);
  // unreachable;
 }
}
function __ZSt9terminatev() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(390)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $21 = ___cxa_find_matching_catch(0|0)|0;
  $22 = tempRet0;
  ___clang_call_terminate($21);
  // unreachable;
 }
 $3 = ($0|0)==(0|0);
 if (!($3)) {
  $4 = HEAP32[$0>>2]|0;
  $5 = ($4|0)==(0|0);
  if (!($5)) {
   $6 = ((($4)) + 48|0);
   $7 = $6;
   $8 = $7;
   $9 = HEAP32[$8>>2]|0;
   $10 = (($7) + 4)|0;
   $11 = $10;
   $12 = HEAP32[$11>>2]|0;
   $13 = $9 & -256;
   $14 = ($13|0)==(1126902528);
   $15 = ($12|0)==(1129074247);
   $16 = $14 & $15;
   if ($16) {
    $17 = ((($4)) + 12|0);
    $18 = HEAP32[$17>>2]|0;
    __ZSt11__terminatePFvvE($18);
    // unreachable;
   }
  }
 }
 $19 = HEAP32[667]|0;HEAP32[667] = (($19+0)|0);
 $20 = $19;
 __ZSt11__terminatePFvvE($20);
 // unreachable;
}
function __ZSt15get_new_handlerv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[2692>>2]|0;HEAP32[2692>>2] = (($0+0)|0);
 $1 = $0;
 return ($1|0);
}
function __ZNSt9exceptionD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt13runtime_errorD2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (2704);
 $0 = ((($this)) + 4|0);
 __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($0);
 return;
}
function __ZNSt13runtime_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt13runtime_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt13runtime_error4whatEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt14overflow_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt13runtime_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt9type_infoD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt8bad_castC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (2744);
 return;
}
function __ZNSt8bad_castD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt8bad_castD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt8bad_cast4whatEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (16694|0);
}
function __ZN10__cxxabiv116__shim_type_infoD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10__cxxabiv123__fundamental_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZN10__cxxabiv117__class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv($this,$thrown_type,$0) {
 $this = $this|0;
 $thrown_type = $thrown_type|0;
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($this|0)==($thrown_type|0);
 return ($1|0);
}
function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this,$thrown_type,$adjustedPtr) {
 $this = $this|0;
 $thrown_type = $thrown_type|0;
 $adjustedPtr = $adjustedPtr|0;
 var $$0 = 0, $$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $info = 0, dest = 0;
 var label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $info = sp;
 $0 = ($this|0)==($thrown_type|0);
 if ($0) {
  $$1 = 1;
 } else {
  $1 = ($thrown_type|0)==(0|0);
  if ($1) {
   $$1 = 0;
  } else {
   $2 = (___dynamic_cast($thrown_type,368,384,0)|0);
   $3 = ($2|0)==(0|0);
   if ($3) {
    $$1 = 0;
   } else {
    dest=$info; stop=dest+56|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
    HEAP32[$info>>2] = $2;
    $4 = ((($info)) + 8|0);
    HEAP32[$4>>2] = $this;
    $5 = ((($info)) + 12|0);
    HEAP32[$5>>2] = -1;
    $6 = ((($info)) + 48|0);
    HEAP32[$6>>2] = 1;
    $7 = HEAP32[$2>>2]|0;
    $8 = ((($7)) + 28|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = HEAP32[$adjustedPtr>>2]|0;
    FUNCTION_TABLE_viiii[$9 & 511]($2,$info,$10,1);
    $11 = ((($info)) + 24|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($12|0)==(1);
    if ($13) {
     $14 = ((($info)) + 16|0);
     $15 = HEAP32[$14>>2]|0;
     HEAP32[$adjustedPtr>>2] = $15;
     $$0 = 1;
    } else {
     $$0 = 0;
    }
    $$1 = $$0;
   }
  }
 }
 STACKTOP = sp;return ($$1|0);
}
function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 do {
  if ($2) {
   HEAP32[$0>>2] = $adjustedPtr;
   $3 = ((($info)) + 24|0);
   HEAP32[$3>>2] = $path_below;
   $4 = ((($info)) + 36|0);
   HEAP32[$4>>2] = 1;
  } else {
   $5 = ($1|0)==($adjustedPtr|0);
   if (!($5)) {
    $9 = ((($info)) + 36|0);
    $10 = HEAP32[$9>>2]|0;
    $11 = (($10) + 1)|0;
    HEAP32[$9>>2] = $11;
    $12 = ((($info)) + 24|0);
    HEAP32[$12>>2] = 2;
    $13 = ((($info)) + 54|0);
    HEAP8[$13>>0] = 1;
    break;
   }
   $6 = ((($info)) + 24|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ($7|0)==(2);
   if ($8) {
    HEAP32[$6>>2] = $path_below;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 }
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 } else {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($5)) + 28|0);
  $7 = HEAP32[$6>>2]|0;
  FUNCTION_TABLE_viiii[$7 & 511]($4,$info,$adjustedPtr,$path_below);
 }
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$adjustedPtr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 28|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($adjustedPtr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiii[$11 & 511]($8,$info,$12,$15);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
  } else {
   $3 = ((($this)) + 16|0);
   $4 = ((($this)) + 12|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = (((($this)) + 16|0) + ($5<<3)|0);
   __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($3,$info,$adjustedPtr,$path_below);
   $7 = ($5|0)>(1);
   if ($7) {
    $8 = ((($this)) + 24|0);
    $9 = ((($info)) + 54|0);
    $p$0 = $8;
    while(1) {
     __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($p$0,$info,$adjustedPtr,$path_below);
     $10 = HEAP8[$9>>0]|0;
     $11 = ($10<<24>>24)==(0);
     if (!($11)) {
      break L1;
     }
     $12 = ((($p$0)) + 8|0);
     $13 = ($12>>>0)<($6>>>0);
     if ($13) {
      $p$0 = $12;
     } else {
      break;
     }
    }
   }
  }
 } while(0);
 return;
}
function ___dynamic_cast($static_ptr,$static_type,$dst_type,$src2dst_offset) {
 $static_ptr = $static_ptr|0;
 $static_type = $static_type|0;
 $dst_type = $dst_type|0;
 $src2dst_offset = $src2dst_offset|0;
 var $$ = 0, $$8 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $dst_ptr$0 = 0, $info = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $info = sp;
 $0 = HEAP32[$static_ptr>>2]|0;
 $1 = ((($0)) + -8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2;
 $4 = (($static_ptr) + ($3)|0);
 $5 = ((($0)) + -4|0);
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$info>>2] = $dst_type;
 $7 = ((($info)) + 4|0);
 HEAP32[$7>>2] = $static_ptr;
 $8 = ((($info)) + 8|0);
 HEAP32[$8>>2] = $static_type;
 $9 = ((($info)) + 12|0);
 HEAP32[$9>>2] = $src2dst_offset;
 $10 = ((($info)) + 16|0);
 $11 = ((($info)) + 20|0);
 $12 = ((($info)) + 24|0);
 $13 = ((($info)) + 28|0);
 $14 = ((($info)) + 32|0);
 $15 = ((($info)) + 40|0);
 $16 = ($6|0)==($dst_type|0);
 dest=$10; stop=dest+36|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));HEAP16[$10+36>>1]=0|0;HEAP8[$10+38>>0]=0|0;
 L1: do {
  if ($16) {
   $17 = ((($info)) + 48|0);
   HEAP32[$17>>2] = 1;
   $18 = HEAP32[$dst_type>>2]|0;
   $19 = ((($18)) + 20|0);
   $20 = HEAP32[$19>>2]|0;
   FUNCTION_TABLE_viiiiii[$20 & 511]($dst_type,$info,$4,$4,1,0);
   $21 = HEAP32[$12>>2]|0;
   $22 = ($21|0)==(1);
   $$ = $22 ? $4 : 0;
   $dst_ptr$0 = $$;
  } else {
   $23 = ((($info)) + 36|0);
   $24 = HEAP32[$6>>2]|0;
   $25 = ((($24)) + 24|0);
   $26 = HEAP32[$25>>2]|0;
   FUNCTION_TABLE_viiiii[$26 & 31]($6,$info,$4,1,0);
   $27 = HEAP32[$23>>2]|0;
   switch ($27|0) {
   case 0:  {
    $28 = HEAP32[$15>>2]|0;
    $29 = ($28|0)==(1);
    $30 = HEAP32[$13>>2]|0;
    $31 = ($30|0)==(1);
    $or$cond = $29 & $31;
    $32 = HEAP32[$14>>2]|0;
    $33 = ($32|0)==(1);
    $or$cond3 = $or$cond & $33;
    $34 = HEAP32[$11>>2]|0;
    $$8 = $or$cond3 ? $34 : 0;
    $dst_ptr$0 = $$8;
    break L1;
    break;
   }
   case 1:  {
    break;
   }
   default: {
    $dst_ptr$0 = 0;
    break L1;
   }
   }
   $35 = HEAP32[$12>>2]|0;
   $36 = ($35|0)==(1);
   if (!($36)) {
    $37 = HEAP32[$15>>2]|0;
    $38 = ($37|0)==(0);
    $39 = HEAP32[$13>>2]|0;
    $40 = ($39|0)==(1);
    $or$cond5 = $38 & $40;
    $41 = HEAP32[$14>>2]|0;
    $42 = ($41|0)==(1);
    $or$cond7 = $or$cond5 & $42;
    if (!($or$cond7)) {
     $dst_ptr$0 = 0;
     break;
    }
   }
   $43 = HEAP32[$10>>2]|0;
   $dst_ptr$0 = $43;
  }
 } while(0);
 STACKTOP = sp;return ($dst_ptr$0|0);
}
function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($this,$info,$dst_ptr,$current_ptr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 53|0);
 HEAP8[$0>>0] = 1;
 $1 = ((($info)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==($current_ptr|0);
 do {
  if ($3) {
   $4 = ((($info)) + 52|0);
   HEAP8[$4>>0] = 1;
   $5 = ((($info)) + 16|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = ($6|0)==(0|0);
   if ($7) {
    HEAP32[$5>>2] = $dst_ptr;
    $8 = ((($info)) + 24|0);
    HEAP32[$8>>2] = $path_below;
    $9 = ((($info)) + 36|0);
    HEAP32[$9>>2] = 1;
    $10 = ((($info)) + 48|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = ($11|0)==(1);
    $13 = ($path_below|0)==(1);
    $or$cond = $12 & $13;
    if (!($or$cond)) {
     break;
    }
    $14 = ((($info)) + 54|0);
    HEAP8[$14>>0] = 1;
    break;
   }
   $15 = ($6|0)==($dst_ptr|0);
   if (!($15)) {
    $25 = ((($info)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (($26) + 1)|0;
    HEAP32[$25>>2] = $27;
    $28 = ((($info)) + 54|0);
    HEAP8[$28>>0] = 1;
    break;
   }
   $16 = ((($info)) + 24|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ($17|0)==(2);
   if ($18) {
    HEAP32[$16>>2] = $path_below;
    $23 = $path_below;
   } else {
    $23 = $17;
   }
   $19 = ((($info)) + 48|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ($20|0)==(1);
   $22 = ($23|0)==(1);
   $or$cond1 = $21 & $22;
   if ($or$cond1) {
    $24 = ((($info)) + 54|0);
    HEAP8[$24>>0] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $does_dst_type_point_to_our_static_type$0$off0$lcssa = 0, $does_dst_type_point_to_our_static_type$0$off023 = 0, $does_dst_type_point_to_our_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$0$off025 = 0, $is_dst_type_derived_from_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$2$off0 = 0;
 var $p$024 = 0, $p2$0 = 0, $p2$1 = 0, $p2$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   $3 = ((($info)) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = ((($info)) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if (!($10)) {
    $57 = ((($this)) + 16|0);
    $58 = ((($this)) + 12|0);
    $59 = HEAP32[$58>>2]|0;
    $60 = (((($this)) + 16|0) + ($59<<3)|0);
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($57,$info,$current_ptr,$path_below,$use_strcmp);
    $61 = ((($this)) + 24|0);
    $62 = ($59|0)>(1);
    if (!($62)) {
     break;
    }
    $63 = ((($this)) + 8|0);
    $64 = HEAP32[$63>>2]|0;
    $65 = $64 & 2;
    $66 = ($65|0)==(0);
    if ($66) {
     $67 = ((($info)) + 36|0);
     $68 = HEAP32[$67>>2]|0;
     $69 = ($68|0)==(1);
     if (!($69)) {
      $75 = $64 & 1;
      $76 = ($75|0)==(0);
      if ($76) {
       $79 = ((($info)) + 54|0);
       $p2$2 = $61;
       while(1) {
        $88 = HEAP8[$79>>0]|0;
        $89 = ($88<<24>>24)==(0);
        if (!($89)) {
         break L1;
        }
        $90 = HEAP32[$67>>2]|0;
        $91 = ($90|0)==(1);
        if ($91) {
         break L1;
        }
        __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$2,$info,$current_ptr,$path_below,$use_strcmp);
        $92 = ((($p2$2)) + 8|0);
        $93 = ($92>>>0)<($60>>>0);
        if ($93) {
         $p2$2 = $92;
        } else {
         break L1;
        }
       }
      }
      $77 = ((($info)) + 24|0);
      $78 = ((($info)) + 54|0);
      $p2$1 = $61;
      while(1) {
       $80 = HEAP8[$78>>0]|0;
       $81 = ($80<<24>>24)==(0);
       if (!($81)) {
        break L1;
       }
       $82 = HEAP32[$67>>2]|0;
       $83 = ($82|0)==(1);
       if ($83) {
        $84 = HEAP32[$77>>2]|0;
        $85 = ($84|0)==(1);
        if ($85) {
         break L1;
        }
       }
       __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$1,$info,$current_ptr,$path_below,$use_strcmp);
       $86 = ((($p2$1)) + 8|0);
       $87 = ($86>>>0)<($60>>>0);
       if ($87) {
        $p2$1 = $86;
       } else {
        break L1;
       }
      }
     }
    }
    $70 = ((($info)) + 54|0);
    $p2$0 = $61;
    while(1) {
     $71 = HEAP8[$70>>0]|0;
     $72 = ($71<<24>>24)==(0);
     if (!($72)) {
      break L1;
     }
     __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$0,$info,$current_ptr,$path_below,$use_strcmp);
     $73 = ((($p2$0)) + 8|0);
     $74 = ($73>>>0)<($60>>>0);
     if ($74) {
      $p2$0 = $73;
     } else {
      break L1;
     }
    }
   }
   $11 = ((($info)) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==($current_ptr|0);
   if (!($13)) {
    $14 = ((($info)) + 20|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ($15|0)==($current_ptr|0);
    if (!($16)) {
     $19 = ((($info)) + 32|0);
     HEAP32[$19>>2] = $path_below;
     $20 = ((($info)) + 44|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($21|0)==(4);
     if ($22) {
      break;
     }
     $23 = ((($this)) + 12|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = (((($this)) + 16|0) + ($24<<3)|0);
     $26 = ((($info)) + 52|0);
     $27 = ((($info)) + 53|0);
     $28 = ((($info)) + 54|0);
     $29 = ((($this)) + 8|0);
     $30 = ((($info)) + 24|0);
     $31 = ($24|0)>(0);
     L34: do {
      if ($31) {
       $32 = ((($this)) + 16|0);
       $does_dst_type_point_to_our_static_type$0$off023 = 0;$is_dst_type_derived_from_static_type$0$off025 = 0;$p$024 = $32;
       while(1) {
        HEAP8[$26>>0] = 0;
        HEAP8[$27>>0] = 0;
        __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$024,$info,$current_ptr,$current_ptr,1,$use_strcmp);
        $33 = HEAP8[$28>>0]|0;
        $34 = ($33<<24>>24)==(0);
        if (!($34)) {
         $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off023;$is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$0$off025;
         label = 20;
         break L34;
        }
        $35 = HEAP8[$27>>0]|0;
        $36 = ($35<<24>>24)==(0);
        do {
         if ($36) {
          $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off023;$is_dst_type_derived_from_static_type$1$off0 = $is_dst_type_derived_from_static_type$0$off025;
         } else {
          $37 = HEAP8[$26>>0]|0;
          $38 = ($37<<24>>24)==(0);
          if ($38) {
           $44 = HEAP32[$29>>2]|0;
           $45 = $44 & 1;
           $46 = ($45|0)==(0);
           if ($46) {
            $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off023;$is_dst_type_derived_from_static_type$2$off0 = 1;
            label = 20;
            break L34;
           } else {
            $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off023;$is_dst_type_derived_from_static_type$1$off0 = 1;
            break;
           }
          }
          $39 = HEAP32[$30>>2]|0;
          $40 = ($39|0)==(1);
          if ($40) {
           break L34;
          }
          $41 = HEAP32[$29>>2]|0;
          $42 = $41 & 2;
          $43 = ($42|0)==(0);
          if ($43) {
           break L34;
          } else {
           $does_dst_type_point_to_our_static_type$1$off0 = 1;$is_dst_type_derived_from_static_type$1$off0 = 1;
          }
         }
        } while(0);
        $47 = ((($p$024)) + 8|0);
        $48 = ($47>>>0)<($25>>>0);
        if ($48) {
         $does_dst_type_point_to_our_static_type$0$off023 = $does_dst_type_point_to_our_static_type$1$off0;$is_dst_type_derived_from_static_type$0$off025 = $is_dst_type_derived_from_static_type$1$off0;$p$024 = $47;
        } else {
         $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$1$off0;$is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$1$off0;
         label = 20;
         break;
        }
       }
      } else {
       $does_dst_type_point_to_our_static_type$0$off0$lcssa = 0;$is_dst_type_derived_from_static_type$2$off0 = 0;
       label = 20;
      }
     } while(0);
     do {
      if ((label|0) == 20) {
       if ($does_dst_type_point_to_our_static_type$0$off0$lcssa) {
        label = 24;
       } else {
        HEAP32[$14>>2] = $current_ptr;
        $49 = ((($info)) + 40|0);
        $50 = HEAP32[$49>>2]|0;
        $51 = (($50) + 1)|0;
        HEAP32[$49>>2] = $51;
        $52 = ((($info)) + 36|0);
        $53 = HEAP32[$52>>2]|0;
        $54 = ($53|0)==(1);
        if ($54) {
         $55 = HEAP32[$30>>2]|0;
         $56 = ($55|0)==(2);
         if ($56) {
          HEAP8[$28>>0] = 1;
          if ($is_dst_type_derived_from_static_type$2$off0) {
           break;
          }
         } else {
          label = 24;
         }
        } else {
         label = 24;
        }
       }
       if ((label|0) == 24) {
        if ($is_dst_type_derived_from_static_type$2$off0) {
         break;
        }
       }
       HEAP32[$20>>2] = 4;
       break L1;
      }
     } while(0);
     HEAP32[$20>>2] = 3;
     break;
    }
   }
   $17 = ($path_below|0)==(1);
   if ($17) {
    $18 = ((($info)) + 32|0);
    HEAP32[$18>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$current_ptr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 20|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($current_ptr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiiiii[$11 & 511]($8,$info,$dst_ptr,$12,$15,$use_strcmp);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$current_ptr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 24|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($current_ptr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiiii[$11 & 31]($8,$info,$12,$15,$use_strcmp);
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $is_dst_type_derived_from_static_type$0$off01 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   $3 = ((($info)) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = ((($info)) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if (!($10)) {
    $43 = ((($this)) + 8|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = HEAP32[$44>>2]|0;
    $46 = ((($45)) + 24|0);
    $47 = HEAP32[$46>>2]|0;
    FUNCTION_TABLE_viiiii[$47 & 31]($44,$info,$current_ptr,$path_below,$use_strcmp);
    break;
   }
   $11 = ((($info)) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==($current_ptr|0);
   if (!($13)) {
    $14 = ((($info)) + 20|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ($15|0)==($current_ptr|0);
    if (!($16)) {
     $19 = ((($info)) + 32|0);
     HEAP32[$19>>2] = $path_below;
     $20 = ((($info)) + 44|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($21|0)==(4);
     if ($22) {
      break;
     }
     $23 = ((($info)) + 52|0);
     HEAP8[$23>>0] = 0;
     $24 = ((($info)) + 53|0);
     HEAP8[$24>>0] = 0;
     $25 = ((($this)) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = HEAP32[$26>>2]|0;
     $28 = ((($27)) + 20|0);
     $29 = HEAP32[$28>>2]|0;
     FUNCTION_TABLE_viiiiii[$29 & 511]($26,$info,$current_ptr,$current_ptr,1,$use_strcmp);
     $30 = HEAP8[$24>>0]|0;
     $31 = ($30<<24>>24)==(0);
     if ($31) {
      $is_dst_type_derived_from_static_type$0$off01 = 0;
      label = 13;
     } else {
      $32 = HEAP8[$23>>0]|0;
      $not$ = ($32<<24>>24)==(0);
      if ($not$) {
       $is_dst_type_derived_from_static_type$0$off01 = 1;
       label = 13;
      }
     }
     do {
      if ((label|0) == 13) {
       HEAP32[$14>>2] = $current_ptr;
       $33 = ((($info)) + 40|0);
       $34 = HEAP32[$33>>2]|0;
       $35 = (($34) + 1)|0;
       HEAP32[$33>>2] = $35;
       $36 = ((($info)) + 36|0);
       $37 = HEAP32[$36>>2]|0;
       $38 = ($37|0)==(1);
       if ($38) {
        $39 = ((($info)) + 24|0);
        $40 = HEAP32[$39>>2]|0;
        $41 = ($40|0)==(2);
        if ($41) {
         $42 = ((($info)) + 54|0);
         HEAP8[$42>>0] = 1;
         if ($is_dst_type_derived_from_static_type$0$off01) {
          break;
         }
        } else {
         label = 16;
        }
       } else {
        label = 16;
       }
       if ((label|0) == 16) {
        if ($is_dst_type_derived_from_static_type$0$off01) {
         break;
        }
       }
       HEAP32[$20>>2] = 4;
       break L1;
      }
     } while(0);
     HEAP32[$20>>2] = 3;
     break;
    }
   }
   $17 = ($path_below|0)==(1);
   if ($17) {
    $18 = ((($info)) + 32|0);
    HEAP32[$18>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 do {
  if ($2) {
   $3 = ((($info)) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = ((($info)) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if ($10) {
    $11 = ((($info)) + 16|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($12|0)==($current_ptr|0);
    if (!($13)) {
     $14 = ((($info)) + 20|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = ($15|0)==($current_ptr|0);
     if (!($16)) {
      $19 = ((($info)) + 32|0);
      HEAP32[$19>>2] = $path_below;
      HEAP32[$14>>2] = $current_ptr;
      $20 = ((($info)) + 40|0);
      $21 = HEAP32[$20>>2]|0;
      $22 = (($21) + 1)|0;
      HEAP32[$20>>2] = $22;
      $23 = ((($info)) + 36|0);
      $24 = HEAP32[$23>>2]|0;
      $25 = ($24|0)==(1);
      if ($25) {
       $26 = ((($info)) + 24|0);
       $27 = HEAP32[$26>>2]|0;
       $28 = ($27|0)==(2);
       if ($28) {
        $29 = ((($info)) + 54|0);
        HEAP8[$29>>0] = 1;
       }
      }
      $30 = ((($info)) + 44|0);
      HEAP32[$30>>2] = 4;
      break;
     }
    }
    $17 = ($path_below|0)==(1);
    if ($17) {
     $18 = ((($info)) + 32|0);
     HEAP32[$18>>2] = 1;
    }
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 } else {
  $3 = ((($info)) + 52|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = ((($info)) + 53|0);
  $6 = HEAP8[$5>>0]|0;
  $7 = ((($this)) + 16|0);
  $8 = ((($this)) + 12|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (((($this)) + 16|0) + ($9<<3)|0);
  HEAP8[$3>>0] = 0;
  HEAP8[$5>>0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($7,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
  $11 = ($9|0)>(1);
  L4: do {
   if ($11) {
    $12 = ((($this)) + 24|0);
    $13 = ((($info)) + 24|0);
    $14 = ((($this)) + 8|0);
    $15 = ((($info)) + 54|0);
    $p$0 = $12;
    while(1) {
     $16 = HEAP8[$15>>0]|0;
     $17 = ($16<<24>>24)==(0);
     if (!($17)) {
      break L4;
     }
     $18 = HEAP8[$3>>0]|0;
     $19 = ($18<<24>>24)==(0);
     if ($19) {
      $25 = HEAP8[$5>>0]|0;
      $26 = ($25<<24>>24)==(0);
      if (!($26)) {
       $27 = HEAP32[$14>>2]|0;
       $28 = $27 & 1;
       $29 = ($28|0)==(0);
       if ($29) {
        break L4;
       }
      }
     } else {
      $20 = HEAP32[$13>>2]|0;
      $21 = ($20|0)==(1);
      if ($21) {
       break L4;
      }
      $22 = HEAP32[$14>>2]|0;
      $23 = $22 & 2;
      $24 = ($23|0)==(0);
      if ($24) {
       break L4;
      }
     }
     HEAP8[$3>>0] = 0;
     HEAP8[$5>>0] = 0;
     __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$0,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
     $30 = ((($p$0)) + 8|0);
     $31 = ($30>>>0)<($10>>>0);
     if ($31) {
      $p$0 = $30;
     } else {
      break;
     }
    }
   }
  } while(0);
  HEAP8[$3>>0] = $4;
  HEAP8[$5>>0] = $6;
 }
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 } else {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($5)) + 20|0);
  $7 = HEAP32[$6>>2]|0;
  FUNCTION_TABLE_viiiiii[$7 & 511]($4,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
 }
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 }
 return;
}
function ___cxa_can_catch($catchType,$excpType,$thrown) {
 $catchType = $catchType|0;
 $excpType = $excpType|0;
 $thrown = $thrown|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $temp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $temp = sp;
 $0 = HEAP32[$thrown>>2]|0;
 HEAP32[$temp>>2] = $0;
 $1 = HEAP32[$catchType>>2]|0;
 $2 = ((($1)) + 16|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_iiii[$3 & 1023]($catchType,$excpType,$temp)|0);
 $5 = $4&1;
 if ($4) {
  $6 = HEAP32[$temp>>2]|0;
  HEAP32[$thrown>>2] = $6;
 }
 STACKTOP = sp;return ($5|0);
}
function ___cxa_is_pointer_type($type) {
 $type = $type|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($type|0)==(0|0);
 if ($0) {
  $3 = 0;
 } else {
  $1 = (___dynamic_cast($type,368,416,0)|0);
  $phitmp = ($1|0)!=(0|0);
  $3 = $phitmp;
 }
 $2 = $3&1;
 return ($2|0);
}
function __ZSt17__throw_bad_allocv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(4)|0);
 __ZNSt9bad_allocC2Ev($0);
 ___cxa_throw(($0|0),(288|0),(2|0));
 // unreachable;
}
function __ZL25default_terminate_handlerv() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $thrown_object = 0, $vararg_buffer = 0, $vararg_buffer10 = 0;
 var $vararg_buffer3 = 0, $vararg_buffer7 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer10 = sp + 32|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $thrown_object = sp + 36|0;
 $0 = (___cxa_get_globals_fast()|0);
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  $2 = HEAP32[$0>>2]|0;
  $3 = ($2|0)==(0|0);
  if (!($3)) {
   $4 = ((($2)) + 80|0);
   $5 = ((($2)) + 48|0);
   $6 = $5;
   $7 = $6;
   $8 = HEAP32[$7>>2]|0;
   $9 = (($6) + 4)|0;
   $10 = $9;
   $11 = HEAP32[$10>>2]|0;
   $12 = $8 & -256;
   $13 = ($12|0)==(1126902528);
   $14 = ($11|0)==(1129074247);
   $15 = $13 & $14;
   if (!($15)) {
    $36 = HEAP32[2912>>2]|0;
    HEAP32[$vararg_buffer7>>2] = $36;
    _abort_message(19113,$vararg_buffer7);
    // unreachable;
   }
   $16 = ($8|0)==(1126902529);
   $17 = ($11|0)==(1129074247);
   $18 = $16 & $17;
   if ($18) {
    $19 = ((($2)) + 44|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = $20;
   } else {
    $21 = $4;
   }
   HEAP32[$thrown_object>>2] = $21;
   $22 = HEAP32[$2>>2]|0;
   $23 = ((($22)) + 4|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = HEAP32[304>>2]|0;
   $26 = ((($25)) + 16|0);
   $27 = HEAP32[$26>>2]|0;
   $28 = (FUNCTION_TABLE_iiii[$27 & 1023](304,$22,$thrown_object)|0);
   if ($28) {
    $29 = HEAP32[$thrown_object>>2]|0;
    $30 = HEAP32[2912>>2]|0;
    $31 = HEAP32[$29>>2]|0;
    $32 = ((($31)) + 8|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = (FUNCTION_TABLE_ii[$33 & 1023]($29)|0);
    HEAP32[$vararg_buffer>>2] = $30;
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    HEAP32[$vararg_ptr1>>2] = $24;
    $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
    HEAP32[$vararg_ptr2>>2] = $34;
    _abort_message(19027,$vararg_buffer);
    // unreachable;
   } else {
    $35 = HEAP32[2912>>2]|0;
    HEAP32[$vararg_buffer3>>2] = $35;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = $24;
    _abort_message(19072,$vararg_buffer3);
    // unreachable;
   }
  }
 }
 _abort_message(19151,$vararg_buffer10);
 // unreachable;
}
function __ZNSt3__114__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEEC2EjjSB_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 16|0);
 HEAP32[$1>>2] = $__a;
 $2 = ($__cap|0)==(0);
 if ($2) {
  $6 = 0;
 } else {
  $3 = HEAP32[$__a>>2]|0;
  $4 = $__cap << 4;
  $5 = (__ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8allocateEj($3,$4)|0);
  $6 = $5;
 }
 HEAP32[$this>>2] = $6;
 $7 = (($6) + ($__start<<4)|0);
 $8 = ((($this)) + 8|0);
 HEAP32[$8>>2] = $7;
 $9 = ((($this)) + 4|0);
 HEAP32[$9>>2] = $7;
 $10 = (($6) + ($__cap<<4)|0);
 $11 = ((($this)) + 12|0);
 HEAP32[$11>>2] = $10;
 return;
}
function __ZNSt3__16vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $$0$i1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($this)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($__v)) + 4|0);
 $4 = ($2|0)==($0|0);
 if (!($4)) {
  $$0$i1 = $2;
  while(1) {
   $5 = HEAP32[$3>>2]|0;
   $6 = ((($5)) + -16|0);
   $7 = ((($$0$i1)) + -16|0);
   $8 = ((($$0$i1)) + -4|0);
   HEAP32[$6>>2] = 0;
   $9 = ((($5)) + -12|0);
   HEAP32[$9>>2] = 0;
   $10 = ((($5)) + -8|0);
   $11 = HEAP32[$8>>2]|0;
   HEAP32[$10>>2] = 0;
   $12 = ((($5)) + -4|0);
   HEAP32[$12>>2] = $11;
   $13 = HEAP32[$7>>2]|0;
   HEAP32[$6>>2] = $13;
   $14 = ((($$0$i1)) + -12|0);
   $15 = HEAP32[$14>>2]|0;
   HEAP32[$9>>2] = $15;
   $16 = ((($$0$i1)) + -8|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($5)) + -8|0);
   HEAP32[$18>>2] = $17;
   HEAP32[$16>>2] = 0;
   HEAP32[$14>>2] = 0;
   HEAP32[$7>>2] = 0;
   $19 = HEAP32[$3>>2]|0;
   $20 = ((($19)) + -16|0);
   HEAP32[$3>>2] = $20;
   $21 = ($7|0)==($0|0);
   if ($21) {
    break;
   } else {
    $$0$i1 = $7;
   }
  }
 }
 $22 = HEAP32[$this>>2]|0;
 $23 = HEAP32[$3>>2]|0;
 HEAP32[$this>>2] = $23;
 HEAP32[$3>>2] = $22;
 $24 = ((($__v)) + 8|0);
 $25 = HEAP32[$1>>2]|0;
 $26 = HEAP32[$24>>2]|0;
 HEAP32[$1>>2] = $26;
 HEAP32[$24>>2] = $25;
 $27 = ((($this)) + 8|0);
 $28 = ((($__v)) + 12|0);
 $29 = HEAP32[$27>>2]|0;
 $30 = HEAP32[$28>>2]|0;
 HEAP32[$27>>2] = $30;
 HEAP32[$28>>2] = $29;
 $31 = HEAP32[$3>>2]|0;
 HEAP32[$__v>>2] = $31;
 return;
}
function __ZNSt3__114__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($1|0);
 if (!($4)) {
  $6 = $3;
  while(1) {
   $5 = ((($6)) + -16|0);
   HEAP32[$2>>2] = $5;
   __ZNSt3__113__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev($5);
   $7 = HEAP32[$2>>2]|0;
   $8 = ($7|0)==($1|0);
   if ($8) {
    break;
   } else {
    $6 = $7;
   }
  }
 }
 $9 = HEAP32[$this>>2]|0;
 $10 = ($9|0)==(0|0);
 if (!($10)) {
  $11 = ((($this)) + 16|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = ((($this)) + 12|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = $14;
  $16 = $9;
  $17 = (($15) - ($16))|0;
  $18 = HEAP32[$12>>2]|0;
  __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj($18,$9,$17);
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_18demangleINS0_2DbEEEvPKcS4_RT_Ri($first,$last,$db,$status) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 $status = $status|0;
 var $$0$i = 0, $$0$i$i$i11 = 0, $$0$i2 = 0, $$01$i = 0, $$03$i = 0, $$1$i = 0, $$12$i = 0, $$lcssa = 0, $$pr = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__p$0$i$i$i10 = 0, $__p$0$ph$i$i$i = 0, $i$0$i16 = 0, $isdigit$i = 0, $isdigit3$i = 0, $isdigittmp$i = 0, $isdigittmp2$i = 0, $or$cond = 0, $or$cond1 = 0, $scevgep2$i$i$i = 0, $t$0 = 0, $t$0$i15 = 0, $t$0$i15$lcssa20 = 0;
 var $t$1$i$ph = 0, $t$1$i12 = 0, $t$2$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 24|0;
 $1 = sp + 12|0;
 $2 = sp;
 $3 = ($first>>>0)<($last>>>0);
 L1: do {
  if ($3) {
   $4 = HEAP8[$first>>0]|0;
   $5 = ($4<<24>>24)==(95);
   L3: do {
    if ($5) {
     $6 = $last;
     $7 = $first;
     $8 = (($6) - ($7))|0;
     $9 = ($8|0)>(3);
     if (!($9)) {
      HEAP32[$status>>2] = -2;
      break L1;
     }
     $10 = ((($first)) + 1|0);
     $11 = HEAP8[$10>>0]|0;
     switch ($11<<24>>24) {
     case 90:  {
      $12 = ((($first)) + 2|0);
      $13 = (__ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($12,$last,$db)|0);
      $14 = ($13|0)==($12|0);
      $15 = ($13|0)==($last|0);
      $or$cond = $14 | $15;
      if ($or$cond) {
       $t$0 = $13;
      } else {
       $16 = HEAP8[$13>>0]|0;
       $17 = ($16<<24>>24)==(46);
       if ($17) {
        $18 = HEAP32[$db>>2]|0;
        $19 = ((($db)) + 4|0);
        $20 = HEAP32[$19>>2]|0;
        $21 = ($18|0)==($20|0);
        L13: do {
         if ($21) {
          $$03$i = $13;
         } else {
          $22 = ((($20)) + -24|0);
          $23 = $13;
          $24 = (($6) - ($23))|0;
          $25 = ($24>>>0)>(4294967279);
          if ($25) {
           __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($2);
           // unreachable;
          }
          $26 = ($24>>>0)<(11);
          if ($26) {
           $27 = $24 << 1;
           $28 = $27&255;
           HEAP8[$2>>0] = $28;
           $29 = ((($2)) + 1|0);
           $__p$0$ph$i$i$i = $29;
          } else {
           $30 = (($24) + 16)|0;
           $31 = $30 & -16;
           $32 = (_malloc($31)|0);
           $33 = ((($2)) + 8|0);
           HEAP32[$33>>2] = $32;
           $34 = $31 | 1;
           HEAP32[$2>>2] = $34;
           $35 = ((($2)) + 4|0);
           HEAP32[$35>>2] = $24;
           $__p$0$ph$i$i$i = $32;
          }
          $36 = ($13|0)==($last|0);
          if (!($36)) {
           $$0$i$i$i11 = $13;$__p$0$i$i$i10 = $__p$0$ph$i$i$i;
           while(1) {
            $37 = HEAP8[$$0$i$i$i11>>0]|0;
            HEAP8[$__p$0$i$i$i10>>0] = $37;
            $38 = ((($$0$i$i$i11)) + 1|0);
            $39 = ((($__p$0$i$i$i10)) + 1|0);
            $40 = ($38|0)==($last|0);
            if ($40) {
             break;
            } else {
             $$0$i$i$i11 = $38;$__p$0$i$i$i10 = $39;
            }
           }
          }
          $scevgep2$i$i$i = (($__p$0$ph$i$i$i) + ($24)|0);
          HEAP8[$scevgep2$i$i$i>>0] = 0;
          __THREW__ = 0;
          $41 = (invoke_iiii(391,($2|0),0,(16953|0))|0);
          $42 = __THREW__; __THREW__ = 0;
          $43 = $42&1;
          if ($43) {
           $65 = ___cxa_find_matching_catch()|0;
           $66 = tempRet0;
           $$1$i = $66;$$12$i = $65;
          } else {
           ;HEAP32[$1>>2]=HEAP32[$41>>2]|0;HEAP32[$1+4>>2]=HEAP32[$41+4>>2]|0;HEAP32[$1+8>>2]=HEAP32[$41+8>>2]|0;
           HEAP32[$41>>2] = 0;
           $44 = ((($41)) + 4|0);
           HEAP32[$44>>2] = 0;
           $45 = ((($41)) + 8|0);
           HEAP32[$45>>2] = 0;
           __THREW__ = 0;
           $46 = (invoke_iii(392,($1|0),(16956|0))|0);
           $47 = __THREW__; __THREW__ = 0;
           $48 = $47&1;
           do {
            if ($48) {
             $67 = ___cxa_find_matching_catch()|0;
             $68 = tempRet0;
             $$0$i = $68;$$01$i = $67;
            } else {
             ;HEAP32[$0>>2]=HEAP32[$46>>2]|0;HEAP32[$0+4>>2]=HEAP32[$46+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[$46+8>>2]|0;
             HEAP32[$46>>2] = 0;
             $49 = ((($46)) + 4|0);
             HEAP32[$49>>2] = 0;
             $50 = ((($46)) + 8|0);
             HEAP32[$50>>2] = 0;
             $51 = HEAP8[$0>>0]|0;
             $52 = $51 & 1;
             $53 = ($52<<24>>24)==(0);
             $54 = ((($0)) + 8|0);
             $55 = HEAP32[$54>>2]|0;
             $56 = ((($0)) + 1|0);
             $57 = $53 ? $56 : $55;
             $58 = ((($0)) + 4|0);
             $59 = HEAP32[$58>>2]|0;
             $60 = $51&255;
             $61 = $60 >>> 1;
             $62 = $53 ? $61 : $59;
             __THREW__ = 0;
             (invoke_iiii(387,($22|0),($57|0),($62|0))|0);
             $63 = __THREW__; __THREW__ = 0;
             $64 = $63&1;
             if ($64) {
              $69 = ___cxa_find_matching_catch()|0;
              $70 = tempRet0;
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
              $$0$i = $70;$$01$i = $69;
              break;
             } else {
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
              $$03$i = $last;
              break L13;
             }
            }
           } while(0);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
           $$1$i = $$0$i;$$12$i = $$01$i;
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
          ___resumeException($$12$i|0);
          // unreachable;
         }
        } while(0);
        $t$0 = $$03$i;
       } else {
        $t$0 = $13;
       }
      }
      $71 = ($t$0|0)==($last|0);
      if ($71) {
       break L3;
      }
      HEAP32[$status>>2] = -2;
      break L1;
      break;
     }
     case 95:  {
      $72 = ((($first)) + 2|0);
      $73 = HEAP8[$72>>0]|0;
      $74 = ($73<<24>>24)==(95);
      if ($74) {
       $75 = ((($first)) + 3|0);
       $76 = HEAP8[$75>>0]|0;
       $77 = ($76<<24>>24)==(90);
       if ($77) {
        $78 = ((($first)) + 4|0);
        $79 = (__ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($78,$last,$db)|0);
        $80 = ($79|0)==($78|0);
        $81 = ($79|0)==($last|0);
        $or$cond1 = $80 | $81;
        if ($or$cond1) {
         HEAP32[$status>>2] = -2;
         break L1;
        }
        $82 = $79;
        $83 = (($6) - ($82))|0;
        $84 = ($83|0)>(12);
        L46: do {
         if ($84) {
          $i$0$i16 = 0;$t$0$i15 = $79;
          while(1) {
           $85 = HEAP8[$t$0$i15>>0]|0;
           $86 = (16958 + ($i$0$i16)|0);
           $87 = HEAP8[$86>>0]|0;
           $88 = ($85<<24>>24)==($87<<24>>24);
           if (!($88)) {
            $$0$i2 = $79;
            break L46;
           }
           $89 = (($i$0$i16) + 1)|0;
           $90 = ((($t$0$i15)) + 1|0);
           $91 = ($89|0)<(13);
           if ($91) {
            $i$0$i16 = $89;$t$0$i15 = $90;
           } else {
            $$lcssa = $90;$t$0$i15$lcssa20 = $t$0$i15;
            break;
           }
          }
          $92 = ($$lcssa|0)==($last|0);
          L51: do {
           if ($92) {
            $t$2$i = $last;
           } else {
            $93 = HEAP8[$$lcssa>>0]|0;
            $94 = ($93<<24>>24)==(95);
            if ($94) {
             $95 = ((($t$0$i15$lcssa20)) + 2|0);
             $96 = ($95|0)==($last|0);
             if ($96) {
              $$0$i2 = $79;
              break L46;
             }
             $97 = HEAP8[$95>>0]|0;
             $98 = $97 << 24 >> 24;
             $isdigittmp2$i = (($98) + -48)|0;
             $isdigit3$i = ($isdigittmp2$i>>>0)<(10);
             if (!($isdigit3$i)) {
              $$0$i2 = $79;
              break L46;
             }
             $99 = ((($t$0$i15$lcssa20)) + 3|0);
             $t$1$i$ph = $99;
            } else {
             $t$1$i$ph = $$lcssa;
            }
            $100 = ($t$1$i$ph|0)==($last|0);
            if ($100) {
             $t$2$i = $last;
            } else {
             $t$1$i12 = $t$1$i$ph;
             while(1) {
              $101 = HEAP8[$t$1$i12>>0]|0;
              $102 = $101 << 24 >> 24;
              $isdigittmp$i = (($102) + -48)|0;
              $isdigit$i = ($isdigittmp$i>>>0)<(10);
              if (!($isdigit$i)) {
               $t$2$i = $t$1$i12;
               break L51;
              }
              $103 = ((($t$1$i12)) + 1|0);
              $104 = ($103|0)==($last|0);
              if ($104) {
               $t$2$i = $last;
               break;
              } else {
               $t$1$i12 = $103;
              }
             }
            }
           }
          } while(0);
          $105 = HEAP32[$db>>2]|0;
          $106 = ((($db)) + 4|0);
          $107 = HEAP32[$106>>2]|0;
          $108 = ($105|0)==($107|0);
          if ($108) {
           $$0$i2 = $79;
          } else {
           $109 = ((($107)) + -24|0);
           (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($109,0,16972)|0);
           $$0$i2 = $t$2$i;
          }
         } else {
          $$0$i2 = $79;
         }
        } while(0);
        $110 = ($$0$i2|0)==($last|0);
        if ($110) {
         break L3;
        }
        HEAP32[$status>>2] = -2;
        break L1;
       }
      }
      break;
     }
     default: {
     }
     }
     HEAP32[$status>>2] = -2;
     break L1;
    } else {
     $111 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
     $112 = ($111|0)==($last|0);
     if (!($112)) {
      HEAP32[$status>>2] = -2;
      break L1;
     }
    }
   } while(0);
   $$pr = HEAP32[$status>>2]|0;
   $113 = ($$pr|0)==(0);
   if ($113) {
    $114 = HEAP32[$db>>2]|0;
    $115 = ((($db)) + 4|0);
    $116 = HEAP32[$115>>2]|0;
    $117 = ($114|0)==($116|0);
    if ($117) {
     HEAP32[$status>>2] = -2;
    }
   }
  } else {
   HEAP32[$status>>2] = -2;
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($this);
 return;
}
function __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  $2 = ((($this)) + 4|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = ($3|0)==($0|0);
  if (!($4)) {
   $6 = $3;
   while(1) {
    $5 = ((($6)) + -24|0);
    HEAP32[$2>>2] = $5;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
    $7 = HEAP32[$2>>2]|0;
    $8 = ($7|0)==($0|0);
    if ($8) {
     break;
    } else {
     $6 = $7;
    }
   }
  }
  $9 = HEAP32[$this>>2]|0;
  $10 = ((($this)) + 8|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = $11;
  $13 = $9;
  $14 = (($12) - ($13))|0;
  $15 = ((($this)) + 12|0);
  $16 = HEAP32[$15>>2]|0;
  __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj($16,$9,$14);
 }
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $14 = 10;$7 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $14 = $phitmp$i;$7 = $5;
 }
 $6 = $7 & 1;
 $8 = ($6<<24>>24)==(0);
 if ($8) {
  $11 = $7&255;
  $12 = $11 >>> 1;
  $15 = $12;
 } else {
  $9 = ((($this)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $15 = $10;
 }
 $13 = (($14) - ($15))|0;
 $16 = ($13>>>0)<($__n>>>0);
 if ($16) {
  $33 = (($__n) - ($14))|0;
  $34 = (($33) + ($15))|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$14,$34,$15,$15,0,$__n,$__s);
 } else {
  $17 = ($__n|0)==(0);
  if (!($17)) {
   $18 = $7 & 1;
   $19 = ($18<<24>>24)==(0);
   if ($19) {
    $22 = ((($this)) + 1|0);
    $24 = $22;
   } else {
    $20 = ((($this)) + 8|0);
    $21 = HEAP32[$20>>2]|0;
    $24 = $21;
   }
   $23 = (($24) + ($15)|0);
   _memcpy(($23|0),($__s|0),($__n|0))|0;
   $25 = (($15) + ($__n))|0;
   $26 = HEAP8[$this>>0]|0;
   $27 = $26 & 1;
   $28 = ($27<<24>>24)==(0);
   if ($28) {
    $30 = $25 << 1;
    $31 = $30&255;
    HEAP8[$this>>0] = $31;
   } else {
    $29 = ((($this)) + 4|0);
    HEAP32[$29>>2] = $25;
   }
   $32 = (($24) + ($25)|0);
   HEAP8[$32>>0] = 0;
  }
 }
 return ($this|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_12DbD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 32|0);
 __ZNSt3__113__vector_baseINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEENS5_IS9_Lj4096EEEED2Ev($0);
 $1 = ((($this)) + 16|0);
 __ZNSt3__113__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev($1);
 __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($this);
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var $0 = 0, $1 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = (_pthread_key_create((2904|0),(393|0))|0);
 $1 = ($0|0)==(0);
 if ($1) {
  STACKTOP = sp;return;
 } else {
  _abort_message(16708,$vararg_buffer);
  // unreachable;
 }
}
function __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -4|0);
 $2 = HEAP32[$1>>2]|0;HEAP32[$1>>2] = (($2+-1)|0);
 $3 = (($2) + -1)|0;
 $4 = ($3|0)<(0);
 if ($4) {
  $5 = HEAP32[$this>>2]|0;
  $6 = ((($5)) + -12|0);
  __ZdlPv($6);
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv($p) {
 $p = $p|0;
 var $0 = 0, $1 = 0, $2 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 _free($p);
 $0 = HEAP32[2904>>2]|0;
 $1 = (_pthread_setspecific(($0|0),(0|0))|0);
 $2 = ($1|0)==(0);
 if ($2) {
  STACKTOP = sp;return;
 } else {
  _abort_message(16758,$vararg_buffer);
  // unreachable;
 }
}
function __ZNSt3__113__vector_baseINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEENS5_IS9_Lj4096EEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  $2 = ((($this)) + 4|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = ($3|0)==($0|0);
  if (!($4)) {
   $6 = $3;
   while(1) {
    $5 = ((($6)) + -16|0);
    HEAP32[$2>>2] = $5;
    __ZNSt3__113__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev($5);
    $7 = HEAP32[$2>>2]|0;
    $8 = ($7|0)==($0|0);
    if ($8) {
     break;
    } else {
     $6 = $7;
    }
   }
  }
  $9 = HEAP32[$this>>2]|0;
  $10 = ((($this)) + 8|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = $11;
  $13 = $9;
  $14 = (($12) - ($13))|0;
  $15 = ((($this)) + 12|0);
  $16 = HEAP32[$15>>2]|0;
  __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj($16,$9,$14);
 }
 return;
}
function __ZNSt3__113__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  $2 = ((($this)) + 4|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = ($3|0)==($0|0);
  if (!($4)) {
   $6 = $3;
   while(1) {
    $5 = ((($6)) + -16|0);
    HEAP32[$2>>2] = $5;
    __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($5);
    $7 = HEAP32[$2>>2]|0;
    $8 = ($7|0)==($0|0);
    if ($8) {
     break;
    } else {
     $6 = $7;
    }
   }
  }
  $9 = HEAP32[$this>>2]|0;
  $10 = ((($this)) + 8|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = $11;
  $13 = $9;
  $14 = (($12) - ($13))|0;
  $15 = ((($this)) + 12|0);
  $16 = HEAP32[$15>>2]|0;
  __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj($16,$9,$14);
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj($this,$p,$n) {
 $this = $this|0;
 $p = $p|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($this>>>0)<=($p>>>0);
 $1 = ((($this)) + 4096|0);
 $2 = ($1>>>0)>=($p>>>0);
 $3 = $0 & $2;
 if ($3) {
  $4 = (($n) + 15)|0;
  $5 = $4 & -16;
  $6 = (($p) + ($5)|0);
  $7 = ((($this)) + 4096|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($6|0)==($8|0);
  if ($9) {
   HEAP32[$7>>2] = $p;
  }
 } else {
  _free($p);
 }
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add,$__p_new_stuff) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 $__p_new_stuff = $__p_new_stuff|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (-18 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 1|0);
  $20 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $20 = $6;
 }
 $8 = ($__old_cap>>>0)<(2147483623);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(11);
  $14 = (($12) + 16)|0;
  $15 = $14 & -16;
  $16 = $13 ? 11 : $15;
  $17 = $16;
 } else {
  $17 = -17;
 }
 $18 = (_malloc($17)|0);
 $19 = ($__n_copy|0)==(0);
 if (!($19)) {
  _memcpy(($18|0),($20|0),($__n_copy|0))|0;
 }
 $21 = ($__n_add|0)==(0);
 if (!($21)) {
  $22 = (($18) + ($__n_copy)|0);
  _memcpy(($22|0),($__p_new_stuff|0),($__n_add|0))|0;
 }
 $23 = (($__old_sz) - ($__n_del))|0;
 $24 = ($23|0)==($__n_copy|0);
 if (!($24)) {
  $25 = (($23) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $26 = (($18) + ($$sum)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $27 = (($20) + ($$sum1)|0);
  _memcpy(($26|0),($27|0),($25|0))|0;
 }
 $28 = ($__old_cap|0)==(10);
 if (!($28)) {
  _free($20);
 }
 $29 = ((($this)) + 8|0);
 HEAP32[$29>>2] = $18;
 $30 = $17 | 1;
 HEAP32[$this>>2] = $30;
 $31 = (($23) + ($__n_add))|0;
 $32 = ((($this)) + 4|0);
 HEAP32[$32>>2] = $31;
 $33 = (($18) + ($31)|0);
 HEAP8[$33>>0] = 0;
 return;
}
function __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___assert_fail((16811|0),(16840|0),1164,(16932|0));
 // unreachable;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if (!($2)) {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  _free($4);
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$0$i = 0, $$012 = 0, $$06 = 0, $$1$i = 0, $$113 = 0, $$13$i = 0, $$17 = 0, $$2$i = 0, $$214 = 0, $$24$i = 0, $$24$ph = 0, $$28 = 0, $$3$i = 0, $$35$i = 0, $$7 = 0, $$in = 0, $$in109 = 0, $$lcssa150 = 0, $$lcssa151 = 0, $$lcssa156 = 0;
 var $$ph96 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i$i$i$i = 0, $$pre$i27 = 0, $$pre86 = 0, $$pre87 = 0, $$pre88 = 0, $$pre89 = 0, $$pre90 = 0, $$pre91 = 0, $$pre92 = 0, $$sum$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;
 var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0;
 var $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0;
 var $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0;
 var $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0;
 var $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0;
 var $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0;
 var $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0;
 var $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0;
 var $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0;
 var $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0;
 var $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0;
 var $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0;
 var $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0;
 var $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0;
 var $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0;
 var $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0;
 var $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0;
 var $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0;
 var $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0;
 var $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0;
 var $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, $first_arg$0$off0$ph = 0, $first_arg$3$off0$ph = 0, $k$0121 = 0, $k2$0122 = 0, $left$i = 0, $lpad$phi$index = 0, $lpad$phi$index12 = 0, $lpad$phi72$index = 0, $lpad$phi72$index7 = 0, $or$cond$i = 0, $or$cond$i$i$i$i$i = 0;
 var $or$cond$i$i$i$i$i$i = 0, $phitmp$i$i$i$i$i$i = 0, $phitmp$i$i$i$i$i$i$i = 0, $phitmp$i2$i$i$i$i$i = 0, $phitmp$i2$i$i$i$i$i$i = 0, $ret1 = 0, $ret2 = 0, $t$0 = 0, $t$1 = 0, $t$1$ph = 0, $t$2 = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $left$i = sp + 96|0;
 $0 = sp + 84|0;
 $1 = sp + 72|0;
 $2 = sp + 60|0;
 $3 = sp + 48|0;
 $ret2 = sp + 36|0;
 $ret1 = sp + 24|0;
 $tmp = sp + 12|0;
 $4 = sp;
 $5 = ($first|0)==($last|0);
 L1: do {
  if ($5) {
   $$7 = $first;
  } else {
   $6 = ((($db)) + 56|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = (($7) + 1)|0;
   HEAP32[$6>>2] = $8;
   $9 = ((($db)) + 61|0);
   $10 = HEAP8[$9>>0]|0;
   $11 = ($8>>>0)>(1);
   if ($11) {
    HEAP8[$9>>0] = 1;
   }
   $12 = HEAP8[$first>>0]|0;
   $13 = $12 << 24 >> 24;
   L6: do {
    switch ($13|0) {
    case 84: case 71:  {
     $14 = $last;
     $15 = $first;
     $16 = (($14) - ($15))|0;
     $17 = ($16|0)>(2);
     L133: do {
      if ($17) {
       switch ($13|0) {
       case 84:  {
        break;
       }
       case 71:  {
        $220 = ((($first)) + 1|0);
        $221 = HEAP8[$220>>0]|0;
        $222 = $221 << 24 >> 24;
        switch ($222|0) {
        case 86:  {
         $223 = ((($first)) + 2|0);
         __THREW__ = 0;
         $224 = (invoke_iiii(397,($223|0),($last|0),($db|0))|0);
         $225 = __THREW__; __THREW__ = 0;
         $226 = $225&1;
         if ($226) {
          label = 87;
          break L6;
         }
         $227 = ($224|0)==($223|0);
         if ($227) {
          $$0$i = $first;
          break L133;
         }
         $228 = HEAP32[$db>>2]|0;
         $229 = ((($db)) + 4|0);
         $230 = HEAP32[$229>>2]|0;
         $231 = ($228|0)==($230|0);
         if ($231) {
          $$0$i = $first;
          break L133;
         }
         $232 = ((($230)) + -24|0);
         __THREW__ = 0;
         (invoke_iiii(391,($232|0),0,(18982|0))|0);
         $233 = __THREW__; __THREW__ = 0;
         $234 = $233&1;
         if ($234) {
          label = 87;
          break L6;
         } else {
          $$0$i = $224;
          break L133;
         }
         break;
        }
        case 82:  {
         $235 = ((($first)) + 2|0);
         __THREW__ = 0;
         $236 = (invoke_iiii(397,($235|0),($last|0),($db|0))|0);
         $237 = __THREW__; __THREW__ = 0;
         $238 = $237&1;
         if ($238) {
          label = 87;
          break L6;
         }
         $239 = ($236|0)==($235|0);
         if ($239) {
          $$0$i = $first;
          break L133;
         }
         $240 = HEAP32[$db>>2]|0;
         $241 = ((($db)) + 4|0);
         $242 = HEAP32[$241>>2]|0;
         $243 = ($240|0)==($242|0);
         if ($243) {
          $$0$i = $first;
          break L133;
         }
         $244 = ((($242)) + -24|0);
         __THREW__ = 0;
         (invoke_iiii(391,($244|0),0,(19002|0))|0);
         $245 = __THREW__; __THREW__ = 0;
         $246 = $245&1;
         if ($246) {
          label = 87;
          break L6;
         } else {
          $$0$i = $236;
          break L133;
         }
         break;
        }
        default: {
         $$0$i = $first;
         break L133;
        }
        }
        break;
       }
       default: {
        $$0$i = $first;
        break L133;
       }
       }
       $18 = ((($first)) + 1|0);
       $19 = HEAP8[$18>>0]|0;
       $20 = $19 << 24 >> 24;
       switch ($20|0) {
       case 86:  {
        $21 = ((($first)) + 2|0);
        __THREW__ = 0;
        $22 = (invoke_iiii(394,($21|0),($last|0),($db|0))|0);
        $23 = __THREW__; __THREW__ = 0;
        $24 = $23&1;
        if ($24) {
         label = 87;
         break L6;
        }
        $25 = ($22|0)==($21|0);
        if ($25) {
         $$0$i = $first;
         break L133;
        }
        $26 = HEAP32[$db>>2]|0;
        $27 = ((($db)) + 4|0);
        $28 = HEAP32[$27>>2]|0;
        $29 = ($26|0)==($28|0);
        if ($29) {
         $$0$i = $first;
         break L133;
        }
        $30 = ((($28)) + -24|0);
        __THREW__ = 0;
        (invoke_iiii(391,($30|0),0,(18831|0))|0);
        $31 = __THREW__; __THREW__ = 0;
        $32 = $31&1;
        if ($32) {
         label = 87;
         break L6;
        } else {
         $$0$i = $22;
         break L133;
        }
        break;
       }
       case 84:  {
        $33 = ((($first)) + 2|0);
        __THREW__ = 0;
        $34 = (invoke_iiii(394,($33|0),($last|0),($db|0))|0);
        $35 = __THREW__; __THREW__ = 0;
        $36 = $35&1;
        if ($36) {
         label = 87;
         break L6;
        }
        $37 = ($34|0)==($33|0);
        if ($37) {
         $$0$i = $first;
         break L133;
        }
        $38 = HEAP32[$db>>2]|0;
        $39 = ((($db)) + 4|0);
        $40 = HEAP32[$39>>2]|0;
        $41 = ($38|0)==($40|0);
        if ($41) {
         $$0$i = $first;
         break L133;
        }
        $42 = ((($40)) + -24|0);
        __THREW__ = 0;
        (invoke_iiii(391,($42|0),0,(18843|0))|0);
        $43 = __THREW__; __THREW__ = 0;
        $44 = $43&1;
        if ($44) {
         label = 87;
         break L6;
        } else {
         $$0$i = $34;
         break L133;
        }
        break;
       }
       case 73:  {
        $45 = ((($first)) + 2|0);
        __THREW__ = 0;
        $46 = (invoke_iiii(394,($45|0),($last|0),($db|0))|0);
        $47 = __THREW__; __THREW__ = 0;
        $48 = $47&1;
        if ($48) {
         label = 87;
         break L6;
        }
        $49 = ($46|0)==($45|0);
        if ($49) {
         $$0$i = $first;
         break L133;
        }
        $50 = HEAP32[$db>>2]|0;
        $51 = ((($db)) + 4|0);
        $52 = HEAP32[$51>>2]|0;
        $53 = ($50|0)==($52|0);
        if ($53) {
         $$0$i = $first;
         break L133;
        }
        $54 = ((($52)) + -24|0);
        __THREW__ = 0;
        (invoke_iiii(391,($54|0),0,(18852|0))|0);
        $55 = __THREW__; __THREW__ = 0;
        $56 = $55&1;
        if ($56) {
         label = 87;
         break L6;
        } else {
         $$0$i = $46;
         break L133;
        }
        break;
       }
       case 83:  {
        $57 = ((($first)) + 2|0);
        __THREW__ = 0;
        $58 = (invoke_iiii(394,($57|0),($last|0),($db|0))|0);
        $59 = __THREW__; __THREW__ = 0;
        $60 = $59&1;
        if ($60) {
         label = 87;
         break L6;
        }
        $61 = ($58|0)==($57|0);
        if ($61) {
         $$0$i = $first;
         break L133;
        }
        $62 = HEAP32[$db>>2]|0;
        $63 = ((($db)) + 4|0);
        $64 = HEAP32[$63>>2]|0;
        $65 = ($62|0)==($64|0);
        if ($65) {
         $$0$i = $first;
         break L133;
        }
        $66 = ((($64)) + -24|0);
        __THREW__ = 0;
        (invoke_iiii(391,($66|0),0,(18866|0))|0);
        $67 = __THREW__; __THREW__ = 0;
        $68 = $67&1;
        if ($68) {
         label = 87;
         break L6;
        } else {
         $$0$i = $58;
         break L133;
        }
        break;
       }
       case 99:  {
        $69 = ((($first)) + 2|0);
        $70 = (__ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_($69,$last)|0);
        $71 = ($70|0)==($69|0);
        if ($71) {
         $$0$i = $first;
         break L133;
        }
        $72 = (__ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_($70,$last)|0);
        $73 = ($72|0)==($70|0);
        if ($73) {
         $$0$i = $first;
         break L133;
        }
        __THREW__ = 0;
        $74 = (invoke_iiii(395,($72|0),($last|0),($db|0))|0);
        $75 = __THREW__; __THREW__ = 0;
        $76 = $75&1;
        if ($76) {
         label = 87;
         break L6;
        }
        $77 = ($74|0)==($72|0);
        if ($77) {
         $$0$i = $first;
         break L133;
        }
        $78 = HEAP32[$db>>2]|0;
        $79 = ((($db)) + 4|0);
        $80 = HEAP32[$79>>2]|0;
        $81 = ($78|0)==($80|0);
        if ($81) {
         $$0$i = $first;
         break L133;
        }
        $82 = ((($80)) + -24|0);
        __THREW__ = 0;
        (invoke_iiii(391,($82|0),0,(18885|0))|0);
        $83 = __THREW__; __THREW__ = 0;
        $84 = $83&1;
        if ($84) {
         label = 87;
         break L6;
        } else {
         $$0$i = $74;
         break L133;
        }
        break;
       }
       case 67:  {
        $85 = ((($first)) + 2|0);
        __THREW__ = 0;
        $86 = (invoke_iiii(394,($85|0),($last|0),($db|0))|0);
        $87 = __THREW__; __THREW__ = 0;
        $88 = $87&1;
        if ($88) {
         label = 87;
         break L6;
        }
        $89 = ($86|0)==($85|0);
        if ($89) {
         $$0$i = $first;
         break L133;
        }
        $90 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($86,$last)|0);
        $91 = ($90|0)==($86|0);
        $92 = ($90|0)==($last|0);
        $or$cond$i = $91 | $92;
        if ($or$cond$i) {
         $$0$i = $first;
         break L133;
        }
        $93 = HEAP8[$90>>0]|0;
        $94 = ($93<<24>>24)==(95);
        if (!($94)) {
         $$0$i = $first;
         break L133;
        }
        $95 = ((($90)) + 1|0);
        __THREW__ = 0;
        $96 = (invoke_iiii(394,($95|0),($last|0),($db|0))|0);
        $97 = __THREW__; __THREW__ = 0;
        $98 = $97&1;
        if ($98) {
         label = 87;
         break L6;
        }
        $99 = ($96|0)==($95|0);
        if ($99) {
         $$0$i = $first;
         break L133;
        }
        $100 = ((($db)) + 4|0);
        $101 = HEAP32[$100>>2]|0;
        $102 = HEAP32[$db>>2]|0;
        $103 = $101;
        $104 = $102;
        $105 = (($103) - ($104))|0;
        $106 = (($105|0) / 24)&-1;
        $107 = ($106>>>0)<(2);
        if ($107) {
         $$0$i = $first;
         break L133;
        }
        $108 = ((($101)) + -24|0);
        __THREW__ = 0;
        invoke_vii(396,($left$i|0),($108|0));
        $109 = __THREW__; __THREW__ = 0;
        $110 = $109&1;
        if ($110) {
         label = 87;
         break L6;
        }
        $111 = HEAP32[$100>>2]|0;
        $112 = ((($111)) + -24|0);
        $114 = $111;
        while(1) {
         $113 = ((($114)) + -24|0);
         HEAP32[$100>>2] = $113;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($113);
         $$pre$i$i = HEAP32[$100>>2]|0;
         $115 = ($$pre$i$i|0)==($112|0);
         if ($115) {
          break;
         } else {
          $114 = $$pre$i$i;
         }
        }
        $116 = ((($111)) + -48|0);
        __THREW__ = 0;
        $117 = (invoke_iiii(391,($left$i|0),0,(18912|0))|0);
        $118 = __THREW__; __THREW__ = 0;
        $119 = $118&1;
        if ($119) {
         $194 = ___cxa_find_matching_catch()|0;
         $195 = tempRet0;
         $$3$i = $195;$$35$i = $194;
        } else {
         ;HEAP32[$2>>2]=HEAP32[$117>>2]|0;HEAP32[$2+4>>2]=HEAP32[$117+4>>2]|0;HEAP32[$2+8>>2]=HEAP32[$117+8>>2]|0;
         HEAP32[$117>>2] = 0;
         $120 = ((($117)) + 4|0);
         HEAP32[$120>>2] = 0;
         $121 = ((($117)) + 8|0);
         HEAP32[$121>>2] = 0;
         __THREW__ = 0;
         $122 = (invoke_iii(392,($2|0),(18937|0))|0);
         $123 = __THREW__; __THREW__ = 0;
         $124 = $123&1;
         if ($124) {
          $196 = ___cxa_find_matching_catch()|0;
          $197 = tempRet0;
          $$2$i = $197;$$24$i = $196;
         } else {
          ;HEAP32[$1>>2]=HEAP32[$122>>2]|0;HEAP32[$1+4>>2]=HEAP32[$122+4>>2]|0;HEAP32[$1+8>>2]=HEAP32[$122+8>>2]|0;
          HEAP32[$122>>2] = 0;
          $125 = ((($122)) + 4|0);
          HEAP32[$125>>2] = 0;
          $126 = ((($122)) + 8|0);
          HEAP32[$126>>2] = 0;
          $127 = HEAP32[$100>>2]|0;
          $128 = ((($127)) + -24|0);
          __THREW__ = 0;
          invoke_vii(396,($3|0),($128|0));
          $129 = __THREW__; __THREW__ = 0;
          $130 = $129&1;
          do {
           if ($130) {
            $198 = ___cxa_find_matching_catch()|0;
            $199 = tempRet0;
            $$1$i = $199;$$13$i = $198;
           } else {
            $131 = HEAP8[$3>>0]|0;
            $132 = $131 & 1;
            $133 = ($132<<24>>24)==(0);
            $134 = ((($3)) + 8|0);
            $135 = HEAP32[$134>>2]|0;
            $136 = ((($3)) + 1|0);
            $137 = $133 ? $136 : $135;
            $138 = ((($3)) + 4|0);
            $139 = HEAP32[$138>>2]|0;
            $140 = $131&255;
            $141 = $140 >>> 1;
            $142 = $133 ? $141 : $139;
            __THREW__ = 0;
            $143 = (invoke_iiii(387,($1|0),($137|0),($142|0))|0);
            $144 = __THREW__; __THREW__ = 0;
            $145 = $144&1;
            if ($145) {
             $200 = ___cxa_find_matching_catch()|0;
             $201 = tempRet0;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
             $$1$i = $201;$$13$i = $200;
             break;
            }
            ;HEAP32[$0>>2]=HEAP32[$143>>2]|0;HEAP32[$0+4>>2]=HEAP32[$143+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[$143+8>>2]|0;
            HEAP32[$143>>2] = 0;
            $146 = ((($143)) + 4|0);
            HEAP32[$146>>2] = 0;
            $147 = ((($143)) + 8|0);
            HEAP32[$147>>2] = 0;
            $148 = HEAP8[$116>>0]|0;
            $149 = $148 & 1;
            $150 = ($149<<24>>24)==(0);
            do {
             if ($150) {
              $151 = ((($116)) + 1|0);
              HEAP8[$151>>0] = 0;
              HEAP8[$116>>0] = 0;
             } else {
              $152 = ((($111)) + -40|0);
              $153 = HEAP32[$152>>2]|0;
              HEAP8[$153>>0] = 0;
              $154 = ((($111)) + -44|0);
              HEAP32[$154>>2] = 0;
              $$pre$i$i$i$i = HEAP8[$116>>0]|0;
              $155 = $$pre$i$i$i$i & 1;
              $156 = ($155<<24>>24)==(0);
              if ($156) {
               $161 = $$pre$i$i$i$i;$170 = 10;
              } else {
               $157 = HEAP32[$116>>2]|0;
               $158 = $157 & -2;
               $phitmp$i$i$i$i$i$i$i = (($158) + -1)|0;
               $159 = $157&255;
               $161 = $159;$170 = $phitmp$i$i$i$i$i$i$i;
              }
              $160 = $161 & 1;
              $162 = ($160<<24>>24)==(0);
              do {
               if ($162) {
                $163 = $161&255;
                $164 = $163 >>> 1;
                $165 = ($161&255)<(22);
                if ($165) {
                 $169 = 10;$189 = $164;$552 = 1;
                 break;
                }
                $166 = (($164) + 16)|0;
                $167 = $166 & 240;
                $phitmp$i2$i$i$i$i$i$i = (($167) + -1)|0;
                $169 = $phitmp$i2$i$i$i$i$i$i;$189 = $164;$552 = 1;
               } else {
                $169 = 10;$189 = 0;$552 = 0;
               }
              } while(0);
              $168 = ($169|0)==($170|0);
              if ($168) {
               break;
              }
              $171 = ($169|0)==(10);
              if ($171) {
               $176 = ((($116)) + 1|0);
               $177 = HEAP32[$152>>2]|0;
               if ($552) {
                $178 = $161&255;
                $179 = $178 >>> 1;
                $180 = (($179) + 1)|0;
                _memcpy(($176|0),($177|0),($180|0))|0;
                _free($177);
               } else {
                $185 = HEAP8[$177>>0]|0;
                HEAP8[$176>>0] = $185;
                _free($177);
               }
               $190 = $189 << 1;
               $191 = $190&255;
               HEAP8[$116>>0] = $191;
               break;
              }
              $172 = ($169>>>0)<=($170>>>0);
              $173 = (($169) + 1)|0;
              $174 = (_malloc($173)|0);
              $175 = ($174|0)==(0|0);
              $or$cond$i$i$i$i$i$i = $172 & $175;
              if ($or$cond$i$i$i$i$i$i) {
               break;
              }
              if ($552) {
               $181 = ((($116)) + 1|0);
               $182 = $161&255;
               $183 = $182 >>> 1;
               $184 = (($183) + 1)|0;
               _memcpy(($174|0),($181|0),($184|0))|0;
              } else {
               $186 = HEAP32[$152>>2]|0;
               $187 = HEAP8[$186>>0]|0;
               HEAP8[$174>>0] = $187;
               _free($186);
              }
              $188 = $173 | 1;
              HEAP32[$116>>2] = $188;
              HEAP32[$154>>2] = $189;
              HEAP32[$152>>2] = $174;
             }
            } while(0);
            ;HEAP32[$116>>2]=HEAP32[$0>>2]|0;HEAP32[$116+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$116+8>>2]=HEAP32[$0+8>>2]|0;
            HEAP32[$0>>2] = 0;
            $192 = ((($0)) + 4|0);
            HEAP32[$192>>2] = 0;
            $193 = ((($0)) + 8|0);
            HEAP32[$193>>2] = 0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($left$i);
            $$0$i = $96;
            break L133;
           }
          } while(0);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
          $$2$i = $$1$i;$$24$i = $$13$i;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
         $$3$i = $$2$i;$$35$i = $$24$i;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($left$i);
        $eh$lpad$body$index2Z2D = $$3$i;$eh$lpad$body$indexZ2D = $$35$i;
        label = 88;
        break L6;
        break;
       }
       default: {
        $202 = (__ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_($18,$last)|0);
        $203 = ($202|0)==($18|0);
        if ($203) {
         $$0$i = $first;
         break L133;
        }
        __THREW__ = 0;
        $204 = (invoke_iiii(395,($202|0),($last|0),($db|0))|0);
        $205 = __THREW__; __THREW__ = 0;
        $206 = $205&1;
        if ($206) {
         label = 87;
         break L6;
        }
        $207 = ($204|0)==($202|0);
        if ($207) {
         $$0$i = $first;
         break L133;
        }
        $208 = HEAP32[$db>>2]|0;
        $209 = ((($db)) + 4|0);
        $210 = HEAP32[$209>>2]|0;
        $211 = ($208|0)==($210|0);
        if ($211) {
         $$0$i = $first;
         break L133;
        }
        $212 = ((($first)) + 2|0);
        $213 = HEAP8[$212>>0]|0;
        $214 = ($213<<24>>24)==(118);
        $215 = ((($210)) + -24|0);
        __THREW__ = 0;
        if ($214) {
         (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($215,0,18942)|0);
         $216 = __THREW__; __THREW__ = 0;
         $217 = $216&1;
         if ($217) {
          label = 87;
          break L6;
         } else {
          $$0$i = $204;
          break L133;
         }
        } else {
         (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($215,0,18960)|0);
         $218 = __THREW__; __THREW__ = 0;
         $219 = $218&1;
         if ($219) {
          label = 87;
          break L6;
         } else {
          $$0$i = $204;
          break L133;
         }
        }
       }
       }
      } else {
       $$0$i = $first;
      }
     } while(0);
     $$24$ph = $$0$i;
     label = 180;
     break;
    }
    default: {
     __THREW__ = 0;
     $249 = (invoke_iiii(397,($first|0),($last|0),($db|0))|0);
     $250 = __THREW__; __THREW__ = 0;
     $251 = $250&1;
     if ($251) {
      label = 87;
     } else {
      $252 = ((($db)) + 48|0);
      $253 = HEAP32[$252>>2]|0;
      $254 = ((($db)) + 52|0);
      $255 = HEAP32[$254>>2]|0;
      $256 = ($249|0)==($first|0);
      if ($256) {
       $$24$ph = $first;
       label = 180;
      } else {
       $257 = ($249|0)==($last|0);
       if ($257) {
        $$24$ph = $last;
        label = 180;
       } else {
        $258 = HEAP8[$249>>0]|0;
        switch ($258<<24>>24) {
        case 46: case 69:  {
         $$24$ph = $249;
         label = 180;
         break L6;
         break;
        }
        default: {
        }
        }
        $259 = HEAP8[$9>>0]|0;
        HEAP8[$9>>0] = 0;
        HEAP32[$ret2>>2] = 0;
        $260 = ((($ret2)) + 4|0);
        HEAP32[$260>>2] = 0;
        $261 = ((($ret2)) + 8|0);
        HEAP32[$261>>2] = 0;
        $262 = HEAP32[$db>>2]|0;
        $263 = ((($db)) + 4|0);
        $264 = HEAP32[$263>>2]|0;
        $265 = ($262|0)==($264|0);
        L12: do {
         if (!($265)) {
          $266 = ((($264)) + -24|0);
          $267 = HEAP8[$266>>0]|0;
          $268 = $267 & 1;
          $269 = ($268<<24>>24)==(0);
          if ($269) {
           $272 = $267&255;
           $273 = $272 >>> 1;
           $275 = $273;
          } else {
           $270 = ((($264)) + -20|0);
           $271 = HEAP32[$270>>2]|0;
           $275 = $271;
          }
          $274 = ($275|0)==(0);
          if (!($274)) {
           $280 = ((($db)) + 60|0);
           $281 = HEAP8[$280>>0]|0;
           $282 = ($281<<24>>24)==(0);
           L19: do {
            if ($282) {
             if ($269) {
              $287 = ((($266)) + 1|0);
              $288 = $267&255;
              $289 = $288 >>> 1;
              $290 = $289;$292 = $287;
             } else {
              $283 = ((($264)) + -16|0);
              $284 = HEAP32[$283>>2]|0;
              $285 = ((($264)) + -20|0);
              $286 = HEAP32[$285>>2]|0;
              $290 = $286;$292 = $284;
             }
             $$sum$i = (($290) + -1)|0;
             $291 = (($292) + ($$sum$i)|0);
             $293 = HEAP8[$291>>0]|0;
             $294 = ($293<<24>>24)==(62);
             if ($294) {
              if ($269) {
               $299 = $267&255;
               $300 = $299 >>> 1;
               $301 = ((($266)) + 1|0);
               $$in = $300;$304 = $301;
              } else {
               $295 = ((($264)) + -20|0);
               $296 = HEAP32[$295>>2]|0;
               $297 = ((($264)) + -16|0);
               $298 = HEAP32[$297>>2]|0;
               $$in = $296;$304 = $298;
              }
              $302 = (($$in) + -2)|0;
              $303 = (($304) + ($302)|0);
              $305 = HEAP8[$303>>0]|0;
              $306 = ($305<<24>>24)==(45);
              if ($306) {
               $403 = $264;$t$0 = $249;
               label = 134;
              } else {
               if ($269) {
                $311 = $267&255;
                $312 = $311 >>> 1;
                $313 = ((($266)) + 1|0);
                $$in109 = $312;$316 = $313;
               } else {
                $307 = ((($264)) + -20|0);
                $308 = HEAP32[$307>>2]|0;
                $309 = ((($264)) + -16|0);
                $310 = HEAP32[$309>>2]|0;
                $$in109 = $308;$316 = $310;
               }
               $314 = (($$in109) + -2)|0;
               $315 = (($316) + ($314)|0);
               $317 = HEAP8[$315>>0]|0;
               $318 = ($317<<24>>24)==(62);
               if ($318) {
                $403 = $264;$t$0 = $249;
                label = 134;
               } else {
                __THREW__ = 0;
                $319 = (invoke_iiii(394,($249|0),($last|0),($db|0))|0);
                $320 = __THREW__; __THREW__ = 0;
                $321 = $320&1;
                if ($321) {
                 label = 99;
                } else {
                 $322 = ($319|0)==($249|0);
                 if ($322) {
                  break L12;
                 }
                 $323 = HEAP32[$263>>2]|0;
                 $324 = HEAP32[$db>>2]|0;
                 $325 = $323;
                 $326 = $324;
                 $327 = (($325) - ($326))|0;
                 $328 = (($327|0) / 24)&-1;
                 $329 = ($328>>>0)<(2);
                 if ($329) {
                  break L12;
                 }
                 $330 = ((($323)) + -24|0);
                 ;HEAP32[$ret1>>2]=HEAP32[$330>>2]|0;HEAP32[$ret1+4>>2]=HEAP32[$330+4>>2]|0;HEAP32[$ret1+8>>2]=HEAP32[$330+8>>2]|0;
                 HEAP32[$330>>2] = 0;
                 $331 = ((($330)) + 4|0);
                 HEAP32[$331>>2] = 0;
                 $332 = ((($330)) + 8|0);
                 HEAP32[$332>>2] = 0;
                 $333 = ((($323)) + -12|0);
                 $334 = HEAP8[$ret2>>0]|0;
                 $335 = $334 & 1;
                 $336 = ($335<<24>>24)==(0);
                 L39: do {
                  if ($336) {
                   $337 = ((($ret2)) + 1|0);
                   HEAP8[$337>>0] = 0;
                   HEAP8[$ret2>>0] = 0;
                  } else {
                   $338 = ((($ret2)) + 8|0);
                   $339 = HEAP32[$338>>2]|0;
                   HEAP8[$339>>0] = 0;
                   $340 = ((($ret2)) + 4|0);
                   HEAP32[$340>>2] = 0;
                   $341 = HEAP32[$ret2>>2]|0;
                   $342 = $341 & -2;
                   $phitmp$i$i$i$i$i$i = (($342) + -1)|0;
                   $343 = $341&255;
                   $344 = $343 & 1;
                   $345 = ($344<<24>>24)==(0);
                   do {
                    if ($345) {
                     $346 = $341 >>> 1;
                     $347 = $346 & 127;
                     $348 = ($343&255)<(22);
                     if ($348) {
                      $355 = ((($ret2)) + 1|0);
                      $356 = $341 >>> 1;
                      $357 = $356 & 127;
                      $358 = (($357) + 1)|0;
                      _memcpy(($355|0),($339|0),($358|0))|0;
                      _free($339);
                      $$ph96 = $347;
                      break;
                     }
                     $349 = (($347) + 16)|0;
                     $350 = $349 & 240;
                     $phitmp$i2$i$i$i$i$i = (($350) + -1)|0;
                     $351 = ($phitmp$i2$i$i$i$i$i|0)==($phitmp$i$i$i$i$i$i|0);
                     if ($351) {
                      break L39;
                     }
                     $352 = ($phitmp$i2$i$i$i$i$i>>>0)<=($phitmp$i$i$i$i$i$i>>>0);
                     $353 = (_malloc($350)|0);
                     $354 = ($353|0)==(0|0);
                     $or$cond$i$i$i$i$i = $352 & $354;
                     if ($or$cond$i$i$i$i$i) {
                      break L39;
                     }
                     $360 = ((($ret2)) + 1|0);
                     $361 = $341 >>> 1;
                     $362 = $361 & 127;
                     $363 = (($362) + 1)|0;
                     _memcpy(($353|0),($360|0),($363|0))|0;
                     $364 = $350 | 1;
                     HEAP32[$ret2>>2] = $364;
                     HEAP32[$340>>2] = $347;
                     HEAP32[$338>>2] = $353;
                     break L39;
                    } else {
                     $359 = ((($ret2)) + 1|0);
                     HEAP8[$359>>0] = 0;
                     _free($339);
                     $$ph96 = 0;
                    }
                   } while(0);
                   $365 = $$ph96 << 1;
                   $366 = $365&255;
                   HEAP8[$ret2>>0] = $366;
                  }
                 } while(0);
                 ;HEAP32[$ret2>>2]=HEAP32[$333>>2]|0;HEAP32[$ret2+4>>2]=HEAP32[$333+4>>2]|0;HEAP32[$ret2+8>>2]=HEAP32[$333+8>>2]|0;
                 HEAP32[$333>>2] = 0;
                 $367 = ((($333)) + 4|0);
                 HEAP32[$367>>2] = 0;
                 $368 = ((($333)) + 8|0);
                 HEAP32[$368>>2] = 0;
                 $369 = HEAP8[$ret2>>0]|0;
                 $370 = $369 & 1;
                 $371 = ($370<<24>>24)==(0);
                 $372 = ((($ret2)) + 4|0);
                 $373 = HEAP32[$372>>2]|0;
                 $374 = $369&255;
                 $375 = $374 >>> 1;
                 $376 = $371 ? $375 : $373;
                 $377 = ($376|0)==(0);
                 if ($377) {
                  __THREW__ = 0;
                  invoke_vii(398,($ret1|0),32);
                  $378 = __THREW__; __THREW__ = 0;
                  $379 = $378&1;
                  if (!($379)) {
                   label = 130;
                  }
                 } else {
                  label = 130;
                 }
                 do {
                  if ((label|0) == 130) {
                   $382 = HEAP32[$263>>2]|0;
                   $383 = ((($382)) + -24|0);
                   $385 = $382;
                   while(1) {
                    $384 = ((($385)) + -24|0);
                    HEAP32[$263>>2] = $384;
                    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($384);
                    $$pre$i27 = HEAP32[$263>>2]|0;
                    $386 = ($$pre$i27|0)==($383|0);
                    if ($386) {
                     break;
                    } else {
                     $385 = $$pre$i27;
                    }
                   }
                   $387 = ((($382)) + -48|0);
                   $388 = HEAP8[$ret1>>0]|0;
                   $389 = $388 & 1;
                   $390 = ($389<<24>>24)==(0);
                   $391 = ((($ret1)) + 8|0);
                   $392 = HEAP32[$391>>2]|0;
                   $393 = ((($ret1)) + 1|0);
                   $394 = $390 ? $393 : $392;
                   $395 = ((($ret1)) + 4|0);
                   $396 = HEAP32[$395>>2]|0;
                   $397 = $388&255;
                   $398 = $397 >>> 1;
                   $399 = $390 ? $398 : $396;
                   __THREW__ = 0;
                   (invoke_iiiii(399,($387|0),0,($394|0),($399|0))|0);
                   $400 = __THREW__; __THREW__ = 0;
                   $401 = $400&1;
                   if ($401) {
                    break;
                   }
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ret1);
                   $$pre = HEAP32[$263>>2]|0;
                   $403 = $$pre;$t$0 = $319;
                   label = 134;
                   break L19;
                  }
                 } while(0);
                 $380 = ___cxa_find_matching_catch()|0;
                 $381 = tempRet0;
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ret1);
                 $$113 = $381;$$17 = $380;
                }
               }
              }
             } else {
              $403 = $264;$t$0 = $249;
              label = 134;
             }
            } else {
             $403 = $264;$t$0 = $249;
             label = 134;
            }
           } while(0);
           L61: do {
            if ((label|0) == 134) {
             $402 = ((($403)) + -24|0);
             __THREW__ = 0;
             invoke_vii(398,($402|0),40);
             $404 = __THREW__; __THREW__ = 0;
             $405 = $404&1;
             if ($405) {
              label = 99;
             } else {
              $406 = ($t$0|0)==($last|0);
              if ($406) {
               label = 137;
              } else {
               $407 = HEAP8[$t$0>>0]|0;
               $408 = ($407<<24>>24)==(118);
               if ($408) {
                $417 = ((($t$0)) + 1|0);
                $$pre91 = HEAP32[$db>>2]|0;
                $$pre92 = HEAP32[$263>>2]|0;
                $505 = $$pre91;$506 = $$pre92;$t$2 = $417;
               } else {
                label = 137;
               }
              }
              L67: do {
               if ((label|0) == 137) {
                $409 = ((($tmp)) + 4|0);
                $410 = ((($4)) + 8|0);
                $411 = ((($4)) + 1|0);
                $412 = ((($4)) + 4|0);
                $413 = ((($tmp)) + 8|0);
                $414 = ((($tmp)) + 1|0);
                $415 = ((($tmp)) + 4|0);
                $416 = ((($tmp)) + 8|0);
                $first_arg$0$off0$ph = 1;$t$1$ph = $t$0;
                L69: while(1) {
                 $$pre86 = HEAP32[$263>>2]|0;
                 $$pre87 = HEAP32[$db>>2]|0;
                 $419 = $$pre86;$421 = $$pre87;$t$1 = $t$1$ph;
                 while(1) {
                  $418 = $419;
                  $420 = $421;
                  $422 = (($418) - ($420))|0;
                  $423 = (($422|0) / 24)&-1;
                  __THREW__ = 0;
                  $424 = (invoke_iiii(394,($t$1|0),($last|0),($db|0))|0);
                  $425 = __THREW__; __THREW__ = 0;
                  $426 = $425&1;
                  if ($426) {
                   label = 98;
                   break L69;
                  }
                  $427 = HEAP32[$263>>2]|0;
                  $428 = HEAP32[$db>>2]|0;
                  $429 = $427;
                  $430 = $428;
                  $431 = (($429) - ($430))|0;
                  $432 = (($431|0) / 24)&-1;
                  $433 = ($424|0)==($t$1|0);
                  if ($433) {
                   $505 = $428;$506 = $427;$t$2 = $t$1;
                   break L67;
                  }
                  $434 = ($432>>>0)>($423>>>0);
                  if ($434) {
                   $$lcssa150 = $423;$$lcssa151 = $424;$$lcssa156 = $432;
                   break;
                  } else {
                   $419 = $427;$421 = $428;$t$1 = $424;
                  }
                 }
                 HEAP32[$tmp>>2] = 0;
                 HEAP32[$415>>2] = 0;
                 HEAP32[$416>>2] = 0;
                 $435 = ($$lcssa150>>>0)<($$lcssa156>>>0);
                 if ($435) {
                  $k$0121 = $$lcssa150;
                  while(1) {
                   $437 = HEAP8[$tmp>>0]|0;
                   $438 = $437 & 1;
                   $439 = ($438<<24>>24)==(0);
                   $440 = HEAP32[$409>>2]|0;
                   $441 = $437&255;
                   $442 = $441 >>> 1;
                   $443 = $439 ? $442 : $440;
                   $444 = ($443|0)==(0);
                   if (!($444)) {
                    __THREW__ = 0;
                    (invoke_iii(392,($tmp|0),(17053|0))|0);
                    $445 = __THREW__; __THREW__ = 0;
                    $446 = $445&1;
                    if ($446) {
                     label = 146;
                     break L69;
                    }
                   }
                   $451 = HEAP32[$db>>2]|0;
                   $452 = (($451) + (($k$0121*24)|0)|0);
                   __THREW__ = 0;
                   invoke_vii(396,($4|0),($452|0));
                   $453 = __THREW__; __THREW__ = 0;
                   $454 = $453&1;
                   if ($454) {
                    label = 146;
                    break L69;
                   }
                   $455 = HEAP8[$4>>0]|0;
                   $456 = $455 & 1;
                   $457 = ($456<<24>>24)==(0);
                   $458 = HEAP32[$410>>2]|0;
                   $459 = $457 ? $411 : $458;
                   $460 = HEAP32[$412>>2]|0;
                   $461 = $455&255;
                   $462 = $461 >>> 1;
                   $463 = $457 ? $462 : $460;
                   __THREW__ = 0;
                   (invoke_iiii(387,($tmp|0),($459|0),($463|0))|0);
                   $464 = __THREW__; __THREW__ = 0;
                   $465 = $464&1;
                   if ($465) {
                    label = 152;
                    break L69;
                   }
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
                   $466 = (($k$0121) + 1)|0;
                   $467 = ($466>>>0)<($$lcssa156>>>0);
                   if ($467) {
                    $k$0121 = $466;
                   } else {
                    break;
                   }
                  }
                 }
                 $436 = ($$lcssa150>>>0)<($$lcssa156>>>0);
                 if ($436) {
                  $k2$0122 = $$lcssa150;
                  while(1) {
                   $470 = HEAP32[$263>>2]|0;
                   $471 = ((($470)) + -24|0);
                   $473 = $470;
                   while(1) {
                    $472 = ((($473)) + -24|0);
                    HEAP32[$263>>2] = $472;
                    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($472);
                    $$pre$i = HEAP32[$263>>2]|0;
                    $474 = ($$pre$i|0)==($471|0);
                    if ($474) {
                     break;
                    } else {
                     $473 = $$pre$i;
                    }
                   }
                   $475 = (($k2$0122) + 1)|0;
                   $476 = ($475>>>0)<($$lcssa156>>>0);
                   if ($476) {
                    $k2$0122 = $475;
                   } else {
                    break;
                   }
                  }
                 }
                 $477 = HEAP8[$tmp>>0]|0;
                 $478 = $477 & 1;
                 $479 = ($478<<24>>24)==(0);
                 $480 = HEAP32[$409>>2]|0;
                 $481 = $477&255;
                 $482 = $481 >>> 1;
                 $483 = $479 ? $482 : $480;
                 $484 = ($483|0)==(0);
                 if ($484) {
                  $first_arg$3$off0$ph = $first_arg$0$off0$ph;
                 } else {
                  $485 = HEAP32[$db>>2]|0;
                  $486 = HEAP32[$263>>2]|0;
                  $487 = ($485|0)==($486|0);
                  if ($487) {
                   label = 158;
                   break;
                  }
                  if ($first_arg$0$off0$ph) {
                   $492 = $486;$494 = $477;$501 = $480;
                  } else {
                   $488 = ((($486)) + -24|0);
                   __THREW__ = 0;
                   (invoke_iii(392,($488|0),(17053|0))|0);
                   $489 = __THREW__; __THREW__ = 0;
                   $490 = $489&1;
                   if ($490) {
                    label = 147;
                    break;
                   }
                   $$pre88 = HEAP32[$263>>2]|0;
                   $$pre89 = HEAP8[$tmp>>0]|0;
                   $$pre90 = HEAP32[$409>>2]|0;
                   $492 = $$pre88;$494 = $$pre89;$501 = $$pre90;
                  }
                  $491 = ((($492)) + -24|0);
                  $493 = $494 & 1;
                  $495 = ($493<<24>>24)==(0);
                  $496 = HEAP32[$413>>2]|0;
                  $497 = $495 ? $414 : $496;
                  $498 = $494&255;
                  $499 = $498 >>> 1;
                  $500 = $495 ? $499 : $501;
                  __THREW__ = 0;
                  (invoke_iiii(387,($491|0),($497|0),($500|0))|0);
                  $502 = __THREW__; __THREW__ = 0;
                  $503 = $502&1;
                  if ($503) {
                   label = 147;
                   break;
                  } else {
                   $first_arg$3$off0$ph = 0;
                  }
                 }
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp);
                 $first_arg$0$off0$ph = $first_arg$3$off0$ph;$t$1$ph = $$lcssa151;
                }
                if ((label|0) == 98) {
                 $276 = ___cxa_find_matching_catch()|0;
                 $277 = tempRet0;
                 $lpad$phi72$index = $276;$lpad$phi72$index7 = $277;
                 label = 100;
                 break L61;
                }
                else if ((label|0) == 146) {
                 $447 = ___cxa_find_matching_catch()|0;
                 $448 = tempRet0;
                 $lpad$phi$index = $447;$lpad$phi$index12 = $448;
                 label = 148;
                }
                else if ((label|0) == 147) {
                 $449 = ___cxa_find_matching_catch()|0;
                 $450 = tempRet0;
                 $lpad$phi$index = $449;$lpad$phi$index12 = $450;
                 label = 148;
                }
                else if ((label|0) == 152) {
                 $468 = ___cxa_find_matching_catch()|0;
                 $469 = tempRet0;
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
                 $$012 = $469;$$06 = $468;
                }
                else if ((label|0) == 158) {
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp);
                 break L12;
                }
                if ((label|0) == 148) {
                 $$012 = $lpad$phi$index12;$$06 = $lpad$phi$index;
                }
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp);
                $$113 = $$012;$$17 = $$06;
                break L61;
               }
              } while(0);
              $504 = ($505|0)==($506|0);
              if ($504) {
               break L12;
              }
              $507 = ((($506)) + -24|0);
              __THREW__ = 0;
              invoke_vii(398,($507|0),41);
              $508 = __THREW__; __THREW__ = 0;
              $509 = $508&1;
              if ($509) {
               label = 99;
              } else {
               $510 = $253 & 1;
               $511 = ($510|0)==(0);
               if (!($511)) {
                $512 = HEAP32[$263>>2]|0;
                $513 = ((($512)) + -24|0);
                __THREW__ = 0;
                (invoke_iii(392,($513|0),(17006|0))|0);
                $514 = __THREW__; __THREW__ = 0;
                $515 = $514&1;
                if ($515) {
                 label = 99;
                 break;
                }
               }
               $516 = $253 & 2;
               $517 = ($516|0)==(0);
               if (!($517)) {
                $518 = HEAP32[$263>>2]|0;
                $519 = ((($518)) + -24|0);
                __THREW__ = 0;
                (invoke_iii(392,($519|0),(17013|0))|0);
                $520 = __THREW__; __THREW__ = 0;
                $521 = $520&1;
                if ($521) {
                 label = 99;
                 break;
                }
               }
               $522 = $253 & 4;
               $523 = ($522|0)==(0);
               if (!($523)) {
                $524 = HEAP32[$263>>2]|0;
                $525 = ((($524)) + -24|0);
                __THREW__ = 0;
                (invoke_iii(392,($525|0),(17023|0))|0);
                $526 = __THREW__; __THREW__ = 0;
                $527 = $526&1;
                if ($527) {
                 label = 99;
                 break;
                }
               }
               switch ($255|0) {
               case 1:  {
                $528 = HEAP32[$263>>2]|0;
                $529 = ((($528)) + -24|0);
                __THREW__ = 0;
                (invoke_iii(392,($529|0),(17056|0))|0);
                $530 = __THREW__; __THREW__ = 0;
                $531 = $530&1;
                if ($531) {
                 label = 99;
                 break L61;
                }
                break;
               }
               case 2:  {
                $532 = HEAP32[$263>>2]|0;
                $533 = ((($532)) + -24|0);
                __THREW__ = 0;
                (invoke_iii(392,($533|0),(17059|0))|0);
                $534 = __THREW__; __THREW__ = 0;
                $535 = $534&1;
                if ($535) {
                 label = 99;
                 break L61;
                }
                break;
               }
               default: {
               }
               }
               $536 = HEAP32[$263>>2]|0;
               $537 = ((($536)) + -24|0);
               $538 = HEAP8[$ret2>>0]|0;
               $539 = $538 & 1;
               $540 = ($539<<24>>24)==(0);
               $541 = ((($ret2)) + 8|0);
               $542 = HEAP32[$541>>2]|0;
               $543 = ((($ret2)) + 1|0);
               $544 = $540 ? $543 : $542;
               $545 = ((($ret2)) + 4|0);
               $546 = HEAP32[$545>>2]|0;
               $547 = $538&255;
               $548 = $547 >>> 1;
               $549 = $540 ? $548 : $546;
               __THREW__ = 0;
               (invoke_iiii(387,($537|0),($544|0),($549|0))|0);
               $550 = __THREW__; __THREW__ = 0;
               $551 = $550&1;
               if ($551) {
                label = 99;
                break;
               }
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ret2);
               HEAP8[$9>>0] = $259;
               $$24$ph = $t$2;
               label = 180;
               break L6;
              }
             }
            }
           } while(0);
           if ((label|0) == 99) {
            $278 = ___cxa_find_matching_catch()|0;
            $279 = tempRet0;
            $lpad$phi72$index = $278;$lpad$phi72$index7 = $279;
            label = 100;
           }
           if ((label|0) == 100) {
            $$113 = $lpad$phi72$index7;$$17 = $lpad$phi72$index;
           }
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ret2);
           HEAP8[$9>>0] = $259;
           $$214 = $$113;$$28 = $$17;
           break L6;
          }
         }
        } while(0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ret2);
        HEAP8[$9>>0] = $10;
        HEAP32[$6>>2] = $7;
        $$7 = $first;
        break L1;
       }
      }
     }
    }
    }
   } while(0);
   if ((label|0) == 87) {
    $247 = ___cxa_find_matching_catch()|0;
    $248 = tempRet0;
    $eh$lpad$body$index2Z2D = $248;$eh$lpad$body$indexZ2D = $247;
    label = 88;
   }
   else if ((label|0) == 180) {
    HEAP8[$9>>0] = $10;
    HEAP32[$6>>2] = $7;
    $$7 = $$24$ph;
    break;
   }
   if ((label|0) == 88) {
    $$214 = $eh$lpad$body$index2Z2D;$$28 = $eh$lpad$body$indexZ2D;
   }
   HEAP8[$9>>0] = $10;
   HEAP32[$6>>2] = $7;
   ___resumeException($$28|0);
   // unreachable;
  }
 } while(0);
 STACKTOP = sp;return ($$7|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($this,$__pos,$__s) {
 $this = $this|0;
 $__pos = $__pos|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen($__s)|0);
 $1 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($this,$__pos,$__s,$0)|0);
 return ($1|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen($__s)|0);
 $1 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($this,$__s,$0)|0);
 return ($1|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$ = 0, $$$$i$i$i = 0, $$$$i$i$i$i = 0, $$$$i$i$i$i162 = 0, $$$$i$i$i$i189 = 0, $$$$i$i$i100 = 0, $$$$i$i$i118 = 0, $$$$i$i$i13$i = 0, $$$$i$i$i22$i = 0, $$$i$i$i = 0, $$$i$i$i$i = 0, $$$i$i$i$i161 = 0, $$$i$i$i$i188 = 0, $$$i$i$i117 = 0, $$$i$i$i12$i = 0, $$$i$i$i21$i = 0, $$$i$i$i99 = 0, $$0 = 0, $$0$i = 0, $$0$i$i = 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i105 = 0, $$0$i$i$i113 = 0, $$0$i$i$i123 = 0, $$0$i$i$i131 = 0, $$0$i$i$i136 = 0, $$0$i$i$i148 = 0, $$0$i$i$i153 = 0, $$0$i$i$i17 = 0, $$0$i$i$i181 = 0, $$0$i$i$i191509 = 0, $$0$i$i$i22 = 0, $$0$i$i$i27 = 0, $$0$i$i$i29 = 0, $$0$i$i$i31 = 0, $$0$i$i$i38 = 0, $$0$i$i$i43 = 0, $$0$i$i$i51 = 0, $$0$i$i$i56 = 0;
 var $$0$i$i$i61 = 0, $$0$i$i$i66 = 0, $$0$i$i$i71 = 0, $$0$i$i$i76 = 0, $$0$i$i$i81 = 0, $$0$i$i$i87 = 0, $$0$i$i$i95 = 0, $$01$i$i = 0, $$01$i198 = 0, $$02 = 0, $$02$i = 0, $$03 = 0, $$03$i$i = 0, $$04$i = 0, $$04$i232 = 0, $$05$i = 0, $$07$i = 0, $$08$i = 0, $$1$i = 0, $$1$i$i = 0;
 var $$1$i199 = 0, $$1$i263 = 0, $$10 = 0, $$1013 = 0, $$12$i = 0, $$12$i$i = 0, $$13$i = 0, $$13$i259$ph = 0, $$14$i$i = 0, $$15$i = 0, $$18$i = 0, $$2 = 0, $$2$i = 0, $$2$i$i = 0, $$23$i = 0, $$25 = 0, $$26$i = 0, $$29$i = 0, $$3$i = 0, $$3$i234 = 0;
 var $$310$i = 0, $$35$i = 0, $$4 = 0, $$4$i = 0, $$4$i222 = 0, $$4$i258 = 0, $$411$i = 0, $$45$i = 0, $$46$i = 0, $$47 = 0, $$5 = 0, $$5$i = 0, $$5$i223 = 0, $$5$i261 = 0, $$512$i = 0, $$56$i = 0, $$57$i = 0, $$58 = 0, $$6 = 0, $$6$i = 0;
 var $$6$i224 = 0, $$6$i264 = 0, $$613$i = 0, $$67$i = 0, $$68$i = 0, $$69 = 0, $$7 = 0, $$710 = 0, $$8 = 0, $$811 = 0, $$9 = 0, $$912 = 0, $$in = 0, $$lcssa = 0, $$lcssa667 = 0, $$lcssa672 = 0, $$lcssa674 = 0, $$lcssa678 = 0, $$lcssa680 = 0, $$lcssa682 = 0;
 var $$lcssa686 = 0, $$lcssa688 = 0, $$lcssa690 = 0, $$lcssa694 = 0, $$lcssa696 = 0, $$lcssa698 = 0, $$lcssa702 = 0, $$lcssa704 = 0, $$lcssa706 = 0, $$lcssa710 = 0, $$lcssa712 = 0, $$off = 0, $$off271 = 0, $$ph390 = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i$i$i$i = 0, $$pre$i$i$i$i203 = 0, $$pre$i$i$i21$i = 0, $$pre$i$i$i36$i = 0;
 var $$pre$i$i$i52$i = 0, $$pre$i$i$i71$i = 0, $$pre$i$i183 = 0, $$pre$i$i200 = 0, $$pre$i$i256 = 0, $$pre$i143 = 0, $$pre$i157 = 0, $$pre$i165 = 0, $$pre$i36 = 0, $$pre$i7$i = 0, $$sum$i = 0, $$sum$i$i = 0, $$sum1$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0;
 var $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0;
 var $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0;
 var $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0;
 var $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0;
 var $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0;
 var $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0;
 var $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0;
 var $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0;
 var $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0;
 var $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0;
 var $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0, $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0;
 var $1201 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0;
 var $122 = 0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0, $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0;
 var $1238 = 0, $1239 = 0, $124 = 0, $1240 = 0, $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1249 = 0, $125 = 0, $1250 = 0, $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0;
 var $1256 = 0, $1257 = 0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0, $1266 = 0, $1267 = 0, $1268 = 0, $1269 = 0, $127 = 0, $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0;
 var $1274 = 0, $1275 = 0, $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0, $1284 = 0, $1285 = 0, $1286 = 0, $1287 = 0, $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0;
 var $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0;
 var $131 = 0, $1310 = 0, $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0, $132 = 0, $1320 = 0, $1321 = 0, $1322 = 0, $1323 = 0, $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0;
 var $1328 = 0, $1329 = 0, $133 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1333 = 0, $1334 = 0, $1335 = 0, $1336 = 0, $1337 = 0, $1338 = 0, $1339 = 0, $134 = 0, $1340 = 0, $1341 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0;
 var $1346 = 0, $1347 = 0, $1348 = 0, $1349 = 0, $135 = 0, $1350 = 0, $1351 = 0, $1352 = 0, $1353 = 0, $1354 = 0, $1355 = 0, $1356 = 0, $1357 = 0, $1358 = 0, $1359 = 0, $136 = 0, $1360 = 0, $1361 = 0, $1362 = 0, $1363 = 0;
 var $1364 = 0, $1365 = 0, $1366 = 0, $1367 = 0, $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1371 = 0, $1372 = 0, $1373 = 0, $1374 = 0, $1375 = 0, $1376 = 0, $1377 = 0, $1378 = 0, $1379 = 0, $138 = 0, $1380 = 0, $1381 = 0;
 var $1382 = 0, $1383 = 0, $1384 = 0, $1385 = 0, $1386 = 0, $1387 = 0, $1388 = 0, $1389 = 0, $139 = 0, $1390 = 0, $1391 = 0, $1392 = 0, $1393 = 0, $1394 = 0, $1395 = 0, $1396 = 0, $1397 = 0, $1398 = 0, $1399 = 0, $14 = 0;
 var $140 = 0, $1400 = 0, $1401 = 0, $1402 = 0, $1403 = 0, $1404 = 0, $1405 = 0, $1406 = 0, $1407 = 0, $1408 = 0, $1409 = 0, $141 = 0, $1410 = 0, $1411 = 0, $1412 = 0, $1413 = 0, $1414 = 0, $1415 = 0, $1416 = 0, $1417 = 0;
 var $1418 = 0, $1419 = 0, $142 = 0, $1420 = 0, $1421 = 0, $1422 = 0, $1423 = 0, $1424 = 0, $1425 = 0, $1426 = 0, $1427 = 0, $1428 = 0, $1429 = 0, $143 = 0, $1430 = 0, $1431 = 0, $1432 = 0, $1433 = 0, $1434 = 0, $1435 = 0;
 var $1436 = 0, $1437 = 0, $1438 = 0, $1439 = 0, $144 = 0, $1440 = 0, $1441 = 0, $1442 = 0, $1443 = 0, $1444 = 0, $1445 = 0, $1446 = 0, $1447 = 0, $1448 = 0, $1449 = 0, $145 = 0, $1450 = 0, $1451 = 0, $1452 = 0, $1453 = 0;
 var $1454 = 0, $1455 = 0, $1456 = 0, $1457 = 0, $1458 = 0, $1459 = 0, $146 = 0, $1460 = 0, $1461 = 0, $1462 = 0, $1463 = 0, $1464 = 0, $1465 = 0, $1466 = 0, $1467 = 0, $1468 = 0, $1469 = 0, $147 = 0, $1470 = 0, $1471 = 0;
 var $1472 = 0, $1473 = 0, $1474 = 0, $1475 = 0, $1476 = 0, $1477 = 0, $1478 = 0, $1479 = 0, $148 = 0, $1480 = 0, $1481 = 0, $1482 = 0, $1483 = 0, $1484 = 0, $1485 = 0, $1486 = 0, $1487 = 0, $1488 = 0, $1489 = 0, $149 = 0;
 var $1490 = 0, $1491 = 0, $1492 = 0, $1493 = 0, $1494 = 0, $1495 = 0, $1496 = 0, $1497 = 0, $1498 = 0, $1499 = 0, $15 = 0, $150 = 0, $1500 = 0, $1501 = 0, $1502 = 0, $1503 = 0, $1504 = 0, $1505 = 0, $1506 = 0, $1507 = 0;
 var $1508 = 0, $1509 = 0, $151 = 0, $1510 = 0, $1511 = 0, $1512 = 0, $1513 = 0, $1514 = 0, $1515 = 0, $1516 = 0, $1517 = 0, $1518 = 0, $1519 = 0, $152 = 0, $1520 = 0, $1521 = 0, $1522 = 0, $1523 = 0, $1524 = 0, $1525 = 0;
 var $1526 = 0, $1527 = 0, $1528 = 0, $1529 = 0, $153 = 0, $1530 = 0, $1531 = 0, $1532 = 0, $1533 = 0, $1534 = 0, $1535 = 0, $1536 = 0, $1537 = 0, $1538 = 0, $1539 = 0, $154 = 0, $1540 = 0, $1541 = 0, $1542 = 0, $1543 = 0;
 var $1544 = 0, $1545 = 0, $1546 = 0, $1547 = 0, $1548 = 0, $1549 = 0, $155 = 0, $1550 = 0, $1551 = 0, $1552 = 0, $1553 = 0, $1554 = 0, $1555 = 0, $1556 = 0, $1557 = 0, $1558 = 0, $1559 = 0, $156 = 0, $1560 = 0, $1561 = 0;
 var $1562 = 0, $1563 = 0, $1564 = 0, $1565 = 0, $1566 = 0, $1567 = 0, $1568 = 0, $1569 = 0, $157 = 0, $1570 = 0, $1571 = 0, $1572 = 0, $1573 = 0, $1574 = 0, $1575 = 0, $1576 = 0, $1577 = 0, $1578 = 0, $1579 = 0, $158 = 0;
 var $1580 = 0, $1581 = 0, $1582 = 0, $1583 = 0, $1584 = 0, $1585 = 0, $1586 = 0, $1587 = 0, $1588 = 0, $1589 = 0, $159 = 0, $1590 = 0, $1591 = 0, $1592 = 0, $1593 = 0, $1594 = 0, $1595 = 0, $1596 = 0, $1597 = 0, $1598 = 0;
 var $1599 = 0, $16 = 0, $160 = 0, $1600 = 0, $1601 = 0, $1602 = 0, $1603 = 0, $1604 = 0, $1605 = 0, $1606 = 0, $1607 = 0, $1608 = 0, $1609 = 0, $161 = 0, $1610 = 0, $1611 = 0, $1612 = 0, $1613 = 0, $1614 = 0, $1615 = 0;
 var $1616 = 0, $1617 = 0, $1618 = 0, $1619 = 0, $162 = 0, $1620 = 0, $1621 = 0, $1622 = 0, $1623 = 0, $1624 = 0, $1625 = 0, $1626 = 0, $1627 = 0, $1628 = 0, $1629 = 0, $163 = 0, $1630 = 0, $1631 = 0, $1632 = 0, $1633 = 0;
 var $1634 = 0, $1635 = 0, $1636 = 0, $1637 = 0, $1638 = 0, $1639 = 0, $164 = 0, $1640 = 0, $1641 = 0, $1642 = 0, $1643 = 0, $1644 = 0, $1645 = 0, $1646 = 0, $1647 = 0, $1648 = 0, $1649 = 0, $165 = 0, $1650 = 0, $1651 = 0;
 var $1652 = 0, $1653 = 0, $1654 = 0, $1655 = 0, $1656 = 0, $1657 = 0, $1658 = 0, $1659 = 0, $166 = 0, $1660 = 0, $1661 = 0, $1662 = 0, $1663 = 0, $1664 = 0, $1665 = 0, $1666 = 0, $1667 = 0, $1668 = 0, $1669 = 0, $167 = 0;
 var $1670 = 0, $1671 = 0, $1672 = 0, $1673 = 0, $1674 = 0, $1675 = 0, $1676 = 0, $1677 = 0, $1678 = 0, $1679 = 0, $168 = 0, $1680 = 0, $1681 = 0, $1682 = 0, $1683 = 0, $1684 = 0, $1685 = 0, $1686 = 0, $1687 = 0, $1688 = 0;
 var $1689 = 0, $169 = 0, $1690 = 0, $1691 = 0, $1692 = 0, $1693 = 0, $1694 = 0, $1695 = 0, $1696 = 0, $1697 = 0, $1698 = 0, $1699 = 0, $17 = 0, $170 = 0, $1700 = 0, $1701 = 0, $1702 = 0, $1703 = 0, $1704 = 0, $1705 = 0;
 var $1706 = 0, $1707 = 0, $1708 = 0, $1709 = 0, $171 = 0, $1710 = 0, $1711 = 0, $1712 = 0, $1713 = 0, $1714 = 0, $1715 = 0, $1716 = 0, $1717 = 0, $1718 = 0, $1719 = 0, $172 = 0, $1720 = 0, $1721 = 0, $1722 = 0, $1723 = 0;
 var $1724 = 0, $1725 = 0, $1726 = 0, $1727 = 0, $1728 = 0, $1729 = 0, $173 = 0, $1730 = 0, $1731 = 0, $1732 = 0, $1733 = 0, $1734 = 0, $1735 = 0, $1736 = 0, $1737 = 0, $1738 = 0, $1739 = 0, $174 = 0, $1740 = 0, $1741 = 0;
 var $1742 = 0, $1743 = 0, $1744 = 0, $1745 = 0, $1746 = 0, $1747 = 0, $1748 = 0, $1749 = 0, $175 = 0, $1750 = 0, $1751 = 0, $1752 = 0, $1753 = 0, $1754 = 0, $1755 = 0, $1756 = 0, $1757 = 0, $1758 = 0, $1759 = 0, $176 = 0;
 var $1760 = 0, $1761 = 0, $1762 = 0, $1763 = 0, $1764 = 0, $1765 = 0, $1766 = 0, $1767 = 0, $1768 = 0, $1769 = 0, $177 = 0, $1770 = 0, $1771 = 0, $1772 = 0, $1773 = 0, $1774 = 0, $1775 = 0, $1776 = 0, $1777 = 0, $1778 = 0;
 var $1779 = 0, $178 = 0, $1780 = 0, $1781 = 0, $1782 = 0, $1783 = 0, $1784 = 0, $1785 = 0, $1786 = 0, $1787 = 0, $1788 = 0, $1789 = 0, $179 = 0, $1790 = 0, $1791 = 0, $1792 = 0, $1793 = 0, $1794 = 0, $1795 = 0, $1796 = 0;
 var $1797 = 0, $1798 = 0, $1799 = 0, $18 = 0, $180 = 0, $1800 = 0, $1801 = 0, $1802 = 0, $1803 = 0, $1804 = 0, $1805 = 0, $1806 = 0, $1807 = 0, $1808 = 0, $1809 = 0, $181 = 0, $1810 = 0, $1811 = 0, $1812 = 0, $1813 = 0;
 var $1814 = 0, $1815 = 0, $1816 = 0, $1817 = 0, $1818 = 0, $1819 = 0, $182 = 0, $1820 = 0, $1821 = 0, $1822 = 0, $1823 = 0, $1824 = 0, $1825 = 0, $1826 = 0, $1827 = 0, $1828 = 0, $1829 = 0, $183 = 0, $1830 = 0, $1831 = 0;
 var $1832 = 0, $1833 = 0, $1834 = 0, $1835 = 0, $1836 = 0, $1837 = 0, $1838 = 0, $1839 = 0, $184 = 0, $1840 = 0, $1841 = 0, $1842 = 0, $1843 = 0, $1844 = 0, $1845 = 0, $1846 = 0, $1847 = 0, $1848 = 0, $1849 = 0, $185 = 0;
 var $1850 = 0, $1851 = 0, $1852 = 0, $1853 = 0, $1854 = 0, $1855 = 0, $1856 = 0, $1857 = 0, $1858 = 0, $1859 = 0, $186 = 0, $1860 = 0, $1861 = 0, $1862 = 0, $1863 = 0, $1864 = 0, $1865 = 0, $1866 = 0, $1867 = 0, $1868 = 0;
 var $1869 = 0, $187 = 0, $1870 = 0, $1871 = 0, $1872 = 0, $1873 = 0, $1874 = 0, $1875 = 0, $1876 = 0, $1877 = 0, $1878 = 0, $1879 = 0, $188 = 0, $1880 = 0, $1881 = 0, $1882 = 0, $1883 = 0, $1884 = 0, $1885 = 0, $1886 = 0;
 var $1887 = 0, $1888 = 0, $1889 = 0, $189 = 0, $1890 = 0, $1891 = 0, $1892 = 0, $1893 = 0, $1894 = 0, $1895 = 0, $1896 = 0, $1897 = 0, $1898 = 0, $1899 = 0, $19 = 0, $190 = 0, $1900 = 0, $1901 = 0, $1902 = 0, $1903 = 0;
 var $1904 = 0, $1905 = 0, $1906 = 0, $1907 = 0, $1908 = 0, $1909 = 0, $191 = 0, $1910 = 0, $1911 = 0, $1912 = 0, $1913 = 0, $1914 = 0, $1915 = 0, $1916 = 0, $1917 = 0, $1918 = 0, $1919 = 0, $192 = 0, $1920 = 0, $1921 = 0;
 var $1922 = 0, $1923 = 0, $1924 = 0, $1925 = 0, $1926 = 0, $1927 = 0, $1928 = 0, $1929 = 0, $193 = 0, $1930 = 0, $1931 = 0, $1932 = 0, $1933 = 0, $1934 = 0, $1935 = 0, $1936 = 0, $1937 = 0, $1938 = 0, $1939 = 0, $194 = 0;
 var $1940 = 0, $1941 = 0, $1942 = 0, $1943 = 0, $1944 = 0, $1945 = 0, $1946 = 0, $1947 = 0, $1948 = 0, $1949 = 0, $195 = 0, $1950 = 0, $1951 = 0, $1952 = 0, $1953 = 0, $1954 = 0, $1955 = 0, $1956 = 0, $1957 = 0, $1958 = 0;
 var $1959 = 0, $196 = 0, $1960 = 0, $1961 = 0, $1962 = 0, $1963 = 0, $1964 = 0, $1965 = 0, $1966 = 0, $1967 = 0, $1968 = 0, $1969 = 0, $197 = 0, $1970 = 0, $1971 = 0, $1972 = 0, $1973 = 0, $1974 = 0, $1975 = 0, $1976 = 0;
 var $1977 = 0, $1978 = 0, $1979 = 0, $198 = 0, $1980 = 0, $1981 = 0, $1982 = 0, $1983 = 0, $1984 = 0, $1985 = 0, $1986 = 0, $1987 = 0, $1988 = 0, $1989 = 0, $199 = 0, $1990 = 0, $1991 = 0, $1992 = 0, $1993 = 0, $1994 = 0;
 var $1995 = 0, $1996 = 0, $1997 = 0, $1998 = 0, $1999 = 0, $2 = 0, $20 = 0, $200 = 0, $2000 = 0, $2001 = 0, $2002 = 0, $2003 = 0, $2004 = 0, $2005 = 0, $2006 = 0, $2007 = 0, $2008 = 0, $2009 = 0, $201 = 0, $2010 = 0;
 var $2011 = 0, $2012 = 0, $2013 = 0, $2014 = 0, $2015 = 0, $2016 = 0, $2017 = 0, $2018 = 0, $2019 = 0, $202 = 0, $2020 = 0, $2021 = 0, $2022 = 0, $2023 = 0, $2024 = 0, $2025 = 0, $2026 = 0, $2027 = 0, $2028 = 0, $2029 = 0;
 var $203 = 0, $2030 = 0, $2031 = 0, $2032 = 0, $2033 = 0, $2034 = 0, $2035 = 0, $2036 = 0, $2037 = 0, $2038 = 0, $2039 = 0, $204 = 0, $2040 = 0, $2041 = 0, $2042 = 0, $2043 = 0, $2044 = 0, $2045 = 0, $2046 = 0, $2047 = 0;
 var $2048 = 0, $2049 = 0, $205 = 0, $2050 = 0, $2051 = 0, $2052 = 0, $2053 = 0, $2054 = 0, $2055 = 0, $2056 = 0, $2057 = 0, $2058 = 0, $2059 = 0, $206 = 0, $2060 = 0, $2061 = 0, $2062 = 0, $2063 = 0, $2064 = 0, $2065 = 0;
 var $2066 = 0, $2067 = 0, $2068 = 0, $2069 = 0, $207 = 0, $2070 = 0, $2071 = 0, $2072 = 0, $2073 = 0, $2074 = 0, $2075 = 0, $2076 = 0, $2077 = 0, $2078 = 0, $2079 = 0, $208 = 0, $2080 = 0, $2081 = 0, $2082 = 0, $2083 = 0;
 var $2084 = 0, $2085 = 0, $2086 = 0, $2087 = 0, $2088 = 0, $2089 = 0, $209 = 0, $2090 = 0, $2091 = 0, $2092 = 0, $2093 = 0, $2094 = 0, $2095 = 0, $2096 = 0, $2097 = 0, $2098 = 0, $2099 = 0, $21 = 0, $210 = 0, $2100 = 0;
 var $2101 = 0, $2102 = 0, $2103 = 0, $2104 = 0, $2105 = 0, $2106 = 0, $2107 = 0, $2108 = 0, $2109 = 0, $211 = 0, $2110 = 0, $2111 = 0, $2112 = 0, $2113 = 0, $2114 = 0, $2115 = 0, $2116 = 0, $2117 = 0, $2118 = 0, $2119 = 0;
 var $212 = 0, $2120 = 0, $2121 = 0, $2122 = 0, $2123 = 0, $2124 = 0, $2125 = 0, $2126 = 0, $2127 = 0, $2128 = 0, $2129 = 0, $213 = 0, $2130 = 0, $2131 = 0, $2132 = 0, $2133 = 0, $2134 = 0, $2135 = 0, $2136 = 0, $2137 = 0;
 var $2138 = 0, $2139 = 0, $214 = 0, $2140 = 0, $2141 = 0, $2142 = 0, $2143 = 0, $2144 = 0, $2145 = 0, $2146 = 0, $2147 = 0, $2148 = 0, $2149 = 0, $215 = 0, $2150 = 0, $2151 = 0, $2152 = 0, $2153 = 0, $2154 = 0, $2155 = 0;
 var $2156 = 0, $2157 = 0, $2158 = 0, $2159 = 0, $216 = 0, $2160 = 0, $2161 = 0, $2162 = 0, $2163 = 0, $2164 = 0, $2165 = 0, $2166 = 0, $2167 = 0, $2168 = 0, $2169 = 0, $217 = 0, $2170 = 0, $2171 = 0, $2172 = 0, $2173 = 0;
 var $2174 = 0, $2175 = 0, $2176 = 0, $2177 = 0, $2178 = 0, $2179 = 0, $218 = 0, $2180 = 0, $2181 = 0, $2182 = 0, $2183 = 0, $2184 = 0, $2185 = 0, $2186 = 0, $2187 = 0, $2188 = 0, $2189 = 0, $219 = 0, $2190 = 0, $2191 = 0;
 var $2192 = 0, $2193 = 0, $2194 = 0, $2195 = 0, $2196 = 0, $2197 = 0, $2198 = 0, $2199 = 0, $22 = 0, $220 = 0, $2200 = 0, $2201 = 0, $2202 = 0, $2203 = 0, $2204 = 0, $2205 = 0, $2206 = 0, $2207 = 0, $2208 = 0, $2209 = 0;
 var $221 = 0, $2210 = 0, $2211 = 0, $2212 = 0, $2213 = 0, $2214 = 0, $2215 = 0, $2216 = 0, $2217 = 0, $2218 = 0, $2219 = 0, $222 = 0, $2220 = 0, $2221 = 0, $2222 = 0, $2223 = 0, $2224 = 0, $2225 = 0, $2226 = 0, $2227 = 0;
 var $2228 = 0, $2229 = 0, $223 = 0, $2230 = 0, $2231 = 0, $2232 = 0, $2233 = 0, $2234 = 0, $2235 = 0, $2236 = 0, $2237 = 0, $2238 = 0, $2239 = 0, $224 = 0, $2240 = 0, $2241 = 0, $2242 = 0, $2243 = 0, $2244 = 0, $2245 = 0;
 var $2246 = 0, $2247 = 0, $2248 = 0, $2249 = 0, $225 = 0, $2250 = 0, $2251 = 0, $2252 = 0, $2253 = 0, $2254 = 0, $2255 = 0, $2256 = 0, $2257 = 0, $2258 = 0, $2259 = 0, $226 = 0, $2260 = 0, $2261 = 0, $2262 = 0, $2263 = 0;
 var $2264 = 0, $2265 = 0, $2266 = 0, $2267 = 0, $2268 = 0, $2269 = 0, $227 = 0, $2270 = 0, $2271 = 0, $2272 = 0, $2273 = 0, $2274 = 0, $2275 = 0, $2276 = 0, $2277 = 0, $2278 = 0, $2279 = 0, $228 = 0, $2280 = 0, $2281 = 0;
 var $2282 = 0, $2283 = 0, $2284 = 0, $2285 = 0, $2286 = 0, $2287 = 0, $2288 = 0, $2289 = 0, $229 = 0, $2290 = 0, $2291 = 0, $2292 = 0, $2293 = 0, $2294 = 0, $2295 = 0, $2296 = 0, $2297 = 0, $2298 = 0, $2299 = 0, $23 = 0;
 var $230 = 0, $2300 = 0, $2301 = 0, $2302 = 0, $2303 = 0, $2304 = 0, $2305 = 0, $2306 = 0, $2307 = 0, $2308 = 0, $2309 = 0, $231 = 0, $2310 = 0, $2311 = 0, $2312 = 0, $2313 = 0, $2314 = 0, $2315 = 0, $2316 = 0, $2317 = 0;
 var $2318 = 0, $2319 = 0, $232 = 0, $2320 = 0, $2321 = 0, $2322 = 0, $2323 = 0, $2324 = 0, $2325 = 0, $2326 = 0, $2327 = 0, $2328 = 0, $2329 = 0, $233 = 0, $2330 = 0, $2331 = 0, $2332 = 0, $2333 = 0, $2334 = 0, $2335 = 0;
 var $2336 = 0, $2337 = 0, $2338 = 0, $2339 = 0, $234 = 0, $2340 = 0, $2341 = 0, $2342 = 0, $2343 = 0, $2344 = 0, $2345 = 0, $2346 = 0, $2347 = 0, $2348 = 0, $2349 = 0, $235 = 0, $2350 = 0, $2351 = 0, $2352 = 0, $2353 = 0;
 var $2354 = 0, $2355 = 0, $2356 = 0, $2357 = 0, $2358 = 0, $2359 = 0, $236 = 0, $2360 = 0, $2361 = 0, $2362 = 0, $2363 = 0, $2364 = 0, $2365 = 0, $2366 = 0, $2367 = 0, $2368 = 0, $2369 = 0, $237 = 0, $2370 = 0, $2371 = 0;
 var $2372 = 0, $2373 = 0, $2374 = 0, $2375 = 0, $2376 = 0, $2377 = 0, $2378 = 0, $2379 = 0, $238 = 0, $2380 = 0, $2381 = 0, $2382 = 0, $2383 = 0, $2384 = 0, $2385 = 0, $2386 = 0, $2387 = 0, $2388 = 0, $2389 = 0, $239 = 0;
 var $2390 = 0, $2391 = 0, $2392 = 0, $2393 = 0, $2394 = 0, $2395 = 0, $2396 = 0, $2397 = 0, $2398 = 0, $2399 = 0, $24 = 0, $240 = 0, $2400 = 0, $2401 = 0, $2402 = 0, $2403 = 0, $2404 = 0, $2405 = 0, $2406 = 0, $2407 = 0;
 var $2408 = 0, $2409 = 0, $241 = 0, $2410 = 0, $2411 = 0, $2412 = 0, $2413 = 0, $2414 = 0, $2415 = 0, $2416 = 0, $2417 = 0, $2418 = 0, $2419 = 0, $242 = 0, $2420 = 0, $2421 = 0, $2422 = 0, $2423 = 0, $2424 = 0, $2425 = 0;
 var $2426 = 0, $2427 = 0, $2428 = 0, $2429 = 0, $243 = 0, $2430 = 0, $2431 = 0, $2432 = 0, $2433 = 0, $2434 = 0, $2435 = 0, $2436 = 0, $2437 = 0, $2438 = 0, $2439 = 0, $244 = 0, $2440 = 0, $2441 = 0, $2442 = 0, $2443 = 0;
 var $2444 = 0, $2445 = 0, $2446 = 0, $2447 = 0, $2448 = 0, $2449 = 0, $245 = 0, $2450 = 0, $2451 = 0, $2452 = 0, $2453 = 0, $2454 = 0, $2455 = 0, $2456 = 0, $2457 = 0, $2458 = 0, $2459 = 0, $246 = 0, $2460 = 0, $2461 = 0;
 var $2462 = 0, $2463 = 0, $2464 = 0, $2465 = 0, $2466 = 0, $2467 = 0, $2468 = 0, $2469 = 0, $247 = 0, $2470 = 0, $2471 = 0, $2472 = 0, $2473 = 0, $2474 = 0, $2475 = 0, $2476 = 0, $2477 = 0, $2478 = 0, $2479 = 0, $248 = 0;
 var $2480 = 0, $2481 = 0, $2482 = 0, $2483 = 0, $2484 = 0, $2485 = 0, $2486 = 0, $2487 = 0, $2488 = 0, $2489 = 0, $249 = 0, $2490 = 0, $2491 = 0, $2492 = 0, $2493 = 0, $2494 = 0, $2495 = 0, $2496 = 0, $2497 = 0, $2498 = 0;
 var $2499 = 0, $25 = 0, $250 = 0, $2500 = 0, $2501 = 0, $2502 = 0, $2503 = 0, $2504 = 0, $2505 = 0, $2506 = 0, $2507 = 0, $2508 = 0, $2509 = 0, $251 = 0, $2510 = 0, $2511 = 0, $2512 = 0, $2513 = 0, $2514 = 0, $2515 = 0;
 var $2516 = 0, $2517 = 0, $2518 = 0, $2519 = 0, $252 = 0, $2520 = 0, $2521 = 0, $2522 = 0, $2523 = 0, $2524 = 0, $2525 = 0, $2526 = 0, $2527 = 0, $2528 = 0, $2529 = 0, $253 = 0, $2530 = 0, $2531 = 0, $2532 = 0, $2533 = 0;
 var $2534 = 0, $2535 = 0, $2536 = 0, $2537 = 0, $2538 = 0, $2539 = 0, $254 = 0, $2540 = 0, $2541 = 0, $2542 = 0, $2543 = 0, $2544 = 0, $2545 = 0, $2546 = 0, $2547 = 0, $2548 = 0, $2549 = 0, $255 = 0, $2550 = 0, $2551 = 0;
 var $2552 = 0, $2553 = 0, $2554 = 0, $2555 = 0, $2556 = 0, $2557 = 0, $2558 = 0, $2559 = 0, $256 = 0, $2560 = 0, $2561 = 0, $2562 = 0, $2563 = 0, $2564 = 0, $2565 = 0, $2566 = 0, $2567 = 0, $2568 = 0, $2569 = 0, $257 = 0;
 var $2570 = 0, $2571 = 0, $2572 = 0, $2573 = 0, $2574 = 0, $2575 = 0, $2576 = 0, $2577 = 0, $2578 = 0, $2579 = 0, $258 = 0, $2580 = 0, $2581 = 0, $2582 = 0, $2583 = 0, $2584 = 0, $2585 = 0, $2586 = 0, $2587 = 0, $2588 = 0;
 var $2589 = 0, $259 = 0, $2590 = 0, $2591 = 0, $2592 = 0, $2593 = 0, $2594 = 0, $2595 = 0, $2596 = 0, $2597 = 0, $2598 = 0, $2599 = 0, $26 = 0, $260 = 0, $2600 = 0, $2601 = 0, $2602 = 0, $2603 = 0, $2604 = 0, $2605 = 0;
 var $2606 = 0, $2607 = 0, $2608 = 0, $2609 = 0, $261 = 0, $2610 = 0, $2611 = 0, $2612 = 0, $2613 = 0, $2614 = 0, $2615 = 0, $2616 = 0, $2617 = 0, $2618 = 0, $2619 = 0, $262 = 0, $2620 = 0, $2621 = 0, $2622 = 0, $2623 = 0;
 var $2624 = 0, $2625 = 0, $2626 = 0, $2627 = 0, $2628 = 0, $2629 = 0, $263 = 0, $2630 = 0, $2631 = 0, $2632 = 0, $2633 = 0, $2634 = 0, $2635 = 0, $2636 = 0, $2637 = 0, $2638 = 0, $2639 = 0, $264 = 0, $2640 = 0, $2641 = 0;
 var $2642 = 0, $2643 = 0, $2644 = 0, $2645 = 0, $2646 = 0, $2647 = 0, $2648 = 0, $2649 = 0, $265 = 0, $2650 = 0, $2651 = 0, $2652 = 0, $2653 = 0, $2654 = 0, $2655 = 0, $2656 = 0, $2657 = 0, $2658 = 0, $2659 = 0, $266 = 0;
 var $2660 = 0, $2661 = 0, $2662 = 0, $2663 = 0, $2664 = 0, $2665 = 0, $2666 = 0, $2667 = 0, $2668 = 0, $2669 = 0, $267 = 0, $2670 = 0, $2671 = 0, $2672 = 0, $2673 = 0, $2674 = 0, $2675 = 0, $2676 = 0, $2677 = 0, $2678 = 0;
 var $2679 = 0, $268 = 0, $2680 = 0, $2681 = 0, $2682 = 0, $2683 = 0, $2684 = 0, $2685 = 0, $2686 = 0, $2687 = 0, $2688 = 0, $2689 = 0, $269 = 0, $2690 = 0, $2691 = 0, $2692 = 0, $2693 = 0, $2694 = 0, $2695 = 0, $2696 = 0;
 var $2697 = 0, $2698 = 0, $2699 = 0, $27 = 0, $270 = 0, $2700 = 0, $2701 = 0, $2702 = 0, $2703 = 0, $2704 = 0, $2705 = 0, $2706 = 0, $2707 = 0, $2708 = 0, $2709 = 0, $271 = 0, $2710 = 0, $2711 = 0, $2712 = 0, $2713 = 0;
 var $2714 = 0, $2715 = 0, $2716 = 0, $2717 = 0, $2718 = 0, $2719 = 0, $272 = 0, $2720 = 0, $2721 = 0, $2722 = 0, $2723 = 0, $2724 = 0, $2725 = 0, $2726 = 0, $2727 = 0, $2728 = 0, $2729 = 0, $273 = 0, $2730 = 0, $2731 = 0;
 var $2732 = 0, $2733 = 0, $2734 = 0, $2735 = 0, $2736 = 0, $2737 = 0, $2738 = 0, $2739 = 0, $274 = 0, $2740 = 0, $2741 = 0, $2742 = 0, $2743 = 0, $2744 = 0, $2745 = 0, $2746 = 0, $2747 = 0, $2748 = 0, $2749 = 0, $275 = 0;
 var $2750 = 0, $2751 = 0, $2752 = 0, $2753 = 0, $2754 = 0, $2755 = 0, $2756 = 0, $2757 = 0, $2758 = 0, $2759 = 0, $276 = 0, $2760 = 0, $2761 = 0, $2762 = 0, $2763 = 0, $2764 = 0, $2765 = 0, $2766 = 0, $2767 = 0, $2768 = 0;
 var $2769 = 0, $277 = 0, $2770 = 0, $2771 = 0, $2772 = 0, $2773 = 0, $2774 = 0, $2775 = 0, $2776 = 0, $2777 = 0, $2778 = 0, $2779 = 0, $278 = 0, $2780 = 0, $2781 = 0, $2782 = 0, $2783 = 0, $2784 = 0, $2785 = 0, $2786 = 0;
 var $2787 = 0, $2788 = 0, $2789 = 0, $279 = 0, $2790 = 0, $2791 = 0, $2792 = 0, $2793 = 0, $2794 = 0, $2795 = 0, $2796 = 0, $2797 = 0, $2798 = 0, $2799 = 0, $28 = 0, $280 = 0, $2800 = 0, $2801 = 0, $2802 = 0, $2803 = 0;
 var $2804 = 0, $2805 = 0, $2806 = 0, $2807 = 0, $2808 = 0, $2809 = 0, $281 = 0, $2810 = 0, $2811 = 0, $2812 = 0, $2813 = 0, $2814 = 0, $2815 = 0, $2816 = 0, $2817 = 0, $2818 = 0, $2819 = 0, $282 = 0, $2820 = 0, $2821 = 0;
 var $2822 = 0, $2823 = 0, $2824 = 0, $2825 = 0, $2826 = 0, $2827 = 0, $2828 = 0, $2829 = 0, $283 = 0, $2830 = 0, $2831 = 0, $2832 = 0, $2833 = 0, $2834 = 0, $2835 = 0, $2836 = 0, $2837 = 0, $2838 = 0, $2839 = 0, $284 = 0;
 var $2840 = 0, $2841 = 0, $2842 = 0, $2843 = 0, $2844 = 0, $2845 = 0, $2846 = 0, $2847 = 0, $2848 = 0, $2849 = 0, $285 = 0, $2850 = 0, $2851 = 0, $2852 = 0, $2853 = 0, $2854 = 0, $2855 = 0, $2856 = 0, $2857 = 0, $2858 = 0;
 var $2859 = 0, $286 = 0, $2860 = 0, $2861 = 0, $2862 = 0, $2863 = 0, $2864 = 0, $2865 = 0, $2866 = 0, $2867 = 0, $2868 = 0, $2869 = 0, $287 = 0, $2870 = 0, $2871 = 0, $2872 = 0, $2873 = 0, $2874 = 0, $2875 = 0, $2876 = 0;
 var $2877 = 0, $2878 = 0, $2879 = 0, $288 = 0, $2880 = 0, $2881 = 0, $2882 = 0, $2883 = 0, $2884 = 0, $2885 = 0, $2886 = 0, $2887 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0;
 var $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0;
 var $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0;
 var $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0;
 var $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0;
 var $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0;
 var $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0;
 var $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0;
 var $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0;
 var $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0;
 var $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0;
 var $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0;
 var $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0;
 var $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0;
 var $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0;
 var $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0;
 var $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0;
 var $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0;
 var $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0;
 var $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0;
 var $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0;
 var $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0;
 var $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0;
 var $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0;
 var $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0;
 var $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0;
 var $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0;
 var $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0;
 var $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0;
 var $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0;
 var $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0;
 var $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0;
 var $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0;
 var $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0;
 var $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0;
 var $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0;
 var $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0;
 var $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0;
 var $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0;
 var $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0;
 var $999 = 0, $__p$0$i$i$i508 = 0, $__p$0$ph$i$i$i = 0, $__v$i$i = 0, $__v$i$i$i = 0, $__v$i$i103 = 0, $__v$i$i112 = 0, $__v$i$i121 = 0, $__v$i$i130 = 0, $__v$i$i134 = 0, $__v$i$i147 = 0, $__v$i$i152 = 0, $__v$i$i16 = 0, $__v$i$i180 = 0, $__v$i$i21 = 0, $__v$i$i26 = 0, $__v$i$i28 = 0, $__v$i$i30 = 0, $__v$i$i37 = 0, $__v$i$i41 = 0;
 var $__v$i$i50 = 0, $__v$i$i55 = 0, $__v$i$i60 = 0, $__v$i$i65 = 0, $__v$i$i70 = 0, $__v$i$i75 = 0, $__v$i$i80 = 0, $__v$i$i85 = 0, $__v$i$i94 = 0, $args = 0, $class_type$i = 0, $cv = 0, $eh$lpad$body$i$i$index34Z2D = 0, $eh$lpad$body$i$i$indexZ2D = 0, $eh$lpad$body$i$i108$index19Z2D = 0, $eh$lpad$body$i$i108$indexZ2D = 0, $eh$lpad$body$i$i126$index24Z2D = 0, $eh$lpad$body$i$i126$indexZ2D = 0, $eh$lpad$body$i$i139$index29Z2D = 0, $eh$lpad$body$i$i139$indexZ2D = 0;
 var $eh$lpad$body$i$i46$index2Z2D = 0, $eh$lpad$body$i$i46$indexZ2D = 0, $eh$lpad$body$i$i90$index14Z2D = 0, $eh$lpad$body$i$i90$indexZ2D = 0, $expr$i = 0, $func$i = 0, $k$0$i515 = 0, $k$0560 = 0, $k11$0540 = 0, $k15$0543 = 0, $k2$0$i516 = 0, $k20$0550 = 0, $k5$0533 = 0, $k8$0536 = 0, $lpad$phi$index = 0, $lpad$phi$index8 = 0, $num1$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i$i = 0;
 var $or$cond$i$i$i$i$i$i = 0, $or$cond$i$i$i$i$i$i210 = 0, $or$cond$i$i$i$i$i$i245 = 0, $or$cond$i$i$i$i$i28$i = 0, $or$cond$i$i$i$i$i43$i = 0, $or$cond$i$i$i$i$i59$i = 0, $or$cond$i$i$i$i$i78$i = 0, $or$cond10$i = 0, $or$cond448 = 0, $or$cond449 = 0, $p$0 = 0, $p$1 = 0, $p$2 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i$i$i$i$i = 0, $phitmp$i$i$i$i$i$i$i205 = 0, $phitmp$i$i$i$i$i$i$i240 = 0, $phitmp$i$i$i$i$i$i23$i = 0, $phitmp$i$i$i$i$i$i38$i = 0, $phitmp$i$i$i$i$i$i54$i = 0;
 var $phitmp$i$i$i$i$i$i73$i = 0, $phitmp$i2$i$i$i$i$i$i = 0, $phitmp$i2$i$i$i$i$i$i208 = 0, $phitmp$i2$i$i$i$i$i$i243 = 0, $phitmp$i2$i$i$i$i$i26$i = 0, $phitmp$i2$i$i$i$i$i41$i = 0, $phitmp$i2$i$i$i$i$i57$i = 0, $phitmp$i2$i$i$i$i$i76$i = 0, $proto = 0, $ref_qual$0$i$ph$ph = 0, $ref_qual$0$i$ph521 = 0, $ref_qual$0$i$ph521$lcssa = 0, $scevgep2$i$i$i = 0, $sig$i = 0, $t$0$i = 0, $t$1$i$be = 0, $t$1$i$ph$ph = 0, $t$1$i$ph520 = 0, $t$1$i518 = 0, $t$1$i518$lcssa = 0;
 var $t12$0$i = 0, $template_args = 0, $type = 0, $type$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1600|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v$i$i$i = sp + 1572|0;
 $0 = sp + 1560|0;
 $1 = sp + 1548|0;
 $2 = sp + 1536|0;
 $3 = sp + 1512|0;
 $4 = sp + 1500|0;
 $5 = sp + 1488|0;
 $6 = sp + 1476|0;
 $num1$i = sp + 1464|0;
 $7 = sp + 1452|0;
 $8 = sp + 1440|0;
 $9 = sp + 1428|0;
 $10 = sp + 1416|0;
 $11 = sp + 1404|0;
 $12 = sp + 1392|0;
 $13 = sp + 1380|0;
 $14 = sp + 1368|0;
 $type$i = sp + 1344|0;
 $expr$i = sp + 1320|0;
 $15 = sp + 1304|0;
 $16 = sp + 1292|0;
 $17 = sp + 1280|0;
 $18 = sp + 1268|0;
 $19 = sp + 1256|0;
 $sig$i = sp + 1244|0;
 $20 = sp + 1232|0;
 $func$i = sp + 1208|0;
 $class_type$i = sp + 1184|0;
 $21 = sp + 1168|0;
 $22 = sp + 1156|0;
 $23 = sp + 1144|0;
 $24 = sp + 1132|0;
 $25 = sp + 1120|0;
 $26 = sp + 1108|0;
 $27 = sp + 1096|0;
 $28 = sp + 1084|0;
 $29 = sp + 1072|0;
 $__v$i$i180 = sp + 1052|0;
 $__v$i$i152 = sp + 1032|0;
 $__v$i$i147 = sp + 1012|0;
 $__v$i$i134 = sp + 992|0;
 $__v$i$i130 = sp + 972|0;
 $__v$i$i121 = sp + 952|0;
 $__v$i$i112 = sp + 932|0;
 $__v$i$i103 = sp + 912|0;
 $__v$i$i94 = sp + 892|0;
 $__v$i$i85 = sp + 872|0;
 $__v$i$i80 = sp + 852|0;
 $__v$i$i75 = sp + 832|0;
 $__v$i$i70 = sp + 812|0;
 $__v$i$i65 = sp + 792|0;
 $__v$i$i60 = sp + 772|0;
 $__v$i$i55 = sp + 752|0;
 $__v$i$i50 = sp + 732|0;
 $__v$i$i41 = sp + 712|0;
 $__v$i$i37 = sp + 692|0;
 $__v$i$i30 = sp + 672|0;
 $__v$i$i28 = sp + 652|0;
 $__v$i$i26 = sp + 632|0;
 $__v$i$i21 = sp + 612|0;
 $__v$i$i16 = sp + 592|0;
 $__v$i$i = sp + 572|0;
 $cv = sp + 568|0;
 $30 = sp + 552|0;
 $31 = sp + 544|0;
 $32 = sp + 528|0;
 $33 = sp + 520|0;
 $34 = sp + 504|0;
 $35 = sp + 496|0;
 $36 = sp + 480|0;
 $37 = sp + 472|0;
 $38 = sp + 456|0;
 $39 = sp + 452|0;
 $40 = sp + 440|0;
 $41 = sp + 428|0;
 $42 = sp + 416|0;
 $43 = sp + 404|0;
 $args = sp + 392|0;
 $44 = sp + 376|0;
 $45 = sp + 368|0;
 $type = sp + 356|0;
 $46 = sp + 344|0;
 $47 = sp + 320|0;
 $48 = sp + 308|0;
 $49 = sp + 296|0;
 $50 = sp + 284|0;
 $proto = sp + 272|0;
 $51 = sp + 248|0;
 $52 = sp + 236|0;
 $53 = sp + 224|0;
 $54 = sp + 212|0;
 $55 = sp + 200|0;
 $56 = sp + 176|0;
 $57 = sp + 164|0;
 $58 = sp + 152|0;
 $59 = sp + 136|0;
 $60 = sp + 128|0;
 $61 = sp + 112|0;
 $62 = sp + 108|0;
 $template_args = sp + 96|0;
 $63 = sp + 80|0;
 $64 = sp + 72|0;
 $65 = sp + 56|0;
 $66 = sp + 48|0;
 $67 = sp + 32|0;
 $68 = sp + 24|0;
 $69 = sp + 8|0;
 $70 = sp;
 $71 = ($first|0)==($last|0);
 L1: do {
  if ($71) {
   $$0 = $first;
  } else {
   $72 = HEAP8[$first>>0]|0;
   $73 = $72 << 24 >> 24;
   switch ($73|0) {
   case 75: case 86: case 114:  {
    HEAP32[$cv>>2] = 0;
    $74 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($first,$last,$cv)|0);
    $75 = ($74|0)==($first|0);
    if ($75) {
     $$0 = $first;
     break L1;
    }
    $76 = HEAP8[$74>>0]|0;
    $77 = ((($db)) + 4|0);
    $78 = HEAP32[$77>>2]|0;
    $79 = HEAP32[$db>>2]|0;
    $80 = $78;
    $81 = $79;
    $82 = (($80) - ($81))|0;
    $83 = (($82|0) / 24)&-1;
    $84 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($74,$last,$db)|0);
    $85 = HEAP32[$77>>2]|0;
    $86 = HEAP32[$db>>2]|0;
    $87 = $85;
    $88 = $86;
    $89 = (($87) - ($88))|0;
    $90 = (($89|0) / 24)&-1;
    $91 = ($84|0)==($74|0);
    if ($91) {
     $$0 = $first;
     break L1;
    }
    $92 = ($76<<24>>24)==(70);
    $93 = ((($db)) + 20|0);
    $94 = HEAP32[$93>>2]|0;
    if ($92) {
     $95 = ((($94)) + -16|0);
     $97 = $94;
     while(1) {
      $96 = ((($97)) + -16|0);
      HEAP32[$93>>2] = $96;
      __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($96);
      $$pre$i36 = HEAP32[$93>>2]|0;
      $98 = ($$pre$i36|0)==($95|0);
      if ($98) {
       $106 = $95;
       break;
      } else {
       $97 = $$pre$i36;
      }
     }
    } else {
     $106 = $94;
    }
    $99 = ((($db)) + 16|0);
    $100 = ((($db)) + 12|0);
    $101 = HEAP32[$100>>2]|0;
    $102 = $101;
    $103 = ((($db)) + 24|0);
    $104 = HEAP32[$103>>2]|0;
    $105 = ($106>>>0)<($104>>>0);
    if ($105) {
     HEAP32[$106>>2] = 0;
     $107 = ((($106)) + 4|0);
     HEAP32[$107>>2] = 0;
     $108 = ((($106)) + 8|0);
     HEAP32[$108>>2] = 0;
     $109 = ((($106)) + 12|0);
     HEAP32[$109>>2] = $102;
     $110 = HEAP32[$93>>2]|0;
     $111 = ((($110)) + 16|0);
     HEAP32[$93>>2] = $111;
    } else {
     $112 = ((($db)) + 28|0);
     $113 = HEAP32[$99>>2]|0;
     $114 = $106;
     $115 = $113;
     $116 = (($114) - ($115))|0;
     $117 = $116 >> 4;
     $118 = (($117) + 1)|0;
     $119 = ($116|0)<(-16);
     if ($119) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($99);
      // unreachable;
     }
     $120 = $104;
     $121 = (($120) - ($115))|0;
     $122 = $121 >> 4;
     $123 = ($122>>>0)<(1073741823);
     if ($123) {
      $124 = $121 >> 3;
      $125 = ($124>>>0)<($118>>>0);
      $126 = $125 ? $118 : $124;
      $$0$i$i$i38 = $126;
     } else {
      $$0$i$i$i38 = 2147483647;
     }
     __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i37,$$0$i$i$i38,$117,$112);
     $127 = ((($__v$i$i37)) + 8|0);
     $128 = HEAP32[$127>>2]|0;
     HEAP32[$128>>2] = 0;
     $129 = ((($128)) + 4|0);
     HEAP32[$129>>2] = 0;
     $130 = ((($128)) + 8|0);
     HEAP32[$130>>2] = 0;
     $131 = ((($128)) + 12|0);
     HEAP32[$131>>2] = $102;
     $132 = ((($128)) + 16|0);
     HEAP32[$127>>2] = $132;
     __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($99,$__v$i$i37);
     __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i37);
    }
    $133 = HEAP32[$cv>>2]|0;
    $134 = $133 & 1;
    $135 = ($134|0)==(0);
    $136 = $133 & 2;
    $137 = ($136|0)==(0);
    $138 = $133 & 4;
    $139 = ($138|0)==(0);
    $140 = ((($__v$i$i41)) + 8|0);
    $141 = ($83>>>0)<($90>>>0);
    if ($141) {
     $k$0560 = $83;
    } else {
     $$0 = $84;
     break L1;
    }
    while(1) {
     if ($92) {
      $142 = HEAP32[$db>>2]|0;
      $143 = (((($142) + (($k$0560*24)|0)|0)) + 12|0);
      $144 = HEAP8[$143>>0]|0;
      $145 = $144 & 1;
      $146 = ($145<<24>>24)==(0);
      if ($146) {
       $151 = $144&255;
       $152 = $151 >>> 1;
       $153 = ((($143)) + 1|0);
       $$in = $152;$156 = $153;
      } else {
       $147 = (((($142) + (($k$0560*24)|0)|0)) + 16|0);
       $148 = HEAP32[$147>>2]|0;
       $149 = (((($142) + (($k$0560*24)|0)|0)) + 20|0);
       $150 = HEAP32[$149>>2]|0;
       $$in = $148;$156 = $150;
      }
      $154 = (($$in) + -2)|0;
      $155 = (($156) + ($154)|0);
      $157 = HEAP8[$155>>0]|0;
      $158 = ($157<<24>>24)==(38);
      if ($158) {
       $159 = (($$in) + -3)|0;
       $p$0 = $159;
      } else {
       if ($146) {
        $164 = ((($143)) + 1|0);
        $165 = $144&255;
        $166 = $165 >>> 1;
        $167 = $166;$169 = $164;
       } else {
        $160 = (((($142) + (($k$0560*24)|0)|0)) + 20|0);
        $161 = HEAP32[$160>>2]|0;
        $162 = (((($142) + (($k$0560*24)|0)|0)) + 16|0);
        $163 = HEAP32[$162>>2]|0;
        $167 = $163;$169 = $161;
       }
       $$sum$i = (($167) + -1)|0;
       $168 = (($169) + ($$sum$i)|0);
       $170 = HEAP8[$168>>0]|0;
       $171 = ($170<<24>>24)==(38);
       $$ = $171 ? $154 : $$in;
       $p$0 = $$;
      }
      if ($135) {
       $p$1 = $p$0;
      } else {
       (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($143,$p$0,17006)|0);
       $172 = (($p$0) + 6)|0;
       $p$1 = $172;
      }
      if ($137) {
       $p$2 = $p$1;
      } else {
       $173 = HEAP32[$db>>2]|0;
       $174 = (((($173) + (($k$0560*24)|0)|0)) + 12|0);
       (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($174,$p$1,17013)|0);
       $175 = (($p$1) + 9)|0;
       $p$2 = $175;
      }
      if (!($139)) {
       $176 = HEAP32[$db>>2]|0;
       $177 = (((($176) + (($k$0560*24)|0)|0)) + 12|0);
       (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($177,$p$2,17023)|0);
      }
     } else {
      if (!($135)) {
       $178 = HEAP32[$db>>2]|0;
       $179 = (($178) + (($k$0560*24)|0)|0);
       (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($179,17006)|0);
      }
      if (!($137)) {
       $180 = HEAP32[$db>>2]|0;
       $181 = (($180) + (($k$0560*24)|0)|0);
       (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($181,17013)|0);
      }
      if (!($139)) {
       $182 = HEAP32[$db>>2]|0;
       $183 = (($182) + (($k$0560*24)|0)|0);
       (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($183,17023)|0);
      }
     }
     $184 = HEAP32[$93>>2]|0;
     $185 = ((($184)) + -16|0);
     $186 = HEAP32[$db>>2]|0;
     $187 = (($186) + (($k$0560*24)|0)|0);
     $188 = ((($184)) + -12|0);
     $189 = HEAP32[$188>>2]|0;
     $190 = ((($184)) + -8|0);
     $191 = HEAP32[$190>>2]|0;
     $192 = ($189|0)==($191|0);
     if ($192) {
      $201 = ((($184)) + -4|0);
      $202 = HEAP32[$185>>2]|0;
      $203 = $189;
      $204 = $202;
      $205 = (($203) - ($204))|0;
      $206 = (($205|0) / 24)&-1;
      $207 = (($206) + 1)|0;
      $208 = ($205|0)<(-24);
      if ($208) {
       $$lcssa706 = $185;
       label = 43;
       break;
      }
      $209 = ($206>>>0)<(1073741823);
      if ($209) {
       $210 = $206 << 1;
       $211 = ($210>>>0)<($207>>>0);
       $212 = $211 ? $207 : $210;
       $$0$i$i$i43 = $212;
      } else {
       $$0$i$i$i43 = 2147483647;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i41,$$0$i$i$i43,$206,$201);
      $213 = HEAP32[$140>>2]|0;
      __THREW__ = 0;
      invoke_vii(400,($213|0),($187|0));
      $214 = __THREW__; __THREW__ = 0;
      $215 = $214&1;
      if ($215) {
       label = 49;
       break;
      }
      $216 = ((($213)) + 12|0);
      $217 = (((($186) + (($k$0560*24)|0)|0)) + 12|0);
      __THREW__ = 0;
      invoke_vii(400,($216|0),($217|0));
      $218 = __THREW__; __THREW__ = 0;
      $219 = $218&1;
      if ($219) {
       $$lcssa712 = $213;
       label = 48;
       break;
      }
      $224 = ((($213)) + 24|0);
      HEAP32[$140>>2] = $224;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($185,$__v$i$i41);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i41);
     } else {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($189,$187);
      $193 = ((($189)) + 12|0);
      $194 = (((($186) + (($k$0560*24)|0)|0)) + 12|0);
      __THREW__ = 0;
      invoke_vii(400,($193|0),($194|0));
      $195 = __THREW__; __THREW__ = 0;
      $196 = $195&1;
      if ($196) {
       $$lcssa710 = $189;
       label = 40;
       break;
      }
      $199 = HEAP32[$188>>2]|0;
      $200 = ((($199)) + 24|0);
      HEAP32[$188>>2] = $200;
     }
     $225 = (($k$0560) + 1)|0;
     $226 = ($225>>>0)<($90>>>0);
     if ($226) {
      $k$0560 = $225;
     } else {
      $$0 = $84;
      break L1;
     }
    }
    if ((label|0) == 40) {
     $197 = ___cxa_find_matching_catch()|0;
     $198 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($$lcssa710);
     ___resumeException($197|0);
     // unreachable;
    }
    else if ((label|0) == 43) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($$lcssa706);
     // unreachable;
    }
    else if ((label|0) == 48) {
     $220 = ___cxa_find_matching_catch()|0;
     $221 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($$lcssa712);
     $eh$lpad$body$i$i46$index2Z2D = $221;$eh$lpad$body$i$i46$indexZ2D = $220;
    }
    else if ((label|0) == 49) {
     $222 = ___cxa_find_matching_catch()|0;
     $223 = tempRet0;
     $eh$lpad$body$i$i46$index2Z2D = $223;$eh$lpad$body$i$i46$indexZ2D = $222;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i41);
    ___resumeException($eh$lpad$body$i$i46$indexZ2D|0);
    // unreachable;
    break;
   }
   default: {
   }
   }
   $227 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_builtin_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
   $228 = ($227|0)==($first|0);
   if ($228) {
    $229 = HEAP8[$first>>0]|0;
    $230 = $229 << 24 >> 24;
    L73: do {
     switch ($230|0) {
     case 65:  {
      $231 = ($229<<24>>24)==(65);
      L75: do {
       if ($231) {
        $232 = ((($first)) + 1|0);
        $233 = ($232|0)==($last|0);
        if ($233) {
         $$0$i = $first;
        } else {
         $234 = HEAP8[$232>>0]|0;
         $235 = ($234<<24>>24)==(95);
         if ($235) {
          $236 = ((($first)) + 2|0);
          $237 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($236,$last,$db)|0);
          $238 = ($237|0)==($236|0);
          if ($238) {
           $$0$i = $first;
           break;
          }
          $239 = HEAP32[$db>>2]|0;
          $240 = ((($db)) + 4|0);
          $241 = HEAP32[$240>>2]|0;
          $242 = ($239|0)==($241|0);
          if ($242) {
           $$0$i = $first;
           break;
          }
          $243 = ((($241)) + -12|0);
          $244 = HEAP8[$243>>0]|0;
          $245 = $244 & 1;
          $246 = ($245<<24>>24)==(0);
          $247 = ((($241)) + -8|0);
          $248 = HEAP32[$247>>2]|0;
          $249 = $244&255;
          $250 = $249 >>> 1;
          $251 = $246 ? $250 : $248;
          $252 = ((($241)) + -4|0);
          $253 = HEAP32[$252>>2]|0;
          $254 = ((($243)) + 1|0);
          $255 = $246 ? $254 : $253;
          $256 = ($251>>>0)<(2);
          $257 = $256 ? $251 : 2;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($10,$255,$257);
          $258 = HEAP8[$10>>0]|0;
          $259 = $258 & 1;
          $260 = ($259<<24>>24)==(0);
          $261 = ((($10)) + 4|0);
          $262 = HEAP32[$261>>2]|0;
          $263 = $258&255;
          $264 = $263 >>> 1;
          $265 = $260 ? $264 : $262;
          $266 = ((($10)) + 8|0);
          $267 = HEAP32[$266>>2]|0;
          $268 = ((($10)) + 1|0);
          $269 = $260 ? $268 : $267;
          $270 = ($265>>>0)>(2);
          $271 = $270 ? 2 : $265;
          $272 = (_memcmp($269,17033,$271)|0);
          $273 = ($272|0)==(0);
          $274 = ($265>>>0)<(2);
          $$$i$i$i$i188 = $270&1;
          $$$$i$i$i$i189 = $274 ? -1 : $$$i$i$i$i188;
          $275 = $273 ? $$$$i$i$i$i189 : $272;
          $276 = ($275|0)==(0);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($10);
          if ($276) {
           $277 = HEAP32[$240>>2]|0;
           $278 = ((($277)) + -12|0);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEjj($278);
          }
          $279 = HEAP32[$240>>2]|0;
          $280 = ((($279)) + -12|0);
          (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($280,0,17036)|0);
          $$0$i = $237;
          break;
         }
         $$off271 = (($234) + -49)<<24>>24;
         $281 = ($$off271&255)<(9);
         if ($281) {
          $282 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($232,$last)|0);
          $283 = ($282|0)==($last|0);
          if ($283) {
           $$0$i = $first;
           break;
          }
          $284 = HEAP8[$282>>0]|0;
          $285 = ($284<<24>>24)==(95);
          if (!($285)) {
           $$0$i = $first;
           break;
          }
          $286 = ((($282)) + 1|0);
          $287 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($286,$last,$db)|0);
          $288 = ($287|0)==($286|0);
          if ($288) {
           $$0$i = $first;
           break;
          }
          $289 = HEAP32[$db>>2]|0;
          $290 = ((($db)) + 4|0);
          $291 = HEAP32[$290>>2]|0;
          $292 = ($289|0)==($291|0);
          if ($292) {
           $$0$i = $first;
           break;
          }
          $293 = ((($291)) + -12|0);
          $294 = HEAP8[$293>>0]|0;
          $295 = $294 & 1;
          $296 = ($295<<24>>24)==(0);
          $297 = ((($291)) + -8|0);
          $298 = HEAP32[$297>>2]|0;
          $299 = $294&255;
          $300 = $299 >>> 1;
          $301 = $296 ? $300 : $298;
          $302 = ((($291)) + -4|0);
          $303 = HEAP32[$302>>2]|0;
          $304 = ((($293)) + 1|0);
          $305 = $296 ? $304 : $303;
          $306 = ($301>>>0)<(2);
          $307 = $306 ? $301 : 2;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($11,$305,$307);
          $308 = HEAP8[$11>>0]|0;
          $309 = $308 & 1;
          $310 = ($309<<24>>24)==(0);
          $311 = ((($11)) + 4|0);
          $312 = HEAP32[$311>>2]|0;
          $313 = $308&255;
          $314 = $313 >>> 1;
          $315 = $310 ? $314 : $312;
          $316 = ((($11)) + 8|0);
          $317 = HEAP32[$316>>2]|0;
          $318 = ((($11)) + 1|0);
          $319 = $310 ? $318 : $317;
          $320 = ($315>>>0)>(2);
          $321 = $320 ? 2 : $315;
          $322 = (_memcmp($319,17033,$321)|0);
          $323 = ($322|0)==(0);
          $324 = ($315>>>0)<(2);
          $$$i$i$i12$i = $320&1;
          $$$$i$i$i13$i = $324 ? -1 : $$$i$i$i12$i;
          $325 = $323 ? $$$$i$i$i13$i : $322;
          $326 = ($325|0)==(0);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($11);
          if ($326) {
           $327 = HEAP32[$290>>2]|0;
           $328 = ((($327)) + -12|0);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEjj($328);
          }
          $329 = HEAP32[$290>>2]|0;
          $330 = ((($329)) + -12|0);
          $331 = $232;
          $332 = $282;
          $333 = (($332) - ($331))|0;
          $334 = ($333>>>0)>(4294967279);
          if ($334) {
           __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($14);
           // unreachable;
          }
          $335 = ($333>>>0)<(11);
          if ($335) {
           $336 = $333 << 1;
           $337 = $336&255;
           HEAP8[$14>>0] = $337;
           $338 = ((($14)) + 1|0);
           $__p$0$ph$i$i$i = $338;
          } else {
           $339 = (($333) + 16)|0;
           $340 = $339 & -16;
           $341 = (_malloc($340)|0);
           $342 = ((($14)) + 8|0);
           HEAP32[$342>>2] = $341;
           $343 = $340 | 1;
           HEAP32[$14>>2] = $343;
           $344 = ((($14)) + 4|0);
           HEAP32[$344>>2] = $333;
           $__p$0$ph$i$i$i = $341;
          }
          $345 = ($232|0)==($282|0);
          if (!($345)) {
           $$0$i$i$i191509 = $232;$__p$0$i$i$i508 = $__p$0$ph$i$i$i;
           while(1) {
            $346 = HEAP8[$$0$i$i$i191509>>0]|0;
            HEAP8[$__p$0$i$i$i508>>0] = $346;
            $347 = ((($$0$i$i$i191509)) + 1|0);
            $348 = ((($__p$0$i$i$i508)) + 1|0);
            $349 = ($347|0)==($282|0);
            if ($349) {
             break;
            } else {
             $$0$i$i$i191509 = $347;$__p$0$i$i$i508 = $348;
            }
           }
          }
          $scevgep2$i$i$i = (($__p$0$ph$i$i$i) + ($333)|0);
          HEAP8[$scevgep2$i$i$i>>0] = 0;
          __THREW__ = 0;
          $350 = (invoke_iiii(391,($14|0),0,(17033|0))|0);
          $351 = __THREW__; __THREW__ = 0;
          $352 = $351&1;
          if ($352) {
           $374 = ___cxa_find_matching_catch()|0;
           $375 = tempRet0;
           $$1$i199 = $375;$$13$i = $374;
          } else {
           ;HEAP32[$13>>2]=HEAP32[$350>>2]|0;HEAP32[$13+4>>2]=HEAP32[$350+4>>2]|0;HEAP32[$13+8>>2]=HEAP32[$350+8>>2]|0;
           HEAP32[$350>>2] = 0;
           $353 = ((($350)) + 4|0);
           HEAP32[$353>>2] = 0;
           $354 = ((($350)) + 8|0);
           HEAP32[$354>>2] = 0;
           __THREW__ = 0;
           $355 = (invoke_iii(392,($13|0),(17040|0))|0);
           $356 = __THREW__; __THREW__ = 0;
           $357 = $356&1;
           do {
            if ($357) {
             $376 = ___cxa_find_matching_catch()|0;
             $377 = tempRet0;
             $$01$i198 = $377;$$02$i = $376;
            } else {
             ;HEAP32[$12>>2]=HEAP32[$355>>2]|0;HEAP32[$12+4>>2]=HEAP32[$355+4>>2]|0;HEAP32[$12+8>>2]=HEAP32[$355+8>>2]|0;
             HEAP32[$355>>2] = 0;
             $358 = ((($355)) + 4|0);
             HEAP32[$358>>2] = 0;
             $359 = ((($355)) + 8|0);
             HEAP32[$359>>2] = 0;
             $360 = HEAP8[$12>>0]|0;
             $361 = $360 & 1;
             $362 = ($361<<24>>24)==(0);
             $363 = ((($12)) + 8|0);
             $364 = HEAP32[$363>>2]|0;
             $365 = ((($12)) + 1|0);
             $366 = $362 ? $365 : $364;
             $367 = ((($12)) + 4|0);
             $368 = HEAP32[$367>>2]|0;
             $369 = $360&255;
             $370 = $369 >>> 1;
             $371 = $362 ? $370 : $368;
             __THREW__ = 0;
             (invoke_iiiii(399,($330|0),0,($366|0),($371|0))|0);
             $372 = __THREW__; __THREW__ = 0;
             $373 = $372&1;
             if ($373) {
              $378 = ___cxa_find_matching_catch()|0;
              $379 = tempRet0;
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($12);
              $$01$i198 = $379;$$02$i = $378;
              break;
             } else {
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($12);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($13);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($14);
              $$0$i = $287;
              break L75;
             }
            }
           } while(0);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($13);
           $$1$i199 = $$01$i198;$$13$i = $$02$i;
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($14);
          $$6$i224 = $$1$i199;$$68$i = $$13$i;
         } else {
          $380 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($232,$last,$db)|0);
          $381 = ($380|0)==($232|0);
          $382 = ($380|0)==($last|0);
          $or$cond10$i = $381 | $382;
          if ($or$cond10$i) {
           $$0$i = $first;
           break;
          }
          $383 = HEAP8[$380>>0]|0;
          $384 = ($383<<24>>24)==(95);
          if (!($384)) {
           $$0$i = $first;
           break;
          }
          $385 = ((($380)) + 1|0);
          $386 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($385,$last,$db)|0);
          $387 = ($386|0)==($385|0);
          if ($387) {
           $$0$i = $first;
           break;
          }
          $388 = ((($db)) + 4|0);
          $389 = HEAP32[$388>>2]|0;
          $390 = HEAP32[$db>>2]|0;
          $391 = $389;
          $392 = $390;
          $393 = (($391) - ($392))|0;
          $394 = (($393|0) / 24)&-1;
          $395 = ($394>>>0)<(2);
          if ($395) {
           $$0$i = $first;
           break;
          }
          $396 = ((($389)) + -24|0);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($type$i,$396);
          $397 = HEAP32[$388>>2]|0;
          $398 = ((($397)) + -24|0);
          $400 = $397;
          while(1) {
           $399 = ((($400)) + -24|0);
           HEAP32[$388>>2] = $399;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($399);
           $$pre$i$i200 = HEAP32[$388>>2]|0;
           $401 = ($$pre$i$i200|0)==($398|0);
           if ($401) {
            break;
           } else {
            $400 = $$pre$i$i200;
           }
          }
          $402 = ((($397)) + -48|0);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($expr$i,$402);
          $403 = HEAP32[$388>>2]|0;
          $404 = ((($403)) + -24|0);
          $405 = HEAP8[$404>>0]|0;
          $406 = $405 & 1;
          $407 = ($406<<24>>24)==(0);
          do {
           if ($407) {
            $408 = ((($404)) + 1|0);
            HEAP8[$408>>0] = 0;
            HEAP8[$404>>0] = 0;
           } else {
            $409 = ((($403)) + -16|0);
            $410 = HEAP32[$409>>2]|0;
            HEAP8[$410>>0] = 0;
            $411 = ((($403)) + -20|0);
            HEAP32[$411>>2] = 0;
            $$pre$i$i$i$i203 = HEAP8[$404>>0]|0;
            $412 = $$pre$i$i$i$i203 & 1;
            $413 = ($412<<24>>24)==(0);
            if ($413) {
             $418 = $$pre$i$i$i$i203;$427 = 10;
            } else {
             $414 = HEAP32[$404>>2]|0;
             $415 = $414 & -2;
             $phitmp$i$i$i$i$i$i$i205 = (($415) + -1)|0;
             $416 = $414&255;
             $418 = $416;$427 = $phitmp$i$i$i$i$i$i$i205;
            }
            $417 = $418 & 1;
            $419 = ($417<<24>>24)==(0);
            if ($419) {
             $420 = $418&255;
             $421 = $420 >>> 1;
             $422 = ($418&255)<(22);
             if ($422) {
              $2881 = 1;$426 = 10;$446 = $421;
             } else {
              $423 = (($421) + 16)|0;
              $424 = $423 & 240;
              $phitmp$i2$i$i$i$i$i$i208 = (($424) + -1)|0;
              $2881 = 1;$426 = $phitmp$i2$i$i$i$i$i$i208;$446 = $421;
             }
            } else {
             $2881 = 0;$426 = 10;$446 = 0;
            }
            $425 = ($426|0)==($427|0);
            if (!($425)) {
             $428 = ($426|0)==(10);
             if ($428) {
              $433 = ((($404)) + 1|0);
              $434 = HEAP32[$409>>2]|0;
              if ($2881) {
               $435 = $418&255;
               $436 = $435 >>> 1;
               $437 = (($436) + 1)|0;
               _memcpy(($433|0),($434|0),($437|0))|0;
               _free($434);
              } else {
               $442 = HEAP8[$434>>0]|0;
               HEAP8[$433>>0] = $442;
               _free($434);
              }
              $447 = $446 << 1;
              $448 = $447&255;
              HEAP8[$404>>0] = $448;
              break;
             }
             $429 = ($426>>>0)<=($427>>>0);
             $430 = (($426) + 1)|0;
             $431 = (_malloc($430)|0);
             $432 = ($431|0)==(0|0);
             $or$cond$i$i$i$i$i$i210 = $429 & $432;
             if ($or$cond$i$i$i$i$i$i210) {
              break;
             }
             if ($2881) {
              $438 = ((($404)) + 1|0);
              $439 = $418&255;
              $440 = $439 >>> 1;
              $441 = (($440) + 1)|0;
              _memcpy(($431|0),($438|0),($441|0))|0;
             } else {
              $443 = HEAP32[$409>>2]|0;
              $444 = HEAP8[$443>>0]|0;
              HEAP8[$431>>0] = $444;
              _free($443);
             }
             $445 = $430 | 1;
             HEAP32[$404>>2] = $445;
             HEAP32[$411>>2] = $446;
             HEAP32[$409>>2] = $431;
            }
           }
          } while(0);
          ;HEAP32[$404>>2]=HEAP32[$type$i>>2]|0;HEAP32[$404+4>>2]=HEAP32[$type$i+4>>2]|0;HEAP32[$404+8>>2]=HEAP32[$type$i+8>>2]|0;
          HEAP32[$type$i>>2] = 0;
          $449 = ((($type$i)) + 4|0);
          HEAP32[$449>>2] = 0;
          $450 = ((($type$i)) + 8|0);
          HEAP32[$450>>2] = 0;
          $451 = ((($type$i)) + 12|0);
          $452 = HEAP8[$451>>0]|0;
          $453 = $452 & 1;
          $454 = ($453<<24>>24)==(0);
          $455 = ((($type$i)) + 16|0);
          $456 = HEAP32[$455>>2]|0;
          $457 = $452&255;
          $458 = $457 >>> 1;
          $459 = $454 ? $458 : $456;
          $460 = ((($type$i)) + 20|0);
          $461 = HEAP32[$460>>2]|0;
          $462 = ((($451)) + 1|0);
          $463 = $454 ? $462 : $461;
          $464 = ($459>>>0)<(2);
          $465 = $464 ? $459 : 2;
          __THREW__ = 0;
          invoke_viii(401,($15|0),($463|0),($465|0));
          $466 = __THREW__; __THREW__ = 0;
          $467 = $466&1;
          if ($467) {
           label = 113;
          } else {
           $468 = HEAP8[$15>>0]|0;
           $469 = $468 & 1;
           $470 = ($469<<24>>24)==(0);
           $471 = ((($15)) + 4|0);
           $472 = HEAP32[$471>>2]|0;
           $473 = $468&255;
           $474 = $473 >>> 1;
           $475 = $470 ? $474 : $472;
           $476 = ((($15)) + 8|0);
           $477 = HEAP32[$476>>2]|0;
           $478 = ((($15)) + 1|0);
           $479 = $470 ? $478 : $477;
           $480 = ($475>>>0)>(2);
           $481 = $480 ? 2 : $475;
           $482 = (_memcmp($479,17033,$481)|0);
           $483 = ($482|0)==(0);
           $484 = ($475>>>0)<(2);
           $$$i$i$i21$i = $480&1;
           $$$$i$i$i22$i = $484 ? -1 : $$$i$i$i21$i;
           $485 = $483 ? $$$$i$i$i22$i : $482;
           $486 = ($485|0)==(0);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($15);
           if ($486) {
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEjj($451);
           }
           $489 = HEAP32[$388>>2]|0;
           $490 = ((($489)) + -12|0);
           __THREW__ = 0;
           invoke_vii(396,($19|0),($expr$i|0));
           $491 = __THREW__; __THREW__ = 0;
           $492 = $491&1;
           if ($492) {
            label = 113;
           } else {
            __THREW__ = 0;
            $493 = (invoke_iiii(391,($19|0),0,(17033|0))|0);
            $494 = __THREW__; __THREW__ = 0;
            $495 = $494&1;
            if ($495) {
             $563 = ___cxa_find_matching_catch()|0;
             $564 = tempRet0;
             $$4$i222 = $564;$$46$i = $563;
            } else {
             ;HEAP32[$18>>2]=HEAP32[$493>>2]|0;HEAP32[$18+4>>2]=HEAP32[$493+4>>2]|0;HEAP32[$18+8>>2]=HEAP32[$493+8>>2]|0;
             HEAP32[$493>>2] = 0;
             $496 = ((($493)) + 4|0);
             HEAP32[$496>>2] = 0;
             $497 = ((($493)) + 8|0);
             HEAP32[$497>>2] = 0;
             __THREW__ = 0;
             $498 = (invoke_iii(392,($18|0),(17040|0))|0);
             $499 = __THREW__; __THREW__ = 0;
             $500 = $499&1;
             do {
              if ($500) {
               $565 = ___cxa_find_matching_catch()|0;
               $566 = tempRet0;
               $$3$i = $566;$$35$i = $565;
              } else {
               ;HEAP32[$17>>2]=HEAP32[$498>>2]|0;HEAP32[$17+4>>2]=HEAP32[$498+4>>2]|0;HEAP32[$17+8>>2]=HEAP32[$498+8>>2]|0;
               HEAP32[$498>>2] = 0;
               $501 = ((($498)) + 4|0);
               HEAP32[$501>>2] = 0;
               $502 = ((($498)) + 8|0);
               HEAP32[$502>>2] = 0;
               $503 = HEAP8[$451>>0]|0;
               $504 = $503 & 1;
               $505 = ($504<<24>>24)==(0);
               $506 = HEAP32[$460>>2]|0;
               $507 = $505 ? $462 : $506;
               $508 = HEAP32[$455>>2]|0;
               $509 = $503&255;
               $510 = $509 >>> 1;
               $511 = $505 ? $510 : $508;
               __THREW__ = 0;
               $512 = (invoke_iiii(387,($17|0),($507|0),($511|0))|0);
               $513 = __THREW__; __THREW__ = 0;
               $514 = $513&1;
               if ($514) {
                $567 = ___cxa_find_matching_catch()|0;
                $568 = tempRet0;
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($17);
                $$3$i = $568;$$35$i = $567;
                break;
               }
               ;HEAP32[$16>>2]=HEAP32[$512>>2]|0;HEAP32[$16+4>>2]=HEAP32[$512+4>>2]|0;HEAP32[$16+8>>2]=HEAP32[$512+8>>2]|0;
               HEAP32[$512>>2] = 0;
               $515 = ((($512)) + 4|0);
               HEAP32[$515>>2] = 0;
               $516 = ((($512)) + 8|0);
               HEAP32[$516>>2] = 0;
               $517 = HEAP8[$490>>0]|0;
               $518 = $517 & 1;
               $519 = ($518<<24>>24)==(0);
               do {
                if ($519) {
                 $520 = ((($490)) + 1|0);
                 HEAP8[$520>>0] = 0;
                 HEAP8[$490>>0] = 0;
                } else {
                 $521 = ((($489)) + -4|0);
                 $522 = HEAP32[$521>>2]|0;
                 HEAP8[$522>>0] = 0;
                 $523 = ((($489)) + -8|0);
                 HEAP32[$523>>2] = 0;
                 $$pre$i$i$i36$i = HEAP8[$490>>0]|0;
                 $524 = $$pre$i$i$i36$i & 1;
                 $525 = ($524<<24>>24)==(0);
                 if ($525) {
                  $530 = $$pre$i$i$i36$i;$539 = 10;
                 } else {
                  $526 = HEAP32[$490>>2]|0;
                  $527 = $526 & -2;
                  $phitmp$i$i$i$i$i$i38$i = (($527) + -1)|0;
                  $528 = $526&255;
                  $530 = $528;$539 = $phitmp$i$i$i$i$i$i38$i;
                 }
                 $529 = $530 & 1;
                 $531 = ($529<<24>>24)==(0);
                 do {
                  if ($531) {
                   $532 = $530&255;
                   $533 = $532 >>> 1;
                   $534 = ($530&255)<(22);
                   if ($534) {
                    $2882 = 1;$538 = 10;$558 = $533;
                    break;
                   }
                   $535 = (($533) + 16)|0;
                   $536 = $535 & 240;
                   $phitmp$i2$i$i$i$i$i41$i = (($536) + -1)|0;
                   $2882 = 1;$538 = $phitmp$i2$i$i$i$i$i41$i;$558 = $533;
                  } else {
                   $2882 = 0;$538 = 10;$558 = 0;
                  }
                 } while(0);
                 $537 = ($538|0)==($539|0);
                 if ($537) {
                  break;
                 }
                 $540 = ($538|0)==(10);
                 if ($540) {
                  $545 = ((($490)) + 1|0);
                  $546 = HEAP32[$521>>2]|0;
                  if ($2882) {
                   $547 = $530&255;
                   $548 = $547 >>> 1;
                   $549 = (($548) + 1)|0;
                   _memcpy(($545|0),($546|0),($549|0))|0;
                   _free($546);
                  } else {
                   $554 = HEAP8[$546>>0]|0;
                   HEAP8[$545>>0] = $554;
                   _free($546);
                  }
                  $559 = $558 << 1;
                  $560 = $559&255;
                  HEAP8[$490>>0] = $560;
                  break;
                 }
                 $541 = ($538>>>0)<=($539>>>0);
                 $542 = (($538) + 1)|0;
                 $543 = (_malloc($542)|0);
                 $544 = ($543|0)==(0|0);
                 $or$cond$i$i$i$i$i43$i = $541 & $544;
                 if ($or$cond$i$i$i$i$i43$i) {
                  break;
                 }
                 if ($2882) {
                  $550 = ((($490)) + 1|0);
                  $551 = $530&255;
                  $552 = $551 >>> 1;
                  $553 = (($552) + 1)|0;
                  _memcpy(($543|0),($550|0),($553|0))|0;
                 } else {
                  $555 = HEAP32[$521>>2]|0;
                  $556 = HEAP8[$555>>0]|0;
                  HEAP8[$543>>0] = $556;
                  _free($555);
                 }
                 $557 = $542 | 1;
                 HEAP32[$490>>2] = $557;
                 HEAP32[$523>>2] = $558;
                 HEAP32[$521>>2] = $543;
                }
               } while(0);
               ;HEAP32[$490>>2]=HEAP32[$16>>2]|0;HEAP32[$490+4>>2]=HEAP32[$16+4>>2]|0;HEAP32[$490+8>>2]=HEAP32[$16+8>>2]|0;
               HEAP32[$16>>2] = 0;
               $561 = ((($16)) + 4|0);
               HEAP32[$561>>2] = 0;
               $562 = ((($16)) + 8|0);
               HEAP32[$562>>2] = 0;
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($16);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($17);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($18);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($19);
               __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($expr$i);
               __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($type$i);
               $$0$i = $386;
               break L75;
              }
             } while(0);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($18);
             $$4$i222 = $$3$i;$$46$i = $$35$i;
            }
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($19);
            $$5$i223 = $$4$i222;$$57$i = $$46$i;
           }
          }
          if ((label|0) == 113) {
           $487 = ___cxa_find_matching_catch()|0;
           $488 = tempRet0;
           $$5$i223 = $488;$$57$i = $487;
          }
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($expr$i);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($type$i);
          $$6$i224 = $$5$i223;$$68$i = $$57$i;
         }
         ___resumeException($$68$i|0);
         // unreachable;
        }
       } else {
        $$0$i = $first;
       }
      } while(0);
      $569 = ($$0$i|0)==($first|0);
      if ($569) {
       $$0 = $first;
       break L1;
      }
      $570 = HEAP32[$db>>2]|0;
      $571 = ((($db)) + 4|0);
      $572 = HEAP32[$571>>2]|0;
      $573 = ($570|0)==($572|0);
      if ($573) {
       $$0 = $first;
       break L1;
      }
      $574 = ((($db)) + 16|0);
      $575 = ((($572)) + -24|0);
      $576 = ((($db)) + 12|0);
      $577 = HEAP32[$576>>2]|0;
      HEAP32[$31>>2] = $577;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($30,$575,$31);
      $578 = ((($db)) + 20|0);
      $579 = HEAP32[$578>>2]|0;
      $580 = ((($db)) + 24|0);
      $581 = HEAP32[$580>>2]|0;
      $582 = ($579>>>0)<($581>>>0);
      if ($582) {
       $583 = ((($30)) + 12|0);
       $584 = ((($579)) + 4|0);
       $585 = HEAP32[$583>>2]|0;
       $586 = ((($579)) + 12|0);
       HEAP32[$586>>2] = $585;
       $587 = HEAP32[$30>>2]|0;
       HEAP32[$579>>2] = $587;
       $588 = ((($30)) + 4|0);
       $589 = HEAP32[$588>>2]|0;
       HEAP32[$584>>2] = $589;
       $590 = ((($30)) + 8|0);
       $591 = HEAP32[$590>>2]|0;
       $592 = ((($579)) + 8|0);
       HEAP32[$592>>2] = $591;
       HEAP32[$590>>2] = 0;
       HEAP32[$588>>2] = 0;
       HEAP32[$30>>2] = 0;
       $593 = HEAP32[$578>>2]|0;
       $594 = ((($593)) + 16|0);
       HEAP32[$578>>2] = $594;
      } else {
       $595 = ((($db)) + 28|0);
       $596 = HEAP32[$574>>2]|0;
       $597 = $579;
       $598 = $596;
       $599 = (($597) - ($598))|0;
       $600 = $599 >> 4;
       $601 = (($600) + 1)|0;
       $602 = ($599|0)<(-16);
       if ($602) {
        __THREW__ = 0;
        invoke_vi(402,($574|0));
        $603 = __THREW__; __THREW__ = 0;
        $604 = ___cxa_find_matching_catch()|0;
        $605 = tempRet0;
        __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($30);
        $$10 = $604;$$1013 = $605;
        break L73;
       }
       $606 = $581;
       $607 = (($606) - ($598))|0;
       $608 = $607 >> 4;
       $609 = ($608>>>0)<(1073741823);
       if ($609) {
        $610 = $607 >> 3;
        $611 = ($610>>>0)<($601>>>0);
        $612 = $611 ? $601 : $610;
        $$0$i$i$i56 = $612;
       } else {
        $$0$i$i$i56 = 2147483647;
       }
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i55,$$0$i$i$i56,$600,$595);
       $613 = ((($__v$i$i55)) + 8|0);
       $614 = HEAP32[$613>>2]|0;
       $615 = ((($30)) + 12|0);
       $616 = ((($614)) + 4|0);
       $617 = HEAP32[$615>>2]|0;
       $618 = ((($614)) + 12|0);
       HEAP32[$618>>2] = $617;
       $619 = HEAP32[$30>>2]|0;
       HEAP32[$614>>2] = $619;
       $620 = ((($30)) + 4|0);
       $621 = HEAP32[$620>>2]|0;
       HEAP32[$616>>2] = $621;
       $622 = ((($30)) + 8|0);
       $623 = HEAP32[$622>>2]|0;
       $624 = ((($614)) + 8|0);
       HEAP32[$624>>2] = $623;
       HEAP32[$622>>2] = 0;
       HEAP32[$620>>2] = 0;
       HEAP32[$30>>2] = 0;
       $625 = ((($614)) + 16|0);
       HEAP32[$613>>2] = $625;
       __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($574,$__v$i$i55);
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i55);
      }
      __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($30);
      $$0 = $$0$i;
      break L1;
      break;
     }
     case 67:  {
      $626 = ((($first)) + 1|0);
      $627 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($626,$last,$db)|0);
      $628 = ($627|0)==($626|0);
      if ($628) {
       $$0 = $first;
       break L1;
      }
      $629 = HEAP32[$db>>2]|0;
      $630 = ((($db)) + 4|0);
      $631 = HEAP32[$630>>2]|0;
      $632 = ($629|0)==($631|0);
      if ($632) {
       $$0 = $first;
       break L1;
      }
      $633 = ((($631)) + -24|0);
      (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($633,17042)|0);
      $634 = ((($db)) + 16|0);
      $635 = HEAP32[$630>>2]|0;
      $636 = ((($635)) + -24|0);
      $637 = ((($db)) + 12|0);
      $638 = HEAP32[$637>>2]|0;
      HEAP32[$33>>2] = $638;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($32,$636,$33);
      $639 = ((($db)) + 20|0);
      $640 = HEAP32[$639>>2]|0;
      $641 = ((($db)) + 24|0);
      $642 = HEAP32[$641>>2]|0;
      $643 = ($640>>>0)<($642>>>0);
      if ($643) {
       $644 = ((($32)) + 12|0);
       $645 = ((($640)) + 4|0);
       $646 = HEAP32[$644>>2]|0;
       $647 = ((($640)) + 12|0);
       HEAP32[$647>>2] = $646;
       $648 = HEAP32[$32>>2]|0;
       HEAP32[$640>>2] = $648;
       $649 = ((($32)) + 4|0);
       $650 = HEAP32[$649>>2]|0;
       HEAP32[$645>>2] = $650;
       $651 = ((($32)) + 8|0);
       $652 = HEAP32[$651>>2]|0;
       $653 = ((($640)) + 8|0);
       HEAP32[$653>>2] = $652;
       HEAP32[$651>>2] = 0;
       HEAP32[$649>>2] = 0;
       HEAP32[$32>>2] = 0;
       $654 = HEAP32[$639>>2]|0;
       $655 = ((($654)) + 16|0);
       HEAP32[$639>>2] = $655;
      } else {
       $656 = ((($db)) + 28|0);
       $657 = HEAP32[$634>>2]|0;
       $658 = $640;
       $659 = $657;
       $660 = (($658) - ($659))|0;
       $661 = $660 >> 4;
       $662 = (($661) + 1)|0;
       $663 = ($660|0)<(-16);
       if ($663) {
        __THREW__ = 0;
        invoke_vi(402,($634|0));
        $664 = __THREW__; __THREW__ = 0;
        $665 = ___cxa_find_matching_catch()|0;
        $666 = tempRet0;
        __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($32);
        $$10 = $665;$$1013 = $666;
        break L73;
       }
       $667 = $642;
       $668 = (($667) - ($659))|0;
       $669 = $668 >> 4;
       $670 = ($669>>>0)<(1073741823);
       if ($670) {
        $671 = $668 >> 3;
        $672 = ($671>>>0)<($662>>>0);
        $673 = $672 ? $662 : $671;
        $$0$i$i$i61 = $673;
       } else {
        $$0$i$i$i61 = 2147483647;
       }
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i60,$$0$i$i$i61,$661,$656);
       $674 = ((($__v$i$i60)) + 8|0);
       $675 = HEAP32[$674>>2]|0;
       $676 = ((($32)) + 12|0);
       $677 = ((($675)) + 4|0);
       $678 = HEAP32[$676>>2]|0;
       $679 = ((($675)) + 12|0);
       HEAP32[$679>>2] = $678;
       $680 = HEAP32[$32>>2]|0;
       HEAP32[$675>>2] = $680;
       $681 = ((($32)) + 4|0);
       $682 = HEAP32[$681>>2]|0;
       HEAP32[$677>>2] = $682;
       $683 = ((($32)) + 8|0);
       $684 = HEAP32[$683>>2]|0;
       $685 = ((($675)) + 8|0);
       HEAP32[$685>>2] = $684;
       HEAP32[$683>>2] = 0;
       HEAP32[$681>>2] = 0;
       HEAP32[$32>>2] = 0;
       $686 = ((($675)) + 16|0);
       HEAP32[$674>>2] = $686;
       __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($634,$__v$i$i60);
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i60);
      }
      __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($32);
      $$0 = $627;
      break L1;
      break;
     }
     case 70:  {
      $687 = ($229<<24>>24)==(70);
      do {
       if ($687) {
        $688 = ((($first)) + 1|0);
        $689 = ($688|0)==($last|0);
        if (!($689)) {
         $690 = HEAP8[$688>>0]|0;
         $691 = ($690<<24>>24)==(89);
         if ($691) {
          $692 = ((($first)) + 2|0);
          $693 = ($692|0)==($last|0);
          if ($693) {
           break;
          } else {
           $t$0$i = $692;
          }
         } else {
          $t$0$i = $688;
         }
         $694 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($t$0$i,$last,$db)|0);
         $695 = ($694|0)==($t$0$i|0);
         if (!($695)) {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($sig$i,17051,1);
          $696 = ((($db)) + 4|0);
          $697 = ((($sig$i)) + 4|0);
          $698 = ((($20)) + 8|0);
          $699 = ((($20)) + 1|0);
          $700 = ((($20)) + 4|0);
          $701 = ($694|0)==($last|0);
          L228: do {
           if ($701) {
            label = 172;
           } else {
            $ref_qual$0$i$ph521 = 0;$t$1$i$ph520 = $694;
            L229: while(1) {
             $t$1$i518 = $t$1$i$ph520;
             L231: while(1) {
              $714 = HEAP8[$t$1$i518>>0]|0;
              switch ($714<<24>>24) {
              case 69:  {
               $ref_qual$0$i$ph521$lcssa = $ref_qual$0$i$ph521;$t$1$i518$lcssa = $t$1$i518;
               label = 179;
               break L229;
               break;
              }
              case 118:  {
               $718 = ((($t$1$i518)) + 1|0);
               $t$1$i$be = $718;
               break;
              }
              case 82:  {
               $720 = ((($t$1$i518)) + 1|0);
               $721 = ($720|0)==($last|0);
               if ($721) {
                label = 187;
               } else {
                $722 = HEAP8[$720>>0]|0;
                $723 = ($722<<24>>24)==(69);
                if ($723) {
                 $ref_qual$0$i$ph$ph = 1;$t$1$i$ph$ph = $720;
                 break L231;
                } else {
                 label = 187;
                }
               }
               break;
              }
              case 79:  {
               $724 = ((($t$1$i518)) + 1|0);
               $725 = ($724|0)==($last|0);
               if ($725) {
                label = 187;
               } else {
                $726 = HEAP8[$724>>0]|0;
                $727 = ($726<<24>>24)==(69);
                if ($727) {
                 $ref_qual$0$i$ph$ph = 2;$t$1$i$ph$ph = $724;
                 break L231;
                } else {
                 label = 187;
                }
               }
               break;
              }
              default: {
               label = 187;
              }
              }
              if ((label|0) == 187) {
               label = 0;
               $728 = HEAP32[$696>>2]|0;
               $729 = HEAP32[$db>>2]|0;
               $730 = $728;
               $731 = $729;
               $732 = (($730) - ($731))|0;
               $733 = (($732|0) / 24)&-1;
               __THREW__ = 0;
               $734 = (invoke_iiii(394,($t$1$i518|0),($last|0),($db|0))|0);
               $735 = __THREW__; __THREW__ = 0;
               $736 = $735&1;
               if ($736) {
                label = 175;
                break L229;
               }
               $737 = HEAP32[$696>>2]|0;
               $738 = HEAP32[$db>>2]|0;
               $739 = $737;
               $740 = $738;
               $741 = (($739) - ($740))|0;
               $742 = (($741|0) / 24)&-1;
               $743 = ($734|0)==($t$1$i518|0);
               $744 = ($734|0)==($last|0);
               $or$cond$i = $743 | $744;
               if ($or$cond$i) {
                break L228;
               }
               $745 = ($733>>>0)<($742>>>0);
               if ($745) {
                $k$0$i515 = $733;
                while(1) {
                 $747 = HEAP8[$sig$i>>0]|0;
                 $748 = $747 & 1;
                 $749 = ($748<<24>>24)==(0);
                 $750 = HEAP32[$697>>2]|0;
                 $751 = $747&255;
                 $752 = $751 >>> 1;
                 $753 = $749 ? $752 : $750;
                 $754 = ($753>>>0)>(1);
                 if ($754) {
                  __THREW__ = 0;
                  (invoke_iii(392,($sig$i|0),(17053|0))|0);
                  $755 = __THREW__; __THREW__ = 0;
                  $756 = $755&1;
                  if ($756) {
                   label = 174;
                   break L229;
                  }
                 }
                 $757 = HEAP32[$db>>2]|0;
                 $758 = (($757) + (($k$0$i515*24)|0)|0);
                 __THREW__ = 0;
                 invoke_vii(396,($20|0),($758|0));
                 $759 = __THREW__; __THREW__ = 0;
                 $760 = $759&1;
                 if ($760) {
                  label = 174;
                  break L229;
                 }
                 $761 = HEAP8[$20>>0]|0;
                 $762 = $761 & 1;
                 $763 = ($762<<24>>24)==(0);
                 $764 = HEAP32[$698>>2]|0;
                 $765 = $763 ? $699 : $764;
                 $766 = HEAP32[$700>>2]|0;
                 $767 = $761&255;
                 $768 = $767 >>> 1;
                 $769 = $763 ? $768 : $766;
                 __THREW__ = 0;
                 (invoke_iiii(387,($sig$i|0),($765|0),($769|0))|0);
                 $770 = __THREW__; __THREW__ = 0;
                 $771 = $770&1;
                 if ($771) {
                  label = 196;
                  break L229;
                 }
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($20);
                 $772 = (($k$0$i515) + 1)|0;
                 $773 = ($772>>>0)<($742>>>0);
                 if ($773) {
                  $k$0$i515 = $772;
                 } else {
                  break;
                 }
                }
               }
               $746 = ($733>>>0)<($742>>>0);
               if ($746) {
                $k2$0$i516 = $733;
                while(1) {
                 $776 = HEAP32[$696>>2]|0;
                 $777 = ((($776)) + -24|0);
                 $779 = $776;
                 while(1) {
                  $778 = ((($779)) + -24|0);
                  HEAP32[$696>>2] = $778;
                  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($778);
                  $$pre$i7$i = HEAP32[$696>>2]|0;
                  $780 = ($$pre$i7$i|0)==($777|0);
                  if ($780) {
                   break;
                  } else {
                   $779 = $$pre$i7$i;
                  }
                 }
                 $781 = (($k2$0$i516) + 1)|0;
                 $782 = ($781>>>0)<($742>>>0);
                 if ($782) {
                  $k2$0$i516 = $781;
                 } else {
                  $t$1$i$be = $734;
                  break;
                 }
                }
               } else {
                $t$1$i$be = $734;
               }
              }
              $719 = ($t$1$i$be|0)==($last|0);
              if ($719) {
               label = 172;
               break L228;
              } else {
               $t$1$i518 = $t$1$i$be;
              }
             }
             $702 = ($t$1$i$ph$ph|0)==($last|0);
             if ($702) {
              label = 172;
              break L228;
             } else {
              $ref_qual$0$i$ph521 = $ref_qual$0$i$ph$ph;$t$1$i$ph520 = $t$1$i$ph$ph;
             }
            }
            if ((label|0) == 174) {
             $708 = ___cxa_find_matching_catch()|0;
             $709 = tempRet0;
             $lpad$phi$index = $708;$lpad$phi$index8 = $709;
             label = 177;
            }
            else if ((label|0) == 175) {
             $710 = ___cxa_find_matching_catch()|0;
             $711 = tempRet0;
             $lpad$phi$index = $710;$lpad$phi$index8 = $711;
             label = 177;
            }
            else if ((label|0) == 179) {
             $715 = ((($t$1$i518$lcssa)) + 1|0);
             __THREW__ = 0;
             (invoke_iii(392,($sig$i|0),(16956|0))|0);
             $716 = __THREW__; __THREW__ = 0;
             $717 = $716&1;
             L261: do {
              if (!($717)) {
               switch ($ref_qual$0$i$ph521$lcssa|0) {
               case 1:  {
                __THREW__ = 0;
                (invoke_iii(392,($sig$i|0),(17056|0))|0);
                $783 = __THREW__; __THREW__ = 0;
                $784 = $783&1;
                if ($784) {
                 break L261;
                }
                break;
               }
               case 2:  {
                __THREW__ = 0;
                (invoke_iii(392,($sig$i|0),(17059|0))|0);
                $785 = __THREW__; __THREW__ = 0;
                $786 = $785&1;
                if ($786) {
                 break L261;
                }
                break;
               }
               default: {
               }
               }
               $787 = HEAP32[$db>>2]|0;
               $788 = HEAP32[$696>>2]|0;
               $789 = ($787|0)==($788|0);
               if ($789) {
                break L228;
               }
               $790 = ((($788)) + -24|0);
               __THREW__ = 0;
               (invoke_iii(392,($790|0),(17063|0))|0);
               $791 = __THREW__; __THREW__ = 0;
               $792 = $791&1;
               if (!($792)) {
                $793 = HEAP32[$696>>2]|0;
                $794 = ((($793)) + -12|0);
                $795 = HEAP8[$sig$i>>0]|0;
                $796 = $795 & 1;
                $797 = ($796<<24>>24)==(0);
                $798 = ((($sig$i)) + 8|0);
                $799 = HEAP32[$798>>2]|0;
                $800 = ((($sig$i)) + 1|0);
                $801 = $797 ? $800 : $799;
                $802 = HEAP32[$697>>2]|0;
                $803 = $795&255;
                $804 = $803 >>> 1;
                $805 = $797 ? $804 : $802;
                __THREW__ = 0;
                (invoke_iiiii(399,($794|0),0,($801|0),($805|0))|0);
                $806 = __THREW__; __THREW__ = 0;
                $807 = $806&1;
                if (!($807)) {
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($sig$i);
                 $808 = ($715|0)==($first|0);
                 if ($808) {
                  $$0 = $first;
                  break L1;
                 }
                 $809 = HEAP32[$db>>2]|0;
                 $810 = HEAP32[$696>>2]|0;
                 $811 = ($809|0)==($810|0);
                 if ($811) {
                  $$0 = $first;
                  break L1;
                 }
                 $812 = ((($db)) + 16|0);
                 $813 = ((($810)) + -24|0);
                 $814 = ((($db)) + 12|0);
                 $815 = HEAP32[$814>>2]|0;
                 HEAP32[$35>>2] = $815;
                 __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($34,$813,$35);
                 $816 = ((($db)) + 20|0);
                 $817 = HEAP32[$816>>2]|0;
                 $818 = ((($db)) + 24|0);
                 $819 = HEAP32[$818>>2]|0;
                 $820 = ($817>>>0)<($819>>>0);
                 if ($820) {
                  $821 = ((($34)) + 12|0);
                  $822 = ((($817)) + 4|0);
                  $823 = HEAP32[$821>>2]|0;
                  $824 = ((($817)) + 12|0);
                  HEAP32[$824>>2] = $823;
                  $825 = HEAP32[$34>>2]|0;
                  HEAP32[$817>>2] = $825;
                  $826 = ((($34)) + 4|0);
                  $827 = HEAP32[$826>>2]|0;
                  HEAP32[$822>>2] = $827;
                  $828 = ((($34)) + 8|0);
                  $829 = HEAP32[$828>>2]|0;
                  $830 = ((($817)) + 8|0);
                  HEAP32[$830>>2] = $829;
                  HEAP32[$828>>2] = 0;
                  HEAP32[$826>>2] = 0;
                  HEAP32[$34>>2] = 0;
                  $831 = HEAP32[$816>>2]|0;
                  $832 = ((($831)) + 16|0);
                  HEAP32[$816>>2] = $832;
                 } else {
                  $833 = ((($db)) + 28|0);
                  $834 = HEAP32[$812>>2]|0;
                  $835 = $817;
                  $836 = $834;
                  $837 = (($835) - ($836))|0;
                  $838 = $837 >> 4;
                  $839 = (($838) + 1)|0;
                  $840 = ($837|0)<(-16);
                  if ($840) {
                   __THREW__ = 0;
                   invoke_vi(402,($812|0));
                   $841 = __THREW__; __THREW__ = 0;
                   $842 = ___cxa_find_matching_catch()|0;
                   $843 = tempRet0;
                   __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($34);
                   $$10 = $842;$$1013 = $843;
                   break L73;
                  }
                  $844 = $819;
                  $845 = (($844) - ($836))|0;
                  $846 = $845 >> 4;
                  $847 = ($846>>>0)<(1073741823);
                  if ($847) {
                   $848 = $845 >> 3;
                   $849 = ($848>>>0)<($839>>>0);
                   $850 = $849 ? $839 : $848;
                   $$0$i$i$i66 = $850;
                  } else {
                   $$0$i$i$i66 = 2147483647;
                  }
                  __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i65,$$0$i$i$i66,$838,$833);
                  $851 = ((($__v$i$i65)) + 8|0);
                  $852 = HEAP32[$851>>2]|0;
                  $853 = ((($34)) + 12|0);
                  $854 = ((($852)) + 4|0);
                  $855 = HEAP32[$853>>2]|0;
                  $856 = ((($852)) + 12|0);
                  HEAP32[$856>>2] = $855;
                  $857 = HEAP32[$34>>2]|0;
                  HEAP32[$852>>2] = $857;
                  $858 = ((($34)) + 4|0);
                  $859 = HEAP32[$858>>2]|0;
                  HEAP32[$854>>2] = $859;
                  $860 = ((($34)) + 8|0);
                  $861 = HEAP32[$860>>2]|0;
                  $862 = ((($852)) + 8|0);
                  HEAP32[$862>>2] = $861;
                  HEAP32[$860>>2] = 0;
                  HEAP32[$858>>2] = 0;
                  HEAP32[$34>>2] = 0;
                  $863 = ((($852)) + 16|0);
                  HEAP32[$851>>2] = $863;
                  __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($812,$__v$i$i65);
                  __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i65);
                 }
                 __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($34);
                 $$0 = $715;
                 break L1;
                }
               }
              }
             } while(0);
             $712 = ___cxa_find_matching_catch()|0;
             $713 = tempRet0;
             $lpad$phi$index = $712;$lpad$phi$index8 = $713;
             label = 177;
            }
            else if ((label|0) == 196) {
             $774 = ___cxa_find_matching_catch()|0;
             $775 = tempRet0;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($20);
             $$04$i = $775;$$05$i = $774;
            }
            if ((label|0) == 177) {
             $$04$i = $lpad$phi$index8;$$05$i = $lpad$phi$index;
            }
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($sig$i);
            ___resumeException($$05$i|0);
            // unreachable;
           }
          } while(0);
          if ((label|0) == 172) {
           $703 = HEAP32[$696>>2]|0;
           $704 = ((($703)) + -24|0);
           $706 = $703;
           while(1) {
            $705 = ((($706)) + -24|0);
            HEAP32[$696>>2] = $705;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($705);
            $$pre$i$i183 = HEAP32[$696>>2]|0;
            $707 = ($$pre$i$i183|0)==($704|0);
            if ($707) {
             break;
            } else {
             $706 = $$pre$i$i183;
            }
           }
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($sig$i);
         }
        }
       }
      } while(0);
      $$0 = $first;
      break L1;
      break;
     }
     case 71:  {
      $864 = ((($first)) + 1|0);
      $865 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($864,$last,$db)|0);
      $866 = ($865|0)==($864|0);
      if ($866) {
       $$0 = $first;
       break L1;
      }
      $867 = HEAP32[$db>>2]|0;
      $868 = ((($db)) + 4|0);
      $869 = HEAP32[$868>>2]|0;
      $870 = ($867|0)==($869|0);
      if ($870) {
       $$0 = $first;
       break L1;
      }
      $871 = ((($869)) + -24|0);
      (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($871,17065)|0);
      $872 = ((($db)) + 16|0);
      $873 = HEAP32[$868>>2]|0;
      $874 = ((($873)) + -24|0);
      $875 = ((($db)) + 12|0);
      $876 = HEAP32[$875>>2]|0;
      HEAP32[$37>>2] = $876;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($36,$874,$37);
      $877 = ((($db)) + 20|0);
      $878 = HEAP32[$877>>2]|0;
      $879 = ((($db)) + 24|0);
      $880 = HEAP32[$879>>2]|0;
      $881 = ($878>>>0)<($880>>>0);
      if ($881) {
       $882 = ((($36)) + 12|0);
       $883 = ((($878)) + 4|0);
       $884 = HEAP32[$882>>2]|0;
       $885 = ((($878)) + 12|0);
       HEAP32[$885>>2] = $884;
       $886 = HEAP32[$36>>2]|0;
       HEAP32[$878>>2] = $886;
       $887 = ((($36)) + 4|0);
       $888 = HEAP32[$887>>2]|0;
       HEAP32[$883>>2] = $888;
       $889 = ((($36)) + 8|0);
       $890 = HEAP32[$889>>2]|0;
       $891 = ((($878)) + 8|0);
       HEAP32[$891>>2] = $890;
       HEAP32[$889>>2] = 0;
       HEAP32[$887>>2] = 0;
       HEAP32[$36>>2] = 0;
       $892 = HEAP32[$877>>2]|0;
       $893 = ((($892)) + 16|0);
       HEAP32[$877>>2] = $893;
      } else {
       $894 = ((($db)) + 28|0);
       $895 = HEAP32[$872>>2]|0;
       $896 = $878;
       $897 = $895;
       $898 = (($896) - ($897))|0;
       $899 = $898 >> 4;
       $900 = (($899) + 1)|0;
       $901 = ($898|0)<(-16);
       if ($901) {
        __THREW__ = 0;
        invoke_vi(402,($872|0));
        $902 = __THREW__; __THREW__ = 0;
        $903 = ___cxa_find_matching_catch()|0;
        $904 = tempRet0;
        __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($36);
        $$10 = $903;$$1013 = $904;
        break L73;
       }
       $905 = $880;
       $906 = (($905) - ($897))|0;
       $907 = $906 >> 4;
       $908 = ($907>>>0)<(1073741823);
       if ($908) {
        $909 = $906 >> 3;
        $910 = ($909>>>0)<($900>>>0);
        $911 = $910 ? $900 : $909;
        $$0$i$i$i71 = $911;
       } else {
        $$0$i$i$i71 = 2147483647;
       }
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i70,$$0$i$i$i71,$899,$894);
       $912 = ((($__v$i$i70)) + 8|0);
       $913 = HEAP32[$912>>2]|0;
       $914 = ((($36)) + 12|0);
       $915 = ((($913)) + 4|0);
       $916 = HEAP32[$914>>2]|0;
       $917 = ((($913)) + 12|0);
       HEAP32[$917>>2] = $916;
       $918 = HEAP32[$36>>2]|0;
       HEAP32[$913>>2] = $918;
       $919 = ((($36)) + 4|0);
       $920 = HEAP32[$919>>2]|0;
       HEAP32[$915>>2] = $920;
       $921 = ((($36)) + 8|0);
       $922 = HEAP32[$921>>2]|0;
       $923 = ((($913)) + 8|0);
       HEAP32[$923>>2] = $922;
       HEAP32[$921>>2] = 0;
       HEAP32[$919>>2] = 0;
       HEAP32[$36>>2] = 0;
       $924 = ((($913)) + 16|0);
       HEAP32[$912>>2] = $924;
       __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($872,$__v$i$i70);
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i70);
      }
      __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($36);
      $$0 = $865;
      break L1;
      break;
     }
     case 77:  {
      $925 = ($229<<24>>24)==(77);
      do {
       if ($925) {
        $926 = ((($first)) + 1|0);
        $927 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($926,$last,$db)|0);
        $928 = ($927|0)==($926|0);
        if ($928) {
         $$08$i = $first;
        } else {
         $929 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($927,$last,$db)|0);
         $930 = ($929|0)==($927|0);
         if ($930) {
          $$08$i = $first;
         } else {
          $931 = ((($db)) + 4|0);
          $932 = HEAP32[$931>>2]|0;
          $933 = HEAP32[$db>>2]|0;
          $934 = $932;
          $935 = $933;
          $936 = (($934) - ($935))|0;
          $937 = (($936|0) / 24)&-1;
          $938 = ($937>>>0)<(2);
          if ($938) {
           $$08$i = $first;
          } else {
           $939 = ((($932)) + -24|0);
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($func$i,$939);
           $940 = HEAP32[$931>>2]|0;
           $941 = ((($940)) + -24|0);
           $943 = $940;
           while(1) {
            $942 = ((($943)) + -24|0);
            HEAP32[$931>>2] = $942;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($942);
            $$pre$i$i = HEAP32[$931>>2]|0;
            $944 = ($$pre$i$i|0)==($941|0);
            if ($944) {
             break;
            } else {
             $943 = $$pre$i$i;
            }
           }
           $945 = ((($940)) + -48|0);
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($class_type$i,$945);
           $946 = ((($func$i)) + 12|0);
           $947 = HEAP8[$946>>0]|0;
           $948 = $947 & 1;
           $949 = ($948<<24>>24)==(0);
           $950 = ((($func$i)) + 20|0);
           $951 = HEAP32[$950>>2]|0;
           $952 = ((($946)) + 1|0);
           $953 = $949 ? $952 : $951;
           $954 = HEAP8[$953>>0]|0;
           $955 = ($954<<24>>24)==(40);
           $956 = HEAP32[$931>>2]|0;
           $957 = ((($956)) + -24|0);
           __THREW__ = 0;
           L317: do {
            if ($955) {
             $958 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($func$i,17051)|0);
             $959 = __THREW__; __THREW__ = 0;
             $960 = $959&1;
             if ($960) {
              label = 277;
             } else {
              ;HEAP32[$23>>2]=HEAP32[$958>>2]|0;HEAP32[$23+4>>2]=HEAP32[$958+4>>2]|0;HEAP32[$23+8>>2]=HEAP32[$958+8>>2]|0;
              HEAP32[$958>>2] = 0;
              $961 = ((($958)) + 4|0);
              HEAP32[$961>>2] = 0;
              $962 = ((($958)) + 8|0);
              HEAP32[$962>>2] = 0;
              __THREW__ = 0;
              invoke_vii(396,($24|0),($class_type$i|0));
              $963 = __THREW__; __THREW__ = 0;
              $964 = $963&1;
              if ($964) {
               $1088 = ___cxa_find_matching_catch()|0;
               $1089 = tempRet0;
               $$2$i = $1089;$$23$i = $1088;
              } else {
               $965 = HEAP8[$24>>0]|0;
               $966 = $965 & 1;
               $967 = ($966<<24>>24)==(0);
               $968 = ((($24)) + 8|0);
               $969 = HEAP32[$968>>2]|0;
               $970 = ((($24)) + 1|0);
               $971 = $967 ? $970 : $969;
               $972 = ((($24)) + 4|0);
               $973 = HEAP32[$972>>2]|0;
               $974 = $965&255;
               $975 = $974 >>> 1;
               $976 = $967 ? $975 : $973;
               __THREW__ = 0;
               $977 = (invoke_iiii(387,($23|0),($971|0),($976|0))|0);
               $978 = __THREW__; __THREW__ = 0;
               $979 = $978&1;
               do {
                if ($979) {
                 $1090 = ___cxa_find_matching_catch()|0;
                 $1091 = tempRet0;
                 $$1$i = $1091;$$12$i = $1090;
                } else {
                 ;HEAP32[$22>>2]=HEAP32[$977>>2]|0;HEAP32[$22+4>>2]=HEAP32[$977+4>>2]|0;HEAP32[$22+8>>2]=HEAP32[$977+8>>2]|0;
                 HEAP32[$977>>2] = 0;
                 $980 = ((($977)) + 4|0);
                 HEAP32[$980>>2] = 0;
                 $981 = ((($977)) + 8|0);
                 HEAP32[$981>>2] = 0;
                 __THREW__ = 0;
                 $982 = (invoke_iii(392,($22|0),(17076|0))|0);
                 $983 = __THREW__; __THREW__ = 0;
                 $984 = $983&1;
                 if ($984) {
                  $1092 = ___cxa_find_matching_catch()|0;
                  $1093 = tempRet0;
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($22);
                  $$1$i = $1093;$$12$i = $1092;
                  break;
                 }
                 ;HEAP32[$21>>2]=HEAP32[$982>>2]|0;HEAP32[$21+4>>2]=HEAP32[$982+4>>2]|0;HEAP32[$21+8>>2]=HEAP32[$982+8>>2]|0;
                 HEAP32[$982>>2] = 0;
                 $985 = ((($982)) + 4|0);
                 HEAP32[$985>>2] = 0;
                 $986 = ((($982)) + 8|0);
                 HEAP32[$986>>2] = 0;
                 $987 = HEAP8[$957>>0]|0;
                 $988 = $987 & 1;
                 $989 = ($988<<24>>24)==(0);
                 do {
                  if ($989) {
                   $990 = ((($957)) + 1|0);
                   HEAP8[$990>>0] = 0;
                   HEAP8[$957>>0] = 0;
                  } else {
                   $991 = ((($956)) + -16|0);
                   $992 = HEAP32[$991>>2]|0;
                   HEAP8[$992>>0] = 0;
                   $993 = ((($956)) + -20|0);
                   HEAP32[$993>>2] = 0;
                   $$pre$i$i$i$i = HEAP8[$957>>0]|0;
                   $994 = $$pre$i$i$i$i & 1;
                   $995 = ($994<<24>>24)==(0);
                   if ($995) {
                    $1000 = $$pre$i$i$i$i;$1009 = 10;
                   } else {
                    $996 = HEAP32[$957>>2]|0;
                    $997 = $996 & -2;
                    $phitmp$i$i$i$i$i$i$i = (($997) + -1)|0;
                    $998 = $996&255;
                    $1000 = $998;$1009 = $phitmp$i$i$i$i$i$i$i;
                   }
                   $999 = $1000 & 1;
                   $1001 = ($999<<24>>24)==(0);
                   do {
                    if ($1001) {
                     $1002 = $1000&255;
                     $1003 = $1002 >>> 1;
                     $1004 = ($1000&255)<(22);
                     if ($1004) {
                      $1008 = 10;$1028 = $1003;$2883 = 1;
                      break;
                     }
                     $1005 = (($1003) + 16)|0;
                     $1006 = $1005 & 240;
                     $phitmp$i2$i$i$i$i$i$i = (($1006) + -1)|0;
                     $1008 = $phitmp$i2$i$i$i$i$i$i;$1028 = $1003;$2883 = 1;
                    } else {
                     $1008 = 10;$1028 = 0;$2883 = 0;
                    }
                   } while(0);
                   $1007 = ($1008|0)==($1009|0);
                   if ($1007) {
                    break;
                   }
                   $1010 = ($1008|0)==(10);
                   if ($1010) {
                    $1015 = ((($957)) + 1|0);
                    $1016 = HEAP32[$991>>2]|0;
                    if ($2883) {
                     $1017 = $1000&255;
                     $1018 = $1017 >>> 1;
                     $1019 = (($1018) + 1)|0;
                     _memcpy(($1015|0),($1016|0),($1019|0))|0;
                     _free($1016);
                    } else {
                     $1024 = HEAP8[$1016>>0]|0;
                     HEAP8[$1015>>0] = $1024;
                     _free($1016);
                    }
                    $1029 = $1028 << 1;
                    $1030 = $1029&255;
                    HEAP8[$957>>0] = $1030;
                    break;
                   }
                   $1011 = ($1008>>>0)<=($1009>>>0);
                   $1012 = (($1008) + 1)|0;
                   $1013 = (_malloc($1012)|0);
                   $1014 = ($1013|0)==(0|0);
                   $or$cond$i$i$i$i$i$i = $1011 & $1014;
                   if ($or$cond$i$i$i$i$i$i) {
                    break;
                   }
                   if ($2883) {
                    $1020 = ((($957)) + 1|0);
                    $1021 = $1000&255;
                    $1022 = $1021 >>> 1;
                    $1023 = (($1022) + 1)|0;
                    _memcpy(($1013|0),($1020|0),($1023|0))|0;
                   } else {
                    $1025 = HEAP32[$991>>2]|0;
                    $1026 = HEAP8[$1025>>0]|0;
                    HEAP8[$1013>>0] = $1026;
                    _free($1025);
                   }
                   $1027 = $1012 | 1;
                   HEAP32[$957>>2] = $1027;
                   HEAP32[$993>>2] = $1028;
                   HEAP32[$991>>2] = $1013;
                  }
                 } while(0);
                 ;HEAP32[$957>>2]=HEAP32[$21>>2]|0;HEAP32[$957+4>>2]=HEAP32[$21+4>>2]|0;HEAP32[$957+8>>2]=HEAP32[$21+8>>2]|0;
                 HEAP32[$21>>2] = 0;
                 $1031 = ((($21)) + 4|0);
                 HEAP32[$1031>>2] = 0;
                 $1032 = ((($21)) + 8|0);
                 HEAP32[$1032>>2] = 0;
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($21);
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($22);
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($24);
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($23);
                 $1033 = HEAP32[$931>>2]|0;
                 __THREW__ = 0;
                 $1034 = (invoke_iiii(391,($946|0),0,(16956|0))|0);
                 $1035 = __THREW__; __THREW__ = 0;
                 $1036 = $1035&1;
                 if ($1036) {
                  label = 277;
                  break L317;
                 }
                 ;HEAP32[$25>>2]=HEAP32[$1034>>2]|0;HEAP32[$25+4>>2]=HEAP32[$1034+4>>2]|0;HEAP32[$25+8>>2]=HEAP32[$1034+8>>2]|0;
                 HEAP32[$1034>>2] = 0;
                 $1037 = ((($1034)) + 4|0);
                 HEAP32[$1037>>2] = 0;
                 $1038 = ((($1034)) + 8|0);
                 HEAP32[$1038>>2] = 0;
                 $1039 = ((($1033)) + -12|0);
                 $1040 = HEAP8[$1039>>0]|0;
                 $1041 = $1040 & 1;
                 $1042 = ($1041<<24>>24)==(0);
                 do {
                  if ($1042) {
                   $1043 = ((($1039)) + 1|0);
                   HEAP8[$1043>>0] = 0;
                   HEAP8[$1039>>0] = 0;
                  } else {
                   $1044 = ((($1033)) + -4|0);
                   $1045 = HEAP32[$1044>>2]|0;
                   HEAP8[$1045>>0] = 0;
                   $1046 = ((($1033)) + -8|0);
                   HEAP32[$1046>>2] = 0;
                   $$pre$i$i$i21$i = HEAP8[$1039>>0]|0;
                   $1047 = $$pre$i$i$i21$i & 1;
                   $1048 = ($1047<<24>>24)==(0);
                   if ($1048) {
                    $1053 = $$pre$i$i$i21$i;$1062 = 10;
                   } else {
                    $1049 = HEAP32[$1039>>2]|0;
                    $1050 = $1049 & -2;
                    $phitmp$i$i$i$i$i$i23$i = (($1050) + -1)|0;
                    $1051 = $1049&255;
                    $1053 = $1051;$1062 = $phitmp$i$i$i$i$i$i23$i;
                   }
                   $1052 = $1053 & 1;
                   $1054 = ($1052<<24>>24)==(0);
                   do {
                    if ($1054) {
                     $1055 = $1053&255;
                     $1056 = $1055 >>> 1;
                     $1057 = ($1053&255)<(22);
                     if ($1057) {
                      $1061 = 10;$1081 = $1056;$2884 = 1;
                      break;
                     }
                     $1058 = (($1056) + 16)|0;
                     $1059 = $1058 & 240;
                     $phitmp$i2$i$i$i$i$i26$i = (($1059) + -1)|0;
                     $1061 = $phitmp$i2$i$i$i$i$i26$i;$1081 = $1056;$2884 = 1;
                    } else {
                     $1061 = 10;$1081 = 0;$2884 = 0;
                    }
                   } while(0);
                   $1060 = ($1061|0)==($1062|0);
                   if ($1060) {
                    break;
                   }
                   $1063 = ($1061|0)==(10);
                   if ($1063) {
                    $1068 = ((($1039)) + 1|0);
                    $1069 = HEAP32[$1044>>2]|0;
                    if ($2884) {
                     $1070 = $1053&255;
                     $1071 = $1070 >>> 1;
                     $1072 = (($1071) + 1)|0;
                     _memcpy(($1068|0),($1069|0),($1072|0))|0;
                     _free($1069);
                    } else {
                     $1077 = HEAP8[$1069>>0]|0;
                     HEAP8[$1068>>0] = $1077;
                     _free($1069);
                    }
                    $1082 = $1081 << 1;
                    $1083 = $1082&255;
                    HEAP8[$1039>>0] = $1083;
                    break;
                   }
                   $1064 = ($1061>>>0)<=($1062>>>0);
                   $1065 = (($1061) + 1)|0;
                   $1066 = (_malloc($1065)|0);
                   $1067 = ($1066|0)==(0|0);
                   $or$cond$i$i$i$i$i28$i = $1064 & $1067;
                   if ($or$cond$i$i$i$i$i28$i) {
                    break;
                   }
                   if ($2884) {
                    $1073 = ((($1039)) + 1|0);
                    $1074 = $1053&255;
                    $1075 = $1074 >>> 1;
                    $1076 = (($1075) + 1)|0;
                    _memcpy(($1066|0),($1073|0),($1076|0))|0;
                   } else {
                    $1078 = HEAP32[$1044>>2]|0;
                    $1079 = HEAP8[$1078>>0]|0;
                    HEAP8[$1066>>0] = $1079;
                    _free($1078);
                   }
                   $1080 = $1065 | 1;
                   HEAP32[$1039>>2] = $1080;
                   HEAP32[$1046>>2] = $1081;
                   HEAP32[$1044>>2] = $1066;
                  }
                 } while(0);
                 ;HEAP32[$1039>>2]=HEAP32[$25>>2]|0;HEAP32[$1039+4>>2]=HEAP32[$25+4>>2]|0;HEAP32[$1039+8>>2]=HEAP32[$25+8>>2]|0;
                 HEAP32[$25>>2] = 0;
                 $1084 = ((($25)) + 4|0);
                 HEAP32[$1084>>2] = 0;
                 $1085 = ((($25)) + 8|0);
                 HEAP32[$1085>>2] = 0;
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($25);
                 label = 329;
                 break L317;
                }
               } while(0);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($24);
               $$2$i = $$1$i;$$23$i = $$12$i;
              }
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($23);
              $$6$i = $$2$i;$$67$i = $$23$i;
             }
            } else {
             $1094 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($func$i,17063)|0);
             $1095 = __THREW__; __THREW__ = 0;
             $1096 = $1095&1;
             if ($1096) {
              label = 277;
             } else {
              ;HEAP32[$28>>2]=HEAP32[$1094>>2]|0;HEAP32[$28+4>>2]=HEAP32[$1094+4>>2]|0;HEAP32[$28+8>>2]=HEAP32[$1094+8>>2]|0;
              HEAP32[$1094>>2] = 0;
              $1097 = ((($1094)) + 4|0);
              HEAP32[$1097>>2] = 0;
              $1098 = ((($1094)) + 8|0);
              HEAP32[$1098>>2] = 0;
              __THREW__ = 0;
              invoke_vii(396,($29|0),($class_type$i|0));
              $1099 = __THREW__; __THREW__ = 0;
              $1100 = $1099&1;
              if ($1100) {
               $1217 = ___cxa_find_matching_catch()|0;
               $1218 = tempRet0;
               $$5$i = $1218;$$56$i = $1217;
              } else {
               $1101 = HEAP8[$29>>0]|0;
               $1102 = $1101 & 1;
               $1103 = ($1102<<24>>24)==(0);
               $1104 = ((($29)) + 8|0);
               $1105 = HEAP32[$1104>>2]|0;
               $1106 = ((($29)) + 1|0);
               $1107 = $1103 ? $1106 : $1105;
               $1108 = ((($29)) + 4|0);
               $1109 = HEAP32[$1108>>2]|0;
               $1110 = $1101&255;
               $1111 = $1110 >>> 1;
               $1112 = $1103 ? $1111 : $1109;
               __THREW__ = 0;
               $1113 = (invoke_iiii(387,($28|0),($1107|0),($1112|0))|0);
               $1114 = __THREW__; __THREW__ = 0;
               $1115 = $1114&1;
               do {
                if ($1115) {
                 $1219 = ___cxa_find_matching_catch()|0;
                 $1220 = tempRet0;
                 $$4$i = $1220;$$45$i = $1219;
                } else {
                 ;HEAP32[$27>>2]=HEAP32[$1113>>2]|0;HEAP32[$27+4>>2]=HEAP32[$1113+4>>2]|0;HEAP32[$27+8>>2]=HEAP32[$1113+8>>2]|0;
                 HEAP32[$1113>>2] = 0;
                 $1116 = ((($1113)) + 4|0);
                 HEAP32[$1116>>2] = 0;
                 $1117 = ((($1113)) + 8|0);
                 HEAP32[$1117>>2] = 0;
                 __THREW__ = 0;
                 $1118 = (invoke_iii(392,($27|0),(17076|0))|0);
                 $1119 = __THREW__; __THREW__ = 0;
                 $1120 = $1119&1;
                 if ($1120) {
                  $1221 = ___cxa_find_matching_catch()|0;
                  $1222 = tempRet0;
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($27);
                  $$4$i = $1222;$$45$i = $1221;
                  break;
                 }
                 ;HEAP32[$26>>2]=HEAP32[$1118>>2]|0;HEAP32[$26+4>>2]=HEAP32[$1118+4>>2]|0;HEAP32[$26+8>>2]=HEAP32[$1118+8>>2]|0;
                 HEAP32[$1118>>2] = 0;
                 $1121 = ((($1118)) + 4|0);
                 HEAP32[$1121>>2] = 0;
                 $1122 = ((($1118)) + 8|0);
                 HEAP32[$1122>>2] = 0;
                 $1123 = HEAP8[$957>>0]|0;
                 $1124 = $1123 & 1;
                 $1125 = ($1124<<24>>24)==(0);
                 do {
                  if ($1125) {
                   $1126 = ((($957)) + 1|0);
                   HEAP8[$1126>>0] = 0;
                   HEAP8[$957>>0] = 0;
                  } else {
                   $1127 = ((($956)) + -16|0);
                   $1128 = HEAP32[$1127>>2]|0;
                   HEAP8[$1128>>0] = 0;
                   $1129 = ((($956)) + -20|0);
                   HEAP32[$1129>>2] = 0;
                   $$pre$i$i$i52$i = HEAP8[$957>>0]|0;
                   $1130 = $$pre$i$i$i52$i & 1;
                   $1131 = ($1130<<24>>24)==(0);
                   if ($1131) {
                    $1136 = $$pre$i$i$i52$i;$1145 = 10;
                   } else {
                    $1132 = HEAP32[$957>>2]|0;
                    $1133 = $1132 & -2;
                    $phitmp$i$i$i$i$i$i54$i = (($1133) + -1)|0;
                    $1134 = $1132&255;
                    $1136 = $1134;$1145 = $phitmp$i$i$i$i$i$i54$i;
                   }
                   $1135 = $1136 & 1;
                   $1137 = ($1135<<24>>24)==(0);
                   do {
                    if ($1137) {
                     $1138 = $1136&255;
                     $1139 = $1138 >>> 1;
                     $1140 = ($1136&255)<(22);
                     if ($1140) {
                      $1144 = 10;$1164 = $1139;$2885 = 1;
                      break;
                     }
                     $1141 = (($1139) + 16)|0;
                     $1142 = $1141 & 240;
                     $phitmp$i2$i$i$i$i$i57$i = (($1142) + -1)|0;
                     $1144 = $phitmp$i2$i$i$i$i$i57$i;$1164 = $1139;$2885 = 1;
                    } else {
                     $1144 = 10;$1164 = 0;$2885 = 0;
                    }
                   } while(0);
                   $1143 = ($1144|0)==($1145|0);
                   if ($1143) {
                    break;
                   }
                   $1146 = ($1144|0)==(10);
                   if ($1146) {
                    $1151 = ((($957)) + 1|0);
                    $1152 = HEAP32[$1127>>2]|0;
                    if ($2885) {
                     $1153 = $1136&255;
                     $1154 = $1153 >>> 1;
                     $1155 = (($1154) + 1)|0;
                     _memcpy(($1151|0),($1152|0),($1155|0))|0;
                     _free($1152);
                    } else {
                     $1160 = HEAP8[$1152>>0]|0;
                     HEAP8[$1151>>0] = $1160;
                     _free($1152);
                    }
                    $1165 = $1164 << 1;
                    $1166 = $1165&255;
                    HEAP8[$957>>0] = $1166;
                    break;
                   }
                   $1147 = ($1144>>>0)<=($1145>>>0);
                   $1148 = (($1144) + 1)|0;
                   $1149 = (_malloc($1148)|0);
                   $1150 = ($1149|0)==(0|0);
                   $or$cond$i$i$i$i$i59$i = $1147 & $1150;
                   if ($or$cond$i$i$i$i$i59$i) {
                    break;
                   }
                   if ($2885) {
                    $1156 = ((($957)) + 1|0);
                    $1157 = $1136&255;
                    $1158 = $1157 >>> 1;
                    $1159 = (($1158) + 1)|0;
                    _memcpy(($1149|0),($1156|0),($1159|0))|0;
                   } else {
                    $1161 = HEAP32[$1127>>2]|0;
                    $1162 = HEAP8[$1161>>0]|0;
                    HEAP8[$1149>>0] = $1162;
                    _free($1161);
                   }
                   $1163 = $1148 | 1;
                   HEAP32[$957>>2] = $1163;
                   HEAP32[$1129>>2] = $1164;
                   HEAP32[$1127>>2] = $1149;
                  }
                 } while(0);
                 ;HEAP32[$957>>2]=HEAP32[$26>>2]|0;HEAP32[$957+4>>2]=HEAP32[$26+4>>2]|0;HEAP32[$957+8>>2]=HEAP32[$26+8>>2]|0;
                 HEAP32[$26>>2] = 0;
                 $1167 = ((($26)) + 4|0);
                 HEAP32[$1167>>2] = 0;
                 $1168 = ((($26)) + 8|0);
                 HEAP32[$1168>>2] = 0;
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($26);
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($27);
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($29);
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($28);
                 $1169 = HEAP32[$931>>2]|0;
                 $1170 = ((($1169)) + -12|0);
                 $1171 = HEAP8[$1170>>0]|0;
                 $1172 = $1171 & 1;
                 $1173 = ($1172<<24>>24)==(0);
                 do {
                  if ($1173) {
                   $1174 = ((($1170)) + 1|0);
                   HEAP8[$1174>>0] = 0;
                   HEAP8[$1170>>0] = 0;
                  } else {
                   $1175 = ((($1169)) + -4|0);
                   $1176 = HEAP32[$1175>>2]|0;
                   HEAP8[$1176>>0] = 0;
                   $1177 = ((($1169)) + -8|0);
                   HEAP32[$1177>>2] = 0;
                   $$pre$i$i$i71$i = HEAP8[$1170>>0]|0;
                   $1178 = $$pre$i$i$i71$i & 1;
                   $1179 = ($1178<<24>>24)==(0);
                   if ($1179) {
                    $1184 = $$pre$i$i$i71$i;$1193 = 10;
                   } else {
                    $1180 = HEAP32[$1170>>2]|0;
                    $1181 = $1180 & -2;
                    $phitmp$i$i$i$i$i$i73$i = (($1181) + -1)|0;
                    $1182 = $1180&255;
                    $1184 = $1182;$1193 = $phitmp$i$i$i$i$i$i73$i;
                   }
                   $1183 = $1184 & 1;
                   $1185 = ($1183<<24>>24)==(0);
                   do {
                    if ($1185) {
                     $1186 = $1184&255;
                     $1187 = $1186 >>> 1;
                     $1188 = ($1184&255)<(22);
                     if ($1188) {
                      $1192 = 10;$1212 = $1187;$2886 = 1;
                      break;
                     }
                     $1189 = (($1187) + 16)|0;
                     $1190 = $1189 & 240;
                     $phitmp$i2$i$i$i$i$i76$i = (($1190) + -1)|0;
                     $1192 = $phitmp$i2$i$i$i$i$i76$i;$1212 = $1187;$2886 = 1;
                    } else {
                     $1192 = 10;$1212 = 0;$2886 = 0;
                    }
                   } while(0);
                   $1191 = ($1192|0)==($1193|0);
                   if ($1191) {
                    break;
                   }
                   $1194 = ($1192|0)==(10);
                   if ($1194) {
                    $1199 = ((($1170)) + 1|0);
                    $1200 = HEAP32[$1175>>2]|0;
                    if ($2886) {
                     $1201 = $1184&255;
                     $1202 = $1201 >>> 1;
                     $1203 = (($1202) + 1)|0;
                     _memcpy(($1199|0),($1200|0),($1203|0))|0;
                     _free($1200);
                    } else {
                     $1208 = HEAP8[$1200>>0]|0;
                     HEAP8[$1199>>0] = $1208;
                     _free($1200);
                    }
                    $1213 = $1212 << 1;
                    $1214 = $1213&255;
                    HEAP8[$1170>>0] = $1214;
                    break;
                   }
                   $1195 = ($1192>>>0)<=($1193>>>0);
                   $1196 = (($1192) + 1)|0;
                   $1197 = (_malloc($1196)|0);
                   $1198 = ($1197|0)==(0|0);
                   $or$cond$i$i$i$i$i78$i = $1195 & $1198;
                   if ($or$cond$i$i$i$i$i78$i) {
                    break;
                   }
                   if ($2886) {
                    $1204 = ((($1170)) + 1|0);
                    $1205 = $1184&255;
                    $1206 = $1205 >>> 1;
                    $1207 = (($1206) + 1)|0;
                    _memcpy(($1197|0),($1204|0),($1207|0))|0;
                   } else {
                    $1209 = HEAP32[$1175>>2]|0;
                    $1210 = HEAP8[$1209>>0]|0;
                    HEAP8[$1197>>0] = $1210;
                    _free($1209);
                   }
                   $1211 = $1196 | 1;
                   HEAP32[$1170>>2] = $1211;
                   HEAP32[$1177>>2] = $1212;
                   HEAP32[$1175>>2] = $1197;
                  }
                 } while(0);
                 ;HEAP32[$1170>>2]=HEAP32[$946>>2]|0;HEAP32[$1170+4>>2]=HEAP32[$946+4>>2]|0;HEAP32[$1170+8>>2]=HEAP32[$946+8>>2]|0;
                 HEAP32[$946>>2] = 0;
                 $1215 = ((($946)) + 4|0);
                 HEAP32[$1215>>2] = 0;
                 $1216 = ((($946)) + 8|0);
                 HEAP32[$1216>>2] = 0;
                 label = 329;
                 break L317;
                }
               } while(0);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($29);
               $$5$i = $$4$i;$$56$i = $$45$i;
              }
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($28);
              $$6$i = $$5$i;$$67$i = $$56$i;
             }
            }
           } while(0);
           if ((label|0) == 277) {
            $1086 = ___cxa_find_matching_catch()|0;
            $1087 = tempRet0;
            $$6$i = $1087;$$67$i = $1086;
           }
           else if ((label|0) == 329) {
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($class_type$i);
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($func$i);
            $$08$i = $929;
            break;
           }
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($class_type$i);
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($func$i);
           ___resumeException($$67$i|0);
           // unreachable;
          }
         }
        }
       } else {
        $$08$i = $first;
       }
      } while(0);
      $1223 = ($$08$i|0)==($first|0);
      if ($1223) {
       $$0 = $first;
       break L1;
      }
      $1224 = HEAP32[$db>>2]|0;
      $1225 = ((($db)) + 4|0);
      $1226 = HEAP32[$1225>>2]|0;
      $1227 = ($1224|0)==($1226|0);
      if ($1227) {
       $$0 = $first;
       break L1;
      }
      $1228 = ((($db)) + 16|0);
      $1229 = ((($1226)) + -24|0);
      $1230 = ((($db)) + 12|0);
      $1231 = HEAP32[$1230>>2]|0;
      HEAP32[$39>>2] = $1231;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($38,$1229,$39);
      $1232 = ((($db)) + 20|0);
      $1233 = HEAP32[$1232>>2]|0;
      $1234 = ((($db)) + 24|0);
      $1235 = HEAP32[$1234>>2]|0;
      $1236 = ($1233>>>0)<($1235>>>0);
      if ($1236) {
       $1237 = ((($38)) + 12|0);
       $1238 = ((($1233)) + 4|0);
       $1239 = HEAP32[$1237>>2]|0;
       $1240 = ((($1233)) + 12|0);
       HEAP32[$1240>>2] = $1239;
       $1241 = HEAP32[$38>>2]|0;
       HEAP32[$1233>>2] = $1241;
       $1242 = ((($38)) + 4|0);
       $1243 = HEAP32[$1242>>2]|0;
       HEAP32[$1238>>2] = $1243;
       $1244 = ((($38)) + 8|0);
       $1245 = HEAP32[$1244>>2]|0;
       $1246 = ((($1233)) + 8|0);
       HEAP32[$1246>>2] = $1245;
       HEAP32[$1244>>2] = 0;
       HEAP32[$1242>>2] = 0;
       HEAP32[$38>>2] = 0;
       $1247 = HEAP32[$1232>>2]|0;
       $1248 = ((($1247)) + 16|0);
       HEAP32[$1232>>2] = $1248;
      } else {
       $1249 = ((($db)) + 28|0);
       $1250 = HEAP32[$1228>>2]|0;
       $1251 = $1233;
       $1252 = $1250;
       $1253 = (($1251) - ($1252))|0;
       $1254 = $1253 >> 4;
       $1255 = (($1254) + 1)|0;
       $1256 = ($1253|0)<(-16);
       if ($1256) {
        __THREW__ = 0;
        invoke_vi(402,($1228|0));
        $1257 = __THREW__; __THREW__ = 0;
        $1258 = ___cxa_find_matching_catch()|0;
        $1259 = tempRet0;
        __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($38);
        $$10 = $1258;$$1013 = $1259;
        break L73;
       }
       $1260 = $1235;
       $1261 = (($1260) - ($1252))|0;
       $1262 = $1261 >> 4;
       $1263 = ($1262>>>0)<(1073741823);
       if ($1263) {
        $1264 = $1261 >> 3;
        $1265 = ($1264>>>0)<($1255>>>0);
        $1266 = $1265 ? $1255 : $1264;
        $$0$i$i$i76 = $1266;
       } else {
        $$0$i$i$i76 = 2147483647;
       }
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i75,$$0$i$i$i76,$1254,$1249);
       $1267 = ((($__v$i$i75)) + 8|0);
       $1268 = HEAP32[$1267>>2]|0;
       $1269 = ((($38)) + 12|0);
       $1270 = ((($1268)) + 4|0);
       $1271 = HEAP32[$1269>>2]|0;
       $1272 = ((($1268)) + 12|0);
       HEAP32[$1272>>2] = $1271;
       $1273 = HEAP32[$38>>2]|0;
       HEAP32[$1268>>2] = $1273;
       $1274 = ((($38)) + 4|0);
       $1275 = HEAP32[$1274>>2]|0;
       HEAP32[$1270>>2] = $1275;
       $1276 = ((($38)) + 8|0);
       $1277 = HEAP32[$1276>>2]|0;
       $1278 = ((($1268)) + 8|0);
       HEAP32[$1278>>2] = $1277;
       HEAP32[$1276>>2] = 0;
       HEAP32[$1274>>2] = 0;
       HEAP32[$38>>2] = 0;
       $1279 = ((($1268)) + 16|0);
       HEAP32[$1267>>2] = $1279;
       __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($1228,$__v$i$i75);
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i75);
      }
      __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($38);
      $$0 = $$08$i;
      break L1;
      break;
     }
     case 79:  {
      $1280 = ((($db)) + 4|0);
      $1281 = HEAP32[$1280>>2]|0;
      $1282 = HEAP32[$db>>2]|0;
      $1283 = $1281;
      $1284 = $1282;
      $1285 = (($1283) - ($1284))|0;
      $1286 = (($1285|0) / 24)&-1;
      $1287 = ((($first)) + 1|0);
      $1288 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($1287,$last,$db)|0);
      $1289 = HEAP32[$1280>>2]|0;
      $1290 = HEAP32[$db>>2]|0;
      $1291 = $1289;
      $1292 = $1290;
      $1293 = (($1291) - ($1292))|0;
      $1294 = (($1293|0) / 24)&-1;
      $1295 = ($1288|0)==($1287|0);
      if ($1295) {
       $$0 = $first;
       break L1;
      }
      $1296 = ((($db)) + 16|0);
      $1297 = ((($db)) + 12|0);
      $1298 = HEAP32[$1297>>2]|0;
      $1299 = $1298;
      $1300 = ((($db)) + 20|0);
      $1301 = HEAP32[$1300>>2]|0;
      $1302 = ((($db)) + 24|0);
      $1303 = HEAP32[$1302>>2]|0;
      $1304 = ($1301>>>0)<($1303>>>0);
      if ($1304) {
       HEAP32[$1301>>2] = 0;
       $1305 = ((($1301)) + 4|0);
       HEAP32[$1305>>2] = 0;
       $1306 = ((($1301)) + 8|0);
       HEAP32[$1306>>2] = 0;
       $1307 = ((($1301)) + 12|0);
       HEAP32[$1307>>2] = $1299;
       $1308 = HEAP32[$1300>>2]|0;
       $1309 = ((($1308)) + 16|0);
       HEAP32[$1300>>2] = $1309;
      } else {
       $1310 = ((($db)) + 28|0);
       $1311 = HEAP32[$1296>>2]|0;
       $1312 = $1301;
       $1313 = $1311;
       $1314 = (($1312) - ($1313))|0;
       $1315 = $1314 >> 4;
       $1316 = (($1315) + 1)|0;
       $1317 = ($1314|0)<(-16);
       if ($1317) {
        __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($1296);
        // unreachable;
       }
       $1318 = $1303;
       $1319 = (($1318) - ($1313))|0;
       $1320 = $1319 >> 4;
       $1321 = ($1320>>>0)<(1073741823);
       if ($1321) {
        $1322 = $1319 >> 3;
        $1323 = ($1322>>>0)<($1316>>>0);
        $1324 = $1323 ? $1316 : $1322;
        $$0$i$i$i81 = $1324;
       } else {
        $$0$i$i$i81 = 2147483647;
       }
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i80,$$0$i$i$i81,$1315,$1310);
       $1325 = ((($__v$i$i80)) + 8|0);
       $1326 = HEAP32[$1325>>2]|0;
       HEAP32[$1326>>2] = 0;
       $1327 = ((($1326)) + 4|0);
       HEAP32[$1327>>2] = 0;
       $1328 = ((($1326)) + 8|0);
       HEAP32[$1328>>2] = 0;
       $1329 = ((($1326)) + 12|0);
       HEAP32[$1329>>2] = $1299;
       $1330 = ((($1326)) + 16|0);
       HEAP32[$1325>>2] = $1330;
       __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($1296,$__v$i$i80);
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i80);
      }
      $1331 = ((($40)) + 4|0);
      $1332 = ((($40)) + 8|0);
      $1333 = ((($40)) + 1|0);
      $1334 = ((($__v$i$i85)) + 8|0);
      $1335 = ($1286>>>0)<($1294>>>0);
      if ($1335) {
       $k5$0533 = $1286;
      } else {
       $$0 = $1288;
       break L1;
      }
      while(1) {
       $1336 = HEAP32[$db>>2]|0;
       $1337 = (((($1336) + (($k5$0533*24)|0)|0)) + 12|0);
       $1338 = HEAP8[$1337>>0]|0;
       $1339 = $1338 & 1;
       $1340 = ($1339<<24>>24)==(0);
       $1341 = (((($1336) + (($k5$0533*24)|0)|0)) + 16|0);
       $1342 = HEAP32[$1341>>2]|0;
       $1343 = $1338&255;
       $1344 = $1343 >>> 1;
       $1345 = $1340 ? $1344 : $1342;
       $1346 = (((($1336) + (($k5$0533*24)|0)|0)) + 20|0);
       $1347 = HEAP32[$1346>>2]|0;
       $1348 = ((($1337)) + 1|0);
       $1349 = $1340 ? $1348 : $1347;
       $1350 = ($1345>>>0)<(2);
       $1351 = $1350 ? $1345 : 2;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($40,$1349,$1351);
       $1352 = HEAP8[$40>>0]|0;
       $1353 = $1352 & 1;
       $1354 = ($1353<<24>>24)==(0);
       $1355 = HEAP32[$1331>>2]|0;
       $1356 = $1352&255;
       $1357 = $1356 >>> 1;
       $1358 = $1354 ? $1357 : $1355;
       $1359 = HEAP32[$1332>>2]|0;
       $1360 = $1354 ? $1333 : $1359;
       $1361 = ($1358>>>0)>(2);
       $1362 = $1361 ? 2 : $1358;
       $1363 = (_memcmp($1360,17033,$1362)|0);
       $1364 = ($1363|0)==(0);
       $1365 = ($1358>>>0)<(2);
       $$$i$i$i = $1361&1;
       $$$$i$i$i = $1365 ? -1 : $$$i$i$i;
       $1366 = $1364 ? $$$$i$i$i : $1363;
       $1367 = ($1366|0)==(0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($40);
       $1368 = HEAP32[$db>>2]|0;
       if ($1367) {
        $1369 = (($1368) + (($k5$0533*24)|0)|0);
        (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($1369,16953)|0);
        $1370 = HEAP32[$db>>2]|0;
        $1371 = (((($1370) + (($k5$0533*24)|0)|0)) + 12|0);
        (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($1371,0,16956)|0);
       } else {
        $1372 = (((($1368) + (($k5$0533*24)|0)|0)) + 12|0);
        $1373 = HEAP8[$1372>>0]|0;
        $1374 = $1373 & 1;
        $1375 = ($1374<<24>>24)==(0);
        if ($1375) {
         $1378 = ((($1372)) + 1|0);
         $1380 = $1378;
        } else {
         $1376 = (((($1368) + (($k5$0533*24)|0)|0)) + 20|0);
         $1377 = HEAP32[$1376>>2]|0;
         $1380 = $1377;
        }
        $1379 = HEAP8[$1380>>0]|0;
        $1381 = ($1379<<24>>24)==(40);
        if ($1381) {
         $1382 = (($1368) + (($k5$0533*24)|0)|0);
         (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($1382,17051)|0);
         $1383 = HEAP32[$db>>2]|0;
         $1384 = (((($1383) + (($k5$0533*24)|0)|0)) + 12|0);
         (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($1384,0,16956)|0);
        }
       }
       $1385 = HEAP32[$db>>2]|0;
       $1386 = (($1385) + (($k5$0533*24)|0)|0);
       (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($1386,17080)|0);
       $1387 = HEAP32[$1300>>2]|0;
       $1388 = ((($1387)) + -16|0);
       $1389 = HEAP32[$db>>2]|0;
       $1390 = (($1389) + (($k5$0533*24)|0)|0);
       $1391 = ((($1387)) + -12|0);
       $1392 = HEAP32[$1391>>2]|0;
       $1393 = ((($1387)) + -8|0);
       $1394 = HEAP32[$1393>>2]|0;
       $1395 = ($1392|0)==($1394|0);
       if ($1395) {
        $1404 = ((($1387)) + -4|0);
        $1405 = HEAP32[$1388>>2]|0;
        $1406 = $1392;
        $1407 = $1405;
        $1408 = (($1406) - ($1407))|0;
        $1409 = (($1408|0) / 24)&-1;
        $1410 = (($1409) + 1)|0;
        $1411 = ($1408|0)<(-24);
        if ($1411) {
         $$lcssa667 = $1388;
         label = 362;
         break;
        }
        $1412 = ($1409>>>0)<(1073741823);
        if ($1412) {
         $1413 = $1409 << 1;
         $1414 = ($1413>>>0)<($1410>>>0);
         $1415 = $1414 ? $1410 : $1413;
         $$0$i$i$i87 = $1415;
        } else {
         $$0$i$i$i87 = 2147483647;
        }
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i85,$$0$i$i$i87,$1409,$1404);
        $1416 = HEAP32[$1334>>2]|0;
        __THREW__ = 0;
        invoke_vii(400,($1416|0),($1390|0));
        $1417 = __THREW__; __THREW__ = 0;
        $1418 = $1417&1;
        if ($1418) {
         label = 368;
         break;
        }
        $1419 = ((($1416)) + 12|0);
        $1420 = (((($1389) + (($k5$0533*24)|0)|0)) + 12|0);
        __THREW__ = 0;
        invoke_vii(400,($1419|0),($1420|0));
        $1421 = __THREW__; __THREW__ = 0;
        $1422 = $1421&1;
        if ($1422) {
         $$lcssa672 = $1416;
         label = 367;
         break;
        }
        $1427 = ((($1416)) + 24|0);
        HEAP32[$1334>>2] = $1427;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($1388,$__v$i$i85);
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i85);
       } else {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1392,$1390);
        $1396 = ((($1392)) + 12|0);
        $1397 = (((($1389) + (($k5$0533*24)|0)|0)) + 12|0);
        __THREW__ = 0;
        invoke_vii(400,($1396|0),($1397|0));
        $1398 = __THREW__; __THREW__ = 0;
        $1399 = $1398&1;
        if ($1399) {
         $$lcssa = $1392;
         label = 359;
         break;
        }
        $1402 = HEAP32[$1391>>2]|0;
        $1403 = ((($1402)) + 24|0);
        HEAP32[$1391>>2] = $1403;
       }
       $1428 = (($k5$0533) + 1)|0;
       $1429 = ($1428>>>0)<($1294>>>0);
       if ($1429) {
        $k5$0533 = $1428;
       } else {
        $$0 = $1288;
        break L1;
       }
      }
      if ((label|0) == 359) {
       $1400 = ___cxa_find_matching_catch()|0;
       $1401 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($$lcssa);
       ___resumeException($1400|0);
       // unreachable;
      }
      else if ((label|0) == 362) {
       __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($$lcssa667);
       // unreachable;
      }
      else if ((label|0) == 367) {
       $1423 = ___cxa_find_matching_catch()|0;
       $1424 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($$lcssa672);
       $eh$lpad$body$i$i90$index14Z2D = $1424;$eh$lpad$body$i$i90$indexZ2D = $1423;
      }
      else if ((label|0) == 368) {
       $1425 = ___cxa_find_matching_catch()|0;
       $1426 = tempRet0;
       $eh$lpad$body$i$i90$index14Z2D = $1426;$eh$lpad$body$i$i90$indexZ2D = $1425;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i85);
      ___resumeException($eh$lpad$body$i$i90$indexZ2D|0);
      // unreachable;
      break;
     }
     case 80:  {
      $1430 = ((($db)) + 4|0);
      $1431 = HEAP32[$1430>>2]|0;
      $1432 = HEAP32[$db>>2]|0;
      $1433 = $1431;
      $1434 = $1432;
      $1435 = (($1433) - ($1434))|0;
      $1436 = (($1435|0) / 24)&-1;
      $1437 = ((($first)) + 1|0);
      $1438 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($1437,$last,$db)|0);
      $1439 = HEAP32[$1430>>2]|0;
      $1440 = HEAP32[$db>>2]|0;
      $1441 = $1439;
      $1442 = $1440;
      $1443 = (($1441) - ($1442))|0;
      $1444 = (($1443|0) / 24)&-1;
      $1445 = ($1438|0)==($1437|0);
      if ($1445) {
       $$0 = $first;
       break L1;
      }
      $1446 = ((($db)) + 16|0);
      $1447 = ((($db)) + 12|0);
      $1448 = HEAP32[$1447>>2]|0;
      $1449 = $1448;
      $1450 = ((($db)) + 20|0);
      $1451 = HEAP32[$1450>>2]|0;
      $1452 = ((($db)) + 24|0);
      $1453 = HEAP32[$1452>>2]|0;
      $1454 = ($1451>>>0)<($1453>>>0);
      if ($1454) {
       HEAP32[$1451>>2] = 0;
       $1455 = ((($1451)) + 4|0);
       HEAP32[$1455>>2] = 0;
       $1456 = ((($1451)) + 8|0);
       HEAP32[$1456>>2] = 0;
       $1457 = ((($1451)) + 12|0);
       HEAP32[$1457>>2] = $1449;
       $1458 = HEAP32[$1450>>2]|0;
       $1459 = ((($1458)) + 16|0);
       HEAP32[$1450>>2] = $1459;
      } else {
       $1460 = ((($db)) + 28|0);
       $1461 = HEAP32[$1446>>2]|0;
       $1462 = $1451;
       $1463 = $1461;
       $1464 = (($1462) - ($1463))|0;
       $1465 = $1464 >> 4;
       $1466 = (($1465) + 1)|0;
       $1467 = ($1464|0)<(-16);
       if ($1467) {
        __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($1446);
        // unreachable;
       }
       $1468 = $1453;
       $1469 = (($1468) - ($1463))|0;
       $1470 = $1469 >> 4;
       $1471 = ($1470>>>0)<(1073741823);
       if ($1471) {
        $1472 = $1469 >> 3;
        $1473 = ($1472>>>0)<($1466>>>0);
        $1474 = $1473 ? $1466 : $1472;
        $$0$i$i$i95 = $1474;
       } else {
        $$0$i$i$i95 = 2147483647;
       }
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i94,$$0$i$i$i95,$1465,$1460);
       $1475 = ((($__v$i$i94)) + 8|0);
       $1476 = HEAP32[$1475>>2]|0;
       HEAP32[$1476>>2] = 0;
       $1477 = ((($1476)) + 4|0);
       HEAP32[$1477>>2] = 0;
       $1478 = ((($1476)) + 8|0);
       HEAP32[$1478>>2] = 0;
       $1479 = ((($1476)) + 12|0);
       HEAP32[$1479>>2] = $1449;
       $1480 = ((($1476)) + 16|0);
       HEAP32[$1475>>2] = $1480;
       __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($1446,$__v$i$i94);
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i94);
      }
      $1481 = ((($41)) + 4|0);
      $1482 = ((($41)) + 8|0);
      $1483 = ((($41)) + 1|0);
      $1484 = ((($42)) + 4|0);
      $1485 = ((($42)) + 8|0);
      $1486 = ((($42)) + 1|0);
      $1487 = ((($__v$i$i103)) + 8|0);
      $1488 = ($1436>>>0)<($1444>>>0);
      if ($1488) {
       $k8$0536 = $1436;
      } else {
       $$0 = $1438;
       break L1;
      }
      while(1) {
       $1489 = HEAP32[$db>>2]|0;
       $1490 = (((($1489) + (($k8$0536*24)|0)|0)) + 12|0);
       $1491 = HEAP8[$1490>>0]|0;
       $1492 = $1491 & 1;
       $1493 = ($1492<<24>>24)==(0);
       $1494 = (((($1489) + (($k8$0536*24)|0)|0)) + 16|0);
       $1495 = HEAP32[$1494>>2]|0;
       $1496 = $1491&255;
       $1497 = $1496 >>> 1;
       $1498 = $1493 ? $1497 : $1495;
       $1499 = (((($1489) + (($k8$0536*24)|0)|0)) + 20|0);
       $1500 = HEAP32[$1499>>2]|0;
       $1501 = ((($1490)) + 1|0);
       $1502 = $1493 ? $1501 : $1500;
       $1503 = ($1498>>>0)<(2);
       $1504 = $1503 ? $1498 : 2;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($41,$1502,$1504);
       $1505 = HEAP8[$41>>0]|0;
       $1506 = $1505 & 1;
       $1507 = ($1506<<24>>24)==(0);
       $1508 = HEAP32[$1481>>2]|0;
       $1509 = $1505&255;
       $1510 = $1509 >>> 1;
       $1511 = $1507 ? $1510 : $1508;
       $1512 = HEAP32[$1482>>2]|0;
       $1513 = $1507 ? $1483 : $1512;
       $1514 = ($1511>>>0)>(2);
       $1515 = $1514 ? 2 : $1511;
       $1516 = (_memcmp($1513,17033,$1515)|0);
       $1517 = ($1516|0)==(0);
       $1518 = ($1511>>>0)<(2);
       $$$i$i$i99 = $1514&1;
       $$$$i$i$i100 = $1518 ? -1 : $$$i$i$i99;
       $1519 = $1517 ? $$$$i$i$i100 : $1516;
       $1520 = ($1519|0)==(0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($41);
       $1521 = HEAP32[$db>>2]|0;
       if ($1520) {
        $1522 = (($1521) + (($k8$0536*24)|0)|0);
        (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($1522,16953)|0);
        $1523 = HEAP32[$db>>2]|0;
        $1524 = (((($1523) + (($k8$0536*24)|0)|0)) + 12|0);
        (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($1524,0,16956)|0);
       } else {
        $1525 = (((($1521) + (($k8$0536*24)|0)|0)) + 12|0);
        $1526 = HEAP8[$1525>>0]|0;
        $1527 = $1526 & 1;
        $1528 = ($1527<<24>>24)==(0);
        if ($1528) {
         $1531 = ((($1525)) + 1|0);
         $1533 = $1531;
        } else {
         $1529 = (((($1521) + (($k8$0536*24)|0)|0)) + 20|0);
         $1530 = HEAP32[$1529>>2]|0;
         $1533 = $1530;
        }
        $1532 = HEAP8[$1533>>0]|0;
        $1534 = ($1532<<24>>24)==(40);
        if ($1534) {
         $1535 = (($1521) + (($k8$0536*24)|0)|0);
         (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($1535,17051)|0);
         $1536 = HEAP32[$db>>2]|0;
         $1537 = (((($1536) + (($k8$0536*24)|0)|0)) + 12|0);
         (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($1537,0,16956)|0);
        }
       }
       $1538 = HEAP8[$1437>>0]|0;
       $1539 = ($1538<<24>>24)==(85);
       $1540 = HEAP32[$db>>2]|0;
       $1541 = (($1540) + (($k8$0536*24)|0)|0);
       do {
        if ($1539) {
         $1542 = HEAP8[$1541>>0]|0;
         $1543 = $1542 & 1;
         $1544 = ($1543<<24>>24)==(0);
         $1545 = (((($1540) + (($k8$0536*24)|0)|0)) + 4|0);
         $1546 = HEAP32[$1545>>2]|0;
         $1547 = $1542&255;
         $1548 = $1547 >>> 1;
         $1549 = $1544 ? $1548 : $1546;
         $1550 = (((($1540) + (($k8$0536*24)|0)|0)) + 8|0);
         $1551 = HEAP32[$1550>>2]|0;
         $1552 = ((($1541)) + 1|0);
         $1553 = $1544 ? $1552 : $1551;
         $1554 = ($1549>>>0)<(12);
         $1555 = $1554 ? $1549 : 12;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($42,$1553,$1555);
         $1556 = HEAP8[$42>>0]|0;
         $1557 = $1556 & 1;
         $1558 = ($1557<<24>>24)==(0);
         $1559 = HEAP32[$1484>>2]|0;
         $1560 = $1556&255;
         $1561 = $1560 >>> 1;
         $1562 = $1558 ? $1561 : $1559;
         $1563 = HEAP32[$1485>>2]|0;
         $1564 = $1558 ? $1486 : $1563;
         $1565 = ($1562>>>0)>(12);
         $1566 = $1565 ? 12 : $1562;
         $1567 = (_memcmp($1564,17083,$1566)|0);
         $1568 = ($1567|0)==(0);
         $1569 = ($1562>>>0)<(12);
         $$$i$i$i$i = $1565&1;
         $$$$i$i$i$i = $1569 ? -1 : $$$i$i$i$i;
         $1570 = $1568 ? $$$$i$i$i$i : $1567;
         $1571 = ($1570|0)==(0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($42);
         $1572 = HEAP32[$db>>2]|0;
         $1573 = (($1572) + (($k8$0536*24)|0)|0);
         if ($1571) {
          $1575 = HEAP8[$1573>>0]|0;
          $1576 = $1575 & 1;
          $1577 = ($1576<<24>>24)==(0);
          if ($1577) {
           $1578 = $1575&255;
           $1579 = $1578 >>> 1;
           $1580 = ($1579>>>0)<(11);
           $1581 = $1580 ? $1579 : 11;
           $1590 = $1581;$1591 = $1579;$1593 = 10;$1596 = $1575;
          } else {
           $1582 = (((($1572) + (($k8$0536*24)|0)|0)) + 4|0);
           $1583 = HEAP32[$1582>>2]|0;
           $1584 = ($1583>>>0)<(11);
           $1585 = $1584 ? $1583 : 11;
           $1586 = HEAP32[$1573>>2]|0;
           $1587 = $1586 & -2;
           $phitmp$i$i$i = (($1587) + -1)|0;
           $1588 = $1586&255;
           $1590 = $1585;$1591 = $1583;$1593 = $phitmp$i$i$i;$1596 = $1588;
          }
          $1589 = (($1590) - ($1591))|0;
          $1592 = (($1589) + ($1593))|0;
          $1594 = ($1592>>>0)<(2);
          if ($1594) {
           $1630 = (2 - ($1590))|0;
           $1631 = (($1630) + ($1591))|0;
           $1632 = (($1631) - ($1593))|0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc($1573,$1593,$1632,$1591,0,$1590,2,17098);
           break;
          }
          $1595 = $1596 & 1;
          $1597 = ($1595<<24>>24)==(0);
          if ($1597) {
           $1600 = ((($1573)) + 1|0);
           $1605 = $1600;
          } else {
           $1598 = (((($1572) + (($k8$0536*24)|0)|0)) + 8|0);
           $1599 = HEAP32[$1598>>2]|0;
           $1605 = $1599;
          }
          $1601 = ($1590|0)==(2);
          do {
           if ($1601) {
            $$1$i$i = 0;$$12$i$i = 17098;$$14$i$i = 2;$2887 = 2;
            label = 407;
           } else {
            $1602 = (($1591) - ($1590))|0;
            $1603 = ($1591|0)==($1590|0);
            if ($1603) {
             $$1$i$i = 0;$$12$i$i = 17098;$$14$i$i = 2;$2887 = $1590;
             label = 407;
            } else {
             $1604 = ($1590>>>0)>(2);
             if ($1604) {
              HEAP8[$1605>>0]=25705&255;HEAP8[$1605+1>>0]=25705>>8;
              $1606 = ((($1605)) + 2|0);
              $1607 = (($1605) + ($1590)|0);
              _memmove(($1606|0),($1607|0),($1602|0))|0;
              $$2$i$i = 2;$1621 = $1590;
              break;
             }
             $1608 = ($1605>>>0)<(17098>>>0);
             $1609 = (($1605) + ($1591)|0);
             $1610 = ($1609>>>0)>(17098>>>0);
             $or$cond$i$i = $1608 & $1610;
             do {
              if ($or$cond$i$i) {
               $1611 = (($1605) + ($1590)|0);
               $1612 = ($1611>>>0)>(17098>>>0);
               if ($1612) {
                _memcpy(($1605|0),(17098|0),($1590|0))|0;
                $1615 = (2 - ($1590))|0;
                $$0$i$i = $1590;$$01$i$i = (17100);$$03$i$i = $1615;$1617 = 0;
                break;
               } else {
                $1613 = (2 - ($1590))|0;
                $1614 = (17098 + ($1613)|0);
                $$0$i$i = 0;$$01$i$i = $1614;$$03$i$i = 2;$1617 = $1590;
                break;
               }
              } else {
               $$0$i$i = 0;$$01$i$i = 17098;$$03$i$i = 2;$1617 = $1590;
              }
             } while(0);
             $$sum$i$i = (($$0$i$i) + ($$03$i$i))|0;
             $1616 = (($1605) + ($$sum$i$i)|0);
             $$sum1$i$i = (($$0$i$i) + ($1617))|0;
             $1618 = (($1605) + ($$sum1$i$i)|0);
             _memmove(($1616|0),($1618|0),($1602|0))|0;
             $$1$i$i = $$0$i$i;$$12$i$i = $$01$i$i;$$14$i$i = $$03$i$i;$2887 = $1617;
             label = 407;
            }
           }
          } while(0);
          if ((label|0) == 407) {
           label = 0;
           $1619 = (($1605) + ($$1$i$i)|0);
           _memmove(($1619|0),($$12$i$i|0),($$14$i$i|0))|0;
           $$2$i$i = $$14$i$i;$1621 = $2887;
          }
          $1620 = (($$2$i$i) - ($1621))|0;
          $1622 = (($1620) + ($1591))|0;
          $1623 = HEAP8[$1573>>0]|0;
          $1624 = $1623 & 1;
          $1625 = ($1624<<24>>24)==(0);
          if ($1625) {
           $1627 = $1622 << 1;
           $1628 = $1627&255;
           HEAP8[$1573>>0] = $1628;
          } else {
           $1626 = (((($1572) + (($k8$0536*24)|0)|0)) + 4|0);
           HEAP32[$1626>>2] = $1622;
          }
          $1629 = (($1605) + ($1622)|0);
          HEAP8[$1629>>0] = 0;
         } else {
          $1574 = $1573;
          label = 390;
         }
        } else {
         $1574 = $1541;
         label = 390;
        }
       } while(0);
       if ((label|0) == 390) {
        label = 0;
        (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($1574,17096)|0);
       }
       $1633 = HEAP32[$1450>>2]|0;
       $1634 = ((($1633)) + -16|0);
       $1635 = HEAP32[$db>>2]|0;
       $1636 = (($1635) + (($k8$0536*24)|0)|0);
       $1637 = ((($1633)) + -12|0);
       $1638 = HEAP32[$1637>>2]|0;
       $1639 = ((($1633)) + -8|0);
       $1640 = HEAP32[$1639>>2]|0;
       $1641 = ($1638|0)==($1640|0);
       if ($1641) {
        $1650 = ((($1633)) + -4|0);
        $1651 = HEAP32[$1634>>2]|0;
        $1652 = $1638;
        $1653 = $1651;
        $1654 = (($1652) - ($1653))|0;
        $1655 = (($1654|0) / 24)&-1;
        $1656 = (($1655) + 1)|0;
        $1657 = ($1654|0)<(-24);
        if ($1657) {
         $$lcssa674 = $1634;
         label = 418;
         break;
        }
        $1658 = ($1655>>>0)<(1073741823);
        if ($1658) {
         $1659 = $1655 << 1;
         $1660 = ($1659>>>0)<($1656>>>0);
         $1661 = $1660 ? $1656 : $1659;
         $$0$i$i$i105 = $1661;
        } else {
         $$0$i$i$i105 = 2147483647;
        }
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i103,$$0$i$i$i105,$1655,$1650);
        $1662 = HEAP32[$1487>>2]|0;
        __THREW__ = 0;
        invoke_vii(400,($1662|0),($1636|0));
        $1663 = __THREW__; __THREW__ = 0;
        $1664 = $1663&1;
        if ($1664) {
         label = 424;
         break;
        }
        $1665 = ((($1662)) + 12|0);
        $1666 = (((($1635) + (($k8$0536*24)|0)|0)) + 12|0);
        __THREW__ = 0;
        invoke_vii(400,($1665|0),($1666|0));
        $1667 = __THREW__; __THREW__ = 0;
        $1668 = $1667&1;
        if ($1668) {
         $$lcssa680 = $1662;
         label = 423;
         break;
        }
        $1673 = ((($1662)) + 24|0);
        HEAP32[$1487>>2] = $1673;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($1634,$__v$i$i103);
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i103);
       } else {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1638,$1636);
        $1642 = ((($1638)) + 12|0);
        $1643 = (((($1635) + (($k8$0536*24)|0)|0)) + 12|0);
        __THREW__ = 0;
        invoke_vii(400,($1642|0),($1643|0));
        $1644 = __THREW__; __THREW__ = 0;
        $1645 = $1644&1;
        if ($1645) {
         $$lcssa678 = $1638;
         label = 415;
         break;
        }
        $1648 = HEAP32[$1637>>2]|0;
        $1649 = ((($1648)) + 24|0);
        HEAP32[$1637>>2] = $1649;
       }
       $1674 = (($k8$0536) + 1)|0;
       $1675 = ($1674>>>0)<($1444>>>0);
       if ($1675) {
        $k8$0536 = $1674;
       } else {
        $$0 = $1438;
        break L1;
       }
      }
      if ((label|0) == 415) {
       $1646 = ___cxa_find_matching_catch()|0;
       $1647 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($$lcssa678);
       ___resumeException($1646|0);
       // unreachable;
      }
      else if ((label|0) == 418) {
       __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($$lcssa674);
       // unreachable;
      }
      else if ((label|0) == 423) {
       $1669 = ___cxa_find_matching_catch()|0;
       $1670 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($$lcssa680);
       $eh$lpad$body$i$i108$index19Z2D = $1670;$eh$lpad$body$i$i108$indexZ2D = $1669;
      }
      else if ((label|0) == 424) {
       $1671 = ___cxa_find_matching_catch()|0;
       $1672 = tempRet0;
       $eh$lpad$body$i$i108$index19Z2D = $1672;$eh$lpad$body$i$i108$indexZ2D = $1671;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i103);
      ___resumeException($eh$lpad$body$i$i108$indexZ2D|0);
      // unreachable;
      break;
     }
     case 82:  {
      $1676 = ((($db)) + 4|0);
      $1677 = HEAP32[$1676>>2]|0;
      $1678 = HEAP32[$db>>2]|0;
      $1679 = $1677;
      $1680 = $1678;
      $1681 = (($1679) - ($1680))|0;
      $1682 = (($1681|0) / 24)&-1;
      $1683 = ((($first)) + 1|0);
      $1684 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($1683,$last,$db)|0);
      $1685 = HEAP32[$1676>>2]|0;
      $1686 = HEAP32[$db>>2]|0;
      $1687 = $1685;
      $1688 = $1686;
      $1689 = (($1687) - ($1688))|0;
      $1690 = (($1689|0) / 24)&-1;
      $1691 = ($1684|0)==($1683|0);
      if ($1691) {
       $$0 = $first;
       break L1;
      }
      $1692 = ((($db)) + 16|0);
      $1693 = ((($db)) + 12|0);
      $1694 = HEAP32[$1693>>2]|0;
      $1695 = $1694;
      $1696 = ((($db)) + 20|0);
      $1697 = HEAP32[$1696>>2]|0;
      $1698 = ((($db)) + 24|0);
      $1699 = HEAP32[$1698>>2]|0;
      $1700 = ($1697>>>0)<($1699>>>0);
      if ($1700) {
       HEAP32[$1697>>2] = 0;
       $1701 = ((($1697)) + 4|0);
       HEAP32[$1701>>2] = 0;
       $1702 = ((($1697)) + 8|0);
       HEAP32[$1702>>2] = 0;
       $1703 = ((($1697)) + 12|0);
       HEAP32[$1703>>2] = $1695;
       $1704 = HEAP32[$1696>>2]|0;
       $1705 = ((($1704)) + 16|0);
       HEAP32[$1696>>2] = $1705;
      } else {
       $1706 = ((($db)) + 28|0);
       $1707 = HEAP32[$1692>>2]|0;
       $1708 = $1697;
       $1709 = $1707;
       $1710 = (($1708) - ($1709))|0;
       $1711 = $1710 >> 4;
       $1712 = (($1711) + 1)|0;
       $1713 = ($1710|0)<(-16);
       if ($1713) {
        __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($1692);
        // unreachable;
       }
       $1714 = $1699;
       $1715 = (($1714) - ($1709))|0;
       $1716 = $1715 >> 4;
       $1717 = ($1716>>>0)<(1073741823);
       if ($1717) {
        $1718 = $1715 >> 3;
        $1719 = ($1718>>>0)<($1712>>>0);
        $1720 = $1719 ? $1712 : $1718;
        $$0$i$i$i113 = $1720;
       } else {
        $$0$i$i$i113 = 2147483647;
       }
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i112,$$0$i$i$i113,$1711,$1706);
       $1721 = ((($__v$i$i112)) + 8|0);
       $1722 = HEAP32[$1721>>2]|0;
       HEAP32[$1722>>2] = 0;
       $1723 = ((($1722)) + 4|0);
       HEAP32[$1723>>2] = 0;
       $1724 = ((($1722)) + 8|0);
       HEAP32[$1724>>2] = 0;
       $1725 = ((($1722)) + 12|0);
       HEAP32[$1725>>2] = $1695;
       $1726 = ((($1722)) + 16|0);
       HEAP32[$1721>>2] = $1726;
       __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($1692,$__v$i$i112);
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i112);
      }
      $1727 = ((($43)) + 4|0);
      $1728 = ((($43)) + 8|0);
      $1729 = ((($43)) + 1|0);
      $1730 = ((($__v$i$i121)) + 8|0);
      $1731 = ($1682>>>0)<($1690>>>0);
      if ($1731) {
       $k11$0540 = $1682;
      } else {
       $$0 = $1684;
       break L1;
      }
      while(1) {
       $1732 = HEAP32[$db>>2]|0;
       $1733 = (((($1732) + (($k11$0540*24)|0)|0)) + 12|0);
       $1734 = HEAP8[$1733>>0]|0;
       $1735 = $1734 & 1;
       $1736 = ($1735<<24>>24)==(0);
       $1737 = (((($1732) + (($k11$0540*24)|0)|0)) + 16|0);
       $1738 = HEAP32[$1737>>2]|0;
       $1739 = $1734&255;
       $1740 = $1739 >>> 1;
       $1741 = $1736 ? $1740 : $1738;
       $1742 = (((($1732) + (($k11$0540*24)|0)|0)) + 20|0);
       $1743 = HEAP32[$1742>>2]|0;
       $1744 = ((($1733)) + 1|0);
       $1745 = $1736 ? $1744 : $1743;
       $1746 = ($1741>>>0)<(2);
       $1747 = $1746 ? $1741 : 2;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($43,$1745,$1747);
       $1748 = HEAP8[$43>>0]|0;
       $1749 = $1748 & 1;
       $1750 = ($1749<<24>>24)==(0);
       $1751 = HEAP32[$1727>>2]|0;
       $1752 = $1748&255;
       $1753 = $1752 >>> 1;
       $1754 = $1750 ? $1753 : $1751;
       $1755 = HEAP32[$1728>>2]|0;
       $1756 = $1750 ? $1729 : $1755;
       $1757 = ($1754>>>0)>(2);
       $1758 = $1757 ? 2 : $1754;
       $1759 = (_memcmp($1756,17033,$1758)|0);
       $1760 = ($1759|0)==(0);
       $1761 = ($1754>>>0)<(2);
       $$$i$i$i117 = $1757&1;
       $$$$i$i$i118 = $1761 ? -1 : $$$i$i$i117;
       $1762 = $1760 ? $$$$i$i$i118 : $1759;
       $1763 = ($1762|0)==(0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($43);
       $1764 = HEAP32[$db>>2]|0;
       if ($1763) {
        $1765 = (($1764) + (($k11$0540*24)|0)|0);
        (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($1765,16953)|0);
        $1766 = HEAP32[$db>>2]|0;
        $1767 = (((($1766) + (($k11$0540*24)|0)|0)) + 12|0);
        (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($1767,0,16956)|0);
       } else {
        $1768 = (((($1764) + (($k11$0540*24)|0)|0)) + 12|0);
        $1769 = HEAP8[$1768>>0]|0;
        $1770 = $1769 & 1;
        $1771 = ($1770<<24>>24)==(0);
        if ($1771) {
         $1774 = ((($1768)) + 1|0);
         $1776 = $1774;
        } else {
         $1772 = (((($1764) + (($k11$0540*24)|0)|0)) + 20|0);
         $1773 = HEAP32[$1772>>2]|0;
         $1776 = $1773;
        }
        $1775 = HEAP8[$1776>>0]|0;
        $1777 = ($1775<<24>>24)==(40);
        if ($1777) {
         $1778 = (($1764) + (($k11$0540*24)|0)|0);
         (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($1778,17051)|0);
         $1779 = HEAP32[$db>>2]|0;
         $1780 = (((($1779) + (($k11$0540*24)|0)|0)) + 12|0);
         (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($1780,0,16956)|0);
        }
       }
       $1781 = HEAP32[$db>>2]|0;
       $1782 = (($1781) + (($k11$0540*24)|0)|0);
       (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($1782,17101)|0);
       $1783 = HEAP32[$1696>>2]|0;
       $1784 = ((($1783)) + -16|0);
       $1785 = HEAP32[$db>>2]|0;
       $1786 = (($1785) + (($k11$0540*24)|0)|0);
       $1787 = ((($1783)) + -12|0);
       $1788 = HEAP32[$1787>>2]|0;
       $1789 = ((($1783)) + -8|0);
       $1790 = HEAP32[$1789>>2]|0;
       $1791 = ($1788|0)==($1790|0);
       if ($1791) {
        $1800 = ((($1783)) + -4|0);
        $1801 = HEAP32[$1784>>2]|0;
        $1802 = $1788;
        $1803 = $1801;
        $1804 = (($1802) - ($1803))|0;
        $1805 = (($1804|0) / 24)&-1;
        $1806 = (($1805) + 1)|0;
        $1807 = ($1804|0)<(-24);
        if ($1807) {
         $$lcssa682 = $1784;
         label = 449;
         break;
        }
        $1808 = ($1805>>>0)<(1073741823);
        if ($1808) {
         $1809 = $1805 << 1;
         $1810 = ($1809>>>0)<($1806>>>0);
         $1811 = $1810 ? $1806 : $1809;
         $$0$i$i$i123 = $1811;
        } else {
         $$0$i$i$i123 = 2147483647;
        }
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i121,$$0$i$i$i123,$1805,$1800);
        $1812 = HEAP32[$1730>>2]|0;
        __THREW__ = 0;
        invoke_vii(400,($1812|0),($1786|0));
        $1813 = __THREW__; __THREW__ = 0;
        $1814 = $1813&1;
        if ($1814) {
         label = 455;
         break;
        }
        $1815 = ((($1812)) + 12|0);
        $1816 = (((($1785) + (($k11$0540*24)|0)|0)) + 12|0);
        __THREW__ = 0;
        invoke_vii(400,($1815|0),($1816|0));
        $1817 = __THREW__; __THREW__ = 0;
        $1818 = $1817&1;
        if ($1818) {
         $$lcssa688 = $1812;
         label = 454;
         break;
        }
        $1823 = ((($1812)) + 24|0);
        HEAP32[$1730>>2] = $1823;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($1784,$__v$i$i121);
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i121);
       } else {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1788,$1786);
        $1792 = ((($1788)) + 12|0);
        $1793 = (((($1785) + (($k11$0540*24)|0)|0)) + 12|0);
        __THREW__ = 0;
        invoke_vii(400,($1792|0),($1793|0));
        $1794 = __THREW__; __THREW__ = 0;
        $1795 = $1794&1;
        if ($1795) {
         $$lcssa686 = $1788;
         label = 446;
         break;
        }
        $1798 = HEAP32[$1787>>2]|0;
        $1799 = ((($1798)) + 24|0);
        HEAP32[$1787>>2] = $1799;
       }
       $1824 = (($k11$0540) + 1)|0;
       $1825 = ($1824>>>0)<($1690>>>0);
       if ($1825) {
        $k11$0540 = $1824;
       } else {
        $$0 = $1684;
        break L1;
       }
      }
      if ((label|0) == 446) {
       $1796 = ___cxa_find_matching_catch()|0;
       $1797 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($$lcssa686);
       ___resumeException($1796|0);
       // unreachable;
      }
      else if ((label|0) == 449) {
       __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($$lcssa682);
       // unreachable;
      }
      else if ((label|0) == 454) {
       $1819 = ___cxa_find_matching_catch()|0;
       $1820 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($$lcssa688);
       $eh$lpad$body$i$i126$index24Z2D = $1820;$eh$lpad$body$i$i126$indexZ2D = $1819;
      }
      else if ((label|0) == 455) {
       $1821 = ___cxa_find_matching_catch()|0;
       $1822 = tempRet0;
       $eh$lpad$body$i$i126$index24Z2D = $1822;$eh$lpad$body$i$i126$indexZ2D = $1821;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i121);
      ___resumeException($eh$lpad$body$i$i126$indexZ2D|0);
      // unreachable;
      break;
     }
     case 84:  {
      $1826 = ((($db)) + 4|0);
      $1827 = HEAP32[$1826>>2]|0;
      $1828 = HEAP32[$db>>2]|0;
      $1829 = $1827;
      $1830 = $1828;
      $1831 = (($1829) - ($1830))|0;
      $1832 = (($1831|0) / 24)&-1;
      $1833 = (__ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $1834 = HEAP32[$1826>>2]|0;
      $1835 = HEAP32[$db>>2]|0;
      $1836 = $1834;
      $1837 = $1835;
      $1838 = (($1836) - ($1837))|0;
      $1839 = (($1838|0) / 24)&-1;
      $1840 = ($1833|0)==($first|0);
      if ($1840) {
       $$0 = $first;
       break L1;
      }
      $1841 = ((($db)) + 16|0);
      $1842 = ((($db)) + 12|0);
      $1843 = HEAP32[$1842>>2]|0;
      $1844 = $1843;
      $1845 = ((($db)) + 20|0);
      $1846 = HEAP32[$1845>>2]|0;
      $1847 = ((($db)) + 24|0);
      $1848 = HEAP32[$1847>>2]|0;
      $1849 = ($1846>>>0)<($1848>>>0);
      if ($1849) {
       HEAP32[$1846>>2] = 0;
       $1850 = ((($1846)) + 4|0);
       HEAP32[$1850>>2] = 0;
       $1851 = ((($1846)) + 8|0);
       HEAP32[$1851>>2] = 0;
       $1852 = ((($1846)) + 12|0);
       HEAP32[$1852>>2] = $1844;
       $1853 = HEAP32[$1845>>2]|0;
       $1854 = ((($1853)) + 16|0);
       HEAP32[$1845>>2] = $1854;
      } else {
       $1855 = ((($db)) + 28|0);
       $1856 = HEAP32[$1841>>2]|0;
       $1857 = $1846;
       $1858 = $1856;
       $1859 = (($1857) - ($1858))|0;
       $1860 = $1859 >> 4;
       $1861 = (($1860) + 1)|0;
       $1862 = ($1859|0)<(-16);
       if ($1862) {
        __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($1841);
        // unreachable;
       }
       $1863 = $1848;
       $1864 = (($1863) - ($1858))|0;
       $1865 = $1864 >> 4;
       $1866 = ($1865>>>0)<(1073741823);
       if ($1866) {
        $1867 = $1864 >> 3;
        $1868 = ($1867>>>0)<($1861>>>0);
        $1869 = $1868 ? $1861 : $1867;
        $$0$i$i$i131 = $1869;
       } else {
        $$0$i$i$i131 = 2147483647;
       }
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i130,$$0$i$i$i131,$1860,$1855);
       $1870 = ((($__v$i$i130)) + 8|0);
       $1871 = HEAP32[$1870>>2]|0;
       HEAP32[$1871>>2] = 0;
       $1872 = ((($1871)) + 4|0);
       HEAP32[$1872>>2] = 0;
       $1873 = ((($1871)) + 8|0);
       HEAP32[$1873>>2] = 0;
       $1874 = ((($1871)) + 12|0);
       HEAP32[$1874>>2] = $1844;
       $1875 = ((($1871)) + 16|0);
       HEAP32[$1870>>2] = $1875;
       __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($1841,$__v$i$i130);
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i130);
      }
      $1876 = ((($__v$i$i134)) + 8|0);
      $1877 = ($1832>>>0)<($1839>>>0);
      L626: do {
       if ($1877) {
        $k15$0543 = $1832;
        while(1) {
         $1878 = HEAP32[$1845>>2]|0;
         $1879 = ((($1878)) + -16|0);
         $1880 = HEAP32[$db>>2]|0;
         $1881 = (($1880) + (($k15$0543*24)|0)|0);
         $1882 = ((($1878)) + -12|0);
         $1883 = HEAP32[$1882>>2]|0;
         $1884 = ((($1878)) + -8|0);
         $1885 = HEAP32[$1884>>2]|0;
         $1886 = ($1883|0)==($1885|0);
         if ($1886) {
          $1895 = ((($1878)) + -4|0);
          $1896 = HEAP32[$1879>>2]|0;
          $1897 = $1883;
          $1898 = $1896;
          $1899 = (($1897) - ($1898))|0;
          $1900 = (($1899|0) / 24)&-1;
          $1901 = (($1900) + 1)|0;
          $1902 = ($1899|0)<(-24);
          if ($1902) {
           $$lcssa690 = $1879;
           label = 473;
           break;
          }
          $1903 = ($1900>>>0)<(1073741823);
          if ($1903) {
           $1904 = $1900 << 1;
           $1905 = ($1904>>>0)<($1901>>>0);
           $1906 = $1905 ? $1901 : $1904;
           $$0$i$i$i136 = $1906;
          } else {
           $$0$i$i$i136 = 2147483647;
          }
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i134,$$0$i$i$i136,$1900,$1895);
          $1907 = HEAP32[$1876>>2]|0;
          __THREW__ = 0;
          invoke_vii(400,($1907|0),($1881|0));
          $1908 = __THREW__; __THREW__ = 0;
          $1909 = $1908&1;
          if ($1909) {
           label = 479;
           break;
          }
          $1910 = ((($1907)) + 12|0);
          $1911 = (((($1880) + (($k15$0543*24)|0)|0)) + 12|0);
          __THREW__ = 0;
          invoke_vii(400,($1910|0),($1911|0));
          $1912 = __THREW__; __THREW__ = 0;
          $1913 = $1912&1;
          if ($1913) {
           $$lcssa696 = $1907;
           label = 478;
           break;
          }
          $1918 = ((($1907)) + 24|0);
          HEAP32[$1876>>2] = $1918;
          __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($1879,$__v$i$i134);
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i134);
         } else {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1883,$1881);
          $1887 = ((($1883)) + 12|0);
          $1888 = (((($1880) + (($k15$0543*24)|0)|0)) + 12|0);
          __THREW__ = 0;
          invoke_vii(400,($1887|0),($1888|0));
          $1889 = __THREW__; __THREW__ = 0;
          $1890 = $1889&1;
          if ($1890) {
           $$lcssa694 = $1883;
           label = 470;
           break;
          }
          $1893 = HEAP32[$1882>>2]|0;
          $1894 = ((($1893)) + 24|0);
          HEAP32[$1882>>2] = $1894;
         }
         $1919 = (($k15$0543) + 1)|0;
         $1920 = ($1919>>>0)<($1839>>>0);
         if ($1920) {
          $k15$0543 = $1919;
         } else {
          break L626;
         }
        }
        if ((label|0) == 470) {
         $1891 = ___cxa_find_matching_catch()|0;
         $1892 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($$lcssa694);
         ___resumeException($1891|0);
         // unreachable;
        }
        else if ((label|0) == 473) {
         __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($$lcssa690);
         // unreachable;
        }
        else if ((label|0) == 478) {
         $1914 = ___cxa_find_matching_catch()|0;
         $1915 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($$lcssa696);
         $eh$lpad$body$i$i139$index29Z2D = $1915;$eh$lpad$body$i$i139$indexZ2D = $1914;
        }
        else if ((label|0) == 479) {
         $1916 = ___cxa_find_matching_catch()|0;
         $1917 = tempRet0;
         $eh$lpad$body$i$i139$index29Z2D = $1917;$eh$lpad$body$i$i139$indexZ2D = $1916;
        }
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i134);
        ___resumeException($eh$lpad$body$i$i139$indexZ2D|0);
        // unreachable;
       }
      } while(0);
      $1921 = ((($db)) + 63|0);
      $1922 = HEAP8[$1921>>0]|0;
      $1923 = ($1922<<24>>24)!=(0);
      $1924 = (($1832) + 1)|0;
      $1925 = ($1839|0)==($1924|0);
      $or$cond = $1925 & $1923;
      if (!($or$cond)) {
       $$0 = $1833;
       break L1;
      }
      $1926 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($1833,$last,$db)|0);
      $1927 = ($1926|0)==($1833|0);
      if ($1927) {
       $$0 = $1833;
       break L1;
      }
      $1928 = HEAP32[$1826>>2]|0;
      $1929 = ((($1928)) + -24|0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($args,$1929);
      $1930 = HEAP32[$1826>>2]|0;
      $1931 = ((($1930)) + -24|0);
      $1933 = $1930;
      while(1) {
       $1932 = ((($1933)) + -24|0);
       HEAP32[$1826>>2] = $1932;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1932);
       $$pre$i143 = HEAP32[$1826>>2]|0;
       $1934 = ($$pre$i143|0)==($1931|0);
       if ($1934) {
        break;
       } else {
        $1933 = $$pre$i143;
       }
      }
      $1935 = ((($1930)) + -48|0);
      $1936 = HEAP8[$args>>0]|0;
      $1937 = $1936 & 1;
      $1938 = ($1937<<24>>24)==(0);
      $1939 = ((($args)) + 8|0);
      $1940 = HEAP32[$1939>>2]|0;
      $1941 = ((($args)) + 1|0);
      $1942 = $1938 ? $1941 : $1940;
      $1943 = ((($args)) + 4|0);
      $1944 = HEAP32[$1943>>2]|0;
      $1945 = $1936&255;
      $1946 = $1945 >>> 1;
      $1947 = $1938 ? $1946 : $1944;
      __THREW__ = 0;
      (invoke_iiii(387,($1935|0),($1942|0),($1947|0))|0);
      $1948 = __THREW__; __THREW__ = 0;
      $1949 = $1948&1;
      do {
       if ($1949) {
        label = 497;
       } else {
        $1950 = HEAP32[$1826>>2]|0;
        $1951 = ((($1950)) + -24|0);
        $1952 = HEAP32[$1842>>2]|0;
        HEAP32[$45>>2] = $1952;
        __THREW__ = 0;
        invoke_viii(403,($44|0),($1951|0),($45|0));
        $1953 = __THREW__; __THREW__ = 0;
        $1954 = $1953&1;
        if ($1954) {
         label = 497;
        } else {
         $1955 = HEAP32[$1845>>2]|0;
         $1956 = HEAP32[$1847>>2]|0;
         $1957 = ($1955>>>0)<($1956>>>0);
         if ($1957) {
          $1958 = ((($44)) + 12|0);
          $1959 = ((($1955)) + 4|0);
          $1960 = HEAP32[$1958>>2]|0;
          $1961 = ((($1955)) + 12|0);
          HEAP32[$1961>>2] = $1960;
          $1962 = HEAP32[$44>>2]|0;
          HEAP32[$1955>>2] = $1962;
          $1963 = ((($44)) + 4|0);
          $1964 = HEAP32[$1963>>2]|0;
          HEAP32[$1959>>2] = $1964;
          $1965 = ((($44)) + 8|0);
          $1966 = HEAP32[$1965>>2]|0;
          $1967 = ((($1955)) + 8|0);
          HEAP32[$1967>>2] = $1966;
          HEAP32[$1965>>2] = 0;
          HEAP32[$1963>>2] = 0;
          HEAP32[$44>>2] = 0;
          $1968 = HEAP32[$1845>>2]|0;
          $1969 = ((($1968)) + 16|0);
          HEAP32[$1845>>2] = $1969;
         } else {
          $1970 = ((($db)) + 28|0);
          $1971 = HEAP32[$1841>>2]|0;
          $1972 = $1955;
          $1973 = $1971;
          $1974 = (($1972) - ($1973))|0;
          $1975 = $1974 >> 4;
          $1976 = (($1975) + 1)|0;
          $1977 = ($1974|0)<(-16);
          if ($1977) {
           __THREW__ = 0;
           invoke_vi(402,($1841|0));
           $1978 = __THREW__; __THREW__ = 0;
           $1979 = ___cxa_find_matching_catch()|0;
           $1980 = tempRet0;
           __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($44);
           $$02 = $1979;$$03 = $1980;
           break;
          }
          $1981 = $1956;
          $1982 = (($1981) - ($1973))|0;
          $1983 = $1982 >> 4;
          $1984 = ($1983>>>0)<(1073741823);
          if ($1984) {
           $1985 = $1982 >> 3;
           $1986 = ($1985>>>0)<($1976>>>0);
           $1987 = $1986 ? $1976 : $1985;
           $$0$i$i$i148 = $1987;
          } else {
           $$0$i$i$i148 = 2147483647;
          }
          __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i147,$$0$i$i$i148,$1975,$1970);
          $1988 = ((($__v$i$i147)) + 8|0);
          $1989 = HEAP32[$1988>>2]|0;
          $1990 = ((($44)) + 12|0);
          $1991 = ((($1989)) + 4|0);
          $1992 = HEAP32[$1990>>2]|0;
          $1993 = ((($1989)) + 12|0);
          HEAP32[$1993>>2] = $1992;
          $1994 = HEAP32[$44>>2]|0;
          HEAP32[$1989>>2] = $1994;
          $1995 = ((($44)) + 4|0);
          $1996 = HEAP32[$1995>>2]|0;
          HEAP32[$1991>>2] = $1996;
          $1997 = ((($44)) + 8|0);
          $1998 = HEAP32[$1997>>2]|0;
          $1999 = ((($1989)) + 8|0);
          HEAP32[$1999>>2] = $1998;
          HEAP32[$1997>>2] = 0;
          HEAP32[$1995>>2] = 0;
          HEAP32[$44>>2] = 0;
          $2000 = ((($1989)) + 16|0);
          HEAP32[$1988>>2] = $2000;
          __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($1841,$__v$i$i147);
          __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i147);
         }
         __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($44);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
         $$0 = $1926;
         break L1;
        }
       }
      } while(0);
      if ((label|0) == 497) {
       $2001 = ___cxa_find_matching_catch()|0;
       $2002 = tempRet0;
       $$02 = $2001;$$03 = $2002;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
      $$10 = $$02;$$1013 = $$03;
      break;
     }
     case 85:  {
      $2003 = ((($first)) + 1|0);
      $2004 = ($2003|0)==($last|0);
      if ($2004) {
       $$0 = $first;
       break L1;
      }
      $2005 = (__ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($2003,$last,$db)|0);
      $2006 = ($2005|0)==($2003|0);
      if ($2006) {
       $$0 = $first;
       break L1;
      }
      $2007 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($2005,$last,$db)|0);
      $2008 = ($2007|0)==($2005|0);
      if ($2008) {
       $$0 = $first;
       break L1;
      }
      $2009 = ((($db)) + 4|0);
      $2010 = HEAP32[$2009>>2]|0;
      $2011 = HEAP32[$db>>2]|0;
      $2012 = $2010;
      $2013 = $2011;
      $2014 = (($2012) - ($2013))|0;
      $2015 = (($2014|0) / 24)&-1;
      $2016 = ($2015>>>0)<(2);
      if ($2016) {
       $$0 = $first;
       break L1;
      }
      $2017 = ((($2010)) + -24|0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($type,$2017);
      $2018 = HEAP32[$2009>>2]|0;
      $2019 = ((($2018)) + -24|0);
      $2021 = $2018;
      while(1) {
       $2020 = ((($2021)) + -24|0);
       HEAP32[$2009>>2] = $2020;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2020);
       $$pre$i157 = HEAP32[$2009>>2]|0;
       $2022 = ($$pre$i157|0)==($2019|0);
       if ($2022) {
        break;
       } else {
        $2021 = $$pre$i157;
       }
      }
      $2023 = ((($2018)) + -48|0);
      $2024 = HEAP8[$2023>>0]|0;
      $2025 = $2024 & 1;
      $2026 = ($2025<<24>>24)==(0);
      $2027 = ((($2018)) + -44|0);
      $2028 = HEAP32[$2027>>2]|0;
      $2029 = $2024&255;
      $2030 = $2029 >>> 1;
      $2031 = $2026 ? $2030 : $2028;
      $2032 = ((($2018)) + -40|0);
      $2033 = HEAP32[$2032>>2]|0;
      $2034 = ((($2023)) + 1|0);
      $2035 = $2026 ? $2034 : $2033;
      $2036 = ($2031>>>0)<(9);
      $2037 = $2036 ? $2031 : 9;
      __THREW__ = 0;
      invoke_viii(401,($46|0),($2035|0),($2037|0));
      $2038 = __THREW__; __THREW__ = 0;
      $2039 = $2038&1;
      L676: do {
       if ($2039) {
        label = 511;
       } else {
        $2040 = HEAP8[$46>>0]|0;
        $2041 = $2040 & 1;
        $2042 = ($2041<<24>>24)==(0);
        $2043 = ((($46)) + 4|0);
        $2044 = HEAP32[$2043>>2]|0;
        $2045 = $2040&255;
        $2046 = $2045 >>> 1;
        $2047 = $2042 ? $2046 : $2044;
        $2048 = ((($46)) + 8|0);
        $2049 = HEAP32[$2048>>2]|0;
        $2050 = ((($46)) + 1|0);
        $2051 = $2042 ? $2050 : $2049;
        $2052 = ($2047>>>0)>(9);
        $2053 = $2052 ? 9 : $2047;
        $2054 = (_memcmp($2051,17103,$2053)|0);
        $2055 = ($2054|0)==(0);
        $2056 = ($2047>>>0)<(9);
        $$$i$i$i$i161 = $2052&1;
        $$$$i$i$i$i162 = $2056 ? -1 : $$$i$i$i$i161;
        $2057 = $2055 ? $$$$i$i$i$i162 : $2054;
        $2058 = ($2057|0)==(0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($46);
        $2059 = HEAP32[$2009>>2]|0;
        $2060 = ((($2059)) + -24|0);
        __THREW__ = 0;
        L678: do {
         if ($2058) {
          __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($proto,$2060);
          $2090 = __THREW__; __THREW__ = 0;
          $2091 = $2090&1;
          if ($2091) {
           label = 511;
           break L676;
          }
          $2092 = HEAP32[$2009>>2]|0;
          $2093 = ((($2092)) + -24|0);
          $2095 = $2092;
          while(1) {
           $2094 = ((($2095)) + -24|0);
           HEAP32[$2009>>2] = $2094;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2094);
           $$pre$i165 = HEAP32[$2009>>2]|0;
           $2096 = ($$pre$i165|0)==($2093|0);
           if ($2096) {
            break;
           } else {
            $2095 = $$pre$i165;
           }
          }
          $2097 = HEAP8[$proto>>0]|0;
          $2098 = $2097 & 1;
          $2099 = ($2098<<24>>24)==(0);
          $2100 = ((($proto)) + 8|0);
          $2101 = HEAP32[$2100>>2]|0;
          $2102 = ((($proto)) + 1|0);
          $2103 = $2099 ? $2102 : $2101;
          $2104 = ((($2103)) + 9|0);
          $2105 = ((($proto)) + 4|0);
          $2106 = HEAP32[$2105>>2]|0;
          $2107 = $2097&255;
          $2108 = $2107 >>> 1;
          $2109 = $2099 ? $2108 : $2106;
          $2110 = (($2103) + ($2109)|0);
          __THREW__ = 0;
          $2111 = (invoke_iiii(404,($2104|0),($2110|0),($db|0))|0);
          $2112 = __THREW__; __THREW__ = 0;
          $2113 = $2112&1;
          L684: do {
           if ($2113) {
            label = 525;
           } else {
            $2114 = HEAP8[$proto>>0]|0;
            $2115 = $2114 & 1;
            $2116 = ($2115<<24>>24)==(0);
            $2117 = HEAP32[$2100>>2]|0;
            $2118 = $2116 ? $2102 : $2117;
            $2119 = ((($2118)) + 9|0);
            $2120 = ($2111|0)==($2119|0);
            L686: do {
             if ($2120) {
              __THREW__ = 0;
              invoke_viii(405,($58|0),($type|0),(17063|0));
              $2159 = __THREW__; __THREW__ = 0;
              $2160 = $2159&1;
              if ($2160) {
               label = 525;
               break L684;
              }
              $2161 = HEAP8[$proto>>0]|0;
              $2162 = $2161 & 1;
              $2163 = ($2162<<24>>24)==(0);
              $2164 = HEAP32[$2100>>2]|0;
              $2165 = $2163 ? $2102 : $2164;
              $2166 = HEAP32[$2105>>2]|0;
              $2167 = $2161&255;
              $2168 = $2167 >>> 1;
              $2169 = $2163 ? $2168 : $2166;
              __THREW__ = 0;
              $2170 = (invoke_iiii(387,($58|0),($2165|0),($2169|0))|0);
              $2171 = __THREW__; __THREW__ = 0;
              $2172 = $2171&1;
              do {
               if ($2172) {
                $2202 = ___cxa_find_matching_catch()|0;
                $2203 = tempRet0;
                $$6 = $2202;$$69 = $2203;
               } else {
                ;HEAP32[$57>>2]=HEAP32[$2170>>2]|0;HEAP32[$57+4>>2]=HEAP32[$2170+4>>2]|0;HEAP32[$57+8>>2]=HEAP32[$2170+8>>2]|0;
                HEAP32[$2170>>2] = 0;
                $2173 = ((($2170)) + 4|0);
                HEAP32[$2173>>2] = 0;
                $2174 = ((($2170)) + 8|0);
                HEAP32[$2174>>2] = 0;
                __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($56,$57);
                $2175 = HEAP32[$2009>>2]|0;
                $2176 = ((($db)) + 8|0);
                $2177 = HEAP32[$2176>>2]|0;
                $2178 = ($2175>>>0)<($2177>>>0);
                if ($2178) {
                 __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($2175,$56);
                 $2179 = HEAP32[$2009>>2]|0;
                 $2180 = ((($2179)) + 24|0);
                 HEAP32[$2009>>2] = $2180;
                } else {
                 $2181 = ((($db)) + 12|0);
                 $2182 = HEAP32[$db>>2]|0;
                 $2183 = $2175;
                 $2184 = $2182;
                 $2185 = (($2183) - ($2184))|0;
                 $2186 = (($2185|0) / 24)&-1;
                 $2187 = (($2186) + 1)|0;
                 $2188 = ($2185|0)<(-24);
                 if ($2188) {
                  __THREW__ = 0;
                  invoke_vi(402,($db|0));
                  $2189 = __THREW__; __THREW__ = 0;
                  $2190 = ___cxa_find_matching_catch()|0;
                  $2191 = tempRet0;
                  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($56);
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($57);
                  $$6 = $2190;$$69 = $2191;
                  break;
                 }
                 $2192 = $2177;
                 $2193 = (($2192) - ($2184))|0;
                 $2194 = (($2193|0) / 24)&-1;
                 $2195 = ($2194>>>0)<(1073741823);
                 if ($2195) {
                  $2196 = $2194 << 1;
                  $2197 = ($2196>>>0)<($2187>>>0);
                  $2198 = $2197 ? $2187 : $2196;
                  $$0$i$i$i181 = $2198;
                 } else {
                  $$0$i$i$i181 = 2147483647;
                 }
                 __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i180,$$0$i$i$i181,$2186,$2181);
                 $2199 = ((($__v$i$i180)) + 8|0);
                 $2200 = HEAP32[$2199>>2]|0;
                 __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($2200,$56);
                 $2201 = ((($2200)) + 24|0);
                 HEAP32[$2199>>2] = $2201;
                 __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i180);
                 __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i180);
                }
                __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($56);
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($57);
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($58);
                break L686;
               }
              } while(0);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($58);
              $$7 = $$6;$$710 = $$69;
              break L684;
             } else {
              $2121 = HEAP32[$2009>>2]|0;
              $2122 = ((($2121)) + -24|0);
              __THREW__ = 0;
              invoke_viii(405,($54|0),($type|0),(17113|0));
              $2123 = __THREW__; __THREW__ = 0;
              $2124 = $2123&1;
              if ($2124) {
               label = 525;
               break L684;
              }
              $2125 = HEAP32[$2009>>2]|0;
              $2126 = ((($2125)) + -24|0);
              __THREW__ = 0;
              invoke_vii(396,($55|0),($2126|0));
              $2127 = __THREW__; __THREW__ = 0;
              $2128 = $2127&1;
              if ($2128) {
               $2153 = ___cxa_find_matching_catch()|0;
               $2154 = tempRet0;
               $$5 = $2153;$$58 = $2154;
              } else {
               $2129 = HEAP8[$55>>0]|0;
               $2130 = $2129 & 1;
               $2131 = ($2130<<24>>24)==(0);
               $2132 = ((($55)) + 8|0);
               $2133 = HEAP32[$2132>>2]|0;
               $2134 = ((($55)) + 1|0);
               $2135 = $2131 ? $2134 : $2133;
               $2136 = ((($55)) + 4|0);
               $2137 = HEAP32[$2136>>2]|0;
               $2138 = $2129&255;
               $2139 = $2138 >>> 1;
               $2140 = $2131 ? $2139 : $2137;
               __THREW__ = 0;
               $2141 = (invoke_iiii(387,($54|0),($2135|0),($2140|0))|0);
               $2142 = __THREW__; __THREW__ = 0;
               $2143 = $2142&1;
               do {
                if ($2143) {
                 $2155 = ___cxa_find_matching_catch()|0;
                 $2156 = tempRet0;
                 $$4 = $2155;$$47 = $2156;
                } else {
                 ;HEAP32[$53>>2]=HEAP32[$2141>>2]|0;HEAP32[$53+4>>2]=HEAP32[$2141+4>>2]|0;HEAP32[$53+8>>2]=HEAP32[$2141+8>>2]|0;
                 HEAP32[$2141>>2] = 0;
                 $2144 = ((($2141)) + 4|0);
                 HEAP32[$2144>>2] = 0;
                 $2145 = ((($2141)) + 8|0);
                 HEAP32[$2145>>2] = 0;
                 __THREW__ = 0;
                 $2146 = (invoke_iii(392,($53|0),(17115|0))|0);
                 $2147 = __THREW__; __THREW__ = 0;
                 $2148 = $2147&1;
                 if ($2148) {
                  $2157 = ___cxa_find_matching_catch()|0;
                  $2158 = tempRet0;
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($53);
                  $$4 = $2157;$$47 = $2158;
                  break;
                 } else {
                  ;HEAP32[$52>>2]=HEAP32[$2146>>2]|0;HEAP32[$52+4>>2]=HEAP32[$2146+4>>2]|0;HEAP32[$52+8>>2]=HEAP32[$2146+8>>2]|0;
                  HEAP32[$2146>>2] = 0;
                  $2149 = ((($2146)) + 4|0);
                  HEAP32[$2149>>2] = 0;
                  $2150 = ((($2146)) + 8|0);
                  HEAP32[$2150>>2] = 0;
                  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($51,$52);
                  __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($2122,$51);
                  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($51);
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($52);
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($53);
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($55);
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($54);
                  break L686;
                 }
                }
               } while(0);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($55);
               $$5 = $$4;$$58 = $$47;
              }
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($54);
              $$7 = $$5;$$710 = $$58;
              break L684;
             }
            } while(0);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($proto);
            break L678;
           }
          } while(0);
          if ((label|0) == 525) {
           $2151 = ___cxa_find_matching_catch()|0;
           $2152 = tempRet0;
           $$7 = $2151;$$710 = $2152;
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($proto);
          $$8 = $$7;$$811 = $$710;
          break L676;
         } else {
          __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_($49,$type,17063);
          $2061 = __THREW__; __THREW__ = 0;
          $2062 = $2061&1;
          if ($2062) {
           label = 511;
           break L676;
          }
          $2063 = HEAP32[$2009>>2]|0;
          $2064 = ((($2063)) + -24|0);
          __THREW__ = 0;
          invoke_vii(396,($50|0),($2064|0));
          $2065 = __THREW__; __THREW__ = 0;
          $2066 = $2065&1;
          do {
           if ($2066) {
            $2086 = ___cxa_find_matching_catch()|0;
            $2087 = tempRet0;
            $$2 = $2086;$$25 = $2087;
           } else {
            $2067 = HEAP8[$50>>0]|0;
            $2068 = $2067 & 1;
            $2069 = ($2068<<24>>24)==(0);
            $2070 = ((($50)) + 8|0);
            $2071 = HEAP32[$2070>>2]|0;
            $2072 = ((($50)) + 1|0);
            $2073 = $2069 ? $2072 : $2071;
            $2074 = ((($50)) + 4|0);
            $2075 = HEAP32[$2074>>2]|0;
            $2076 = $2067&255;
            $2077 = $2076 >>> 1;
            $2078 = $2069 ? $2077 : $2075;
            __THREW__ = 0;
            $2079 = (invoke_iiii(387,($49|0),($2073|0),($2078|0))|0);
            $2080 = __THREW__; __THREW__ = 0;
            $2081 = $2080&1;
            if ($2081) {
             $2088 = ___cxa_find_matching_catch()|0;
             $2089 = tempRet0;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($50);
             $$2 = $2088;$$25 = $2089;
             break;
            } else {
             ;HEAP32[$48>>2]=HEAP32[$2079>>2]|0;HEAP32[$48+4>>2]=HEAP32[$2079+4>>2]|0;HEAP32[$48+8>>2]=HEAP32[$2079+8>>2]|0;
             HEAP32[$2079>>2] = 0;
             $2082 = ((($2079)) + 4|0);
             HEAP32[$2082>>2] = 0;
             $2083 = ((($2079)) + 8|0);
             HEAP32[$2083>>2] = 0;
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($47,$48);
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($2060,$47);
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($47);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($48);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($50);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($49);
             break L678;
            }
           }
          } while(0);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($49);
          $$8 = $$2;$$811 = $$25;
          break L676;
         }
        } while(0);
        $2204 = HEAP32[$2009>>2]|0;
        $2205 = ((($2204)) + -24|0);
        $2206 = ((($db)) + 12|0);
        $2207 = HEAP32[$2206>>2]|0;
        HEAP32[$60>>2] = $2207;
        __THREW__ = 0;
        invoke_viii(403,($59|0),($2205|0),($60|0));
        $2208 = __THREW__; __THREW__ = 0;
        $2209 = $2208&1;
        if ($2209) {
         label = 511;
        } else {
         $2210 = ((($db)) + 16|0);
         $2211 = ((($db)) + 20|0);
         $2212 = HEAP32[$2211>>2]|0;
         $2213 = ((($db)) + 24|0);
         $2214 = HEAP32[$2213>>2]|0;
         $2215 = ($2212>>>0)<($2214>>>0);
         if ($2215) {
          $2216 = ((($59)) + 12|0);
          $2217 = ((($2212)) + 4|0);
          $2218 = HEAP32[$2216>>2]|0;
          $2219 = ((($2212)) + 12|0);
          HEAP32[$2219>>2] = $2218;
          $2220 = HEAP32[$59>>2]|0;
          HEAP32[$2212>>2] = $2220;
          $2221 = ((($59)) + 4|0);
          $2222 = HEAP32[$2221>>2]|0;
          HEAP32[$2217>>2] = $2222;
          $2223 = ((($59)) + 8|0);
          $2224 = HEAP32[$2223>>2]|0;
          $2225 = ((($2212)) + 8|0);
          HEAP32[$2225>>2] = $2224;
          HEAP32[$2223>>2] = 0;
          HEAP32[$2221>>2] = 0;
          HEAP32[$59>>2] = 0;
          $2226 = HEAP32[$2211>>2]|0;
          $2227 = ((($2226)) + 16|0);
          HEAP32[$2211>>2] = $2227;
         } else {
          $2228 = ((($db)) + 28|0);
          $2229 = HEAP32[$2210>>2]|0;
          $2230 = $2212;
          $2231 = $2229;
          $2232 = (($2230) - ($2231))|0;
          $2233 = $2232 >> 4;
          $2234 = (($2233) + 1)|0;
          $2235 = ($2232|0)<(-16);
          if ($2235) {
           __THREW__ = 0;
           invoke_vi(402,($2210|0));
           $2236 = __THREW__; __THREW__ = 0;
           $2237 = ___cxa_find_matching_catch()|0;
           $2238 = tempRet0;
           __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($59);
           $$8 = $2237;$$811 = $2238;
           break;
          }
          $2239 = $2214;
          $2240 = (($2239) - ($2231))|0;
          $2241 = $2240 >> 4;
          $2242 = ($2241>>>0)<(1073741823);
          if ($2242) {
           $2243 = $2240 >> 3;
           $2244 = ($2243>>>0)<($2234>>>0);
           $2245 = $2244 ? $2234 : $2243;
           $$0$i$i$i153 = $2245;
          } else {
           $$0$i$i$i153 = 2147483647;
          }
          __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i152,$$0$i$i$i153,$2233,$2228);
          $2246 = ((($__v$i$i152)) + 8|0);
          $2247 = HEAP32[$2246>>2]|0;
          $2248 = ((($59)) + 12|0);
          $2249 = ((($2247)) + 4|0);
          $2250 = HEAP32[$2248>>2]|0;
          $2251 = ((($2247)) + 12|0);
          HEAP32[$2251>>2] = $2250;
          $2252 = HEAP32[$59>>2]|0;
          HEAP32[$2247>>2] = $2252;
          $2253 = ((($59)) + 4|0);
          $2254 = HEAP32[$2253>>2]|0;
          HEAP32[$2249>>2] = $2254;
          $2255 = ((($59)) + 8|0);
          $2256 = HEAP32[$2255>>2]|0;
          $2257 = ((($2247)) + 8|0);
          HEAP32[$2257>>2] = $2256;
          HEAP32[$2255>>2] = 0;
          HEAP32[$2253>>2] = 0;
          HEAP32[$59>>2] = 0;
          $2258 = ((($2247)) + 16|0);
          HEAP32[$2246>>2] = $2258;
          __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($2210,$__v$i$i152);
          __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i152);
         }
         __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($59);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($type);
         $$0 = $2007;
         break L1;
        }
       }
      } while(0);
      if ((label|0) == 511) {
       $2084 = ___cxa_find_matching_catch()|0;
       $2085 = tempRet0;
       $$8 = $2084;$$811 = $2085;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($type);
      $$10 = $$8;$$1013 = $$811;
      break;
     }
     case 83:  {
      $2259 = ((($first)) + 1|0);
      $2260 = ($2259|0)==($last|0);
      if (!($2260)) {
       $2261 = HEAP8[$2259>>0]|0;
       $2262 = ($2261<<24>>24)==(116);
       if ($2262) {
        $2263 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
        $2264 = ($2263|0)==($first|0);
        if ($2264) {
         $$0 = $first;
         break L1;
        }
        $2265 = HEAP32[$db>>2]|0;
        $2266 = ((($db)) + 4|0);
        $2267 = HEAP32[$2266>>2]|0;
        $2268 = ($2265|0)==($2267|0);
        if ($2268) {
         $$0 = $first;
         break L1;
        }
        $2269 = ((($db)) + 16|0);
        $2270 = ((($2267)) + -24|0);
        $2271 = ((($db)) + 12|0);
        $2272 = HEAP32[$2271>>2]|0;
        HEAP32[$62>>2] = $2272;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($61,$2270,$62);
        $2273 = ((($db)) + 20|0);
        $2274 = HEAP32[$2273>>2]|0;
        $2275 = ((($db)) + 24|0);
        $2276 = HEAP32[$2275>>2]|0;
        $2277 = ($2274>>>0)<($2276>>>0);
        if ($2277) {
         $2278 = ((($61)) + 12|0);
         $2279 = ((($2274)) + 4|0);
         $2280 = HEAP32[$2278>>2]|0;
         $2281 = ((($2274)) + 12|0);
         HEAP32[$2281>>2] = $2280;
         $2282 = HEAP32[$61>>2]|0;
         HEAP32[$2274>>2] = $2282;
         $2283 = ((($61)) + 4|0);
         $2284 = HEAP32[$2283>>2]|0;
         HEAP32[$2279>>2] = $2284;
         $2285 = ((($61)) + 8|0);
         $2286 = HEAP32[$2285>>2]|0;
         $2287 = ((($2274)) + 8|0);
         HEAP32[$2287>>2] = $2286;
         HEAP32[$2285>>2] = 0;
         HEAP32[$2283>>2] = 0;
         HEAP32[$61>>2] = 0;
         $2288 = HEAP32[$2273>>2]|0;
         $2289 = ((($2288)) + 16|0);
         HEAP32[$2273>>2] = $2289;
        } else {
         $2290 = ((($db)) + 28|0);
         $2291 = HEAP32[$2269>>2]|0;
         $2292 = $2274;
         $2293 = $2291;
         $2294 = (($2292) - ($2293))|0;
         $2295 = $2294 >> 4;
         $2296 = (($2295) + 1)|0;
         $2297 = ($2294|0)<(-16);
         if ($2297) {
          __THREW__ = 0;
          invoke_vi(402,($2269|0));
          $2298 = __THREW__; __THREW__ = 0;
          $2299 = ___cxa_find_matching_catch()|0;
          $2300 = tempRet0;
          __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($61);
          $$10 = $2299;$$1013 = $2300;
          break L73;
         }
         $2301 = $2276;
         $2302 = (($2301) - ($2293))|0;
         $2303 = $2302 >> 4;
         $2304 = ($2303>>>0)<(1073741823);
         if ($2304) {
          $2305 = $2302 >> 3;
          $2306 = ($2305>>>0)<($2296>>>0);
          $2307 = $2306 ? $2296 : $2305;
          $$0$i$i$i51 = $2307;
         } else {
          $$0$i$i$i51 = 2147483647;
         }
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i50,$$0$i$i$i51,$2295,$2290);
         $2308 = ((($__v$i$i50)) + 8|0);
         $2309 = HEAP32[$2308>>2]|0;
         $2310 = ((($61)) + 12|0);
         $2311 = ((($2309)) + 4|0);
         $2312 = HEAP32[$2310>>2]|0;
         $2313 = ((($2309)) + 12|0);
         HEAP32[$2313>>2] = $2312;
         $2314 = HEAP32[$61>>2]|0;
         HEAP32[$2309>>2] = $2314;
         $2315 = ((($61)) + 4|0);
         $2316 = HEAP32[$2315>>2]|0;
         HEAP32[$2311>>2] = $2316;
         $2317 = ((($61)) + 8|0);
         $2318 = HEAP32[$2317>>2]|0;
         $2319 = ((($2309)) + 8|0);
         HEAP32[$2319>>2] = $2318;
         HEAP32[$2317>>2] = 0;
         HEAP32[$2315>>2] = 0;
         HEAP32[$61>>2] = 0;
         $2320 = ((($2309)) + 16|0);
         HEAP32[$2308>>2] = $2320;
         __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($2269,$__v$i$i50);
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i50);
        }
        __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($61);
        $$0 = $2263;
        break L1;
       }
      }
      $2321 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $2322 = ($2321|0)==($first|0);
      if ($2322) {
       $$0 = $first;
       break L1;
      }
      $2323 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($2321,$last,$db)|0);
      $2324 = ($2323|0)==($2321|0);
      if ($2324) {
       $$0 = $2321;
       break L1;
      }
      $2325 = ((($db)) + 4|0);
      $2326 = HEAP32[$2325>>2]|0;
      $2327 = HEAP32[$db>>2]|0;
      $2328 = $2326;
      $2329 = $2327;
      $2330 = (($2328) - ($2329))|0;
      $2331 = (($2330|0) / 24)&-1;
      $2332 = ($2331>>>0)<(2);
      if ($2332) {
       $$0 = $2321;
       break L1;
      }
      $2333 = ((($2326)) + -24|0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($template_args,$2333);
      $2334 = HEAP32[$2325>>2]|0;
      $2335 = ((($2334)) + -24|0);
      $2337 = $2334;
      while(1) {
       $2336 = ((($2337)) + -24|0);
       HEAP32[$2325>>2] = $2336;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2336);
       $$pre$i = HEAP32[$2325>>2]|0;
       $2338 = ($$pre$i|0)==($2335|0);
       if ($2338) {
        break;
       } else {
        $2337 = $$pre$i;
       }
      }
      $2339 = ((($2334)) + -48|0);
      $2340 = HEAP8[$template_args>>0]|0;
      $2341 = $2340 & 1;
      $2342 = ($2341<<24>>24)==(0);
      $2343 = ((($template_args)) + 8|0);
      $2344 = HEAP32[$2343>>2]|0;
      $2345 = ((($template_args)) + 1|0);
      $2346 = $2342 ? $2345 : $2344;
      $2347 = ((($template_args)) + 4|0);
      $2348 = HEAP32[$2347>>2]|0;
      $2349 = $2340&255;
      $2350 = $2349 >>> 1;
      $2351 = $2342 ? $2350 : $2348;
      __THREW__ = 0;
      (invoke_iiii(387,($2339|0),($2346|0),($2351|0))|0);
      $2352 = __THREW__; __THREW__ = 0;
      $2353 = $2352&1;
      do {
       if ($2353) {
        label = 582;
       } else {
        $2354 = HEAP32[$2325>>2]|0;
        $2355 = ((($2354)) + -24|0);
        $2356 = ((($db)) + 12|0);
        $2357 = HEAP32[$2356>>2]|0;
        HEAP32[$64>>2] = $2357;
        __THREW__ = 0;
        invoke_viii(403,($63|0),($2355|0),($64|0));
        $2358 = __THREW__; __THREW__ = 0;
        $2359 = $2358&1;
        if ($2359) {
         label = 582;
        } else {
         $2360 = ((($db)) + 16|0);
         $2361 = ((($db)) + 20|0);
         $2362 = HEAP32[$2361>>2]|0;
         $2363 = ((($db)) + 24|0);
         $2364 = HEAP32[$2363>>2]|0;
         $2365 = ($2362>>>0)<($2364>>>0);
         if ($2365) {
          $2366 = ((($63)) + 12|0);
          $2367 = ((($2362)) + 4|0);
          $2368 = HEAP32[$2366>>2]|0;
          $2369 = ((($2362)) + 12|0);
          HEAP32[$2369>>2] = $2368;
          $2370 = HEAP32[$63>>2]|0;
          HEAP32[$2362>>2] = $2370;
          $2371 = ((($63)) + 4|0);
          $2372 = HEAP32[$2371>>2]|0;
          HEAP32[$2367>>2] = $2372;
          $2373 = ((($63)) + 8|0);
          $2374 = HEAP32[$2373>>2]|0;
          $2375 = ((($2362)) + 8|0);
          HEAP32[$2375>>2] = $2374;
          HEAP32[$2373>>2] = 0;
          HEAP32[$2371>>2] = 0;
          HEAP32[$63>>2] = 0;
          $2376 = HEAP32[$2361>>2]|0;
          $2377 = ((($2376)) + 16|0);
          HEAP32[$2361>>2] = $2377;
         } else {
          $2378 = ((($db)) + 28|0);
          $2379 = HEAP32[$2360>>2]|0;
          $2380 = $2362;
          $2381 = $2379;
          $2382 = (($2380) - ($2381))|0;
          $2383 = $2382 >> 4;
          $2384 = (($2383) + 1)|0;
          $2385 = ($2382|0)<(-16);
          if ($2385) {
           __THREW__ = 0;
           invoke_vi(402,($2360|0));
           $2386 = __THREW__; __THREW__ = 0;
           $2387 = ___cxa_find_matching_catch()|0;
           $2388 = tempRet0;
           __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($63);
           $$9 = $2387;$$912 = $2388;
           break;
          }
          $2389 = $2364;
          $2390 = (($2389) - ($2381))|0;
          $2391 = $2390 >> 4;
          $2392 = ($2391>>>0)<(1073741823);
          if ($2392) {
           $2393 = $2390 >> 3;
           $2394 = ($2393>>>0)<($2384>>>0);
           $2395 = $2394 ? $2384 : $2393;
           $$0$i$i$i31 = $2395;
          } else {
           $$0$i$i$i31 = 2147483647;
          }
          __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i30,$$0$i$i$i31,$2383,$2378);
          $2396 = ((($__v$i$i30)) + 8|0);
          $2397 = HEAP32[$2396>>2]|0;
          $2398 = ((($63)) + 12|0);
          $2399 = ((($2397)) + 4|0);
          $2400 = HEAP32[$2398>>2]|0;
          $2401 = ((($2397)) + 12|0);
          HEAP32[$2401>>2] = $2400;
          $2402 = HEAP32[$63>>2]|0;
          HEAP32[$2397>>2] = $2402;
          $2403 = ((($63)) + 4|0);
          $2404 = HEAP32[$2403>>2]|0;
          HEAP32[$2399>>2] = $2404;
          $2405 = ((($63)) + 8|0);
          $2406 = HEAP32[$2405>>2]|0;
          $2407 = ((($2397)) + 8|0);
          HEAP32[$2407>>2] = $2406;
          HEAP32[$2405>>2] = 0;
          HEAP32[$2403>>2] = 0;
          HEAP32[$63>>2] = 0;
          $2408 = ((($2397)) + 16|0);
          HEAP32[$2396>>2] = $2408;
          __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($2360,$__v$i$i30);
          __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i30);
         }
         __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($63);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($template_args);
         $$0 = $2323;
         break L1;
        }
       }
      } while(0);
      if ((label|0) == 582) {
       $2409 = ___cxa_find_matching_catch()|0;
       $2410 = tempRet0;
       $$9 = $2409;$$912 = $2410;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($template_args);
      $$10 = $$9;$$1013 = $$912;
      break;
     }
     case 68:  {
      $2411 = ((($first)) + 1|0);
      $2412 = ($2411|0)==($last|0);
      if ($2412) {
       label = 696;
      } else {
       $2413 = HEAP8[$2411>>0]|0;
       $2414 = $2413 << 24 >> 24;
       switch ($2414|0) {
       case 112:  {
        $2415 = ((($db)) + 4|0);
        $2416 = HEAP32[$2415>>2]|0;
        $2417 = HEAP32[$db>>2]|0;
        $2418 = $2416;
        $2419 = $2417;
        $2420 = (($2418) - ($2419))|0;
        $2421 = (($2420|0) / 24)&-1;
        $2422 = ((($first)) + 2|0);
        $2423 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($2422,$last,$db)|0);
        $2424 = HEAP32[$2415>>2]|0;
        $2425 = HEAP32[$db>>2]|0;
        $2426 = $2424;
        $2427 = $2425;
        $2428 = (($2426) - ($2427))|0;
        $2429 = (($2428|0) / 24)&-1;
        $2430 = ($2423|0)==($2422|0);
        if ($2430) {
         label = 696;
         break L73;
        }
        $2431 = ((($db)) + 16|0);
        $2432 = ((($db)) + 12|0);
        $2433 = HEAP32[$2432>>2]|0;
        $2434 = $2433;
        $2435 = ((($db)) + 20|0);
        $2436 = HEAP32[$2435>>2]|0;
        $2437 = ((($db)) + 24|0);
        $2438 = HEAP32[$2437>>2]|0;
        $2439 = ($2436>>>0)<($2438>>>0);
        if ($2439) {
         HEAP32[$2436>>2] = 0;
         $2440 = ((($2436)) + 4|0);
         HEAP32[$2440>>2] = 0;
         $2441 = ((($2436)) + 8|0);
         HEAP32[$2441>>2] = 0;
         $2442 = ((($2436)) + 12|0);
         HEAP32[$2442>>2] = $2434;
         $2443 = HEAP32[$2435>>2]|0;
         $2444 = ((($2443)) + 16|0);
         HEAP32[$2435>>2] = $2444;
        } else {
         $2445 = ((($db)) + 28|0);
         $2446 = HEAP32[$2431>>2]|0;
         $2447 = $2436;
         $2448 = $2446;
         $2449 = (($2447) - ($2448))|0;
         $2450 = $2449 >> 4;
         $2451 = (($2450) + 1)|0;
         $2452 = ($2449|0)<(-16);
         if ($2452) {
          __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($2431);
          // unreachable;
         }
         $2453 = $2438;
         $2454 = (($2453) - ($2448))|0;
         $2455 = $2454 >> 4;
         $2456 = ($2455>>>0)<(1073741823);
         if ($2456) {
          $2457 = $2454 >> 3;
          $2458 = ($2457>>>0)<($2451>>>0);
          $2459 = $2458 ? $2451 : $2457;
          $$0$i$i$i29 = $2459;
         } else {
          $$0$i$i$i29 = 2147483647;
         }
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i28,$$0$i$i$i29,$2450,$2445);
         $2460 = ((($__v$i$i28)) + 8|0);
         $2461 = HEAP32[$2460>>2]|0;
         HEAP32[$2461>>2] = 0;
         $2462 = ((($2461)) + 4|0);
         HEAP32[$2462>>2] = 0;
         $2463 = ((($2461)) + 8|0);
         HEAP32[$2463>>2] = 0;
         $2464 = ((($2461)) + 12|0);
         HEAP32[$2464>>2] = $2434;
         $2465 = ((($2461)) + 16|0);
         HEAP32[$2460>>2] = $2465;
         __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($2431,$__v$i$i28);
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i28);
        }
        $2466 = ((($__v$i$i26)) + 8|0);
        $2467 = ($2421>>>0)<($2429>>>0);
        if ($2467) {
         $k20$0550 = $2421;
        } else {
         $$0 = $2423;
         break L1;
        }
        while(1) {
         $2468 = HEAP32[$2435>>2]|0;
         $2469 = ((($2468)) + -16|0);
         $2470 = HEAP32[$db>>2]|0;
         $2471 = (($2470) + (($k20$0550*24)|0)|0);
         $2472 = ((($2468)) + -12|0);
         $2473 = HEAP32[$2472>>2]|0;
         $2474 = ((($2468)) + -8|0);
         $2475 = HEAP32[$2474>>2]|0;
         $2476 = ($2473|0)==($2475|0);
         if ($2476) {
          $2485 = ((($2468)) + -4|0);
          $2486 = HEAP32[$2469>>2]|0;
          $2487 = $2473;
          $2488 = $2486;
          $2489 = (($2487) - ($2488))|0;
          $2490 = (($2489|0) / 24)&-1;
          $2491 = (($2490) + 1)|0;
          $2492 = ($2489|0)<(-24);
          if ($2492) {
           $$lcssa698 = $2469;
           label = 600;
           break;
          }
          $2493 = ($2490>>>0)<(1073741823);
          if ($2493) {
           $2494 = $2490 << 1;
           $2495 = ($2494>>>0)<($2491>>>0);
           $2496 = $2495 ? $2491 : $2494;
           $$0$i$i$i27 = $2496;
          } else {
           $$0$i$i$i27 = 2147483647;
          }
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i26,$$0$i$i$i27,$2490,$2485);
          $2497 = HEAP32[$2466>>2]|0;
          __THREW__ = 0;
          invoke_vii(400,($2497|0),($2471|0));
          $2498 = __THREW__; __THREW__ = 0;
          $2499 = $2498&1;
          if ($2499) {
           label = 606;
           break;
          }
          $2500 = ((($2497)) + 12|0);
          $2501 = (((($2470) + (($k20$0550*24)|0)|0)) + 12|0);
          __THREW__ = 0;
          invoke_vii(400,($2500|0),($2501|0));
          $2502 = __THREW__; __THREW__ = 0;
          $2503 = $2502&1;
          if ($2503) {
           $$lcssa704 = $2497;
           label = 605;
           break;
          }
          $2508 = ((($2497)) + 24|0);
          HEAP32[$2466>>2] = $2508;
          __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($2469,$__v$i$i26);
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i26);
         } else {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($2473,$2471);
          $2477 = ((($2473)) + 12|0);
          $2478 = (((($2470) + (($k20$0550*24)|0)|0)) + 12|0);
          __THREW__ = 0;
          invoke_vii(400,($2477|0),($2478|0));
          $2479 = __THREW__; __THREW__ = 0;
          $2480 = $2479&1;
          if ($2480) {
           $$lcssa702 = $2473;
           label = 597;
           break;
          }
          $2483 = HEAP32[$2472>>2]|0;
          $2484 = ((($2483)) + 24|0);
          HEAP32[$2472>>2] = $2484;
         }
         $2509 = (($k20$0550) + 1)|0;
         $2510 = ($2509>>>0)<($2429>>>0);
         if ($2510) {
          $k20$0550 = $2509;
         } else {
          $$0 = $2423;
          break L1;
         }
        }
        if ((label|0) == 597) {
         $2481 = ___cxa_find_matching_catch()|0;
         $2482 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($$lcssa702);
         ___resumeException($2481|0);
         // unreachable;
        }
        else if ((label|0) == 600) {
         __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($$lcssa698);
         // unreachable;
        }
        else if ((label|0) == 605) {
         $2504 = ___cxa_find_matching_catch()|0;
         $2505 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($$lcssa704);
         $eh$lpad$body$i$i$index34Z2D = $2505;$eh$lpad$body$i$i$indexZ2D = $2504;
        }
        else if ((label|0) == 606) {
         $2506 = ___cxa_find_matching_catch()|0;
         $2507 = tempRet0;
         $eh$lpad$body$i$i$index34Z2D = $2507;$eh$lpad$body$i$i$indexZ2D = $2506;
        }
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i26);
        ___resumeException($eh$lpad$body$i$i$indexZ2D|0);
        // unreachable;
        break;
       }
       case 84: case 116:  {
        $2511 = (__ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
        $2512 = ($2511|0)==($first|0);
        if ($2512) {
         label = 696;
         break L73;
        }
        $2513 = HEAP32[$db>>2]|0;
        $2514 = ((($db)) + 4|0);
        $2515 = HEAP32[$2514>>2]|0;
        $2516 = ($2513|0)==($2515|0);
        if ($2516) {
         $$0 = $first;
         break L1;
        }
        $2517 = ((($db)) + 16|0);
        $2518 = ((($2515)) + -24|0);
        $2519 = ((($db)) + 12|0);
        $2520 = HEAP32[$2519>>2]|0;
        HEAP32[$66>>2] = $2520;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($65,$2518,$66);
        $2521 = ((($db)) + 20|0);
        $2522 = HEAP32[$2521>>2]|0;
        $2523 = ((($db)) + 24|0);
        $2524 = HEAP32[$2523>>2]|0;
        $2525 = ($2522>>>0)<($2524>>>0);
        if ($2525) {
         $2526 = ((($65)) + 12|0);
         $2527 = ((($2522)) + 4|0);
         $2528 = HEAP32[$2526>>2]|0;
         $2529 = ((($2522)) + 12|0);
         HEAP32[$2529>>2] = $2528;
         $2530 = HEAP32[$65>>2]|0;
         HEAP32[$2522>>2] = $2530;
         $2531 = ((($65)) + 4|0);
         $2532 = HEAP32[$2531>>2]|0;
         HEAP32[$2527>>2] = $2532;
         $2533 = ((($65)) + 8|0);
         $2534 = HEAP32[$2533>>2]|0;
         $2535 = ((($2522)) + 8|0);
         HEAP32[$2535>>2] = $2534;
         HEAP32[$2533>>2] = 0;
         HEAP32[$2531>>2] = 0;
         HEAP32[$65>>2] = 0;
         $2536 = HEAP32[$2521>>2]|0;
         $2537 = ((($2536)) + 16|0);
         HEAP32[$2521>>2] = $2537;
        } else {
         $2538 = ((($db)) + 28|0);
         $2539 = HEAP32[$2517>>2]|0;
         $2540 = $2522;
         $2541 = $2539;
         $2542 = (($2540) - ($2541))|0;
         $2543 = $2542 >> 4;
         $2544 = (($2543) + 1)|0;
         $2545 = ($2542|0)<(-16);
         if ($2545) {
          __THREW__ = 0;
          invoke_vi(402,($2517|0));
          $2546 = __THREW__; __THREW__ = 0;
          $2547 = ___cxa_find_matching_catch()|0;
          $2548 = tempRet0;
          __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($65);
          $$10 = $2547;$$1013 = $2548;
          break L73;
         }
         $2549 = $2524;
         $2550 = (($2549) - ($2541))|0;
         $2551 = $2550 >> 4;
         $2552 = ($2551>>>0)<(1073741823);
         if ($2552) {
          $2553 = $2550 >> 3;
          $2554 = ($2553>>>0)<($2544>>>0);
          $2555 = $2554 ? $2544 : $2553;
          $$0$i$i$i22 = $2555;
         } else {
          $$0$i$i$i22 = 2147483647;
         }
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i21,$$0$i$i$i22,$2543,$2538);
         $2556 = ((($__v$i$i21)) + 8|0);
         $2557 = HEAP32[$2556>>2]|0;
         $2558 = ((($65)) + 12|0);
         $2559 = ((($2557)) + 4|0);
         $2560 = HEAP32[$2558>>2]|0;
         $2561 = ((($2557)) + 12|0);
         HEAP32[$2561>>2] = $2560;
         $2562 = HEAP32[$65>>2]|0;
         HEAP32[$2557>>2] = $2562;
         $2563 = ((($65)) + 4|0);
         $2564 = HEAP32[$2563>>2]|0;
         HEAP32[$2559>>2] = $2564;
         $2565 = ((($65)) + 8|0);
         $2566 = HEAP32[$2565>>2]|0;
         $2567 = ((($2557)) + 8|0);
         HEAP32[$2567>>2] = $2566;
         HEAP32[$2565>>2] = 0;
         HEAP32[$2563>>2] = 0;
         HEAP32[$65>>2] = 0;
         $2568 = ((($2557)) + 16|0);
         HEAP32[$2556>>2] = $2568;
         __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($2517,$__v$i$i21);
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i21);
        }
        __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($65);
        $$0 = $2511;
        break L1;
        break;
       }
       case 118:  {
        $2569 = $last;
        $2570 = $first;
        $2571 = (($2569) - ($2570))|0;
        $2572 = ($2571|0)>(3);
        $2573 = ($229<<24>>24)==(68);
        $or$cond448 = $2572 & $2573;
        $2574 = ($2413<<24>>24)==(118);
        $or$cond449 = $or$cond448 & $2574;
        L831: do {
         if ($or$cond449) {
          $2575 = ((($first)) + 2|0);
          $2576 = HEAP8[$2575>>0]|0;
          $$off = (($2576) + -49)<<24>>24;
          $2577 = ($$off&255)<(9);
          do {
           if ($2577) {
            $2578 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($2575,$last)|0);
            $2579 = ($2578|0)==($last|0);
            if ($2579) {
             $$1$i263 = $first;
             break L831;
            }
            $2580 = HEAP8[$2578>>0]|0;
            $2581 = ($2580<<24>>24)==(95);
            if (!($2581)) {
             $$1$i263 = $first;
             break L831;
            }
            $2582 = $2578;
            $2583 = $2575;
            $2584 = (($2582) - ($2583))|0;
            $2585 = ((($2578)) + 1|0);
            $2586 = ($2585|0)==($last|0);
            if ($2586) {
             $$1$i263 = $first;
             break L831;
            }
            $2587 = HEAP8[$2585>>0]|0;
            $2588 = ($2587<<24>>24)==(112);
            if (!($2588)) {
             $2589 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($2585,$last,$db)|0);
             $2590 = ($2589|0)==($2585|0);
             if ($2590) {
              $$1$i263 = $first;
              break L831;
             }
             $2591 = HEAP32[$db>>2]|0;
             $2592 = ((($db)) + 4|0);
             $2593 = HEAP32[$2592>>2]|0;
             $2594 = ($2591|0)==($2593|0);
             if ($2594) {
              $$1$i263 = $first;
              break L831;
             }
             $2595 = ((($2593)) + -24|0);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($2,$2575,$2584);
             __THREW__ = 0;
             $2596 = (invoke_iiii(391,($2|0),0,(17117|0))|0);
             $2597 = __THREW__; __THREW__ = 0;
             $2598 = $2597&1;
             if ($2598) {
              $2620 = ___cxa_find_matching_catch()|0;
              $2621 = tempRet0;
              $$15$i = $2621;$$18$i = $2620;
             } else {
              ;HEAP32[$1>>2]=HEAP32[$2596>>2]|0;HEAP32[$1+4>>2]=HEAP32[$2596+4>>2]|0;HEAP32[$1+8>>2]=HEAP32[$2596+8>>2]|0;
              HEAP32[$2596>>2] = 0;
              $2599 = ((($2596)) + 4|0);
              HEAP32[$2599>>2] = 0;
              $2600 = ((($2596)) + 8|0);
              HEAP32[$2600>>2] = 0;
              __THREW__ = 0;
              $2601 = (invoke_iii(392,($1|0),(17040|0))|0);
              $2602 = __THREW__; __THREW__ = 0;
              $2603 = $2602&1;
              do {
               if ($2603) {
                $2622 = ___cxa_find_matching_catch()|0;
                $2623 = tempRet0;
                $$04$i232 = $2623;$$07$i = $2622;
               } else {
                ;HEAP32[$0>>2]=HEAP32[$2601>>2]|0;HEAP32[$0+4>>2]=HEAP32[$2601+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[$2601+8>>2]|0;
                HEAP32[$2601>>2] = 0;
                $2604 = ((($2601)) + 4|0);
                HEAP32[$2604>>2] = 0;
                $2605 = ((($2601)) + 8|0);
                HEAP32[$2605>>2] = 0;
                $2606 = HEAP8[$0>>0]|0;
                $2607 = $2606 & 1;
                $2608 = ($2607<<24>>24)==(0);
                $2609 = ((($0)) + 8|0);
                $2610 = HEAP32[$2609>>2]|0;
                $2611 = ((($0)) + 1|0);
                $2612 = $2608 ? $2611 : $2610;
                $2613 = ((($0)) + 4|0);
                $2614 = HEAP32[$2613>>2]|0;
                $2615 = $2606&255;
                $2616 = $2615 >>> 1;
                $2617 = $2608 ? $2616 : $2614;
                __THREW__ = 0;
                (invoke_iiii(387,($2595|0),($2612|0),($2617|0))|0);
                $2618 = __THREW__; __THREW__ = 0;
                $2619 = $2618&1;
                if ($2619) {
                 $2624 = ___cxa_find_matching_catch()|0;
                 $2625 = tempRet0;
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
                 $$04$i232 = $2625;$$07$i = $2624;
                 break;
                } else {
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
                 $$1$i263 = $2589;
                 break L831;
                }
               }
              } while(0);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
              $$15$i = $$04$i232;$$18$i = $$07$i;
             }
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
             $$6$i264 = $$15$i;$$613$i = $$18$i;
             break;
            }
            $2626 = ((($2578)) + 2|0);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($6,$2575,$2584);
            __THREW__ = 0;
            $2627 = (invoke_iiii(391,($6|0),0,(17126|0))|0);
            $2628 = __THREW__; __THREW__ = 0;
            $2629 = $2628&1;
            if ($2629) {
             $2665 = ___cxa_find_matching_catch()|0;
             $2666 = tempRet0;
             $$3$i234 = $2666;$$310$i = $2665;
            } else {
             ;HEAP32[$5>>2]=HEAP32[$2627>>2]|0;HEAP32[$5+4>>2]=HEAP32[$2627+4>>2]|0;HEAP32[$5+8>>2]=HEAP32[$2627+8>>2]|0;
             HEAP32[$2627>>2] = 0;
             $2630 = ((($2627)) + 4|0);
             HEAP32[$2630>>2] = 0;
             $2631 = ((($2627)) + 8|0);
             HEAP32[$2631>>2] = 0;
             __THREW__ = 0;
             $2632 = (invoke_iii(392,($5|0),(17040|0))|0);
             $2633 = __THREW__; __THREW__ = 0;
             $2634 = $2633&1;
             do {
              if ($2634) {
               $2667 = ___cxa_find_matching_catch()|0;
               $2668 = tempRet0;
               $$26$i = $2668;$$29$i = $2667;
              } else {
               ;HEAP32[$4>>2]=HEAP32[$2632>>2]|0;HEAP32[$4+4>>2]=HEAP32[$2632+4>>2]|0;HEAP32[$4+8>>2]=HEAP32[$2632+8>>2]|0;
               HEAP32[$2632>>2] = 0;
               $2635 = ((($2632)) + 4|0);
               HEAP32[$2635>>2] = 0;
               $2636 = ((($2632)) + 8|0);
               HEAP32[$2636>>2] = 0;
               __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3,$4);
               $2637 = ((($db)) + 4|0);
               $2638 = HEAP32[$2637>>2]|0;
               $2639 = ((($db)) + 8|0);
               $2640 = HEAP32[$2639>>2]|0;
               $2641 = ($2638>>>0)<($2640>>>0);
               if ($2641) {
                __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($2638,$3);
                $2642 = HEAP32[$2637>>2]|0;
                $2643 = ((($2642)) + 24|0);
                HEAP32[$2637>>2] = $2643;
               } else {
                $2644 = ((($db)) + 12|0);
                $2645 = HEAP32[$db>>2]|0;
                $2646 = $2638;
                $2647 = $2645;
                $2648 = (($2646) - ($2647))|0;
                $2649 = (($2648|0) / 24)&-1;
                $2650 = (($2649) + 1)|0;
                $2651 = ($2648|0)<(-24);
                if ($2651) {
                 __THREW__ = 0;
                 invoke_vi(402,($db|0));
                 $2652 = __THREW__; __THREW__ = 0;
                 $2653 = ___cxa_find_matching_catch()|0;
                 $2654 = tempRet0;
                 __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
                 $$26$i = $2654;$$29$i = $2653;
                 break;
                }
                $2655 = $2640;
                $2656 = (($2655) - ($2647))|0;
                $2657 = (($2656|0) / 24)&-1;
                $2658 = ($2657>>>0)<(1073741823);
                if ($2658) {
                 $2659 = $2657 << 1;
                 $2660 = ($2659>>>0)<($2650>>>0);
                 $2661 = $2660 ? $2650 : $2659;
                 $$0$i$i$i$i = $2661;
                } else {
                 $$0$i$i$i$i = 2147483647;
                }
                __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i$i,$$0$i$i$i$i,$2649,$2644);
                $2662 = ((($__v$i$i$i)) + 8|0);
                $2663 = HEAP32[$2662>>2]|0;
                __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($2663,$3);
                $2664 = ((($2663)) + 24|0);
                HEAP32[$2662>>2] = $2664;
                __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i$i);
                __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i$i);
               }
               __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
               $$1$i263 = $2626;
               break L831;
              }
             } while(0);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
             $$3$i234 = $$26$i;$$310$i = $$29$i;
            }
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
            $$6$i264 = $$3$i234;$$613$i = $$310$i;
           } else {
            HEAP32[$num1$i>>2] = 0;
            $2669 = ((($num1$i)) + 4|0);
            HEAP32[$2669>>2] = 0;
            $2670 = ((($num1$i)) + 8|0);
            HEAP32[$2670>>2] = 0;
            $2671 = ($2576<<24>>24)==(95);
            if ($2671) {
             $t12$0$i = $2575;
             label = 669;
            } else {
             __THREW__ = 0;
             $2672 = (invoke_iiii(406,($2575|0),($last|0),($db|0))|0);
             $2673 = __THREW__; __THREW__ = 0;
             $2674 = $2673&1;
             if ($2674) {
              label = 655;
             } else {
              $2675 = ($2672|0)==($2575|0);
              if ($2675) {
               $t12$0$i = $2575;
               label = 669;
              } else {
               $2676 = HEAP32[$db>>2]|0;
               $2677 = ((($db)) + 4|0);
               $2678 = HEAP32[$2677>>2]|0;
               $2679 = ($2676|0)==($2678|0);
               if ($2679) {
                label = 683;
               } else {
                $2682 = ((($2678)) + -24|0);
                __THREW__ = 0;
                invoke_vii(396,($7|0),($2682|0));
                $2683 = __THREW__; __THREW__ = 0;
                $2684 = $2683&1;
                if ($2684) {
                 label = 655;
                } else {
                 $2685 = HEAP8[$num1$i>>0]|0;
                 $2686 = $2685 & 1;
                 $2687 = ($2686<<24>>24)==(0);
                 L879: do {
                  if ($2687) {
                   $2688 = ((($num1$i)) + 1|0);
                   HEAP8[$2688>>0] = 0;
                   HEAP8[$num1$i>>0] = 0;
                  } else {
                   $2689 = ((($num1$i)) + 8|0);
                   $2690 = HEAP32[$2689>>2]|0;
                   HEAP8[$2690>>0] = 0;
                   $2691 = ((($num1$i)) + 4|0);
                   HEAP32[$2691>>2] = 0;
                   $2692 = HEAP32[$num1$i>>2]|0;
                   $2693 = $2692 & -2;
                   $phitmp$i$i$i$i$i$i$i240 = (($2693) + -1)|0;
                   $2694 = $2692&255;
                   $2695 = $2694 & 1;
                   $2696 = ($2695<<24>>24)==(0);
                   do {
                    if ($2696) {
                     $2697 = $2692 >>> 1;
                     $2698 = $2697 & 127;
                     $2699 = ($2694&255)<(22);
                     if ($2699) {
                      $2706 = ((($num1$i)) + 1|0);
                      $2707 = $2692 >>> 1;
                      $2708 = $2707 & 127;
                      $2709 = (($2708) + 1)|0;
                      _memcpy(($2706|0),($2690|0),($2709|0))|0;
                      _free($2690);
                      $$ph390 = $2698;
                      break;
                     }
                     $2700 = (($2698) + 16)|0;
                     $2701 = $2700 & 240;
                     $phitmp$i2$i$i$i$i$i$i243 = (($2701) + -1)|0;
                     $2702 = ($phitmp$i2$i$i$i$i$i$i243|0)==($phitmp$i$i$i$i$i$i$i240|0);
                     if ($2702) {
                      break L879;
                     }
                     $2703 = ($phitmp$i2$i$i$i$i$i$i243>>>0)<=($phitmp$i$i$i$i$i$i$i240>>>0);
                     $2704 = (_malloc($2701)|0);
                     $2705 = ($2704|0)==(0|0);
                     $or$cond$i$i$i$i$i$i245 = $2703 & $2705;
                     if ($or$cond$i$i$i$i$i$i245) {
                      break L879;
                     }
                     $2711 = ((($num1$i)) + 1|0);
                     $2712 = $2692 >>> 1;
                     $2713 = $2712 & 127;
                     $2714 = (($2713) + 1)|0;
                     _memcpy(($2704|0),($2711|0),($2714|0))|0;
                     $2715 = $2701 | 1;
                     HEAP32[$num1$i>>2] = $2715;
                     HEAP32[$2691>>2] = $2698;
                     HEAP32[$2689>>2] = $2704;
                     break L879;
                    } else {
                     $2710 = ((($num1$i)) + 1|0);
                     HEAP8[$2710>>0] = 0;
                     _free($2690);
                     $$ph390 = 0;
                    }
                   } while(0);
                   $2716 = $$ph390 << 1;
                   $2717 = $2716&255;
                   HEAP8[$num1$i>>0] = $2717;
                  }
                 } while(0);
                 ;HEAP32[$num1$i>>2]=HEAP32[$7>>2]|0;HEAP32[$num1$i+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$num1$i+8>>2]=HEAP32[$7+8>>2]|0;
                 HEAP32[$7>>2] = 0;
                 $2718 = ((($7)) + 4|0);
                 HEAP32[$2718>>2] = 0;
                 $2719 = ((($7)) + 8|0);
                 HEAP32[$2719>>2] = 0;
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
                 $2720 = HEAP32[$2677>>2]|0;
                 $2721 = ((($2720)) + -24|0);
                 $2723 = $2720;
                 while(1) {
                  $2722 = ((($2723)) + -24|0);
                  HEAP32[$2677>>2] = $2722;
                  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2722);
                  $$pre$i$i256 = HEAP32[$2677>>2]|0;
                  $2724 = ($$pre$i$i256|0)==($2721|0);
                  if ($2724) {
                   $t12$0$i = $2672;
                   label = 669;
                   break;
                  } else {
                   $2723 = $$pre$i$i256;
                  }
                 }
                }
               }
              }
             }
            }
            L894: do {
             if ((label|0) == 669) {
              $2725 = ($t12$0$i|0)==($last|0);
              L896: do {
               if ($2725) {
                $$13$i259$ph = $first;
               } else {
                $2726 = HEAP8[$t12$0$i>>0]|0;
                $2727 = ($2726<<24>>24)==(95);
                if ($2727) {
                 $2728 = ((($t12$0$i)) + 1|0);
                 $2729 = ($2728|0)==($last|0);
                 if ($2729) {
                  $$13$i259$ph = $first;
                 } else {
                  __THREW__ = 0;
                  $2730 = (invoke_iiii(394,($2728|0),($last|0),($db|0))|0);
                  $2731 = __THREW__; __THREW__ = 0;
                  $2732 = $2731&1;
                  if ($2732) {
                   label = 655;
                   break L894;
                  }
                  $2733 = ($2730|0)==($2728|0);
                  if ($2733) {
                   $$13$i259$ph = $first;
                  } else {
                   $2734 = HEAP32[$db>>2]|0;
                   $2735 = ((($db)) + 4|0);
                   $2736 = HEAP32[$2735>>2]|0;
                   $2737 = ($2734|0)==($2736|0);
                   if ($2737) {
                    label = 683;
                    break L894;
                   }
                   $2738 = ((($2736)) + -24|0);
                   __THREW__ = 0;
                   invoke_viii(407,($9|0),(17117|0),($num1$i|0));
                   $2739 = __THREW__; __THREW__ = 0;
                   $2740 = $2739&1;
                   if ($2740) {
                    label = 655;
                    break L894;
                   }
                   __THREW__ = 0;
                   $2741 = (invoke_iii(392,($9|0),(17040|0))|0);
                   $2742 = __THREW__; __THREW__ = 0;
                   $2743 = $2742&1;
                   do {
                    if ($2743) {
                     $2760 = ___cxa_find_matching_catch()|0;
                     $2761 = tempRet0;
                     $$4$i258 = $2761;$$411$i = $2760;
                    } else {
                     ;HEAP32[$8>>2]=HEAP32[$2741>>2]|0;HEAP32[$8+4>>2]=HEAP32[$2741+4>>2]|0;HEAP32[$8+8>>2]=HEAP32[$2741+8>>2]|0;
                     HEAP32[$2741>>2] = 0;
                     $2744 = ((($2741)) + 4|0);
                     HEAP32[$2744>>2] = 0;
                     $2745 = ((($2741)) + 8|0);
                     HEAP32[$2745>>2] = 0;
                     $2746 = HEAP8[$8>>0]|0;
                     $2747 = $2746 & 1;
                     $2748 = ($2747<<24>>24)==(0);
                     $2749 = ((($8)) + 8|0);
                     $2750 = HEAP32[$2749>>2]|0;
                     $2751 = ((($8)) + 1|0);
                     $2752 = $2748 ? $2751 : $2750;
                     $2753 = ((($8)) + 4|0);
                     $2754 = HEAP32[$2753>>2]|0;
                     $2755 = $2746&255;
                     $2756 = $2755 >>> 1;
                     $2757 = $2748 ? $2756 : $2754;
                     __THREW__ = 0;
                     (invoke_iiii(387,($2738|0),($2752|0),($2757|0))|0);
                     $2758 = __THREW__; __THREW__ = 0;
                     $2759 = $2758&1;
                     if ($2759) {
                      $2762 = ___cxa_find_matching_catch()|0;
                      $2763 = tempRet0;
                      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
                      $$4$i258 = $2763;$$411$i = $2762;
                      break;
                     } else {
                      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
                      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
                      $$13$i259$ph = $2730;
                      break L896;
                     }
                    }
                   } while(0);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
                   $$5$i261 = $$4$i258;$$512$i = $$411$i;
                   break L894;
                  }
                 }
                } else {
                 $$13$i259$ph = $first;
                }
               }
              } while(0);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($num1$i);
              $$1$i263 = $$13$i259$ph;
              break L831;
             }
            } while(0);
            if ((label|0) == 655) {
             $2680 = ___cxa_find_matching_catch()|0;
             $2681 = tempRet0;
             $$5$i261 = $2681;$$512$i = $2680;
            }
            else if ((label|0) == 683) {
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($num1$i);
             $$1$i263 = $first;
             break L831;
            }
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($num1$i);
            $$6$i264 = $$5$i261;$$613$i = $$512$i;
           }
          } while(0);
          ___resumeException($$613$i|0);
          // unreachable;
         } else {
          $$1$i263 = $first;
         }
        } while(0);
        $2764 = ($$1$i263|0)==($first|0);
        if ($2764) {
         label = 696;
         break L73;
        }
        $2765 = HEAP32[$db>>2]|0;
        $2766 = ((($db)) + 4|0);
        $2767 = HEAP32[$2766>>2]|0;
        $2768 = ($2765|0)==($2767|0);
        if ($2768) {
         $$0 = $first;
         break L1;
        }
        $2769 = ((($db)) + 16|0);
        $2770 = ((($2767)) + -24|0);
        $2771 = ((($db)) + 12|0);
        $2772 = HEAP32[$2771>>2]|0;
        HEAP32[$68>>2] = $2772;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($67,$2770,$68);
        $2773 = ((($db)) + 20|0);
        $2774 = HEAP32[$2773>>2]|0;
        $2775 = ((($db)) + 24|0);
        $2776 = HEAP32[$2775>>2]|0;
        $2777 = ($2774>>>0)<($2776>>>0);
        if ($2777) {
         $2778 = ((($67)) + 12|0);
         $2779 = ((($2774)) + 4|0);
         $2780 = HEAP32[$2778>>2]|0;
         $2781 = ((($2774)) + 12|0);
         HEAP32[$2781>>2] = $2780;
         $2782 = HEAP32[$67>>2]|0;
         HEAP32[$2774>>2] = $2782;
         $2783 = ((($67)) + 4|0);
         $2784 = HEAP32[$2783>>2]|0;
         HEAP32[$2779>>2] = $2784;
         $2785 = ((($67)) + 8|0);
         $2786 = HEAP32[$2785>>2]|0;
         $2787 = ((($2774)) + 8|0);
         HEAP32[$2787>>2] = $2786;
         HEAP32[$2785>>2] = 0;
         HEAP32[$2783>>2] = 0;
         HEAP32[$67>>2] = 0;
         $2788 = HEAP32[$2773>>2]|0;
         $2789 = ((($2788)) + 16|0);
         HEAP32[$2773>>2] = $2789;
        } else {
         $2790 = ((($db)) + 28|0);
         $2791 = HEAP32[$2769>>2]|0;
         $2792 = $2774;
         $2793 = $2791;
         $2794 = (($2792) - ($2793))|0;
         $2795 = $2794 >> 4;
         $2796 = (($2795) + 1)|0;
         $2797 = ($2794|0)<(-16);
         if ($2797) {
          __THREW__ = 0;
          invoke_vi(402,($2769|0));
          $2798 = __THREW__; __THREW__ = 0;
          $2799 = ___cxa_find_matching_catch()|0;
          $2800 = tempRet0;
          __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($67);
          $$10 = $2799;$$1013 = $2800;
          break L73;
         }
         $2801 = $2776;
         $2802 = (($2801) - ($2793))|0;
         $2803 = $2802 >> 4;
         $2804 = ($2803>>>0)<(1073741823);
         if ($2804) {
          $2805 = $2802 >> 3;
          $2806 = ($2805>>>0)<($2796>>>0);
          $2807 = $2806 ? $2796 : $2805;
          $$0$i$i$i17 = $2807;
         } else {
          $$0$i$i$i17 = 2147483647;
         }
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i16,$$0$i$i$i17,$2795,$2790);
         $2808 = ((($__v$i$i16)) + 8|0);
         $2809 = HEAP32[$2808>>2]|0;
         $2810 = ((($67)) + 12|0);
         $2811 = ((($2809)) + 4|0);
         $2812 = HEAP32[$2810>>2]|0;
         $2813 = ((($2809)) + 12|0);
         HEAP32[$2813>>2] = $2812;
         $2814 = HEAP32[$67>>2]|0;
         HEAP32[$2809>>2] = $2814;
         $2815 = ((($67)) + 4|0);
         $2816 = HEAP32[$2815>>2]|0;
         HEAP32[$2811>>2] = $2816;
         $2817 = ((($67)) + 8|0);
         $2818 = HEAP32[$2817>>2]|0;
         $2819 = ((($2809)) + 8|0);
         HEAP32[$2819>>2] = $2818;
         HEAP32[$2817>>2] = 0;
         HEAP32[$2815>>2] = 0;
         HEAP32[$67>>2] = 0;
         $2820 = ((($2809)) + 16|0);
         HEAP32[$2808>>2] = $2820;
         __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($2769,$__v$i$i16);
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i16);
        }
        __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($67);
        $$0 = $$1$i263;
        break L1;
        break;
       }
       default: {
        label = 696;
        break L73;
       }
       }
      }
      break;
     }
     default: {
      label = 696;
     }
     }
    } while(0);
    do {
     if ((label|0) == 696) {
      $2821 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_builtin_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $2822 = ($2821|0)==($first|0);
      if (!($2822)) {
       $$0 = $2821;
       break L1;
      }
      $2823 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $2824 = ($2823|0)==($first|0);
      if ($2824) {
       $$0 = $first;
       break L1;
      }
      $2825 = HEAP32[$db>>2]|0;
      $2826 = ((($db)) + 4|0);
      $2827 = HEAP32[$2826>>2]|0;
      $2828 = ($2825|0)==($2827|0);
      if ($2828) {
       $$0 = $first;
       break L1;
      }
      $2829 = ((($db)) + 16|0);
      $2830 = ((($2827)) + -24|0);
      $2831 = ((($db)) + 12|0);
      $2832 = HEAP32[$2831>>2]|0;
      HEAP32[$70>>2] = $2832;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($69,$2830,$70);
      $2833 = ((($db)) + 20|0);
      $2834 = HEAP32[$2833>>2]|0;
      $2835 = ((($db)) + 24|0);
      $2836 = HEAP32[$2835>>2]|0;
      $2837 = ($2834>>>0)<($2836>>>0);
      if ($2837) {
       $2838 = ((($69)) + 12|0);
       $2839 = ((($2834)) + 4|0);
       $2840 = HEAP32[$2838>>2]|0;
       $2841 = ((($2834)) + 12|0);
       HEAP32[$2841>>2] = $2840;
       $2842 = HEAP32[$69>>2]|0;
       HEAP32[$2834>>2] = $2842;
       $2843 = ((($69)) + 4|0);
       $2844 = HEAP32[$2843>>2]|0;
       HEAP32[$2839>>2] = $2844;
       $2845 = ((($69)) + 8|0);
       $2846 = HEAP32[$2845>>2]|0;
       $2847 = ((($2834)) + 8|0);
       HEAP32[$2847>>2] = $2846;
       HEAP32[$2845>>2] = 0;
       HEAP32[$2843>>2] = 0;
       HEAP32[$69>>2] = 0;
       $2848 = HEAP32[$2833>>2]|0;
       $2849 = ((($2848)) + 16|0);
       HEAP32[$2833>>2] = $2849;
      } else {
       $2850 = ((($db)) + 28|0);
       $2851 = HEAP32[$2829>>2]|0;
       $2852 = $2834;
       $2853 = $2851;
       $2854 = (($2852) - ($2853))|0;
       $2855 = $2854 >> 4;
       $2856 = (($2855) + 1)|0;
       $2857 = ($2854|0)<(-16);
       if ($2857) {
        __THREW__ = 0;
        invoke_vi(402,($2829|0));
        $2858 = __THREW__; __THREW__ = 0;
        $2859 = ___cxa_find_matching_catch()|0;
        $2860 = tempRet0;
        __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($69);
        $$10 = $2859;$$1013 = $2860;
        break;
       }
       $2861 = $2836;
       $2862 = (($2861) - ($2853))|0;
       $2863 = $2862 >> 4;
       $2864 = ($2863>>>0)<(1073741823);
       if ($2864) {
        $2865 = $2862 >> 3;
        $2866 = ($2865>>>0)<($2856>>>0);
        $2867 = $2866 ? $2856 : $2865;
        $$0$i$i$i = $2867;
       } else {
        $$0$i$i$i = 2147483647;
       }
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i,$$0$i$i$i,$2855,$2850);
       $2868 = ((($__v$i$i)) + 8|0);
       $2869 = HEAP32[$2868>>2]|0;
       $2870 = ((($69)) + 12|0);
       $2871 = ((($2869)) + 4|0);
       $2872 = HEAP32[$2870>>2]|0;
       $2873 = ((($2869)) + 12|0);
       HEAP32[$2873>>2] = $2872;
       $2874 = HEAP32[$69>>2]|0;
       HEAP32[$2869>>2] = $2874;
       $2875 = ((($69)) + 4|0);
       $2876 = HEAP32[$2875>>2]|0;
       HEAP32[$2871>>2] = $2876;
       $2877 = ((($69)) + 8|0);
       $2878 = HEAP32[$2877>>2]|0;
       $2879 = ((($2869)) + 8|0);
       HEAP32[$2879>>2] = $2878;
       HEAP32[$2877>>2] = 0;
       HEAP32[$2875>>2] = 0;
       HEAP32[$69>>2] = 0;
       $2880 = ((($2869)) + 16|0);
       HEAP32[$2868>>2] = $2880;
       __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($2829,$__v$i$i);
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i);
      }
      __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($69);
      $$0 = $2823;
      break L1;
     }
    } while(0);
    ___resumeException($$10|0);
    // unreachable;
   } else {
    $$0 = $227;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($first,$last,$cv) {
 $first = $first|0;
 $last = $last|0;
 $cv = $cv|0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$cv>>2] = 0;
 $0 = ($first|0)==($last|0);
 if ($0) {
  $$2 = $first;
 } else {
  $1 = HEAP8[$first>>0]|0;
  $2 = ($1<<24>>24)==(114);
  if ($2) {
   HEAP32[$cv>>2] = 4;
   $3 = ((($first)) + 1|0);
   $$pre = HEAP8[$3>>0]|0;
   $$0 = $3;$5 = $$pre;$7 = 4;
  } else {
   $$0 = $first;$5 = $1;$7 = 0;
  }
  $4 = ($5<<24>>24)==(86);
  if ($4) {
   $6 = $7 | 2;
   HEAP32[$cv>>2] = $6;
   $8 = ((($$0)) + 1|0);
   $$pre1 = HEAP8[$8>>0]|0;
   $$1 = $8;$10 = $$pre1;$12 = $6;
  } else {
   $$1 = $$0;$10 = $5;$12 = $7;
  }
  $9 = ($10<<24>>24)==(75);
  if ($9) {
   $11 = $12 | 1;
   HEAP32[$cv>>2] = $11;
   $13 = ((($$1)) + 1|0);
   $$2 = $13;
  } else {
   $$2 = $$1;
  }
 }
 return ($$2|0);
}
function __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___assert_fail((18716|0),(18739|0),303,(16932|0));
 // unreachable;
}
function __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 16|0);
 HEAP32[$1>>2] = $__a;
 $2 = ($__cap|0)==(0);
 if ($2) {
  $6 = 0;
 } else {
  $3 = HEAP32[$__a>>2]|0;
  $4 = $__cap << 4;
  $5 = (__ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8allocateEj($3,$4)|0);
  $6 = $5;
 }
 HEAP32[$this>>2] = $6;
 $7 = (($6) + ($__start<<4)|0);
 $8 = ((($this)) + 8|0);
 HEAP32[$8>>2] = $7;
 $9 = ((($this)) + 4|0);
 HEAP32[$9>>2] = $7;
 $10 = (($6) + ($__cap<<4)|0);
 $11 = ((($this)) + 12|0);
 HEAP32[$11>>2] = $10;
 return;
}
function __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $$0$i1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($this)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($__v)) + 4|0);
 $4 = ($2|0)==($0|0);
 if (!($4)) {
  $$0$i1 = $2;
  while(1) {
   $5 = HEAP32[$3>>2]|0;
   $6 = ((($5)) + -16|0);
   $7 = ((($$0$i1)) + -16|0);
   $8 = ((($$0$i1)) + -4|0);
   HEAP32[$6>>2] = 0;
   $9 = ((($5)) + -12|0);
   HEAP32[$9>>2] = 0;
   $10 = ((($5)) + -8|0);
   $11 = HEAP32[$8>>2]|0;
   HEAP32[$10>>2] = 0;
   $12 = ((($5)) + -4|0);
   HEAP32[$12>>2] = $11;
   $13 = HEAP32[$7>>2]|0;
   HEAP32[$6>>2] = $13;
   $14 = ((($$0$i1)) + -12|0);
   $15 = HEAP32[$14>>2]|0;
   HEAP32[$9>>2] = $15;
   $16 = ((($$0$i1)) + -8|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($5)) + -8|0);
   HEAP32[$18>>2] = $17;
   HEAP32[$16>>2] = 0;
   HEAP32[$14>>2] = 0;
   HEAP32[$7>>2] = 0;
   $19 = HEAP32[$3>>2]|0;
   $20 = ((($19)) + -16|0);
   HEAP32[$3>>2] = $20;
   $21 = ($7|0)==($0|0);
   if ($21) {
    break;
   } else {
    $$0$i1 = $7;
   }
  }
 }
 $22 = HEAP32[$this>>2]|0;
 $23 = HEAP32[$3>>2]|0;
 HEAP32[$this>>2] = $23;
 HEAP32[$3>>2] = $22;
 $24 = ((($__v)) + 8|0);
 $25 = HEAP32[$1>>2]|0;
 $26 = HEAP32[$24>>2]|0;
 HEAP32[$1>>2] = $26;
 HEAP32[$24>>2] = $25;
 $27 = ((($this)) + 8|0);
 $28 = ((($__v)) + 12|0);
 $29 = HEAP32[$27>>2]|0;
 $30 = HEAP32[$28>>2]|0;
 HEAP32[$27>>2] = $30;
 HEAP32[$28>>2] = $29;
 $31 = HEAP32[$3>>2]|0;
 HEAP32[$__v>>2] = $31;
 return;
}
function __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($1|0);
 if (!($4)) {
  $6 = $3;
  while(1) {
   $5 = ((($6)) + -16|0);
   HEAP32[$2>>2] = $5;
   __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($5);
   $7 = HEAP32[$2>>2]|0;
   $8 = ($7|0)==($1|0);
   if ($8) {
    break;
   } else {
    $6 = $7;
   }
  }
 }
 $9 = HEAP32[$this>>2]|0;
 $10 = ($9|0)==(0|0);
 if (!($10)) {
  $11 = ((($this)) + 16|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = ((($this)) + 12|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = $14;
  $16 = $9;
  $17 = (($15) - ($16))|0;
  $18 = HEAP32[$12>>2]|0;
  __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj($18,$9,$17);
 }
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($this,$__str) {
 $this = $this|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__str>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  ;HEAP32[$this>>2]=HEAP32[$__str>>2]|0;HEAP32[$this+4>>2]=HEAP32[$__str+4>>2]|0;HEAP32[$this+8>>2]=HEAP32[$__str+8>>2]|0;
 } else {
  $3 = ((($__str)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ((($__str)) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this,$4,$6);
 }
 return;
}
function __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 16|0);
 HEAP32[$1>>2] = $__a;
 $2 = ($__cap|0)==(0);
 if ($2) {
  $6 = 0;
 } else {
  $3 = HEAP32[$__a>>2]|0;
  $4 = ($__cap*24)|0;
  $5 = (__ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8allocateEj($3,$4)|0);
  $6 = $5;
 }
 HEAP32[$this>>2] = $6;
 $7 = (($6) + (($__start*24)|0)|0);
 $8 = ((($this)) + 8|0);
 HEAP32[$8>>2] = $7;
 $9 = ((($this)) + 4|0);
 HEAP32[$9>>2] = $7;
 $10 = (($6) + (($__cap*24)|0)|0);
 $11 = ((($this)) + 12|0);
 HEAP32[$11>>2] = $10;
 return;
}
function __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($1|0);
 if (!($4)) {
  $6 = $3;
  while(1) {
   $5 = ((($6)) + -24|0);
   HEAP32[$2>>2] = $5;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
   $7 = HEAP32[$2>>2]|0;
   $8 = ($7|0)==($1|0);
   if ($8) {
    break;
   } else {
    $6 = $7;
   }
  }
 }
 $9 = HEAP32[$this>>2]|0;
 $10 = ($9|0)==(0|0);
 if (!($10)) {
  $11 = ((($this)) + 16|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = ((($this)) + 12|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = $14;
  $16 = $9;
  $17 = (($15) - ($16))|0;
  $18 = HEAP32[$12>>2]|0;
  __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj($18,$9,$17);
 }
 return;
}
function __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $$0$i1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($this)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($__v)) + 4|0);
 $4 = ($2|0)==($0|0);
 if (!($4)) {
  $$0$i1 = $2;
  while(1) {
   $5 = HEAP32[$3>>2]|0;
   $6 = ((($5)) + -24|0);
   $7 = ((($$0$i1)) + -24|0);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($6,$7);
   $8 = HEAP32[$3>>2]|0;
   $9 = ((($8)) + -24|0);
   HEAP32[$3>>2] = $9;
   $10 = ($7|0)==($0|0);
   if ($10) {
    break;
   } else {
    $$0$i1 = $7;
   }
  }
 }
 $11 = HEAP32[$this>>2]|0;
 $12 = HEAP32[$3>>2]|0;
 HEAP32[$this>>2] = $12;
 HEAP32[$3>>2] = $11;
 $13 = ((($__v)) + 8|0);
 $14 = HEAP32[$1>>2]|0;
 $15 = HEAP32[$13>>2]|0;
 HEAP32[$1>>2] = $15;
 HEAP32[$13>>2] = $14;
 $16 = ((($this)) + 8|0);
 $17 = ((($__v)) + 12|0);
 $18 = HEAP32[$16>>2]|0;
 $19 = HEAP32[$17>>2]|0;
 HEAP32[$16>>2] = $19;
 HEAP32[$17>>2] = $18;
 $20 = HEAP32[$3>>2]|0;
 HEAP32[$__v>>2] = $20;
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_118parse_builtin_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i103 = 0, $$0$i$i$i108 = 0, $$0$i$i$i113 = 0, $$0$i$i$i118 = 0, $$0$i$i$i123 = 0, $$0$i$i$i128 = 0, $$0$i$i$i133 = 0, $$0$i$i$i138 = 0, $$0$i$i$i14 = 0, $$0$i$i$i143 = 0, $$0$i$i$i19 = 0, $$0$i$i$i24 = 0, $$0$i$i$i29 = 0, $$0$i$i$i34 = 0, $$0$i$i$i39 = 0, $$0$i$i$i4 = 0, $$0$i$i$i44 = 0, $$0$i$i$i49 = 0;
 var $$0$i$i$i54 = 0, $$0$i$i$i59 = 0, $$0$i$i$i66 = 0, $$0$i$i$i71 = 0, $$0$i$i$i76 = 0, $$0$i$i$i81 = 0, $$0$i$i$i88 = 0, $$0$i$i$i9 = 0, $$0$i$i$i93 = 0, $$0$i$i$i98 = 0, $$01 = 0, $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0;
 var $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0;
 var $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0;
 var $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0;
 var $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0;
 var $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0;
 var $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0;
 var $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0;
 var $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0;
 var $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0;
 var $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0;
 var $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0;
 var $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0;
 var $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0;
 var $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0;
 var $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0;
 var $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0;
 var $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0;
 var $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0;
 var $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0;
 var $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0;
 var $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0;
 var $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0;
 var $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0;
 var $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0;
 var $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0;
 var $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0;
 var $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0;
 var $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0;
 var $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0;
 var $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0;
 var $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__v$i$i = 0, $__v$i$i102 = 0, $__v$i$i107 = 0, $__v$i$i112 = 0, $__v$i$i117 = 0, $__v$i$i122 = 0, $__v$i$i127 = 0, $__v$i$i13 = 0, $__v$i$i132 = 0, $__v$i$i137 = 0, $__v$i$i142 = 0;
 var $__v$i$i18 = 0, $__v$i$i23 = 0, $__v$i$i28 = 0, $__v$i$i3 = 0, $__v$i$i33 = 0, $__v$i$i38 = 0, $__v$i$i43 = 0, $__v$i$i48 = 0, $__v$i$i53 = 0, $__v$i$i58 = 0, $__v$i$i65 = 0, $__v$i$i70 = 0, $__v$i$i75 = 0, $__v$i$i8 = 0, $__v$i$i80 = 0, $__v$i$i87 = 0, $__v$i$i92 = 0, $__v$i$i97 = 0, $first$ = 0, dest = 0;
 var label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1280|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v$i$i142 = sp + 1256|0;
 $__v$i$i137 = sp + 1236|0;
 $__v$i$i132 = sp + 1216|0;
 $__v$i$i127 = sp + 1196|0;
 $__v$i$i122 = sp + 1176|0;
 $__v$i$i117 = sp + 1156|0;
 $__v$i$i112 = sp + 1136|0;
 $__v$i$i107 = sp + 1116|0;
 $__v$i$i102 = sp + 1096|0;
 $__v$i$i97 = sp + 1076|0;
 $__v$i$i92 = sp + 1056|0;
 $__v$i$i87 = sp + 1036|0;
 $__v$i$i80 = sp + 1016|0;
 $__v$i$i75 = sp + 996|0;
 $__v$i$i70 = sp + 976|0;
 $__v$i$i65 = sp + 956|0;
 $__v$i$i58 = sp + 936|0;
 $__v$i$i53 = sp + 916|0;
 $__v$i$i48 = sp + 896|0;
 $__v$i$i43 = sp + 876|0;
 $__v$i$i38 = sp + 856|0;
 $__v$i$i33 = sp + 836|0;
 $__v$i$i28 = sp + 816|0;
 $__v$i$i23 = sp + 796|0;
 $__v$i$i18 = sp + 776|0;
 $__v$i$i13 = sp + 756|0;
 $__v$i$i8 = sp + 736|0;
 $__v$i$i3 = sp + 716|0;
 $__v$i$i = sp + 696|0;
 $0 = sp + 672|0;
 $1 = sp + 648|0;
 $2 = sp + 624|0;
 $3 = sp + 600|0;
 $4 = sp + 576|0;
 $5 = sp + 552|0;
 $6 = sp + 528|0;
 $7 = sp + 504|0;
 $8 = sp + 480|0;
 $9 = sp + 456|0;
 $10 = sp + 432|0;
 $11 = sp + 408|0;
 $12 = sp + 384|0;
 $13 = sp + 360|0;
 $14 = sp + 336|0;
 $15 = sp + 312|0;
 $16 = sp + 288|0;
 $17 = sp + 264|0;
 $18 = sp + 240|0;
 $19 = sp + 216|0;
 $20 = sp + 192|0;
 $21 = sp + 168|0;
 $22 = sp + 144|0;
 $23 = sp + 120|0;
 $24 = sp + 96|0;
 $25 = sp + 72|0;
 $26 = sp + 48|0;
 $27 = sp + 24|0;
 $28 = sp;
 $29 = ($first|0)==($last|0);
 L1: do {
  if ($29) {
   $$0 = $first;
  } else {
   $30 = HEAP8[$first>>0]|0;
   $31 = $30 << 24 >> 24;
   L3: do {
    switch ($31|0) {
    case 118:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc($0,18522);
     $32 = ((($db)) + 4|0);
     $33 = HEAP32[$32>>2]|0;
     $34 = ((($db)) + 8|0);
     $35 = HEAP32[$34>>2]|0;
     $36 = ($33>>>0)<($35>>>0);
     if ($36) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($33,$0);
      $37 = HEAP32[$32>>2]|0;
      $38 = ((($37)) + 24|0);
      HEAP32[$32>>2] = $38;
     } else {
      $39 = ((($db)) + 12|0);
      $40 = HEAP32[$db>>2]|0;
      $41 = $33;
      $42 = $40;
      $43 = (($41) - ($42))|0;
      $44 = (($43|0) / 24)&-1;
      $45 = (($44) + 1)|0;
      $46 = ($43|0)<(-24);
      if ($46) {
       __THREW__ = 0;
       invoke_vi(402,($db|0));
       $47 = __THREW__; __THREW__ = 0;
       $48 = ___cxa_find_matching_catch()|0;
       $49 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
       $$01 = $49;$$02 = $48;
       break L3;
      }
      $50 = $35;
      $51 = (($50) - ($42))|0;
      $52 = (($51|0) / 24)&-1;
      $53 = ($52>>>0)<(1073741823);
      if ($53) {
       $54 = $52 << 1;
       $55 = ($54>>>0)<($45>>>0);
       $56 = $55 ? $45 : $54;
       $$0$i$i$i = $56;
      } else {
       $$0$i$i$i = 2147483647;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i,$$0$i$i$i,$44,$39);
      $57 = ((($__v$i$i)) + 8|0);
      $58 = HEAP32[$57>>2]|0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($58,$0);
      $59 = ((($58)) + 24|0);
      HEAP32[$57>>2] = $59;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
     $60 = ((($first)) + 1|0);
     $$0 = $60;
     break L1;
     break;
    }
    case 119:  {
     HEAP8[$1>>0] = 14;
     $61 = ((($1)) + 1|0);
     ;HEAP8[$61>>0]=HEAP8[18101>>0]|0;HEAP8[$61+1>>0]=HEAP8[18101+1>>0]|0;HEAP8[$61+2>>0]=HEAP8[18101+2>>0]|0;HEAP8[$61+3>>0]=HEAP8[18101+3>>0]|0;HEAP8[$61+4>>0]=HEAP8[18101+4>>0]|0;HEAP8[$61+5>>0]=HEAP8[18101+5>>0]|0;HEAP8[$61+6>>0]=HEAP8[18101+6>>0]|0;
     $62 = ((($1)) + 8|0);
     HEAP8[$62>>0] = 0;
     $63 = ((($1)) + 12|0);
     HEAP32[$63>>2] = 0;
     $64 = ((($63)) + 4|0);
     HEAP32[$64>>2] = 0;
     $65 = ((($63)) + 8|0);
     HEAP32[$65>>2] = 0;
     $66 = ((($db)) + 4|0);
     $67 = HEAP32[$66>>2]|0;
     $68 = ((($db)) + 8|0);
     $69 = HEAP32[$68>>2]|0;
     $70 = ($67>>>0)<($69>>>0);
     if ($70) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($67,$1);
      $71 = HEAP32[$66>>2]|0;
      $72 = ((($71)) + 24|0);
      HEAP32[$66>>2] = $72;
     } else {
      $73 = ((($db)) + 12|0);
      $74 = HEAP32[$db>>2]|0;
      $75 = $67;
      $76 = $74;
      $77 = (($75) - ($76))|0;
      $78 = (($77|0) / 24)&-1;
      $79 = (($78) + 1)|0;
      $80 = ($77|0)<(-24);
      if ($80) {
       __THREW__ = 0;
       invoke_vi(402,($db|0));
       $81 = __THREW__; __THREW__ = 0;
       $82 = ___cxa_find_matching_catch()|0;
       $83 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
       $$01 = $83;$$02 = $82;
       break L3;
      }
      $84 = $69;
      $85 = (($84) - ($76))|0;
      $86 = (($85|0) / 24)&-1;
      $87 = ($86>>>0)<(1073741823);
      if ($87) {
       $88 = $86 << 1;
       $89 = ($88>>>0)<($79>>>0);
       $90 = $89 ? $79 : $88;
       $$0$i$i$i4 = $90;
      } else {
       $$0$i$i$i4 = 2147483647;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i3,$$0$i$i$i4,$78,$73);
      $91 = ((($__v$i$i3)) + 8|0);
      $92 = HEAP32[$91>>2]|0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($92,$1);
      $93 = ((($92)) + 24|0);
      HEAP32[$91>>2] = $93;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i3);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i3);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
     $94 = ((($first)) + 1|0);
     $$0 = $94;
     break L1;
     break;
    }
    case 98:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc($2,18527);
     $95 = ((($db)) + 4|0);
     $96 = HEAP32[$95>>2]|0;
     $97 = ((($db)) + 8|0);
     $98 = HEAP32[$97>>2]|0;
     $99 = ($96>>>0)<($98>>>0);
     if ($99) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($96,$2);
      $100 = HEAP32[$95>>2]|0;
      $101 = ((($100)) + 24|0);
      HEAP32[$95>>2] = $101;
     } else {
      $102 = ((($db)) + 12|0);
      $103 = HEAP32[$db>>2]|0;
      $104 = $96;
      $105 = $103;
      $106 = (($104) - ($105))|0;
      $107 = (($106|0) / 24)&-1;
      $108 = (($107) + 1)|0;
      $109 = ($106|0)<(-24);
      if ($109) {
       __THREW__ = 0;
       invoke_vi(402,($db|0));
       $110 = __THREW__; __THREW__ = 0;
       $111 = ___cxa_find_matching_catch()|0;
       $112 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2);
       $$01 = $112;$$02 = $111;
       break L3;
      }
      $113 = $98;
      $114 = (($113) - ($105))|0;
      $115 = (($114|0) / 24)&-1;
      $116 = ($115>>>0)<(1073741823);
      if ($116) {
       $117 = $115 << 1;
       $118 = ($117>>>0)<($108>>>0);
       $119 = $118 ? $108 : $117;
       $$0$i$i$i9 = $119;
      } else {
       $$0$i$i$i9 = 2147483647;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i8,$$0$i$i$i9,$107,$102);
      $120 = ((($__v$i$i8)) + 8|0);
      $121 = HEAP32[$120>>2]|0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($121,$2);
      $122 = ((($121)) + 24|0);
      HEAP32[$120>>2] = $122;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i8);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i8);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2);
     $123 = ((($first)) + 1|0);
     $$0 = $123;
     break L1;
     break;
    }
    case 99:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc($3,18109);
     $124 = ((($db)) + 4|0);
     $125 = HEAP32[$124>>2]|0;
     $126 = ((($db)) + 8|0);
     $127 = HEAP32[$126>>2]|0;
     $128 = ($125>>>0)<($127>>>0);
     if ($128) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($125,$3);
      $129 = HEAP32[$124>>2]|0;
      $130 = ((($129)) + 24|0);
      HEAP32[$124>>2] = $130;
     } else {
      $131 = ((($db)) + 12|0);
      $132 = HEAP32[$db>>2]|0;
      $133 = $125;
      $134 = $132;
      $135 = (($133) - ($134))|0;
      $136 = (($135|0) / 24)&-1;
      $137 = (($136) + 1)|0;
      $138 = ($135|0)<(-24);
      if ($138) {
       __THREW__ = 0;
       invoke_vi(402,($db|0));
       $139 = __THREW__; __THREW__ = 0;
       $140 = ___cxa_find_matching_catch()|0;
       $141 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
       $$01 = $141;$$02 = $140;
       break L3;
      }
      $142 = $127;
      $143 = (($142) - ($134))|0;
      $144 = (($143|0) / 24)&-1;
      $145 = ($144>>>0)<(1073741823);
      if ($145) {
       $146 = $144 << 1;
       $147 = ($146>>>0)<($137>>>0);
       $148 = $147 ? $137 : $146;
       $$0$i$i$i14 = $148;
      } else {
       $$0$i$i$i14 = 2147483647;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i13,$$0$i$i$i14,$136,$131);
      $149 = ((($__v$i$i13)) + 8|0);
      $150 = HEAP32[$149>>2]|0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($150,$3);
      $151 = ((($150)) + 24|0);
      HEAP32[$149>>2] = $151;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i13);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i13);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $152 = ((($first)) + 1|0);
     $$0 = $152;
     break L1;
     break;
    }
    case 97:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc($4,18114);
     $153 = ((($db)) + 4|0);
     $154 = HEAP32[$153>>2]|0;
     $155 = ((($db)) + 8|0);
     $156 = HEAP32[$155>>2]|0;
     $157 = ($154>>>0)<($156>>>0);
     if ($157) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($154,$4);
      $158 = HEAP32[$153>>2]|0;
      $159 = ((($158)) + 24|0);
      HEAP32[$153>>2] = $159;
     } else {
      $160 = ((($db)) + 12|0);
      $161 = HEAP32[$db>>2]|0;
      $162 = $154;
      $163 = $161;
      $164 = (($162) - ($163))|0;
      $165 = (($164|0) / 24)&-1;
      $166 = (($165) + 1)|0;
      $167 = ($164|0)<(-24);
      if ($167) {
       __THREW__ = 0;
       invoke_vi(402,($db|0));
       $168 = __THREW__; __THREW__ = 0;
       $169 = ___cxa_find_matching_catch()|0;
       $170 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
       $$01 = $170;$$02 = $169;
       break L3;
      }
      $171 = $156;
      $172 = (($171) - ($163))|0;
      $173 = (($172|0) / 24)&-1;
      $174 = ($173>>>0)<(1073741823);
      if ($174) {
       $175 = $173 << 1;
       $176 = ($175>>>0)<($166>>>0);
       $177 = $176 ? $166 : $175;
       $$0$i$i$i19 = $177;
      } else {
       $$0$i$i$i19 = 2147483647;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i18,$$0$i$i$i19,$165,$160);
      $178 = ((($__v$i$i18)) + 8|0);
      $179 = HEAP32[$178>>2]|0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($179,$4);
      $180 = ((($179)) + 24|0);
      HEAP32[$178>>2] = $180;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i18);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i18);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
     $181 = ((($first)) + 1|0);
     $$0 = $181;
     break L1;
     break;
    }
    case 104:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj14EEERAT__Kc($5,18126);
     $182 = ((($db)) + 4|0);
     $183 = HEAP32[$182>>2]|0;
     $184 = ((($db)) + 8|0);
     $185 = HEAP32[$184>>2]|0;
     $186 = ($183>>>0)<($185>>>0);
     if ($186) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($183,$5);
      $187 = HEAP32[$182>>2]|0;
      $188 = ((($187)) + 24|0);
      HEAP32[$182>>2] = $188;
     } else {
      $189 = ((($db)) + 12|0);
      $190 = HEAP32[$db>>2]|0;
      $191 = $183;
      $192 = $190;
      $193 = (($191) - ($192))|0;
      $194 = (($193|0) / 24)&-1;
      $195 = (($194) + 1)|0;
      $196 = ($193|0)<(-24);
      if ($196) {
       __THREW__ = 0;
       invoke_vi(402,($db|0));
       $197 = __THREW__; __THREW__ = 0;
       $198 = ___cxa_find_matching_catch()|0;
       $199 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
       $$01 = $199;$$02 = $198;
       break L3;
      }
      $200 = $185;
      $201 = (($200) - ($192))|0;
      $202 = (($201|0) / 24)&-1;
      $203 = ($202>>>0)<(1073741823);
      if ($203) {
       $204 = $202 << 1;
       $205 = ($204>>>0)<($195>>>0);
       $206 = $205 ? $195 : $204;
       $$0$i$i$i24 = $206;
      } else {
       $$0$i$i$i24 = 2147483647;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i23,$$0$i$i$i24,$194,$189);
      $207 = ((($__v$i$i23)) + 8|0);
      $208 = HEAP32[$207>>2]|0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($208,$5);
      $209 = ((($208)) + 24|0);
      HEAP32[$207>>2] = $209;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i23);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i23);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
     $210 = ((($first)) + 1|0);
     $$0 = $210;
     break L1;
     break;
    }
    case 115:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj6EEERAT__Kc($6,18140);
     $211 = ((($db)) + 4|0);
     $212 = HEAP32[$211>>2]|0;
     $213 = ((($db)) + 8|0);
     $214 = HEAP32[$213>>2]|0;
     $215 = ($212>>>0)<($214>>>0);
     if ($215) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($212,$6);
      $216 = HEAP32[$211>>2]|0;
      $217 = ((($216)) + 24|0);
      HEAP32[$211>>2] = $217;
     } else {
      $218 = ((($db)) + 12|0);
      $219 = HEAP32[$db>>2]|0;
      $220 = $212;
      $221 = $219;
      $222 = (($220) - ($221))|0;
      $223 = (($222|0) / 24)&-1;
      $224 = (($223) + 1)|0;
      $225 = ($222|0)<(-24);
      if ($225) {
       __THREW__ = 0;
       invoke_vi(402,($db|0));
       $226 = __THREW__; __THREW__ = 0;
       $227 = ___cxa_find_matching_catch()|0;
       $228 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($6);
       $$01 = $228;$$02 = $227;
       break L3;
      }
      $229 = $214;
      $230 = (($229) - ($221))|0;
      $231 = (($230|0) / 24)&-1;
      $232 = ($231>>>0)<(1073741823);
      if ($232) {
       $233 = $231 << 1;
       $234 = ($233>>>0)<($224>>>0);
       $235 = $234 ? $224 : $233;
       $$0$i$i$i29 = $235;
      } else {
       $$0$i$i$i29 = 2147483647;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i28,$$0$i$i$i29,$223,$218);
      $236 = ((($__v$i$i28)) + 8|0);
      $237 = HEAP32[$236>>2]|0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($237,$6);
      $238 = ((($237)) + 24|0);
      HEAP32[$236>>2] = $238;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i28);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i28);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($6);
     $239 = ((($first)) + 1|0);
     $$0 = $239;
     break L1;
     break;
    }
    case 116:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj15EEERAT__Kc($7,18146);
     $240 = ((($db)) + 4|0);
     $241 = HEAP32[$240>>2]|0;
     $242 = ((($db)) + 8|0);
     $243 = HEAP32[$242>>2]|0;
     $244 = ($241>>>0)<($243>>>0);
     if ($244) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($241,$7);
      $245 = HEAP32[$240>>2]|0;
      $246 = ((($245)) + 24|0);
      HEAP32[$240>>2] = $246;
     } else {
      $247 = ((($db)) + 12|0);
      $248 = HEAP32[$db>>2]|0;
      $249 = $241;
      $250 = $248;
      $251 = (($249) - ($250))|0;
      $252 = (($251|0) / 24)&-1;
      $253 = (($252) + 1)|0;
      $254 = ($251|0)<(-24);
      if ($254) {
       __THREW__ = 0;
       invoke_vi(402,($db|0));
       $255 = __THREW__; __THREW__ = 0;
       $256 = ___cxa_find_matching_catch()|0;
       $257 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($7);
       $$01 = $257;$$02 = $256;
       break L3;
      }
      $258 = $243;
      $259 = (($258) - ($250))|0;
      $260 = (($259|0) / 24)&-1;
      $261 = ($260>>>0)<(1073741823);
      if ($261) {
       $262 = $260 << 1;
       $263 = ($262>>>0)<($253>>>0);
       $264 = $263 ? $253 : $262;
       $$0$i$i$i34 = $264;
      } else {
       $$0$i$i$i34 = 2147483647;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i33,$$0$i$i$i34,$252,$247);
      $265 = ((($__v$i$i33)) + 8|0);
      $266 = HEAP32[$265>>2]|0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($266,$7);
      $267 = ((($266)) + 24|0);
      HEAP32[$265>>2] = $267;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i33);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i33);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($7);
     $268 = ((($first)) + 1|0);
     $$0 = $268;
     break L1;
     break;
    }
    case 105:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj4EEERAT__Kc($8,18532);
     $269 = ((($db)) + 4|0);
     $270 = HEAP32[$269>>2]|0;
     $271 = ((($db)) + 8|0);
     $272 = HEAP32[$271>>2]|0;
     $273 = ($270>>>0)<($272>>>0);
     if ($273) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($270,$8);
      $274 = HEAP32[$269>>2]|0;
      $275 = ((($274)) + 24|0);
      HEAP32[$269>>2] = $275;
     } else {
      $276 = ((($db)) + 12|0);
      $277 = HEAP32[$db>>2]|0;
      $278 = $270;
      $279 = $277;
      $280 = (($278) - ($279))|0;
      $281 = (($280|0) / 24)&-1;
      $282 = (($281) + 1)|0;
      $283 = ($280|0)<(-24);
      if ($283) {
       __THREW__ = 0;
       invoke_vi(402,($db|0));
       $284 = __THREW__; __THREW__ = 0;
       $285 = ___cxa_find_matching_catch()|0;
       $286 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($8);
       $$01 = $286;$$02 = $285;
       break L3;
      }
      $287 = $272;
      $288 = (($287) - ($279))|0;
      $289 = (($288|0) / 24)&-1;
      $290 = ($289>>>0)<(1073741823);
      if ($290) {
       $291 = $289 << 1;
       $292 = ($291>>>0)<($282>>>0);
       $293 = $292 ? $282 : $291;
       $$0$i$i$i39 = $293;
      } else {
       $$0$i$i$i39 = 2147483647;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i38,$$0$i$i$i39,$281,$276);
      $294 = ((($__v$i$i38)) + 8|0);
      $295 = HEAP32[$294>>2]|0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($295,$8);
      $296 = ((($295)) + 24|0);
      HEAP32[$294>>2] = $296;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i38);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i38);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($8);
     $297 = ((($first)) + 1|0);
     $$0 = $297;
     break L1;
     break;
    }
    case 106:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj13EEERAT__Kc($9,18536);
     $298 = ((($db)) + 4|0);
     $299 = HEAP32[$298>>2]|0;
     $300 = ((($db)) + 8|0);
     $301 = HEAP32[$300>>2]|0;
     $302 = ($299>>>0)<($301>>>0);
     if ($302) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($299,$9);
      $303 = HEAP32[$298>>2]|0;
      $304 = ((($303)) + 24|0);
      HEAP32[$298>>2] = $304;
     } else {
      $305 = ((($db)) + 12|0);
      $306 = HEAP32[$db>>2]|0;
      $307 = $299;
      $308 = $306;
      $309 = (($307) - ($308))|0;
      $310 = (($309|0) / 24)&-1;
      $311 = (($310) + 1)|0;
      $312 = ($309|0)<(-24);
      if ($312) {
       __THREW__ = 0;
       invoke_vi(402,($db|0));
       $313 = __THREW__; __THREW__ = 0;
       $314 = ___cxa_find_matching_catch()|0;
       $315 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($9);
       $$01 = $315;$$02 = $314;
       break L3;
      }
      $316 = $301;
      $317 = (($316) - ($308))|0;
      $318 = (($317|0) / 24)&-1;
      $319 = ($318>>>0)<(1073741823);
      if ($319) {
       $320 = $318 << 1;
       $321 = ($320>>>0)<($311>>>0);
       $322 = $321 ? $311 : $320;
       $$0$i$i$i44 = $322;
      } else {
       $$0$i$i$i44 = 2147483647;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i43,$$0$i$i$i44,$310,$305);
      $323 = ((($__v$i$i43)) + 8|0);
      $324 = HEAP32[$323>>2]|0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($324,$9);
      $325 = ((($324)) + 24|0);
      HEAP32[$323>>2] = $325;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i43);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i43);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($9);
     $326 = ((($first)) + 1|0);
     $$0 = $326;
     break L1;
     break;
    }
    case 108:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc($10,18549);
     $327 = ((($db)) + 4|0);
     $328 = HEAP32[$327>>2]|0;
     $329 = ((($db)) + 8|0);
     $330 = HEAP32[$329>>2]|0;
     $331 = ($328>>>0)<($330>>>0);
     if ($331) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($328,$10);
      $332 = HEAP32[$327>>2]|0;
      $333 = ((($332)) + 24|0);
      HEAP32[$327>>2] = $333;
     } else {
      $334 = ((($db)) + 12|0);
      $335 = HEAP32[$db>>2]|0;
      $336 = $328;
      $337 = $335;
      $338 = (($336) - ($337))|0;
      $339 = (($338|0) / 24)&-1;
      $340 = (($339) + 1)|0;
      $341 = ($338|0)<(-24);
      if ($341) {
       __THREW__ = 0;
       invoke_vi(402,($db|0));
       $342 = __THREW__; __THREW__ = 0;
       $343 = ___cxa_find_matching_catch()|0;
       $344 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($10);
       $$01 = $344;$$02 = $343;
       break L3;
      }
      $345 = $330;
      $346 = (($345) - ($337))|0;
      $347 = (($346|0) / 24)&-1;
      $348 = ($347>>>0)<(1073741823);
      if ($348) {
       $349 = $347 << 1;
       $350 = ($349>>>0)<($340>>>0);
       $351 = $350 ? $340 : $349;
       $$0$i$i$i49 = $351;
      } else {
       $$0$i$i$i49 = 2147483647;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i48,$$0$i$i$i49,$339,$334);
      $352 = ((($__v$i$i48)) + 8|0);
      $353 = HEAP32[$352>>2]|0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($353,$10);
      $354 = ((($353)) + 24|0);
      HEAP32[$352>>2] = $354;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i48);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i48);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($10);
     $355 = ((($first)) + 1|0);
     $$0 = $355;
     break L1;
     break;
    }
    case 109:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj14EEERAT__Kc($11,18554);
     $356 = ((($db)) + 4|0);
     $357 = HEAP32[$356>>2]|0;
     $358 = ((($db)) + 8|0);
     $359 = HEAP32[$358>>2]|0;
     $360 = ($357>>>0)<($359>>>0);
     if ($360) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($357,$11);
      $361 = HEAP32[$356>>2]|0;
      $362 = ((($361)) + 24|0);
      HEAP32[$356>>2] = $362;
     } else {
      $363 = ((($db)) + 12|0);
      $364 = HEAP32[$db>>2]|0;
      $365 = $357;
      $366 = $364;
      $367 = (($365) - ($366))|0;
      $368 = (($367|0) / 24)&-1;
      $369 = (($368) + 1)|0;
      $370 = ($367|0)<(-24);
      if ($370) {
       __THREW__ = 0;
       invoke_vi(402,($db|0));
       $371 = __THREW__; __THREW__ = 0;
       $372 = ___cxa_find_matching_catch()|0;
       $373 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($11);
       $$01 = $373;$$02 = $372;
       break L3;
      }
      $374 = $359;
      $375 = (($374) - ($366))|0;
      $376 = (($375|0) / 24)&-1;
      $377 = ($376>>>0)<(1073741823);
      if ($377) {
       $378 = $376 << 1;
       $379 = ($378>>>0)<($369>>>0);
       $380 = $379 ? $369 : $378;
       $$0$i$i$i54 = $380;
      } else {
       $$0$i$i$i54 = 2147483647;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i53,$$0$i$i$i54,$368,$363);
      $381 = ((($__v$i$i53)) + 8|0);
      $382 = HEAP32[$381>>2]|0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($382,$11);
      $383 = ((($382)) + 24|0);
      HEAP32[$381>>2] = $383;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i53);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i53);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($11);
     $384 = ((($first)) + 1|0);
     $$0 = $384;
     break L1;
     break;
    }
    case 120:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($12,18568);
     $385 = ((($db)) + 4|0);
     $386 = HEAP32[$385>>2]|0;
     $387 = ((($db)) + 8|0);
     $388 = HEAP32[$387>>2]|0;
     $389 = ($386>>>0)<($388>>>0);
     if ($389) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($386,$12);
      $390 = HEAP32[$385>>2]|0;
      $391 = ((($390)) + 24|0);
      HEAP32[$385>>2] = $391;
     } else {
      $392 = ((($db)) + 12|0);
      $393 = HEAP32[$db>>2]|0;
      $394 = $386;
      $395 = $393;
      $396 = (($394) - ($395))|0;
      $397 = (($396|0) / 24)&-1;
      $398 = (($397) + 1)|0;
      $399 = ($396|0)<(-24);
      if ($399) {
       __THREW__ = 0;
       invoke_vi(402,($db|0));
       $400 = __THREW__; __THREW__ = 0;
       $401 = ___cxa_find_matching_catch()|0;
       $402 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($12);
       $$01 = $402;$$02 = $401;
       break L3;
      }
      $403 = $388;
      $404 = (($403) - ($395))|0;
      $405 = (($404|0) / 24)&-1;
      $406 = ($405>>>0)<(1073741823);
      if ($406) {
       $407 = $405 << 1;
       $408 = ($407>>>0)<($398>>>0);
       $409 = $408 ? $398 : $407;
       $$0$i$i$i59 = $409;
      } else {
       $$0$i$i$i59 = 2147483647;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i58,$$0$i$i$i59,$397,$392);
      $410 = ((($__v$i$i58)) + 8|0);
      $411 = HEAP32[$410>>2]|0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($411,$12);
      $412 = ((($411)) + 24|0);
      HEAP32[$410>>2] = $412;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i58);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i58);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($12);
     $413 = ((($first)) + 1|0);
     $$0 = $413;
     break L1;
     break;
    }
    case 121:  {
     $414 = (_malloc(32)|0);
     $415 = ((($13)) + 8|0);
     HEAP32[$415>>2] = $414;
     HEAP32[$13>>2] = 33;
     $416 = ((($13)) + 4|0);
     HEAP32[$416>>2] = 18;
     dest=$414; src=18578; stop=dest+18|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
     $417 = ((($414)) + 18|0);
     HEAP8[$417>>0] = 0;
     $418 = ((($13)) + 12|0);
     HEAP32[$418>>2] = 0;
     $419 = ((($418)) + 4|0);
     HEAP32[$419>>2] = 0;
     $420 = ((($418)) + 8|0);
     HEAP32[$420>>2] = 0;
     $421 = ((($db)) + 4|0);
     $422 = HEAP32[$421>>2]|0;
     $423 = ((($db)) + 8|0);
     $424 = HEAP32[$423>>2]|0;
     $425 = ($422>>>0)<($424>>>0);
     if ($425) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($422,$13);
      $426 = HEAP32[$421>>2]|0;
      $427 = ((($426)) + 24|0);
      HEAP32[$421>>2] = $427;
     } else {
      $428 = ((($db)) + 12|0);
      $429 = HEAP32[$db>>2]|0;
      $430 = $422;
      $431 = $429;
      $432 = (($430) - ($431))|0;
      $433 = (($432|0) / 24)&-1;
      $434 = (($433) + 1)|0;
      $435 = ($432|0)<(-24);
      if ($435) {
       __THREW__ = 0;
       invoke_vi(402,($db|0));
       $436 = __THREW__; __THREW__ = 0;
       $437 = ___cxa_find_matching_catch()|0;
       $438 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($13);
       $$01 = $438;$$02 = $437;
       break L3;
      }
      $439 = $424;
      $440 = (($439) - ($431))|0;
      $441 = (($440|0) / 24)&-1;
      $442 = ($441>>>0)<(1073741823);
      if ($442) {
       $443 = $441 << 1;
       $444 = ($443>>>0)<($434>>>0);
       $445 = $444 ? $434 : $443;
       $$0$i$i$i66 = $445;
      } else {
       $$0$i$i$i66 = 2147483647;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i65,$$0$i$i$i66,$433,$428);
      $446 = ((($__v$i$i65)) + 8|0);
      $447 = HEAP32[$446>>2]|0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($447,$13);
      $448 = ((($447)) + 24|0);
      HEAP32[$446>>2] = $448;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i65);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i65);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($13);
     $449 = ((($first)) + 1|0);
     $$0 = $449;
     break L1;
     break;
    }
    case 110:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj9EEERAT__Kc($14,18170);
     $450 = ((($db)) + 4|0);
     $451 = HEAP32[$450>>2]|0;
     $452 = ((($db)) + 8|0);
     $453 = HEAP32[$452>>2]|0;
     $454 = ($451>>>0)<($453>>>0);
     if ($454) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($451,$14);
      $455 = HEAP32[$450>>2]|0;
      $456 = ((($455)) + 24|0);
      HEAP32[$450>>2] = $456;
     } else {
      $457 = ((($db)) + 12|0);
      $458 = HEAP32[$db>>2]|0;
      $459 = $451;
      $460 = $458;
      $461 = (($459) - ($460))|0;
      $462 = (($461|0) / 24)&-1;
      $463 = (($462) + 1)|0;
      $464 = ($461|0)<(-24);
      if ($464) {
       __THREW__ = 0;
       invoke_vi(402,($db|0));
       $465 = __THREW__; __THREW__ = 0;
       $466 = ___cxa_find_matching_catch()|0;
       $467 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($14);
       $$01 = $467;$$02 = $466;
       break L3;
      }
      $468 = $453;
      $469 = (($468) - ($460))|0;
      $470 = (($469|0) / 24)&-1;
      $471 = ($470>>>0)<(1073741823);
      if ($471) {
       $472 = $470 << 1;
       $473 = ($472>>>0)<($463>>>0);
       $474 = $473 ? $463 : $472;
       $$0$i$i$i71 = $474;
      } else {
       $$0$i$i$i71 = 2147483647;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i70,$$0$i$i$i71,$462,$457);
      $475 = ((($__v$i$i70)) + 8|0);
      $476 = HEAP32[$475>>2]|0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($476,$14);
      $477 = ((($476)) + 24|0);
      HEAP32[$475>>2] = $477;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i70);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i70);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($14);
     $478 = ((($first)) + 1|0);
     $$0 = $478;
     break L1;
     break;
    }
    case 111:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj18EEERAT__Kc($15,18179);
     $479 = ((($db)) + 4|0);
     $480 = HEAP32[$479>>2]|0;
     $481 = ((($db)) + 8|0);
     $482 = HEAP32[$481>>2]|0;
     $483 = ($480>>>0)<($482>>>0);
     if ($483) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($480,$15);
      $484 = HEAP32[$479>>2]|0;
      $485 = ((($484)) + 24|0);
      HEAP32[$479>>2] = $485;
     } else {
      $486 = ((($db)) + 12|0);
      $487 = HEAP32[$db>>2]|0;
      $488 = $480;
      $489 = $487;
      $490 = (($488) - ($489))|0;
      $491 = (($490|0) / 24)&-1;
      $492 = (($491) + 1)|0;
      $493 = ($490|0)<(-24);
      if ($493) {
       __THREW__ = 0;
       invoke_vi(402,($db|0));
       $494 = __THREW__; __THREW__ = 0;
       $495 = ___cxa_find_matching_catch()|0;
       $496 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($15);
       $$01 = $496;$$02 = $495;
       break L3;
      }
      $497 = $482;
      $498 = (($497) - ($489))|0;
      $499 = (($498|0) / 24)&-1;
      $500 = ($499>>>0)<(1073741823);
      if ($500) {
       $501 = $499 << 1;
       $502 = ($501>>>0)<($492>>>0);
       $503 = $502 ? $492 : $501;
       $$0$i$i$i76 = $503;
      } else {
       $$0$i$i$i76 = 2147483647;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i75,$$0$i$i$i76,$491,$486);
      $504 = ((($__v$i$i75)) + 8|0);
      $505 = HEAP32[$504>>2]|0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($505,$15);
      $506 = ((($505)) + 24|0);
      HEAP32[$504>>2] = $506;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i75);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i75);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($15);
     $507 = ((($first)) + 1|0);
     $$0 = $507;
     break L1;
     break;
    }
    case 102:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj6EEERAT__Kc($16,18597);
     $508 = ((($db)) + 4|0);
     $509 = HEAP32[$508>>2]|0;
     $510 = ((($db)) + 8|0);
     $511 = HEAP32[$510>>2]|0;
     $512 = ($509>>>0)<($511>>>0);
     if ($512) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($509,$16);
      $513 = HEAP32[$508>>2]|0;
      $514 = ((($513)) + 24|0);
      HEAP32[$508>>2] = $514;
     } else {
      $515 = ((($db)) + 12|0);
      $516 = HEAP32[$db>>2]|0;
      $517 = $509;
      $518 = $516;
      $519 = (($517) - ($518))|0;
      $520 = (($519|0) / 24)&-1;
      $521 = (($520) + 1)|0;
      $522 = ($519|0)<(-24);
      if ($522) {
       __THREW__ = 0;
       invoke_vi(402,($db|0));
       $523 = __THREW__; __THREW__ = 0;
       $524 = ___cxa_find_matching_catch()|0;
       $525 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($16);
       $$01 = $525;$$02 = $524;
       break L3;
      }
      $526 = $511;
      $527 = (($526) - ($518))|0;
      $528 = (($527|0) / 24)&-1;
      $529 = ($528>>>0)<(1073741823);
      if ($529) {
       $530 = $528 << 1;
       $531 = ($530>>>0)<($521>>>0);
       $532 = $531 ? $521 : $530;
       $$0$i$i$i81 = $532;
      } else {
       $$0$i$i$i81 = 2147483647;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i80,$$0$i$i$i81,$520,$515);
      $533 = ((($__v$i$i80)) + 8|0);
      $534 = HEAP32[$533>>2]|0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($534,$16);
      $535 = ((($534)) + 24|0);
      HEAP32[$533>>2] = $535;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i80);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i80);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($16);
     $536 = ((($first)) + 1|0);
     $$0 = $536;
     break L1;
     break;
    }
    case 100:  {
     HEAP8[$17>>0] = 12;
     $537 = ((($17)) + 1|0);
     ;HEAP8[$537>>0]=HEAP8[18603>>0]|0;HEAP8[$537+1>>0]=HEAP8[18603+1>>0]|0;HEAP8[$537+2>>0]=HEAP8[18603+2>>0]|0;HEAP8[$537+3>>0]=HEAP8[18603+3>>0]|0;HEAP8[$537+4>>0]=HEAP8[18603+4>>0]|0;HEAP8[$537+5>>0]=HEAP8[18603+5>>0]|0;
     $538 = ((($17)) + 7|0);
     HEAP8[$538>>0] = 0;
     $539 = ((($17)) + 12|0);
     HEAP32[$539>>2] = 0;
     $540 = ((($539)) + 4|0);
     HEAP32[$540>>2] = 0;
     $541 = ((($539)) + 8|0);
     HEAP32[$541>>2] = 0;
     $542 = ((($db)) + 4|0);
     $543 = HEAP32[$542>>2]|0;
     $544 = ((($db)) + 8|0);
     $545 = HEAP32[$544>>2]|0;
     $546 = ($543>>>0)<($545>>>0);
     if ($546) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($543,$17);
      $547 = HEAP32[$542>>2]|0;
      $548 = ((($547)) + 24|0);
      HEAP32[$542>>2] = $548;
     } else {
      $549 = ((($db)) + 12|0);
      $550 = HEAP32[$db>>2]|0;
      $551 = $543;
      $552 = $550;
      $553 = (($551) - ($552))|0;
      $554 = (($553|0) / 24)&-1;
      $555 = (($554) + 1)|0;
      $556 = ($553|0)<(-24);
      if ($556) {
       __THREW__ = 0;
       invoke_vi(402,($db|0));
       $557 = __THREW__; __THREW__ = 0;
       $558 = ___cxa_find_matching_catch()|0;
       $559 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($17);
       $$01 = $559;$$02 = $558;
       break L3;
      }
      $560 = $545;
      $561 = (($560) - ($552))|0;
      $562 = (($561|0) / 24)&-1;
      $563 = ($562>>>0)<(1073741823);
      if ($563) {
       $564 = $562 << 1;
       $565 = ($564>>>0)<($555>>>0);
       $566 = $565 ? $555 : $564;
       $$0$i$i$i88 = $566;
      } else {
       $$0$i$i$i88 = 2147483647;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i87,$$0$i$i$i88,$554,$549);
      $567 = ((($__v$i$i87)) + 8|0);
      $568 = HEAP32[$567>>2]|0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($568,$17);
      $569 = ((($568)) + 24|0);
      HEAP32[$567>>2] = $569;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i87);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i87);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($17);
     $570 = ((($first)) + 1|0);
     $$0 = $570;
     break L1;
     break;
    }
    case 101:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc($18,18610);
     $571 = ((($db)) + 4|0);
     $572 = HEAP32[$571>>2]|0;
     $573 = ((($db)) + 8|0);
     $574 = HEAP32[$573>>2]|0;
     $575 = ($572>>>0)<($574>>>0);
     if ($575) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($572,$18);
      $576 = HEAP32[$571>>2]|0;
      $577 = ((($576)) + 24|0);
      HEAP32[$571>>2] = $577;
     } else {
      $578 = ((($db)) + 12|0);
      $579 = HEAP32[$db>>2]|0;
      $580 = $572;
      $581 = $579;
      $582 = (($580) - ($581))|0;
      $583 = (($582|0) / 24)&-1;
      $584 = (($583) + 1)|0;
      $585 = ($582|0)<(-24);
      if ($585) {
       __THREW__ = 0;
       invoke_vi(402,($db|0));
       $586 = __THREW__; __THREW__ = 0;
       $587 = ___cxa_find_matching_catch()|0;
       $588 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($18);
       $$01 = $588;$$02 = $587;
       break L3;
      }
      $589 = $574;
      $590 = (($589) - ($581))|0;
      $591 = (($590|0) / 24)&-1;
      $592 = ($591>>>0)<(1073741823);
      if ($592) {
       $593 = $591 << 1;
       $594 = ($593>>>0)<($584>>>0);
       $595 = $594 ? $584 : $593;
       $$0$i$i$i93 = $595;
      } else {
       $$0$i$i$i93 = 2147483647;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i92,$$0$i$i$i93,$583,$578);
      $596 = ((($__v$i$i92)) + 8|0);
      $597 = HEAP32[$596>>2]|0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($597,$18);
      $598 = ((($597)) + 24|0);
      HEAP32[$596>>2] = $598;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i92);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i92);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($18);
     $599 = ((($first)) + 1|0);
     $$0 = $599;
     break L1;
     break;
    }
    case 103:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($19,18622);
     $600 = ((($db)) + 4|0);
     $601 = HEAP32[$600>>2]|0;
     $602 = ((($db)) + 8|0);
     $603 = HEAP32[$602>>2]|0;
     $604 = ($601>>>0)<($603>>>0);
     if ($604) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($601,$19);
      $605 = HEAP32[$600>>2]|0;
      $606 = ((($605)) + 24|0);
      HEAP32[$600>>2] = $606;
     } else {
      $607 = ((($db)) + 12|0);
      $608 = HEAP32[$db>>2]|0;
      $609 = $601;
      $610 = $608;
      $611 = (($609) - ($610))|0;
      $612 = (($611|0) / 24)&-1;
      $613 = (($612) + 1)|0;
      $614 = ($611|0)<(-24);
      if ($614) {
       __THREW__ = 0;
       invoke_vi(402,($db|0));
       $615 = __THREW__; __THREW__ = 0;
       $616 = ___cxa_find_matching_catch()|0;
       $617 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($19);
       $$01 = $617;$$02 = $616;
       break L3;
      }
      $618 = $603;
      $619 = (($618) - ($610))|0;
      $620 = (($619|0) / 24)&-1;
      $621 = ($620>>>0)<(1073741823);
      if ($621) {
       $622 = $620 << 1;
       $623 = ($622>>>0)<($613>>>0);
       $624 = $623 ? $613 : $622;
       $$0$i$i$i98 = $624;
      } else {
       $$0$i$i$i98 = 2147483647;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i97,$$0$i$i$i98,$612,$607);
      $625 = ((($__v$i$i97)) + 8|0);
      $626 = HEAP32[$625>>2]|0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($626,$19);
      $627 = ((($626)) + 24|0);
      HEAP32[$625>>2] = $627;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i97);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i97);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($19);
     $628 = ((($first)) + 1|0);
     $$0 = $628;
     break L1;
     break;
    }
    case 122:  {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj4EEERAT__Kc($20,18633);
     $629 = ((($db)) + 4|0);
     $630 = HEAP32[$629>>2]|0;
     $631 = ((($db)) + 8|0);
     $632 = HEAP32[$631>>2]|0;
     $633 = ($630>>>0)<($632>>>0);
     if ($633) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($630,$20);
      $634 = HEAP32[$629>>2]|0;
      $635 = ((($634)) + 24|0);
      HEAP32[$629>>2] = $635;
     } else {
      $636 = ((($db)) + 12|0);
      $637 = HEAP32[$db>>2]|0;
      $638 = $630;
      $639 = $637;
      $640 = (($638) - ($639))|0;
      $641 = (($640|0) / 24)&-1;
      $642 = (($641) + 1)|0;
      $643 = ($640|0)<(-24);
      if ($643) {
       __THREW__ = 0;
       invoke_vi(402,($db|0));
       $644 = __THREW__; __THREW__ = 0;
       $645 = ___cxa_find_matching_catch()|0;
       $646 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($20);
       $$01 = $646;$$02 = $645;
       break L3;
      }
      $647 = $632;
      $648 = (($647) - ($639))|0;
      $649 = (($648|0) / 24)&-1;
      $650 = ($649>>>0)<(1073741823);
      if ($650) {
       $651 = $649 << 1;
       $652 = ($651>>>0)<($642>>>0);
       $653 = $652 ? $642 : $651;
       $$0$i$i$i103 = $653;
      } else {
       $$0$i$i$i103 = 2147483647;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i102,$$0$i$i$i103,$641,$636);
      $654 = ((($__v$i$i102)) + 8|0);
      $655 = HEAP32[$654>>2]|0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($655,$20);
      $656 = ((($655)) + 24|0);
      HEAP32[$654>>2] = $656;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i102);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i102);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($20);
     $657 = ((($first)) + 1|0);
     $$0 = $657;
     break L1;
     break;
    }
    case 117:  {
     $658 = ((($first)) + 1|0);
     $659 = (__ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($658,$last,$db)|0);
     $660 = ($659|0)==($658|0);
     $first$ = $660 ? $first : $659;
     STACKTOP = sp;return ($first$|0);
     break;
    }
    case 68:  {
     $661 = ((($first)) + 1|0);
     $662 = ($661|0)==($last|0);
     if ($662) {
      $$0 = $first;
      break L1;
     }
     $663 = HEAP8[$661>>0]|0;
     $664 = $663 << 24 >> 24;
     switch ($664|0) {
     case 100:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($21,18637);
      $665 = ((($db)) + 4|0);
      $666 = HEAP32[$665>>2]|0;
      $667 = ((($db)) + 8|0);
      $668 = HEAP32[$667>>2]|0;
      $669 = ($666>>>0)<($668>>>0);
      if ($669) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($666,$21);
       $670 = HEAP32[$665>>2]|0;
       $671 = ((($670)) + 24|0);
       HEAP32[$665>>2] = $671;
      } else {
       $672 = ((($db)) + 12|0);
       $673 = HEAP32[$db>>2]|0;
       $674 = $666;
       $675 = $673;
       $676 = (($674) - ($675))|0;
       $677 = (($676|0) / 24)&-1;
       $678 = (($677) + 1)|0;
       $679 = ($676|0)<(-24);
       if ($679) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $680 = __THREW__; __THREW__ = 0;
        $681 = ___cxa_find_matching_catch()|0;
        $682 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($21);
        $$01 = $682;$$02 = $681;
        break L3;
       }
       $683 = $668;
       $684 = (($683) - ($675))|0;
       $685 = (($684|0) / 24)&-1;
       $686 = ($685>>>0)<(1073741823);
       if ($686) {
        $687 = $685 << 1;
        $688 = ($687>>>0)<($678>>>0);
        $689 = $688 ? $678 : $687;
        $$0$i$i$i108 = $689;
       } else {
        $$0$i$i$i108 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i107,$$0$i$i$i108,$677,$672);
       $690 = ((($__v$i$i107)) + 8|0);
       $691 = HEAP32[$690>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($691,$21);
       $692 = ((($691)) + 24|0);
       HEAP32[$690>>2] = $692;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i107);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i107);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($21);
      $693 = ((($first)) + 2|0);
      $$0 = $693;
      break L1;
      break;
     }
     case 101:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($22,18647);
      $694 = ((($db)) + 4|0);
      $695 = HEAP32[$694>>2]|0;
      $696 = ((($db)) + 8|0);
      $697 = HEAP32[$696>>2]|0;
      $698 = ($695>>>0)<($697>>>0);
      if ($698) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($695,$22);
       $699 = HEAP32[$694>>2]|0;
       $700 = ((($699)) + 24|0);
       HEAP32[$694>>2] = $700;
      } else {
       $701 = ((($db)) + 12|0);
       $702 = HEAP32[$db>>2]|0;
       $703 = $695;
       $704 = $702;
       $705 = (($703) - ($704))|0;
       $706 = (($705|0) / 24)&-1;
       $707 = (($706) + 1)|0;
       $708 = ($705|0)<(-24);
       if ($708) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $709 = __THREW__; __THREW__ = 0;
        $710 = ___cxa_find_matching_catch()|0;
        $711 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($22);
        $$01 = $711;$$02 = $710;
        break L3;
       }
       $712 = $697;
       $713 = (($712) - ($704))|0;
       $714 = (($713|0) / 24)&-1;
       $715 = ($714>>>0)<(1073741823);
       if ($715) {
        $716 = $714 << 1;
        $717 = ($716>>>0)<($707>>>0);
        $718 = $717 ? $707 : $716;
        $$0$i$i$i113 = $718;
       } else {
        $$0$i$i$i113 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i112,$$0$i$i$i113,$706,$701);
       $719 = ((($__v$i$i112)) + 8|0);
       $720 = HEAP32[$719>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($720,$22);
       $721 = ((($720)) + 24|0);
       HEAP32[$719>>2] = $721;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i112);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i112);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($22);
      $722 = ((($first)) + 2|0);
      $$0 = $722;
      break L1;
      break;
     }
     case 102:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($23,18658);
      $723 = ((($db)) + 4|0);
      $724 = HEAP32[$723>>2]|0;
      $725 = ((($db)) + 8|0);
      $726 = HEAP32[$725>>2]|0;
      $727 = ($724>>>0)<($726>>>0);
      if ($727) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($724,$23);
       $728 = HEAP32[$723>>2]|0;
       $729 = ((($728)) + 24|0);
       HEAP32[$723>>2] = $729;
      } else {
       $730 = ((($db)) + 12|0);
       $731 = HEAP32[$db>>2]|0;
       $732 = $724;
       $733 = $731;
       $734 = (($732) - ($733))|0;
       $735 = (($734|0) / 24)&-1;
       $736 = (($735) + 1)|0;
       $737 = ($734|0)<(-24);
       if ($737) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $738 = __THREW__; __THREW__ = 0;
        $739 = ___cxa_find_matching_catch()|0;
        $740 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($23);
        $$01 = $740;$$02 = $739;
        break L3;
       }
       $741 = $726;
       $742 = (($741) - ($733))|0;
       $743 = (($742|0) / 24)&-1;
       $744 = ($743>>>0)<(1073741823);
       if ($744) {
        $745 = $743 << 1;
        $746 = ($745>>>0)<($736>>>0);
        $747 = $746 ? $736 : $745;
        $$0$i$i$i118 = $747;
       } else {
        $$0$i$i$i118 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i117,$$0$i$i$i118,$735,$730);
       $748 = ((($__v$i$i117)) + 8|0);
       $749 = HEAP32[$748>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($749,$23);
       $750 = ((($749)) + 24|0);
       HEAP32[$748>>2] = $750;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i117);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i117);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($23);
      $751 = ((($first)) + 2|0);
      $$0 = $751;
      break L1;
      break;
     }
     case 104:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($24,18668);
      $752 = ((($db)) + 4|0);
      $753 = HEAP32[$752>>2]|0;
      $754 = ((($db)) + 8|0);
      $755 = HEAP32[$754>>2]|0;
      $756 = ($753>>>0)<($755>>>0);
      if ($756) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($753,$24);
       $757 = HEAP32[$752>>2]|0;
       $758 = ((($757)) + 24|0);
       HEAP32[$752>>2] = $758;
      } else {
       $759 = ((($db)) + 12|0);
       $760 = HEAP32[$db>>2]|0;
       $761 = $753;
       $762 = $760;
       $763 = (($761) - ($762))|0;
       $764 = (($763|0) / 24)&-1;
       $765 = (($764) + 1)|0;
       $766 = ($763|0)<(-24);
       if ($766) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $767 = __THREW__; __THREW__ = 0;
        $768 = ___cxa_find_matching_catch()|0;
        $769 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($24);
        $$01 = $769;$$02 = $768;
        break L3;
       }
       $770 = $755;
       $771 = (($770) - ($762))|0;
       $772 = (($771|0) / 24)&-1;
       $773 = ($772>>>0)<(1073741823);
       if ($773) {
        $774 = $772 << 1;
        $775 = ($774>>>0)<($765>>>0);
        $776 = $775 ? $765 : $774;
        $$0$i$i$i123 = $776;
       } else {
        $$0$i$i$i123 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i122,$$0$i$i$i123,$764,$759);
       $777 = ((($__v$i$i122)) + 8|0);
       $778 = HEAP32[$777>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($778,$24);
       $779 = ((($778)) + 24|0);
       HEAP32[$777>>2] = $779;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i122);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i122);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($24);
      $780 = ((($first)) + 2|0);
      $$0 = $780;
      break L1;
      break;
     }
     case 105:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj9EEERAT__Kc($25,18678);
      $781 = ((($db)) + 4|0);
      $782 = HEAP32[$781>>2]|0;
      $783 = ((($db)) + 8|0);
      $784 = HEAP32[$783>>2]|0;
      $785 = ($782>>>0)<($784>>>0);
      if ($785) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($782,$25);
       $786 = HEAP32[$781>>2]|0;
       $787 = ((($786)) + 24|0);
       HEAP32[$781>>2] = $787;
      } else {
       $788 = ((($db)) + 12|0);
       $789 = HEAP32[$db>>2]|0;
       $790 = $782;
       $791 = $789;
       $792 = (($790) - ($791))|0;
       $793 = (($792|0) / 24)&-1;
       $794 = (($793) + 1)|0;
       $795 = ($792|0)<(-24);
       if ($795) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $796 = __THREW__; __THREW__ = 0;
        $797 = ___cxa_find_matching_catch()|0;
        $798 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($25);
        $$01 = $798;$$02 = $797;
        break L3;
       }
       $799 = $784;
       $800 = (($799) - ($791))|0;
       $801 = (($800|0) / 24)&-1;
       $802 = ($801>>>0)<(1073741823);
       if ($802) {
        $803 = $801 << 1;
        $804 = ($803>>>0)<($794>>>0);
        $805 = $804 ? $794 : $803;
        $$0$i$i$i128 = $805;
       } else {
        $$0$i$i$i128 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i127,$$0$i$i$i128,$793,$788);
       $806 = ((($__v$i$i127)) + 8|0);
       $807 = HEAP32[$806>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($807,$25);
       $808 = ((($807)) + 24|0);
       HEAP32[$806>>2] = $808;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i127);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i127);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($25);
      $809 = ((($first)) + 2|0);
      $$0 = $809;
      break L1;
      break;
     }
     case 115:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj9EEERAT__Kc($26,18687);
      $810 = ((($db)) + 4|0);
      $811 = HEAP32[$810>>2]|0;
      $812 = ((($db)) + 8|0);
      $813 = HEAP32[$812>>2]|0;
      $814 = ($811>>>0)<($813>>>0);
      if ($814) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($811,$26);
       $815 = HEAP32[$810>>2]|0;
       $816 = ((($815)) + 24|0);
       HEAP32[$810>>2] = $816;
      } else {
       $817 = ((($db)) + 12|0);
       $818 = HEAP32[$db>>2]|0;
       $819 = $811;
       $820 = $818;
       $821 = (($819) - ($820))|0;
       $822 = (($821|0) / 24)&-1;
       $823 = (($822) + 1)|0;
       $824 = ($821|0)<(-24);
       if ($824) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $825 = __THREW__; __THREW__ = 0;
        $826 = ___cxa_find_matching_catch()|0;
        $827 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($26);
        $$01 = $827;$$02 = $826;
        break L3;
       }
       $828 = $813;
       $829 = (($828) - ($820))|0;
       $830 = (($829|0) / 24)&-1;
       $831 = ($830>>>0)<(1073741823);
       if ($831) {
        $832 = $830 << 1;
        $833 = ($832>>>0)<($823>>>0);
        $834 = $833 ? $823 : $832;
        $$0$i$i$i133 = $834;
       } else {
        $$0$i$i$i133 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i132,$$0$i$i$i133,$822,$817);
       $835 = ((($__v$i$i132)) + 8|0);
       $836 = HEAP32[$835>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($836,$26);
       $837 = ((($836)) + 24|0);
       HEAP32[$835>>2] = $837;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i132);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i132);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($26);
      $838 = ((($first)) + 2|0);
      $$0 = $838;
      break L1;
      break;
     }
     case 97:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc($27,18696);
      $839 = ((($db)) + 4|0);
      $840 = HEAP32[$839>>2]|0;
      $841 = ((($db)) + 8|0);
      $842 = HEAP32[$841>>2]|0;
      $843 = ($840>>>0)<($842>>>0);
      if ($843) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($840,$27);
       $844 = HEAP32[$839>>2]|0;
       $845 = ((($844)) + 24|0);
       HEAP32[$839>>2] = $845;
      } else {
       $846 = ((($db)) + 12|0);
       $847 = HEAP32[$db>>2]|0;
       $848 = $840;
       $849 = $847;
       $850 = (($848) - ($849))|0;
       $851 = (($850|0) / 24)&-1;
       $852 = (($851) + 1)|0;
       $853 = ($850|0)<(-24);
       if ($853) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $854 = __THREW__; __THREW__ = 0;
        $855 = ___cxa_find_matching_catch()|0;
        $856 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($27);
        $$01 = $856;$$02 = $855;
        break L3;
       }
       $857 = $842;
       $858 = (($857) - ($849))|0;
       $859 = (($858|0) / 24)&-1;
       $860 = ($859>>>0)<(1073741823);
       if ($860) {
        $861 = $859 << 1;
        $862 = ($861>>>0)<($852>>>0);
        $863 = $862 ? $852 : $861;
        $$0$i$i$i138 = $863;
       } else {
        $$0$i$i$i138 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i137,$$0$i$i$i138,$851,$846);
       $864 = ((($__v$i$i137)) + 8|0);
       $865 = HEAP32[$864>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($865,$27);
       $866 = ((($865)) + 24|0);
       HEAP32[$864>>2] = $866;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i137);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i137);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($27);
      $867 = ((($first)) + 2|0);
      $$0 = $867;
      break L1;
      break;
     }
     case 110:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj15EEERAT__Kc($28,18701);
      $868 = ((($db)) + 4|0);
      $869 = HEAP32[$868>>2]|0;
      $870 = ((($db)) + 8|0);
      $871 = HEAP32[$870>>2]|0;
      $872 = ($869>>>0)<($871>>>0);
      if ($872) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($869,$28);
       $873 = HEAP32[$868>>2]|0;
       $874 = ((($873)) + 24|0);
       HEAP32[$868>>2] = $874;
      } else {
       $875 = ((($db)) + 12|0);
       $876 = HEAP32[$db>>2]|0;
       $877 = $869;
       $878 = $876;
       $879 = (($877) - ($878))|0;
       $880 = (($879|0) / 24)&-1;
       $881 = (($880) + 1)|0;
       $882 = ($879|0)<(-24);
       if ($882) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $883 = __THREW__; __THREW__ = 0;
        $884 = ___cxa_find_matching_catch()|0;
        $885 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($28);
        $$01 = $885;$$02 = $884;
        break L3;
       }
       $886 = $871;
       $887 = (($886) - ($878))|0;
       $888 = (($887|0) / 24)&-1;
       $889 = ($888>>>0)<(1073741823);
       if ($889) {
        $890 = $888 << 1;
        $891 = ($890>>>0)<($881>>>0);
        $892 = $891 ? $881 : $890;
        $$0$i$i$i143 = $892;
       } else {
        $$0$i$i$i143 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142,$$0$i$i$i143,$880,$875);
       $893 = ((($__v$i$i142)) + 8|0);
       $894 = HEAP32[$893>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($894,$28);
       $895 = ((($894)) + 24|0);
       HEAP32[$893>>2] = $895;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i142);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($28);
      $896 = ((($first)) + 2|0);
      $$0 = $896;
      break L1;
      break;
     }
     default: {
      $$0 = $first;
      break L1;
     }
     }
     break;
    }
    default: {
     $$0 = $first;
     break L1;
    }
    }
   } while(0);
   ___resumeException($$02|0);
   // unreachable;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this,$__s,$__sz) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__sz>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__sz>>>0)<(11);
 if ($1) {
  $2 = $__sz << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 1|0);
  $__p$0 = $4;
 } else {
  $5 = (($__sz) + 16)|0;
  $6 = $5 & -16;
  $7 = (_malloc($6)|0);
  $8 = ((($this)) + 8|0);
  HEAP32[$8>>2] = $7;
  $9 = $6 | 1;
  HEAP32[$this>>2] = $9;
  $10 = ((($this)) + 4|0);
  HEAP32[$10>>2] = $__sz;
  $__p$0 = $7;
 }
 _memcpy(($__p$0|0),($__s|0),($__sz|0))|0;
 $11 = (($__p$0) + ($__sz)|0);
 HEAP8[$11>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEjj($this) {
 $this = $this|0;
 var $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $7 = $0&255;
  $8 = $7 >>> 1;
  $9 = ((($this)) + 1|0);
  $10 = $8;$14 = $9;
 } else {
  $3 = ((($this)) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $10 = $4;$14 = $6;
 }
 $not$ = ($10|0)!=(0);
 $11 = $not$&1;
 $12 = ($10|0)==($11|0);
 $$pre1 = (($10) - ($11))|0;
 if ($12) {
  $16 = $0;
 } else {
  $13 = (($14) + ($11)|0);
  _memmove(($14|0),($13|0),($$pre1|0))|0;
  $$pre = HEAP8[$this>>0]|0;
  $16 = $$pre;
 }
 $15 = $16 & 1;
 $17 = ($15<<24>>24)==(0);
 if ($17) {
  $19 = $$pre1 << 1;
  $20 = $19&255;
  HEAP8[$this>>0] = $20;
 } else {
  $18 = ((($this)) + 4|0);
  HEAP32[$18>>2] = $$pre1;
 }
 $21 = (($14) + ($$pre1)|0);
 HEAP8[$21>>0] = 0;
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($first,$last) {
 $first = $first|0;
 $last = $last|0;
 var $$0 = 0, $$1 = 0, $$first = 0, $$off = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isdigit = 0, $isdigittmp = 0, $t$0$pn = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = ($first|0)==($last|0);
 L1: do {
  if ($0) {
   $$1 = $first;
  } else {
   $1 = HEAP8[$first>>0]|0;
   $2 = ($1<<24>>24)==(110);
   $3 = ((($first)) + 1|0);
   $$first = $2 ? $3 : $first;
   $4 = ($$first|0)==($last|0);
   if ($4) {
    $$1 = $first;
   } else {
    $5 = HEAP8[$$first>>0]|0;
    $6 = ($5<<24>>24)==(48);
    if ($6) {
     $7 = ((($$first)) + 1|0);
     $$1 = $7;
     break;
    }
    $$off = (($5) + -49)<<24>>24;
    $8 = ($$off&255)<(9);
    if ($8) {
     $t$0$pn = $$first;
     while(1) {
      $$0 = ((($t$0$pn)) + 1|0);
      $9 = ($$0|0)==($last|0);
      if ($9) {
       $$1 = $last;
       break L1;
      }
      $10 = HEAP8[$$0>>0]|0;
      $11 = $10 << 24 >> 24;
      $isdigittmp = (($11) + -48)|0;
      $isdigit = ($isdigittmp>>>0)<(10);
      if ($isdigit) {
       $t$0$pn = $$0;
      } else {
       $$1 = $$0;
       break;
      }
     }
    } else {
     $$1 = $first;
    }
   }
  }
 } while(0);
 return ($$1|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($this,$__pos,$__s,$__n) {
 $this = $this|0;
 $__pos = $__pos|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$0 = 0, $$1 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sum = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = $0&255;
  $6 = $5 >>> 1;
  $8 = $6;
 } else {
  $3 = ((($this)) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $8 = $4;
 }
 $7 = ($8>>>0)<($__pos>>>0);
 if ($7) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv($this);
  // unreachable;
 }
 if ($2) {
  $13 = 10;$17 = $0;
 } else {
  $9 = HEAP32[$this>>2]|0;
  $10 = $9 & -2;
  $phitmp$i = (($10) + -1)|0;
  $11 = $9&255;
  $13 = $phitmp$i;$17 = $11;
 }
 $12 = (($13) - ($8))|0;
 $14 = ($12>>>0)<($__n>>>0);
 if ($14) {
  $39 = (($8) + ($__n))|0;
  $40 = (($39) - ($13))|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$13,$40,$8,$__pos,0,$__n,$__s);
 } else {
  $15 = ($__n|0)==(0);
  if (!($15)) {
   $16 = $17 & 1;
   $18 = ($16<<24>>24)==(0);
   if ($18) {
    $21 = ((($this)) + 1|0);
    $23 = $21;
   } else {
    $19 = ((($this)) + 8|0);
    $20 = HEAP32[$19>>2]|0;
    $23 = $20;
   }
   $22 = ($8|0)==($__pos|0);
   if ($22) {
    $$pre = (($23) + ($__pos)|0);
    $$1 = $__s;$$pre$phiZ2D = $$pre;
   } else {
    $24 = (($8) - ($__pos))|0;
    $25 = (($23) + ($__pos)|0);
    $26 = ($25>>>0)<=($__s>>>0);
    $27 = (($23) + ($8)|0);
    $28 = ($27>>>0)>($__s>>>0);
    $or$cond = $26 & $28;
    $29 = (($__s) + ($__n)|0);
    $$0 = $or$cond ? $29 : $__s;
    $$sum = (($__n) + ($__pos))|0;
    $30 = (($23) + ($$sum)|0);
    _memmove(($30|0),($25|0),($24|0))|0;
    $$1 = $$0;$$pre$phiZ2D = $25;
   }
   _memmove(($$pre$phiZ2D|0),($$1|0),($__n|0))|0;
   $31 = (($8) + ($__n))|0;
   $32 = HEAP8[$this>>0]|0;
   $33 = $32 & 1;
   $34 = ($33<<24>>24)==(0);
   if ($34) {
    $36 = $31 << 1;
    $37 = $36&255;
    HEAP8[$this>>0] = $37;
   } else {
    $35 = ((($this)) + 4|0);
    HEAP32[$35>>2] = $31;
   }
   $38 = (($23) + ($31)|0);
   HEAP8[$38>>0] = 0;
  }
 }
 return ($this|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i299 = 0, $$0$i$i$i$i348 = 0, $$0$i254 = 0, $$0$i309 = 0, $$0$i316 = 0, $$01$i = 0, $$01$i308 = 0, $$01$i315 = 0, $$019$i = 0, $$02$i = 0, $$02$i310 = 0, $$02$i317 = 0, $$03$i = 0, $$03$i174 = 0, $$03$i189 = 0, $$03$i200 = 0;
 var $$03$i211 = 0, $$03$i265 = 0, $$03$i297 = 0, $$03$i456 = 0, $$03$i486 = 0, $$06$i = 0, $$06$i248 = 0, $$06$i345 = 0, $$06$i426 = 0, $$07$i = 0, $$1 = 0, $$1$i = 0, $$1$i173 = 0, $$1$i188 = 0, $$1$i199 = 0, $$1$i210 = 0, $$1$i220 = 0, $$1$i241 = 0, $$1$i264 = 0, $$1$i338 = 0;
 var $$1$i363 = 0, $$1$i419 = 0, $$1$i455 = 0, $$1$i485 = 0, $$10 = 0, $$1019 = 0, $$110 = 0, $$12 = 0, $$12$i = 0, $$12$i172 = 0, $$12$i187 = 0, $$12$i198 = 0, $$12$i209 = 0, $$12$i219 = 0, $$12$i240 = 0, $$12$i263 = 0, $$12$i337 = 0, $$12$i418 = 0, $$12$i454 = 0, $$12$i484 = 0;
 var $$1221 = 0, $$13$i = 0, $$14 = 0, $$14$i = 0, $$1423 = 0, $$16 = 0, $$1625 = 0, $$17 = 0, $$1726 = 0, $$18 = 0, $$18$i = 0, $$1827 = 0, $$19 = 0, $$1928 = 0, $$2 = 0, $$2$i = 0, $$2$i243 = 0, $$2$i302 = 0, $$2$i340 = 0, $$2$i364 = 0;
 var $$2$i398 = 0, $$2$i421 = 0, $$20 = 0, $$2029 = 0, $$21 = 0, $$211 = 0, $$2130 = 0, $$22 = 0, $$221$i = 0, $$2231 = 0, $$23 = 0, $$23$i = 0, $$23$i242 = 0, $$23$i339 = 0, $$23$i420 = 0, $$2332 = 0, $$24$i = 0, $$25$i = 0, $$29$i = 0, $$3$i = 0;
 var $$3$i245 = 0, $$3$i342 = 0, $$3$i365 = 0, $$3$i423 = 0, $$310$i = 0, $$311$i = 0, $$34$i = 0, $$34$i244 = 0, $$34$i341 = 0, $$34$i422 = 0, $$35$i = 0, $$36$i = 0, $$4 = 0, $$4$i = 0, $$4$i247 = 0, $$4$i304 = 0, $$4$i344 = 0, $$4$i366 = 0, $$4$i425 = 0, $$411$i = 0;
 var $$413 = 0, $$45$i = 0, $$45$i246 = 0, $$45$i343 = 0, $$45$i424 = 0, $$46$i = 0, $$5 = 0, $$514 = 0, $$7 = 0, $$716 = 0, $$8 = 0, $$817 = 0, $$9 = 0, $$9$i = 0, $$918 = 0, $$first = 0, $$first$i = 0, $$ph518 = 0, $$ph520524 = 0, $$phi$trans$insert = 0;
 var $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i$i = 0, $$pre$i$i$i$i372 = 0, $$pre$i$i$i$i436 = 0, $$pre$i$i$i$i466 = 0, $$pre$i$i$i87 = 0, $$pre$i$i212 = 0, $$pre$i$i222 = 0, $$pre$i$i250 = 0, $$pre$i$i289 = 0, $$pre$i$i305 = 0, $$pre$i$i312 = 0, $$pre$i$i319 = 0, $$pre$i$i352 = 0, $$pre$i$i393 = 0, $$pre$i$i400 = 0, $$pre$i116 = 0;
 var $$pre$i133 = 0, $$pre$i135 = 0, $$pre$i157 = 0, $$pre$i159 = 0, $$pre$i161 = 0, $$pre$i24$i = 0, $$pre$i48$i = 0, $$pre$phi511Z2D = 0, $$pre$phiZ2D = 0, $$pre507 = 0, $$pre509 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0;
 var $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0;
 var $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0;
 var $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0;
 var $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0;
 var $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0;
 var $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0;
 var $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0;
 var $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0;
 var $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0;
 var $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0;
 var $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0, $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0, $1202 = 0;
 var $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0;
 var $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0, $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0, $1239 = 0;
 var $124 = 0, $1240 = 0, $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1249 = 0, $125 = 0, $1250 = 0, $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0;
 var $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0, $1266 = 0, $1267 = 0, $1268 = 0, $1269 = 0, $127 = 0, $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0, $1274 = 0, $1275 = 0;
 var $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0, $1284 = 0, $1285 = 0, $1286 = 0, $1287 = 0, $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0;
 var $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0;
 var $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0, $132 = 0, $1320 = 0, $1321 = 0, $1322 = 0, $1323 = 0, $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0, $1328 = 0, $1329 = 0;
 var $133 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1333 = 0, $1334 = 0, $1335 = 0, $1336 = 0, $1337 = 0, $1338 = 0, $1339 = 0, $134 = 0, $1340 = 0, $1341 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0, $1346 = 0, $1347 = 0;
 var $1348 = 0, $1349 = 0, $135 = 0, $1350 = 0, $1351 = 0, $1352 = 0, $1353 = 0, $1354 = 0, $1355 = 0, $1356 = 0, $1357 = 0, $1358 = 0, $1359 = 0, $136 = 0, $1360 = 0, $1361 = 0, $1362 = 0, $1363 = 0, $1364 = 0, $1365 = 0;
 var $1366 = 0, $1367 = 0, $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1371 = 0, $1372 = 0, $1373 = 0, $1374 = 0, $1375 = 0, $1376 = 0, $1377 = 0, $1378 = 0, $1379 = 0, $138 = 0, $1380 = 0, $1381 = 0, $1382 = 0, $1383 = 0;
 var $1384 = 0, $1385 = 0, $1386 = 0, $1387 = 0, $1388 = 0, $1389 = 0, $139 = 0, $1390 = 0, $1391 = 0, $1392 = 0, $1393 = 0, $1394 = 0, $1395 = 0, $1396 = 0, $1397 = 0, $1398 = 0, $1399 = 0, $14 = 0, $140 = 0, $1400 = 0;
 var $1401 = 0, $1402 = 0, $1403 = 0, $1404 = 0, $1405 = 0, $1406 = 0, $1407 = 0, $1408 = 0, $1409 = 0, $141 = 0, $1410 = 0, $1411 = 0, $1412 = 0, $1413 = 0, $1414 = 0, $1415 = 0, $1416 = 0, $1417 = 0, $1418 = 0, $1419 = 0;
 var $142 = 0, $1420 = 0, $1421 = 0, $1422 = 0, $1423 = 0, $1424 = 0, $1425 = 0, $1426 = 0, $1427 = 0, $1428 = 0, $1429 = 0, $143 = 0, $1430 = 0, $1431 = 0, $1432 = 0, $1433 = 0, $1434 = 0, $1435 = 0, $1436 = 0, $1437 = 0;
 var $1438 = 0, $1439 = 0, $144 = 0, $1440 = 0, $1441 = 0, $1442 = 0, $1443 = 0, $1444 = 0, $1445 = 0, $1446 = 0, $1447 = 0, $1448 = 0, $1449 = 0, $145 = 0, $1450 = 0, $1451 = 0, $1452 = 0, $1453 = 0, $1454 = 0, $1455 = 0;
 var $1456 = 0, $1457 = 0, $1458 = 0, $1459 = 0, $146 = 0, $1460 = 0, $1461 = 0, $1462 = 0, $1463 = 0, $1464 = 0, $1465 = 0, $1466 = 0, $1467 = 0, $1468 = 0, $1469 = 0, $147 = 0, $1470 = 0, $1471 = 0, $1472 = 0, $1473 = 0;
 var $1474 = 0, $1475 = 0, $1476 = 0, $1477 = 0, $1478 = 0, $1479 = 0, $148 = 0, $1480 = 0, $1481 = 0, $1482 = 0, $1483 = 0, $1484 = 0, $1485 = 0, $1486 = 0, $1487 = 0, $1488 = 0, $1489 = 0, $149 = 0, $1490 = 0, $1491 = 0;
 var $1492 = 0, $1493 = 0, $1494 = 0, $1495 = 0, $1496 = 0, $1497 = 0, $1498 = 0, $1499 = 0, $15 = 0, $150 = 0, $1500 = 0, $1501 = 0, $1502 = 0, $1503 = 0, $1504 = 0, $1505 = 0, $1506 = 0, $1507 = 0, $1508 = 0, $1509 = 0;
 var $151 = 0, $1510 = 0, $1511 = 0, $1512 = 0, $1513 = 0, $1514 = 0, $1515 = 0, $1516 = 0, $1517 = 0, $1518 = 0, $1519 = 0, $152 = 0, $1520 = 0, $1521 = 0, $1522 = 0, $1523 = 0, $1524 = 0, $1525 = 0, $1526 = 0, $1527 = 0;
 var $1528 = 0, $1529 = 0, $153 = 0, $1530 = 0, $1531 = 0, $1532 = 0, $1533 = 0, $1534 = 0, $1535 = 0, $1536 = 0, $1537 = 0, $1538 = 0, $1539 = 0, $154 = 0, $1540 = 0, $1541 = 0, $1542 = 0, $1543 = 0, $1544 = 0, $1545 = 0;
 var $1546 = 0, $1547 = 0, $1548 = 0, $1549 = 0, $155 = 0, $1550 = 0, $1551 = 0, $1552 = 0, $1553 = 0, $1554 = 0, $1555 = 0, $1556 = 0, $1557 = 0, $1558 = 0, $1559 = 0, $156 = 0, $1560 = 0, $1561 = 0, $1562 = 0, $1563 = 0;
 var $1564 = 0, $1565 = 0, $1566 = 0, $1567 = 0, $1568 = 0, $1569 = 0, $157 = 0, $1570 = 0, $1571 = 0, $1572 = 0, $1573 = 0, $1574 = 0, $1575 = 0, $1576 = 0, $1577 = 0, $1578 = 0, $1579 = 0, $158 = 0, $1580 = 0, $1581 = 0;
 var $1582 = 0, $1583 = 0, $1584 = 0, $1585 = 0, $1586 = 0, $1587 = 0, $1588 = 0, $1589 = 0, $159 = 0, $1590 = 0, $1591 = 0, $1592 = 0, $1593 = 0, $1594 = 0, $1595 = 0, $1596 = 0, $1597 = 0, $1598 = 0, $1599 = 0, $16 = 0;
 var $160 = 0, $1600 = 0, $1601 = 0, $1602 = 0, $1603 = 0, $1604 = 0, $1605 = 0, $1606 = 0, $1607 = 0, $1608 = 0, $1609 = 0, $161 = 0, $1610 = 0, $1611 = 0, $1612 = 0, $1613 = 0, $1614 = 0, $1615 = 0, $1616 = 0, $1617 = 0;
 var $1618 = 0, $1619 = 0, $162 = 0, $1620 = 0, $1621 = 0, $1622 = 0, $1623 = 0, $1624 = 0, $1625 = 0, $1626 = 0, $1627 = 0, $1628 = 0, $1629 = 0, $163 = 0, $1630 = 0, $1631 = 0, $1632 = 0, $1633 = 0, $1634 = 0, $1635 = 0;
 var $1636 = 0, $1637 = 0, $1638 = 0, $1639 = 0, $164 = 0, $1640 = 0, $1641 = 0, $1642 = 0, $1643 = 0, $1644 = 0, $1645 = 0, $1646 = 0, $1647 = 0, $1648 = 0, $1649 = 0, $165 = 0, $1650 = 0, $1651 = 0, $1652 = 0, $1653 = 0;
 var $1654 = 0, $1655 = 0, $1656 = 0, $1657 = 0, $1658 = 0, $1659 = 0, $166 = 0, $1660 = 0, $1661 = 0, $1662 = 0, $1663 = 0, $1664 = 0, $1665 = 0, $1666 = 0, $1667 = 0, $1668 = 0, $1669 = 0, $167 = 0, $1670 = 0, $1671 = 0;
 var $1672 = 0, $1673 = 0, $1674 = 0, $1675 = 0, $1676 = 0, $1677 = 0, $1678 = 0, $1679 = 0, $168 = 0, $1680 = 0, $1681 = 0, $1682 = 0, $1683 = 0, $1684 = 0, $1685 = 0, $1686 = 0, $1687 = 0, $1688 = 0, $1689 = 0, $169 = 0;
 var $1690 = 0, $1691 = 0, $1692 = 0, $1693 = 0, $1694 = 0, $1695 = 0, $1696 = 0, $1697 = 0, $1698 = 0, $1699 = 0, $17 = 0, $170 = 0, $1700 = 0, $1701 = 0, $1702 = 0, $1703 = 0, $1704 = 0, $1705 = 0, $1706 = 0, $1707 = 0;
 var $1708 = 0, $1709 = 0, $171 = 0, $1710 = 0, $1711 = 0, $1712 = 0, $1713 = 0, $1714 = 0, $1715 = 0, $1716 = 0, $1717 = 0, $1718 = 0, $1719 = 0, $172 = 0, $1720 = 0, $1721 = 0, $1722 = 0, $1723 = 0, $1724 = 0, $1725 = 0;
 var $1726 = 0, $1727 = 0, $1728 = 0, $1729 = 0, $173 = 0, $1730 = 0, $1731 = 0, $1732 = 0, $1733 = 0, $1734 = 0, $1735 = 0, $1736 = 0, $1737 = 0, $1738 = 0, $1739 = 0, $174 = 0, $1740 = 0, $1741 = 0, $1742 = 0, $1743 = 0;
 var $1744 = 0, $1745 = 0, $1746 = 0, $1747 = 0, $1748 = 0, $1749 = 0, $175 = 0, $1750 = 0, $1751 = 0, $1752 = 0, $1753 = 0, $1754 = 0, $1755 = 0, $1756 = 0, $1757 = 0, $1758 = 0, $1759 = 0, $176 = 0, $1760 = 0, $1761 = 0;
 var $1762 = 0, $1763 = 0, $1764 = 0, $1765 = 0, $1766 = 0, $1767 = 0, $1768 = 0, $1769 = 0, $177 = 0, $1770 = 0, $1771 = 0, $1772 = 0, $1773 = 0, $1774 = 0, $1775 = 0, $1776 = 0, $1777 = 0, $1778 = 0, $1779 = 0, $178 = 0;
 var $1780 = 0, $1781 = 0, $1782 = 0, $1783 = 0, $1784 = 0, $1785 = 0, $1786 = 0, $1787 = 0, $1788 = 0, $1789 = 0, $179 = 0, $1790 = 0, $1791 = 0, $1792 = 0, $1793 = 0, $1794 = 0, $1795 = 0, $1796 = 0, $1797 = 0, $1798 = 0;
 var $1799 = 0, $18 = 0, $180 = 0, $1800 = 0, $1801 = 0, $1802 = 0, $1803 = 0, $1804 = 0, $1805 = 0, $1806 = 0, $1807 = 0, $1808 = 0, $1809 = 0, $181 = 0, $1810 = 0, $1811 = 0, $1812 = 0, $1813 = 0, $1814 = 0, $1815 = 0;
 var $1816 = 0, $1817 = 0, $1818 = 0, $1819 = 0, $182 = 0, $1820 = 0, $1821 = 0, $1822 = 0, $1823 = 0, $1824 = 0, $1825 = 0, $1826 = 0, $1827 = 0, $1828 = 0, $1829 = 0, $183 = 0, $1830 = 0, $1831 = 0, $1832 = 0, $1833 = 0;
 var $1834 = 0, $1835 = 0, $1836 = 0, $1837 = 0, $1838 = 0, $1839 = 0, $184 = 0, $1840 = 0, $1841 = 0, $1842 = 0, $1843 = 0, $1844 = 0, $1845 = 0, $1846 = 0, $1847 = 0, $1848 = 0, $1849 = 0, $185 = 0, $1850 = 0, $1851 = 0;
 var $1852 = 0, $1853 = 0, $1854 = 0, $1855 = 0, $1856 = 0, $1857 = 0, $1858 = 0, $1859 = 0, $186 = 0, $1860 = 0, $1861 = 0, $1862 = 0, $1863 = 0, $1864 = 0, $1865 = 0, $1866 = 0, $1867 = 0, $1868 = 0, $1869 = 0, $187 = 0;
 var $1870 = 0, $1871 = 0, $1872 = 0, $1873 = 0, $1874 = 0, $1875 = 0, $1876 = 0, $1877 = 0, $1878 = 0, $1879 = 0, $188 = 0, $1880 = 0, $1881 = 0, $1882 = 0, $1883 = 0, $1884 = 0, $1885 = 0, $1886 = 0, $1887 = 0, $1888 = 0;
 var $1889 = 0, $189 = 0, $1890 = 0, $1891 = 0, $1892 = 0, $1893 = 0, $1894 = 0, $1895 = 0, $1896 = 0, $1897 = 0, $1898 = 0, $1899 = 0, $19 = 0, $190 = 0, $1900 = 0, $1901 = 0, $1902 = 0, $1903 = 0, $1904 = 0, $1905 = 0;
 var $1906 = 0, $1907 = 0, $1908 = 0, $1909 = 0, $191 = 0, $1910 = 0, $1911 = 0, $1912 = 0, $1913 = 0, $1914 = 0, $1915 = 0, $1916 = 0, $1917 = 0, $1918 = 0, $1919 = 0, $192 = 0, $1920 = 0, $1921 = 0, $1922 = 0, $1923 = 0;
 var $1924 = 0, $1925 = 0, $1926 = 0, $1927 = 0, $1928 = 0, $1929 = 0, $193 = 0, $1930 = 0, $1931 = 0, $1932 = 0, $1933 = 0, $1934 = 0, $1935 = 0, $1936 = 0, $1937 = 0, $1938 = 0, $1939 = 0, $194 = 0, $1940 = 0, $1941 = 0;
 var $1942 = 0, $1943 = 0, $1944 = 0, $1945 = 0, $1946 = 0, $1947 = 0, $1948 = 0, $1949 = 0, $195 = 0, $1950 = 0, $1951 = 0, $1952 = 0, $1953 = 0, $1954 = 0, $1955 = 0, $1956 = 0, $1957 = 0, $1958 = 0, $1959 = 0, $196 = 0;
 var $1960 = 0, $1961 = 0, $1962 = 0, $1963 = 0, $1964 = 0, $1965 = 0, $1966 = 0, $1967 = 0, $1968 = 0, $1969 = 0, $197 = 0, $1970 = 0, $1971 = 0, $1972 = 0, $1973 = 0, $1974 = 0, $1975 = 0, $1976 = 0, $1977 = 0, $1978 = 0;
 var $1979 = 0, $198 = 0, $1980 = 0, $1981 = 0, $1982 = 0, $1983 = 0, $1984 = 0, $1985 = 0, $1986 = 0, $1987 = 0, $1988 = 0, $1989 = 0, $199 = 0, $1990 = 0, $1991 = 0, $1992 = 0, $1993 = 0, $1994 = 0, $1995 = 0, $1996 = 0;
 var $1997 = 0, $1998 = 0, $1999 = 0, $2 = 0, $20 = 0, $200 = 0, $2000 = 0, $2001 = 0, $2002 = 0, $2003 = 0, $2004 = 0, $2005 = 0, $2006 = 0, $2007 = 0, $2008 = 0, $2009 = 0, $201 = 0, $2010 = 0, $2011 = 0, $2012 = 0;
 var $2013 = 0, $2014 = 0, $2015 = 0, $2016 = 0, $2017 = 0, $2018 = 0, $2019 = 0, $202 = 0, $2020 = 0, $2021 = 0, $2022 = 0, $2023 = 0, $2024 = 0, $2025 = 0, $2026 = 0, $2027 = 0, $2028 = 0, $2029 = 0, $203 = 0, $2030 = 0;
 var $2031 = 0, $2032 = 0, $2033 = 0, $2034 = 0, $2035 = 0, $2036 = 0, $2037 = 0, $2038 = 0, $2039 = 0, $204 = 0, $2040 = 0, $2041 = 0, $2042 = 0, $2043 = 0, $2044 = 0, $2045 = 0, $2046 = 0, $2047 = 0, $2048 = 0, $2049 = 0;
 var $205 = 0, $2050 = 0, $2051 = 0, $2052 = 0, $2053 = 0, $2054 = 0, $2055 = 0, $2056 = 0, $2057 = 0, $2058 = 0, $2059 = 0, $206 = 0, $2060 = 0, $2061 = 0, $2062 = 0, $2063 = 0, $2064 = 0, $2065 = 0, $2066 = 0, $2067 = 0;
 var $2068 = 0, $2069 = 0, $207 = 0, $2070 = 0, $2071 = 0, $2072 = 0, $2073 = 0, $2074 = 0, $2075 = 0, $2076 = 0, $2077 = 0, $2078 = 0, $2079 = 0, $208 = 0, $2080 = 0, $2081 = 0, $2082 = 0, $2083 = 0, $2084 = 0, $2085 = 0;
 var $2086 = 0, $2087 = 0, $2088 = 0, $2089 = 0, $209 = 0, $2090 = 0, $2091 = 0, $2092 = 0, $2093 = 0, $2094 = 0, $2095 = 0, $2096 = 0, $2097 = 0, $2098 = 0, $2099 = 0, $21 = 0, $210 = 0, $2100 = 0, $2101 = 0, $2102 = 0;
 var $2103 = 0, $2104 = 0, $2105 = 0, $2106 = 0, $2107 = 0, $2108 = 0, $2109 = 0, $211 = 0, $2110 = 0, $2111 = 0, $2112 = 0, $2113 = 0, $2114 = 0, $2115 = 0, $2116 = 0, $2117 = 0, $2118 = 0, $2119 = 0, $212 = 0, $2120 = 0;
 var $2121 = 0, $2122 = 0, $2123 = 0, $2124 = 0, $2125 = 0, $2126 = 0, $2127 = 0, $2128 = 0, $2129 = 0, $213 = 0, $2130 = 0, $2131 = 0, $2132 = 0, $2133 = 0, $2134 = 0, $2135 = 0, $2136 = 0, $2137 = 0, $2138 = 0, $2139 = 0;
 var $214 = 0, $2140 = 0, $2141 = 0, $2142 = 0, $2143 = 0, $2144 = 0, $2145 = 0, $2146 = 0, $2147 = 0, $2148 = 0, $2149 = 0, $215 = 0, $2150 = 0, $2151 = 0, $2152 = 0, $2153 = 0, $2154 = 0, $2155 = 0, $2156 = 0, $2157 = 0;
 var $2158 = 0, $2159 = 0, $216 = 0, $2160 = 0, $2161 = 0, $2162 = 0, $2163 = 0, $2164 = 0, $2165 = 0, $2166 = 0, $2167 = 0, $2168 = 0, $2169 = 0, $217 = 0, $2170 = 0, $2171 = 0, $2172 = 0, $2173 = 0, $2174 = 0, $2175 = 0;
 var $2176 = 0, $2177 = 0, $2178 = 0, $2179 = 0, $218 = 0, $2180 = 0, $2181 = 0, $2182 = 0, $2183 = 0, $2184 = 0, $2185 = 0, $2186 = 0, $2187 = 0, $2188 = 0, $2189 = 0, $219 = 0, $2190 = 0, $2191 = 0, $2192 = 0, $2193 = 0;
 var $2194 = 0, $2195 = 0, $2196 = 0, $2197 = 0, $2198 = 0, $2199 = 0, $22 = 0, $220 = 0, $2200 = 0, $2201 = 0, $2202 = 0, $2203 = 0, $2204 = 0, $2205 = 0, $2206 = 0, $2207 = 0, $2208 = 0, $2209 = 0, $221 = 0, $2210 = 0;
 var $2211 = 0, $2212 = 0, $2213 = 0, $2214 = 0, $2215 = 0, $2216 = 0, $2217 = 0, $2218 = 0, $2219 = 0, $222 = 0, $2220 = 0, $2221 = 0, $2222 = 0, $2223 = 0, $2224 = 0, $2225 = 0, $2226 = 0, $2227 = 0, $2228 = 0, $2229 = 0;
 var $223 = 0, $2230 = 0, $2231 = 0, $2232 = 0, $2233 = 0, $2234 = 0, $2235 = 0, $2236 = 0, $2237 = 0, $2238 = 0, $2239 = 0, $224 = 0, $2240 = 0, $2241 = 0, $2242 = 0, $2243 = 0, $2244 = 0, $2245 = 0, $2246 = 0, $2247 = 0;
 var $2248 = 0, $2249 = 0, $225 = 0, $2250 = 0, $2251 = 0, $2252 = 0, $2253 = 0, $2254 = 0, $2255 = 0, $2256 = 0, $2257 = 0, $2258 = 0, $2259 = 0, $226 = 0, $2260 = 0, $2261 = 0, $2262 = 0, $2263 = 0, $2264 = 0, $2265 = 0;
 var $2266 = 0, $2267 = 0, $2268 = 0, $2269 = 0, $227 = 0, $2270 = 0, $2271 = 0, $2272 = 0, $2273 = 0, $2274 = 0, $2275 = 0, $2276 = 0, $2277 = 0, $2278 = 0, $2279 = 0, $228 = 0, $2280 = 0, $2281 = 0, $2282 = 0, $2283 = 0;
 var $2284 = 0, $2285 = 0, $2286 = 0, $2287 = 0, $2288 = 0, $2289 = 0, $229 = 0, $2290 = 0, $2291 = 0, $2292 = 0, $2293 = 0, $2294 = 0, $2295 = 0, $2296 = 0, $2297 = 0, $2298 = 0, $2299 = 0, $23 = 0, $230 = 0, $2300 = 0;
 var $2301 = 0, $2302 = 0, $2303 = 0, $2304 = 0, $2305 = 0, $2306 = 0, $2307 = 0, $2308 = 0, $2309 = 0, $231 = 0, $2310 = 0, $2311 = 0, $2312 = 0, $2313 = 0, $2314 = 0, $2315 = 0, $2316 = 0, $2317 = 0, $232 = 0, $233 = 0;
 var $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0;
 var $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0;
 var $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0;
 var $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0;
 var $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0;
 var $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0;
 var $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0;
 var $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0;
 var $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0;
 var $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0;
 var $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0;
 var $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0;
 var $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0;
 var $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0;
 var $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0;
 var $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0;
 var $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0;
 var $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0;
 var $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0;
 var $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0;
 var $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0;
 var $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0;
 var $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0;
 var $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0;
 var $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0;
 var $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0;
 var $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0;
 var $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0;
 var $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0;
 var $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0;
 var $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0;
 var $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0;
 var $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0;
 var $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0;
 var $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0;
 var $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0;
 var $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0;
 var $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0;
 var $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0;
 var $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0;
 var $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0;
 var $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0;
 var $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $__v$i$i = 0, $__v$i$i$i = 0, $__v$i$i$i266 = 0, $__v$i$i$i346 = 0, $expr$i = 0, $expr$i221 = 0, $expr$i311 = 0, $expr$i318 = 0, $expr$i399 = 0, $expr_list$i = 0, $first$ = 0;
 var $first$$i = 0, $first$33 = 0, $first$34 = 0, $first$35 = 0, $first$36 = 0, $first$37 = 0, $first$38 = 0, $first$39 = 0, $first$40 = 0, $first$41 = 0, $first$42 = 0, $first$43 = 0, $first$44 = 0, $first$45 = 0, $first$46 = 0, $first$47 = 0, $first$48 = 0, $first$49 = 0, $first$50 = 0, $first$51 = 0;
 var $first$52 = 0, $first$53 = 0, $first$54 = 0, $first$55 = 0, $first$56 = 0, $first$57 = 0, $first$58 = 0, $first$59 = 0, $first$60 = 0, $first$61 = 0, $first$62 = 0, $first$63 = 0, $first$64 = 0, $first$65 = 0, $first$66 = 0, $first$67 = 0, $first$68 = 0, $first$69 = 0, $first$70 = 0, $first$71 = 0;
 var $has_expr_list$0$off0$i = 0, $has_expr_list$0$off0$i$lcssa = 0, $has_init$0$off0$i513 = 0, $init_list$i = 0, $k$0$i = 0, $k$0$i621 = 0, $k$0$i622 = 0, $k1$0$i618 = 0, $lpad$phi$i$index = 0, $lpad$phi$i$index2 = 0, $name$i = 0, $op1 = 0, $op18 = 0, $op2 = 0, $op27 = 0, $op3 = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i$i$i$i$i = 0, $or$cond$i$i$i$i$i$i = 0;
 var $or$cond$i$i$i$i$i$i278 = 0, $or$cond$i$i$i$i$i$i379 = 0, $or$cond$i$i$i$i$i$i443 = 0, $or$cond$i$i$i$i$i$i473 = 0, $or$cond$i$i$i$i$i37$i = 0, $or$cond$i$i$i$i$i94 = 0, $or$cond$i347 = 0, $or$cond$i392 = 0, $or$cond13$i = 0, $or$cond22$i = 0, $or$cond23$i = 0, $or$cond5$i = 0, $parsed_gs$0$off0 = 0, $parsed_gs$0$off0$i = 0, $phitmp$i$i$i$i$i$i = 0, $phitmp$i$i$i$i$i$i$i = 0, $phitmp$i$i$i$i$i$i$i273 = 0, $phitmp$i$i$i$i$i$i$i374 = 0, $phitmp$i$i$i$i$i$i$i438 = 0, $phitmp$i$i$i$i$i$i$i468 = 0;
 var $phitmp$i$i$i$i$i$i32$i = 0, $phitmp$i$i$i$i$i$i89 = 0, $phitmp$i2$i$i$i$i$i = 0, $phitmp$i2$i$i$i$i$i$i = 0, $phitmp$i2$i$i$i$i$i$i276 = 0, $phitmp$i2$i$i$i$i$i$i377 = 0, $phitmp$i2$i$i$i$i$i$i441 = 0, $phitmp$i2$i$i$i$i$i$i471 = 0, $phitmp$i2$i$i$i$i$i35$i = 0, $phitmp$i2$i$i$i$i$i92 = 0, $r$i = 0, $t$0 = 0, $t$0$i = 0, $t$0$i267 = 0, $t$0$i349567 = 0, $t$0$i390$lcssa = 0, $t$0$i390556 = 0, $t$1$i = 0, $t$1$i$lcssa = 0, $t$1$i350 = 0;
 var $t$2$i = 0, $t$2$i351 = 0, $t$3$i512 = 0, $tmp$i = 0, $tmp$i249 = 0, $tmp$i367 = 0, $tmp2$i = 0, $type$i = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 2240|0;
 $1 = sp + 2228|0;
 $2 = sp + 2216|0;
 $3 = sp + 2204|0;
 $4 = sp + 2192|0;
 $5 = sp + 2180|0;
 $expr$i399 = sp + 2168|0;
 $6 = sp + 2144|0;
 $7 = sp + 2128|0;
 $8 = sp + 2116|0;
 $9 = sp + 2104|0;
 $10 = sp + 2092|0;
 $11 = sp + 2080|0;
 $12 = sp + 2068|0;
 $tmp$i367 = sp + 2056|0;
 $__v$i$i$i346 = sp + 2036|0;
 $tmp2$i = sp + 2024|0;
 $13 = sp + 2000|0;
 $14 = sp + 1988|0;
 $15 = sp + 1976|0;
 $16 = sp + 1964|0;
 $17 = sp + 1952|0;
 $18 = sp + 1940|0;
 $expr$i318 = sp + 1928|0;
 $19 = sp + 1904|0;
 $20 = sp + 1892|0;
 $21 = sp + 1880|0;
 $22 = sp + 1868|0;
 $23 = sp + 1856|0;
 $24 = sp + 1844|0;
 $expr$i311 = sp + 1832|0;
 $25 = sp + 1820|0;
 $name$i = sp + 1808|0;
 $26 = sp + 1796|0;
 $__v$i$i$i266 = sp + 1776|0;
 $init_list$i = sp + 1764|0;
 $27 = sp + 1752|0;
 $type$i = sp + 1740|0;
 $expr_list$i = sp + 1728|0;
 $28 = sp + 1716|0;
 $r$i = sp + 1704|0;
 $29 = sp + 1692|0;
 $30 = sp + 1680|0;
 $31 = sp + 1668|0;
 $32 = sp + 1656|0;
 $33 = sp + 1632|0;
 $34 = sp + 1620|0;
 $35 = sp + 1608|0;
 $36 = sp + 1596|0;
 $37 = sp + 1584|0;
 $tmp$i249 = sp + 1572|0;
 $expr$i221 = sp + 1560|0;
 $38 = sp + 1536|0;
 $39 = sp + 1524|0;
 $40 = sp + 1512|0;
 $41 = sp + 1500|0;
 $42 = sp + 1488|0;
 $43 = sp + 1476|0;
 $expr$i = sp + 1464|0;
 $44 = sp + 1440|0;
 $45 = sp + 1424|0;
 $46 = sp + 1412|0;
 $47 = sp + 1400|0;
 $48 = sp + 1388|0;
 $49 = sp + 1376|0;
 $50 = sp + 1352|0;
 $51 = sp + 1336|0;
 $52 = sp + 1324|0;
 $53 = sp + 1312|0;
 $54 = sp + 1288|0;
 $55 = sp + 1272|0;
 $56 = sp + 1260|0;
 $57 = sp + 1248|0;
 $58 = sp + 1224|0;
 $59 = sp + 1208|0;
 $60 = sp + 1196|0;
 $61 = sp + 1184|0;
 $62 = sp + 1160|0;
 $63 = sp + 1144|0;
 $64 = sp + 1132|0;
 $__v$i$i = sp + 1112|0;
 $65 = sp + 1088|0;
 $66 = sp + 1076|0;
 $67 = sp + 1064|0;
 $68 = sp + 1052|0;
 $__v$i$i$i = sp + 1032|0;
 $tmp$i = sp + 1020|0;
 $69 = sp + 1008|0;
 $70 = sp + 996|0;
 $71 = sp + 984|0;
 $72 = sp + 960|0;
 $73 = sp + 948|0;
 $74 = sp + 936|0;
 $75 = sp + 924|0;
 $76 = sp + 912|0;
 $77 = sp + 900|0;
 $78 = sp + 888|0;
 $79 = sp + 876|0;
 $80 = sp + 864|0;
 $81 = sp + 852|0;
 $82 = sp + 840|0;
 $83 = sp + 828|0;
 $84 = sp + 816|0;
 $85 = sp + 804|0;
 $86 = sp + 792|0;
 $87 = sp + 780|0;
 $88 = sp + 768|0;
 $89 = sp + 756|0;
 $90 = sp + 744|0;
 $91 = sp + 732|0;
 $92 = sp + 720|0;
 $93 = sp + 708|0;
 $94 = sp + 696|0;
 $95 = sp + 684|0;
 $96 = sp + 672|0;
 $op2 = sp + 660|0;
 $op1 = sp + 648|0;
 $97 = sp + 624|0;
 $98 = sp + 608|0;
 $99 = sp + 596|0;
 $100 = sp + 584|0;
 $101 = sp + 572|0;
 $102 = sp + 560|0;
 $103 = sp + 548|0;
 $104 = sp + 536|0;
 $105 = sp + 524|0;
 $106 = sp + 512|0;
 $107 = sp + 500|0;
 $108 = sp + 488|0;
 $109 = sp + 476|0;
 $110 = sp + 464|0;
 $111 = sp + 440|0;
 $112 = sp + 424|0;
 $113 = sp + 412|0;
 $114 = sp + 400|0;
 $115 = sp + 388|0;
 $116 = sp + 376|0;
 $117 = sp + 364|0;
 $118 = sp + 352|0;
 $119 = sp + 340|0;
 $120 = sp + 328|0;
 $121 = sp + 316|0;
 $122 = sp + 304|0;
 $123 = sp + 292|0;
 $124 = sp + 280|0;
 $125 = sp + 256|0;
 $126 = sp + 240|0;
 $127 = sp + 228|0;
 $128 = sp + 216|0;
 $129 = sp + 204|0;
 $op3 = sp + 192|0;
 $op27 = sp + 180|0;
 $op18 = sp + 168|0;
 $130 = sp + 144|0;
 $131 = sp + 132|0;
 $132 = sp + 120|0;
 $133 = sp + 108|0;
 $134 = sp + 96|0;
 $135 = sp + 84|0;
 $136 = sp + 72|0;
 $137 = sp + 60|0;
 $138 = sp + 48|0;
 $139 = sp + 36|0;
 $140 = sp + 24|0;
 $141 = sp;
 $142 = $last;
 $143 = $first;
 $144 = (($142) - ($143))|0;
 $145 = ($144|0)>(1);
 L1: do {
  if ($145) {
   $146 = ($144|0)>(3);
   if ($146) {
    $147 = HEAP8[$first>>0]|0;
    $148 = ($147<<24>>24)==(103);
    if ($148) {
     $149 = ((($first)) + 1|0);
     $150 = HEAP8[$149>>0]|0;
     $151 = ($150<<24>>24)==(115);
     $152 = ((($first)) + 2|0);
     $$first = $151 ? $152 : $first;
     $parsed_gs$0$off0 = $151;$t$0 = $$first;
    } else {
     $parsed_gs$0$off0 = 0;$t$0 = $first;
    }
   } else {
    $parsed_gs$0$off0 = 0;$t$0 = $first;
   }
   $153 = HEAP8[$t$0>>0]|0;
   $154 = $153 << 24 >> 24;
   L7: do {
    switch ($154|0) {
    case 76:  {
     $155 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_expr_primaryINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
     $$0 = $155;
     break L1;
     break;
    }
    case 84:  {
     $156 = (__ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
     $$0 = $156;
     break L1;
     break;
    }
    case 102:  {
     $157 = (__ZN10__cxxabiv112_GLOBAL__N_120parse_function_paramINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
     $$0 = $157;
     break L1;
     break;
    }
    case 97:  {
     $158 = ((($t$0)) + 1|0);
     $159 = HEAP8[$158>>0]|0;
     $160 = $159 << 24 >> 24;
     switch ($160|0) {
     case 97:  {
      $161 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($74,17080,2);
      __THREW__ = 0;
      $162 = (invoke_iiiii(408,($161|0),($last|0),($74|0),($db|0))|0);
      $163 = __THREW__; __THREW__ = 0;
      $164 = $163&1;
      if ($164) {
       $166 = ___cxa_find_matching_catch()|0;
       $167 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($74);
       $$23 = $166;$$2332 = $167;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($74);
       $165 = ($162|0)==($161|0);
       $first$ = $165 ? $first : $162;
       $$0 = $first$;
       break L1;
      }
      break;
     }
     case 100:  {
      $168 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($75,17101,1);
      __THREW__ = 0;
      $169 = (invoke_iiiii(409,($168|0),($last|0),($75|0),($db|0))|0);
      $170 = __THREW__; __THREW__ = 0;
      $171 = $170&1;
      if ($171) {
       $173 = ___cxa_find_matching_catch()|0;
       $174 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($75);
       $$23 = $173;$$2332 = $174;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($75);
       $172 = ($169|0)==($168|0);
       $first$33 = $172 ? $first : $169;
       $$0 = $first$33;
       break L1;
      }
      break;
     }
     case 110:  {
      $175 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($76,17101,1);
      __THREW__ = 0;
      $176 = (invoke_iiiii(408,($175|0),($last|0),($76|0),($db|0))|0);
      $177 = __THREW__; __THREW__ = 0;
      $178 = $177&1;
      if ($178) {
       $180 = ___cxa_find_matching_catch()|0;
       $181 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($76);
       $$23 = $180;$$2332 = $181;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($76);
       $179 = ($176|0)==($175|0);
       $first$34 = $179 ? $first : $176;
       $$0 = $first$34;
       break L1;
      }
      break;
     }
     case 78:  {
      $182 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($77,18209,2);
      __THREW__ = 0;
      $183 = (invoke_iiiii(408,($182|0),($last|0),($77|0),($db|0))|0);
      $184 = __THREW__; __THREW__ = 0;
      $185 = $184&1;
      if ($185) {
       $187 = ___cxa_find_matching_catch()|0;
       $188 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($77);
       $$23 = $187;$$2332 = $188;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($77);
       $186 = ($183|0)==($182|0);
       $first$35 = $186 ? $first : $183;
       $$0 = $first$35;
       break L1;
      }
      break;
     }
     case 83:  {
      $189 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($78,18212,1);
      __THREW__ = 0;
      $190 = (invoke_iiiii(408,($189|0),($last|0),($78|0),($db|0))|0);
      $191 = __THREW__; __THREW__ = 0;
      $192 = $191&1;
      if ($192) {
       $194 = ___cxa_find_matching_catch()|0;
       $195 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($78);
       $$23 = $194;$$2332 = $195;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($78);
       $193 = ($190|0)==($189|0);
       $first$36 = $193 ? $first : $190;
       $$0 = $first$36;
       break L1;
      }
      break;
     }
     case 116:  {
      $196 = ($144|0)>(2);
      L34: do {
       if ($196) {
        $197 = HEAP8[$first>>0]|0;
        $198 = ($197<<24>>24)==(97);
        if ($198) {
         $199 = ((($first)) + 1|0);
         $200 = HEAP8[$199>>0]|0;
         $201 = ($200<<24>>24)==(116);
         if ($201) {
          $202 = ((($first)) + 2|0);
          $203 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($202,$last,$db)|0);
          $204 = ($203|0)==($202|0);
          if ($204) {
           $$03$i486 = $first;
          } else {
           $205 = HEAP32[$db>>2]|0;
           $206 = ((($db)) + 4|0);
           $207 = HEAP32[$206>>2]|0;
           $208 = ($205|0)==($207|0);
           if ($208) {
            $$03$i486 = $first;
           } else {
            $209 = ((($207)) + -24|0);
            __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($2,$209);
            __THREW__ = 0;
            $210 = (invoke_iiii(391,($2|0),0,(18214|0))|0);
            $211 = __THREW__; __THREW__ = 0;
            $212 = $211&1;
            do {
             if ($212) {
              $266 = ___cxa_find_matching_catch()|0;
              $267 = tempRet0;
              $$1$i485 = $267;$$12$i484 = $266;
             } else {
              ;HEAP32[$1>>2]=HEAP32[$210>>2]|0;HEAP32[$1+4>>2]=HEAP32[$210+4>>2]|0;HEAP32[$1+8>>2]=HEAP32[$210+8>>2]|0;
              HEAP32[$210>>2] = 0;
              $213 = ((($210)) + 4|0);
              HEAP32[$213>>2] = 0;
              $214 = ((($210)) + 8|0);
              HEAP32[$214>>2] = 0;
              __THREW__ = 0;
              $215 = (invoke_iii(392,($1|0),(16956|0))|0);
              $216 = __THREW__; __THREW__ = 0;
              $217 = $216&1;
              if ($217) {
               $268 = ___cxa_find_matching_catch()|0;
               $269 = tempRet0;
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
               $$1$i485 = $269;$$12$i484 = $268;
               break;
              }
              ;HEAP32[$0>>2]=HEAP32[$215>>2]|0;HEAP32[$0+4>>2]=HEAP32[$215+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[$215+8>>2]|0;
              HEAP32[$215>>2] = 0;
              $218 = ((($215)) + 4|0);
              HEAP32[$218>>2] = 0;
              $219 = ((($215)) + 8|0);
              HEAP32[$219>>2] = 0;
              $220 = HEAP8[$209>>0]|0;
              $221 = $220 & 1;
              $222 = ($221<<24>>24)==(0);
              do {
               if ($222) {
                $223 = ((($209)) + 1|0);
                HEAP8[$223>>0] = 0;
                HEAP8[$209>>0] = 0;
               } else {
                $224 = ((($207)) + -16|0);
                $225 = HEAP32[$224>>2]|0;
                HEAP8[$225>>0] = 0;
                $226 = ((($207)) + -20|0);
                HEAP32[$226>>2] = 0;
                $$pre$i$i$i$i466 = HEAP8[$209>>0]|0;
                $227 = $$pre$i$i$i$i466 & 1;
                $228 = ($227<<24>>24)==(0);
                if ($228) {
                 $233 = $$pre$i$i$i$i466;$242 = 10;
                } else {
                 $229 = HEAP32[$209>>2]|0;
                 $230 = $229 & -2;
                 $phitmp$i$i$i$i$i$i$i468 = (($230) + -1)|0;
                 $231 = $229&255;
                 $233 = $231;$242 = $phitmp$i$i$i$i$i$i$i468;
                }
                $232 = $233 & 1;
                $234 = ($232<<24>>24)==(0);
                if ($234) {
                 $235 = $233&255;
                 $236 = $235 >>> 1;
                 $237 = ($233&255)<(22);
                 if ($237) {
                  $2312 = 1;$241 = 10;$261 = $236;
                 } else {
                  $238 = (($236) + 16)|0;
                  $239 = $238 & 240;
                  $phitmp$i2$i$i$i$i$i$i471 = (($239) + -1)|0;
                  $2312 = 1;$241 = $phitmp$i2$i$i$i$i$i$i471;$261 = $236;
                 }
                } else {
                 $2312 = 0;$241 = 10;$261 = 0;
                }
                $240 = ($241|0)==($242|0);
                if (!($240)) {
                 $243 = ($241|0)==(10);
                 if ($243) {
                  $248 = ((($209)) + 1|0);
                  $249 = HEAP32[$224>>2]|0;
                  if ($2312) {
                   $250 = $233&255;
                   $251 = $250 >>> 1;
                   $252 = (($251) + 1)|0;
                   _memcpy(($248|0),($249|0),($252|0))|0;
                   _free($249);
                  } else {
                   $257 = HEAP8[$249>>0]|0;
                   HEAP8[$248>>0] = $257;
                   _free($249);
                  }
                  $262 = $261 << 1;
                  $263 = $262&255;
                  HEAP8[$209>>0] = $263;
                  break;
                 }
                 $244 = ($241>>>0)<=($242>>>0);
                 $245 = (($241) + 1)|0;
                 $246 = (_malloc($245)|0);
                 $247 = ($246|0)==(0|0);
                 $or$cond$i$i$i$i$i$i473 = $244 & $247;
                 if ($or$cond$i$i$i$i$i$i473) {
                  break;
                 }
                 if ($2312) {
                  $253 = ((($209)) + 1|0);
                  $254 = $233&255;
                  $255 = $254 >>> 1;
                  $256 = (($255) + 1)|0;
                  _memcpy(($246|0),($253|0),($256|0))|0;
                 } else {
                  $258 = HEAP32[$224>>2]|0;
                  $259 = HEAP8[$258>>0]|0;
                  HEAP8[$246>>0] = $259;
                  _free($258);
                 }
                 $260 = $245 | 1;
                 HEAP32[$209>>2] = $260;
                 HEAP32[$226>>2] = $261;
                 HEAP32[$224>>2] = $246;
                }
               }
              } while(0);
              ;HEAP32[$209>>2]=HEAP32[$0>>2]|0;HEAP32[$209+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$209+8>>2]=HEAP32[$0+8>>2]|0;
              HEAP32[$0>>2] = 0;
              $264 = ((($0)) + 4|0);
              HEAP32[$264>>2] = 0;
              $265 = ((($0)) + 8|0);
              HEAP32[$265>>2] = 0;
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
              $$03$i486 = $203;
              break L34;
             }
            } while(0);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
            ___resumeException($$12$i484|0);
            // unreachable;
           }
          }
         } else {
          $$03$i486 = $first;
         }
        } else {
         $$03$i486 = $first;
        }
       } else {
        $$03$i486 = $first;
       }
      } while(0);
      $$0 = $$03$i486;
      break L1;
      break;
     }
     case 122:  {
      $270 = ($144|0)>(2);
      L73: do {
       if ($270) {
        $271 = HEAP8[$first>>0]|0;
        $272 = ($271<<24>>24)==(97);
        if ($272) {
         $273 = ((($first)) + 1|0);
         $274 = HEAP8[$273>>0]|0;
         $275 = ($274<<24>>24)==(122);
         if ($275) {
          $276 = ((($first)) + 2|0);
          $277 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($276,$last,$db)|0);
          $278 = ($277|0)==($276|0);
          if ($278) {
           $$03$i456 = $first;
          } else {
           $279 = HEAP32[$db>>2]|0;
           $280 = ((($db)) + 4|0);
           $281 = HEAP32[$280>>2]|0;
           $282 = ($279|0)==($281|0);
           if ($282) {
            $$03$i456 = $first;
           } else {
            $283 = ((($281)) + -24|0);
            __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($5,$283);
            __THREW__ = 0;
            $284 = (invoke_iiii(391,($5|0),0,(18214|0))|0);
            $285 = __THREW__; __THREW__ = 0;
            $286 = $285&1;
            do {
             if ($286) {
              $340 = ___cxa_find_matching_catch()|0;
              $341 = tempRet0;
              $$1$i455 = $341;$$12$i454 = $340;
             } else {
              ;HEAP32[$4>>2]=HEAP32[$284>>2]|0;HEAP32[$4+4>>2]=HEAP32[$284+4>>2]|0;HEAP32[$4+8>>2]=HEAP32[$284+8>>2]|0;
              HEAP32[$284>>2] = 0;
              $287 = ((($284)) + 4|0);
              HEAP32[$287>>2] = 0;
              $288 = ((($284)) + 8|0);
              HEAP32[$288>>2] = 0;
              __THREW__ = 0;
              $289 = (invoke_iii(392,($4|0),(16956|0))|0);
              $290 = __THREW__; __THREW__ = 0;
              $291 = $290&1;
              if ($291) {
               $342 = ___cxa_find_matching_catch()|0;
               $343 = tempRet0;
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
               $$1$i455 = $343;$$12$i454 = $342;
               break;
              }
              ;HEAP32[$3>>2]=HEAP32[$289>>2]|0;HEAP32[$3+4>>2]=HEAP32[$289+4>>2]|0;HEAP32[$3+8>>2]=HEAP32[$289+8>>2]|0;
              HEAP32[$289>>2] = 0;
              $292 = ((($289)) + 4|0);
              HEAP32[$292>>2] = 0;
              $293 = ((($289)) + 8|0);
              HEAP32[$293>>2] = 0;
              $294 = HEAP8[$283>>0]|0;
              $295 = $294 & 1;
              $296 = ($295<<24>>24)==(0);
              do {
               if ($296) {
                $297 = ((($283)) + 1|0);
                HEAP8[$297>>0] = 0;
                HEAP8[$283>>0] = 0;
               } else {
                $298 = ((($281)) + -16|0);
                $299 = HEAP32[$298>>2]|0;
                HEAP8[$299>>0] = 0;
                $300 = ((($281)) + -20|0);
                HEAP32[$300>>2] = 0;
                $$pre$i$i$i$i436 = HEAP8[$283>>0]|0;
                $301 = $$pre$i$i$i$i436 & 1;
                $302 = ($301<<24>>24)==(0);
                if ($302) {
                 $307 = $$pre$i$i$i$i436;$316 = 10;
                } else {
                 $303 = HEAP32[$283>>2]|0;
                 $304 = $303 & -2;
                 $phitmp$i$i$i$i$i$i$i438 = (($304) + -1)|0;
                 $305 = $303&255;
                 $307 = $305;$316 = $phitmp$i$i$i$i$i$i$i438;
                }
                $306 = $307 & 1;
                $308 = ($306<<24>>24)==(0);
                if ($308) {
                 $309 = $307&255;
                 $310 = $309 >>> 1;
                 $311 = ($307&255)<(22);
                 if ($311) {
                  $2313 = 1;$315 = 10;$335 = $310;
                 } else {
                  $312 = (($310) + 16)|0;
                  $313 = $312 & 240;
                  $phitmp$i2$i$i$i$i$i$i441 = (($313) + -1)|0;
                  $2313 = 1;$315 = $phitmp$i2$i$i$i$i$i$i441;$335 = $310;
                 }
                } else {
                 $2313 = 0;$315 = 10;$335 = 0;
                }
                $314 = ($315|0)==($316|0);
                if (!($314)) {
                 $317 = ($315|0)==(10);
                 if ($317) {
                  $322 = ((($283)) + 1|0);
                  $323 = HEAP32[$298>>2]|0;
                  if ($2313) {
                   $324 = $307&255;
                   $325 = $324 >>> 1;
                   $326 = (($325) + 1)|0;
                   _memcpy(($322|0),($323|0),($326|0))|0;
                   _free($323);
                  } else {
                   $331 = HEAP8[$323>>0]|0;
                   HEAP8[$322>>0] = $331;
                   _free($323);
                  }
                  $336 = $335 << 1;
                  $337 = $336&255;
                  HEAP8[$283>>0] = $337;
                  break;
                 }
                 $318 = ($315>>>0)<=($316>>>0);
                 $319 = (($315) + 1)|0;
                 $320 = (_malloc($319)|0);
                 $321 = ($320|0)==(0|0);
                 $or$cond$i$i$i$i$i$i443 = $318 & $321;
                 if ($or$cond$i$i$i$i$i$i443) {
                  break;
                 }
                 if ($2313) {
                  $327 = ((($283)) + 1|0);
                  $328 = $307&255;
                  $329 = $328 >>> 1;
                  $330 = (($329) + 1)|0;
                  _memcpy(($320|0),($327|0),($330|0))|0;
                 } else {
                  $332 = HEAP32[$298>>2]|0;
                  $333 = HEAP8[$332>>0]|0;
                  HEAP8[$320>>0] = $333;
                  _free($332);
                 }
                 $334 = $319 | 1;
                 HEAP32[$283>>2] = $334;
                 HEAP32[$300>>2] = $335;
                 HEAP32[$298>>2] = $320;
                }
               }
              } while(0);
              ;HEAP32[$283>>2]=HEAP32[$3>>2]|0;HEAP32[$283+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$283+8>>2]=HEAP32[$3+8>>2]|0;
              HEAP32[$3>>2] = 0;
              $338 = ((($3)) + 4|0);
              HEAP32[$338>>2] = 0;
              $339 = ((($3)) + 8|0);
              HEAP32[$339>>2] = 0;
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
              $$03$i456 = $277;
              break L73;
             }
            } while(0);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
            ___resumeException($$12$i454|0);
            // unreachable;
           }
          }
         } else {
          $$03$i456 = $first;
         }
        } else {
         $$03$i456 = $first;
        }
       } else {
        $$03$i456 = $first;
       }
      } while(0);
      $$0 = $$03$i456;
      break L1;
      break;
     }
     default: {
      $$0 = $first;
      break L1;
     }
     }
     break;
    }
    case 99:  {
     $344 = ((($t$0)) + 1|0);
     $345 = HEAP8[$344>>0]|0;
     $346 = $345 << 24 >> 24;
     switch ($346|0) {
     case 99:  {
      $347 = ($144|0)>(2);
      L114: do {
       if ($347) {
        $348 = HEAP8[$first>>0]|0;
        $349 = ($348<<24>>24)==(99);
        if ($349) {
         $350 = ((($first)) + 1|0);
         $351 = HEAP8[$350>>0]|0;
         $352 = ($351<<24>>24)==(99);
         if ($352) {
          $353 = ((($first)) + 2|0);
          $354 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($353,$last,$db)|0);
          $355 = ($354|0)==($353|0);
          if ($355) {
           $$06$i426 = $first;
          } else {
           $356 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($354,$last,$db)|0);
           $357 = ($356|0)==($354|0);
           if ($357) {
            $$06$i426 = $first;
           } else {
            $358 = ((($db)) + 4|0);
            $359 = HEAP32[$358>>2]|0;
            $360 = HEAP32[$db>>2]|0;
            $361 = $359;
            $362 = $360;
            $363 = (($361) - ($362))|0;
            $364 = (($363|0) / 24)&-1;
            $365 = ($364>>>0)<(2);
            if ($365) {
             $$06$i426 = $first;
            } else {
             $366 = ((($359)) + -24|0);
             __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($expr$i399,$366);
             $367 = HEAP32[$358>>2]|0;
             $368 = ((($367)) + -24|0);
             $370 = $367;
             while(1) {
              $369 = ((($370)) + -24|0);
              HEAP32[$358>>2] = $369;
              __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($369);
              $$pre$i$i400 = HEAP32[$358>>2]|0;
              $371 = ($$pre$i$i400|0)==($368|0);
              if ($371) {
               break;
              } else {
               $370 = $$pre$i$i400;
              }
             }
             $372 = ((($367)) + -48|0);
             __THREW__ = 0;
             invoke_vii(396,($11|0),($372|0));
             $373 = __THREW__; __THREW__ = 0;
             $374 = $373&1;
             if ($374) {
              $407 = ___cxa_find_matching_catch()|0;
              $408 = tempRet0;
              $$4$i425 = $408;$$45$i424 = $407;
             } else {
              __THREW__ = 0;
              $375 = (invoke_iiii(391,($11|0),0,(18224|0))|0);
              $376 = __THREW__; __THREW__ = 0;
              $377 = $376&1;
              if ($377) {
               $409 = ___cxa_find_matching_catch()|0;
               $410 = tempRet0;
               $$3$i423 = $410;$$34$i422 = $409;
              } else {
               ;HEAP32[$10>>2]=HEAP32[$375>>2]|0;HEAP32[$10+4>>2]=HEAP32[$375+4>>2]|0;HEAP32[$10+8>>2]=HEAP32[$375+8>>2]|0;
               HEAP32[$375>>2] = 0;
               $378 = ((($375)) + 4|0);
               HEAP32[$378>>2] = 0;
               $379 = ((($375)) + 8|0);
               HEAP32[$379>>2] = 0;
               __THREW__ = 0;
               $380 = (invoke_iii(392,($10|0),(18236|0))|0);
               $381 = __THREW__; __THREW__ = 0;
               $382 = $381&1;
               if ($382) {
                $411 = ___cxa_find_matching_catch()|0;
                $412 = tempRet0;
                $$2$i421 = $412;$$23$i420 = $411;
               } else {
                ;HEAP32[$9>>2]=HEAP32[$380>>2]|0;HEAP32[$9+4>>2]=HEAP32[$380+4>>2]|0;HEAP32[$9+8>>2]=HEAP32[$380+8>>2]|0;
                HEAP32[$380>>2] = 0;
                $383 = ((($380)) + 4|0);
                HEAP32[$383>>2] = 0;
                $384 = ((($380)) + 8|0);
                HEAP32[$384>>2] = 0;
                $385 = HEAP8[$expr$i399>>0]|0;
                $386 = $385 & 1;
                $387 = ($386<<24>>24)==(0);
                $388 = ((($expr$i399)) + 8|0);
                $389 = HEAP32[$388>>2]|0;
                $390 = ((($expr$i399)) + 1|0);
                $391 = $387 ? $390 : $389;
                $392 = ((($expr$i399)) + 4|0);
                $393 = HEAP32[$392>>2]|0;
                $394 = $385&255;
                $395 = $394 >>> 1;
                $396 = $387 ? $395 : $393;
                __THREW__ = 0;
                $397 = (invoke_iiii(387,($9|0),($391|0),($396|0))|0);
                $398 = __THREW__; __THREW__ = 0;
                $399 = $398&1;
                do {
                 if ($399) {
                  $413 = ___cxa_find_matching_catch()|0;
                  $414 = tempRet0;
                  $$1$i419 = $414;$$12$i418 = $413;
                 } else {
                  ;HEAP32[$8>>2]=HEAP32[$397>>2]|0;HEAP32[$8+4>>2]=HEAP32[$397+4>>2]|0;HEAP32[$8+8>>2]=HEAP32[$397+8>>2]|0;
                  HEAP32[$397>>2] = 0;
                  $400 = ((($397)) + 4|0);
                  HEAP32[$400>>2] = 0;
                  $401 = ((($397)) + 8|0);
                  HEAP32[$401>>2] = 0;
                  __THREW__ = 0;
                  $402 = (invoke_iii(392,($8|0),(16956|0))|0);
                  $403 = __THREW__; __THREW__ = 0;
                  $404 = $403&1;
                  if ($404) {
                   $415 = ___cxa_find_matching_catch()|0;
                   $416 = tempRet0;
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
                   $$1$i419 = $416;$$12$i418 = $415;
                   break;
                  } else {
                   ;HEAP32[$7>>2]=HEAP32[$402>>2]|0;HEAP32[$7+4>>2]=HEAP32[$402+4>>2]|0;HEAP32[$7+8>>2]=HEAP32[$402+8>>2]|0;
                   HEAP32[$402>>2] = 0;
                   $405 = ((($402)) + 4|0);
                   HEAP32[$405>>2] = 0;
                   $406 = ((($402)) + 8|0);
                   HEAP32[$406>>2] = 0;
                   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($6,$7);
                   __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($372,$6);
                   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($6);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($10);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($11);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($expr$i399);
                   $$06$i426 = $356;
                   break L114;
                  }
                 }
                } while(0);
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
                $$2$i421 = $$1$i419;$$23$i420 = $$12$i418;
               }
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($10);
               $$3$i423 = $$2$i421;$$34$i422 = $$23$i420;
              }
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($11);
              $$4$i425 = $$3$i423;$$45$i424 = $$34$i422;
             }
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($expr$i399);
             ___resumeException($$45$i424|0);
             // unreachable;
            }
           }
          }
         } else {
          $$06$i426 = $first;
         }
        } else {
         $$06$i426 = $first;
        }
       } else {
        $$06$i426 = $first;
       }
      } while(0);
      $$0 = $$06$i426;
      break L1;
      break;
     }
     case 108:  {
      L145: do {
       if ($146) {
        $417 = HEAP8[$first>>0]|0;
        $418 = ($417<<24>>24)==(99);
        if ($418) {
         $419 = ((($first)) + 1|0);
         $420 = HEAP8[$419>>0]|0;
         $421 = ($420<<24>>24)==(108);
         if ($421) {
          $422 = ((($first)) + 2|0);
          $423 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($422,$last,$db)|0);
          $424 = ($423|0)==($422|0);
          $425 = ($423|0)==($last|0);
          $or$cond5$i = $424 | $425;
          if ($or$cond5$i) {
           $$2$i398 = $first;
          } else {
           $426 = HEAP32[$db>>2]|0;
           $427 = ((($db)) + 4|0);
           $428 = HEAP32[$427>>2]|0;
           $429 = ($426|0)==($428|0);
           if ($429) {
            $$2$i398 = $first;
           } else {
            $430 = ((($428)) + -24|0);
            $431 = ((($428)) + -12|0);
            $432 = HEAP8[$431>>0]|0;
            $433 = $432 & 1;
            $434 = ($433<<24>>24)==(0);
            $435 = ((($428)) + -4|0);
            $436 = HEAP32[$435>>2]|0;
            $437 = ((($431)) + 1|0);
            $438 = $434 ? $437 : $436;
            $439 = ((($428)) + -8|0);
            $440 = HEAP32[$439>>2]|0;
            $441 = $432&255;
            $442 = $441 >>> 1;
            $443 = $434 ? $442 : $440;
            (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($430,$438,$443)|0);
            $444 = HEAP32[$427>>2]|0;
            HEAP32[$12>>2] = 0;
            $445 = ((($12)) + 4|0);
            HEAP32[$445>>2] = 0;
            $446 = ((($12)) + 8|0);
            HEAP32[$446>>2] = 0;
            $447 = ((($444)) + -12|0);
            $448 = HEAP8[$447>>0]|0;
            $449 = $448 & 1;
            $450 = ($449<<24>>24)==(0);
            do {
             if ($450) {
              $451 = ((($447)) + 1|0);
              HEAP8[$451>>0] = 0;
              HEAP8[$447>>0] = 0;
             } else {
              $452 = ((($444)) + -4|0);
              $453 = HEAP32[$452>>2]|0;
              HEAP8[$453>>0] = 0;
              $454 = ((($444)) + -8|0);
              HEAP32[$454>>2] = 0;
              $$pre$i$i$i$i372 = HEAP8[$447>>0]|0;
              $455 = $$pre$i$i$i$i372 & 1;
              $456 = ($455<<24>>24)==(0);
              if ($456) {
               $461 = $$pre$i$i$i$i372;$470 = 10;
              } else {
               $457 = HEAP32[$447>>2]|0;
               $458 = $457 & -2;
               $phitmp$i$i$i$i$i$i$i374 = (($458) + -1)|0;
               $459 = $457&255;
               $461 = $459;$470 = $phitmp$i$i$i$i$i$i$i374;
              }
              $460 = $461 & 1;
              $462 = ($460<<24>>24)==(0);
              if ($462) {
               $463 = $461&255;
               $464 = $463 >>> 1;
               $465 = ($461&255)<(22);
               if ($465) {
                $2314 = 1;$469 = 10;$489 = $464;
               } else {
                $466 = (($464) + 16)|0;
                $467 = $466 & 240;
                $phitmp$i2$i$i$i$i$i$i377 = (($467) + -1)|0;
                $2314 = 1;$469 = $phitmp$i2$i$i$i$i$i$i377;$489 = $464;
               }
              } else {
               $2314 = 0;$469 = 10;$489 = 0;
              }
              $468 = ($469|0)==($470|0);
              if (!($468)) {
               $471 = ($469|0)==(10);
               if ($471) {
                $476 = ((($447)) + 1|0);
                $477 = HEAP32[$452>>2]|0;
                if ($2314) {
                 $478 = $461&255;
                 $479 = $478 >>> 1;
                 $480 = (($479) + 1)|0;
                 _memcpy(($476|0),($477|0),($480|0))|0;
                 _free($477);
                } else {
                 $485 = HEAP8[$477>>0]|0;
                 HEAP8[$476>>0] = $485;
                 _free($477);
                }
                $490 = $489 << 1;
                $491 = $490&255;
                HEAP8[$447>>0] = $491;
                break;
               }
               $472 = ($469>>>0)<=($470>>>0);
               $473 = (($469) + 1)|0;
               $474 = (_malloc($473)|0);
               $475 = ($474|0)==(0|0);
               $or$cond$i$i$i$i$i$i379 = $472 & $475;
               if (!($or$cond$i$i$i$i$i$i379)) {
                if ($2314) {
                 $481 = ((($447)) + 1|0);
                 $482 = $461&255;
                 $483 = $482 >>> 1;
                 $484 = (($483) + 1)|0;
                 _memcpy(($474|0),($481|0),($484|0))|0;
                } else {
                 $486 = HEAP32[$452>>2]|0;
                 $487 = HEAP8[$486>>0]|0;
                 HEAP8[$474>>0] = $487;
                 _free($486);
                }
                $488 = $473 | 1;
                HEAP32[$447>>2] = $488;
                HEAP32[$454>>2] = $489;
                HEAP32[$452>>2] = $474;
               }
              }
             }
            } while(0);
            ;HEAP32[$447>>2]=HEAP32[$12>>2]|0;HEAP32[$447+4>>2]=HEAP32[$12+4>>2]|0;HEAP32[$447+8>>2]=HEAP32[$12+8>>2]|0;
            HEAP32[$12>>2] = 0;
            $492 = ((($12)) + 4|0);
            HEAP32[$492>>2] = 0;
            $493 = ((($12)) + 8|0);
            HEAP32[$493>>2] = 0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($12);
            $494 = HEAP32[$427>>2]|0;
            $495 = ((($494)) + -24|0);
            (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($495,17051)|0);
            $496 = ((($tmp$i367)) + 4|0);
            $497 = ((($tmp$i367)) + 8|0);
            $498 = ((($tmp$i367)) + 1|0);
            $499 = HEAP8[$423>>0]|0;
            $500 = ($499<<24>>24)==(69);
            L175: do {
             if ($500) {
              $t$0$i390$lcssa = $423;
             } else {
              $t$0$i390556 = $423;
              while(1) {
               $501 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($t$0$i390556,$last,$db)|0);
               $502 = ($501|0)==($t$0$i390556|0);
               $503 = ($501|0)==($last|0);
               $or$cond$i392 = $502 | $503;
               if ($or$cond$i392) {
                $$2$i398 = $first;
                break L145;
               }
               $504 = HEAP32[$db>>2]|0;
               $505 = HEAP32[$427>>2]|0;
               $506 = ($504|0)==($505|0);
               if ($506) {
                $$2$i398 = $first;
                break L145;
               }
               $507 = ((($505)) + -24|0);
               __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($tmp$i367,$507);
               $508 = HEAP32[$427>>2]|0;
               $509 = ((($508)) + -24|0);
               $511 = $508;
               while(1) {
                $510 = ((($511)) + -24|0);
                HEAP32[$427>>2] = $510;
                __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($510);
                $$pre$i$i393 = HEAP32[$427>>2]|0;
                $512 = ($$pre$i$i393|0)==($509|0);
                if ($512) {
                 break;
                } else {
                 $511 = $$pre$i$i393;
                }
               }
               $513 = HEAP8[$tmp$i367>>0]|0;
               $514 = $513 & 1;
               $515 = ($514<<24>>24)==(0);
               $516 = HEAP32[$496>>2]|0;
               $517 = $513&255;
               $518 = $517 >>> 1;
               $519 = $515 ? $518 : $516;
               $520 = ($519|0)==(0);
               if (!($520)) {
                $521 = HEAP32[$db>>2]|0;
                $522 = ($521|0)==($509|0);
                if ($522) {
                 label = 143;
                 break;
                }
                $525 = ((($508)) + -48|0);
                $526 = HEAP32[$497>>2]|0;
                $527 = $515 ? $498 : $526;
                __THREW__ = 0;
                (invoke_iiii(387,($525|0),($527|0),($519|0))|0);
                $528 = __THREW__; __THREW__ = 0;
                $529 = $528&1;
                if ($529) {
                 label = 140;
                 break;
                }
               }
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp$i367);
               $530 = HEAP8[$501>>0]|0;
               $531 = ($530<<24>>24)==(69);
               if ($531) {
                $t$0$i390$lcssa = $501;
                break L175;
               } else {
                $t$0$i390556 = $501;
               }
              }
              if ((label|0) == 140) {
               $523 = ___cxa_find_matching_catch()|0;
               $524 = tempRet0;
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp$i367);
               ___resumeException($523|0);
               // unreachable;
              }
              else if ((label|0) == 143) {
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp$i367);
               $$2$i398 = $first;
               break L145;
              }
             }
            } while(0);
            $532 = HEAP32[$db>>2]|0;
            $533 = HEAP32[$427>>2]|0;
            $534 = ($532|0)==($533|0);
            if ($534) {
             $$2$i398 = $first;
            } else {
             $535 = ((($t$0$i390$lcssa)) + 1|0);
             $536 = ((($533)) + -24|0);
             (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($536,16956)|0);
             $$2$i398 = $535;
            }
           }
          }
         } else {
          $$2$i398 = $first;
         }
        } else {
         $$2$i398 = $first;
        }
       } else {
        $$2$i398 = $first;
       }
      } while(0);
      $$0 = $$2$i398;
      break L1;
      break;
     }
     case 109:  {
      $537 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($79,18239,1);
      __THREW__ = 0;
      $538 = (invoke_iiiii(408,($537|0),($last|0),($79|0),($db|0))|0);
      $539 = __THREW__; __THREW__ = 0;
      $540 = $539&1;
      if ($540) {
       $542 = ___cxa_find_matching_catch()|0;
       $543 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($79);
       $$23 = $542;$$2332 = $543;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($79);
       $541 = ($538|0)==($537|0);
       $first$37 = $541 ? $first : $538;
       $$0 = $first$37;
       break L1;
      }
      break;
     }
     case 111:  {
      $544 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($80,17265,1);
      __THREW__ = 0;
      $545 = (invoke_iiiii(409,($544|0),($last|0),($80|0),($db|0))|0);
      $546 = __THREW__; __THREW__ = 0;
      $547 = $546&1;
      if ($547) {
       $549 = ___cxa_find_matching_catch()|0;
       $550 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($80);
       $$23 = $549;$$2332 = $550;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($80);
       $548 = ($545|0)==($544|0);
       $first$38 = $548 ? $first : $545;
       $$0 = $first$38;
       break L1;
      }
      break;
     }
     case 118:  {
      $551 = ($144|0)>(2);
      L202: do {
       if ($551) {
        $552 = HEAP8[$first>>0]|0;
        $553 = ($552<<24>>24)==(99);
        if ($553) {
         $554 = ((($first)) + 1|0);
         $555 = HEAP8[$554>>0]|0;
         $556 = ($555<<24>>24)==(118);
         if ($556) {
          $557 = ((($db)) + 63|0);
          $558 = HEAP8[$557>>0]|0;
          HEAP8[$557>>0] = 0;
          $559 = ((($first)) + 2|0);
          $560 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($559,$last,$db)|0);
          HEAP8[$557>>0] = $558;
          $561 = ($560|0)==($559|0);
          $562 = ($560|0)==($last|0);
          $or$cond$i347 = $561 | $562;
          if ($or$cond$i347) {
           $$311$i = $first;
          } else {
           $563 = HEAP8[$560>>0]|0;
           $564 = ($563<<24>>24)==(95);
           if ($564) {
            $567 = ((($560)) + 1|0);
            $568 = ($567|0)==($last|0);
            if ($568) {
             $$311$i = $first;
             break;
            }
            $569 = HEAP8[$567>>0]|0;
            $570 = ($569<<24>>24)==(69);
            do {
             if ($570) {
              $571 = ((($db)) + 4|0);
              $572 = HEAP32[$571>>2]|0;
              $573 = ((($db)) + 8|0);
              $574 = HEAP32[$573>>2]|0;
              $575 = ($572>>>0)<($574>>>0);
              if ($575) {
               ;HEAP32[$572>>2]=0|0;HEAP32[$572+4>>2]=0|0;HEAP32[$572+8>>2]=0|0;HEAP32[$572+12>>2]=0|0;HEAP32[$572+16>>2]=0|0;HEAP32[$572+20>>2]=0|0;
               HEAP32[$572>>2] = 0;
               $576 = ((($572)) + 4|0);
               HEAP32[$576>>2] = 0;
               $577 = ((($572)) + 8|0);
               HEAP32[$577>>2] = 0;
               $578 = ((($572)) + 12|0);
               HEAP32[$578>>2] = 0;
               $579 = ((($578)) + 4|0);
               HEAP32[$579>>2] = 0;
               $580 = ((($578)) + 8|0);
               HEAP32[$580>>2] = 0;
               $581 = HEAP32[$571>>2]|0;
               $582 = ((($581)) + 24|0);
               HEAP32[$571>>2] = $582;
               $t$1$i350 = $567;
               break;
              }
              $583 = ((($db)) + 12|0);
              $584 = HEAP32[$db>>2]|0;
              $585 = $572;
              $586 = $584;
              $587 = (($585) - ($586))|0;
              $588 = (($587|0) / 24)&-1;
              $589 = (($588) + 1)|0;
              $590 = ($587|0)<(-24);
              if ($590) {
               __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
               // unreachable;
              }
              $591 = $574;
              $592 = (($591) - ($586))|0;
              $593 = (($592|0) / 24)&-1;
              $594 = ($593>>>0)<(1073741823);
              if ($594) {
               $595 = $593 << 1;
               $596 = ($595>>>0)<($589>>>0);
               $597 = $596 ? $589 : $595;
               $$0$i$i$i$i348 = $597;
              } else {
               $$0$i$i$i$i348 = 2147483647;
              }
              __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i$i346,$$0$i$i$i$i348,$588,$583);
              $598 = ((($__v$i$i$i346)) + 8|0);
              $599 = HEAP32[$598>>2]|0;
              ;HEAP32[$599>>2]=0|0;HEAP32[$599+4>>2]=0|0;HEAP32[$599+8>>2]=0|0;HEAP32[$599+12>>2]=0|0;HEAP32[$599+16>>2]=0|0;HEAP32[$599+20>>2]=0|0;
              HEAP32[$599>>2] = 0;
              $600 = ((($599)) + 4|0);
              HEAP32[$600>>2] = 0;
              $601 = ((($599)) + 8|0);
              HEAP32[$601>>2] = 0;
              $602 = ((($599)) + 12|0);
              HEAP32[$602>>2] = 0;
              $603 = ((($602)) + 4|0);
              HEAP32[$603>>2] = 0;
              $604 = ((($602)) + 8|0);
              HEAP32[$604>>2] = 0;
              $605 = ((($599)) + 24|0);
              HEAP32[$598>>2] = $605;
              __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i$i346);
              __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i$i346);
              $t$1$i350 = $567;
             } else {
              $t$0$i349567 = $567;
              while(1) {
               $606 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($t$0$i349567,$last,$db)|0);
               $607 = ($606|0)==($t$0$i349567|0);
               $608 = ($606|0)==($last|0);
               $or$cond13$i = $607 | $608;
               if ($or$cond13$i) {
                $$311$i = $first;
                break L202;
               }
               $$pre509 = HEAP8[$606>>0]|0;
               $609 = ($$pre509<<24>>24)==(69);
               if ($609) {
                $t$1$i350 = $606;
                break;
               } else {
                $t$0$i349567 = $606;
               }
              }
             }
            } while(0);
            $610 = ((($t$1$i350)) + 1|0);
            $t$2$i351 = $610;
           } else {
            $565 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($560,$last,$db)|0);
            $566 = ($565|0)==($560|0);
            if ($566) {
             $$311$i = $first;
             break;
            } else {
             $t$2$i351 = $565;
            }
           }
           $611 = ((($db)) + 4|0);
           $612 = HEAP32[$611>>2]|0;
           $613 = HEAP32[$db>>2]|0;
           $614 = $612;
           $615 = $613;
           $616 = (($614) - ($615))|0;
           $617 = (($616|0) / 24)&-1;
           $618 = ($617>>>0)<(2);
           if ($618) {
            $$311$i = $first;
           } else {
            $619 = ((($612)) + -24|0);
            __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($tmp2$i,$619);
            $620 = HEAP32[$611>>2]|0;
            $621 = ((($620)) + -24|0);
            $623 = $620;
            while(1) {
             $622 = ((($623)) + -24|0);
             HEAP32[$611>>2] = $622;
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($622);
             $$pre$i$i352 = HEAP32[$611>>2]|0;
             $624 = ($$pre$i$i352|0)==($621|0);
             if ($624) {
              break;
             } else {
              $623 = $$pre$i$i352;
             }
            }
            $625 = ((($620)) + -48|0);
            __THREW__ = 0;
            invoke_vii(396,($18|0),($625|0));
            $626 = __THREW__; __THREW__ = 0;
            $627 = $626&1;
            if ($627) {
             $660 = ___cxa_find_matching_catch()|0;
             $661 = tempRet0;
             $$4$i366 = $661;$$46$i = $660;
            } else {
             __THREW__ = 0;
             $628 = (invoke_iiii(391,($18|0),0,(17051|0))|0);
             $629 = __THREW__; __THREW__ = 0;
             $630 = $629&1;
             if ($630) {
              $662 = ___cxa_find_matching_catch()|0;
              $663 = tempRet0;
              $$3$i365 = $663;$$35$i = $662;
             } else {
              ;HEAP32[$17>>2]=HEAP32[$628>>2]|0;HEAP32[$17+4>>2]=HEAP32[$628+4>>2]|0;HEAP32[$17+8>>2]=HEAP32[$628+8>>2]|0;
              HEAP32[$628>>2] = 0;
              $631 = ((($628)) + 4|0);
              HEAP32[$631>>2] = 0;
              $632 = ((($628)) + 8|0);
              HEAP32[$632>>2] = 0;
              __THREW__ = 0;
              $633 = (invoke_iii(392,($17|0),(18241|0))|0);
              $634 = __THREW__; __THREW__ = 0;
              $635 = $634&1;
              if ($635) {
               $664 = ___cxa_find_matching_catch()|0;
               $665 = tempRet0;
               $$2$i364 = $665;$$24$i = $664;
              } else {
               ;HEAP32[$16>>2]=HEAP32[$633>>2]|0;HEAP32[$16+4>>2]=HEAP32[$633+4>>2]|0;HEAP32[$16+8>>2]=HEAP32[$633+8>>2]|0;
               HEAP32[$633>>2] = 0;
               $636 = ((($633)) + 4|0);
               HEAP32[$636>>2] = 0;
               $637 = ((($633)) + 8|0);
               HEAP32[$637>>2] = 0;
               $638 = HEAP8[$tmp2$i>>0]|0;
               $639 = $638 & 1;
               $640 = ($639<<24>>24)==(0);
               $641 = ((($tmp2$i)) + 8|0);
               $642 = HEAP32[$641>>2]|0;
               $643 = ((($tmp2$i)) + 1|0);
               $644 = $640 ? $643 : $642;
               $645 = ((($tmp2$i)) + 4|0);
               $646 = HEAP32[$645>>2]|0;
               $647 = $638&255;
               $648 = $647 >>> 1;
               $649 = $640 ? $648 : $646;
               __THREW__ = 0;
               $650 = (invoke_iiii(387,($16|0),($644|0),($649|0))|0);
               $651 = __THREW__; __THREW__ = 0;
               $652 = $651&1;
               do {
                if ($652) {
                 $666 = ___cxa_find_matching_catch()|0;
                 $667 = tempRet0;
                 $$1$i363 = $667;$$13$i = $666;
                } else {
                 ;HEAP32[$15>>2]=HEAP32[$650>>2]|0;HEAP32[$15+4>>2]=HEAP32[$650+4>>2]|0;HEAP32[$15+8>>2]=HEAP32[$650+8>>2]|0;
                 HEAP32[$650>>2] = 0;
                 $653 = ((($650)) + 4|0);
                 HEAP32[$653>>2] = 0;
                 $654 = ((($650)) + 8|0);
                 HEAP32[$654>>2] = 0;
                 __THREW__ = 0;
                 $655 = (invoke_iii(392,($15|0),(16956|0))|0);
                 $656 = __THREW__; __THREW__ = 0;
                 $657 = $656&1;
                 if ($657) {
                  $668 = ___cxa_find_matching_catch()|0;
                  $669 = tempRet0;
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($15);
                  $$1$i363 = $669;$$13$i = $668;
                  break;
                 } else {
                  ;HEAP32[$14>>2]=HEAP32[$655>>2]|0;HEAP32[$14+4>>2]=HEAP32[$655+4>>2]|0;HEAP32[$14+8>>2]=HEAP32[$655+8>>2]|0;
                  HEAP32[$655>>2] = 0;
                  $658 = ((($655)) + 4|0);
                  HEAP32[$658>>2] = 0;
                  $659 = ((($655)) + 8|0);
                  HEAP32[$659>>2] = 0;
                  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($13,$14);
                  __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($625,$13);
                  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($13);
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($14);
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($15);
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($16);
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($17);
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($18);
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp2$i);
                  $$311$i = $t$2$i351;
                  break L202;
                 }
                }
               } while(0);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($16);
               $$2$i364 = $$1$i363;$$24$i = $$13$i;
              }
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($17);
              $$3$i365 = $$2$i364;$$35$i = $$24$i;
             }
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($18);
             $$4$i366 = $$3$i365;$$46$i = $$35$i;
            }
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp2$i);
            ___resumeException($$46$i|0);
            // unreachable;
           }
          }
         } else {
          $$311$i = $first;
         }
        } else {
         $$311$i = $first;
        }
       } else {
        $$311$i = $first;
       }
      } while(0);
      $$0 = $$311$i;
      break L1;
      break;
     }
     default: {
      $$0 = $first;
      break L1;
     }
     }
     break;
    }
    case 100:  {
     $670 = ((($t$0)) + 1|0);
     $671 = HEAP8[$670>>0]|0;
     $672 = $671 << 24 >> 24;
     switch ($672|0) {
     case 97:  {
      $673 = ((($t$0)) + 2|0);
      $674 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($673,$last,$db)|0);
      $675 = ($674|0)==($673|0);
      if ($675) {
       $$0 = $first;
       break L1;
      }
      $676 = HEAP32[$db>>2]|0;
      $677 = ((($db)) + 4|0);
      $678 = HEAP32[$677>>2]|0;
      $679 = ($676|0)==($678|0);
      if ($679) {
       $$0 = $first;
       break L1;
      }
      $680 = ((($678)) + -24|0);
      if ($parsed_gs$0$off0) {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($83,17239,2);
      } else {
       HEAP32[$83>>2] = 0;
       $681 = ((($83)) + 4|0);
       HEAP32[$681>>2] = 0;
       $682 = ((($83)) + 8|0);
       HEAP32[$682>>2] = 0;
      }
      __THREW__ = 0;
      $683 = (invoke_iii(392,($83|0),(18244|0))|0);
      $684 = __THREW__; __THREW__ = 0;
      $685 = $684&1;
      if ($685) {
       $755 = ___cxa_find_matching_catch()|0;
       $756 = tempRet0;
       $$2 = $755;$$211 = $756;
      } else {
       ;HEAP32[$82>>2]=HEAP32[$683>>2]|0;HEAP32[$82+4>>2]=HEAP32[$683+4>>2]|0;HEAP32[$82+8>>2]=HEAP32[$683+8>>2]|0;
       HEAP32[$683>>2] = 0;
       $686 = ((($683)) + 4|0);
       HEAP32[$686>>2] = 0;
       $687 = ((($683)) + 8|0);
       HEAP32[$687>>2] = 0;
       $688 = HEAP32[$677>>2]|0;
       $689 = ((($688)) + -24|0);
       __THREW__ = 0;
       invoke_vii(396,($84|0),($689|0));
       $690 = __THREW__; __THREW__ = 0;
       $691 = $690&1;
       do {
        if ($691) {
         $757 = ___cxa_find_matching_catch()|0;
         $758 = tempRet0;
         $$1 = $757;$$110 = $758;
        } else {
         $692 = HEAP8[$84>>0]|0;
         $693 = $692 & 1;
         $694 = ($693<<24>>24)==(0);
         $695 = ((($84)) + 8|0);
         $696 = HEAP32[$695>>2]|0;
         $697 = ((($84)) + 1|0);
         $698 = $694 ? $697 : $696;
         $699 = ((($84)) + 4|0);
         $700 = HEAP32[$699>>2]|0;
         $701 = $692&255;
         $702 = $701 >>> 1;
         $703 = $694 ? $702 : $700;
         __THREW__ = 0;
         $704 = (invoke_iiii(387,($82|0),($698|0),($703|0))|0);
         $705 = __THREW__; __THREW__ = 0;
         $706 = $705&1;
         if ($706) {
          $759 = ___cxa_find_matching_catch()|0;
          $760 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($84);
          $$1 = $759;$$110 = $760;
          break;
         }
         ;HEAP32[$81>>2]=HEAP32[$704>>2]|0;HEAP32[$81+4>>2]=HEAP32[$704+4>>2]|0;HEAP32[$81+8>>2]=HEAP32[$704+8>>2]|0;
         HEAP32[$704>>2] = 0;
         $707 = ((($704)) + 4|0);
         HEAP32[$707>>2] = 0;
         $708 = ((($704)) + 8|0);
         HEAP32[$708>>2] = 0;
         $709 = HEAP8[$680>>0]|0;
         $710 = $709 & 1;
         $711 = ($710<<24>>24)==(0);
         do {
          if ($711) {
           $712 = ((($680)) + 1|0);
           HEAP8[$712>>0] = 0;
           HEAP8[$680>>0] = 0;
          } else {
           $713 = ((($678)) + -16|0);
           $714 = HEAP32[$713>>2]|0;
           HEAP8[$714>>0] = 0;
           $715 = ((($678)) + -20|0);
           HEAP32[$715>>2] = 0;
           $$pre$i$i$i = HEAP8[$680>>0]|0;
           $716 = $$pre$i$i$i & 1;
           $717 = ($716<<24>>24)==(0);
           if ($717) {
            $722 = $$pre$i$i$i;$731 = 10;
           } else {
            $718 = HEAP32[$680>>2]|0;
            $719 = $718 & -2;
            $phitmp$i$i$i$i$i$i = (($719) + -1)|0;
            $720 = $718&255;
            $722 = $720;$731 = $phitmp$i$i$i$i$i$i;
           }
           $721 = $722 & 1;
           $723 = ($721<<24>>24)==(0);
           if ($723) {
            $724 = $722&255;
            $725 = $724 >>> 1;
            $726 = ($722&255)<(22);
            if ($726) {
             $2315 = 1;$730 = 10;$750 = $725;
            } else {
             $727 = (($725) + 16)|0;
             $728 = $727 & 240;
             $phitmp$i2$i$i$i$i$i = (($728) + -1)|0;
             $2315 = 1;$730 = $phitmp$i2$i$i$i$i$i;$750 = $725;
            }
           } else {
            $2315 = 0;$730 = 10;$750 = 0;
           }
           $729 = ($730|0)==($731|0);
           if (!($729)) {
            $732 = ($730|0)==(10);
            if ($732) {
             $737 = ((($680)) + 1|0);
             $738 = HEAP32[$713>>2]|0;
             if ($2315) {
              $739 = $722&255;
              $740 = $739 >>> 1;
              $741 = (($740) + 1)|0;
              _memcpy(($737|0),($738|0),($741|0))|0;
              _free($738);
             } else {
              $746 = HEAP8[$738>>0]|0;
              HEAP8[$737>>0] = $746;
              _free($738);
             }
             $751 = $750 << 1;
             $752 = $751&255;
             HEAP8[$680>>0] = $752;
             break;
            }
            $733 = ($730>>>0)<=($731>>>0);
            $734 = (($730) + 1)|0;
            $735 = (_malloc($734)|0);
            $736 = ($735|0)==(0|0);
            $or$cond$i$i$i$i$i = $733 & $736;
            if (!($or$cond$i$i$i$i$i)) {
             if ($2315) {
              $742 = ((($680)) + 1|0);
              $743 = $722&255;
              $744 = $743 >>> 1;
              $745 = (($744) + 1)|0;
              _memcpy(($735|0),($742|0),($745|0))|0;
             } else {
              $747 = HEAP32[$713>>2]|0;
              $748 = HEAP8[$747>>0]|0;
              HEAP8[$735>>0] = $748;
              _free($747);
             }
             $749 = $734 | 1;
             HEAP32[$680>>2] = $749;
             HEAP32[$715>>2] = $750;
             HEAP32[$713>>2] = $735;
            }
           }
          }
         } while(0);
         ;HEAP32[$680>>2]=HEAP32[$81>>2]|0;HEAP32[$680+4>>2]=HEAP32[$81+4>>2]|0;HEAP32[$680+8>>2]=HEAP32[$81+8>>2]|0;
         HEAP32[$81>>2] = 0;
         $753 = ((($81)) + 4|0);
         HEAP32[$753>>2] = 0;
         $754 = ((($81)) + 8|0);
         HEAP32[$754>>2] = 0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($81);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($84);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($82);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($83);
         $$0 = $674;
         break L1;
        }
       } while(0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($82);
       $$2 = $$1;$$211 = $$110;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($83);
      $$23 = $$2;$$2332 = $$211;
      break L7;
      break;
     }
     case 99:  {
      $761 = ($144|0)>(2);
      L296: do {
       if ($761) {
        $762 = HEAP8[$first>>0]|0;
        $763 = ($762<<24>>24)==(100);
        if ($763) {
         $764 = ((($first)) + 1|0);
         $765 = HEAP8[$764>>0]|0;
         $766 = ($765<<24>>24)==(99);
         if ($766) {
          $767 = ((($first)) + 2|0);
          $768 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($767,$last,$db)|0);
          $769 = ($768|0)==($767|0);
          if ($769) {
           $$06$i345 = $first;
          } else {
           $770 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($768,$last,$db)|0);
           $771 = ($770|0)==($768|0);
           if ($771) {
            $$06$i345 = $first;
           } else {
            $772 = ((($db)) + 4|0);
            $773 = HEAP32[$772>>2]|0;
            $774 = HEAP32[$db>>2]|0;
            $775 = $773;
            $776 = $774;
            $777 = (($775) - ($776))|0;
            $778 = (($777|0) / 24)&-1;
            $779 = ($778>>>0)<(2);
            if ($779) {
             $$06$i345 = $first;
            } else {
             $780 = ((($773)) + -24|0);
             __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($expr$i318,$780);
             $781 = HEAP32[$772>>2]|0;
             $782 = ((($781)) + -24|0);
             $784 = $781;
             while(1) {
              $783 = ((($784)) + -24|0);
              HEAP32[$772>>2] = $783;
              __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($783);
              $$pre$i$i319 = HEAP32[$772>>2]|0;
              $785 = ($$pre$i$i319|0)==($782|0);
              if ($785) {
               break;
              } else {
               $784 = $$pre$i$i319;
              }
             }
             $786 = ((($781)) + -48|0);
             __THREW__ = 0;
             invoke_vii(396,($24|0),($786|0));
             $787 = __THREW__; __THREW__ = 0;
             $788 = $787&1;
             if ($788) {
              $821 = ___cxa_find_matching_catch()|0;
              $822 = tempRet0;
              $$4$i344 = $822;$$45$i343 = $821;
             } else {
              __THREW__ = 0;
              $789 = (invoke_iiii(391,($24|0),0,(18254|0))|0);
              $790 = __THREW__; __THREW__ = 0;
              $791 = $790&1;
              if ($791) {
               $823 = ___cxa_find_matching_catch()|0;
               $824 = tempRet0;
               $$3$i342 = $824;$$34$i341 = $823;
              } else {
               ;HEAP32[$23>>2]=HEAP32[$789>>2]|0;HEAP32[$23+4>>2]=HEAP32[$789+4>>2]|0;HEAP32[$23+8>>2]=HEAP32[$789+8>>2]|0;
               HEAP32[$789>>2] = 0;
               $792 = ((($789)) + 4|0);
               HEAP32[$792>>2] = 0;
               $793 = ((($789)) + 8|0);
               HEAP32[$793>>2] = 0;
               __THREW__ = 0;
               $794 = (invoke_iii(392,($23|0),(18236|0))|0);
               $795 = __THREW__; __THREW__ = 0;
               $796 = $795&1;
               if ($796) {
                $825 = ___cxa_find_matching_catch()|0;
                $826 = tempRet0;
                $$2$i340 = $826;$$23$i339 = $825;
               } else {
                ;HEAP32[$22>>2]=HEAP32[$794>>2]|0;HEAP32[$22+4>>2]=HEAP32[$794+4>>2]|0;HEAP32[$22+8>>2]=HEAP32[$794+8>>2]|0;
                HEAP32[$794>>2] = 0;
                $797 = ((($794)) + 4|0);
                HEAP32[$797>>2] = 0;
                $798 = ((($794)) + 8|0);
                HEAP32[$798>>2] = 0;
                $799 = HEAP8[$expr$i318>>0]|0;
                $800 = $799 & 1;
                $801 = ($800<<24>>24)==(0);
                $802 = ((($expr$i318)) + 8|0);
                $803 = HEAP32[$802>>2]|0;
                $804 = ((($expr$i318)) + 1|0);
                $805 = $801 ? $804 : $803;
                $806 = ((($expr$i318)) + 4|0);
                $807 = HEAP32[$806>>2]|0;
                $808 = $799&255;
                $809 = $808 >>> 1;
                $810 = $801 ? $809 : $807;
                __THREW__ = 0;
                $811 = (invoke_iiii(387,($22|0),($805|0),($810|0))|0);
                $812 = __THREW__; __THREW__ = 0;
                $813 = $812&1;
                do {
                 if ($813) {
                  $827 = ___cxa_find_matching_catch()|0;
                  $828 = tempRet0;
                  $$1$i338 = $828;$$12$i337 = $827;
                 } else {
                  ;HEAP32[$21>>2]=HEAP32[$811>>2]|0;HEAP32[$21+4>>2]=HEAP32[$811+4>>2]|0;HEAP32[$21+8>>2]=HEAP32[$811+8>>2]|0;
                  HEAP32[$811>>2] = 0;
                  $814 = ((($811)) + 4|0);
                  HEAP32[$814>>2] = 0;
                  $815 = ((($811)) + 8|0);
                  HEAP32[$815>>2] = 0;
                  __THREW__ = 0;
                  $816 = (invoke_iii(392,($21|0),(16956|0))|0);
                  $817 = __THREW__; __THREW__ = 0;
                  $818 = $817&1;
                  if ($818) {
                   $829 = ___cxa_find_matching_catch()|0;
                   $830 = tempRet0;
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($21);
                   $$1$i338 = $830;$$12$i337 = $829;
                   break;
                  } else {
                   ;HEAP32[$20>>2]=HEAP32[$816>>2]|0;HEAP32[$20+4>>2]=HEAP32[$816+4>>2]|0;HEAP32[$20+8>>2]=HEAP32[$816+8>>2]|0;
                   HEAP32[$816>>2] = 0;
                   $819 = ((($816)) + 4|0);
                   HEAP32[$819>>2] = 0;
                   $820 = ((($816)) + 8|0);
                   HEAP32[$820>>2] = 0;
                   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($19,$20);
                   __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($786,$19);
                   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($19);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($20);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($21);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($22);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($23);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($24);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($expr$i318);
                   $$06$i345 = $770;
                   break L296;
                  }
                 }
                } while(0);
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($22);
                $$2$i340 = $$1$i338;$$23$i339 = $$12$i337;
               }
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($23);
               $$3$i342 = $$2$i340;$$34$i341 = $$23$i339;
              }
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($24);
              $$4$i344 = $$3$i342;$$45$i343 = $$34$i341;
             }
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($expr$i318);
             ___resumeException($$45$i343|0);
             // unreachable;
            }
           }
          }
         } else {
          $$06$i345 = $first;
         }
        } else {
         $$06$i345 = $first;
        }
       } else {
        $$06$i345 = $first;
       }
      } while(0);
      $$0 = $$06$i345;
      break L1;
      break;
     }
     case 101:  {
      $831 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($85,17096,1);
      __THREW__ = 0;
      $832 = (invoke_iiiii(409,($831|0),($last|0),($85|0),($db|0))|0);
      $833 = __THREW__; __THREW__ = 0;
      $834 = $833&1;
      if ($834) {
       $836 = ___cxa_find_matching_catch()|0;
       $837 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($85);
       $$23 = $836;$$2332 = $837;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($85);
       $835 = ($832|0)==($831|0);
       $first$39 = $835 ? $first : $832;
       $$0 = $first$39;
       break L1;
      }
      break;
     }
     case 108:  {
      $838 = ((($t$0)) + 2|0);
      $839 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($838,$last,$db)|0);
      $840 = ($839|0)==($838|0);
      if ($840) {
       $$0 = $first;
       break L1;
      }
      $841 = HEAP32[$db>>2]|0;
      $842 = ((($db)) + 4|0);
      $843 = HEAP32[$842>>2]|0;
      $844 = ($841|0)==($843|0);
      if ($844) {
       $$0 = $first;
       break L1;
      }
      $845 = ((($843)) + -24|0);
      if ($parsed_gs$0$off0) {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($88,17239,2);
      } else {
       HEAP32[$88>>2] = 0;
       $846 = ((($88)) + 4|0);
       HEAP32[$846>>2] = 0;
       $847 = ((($88)) + 8|0);
       HEAP32[$847>>2] = 0;
      }
      __THREW__ = 0;
      $848 = (invoke_iii(392,($88|0),(18268|0))|0);
      $849 = __THREW__; __THREW__ = 0;
      $850 = $849&1;
      if ($850) {
       $920 = ___cxa_find_matching_catch()|0;
       $921 = tempRet0;
       $$5 = $920;$$514 = $921;
      } else {
       ;HEAP32[$87>>2]=HEAP32[$848>>2]|0;HEAP32[$87+4>>2]=HEAP32[$848+4>>2]|0;HEAP32[$87+8>>2]=HEAP32[$848+8>>2]|0;
       HEAP32[$848>>2] = 0;
       $851 = ((($848)) + 4|0);
       HEAP32[$851>>2] = 0;
       $852 = ((($848)) + 8|0);
       HEAP32[$852>>2] = 0;
       $853 = HEAP32[$842>>2]|0;
       $854 = ((($853)) + -24|0);
       __THREW__ = 0;
       invoke_vii(396,($89|0),($854|0));
       $855 = __THREW__; __THREW__ = 0;
       $856 = $855&1;
       do {
        if ($856) {
         $922 = ___cxa_find_matching_catch()|0;
         $923 = tempRet0;
         $$4 = $922;$$413 = $923;
        } else {
         $857 = HEAP8[$89>>0]|0;
         $858 = $857 & 1;
         $859 = ($858<<24>>24)==(0);
         $860 = ((($89)) + 8|0);
         $861 = HEAP32[$860>>2]|0;
         $862 = ((($89)) + 1|0);
         $863 = $859 ? $862 : $861;
         $864 = ((($89)) + 4|0);
         $865 = HEAP32[$864>>2]|0;
         $866 = $857&255;
         $867 = $866 >>> 1;
         $868 = $859 ? $867 : $865;
         __THREW__ = 0;
         $869 = (invoke_iiii(387,($87|0),($863|0),($868|0))|0);
         $870 = __THREW__; __THREW__ = 0;
         $871 = $870&1;
         if ($871) {
          $924 = ___cxa_find_matching_catch()|0;
          $925 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($89);
          $$4 = $924;$$413 = $925;
          break;
         }
         ;HEAP32[$86>>2]=HEAP32[$869>>2]|0;HEAP32[$86+4>>2]=HEAP32[$869+4>>2]|0;HEAP32[$86+8>>2]=HEAP32[$869+8>>2]|0;
         HEAP32[$869>>2] = 0;
         $872 = ((($869)) + 4|0);
         HEAP32[$872>>2] = 0;
         $873 = ((($869)) + 8|0);
         HEAP32[$873>>2] = 0;
         $874 = HEAP8[$845>>0]|0;
         $875 = $874 & 1;
         $876 = ($875<<24>>24)==(0);
         do {
          if ($876) {
           $877 = ((($845)) + 1|0);
           HEAP8[$877>>0] = 0;
           HEAP8[$845>>0] = 0;
          } else {
           $878 = ((($843)) + -16|0);
           $879 = HEAP32[$878>>2]|0;
           HEAP8[$879>>0] = 0;
           $880 = ((($843)) + -20|0);
           HEAP32[$880>>2] = 0;
           $$pre$i$i$i87 = HEAP8[$845>>0]|0;
           $881 = $$pre$i$i$i87 & 1;
           $882 = ($881<<24>>24)==(0);
           if ($882) {
            $887 = $$pre$i$i$i87;$896 = 10;
           } else {
            $883 = HEAP32[$845>>2]|0;
            $884 = $883 & -2;
            $phitmp$i$i$i$i$i$i89 = (($884) + -1)|0;
            $885 = $883&255;
            $887 = $885;$896 = $phitmp$i$i$i$i$i$i89;
           }
           $886 = $887 & 1;
           $888 = ($886<<24>>24)==(0);
           if ($888) {
            $889 = $887&255;
            $890 = $889 >>> 1;
            $891 = ($887&255)<(22);
            if ($891) {
             $2316 = 1;$895 = 10;$915 = $890;
            } else {
             $892 = (($890) + 16)|0;
             $893 = $892 & 240;
             $phitmp$i2$i$i$i$i$i92 = (($893) + -1)|0;
             $2316 = 1;$895 = $phitmp$i2$i$i$i$i$i92;$915 = $890;
            }
           } else {
            $2316 = 0;$895 = 10;$915 = 0;
           }
           $894 = ($895|0)==($896|0);
           if (!($894)) {
            $897 = ($895|0)==(10);
            if ($897) {
             $902 = ((($845)) + 1|0);
             $903 = HEAP32[$878>>2]|0;
             if ($2316) {
              $904 = $887&255;
              $905 = $904 >>> 1;
              $906 = (($905) + 1)|0;
              _memcpy(($902|0),($903|0),($906|0))|0;
              _free($903);
             } else {
              $911 = HEAP8[$903>>0]|0;
              HEAP8[$902>>0] = $911;
              _free($903);
             }
             $916 = $915 << 1;
             $917 = $916&255;
             HEAP8[$845>>0] = $917;
             break;
            }
            $898 = ($895>>>0)<=($896>>>0);
            $899 = (($895) + 1)|0;
            $900 = (_malloc($899)|0);
            $901 = ($900|0)==(0|0);
            $or$cond$i$i$i$i$i94 = $898 & $901;
            if (!($or$cond$i$i$i$i$i94)) {
             if ($2316) {
              $907 = ((($845)) + 1|0);
              $908 = $887&255;
              $909 = $908 >>> 1;
              $910 = (($909) + 1)|0;
              _memcpy(($900|0),($907|0),($910|0))|0;
             } else {
              $912 = HEAP32[$878>>2]|0;
              $913 = HEAP8[$912>>0]|0;
              HEAP8[$900>>0] = $913;
              _free($912);
             }
             $914 = $899 | 1;
             HEAP32[$845>>2] = $914;
             HEAP32[$880>>2] = $915;
             HEAP32[$878>>2] = $900;
            }
           }
          }
         } while(0);
         ;HEAP32[$845>>2]=HEAP32[$86>>2]|0;HEAP32[$845+4>>2]=HEAP32[$86+4>>2]|0;HEAP32[$845+8>>2]=HEAP32[$86+8>>2]|0;
         HEAP32[$86>>2] = 0;
         $918 = ((($86)) + 4|0);
         HEAP32[$918>>2] = 0;
         $919 = ((($86)) + 8|0);
         HEAP32[$919>>2] = 0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($86);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($89);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($87);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($88);
         $$0 = $839;
         break L1;
        }
       } while(0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($87);
       $$5 = $$4;$$514 = $$413;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($88);
      $$23 = $$5;$$2332 = $$514;
      break L7;
      break;
     }
     case 110:  {
      $926 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $$0 = $926;
      break L1;
      break;
     }
     case 115:  {
      $927 = ($144|0)>(2);
      L374: do {
       if ($927) {
        $928 = HEAP8[$first>>0]|0;
        $929 = ($928<<24>>24)==(100);
        if ($929) {
         $930 = ((($first)) + 1|0);
         $931 = HEAP8[$930>>0]|0;
         $932 = ($931<<24>>24)==(115);
         if ($932) {
          $933 = ((($first)) + 2|0);
          $934 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($933,$last,$db)|0);
          $935 = ($934|0)==($933|0);
          if ($935) {
           $$02$i317 = $first;
          } else {
           $936 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($934,$last,$db)|0);
           $937 = ($936|0)==($934|0);
           if ($937) {
            $$02$i317 = $first;
           } else {
            $938 = ((($db)) + 4|0);
            $939 = HEAP32[$938>>2]|0;
            $940 = HEAP32[$db>>2]|0;
            $941 = $939;
            $942 = $940;
            $943 = (($941) - ($942))|0;
            $944 = (($943|0) / 24)&-1;
            $945 = ($944>>>0)<(2);
            if ($945) {
             $$02$i317 = $first;
            } else {
             $946 = ((($939)) + -24|0);
             __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($expr$i311,$946);
             $947 = HEAP32[$938>>2]|0;
             $948 = ((($947)) + -24|0);
             $950 = $947;
             while(1) {
              $949 = ((($950)) + -24|0);
              HEAP32[$938>>2] = $949;
              __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($949);
              $$pre$i$i312 = HEAP32[$938>>2]|0;
              $951 = ($$pre$i$i312|0)==($948|0);
              if ($951) {
               break;
              } else {
               $950 = $$pre$i$i312;
              }
             }
             __THREW__ = 0;
             invoke_viii(407,($25|0),(18276|0),($expr$i311|0));
             $952 = __THREW__; __THREW__ = 0;
             $953 = $952&1;
             do {
              if ($953) {
               $969 = ___cxa_find_matching_catch()|0;
               $970 = tempRet0;
               $$0$i316 = $970;$$01$i315 = $969;
              } else {
               $954 = ((($947)) + -48|0);
               $955 = HEAP8[$25>>0]|0;
               $956 = $955 & 1;
               $957 = ($956<<24>>24)==(0);
               $958 = ((($25)) + 8|0);
               $959 = HEAP32[$958>>2]|0;
               $960 = ((($25)) + 1|0);
               $961 = $957 ? $960 : $959;
               $962 = ((($25)) + 4|0);
               $963 = HEAP32[$962>>2]|0;
               $964 = $955&255;
               $965 = $964 >>> 1;
               $966 = $957 ? $965 : $963;
               __THREW__ = 0;
               (invoke_iiii(387,($954|0),($961|0),($966|0))|0);
               $967 = __THREW__; __THREW__ = 0;
               $968 = $967&1;
               if ($968) {
                $971 = ___cxa_find_matching_catch()|0;
                $972 = tempRet0;
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($25);
                $$0$i316 = $972;$$01$i315 = $971;
                break;
               } else {
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($25);
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($expr$i311);
                $$02$i317 = $936;
                break L374;
               }
              }
             } while(0);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($expr$i311);
             ___resumeException($$01$i315|0);
             // unreachable;
            }
           }
          }
         } else {
          $$02$i317 = $first;
         }
        } else {
         $$02$i317 = $first;
        }
       } else {
        $$02$i317 = $first;
       }
      } while(0);
      $$0 = $$02$i317;
      break L1;
      break;
     }
     case 116:  {
      $973 = ($144|0)>(2);
      L393: do {
       if ($973) {
        $974 = HEAP8[$first>>0]|0;
        $975 = ($974<<24>>24)==(100);
        if ($975) {
         $976 = ((($first)) + 1|0);
         $977 = HEAP8[$976>>0]|0;
         $978 = ($977<<24>>24)==(116);
         if ($978) {
          $979 = ((($first)) + 2|0);
          $980 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($979,$last,$db)|0);
          $981 = ($980|0)==($979|0);
          if ($981) {
           $$02$i310 = $first;
          } else {
           $982 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($980,$last,$db)|0);
           $983 = ($982|0)==($980|0);
           if ($983) {
            $$02$i310 = $first;
           } else {
            $984 = ((($db)) + 4|0);
            $985 = HEAP32[$984>>2]|0;
            $986 = HEAP32[$db>>2]|0;
            $987 = $985;
            $988 = $986;
            $989 = (($987) - ($988))|0;
            $990 = (($989|0) / 24)&-1;
            $991 = ($990>>>0)<(2);
            if ($991) {
             $$02$i310 = $first;
            } else {
             $992 = ((($985)) + -24|0);
             __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($name$i,$992);
             $993 = HEAP32[$984>>2]|0;
             $994 = ((($993)) + -24|0);
             $996 = $993;
             while(1) {
              $995 = ((($996)) + -24|0);
              HEAP32[$984>>2] = $995;
              __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($995);
              $$pre$i$i305 = HEAP32[$984>>2]|0;
              $997 = ($$pre$i$i305|0)==($994|0);
              if ($997) {
               break;
              } else {
               $996 = $$pre$i$i305;
              }
             }
             __THREW__ = 0;
             invoke_viii(407,($26|0),(23953|0),($name$i|0));
             $998 = __THREW__; __THREW__ = 0;
             $999 = $998&1;
             do {
              if ($999) {
               $1015 = ___cxa_find_matching_catch()|0;
               $1016 = tempRet0;
               $$0$i309 = $1016;$$01$i308 = $1015;
              } else {
               $1000 = ((($993)) + -48|0);
               $1001 = HEAP8[$26>>0]|0;
               $1002 = $1001 & 1;
               $1003 = ($1002<<24>>24)==(0);
               $1004 = ((($26)) + 8|0);
               $1005 = HEAP32[$1004>>2]|0;
               $1006 = ((($26)) + 1|0);
               $1007 = $1003 ? $1006 : $1005;
               $1008 = ((($26)) + 4|0);
               $1009 = HEAP32[$1008>>2]|0;
               $1010 = $1001&255;
               $1011 = $1010 >>> 1;
               $1012 = $1003 ? $1011 : $1009;
               __THREW__ = 0;
               (invoke_iiii(387,($1000|0),($1007|0),($1012|0))|0);
               $1013 = __THREW__; __THREW__ = 0;
               $1014 = $1013&1;
               if ($1014) {
                $1017 = ___cxa_find_matching_catch()|0;
                $1018 = tempRet0;
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($26);
                $$0$i309 = $1018;$$01$i308 = $1017;
                break;
               } else {
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($26);
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name$i);
                $$02$i310 = $982;
                break L393;
               }
              }
             } while(0);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name$i);
             ___resumeException($$01$i308|0);
             // unreachable;
            }
           }
          }
         } else {
          $$02$i310 = $first;
         }
        } else {
         $$02$i310 = $first;
        }
       } else {
        $$02$i310 = $first;
       }
      } while(0);
      $$0 = $$02$i310;
      break L1;
      break;
     }
     case 118:  {
      $1019 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($90,18279,1);
      __THREW__ = 0;
      $1020 = (invoke_iiiii(408,($1019|0),($last|0),($90|0),($db|0))|0);
      $1021 = __THREW__; __THREW__ = 0;
      $1022 = $1021&1;
      if ($1022) {
       $1024 = ___cxa_find_matching_catch()|0;
       $1025 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($90);
       $$23 = $1024;$$2332 = $1025;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($90);
       $1023 = ($1020|0)==($1019|0);
       $first$40 = $1023 ? $first : $1020;
       $$0 = $first$40;
       break L1;
      }
      break;
     }
     case 86:  {
      $1026 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($91,18281,2);
      __THREW__ = 0;
      $1027 = (invoke_iiiii(408,($1026|0),($last|0),($91|0),($db|0))|0);
      $1028 = __THREW__; __THREW__ = 0;
      $1029 = $1028&1;
      if ($1029) {
       $1031 = ___cxa_find_matching_catch()|0;
       $1032 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($91);
       $$23 = $1031;$$2332 = $1032;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($91);
       $1030 = ($1027|0)==($1026|0);
       $first$41 = $1030 ? $first : $1027;
       $$0 = $first$41;
       break L1;
      }
      break;
     }
     default: {
      $$0 = $first;
      break L1;
     }
     }
     break;
    }
    case 101:  {
     $1033 = ((($t$0)) + 1|0);
     $1034 = HEAP8[$1033>>0]|0;
     $1035 = $1034 << 24 >> 24;
     switch ($1035|0) {
     case 111:  {
      $1036 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($92,18284,1);
      __THREW__ = 0;
      $1037 = (invoke_iiiii(408,($1036|0),($last|0),($92|0),($db|0))|0);
      $1038 = __THREW__; __THREW__ = 0;
      $1039 = $1038&1;
      if ($1039) {
       $1041 = ___cxa_find_matching_catch()|0;
       $1042 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($92);
       $$23 = $1041;$$2332 = $1042;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($92);
       $1040 = ($1037|0)==($1036|0);
       $first$42 = $1040 ? $first : $1037;
       $$0 = $first$42;
       break L1;
      }
      break;
     }
     case 79:  {
      $1043 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($93,18286,2);
      __THREW__ = 0;
      $1044 = (invoke_iiiii(408,($1043|0),($last|0),($93|0),($db|0))|0);
      $1045 = __THREW__; __THREW__ = 0;
      $1046 = $1045&1;
      if ($1046) {
       $1048 = ___cxa_find_matching_catch()|0;
       $1049 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($93);
       $$23 = $1048;$$2332 = $1049;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($93);
       $1047 = ($1044|0)==($1043|0);
       $first$43 = $1047 ? $first : $1044;
       $$0 = $first$43;
       break L1;
      }
      break;
     }
     case 113:  {
      $1050 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($94,18289,2);
      __THREW__ = 0;
      $1051 = (invoke_iiiii(408,($1050|0),($last|0),($94|0),($db|0))|0);
      $1052 = __THREW__; __THREW__ = 0;
      $1053 = $1052&1;
      if ($1053) {
       $1055 = ___cxa_find_matching_catch()|0;
       $1056 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($94);
       $$23 = $1055;$$2332 = $1056;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($94);
       $1054 = ($1051|0)==($1050|0);
       $first$44 = $1054 ? $first : $1051;
       $$0 = $first$44;
       break L1;
      }
      break;
     }
     default: {
      $$0 = $first;
      break L1;
     }
     }
     break;
    }
    case 103:  {
     $1057 = ((($t$0)) + 1|0);
     $1058 = HEAP8[$1057>>0]|0;
     $1059 = $1058 << 24 >> 24;
     switch ($1059|0) {
     case 101:  {
      $1060 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($95,18292,2);
      __THREW__ = 0;
      $1061 = (invoke_iiiii(408,($1060|0),($last|0),($95|0),($db|0))|0);
      $1062 = __THREW__; __THREW__ = 0;
      $1063 = $1062&1;
      if ($1063) {
       $1065 = ___cxa_find_matching_catch()|0;
       $1066 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($95);
       $$23 = $1065;$$2332 = $1066;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($95);
       $1064 = ($1061|0)==($1060|0);
       $first$45 = $1064 ? $first : $1061;
       $$0 = $first$45;
       break L1;
      }
      break;
     }
     case 116:  {
      $1067 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($96,17115,1);
      __THREW__ = 0;
      $1068 = (invoke_iiiii(408,($1067|0),($last|0),($96|0),($db|0))|0);
      $1069 = __THREW__; __THREW__ = 0;
      $1070 = $1069&1;
      if ($1070) {
       $1072 = ___cxa_find_matching_catch()|0;
       $1073 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($96);
       $$23 = $1072;$$2332 = $1073;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($96);
       $1071 = ($1068|0)==($1067|0);
       $first$46 = $1071 ? $first : $1068;
       $$0 = $first$46;
       break L1;
      }
      break;
     }
     default: {
      $$0 = $first;
      break L1;
     }
     }
     break;
    }
    case 105:  {
     $1074 = ((($t$0)) + 1|0);
     $1075 = HEAP8[$1074>>0]|0;
     $1076 = ($1075<<24>>24)==(120);
     if (!($1076)) {
      $$0 = $first;
      break L1;
     }
     $1077 = ((($first)) + 2|0);
     $1078 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1077,$last,$db)|0);
     $1079 = ($1078|0)==($1077|0);
     if ($1079) {
      $$0 = $first;
      break L1;
     }
     $1080 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1078,$last,$db)|0);
     $1081 = ($1080|0)==($1078|0);
     $1082 = ((($db)) + 4|0);
     $1083 = HEAP32[$1082>>2]|0;
     if ($1081) {
      $1140 = ((($1083)) + -24|0);
      $1142 = $1083;
      while(1) {
       $1141 = ((($1142)) + -24|0);
       HEAP32[$1082>>2] = $1141;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1141);
       $$pre$i116 = HEAP32[$1082>>2]|0;
       $1143 = ($$pre$i116|0)==($1140|0);
       if ($1143) {
        $$0 = $first;
        break L1;
       } else {
        $1142 = $$pre$i116;
       }
      }
     }
     $1084 = HEAP32[$db>>2]|0;
     $1085 = $1083;
     $1086 = $1084;
     $1087 = (($1085) - ($1086))|0;
     $1088 = (($1087|0) / 24)&-1;
     $1089 = ($1088>>>0)<(2);
     if ($1089) {
      $$0 = $first;
      break L1;
     }
     $1090 = ((($1083)) + -24|0);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($op2,$1090);
     $1091 = HEAP32[$1082>>2]|0;
     $1092 = ((($1091)) + -24|0);
     $1094 = $1091;
     while(1) {
      $1093 = ((($1094)) + -24|0);
      HEAP32[$1082>>2] = $1093;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1093);
      $$pre$i = HEAP32[$1082>>2]|0;
      $1095 = ($$pre$i|0)==($1092|0);
      if ($1095) {
       break;
      } else {
       $1094 = $$pre$i;
      }
     }
     $1096 = ((($1091)) + -48|0);
     __THREW__ = 0;
     invoke_vii(396,($op1|0),($1096|0));
     $1097 = __THREW__; __THREW__ = 0;
     $1098 = $1097&1;
     if ($1098) {
      $1130 = ___cxa_find_matching_catch()|0;
      $1131 = tempRet0;
      $$10 = $1130;$$1019 = $1131;
     } else {
      $1099 = HEAP32[$1082>>2]|0;
      $1100 = ((($1099)) + -24|0);
      __THREW__ = 0;
      invoke_viii(407,($101|0),(17051|0),($op1|0));
      $1101 = __THREW__; __THREW__ = 0;
      $1102 = $1101&1;
      if ($1102) {
       $1132 = ___cxa_find_matching_catch()|0;
       $1133 = tempRet0;
       $$9 = $1132;$$918 = $1133;
      } else {
       __THREW__ = 0;
       $1103 = (invoke_iii(392,($101|0),(18295|0))|0);
       $1104 = __THREW__; __THREW__ = 0;
       $1105 = $1104&1;
       if ($1105) {
        $1134 = ___cxa_find_matching_catch()|0;
        $1135 = tempRet0;
        $$8 = $1134;$$817 = $1135;
       } else {
        ;HEAP32[$100>>2]=HEAP32[$1103>>2]|0;HEAP32[$100+4>>2]=HEAP32[$1103+4>>2]|0;HEAP32[$100+8>>2]=HEAP32[$1103+8>>2]|0;
        HEAP32[$1103>>2] = 0;
        $1106 = ((($1103)) + 4|0);
        HEAP32[$1106>>2] = 0;
        $1107 = ((($1103)) + 8|0);
        HEAP32[$1107>>2] = 0;
        $1108 = HEAP8[$op2>>0]|0;
        $1109 = $1108 & 1;
        $1110 = ($1109<<24>>24)==(0);
        $1111 = ((($op2)) + 8|0);
        $1112 = HEAP32[$1111>>2]|0;
        $1113 = ((($op2)) + 1|0);
        $1114 = $1110 ? $1113 : $1112;
        $1115 = ((($op2)) + 4|0);
        $1116 = HEAP32[$1115>>2]|0;
        $1117 = $1108&255;
        $1118 = $1117 >>> 1;
        $1119 = $1110 ? $1118 : $1116;
        __THREW__ = 0;
        $1120 = (invoke_iiii(387,($100|0),($1114|0),($1119|0))|0);
        $1121 = __THREW__; __THREW__ = 0;
        $1122 = $1121&1;
        do {
         if ($1122) {
          $1136 = ___cxa_find_matching_catch()|0;
          $1137 = tempRet0;
          $$7 = $1136;$$716 = $1137;
         } else {
          ;HEAP32[$99>>2]=HEAP32[$1120>>2]|0;HEAP32[$99+4>>2]=HEAP32[$1120+4>>2]|0;HEAP32[$99+8>>2]=HEAP32[$1120+8>>2]|0;
          HEAP32[$1120>>2] = 0;
          $1123 = ((($1120)) + 4|0);
          HEAP32[$1123>>2] = 0;
          $1124 = ((($1120)) + 8|0);
          HEAP32[$1124>>2] = 0;
          __THREW__ = 0;
          $1125 = (invoke_iii(392,($99|0),(17040|0))|0);
          $1126 = __THREW__; __THREW__ = 0;
          $1127 = $1126&1;
          if ($1127) {
           $1138 = ___cxa_find_matching_catch()|0;
           $1139 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($99);
           $$7 = $1138;$$716 = $1139;
           break;
          } else {
           ;HEAP32[$98>>2]=HEAP32[$1125>>2]|0;HEAP32[$98+4>>2]=HEAP32[$1125+4>>2]|0;HEAP32[$98+8>>2]=HEAP32[$1125+8>>2]|0;
           HEAP32[$1125>>2] = 0;
           $1128 = ((($1125)) + 4|0);
           HEAP32[$1128>>2] = 0;
           $1129 = ((($1125)) + 8|0);
           HEAP32[$1129>>2] = 0;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($97,$98);
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($1100,$97);
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($97);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($98);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($99);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($100);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($101);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op1);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op2);
           $$0 = $1080;
           break L1;
          }
         }
        } while(0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($100);
        $$8 = $$7;$$817 = $$716;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($101);
       $$9 = $$8;$$918 = $$817;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op1);
      $$10 = $$9;$$1019 = $$918;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op2);
     $$23 = $$10;$$2332 = $$1019;
     break;
    }
    case 108:  {
     $1144 = ((($t$0)) + 1|0);
     $1145 = HEAP8[$1144>>0]|0;
     $1146 = $1145 << 24 >> 24;
     switch ($1146|0) {
     case 101:  {
      $1147 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($102,18298,2);
      __THREW__ = 0;
      $1148 = (invoke_iiiii(408,($1147|0),($last|0),($102|0),($db|0))|0);
      $1149 = __THREW__; __THREW__ = 0;
      $1150 = $1149&1;
      if ($1150) {
       $1152 = ___cxa_find_matching_catch()|0;
       $1153 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($102);
       $$23 = $1152;$$2332 = $1153;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($102);
       $1151 = ($1148|0)==($1147|0);
       $first$47 = $1151 ? $first : $1148;
       $$0 = $first$47;
       break L1;
      }
      break;
     }
     case 115:  {
      $1154 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($103,18301,2);
      __THREW__ = 0;
      $1155 = (invoke_iiiii(408,($1154|0),($last|0),($103|0),($db|0))|0);
      $1156 = __THREW__; __THREW__ = 0;
      $1157 = $1156&1;
      if ($1157) {
       $1159 = ___cxa_find_matching_catch()|0;
       $1160 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($103);
       $$23 = $1159;$$2332 = $1160;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($103);
       $1158 = ($1155|0)==($1154|0);
       $first$48 = $1158 ? $first : $1155;
       $$0 = $first$48;
       break L1;
      }
      break;
     }
     case 83:  {
      $1161 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($104,18304,3);
      __THREW__ = 0;
      $1162 = (invoke_iiiii(408,($1161|0),($last|0),($104|0),($db|0))|0);
      $1163 = __THREW__; __THREW__ = 0;
      $1164 = $1163&1;
      if ($1164) {
       $1166 = ___cxa_find_matching_catch()|0;
       $1167 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($104);
       $$23 = $1166;$$2332 = $1167;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($104);
       $1165 = ($1162|0)==($1161|0);
       $first$49 = $1165 ? $first : $1162;
       $$0 = $first$49;
       break L1;
      }
      break;
     }
     case 116:  {
      $1168 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($105,17113,1);
      __THREW__ = 0;
      $1169 = (invoke_iiiii(408,($1168|0),($last|0),($105|0),($db|0))|0);
      $1170 = __THREW__; __THREW__ = 0;
      $1171 = $1170&1;
      if ($1171) {
       $1173 = ___cxa_find_matching_catch()|0;
       $1174 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($105);
       $$23 = $1173;$$2332 = $1174;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($105);
       $1172 = ($1169|0)==($1168|0);
       $first$50 = $1172 ? $first : $1169;
       $$0 = $first$50;
       break L1;
      }
      break;
     }
     default: {
      $$0 = $first;
      break L1;
     }
     }
     break;
    }
    case 109:  {
     $1175 = ((($t$0)) + 1|0);
     $1176 = HEAP8[$1175>>0]|0;
     $1177 = $1176 << 24 >> 24;
     switch ($1177|0) {
     case 105:  {
      $1178 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($106,18308,1);
      __THREW__ = 0;
      $1179 = (invoke_iiiii(408,($1178|0),($last|0),($106|0),($db|0))|0);
      $1180 = __THREW__; __THREW__ = 0;
      $1181 = $1180&1;
      if ($1181) {
       $1183 = ___cxa_find_matching_catch()|0;
       $1184 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($106);
       $$23 = $1183;$$2332 = $1184;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($106);
       $1182 = ($1179|0)==($1178|0);
       $first$51 = $1182 ? $first : $1179;
       $$0 = $first$51;
       break L1;
      }
      break;
     }
     case 73:  {
      $1185 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($107,18310,2);
      __THREW__ = 0;
      $1186 = (invoke_iiiii(408,($1185|0),($last|0),($107|0),($db|0))|0);
      $1187 = __THREW__; __THREW__ = 0;
      $1188 = $1187&1;
      if ($1188) {
       $1190 = ___cxa_find_matching_catch()|0;
       $1191 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($107);
       $$23 = $1190;$$2332 = $1191;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($107);
       $1189 = ($1186|0)==($1185|0);
       $first$52 = $1189 ? $first : $1186;
       $$0 = $first$52;
       break L1;
      }
      break;
     }
     case 108:  {
      $1192 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($108,17096,1);
      __THREW__ = 0;
      $1193 = (invoke_iiiii(408,($1192|0),($last|0),($108|0),($db|0))|0);
      $1194 = __THREW__; __THREW__ = 0;
      $1195 = $1194&1;
      if ($1195) {
       $1197 = ___cxa_find_matching_catch()|0;
       $1198 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($108);
       $$23 = $1197;$$2332 = $1198;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($108);
       $1196 = ($1193|0)==($1192|0);
       $first$53 = $1196 ? $first : $1193;
       $$0 = $first$53;
       break L1;
      }
      break;
     }
     case 76:  {
      $1199 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($109,18313,2);
      __THREW__ = 0;
      $1200 = (invoke_iiiii(408,($1199|0),($last|0),($109|0),($db|0))|0);
      $1201 = __THREW__; __THREW__ = 0;
      $1202 = $1201&1;
      if ($1202) {
       $1204 = ___cxa_find_matching_catch()|0;
       $1205 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($109);
       $$23 = $1204;$$2332 = $1205;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($109);
       $1203 = ($1200|0)==($1199|0);
       $first$54 = $1203 ? $first : $1200;
       $$0 = $first$54;
       break L1;
      }
      break;
     }
     case 109:  {
      $1206 = ((($first)) + 2|0);
      $1207 = ($1206|0)==($last|0);
      if (!($1207)) {
       $1208 = HEAP8[$1206>>0]|0;
       $1209 = ($1208<<24>>24)==(95);
       if ($1209) {
        $1210 = ((($first)) + 3|0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($110,18316,2);
        __THREW__ = 0;
        $1211 = (invoke_iiiii(409,($1210|0),($last|0),($110|0),($db|0))|0);
        $1212 = __THREW__; __THREW__ = 0;
        $1213 = $1212&1;
        if ($1213) {
         $1215 = ___cxa_find_matching_catch()|0;
         $1216 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($110);
         $$23 = $1215;$$2332 = $1216;
         break L7;
        } else {
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($110);
         $1214 = ($1211|0)==($1210|0);
         $first$55 = $1214 ? $first : $1211;
         $$0 = $first$55;
         break L1;
        }
       }
      }
      $1217 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1206,$last,$db)|0);
      $1218 = ($1217|0)==($1206|0);
      if ($1218) {
       $$0 = $first;
       break L1;
      }
      $1219 = HEAP32[$db>>2]|0;
      $1220 = ((($db)) + 4|0);
      $1221 = HEAP32[$1220>>2]|0;
      $1222 = ($1219|0)==($1221|0);
      if ($1222) {
       $$0 = $first;
       break L1;
      }
      $1223 = ((($1221)) + -24|0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($114,$1223);
      __THREW__ = 0;
      $1224 = (invoke_iiii(391,($114|0),0,(17051|0))|0);
      $1225 = __THREW__; __THREW__ = 0;
      $1226 = $1225&1;
      do {
       if ($1226) {
        $1234 = ___cxa_find_matching_catch()|0;
        $1235 = tempRet0;
        $$12 = $1234;$$1221 = $1235;
       } else {
        ;HEAP32[$113>>2]=HEAP32[$1224>>2]|0;HEAP32[$113+4>>2]=HEAP32[$1224+4>>2]|0;HEAP32[$113+8>>2]=HEAP32[$1224+8>>2]|0;
        HEAP32[$1224>>2] = 0;
        $1227 = ((($1224)) + 4|0);
        HEAP32[$1227>>2] = 0;
        $1228 = ((($1224)) + 8|0);
        HEAP32[$1228>>2] = 0;
        __THREW__ = 0;
        $1229 = (invoke_iii(392,($113|0),(18319|0))|0);
        $1230 = __THREW__; __THREW__ = 0;
        $1231 = $1230&1;
        if ($1231) {
         $1236 = ___cxa_find_matching_catch()|0;
         $1237 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($113);
         $$12 = $1236;$$1221 = $1237;
         break;
        } else {
         ;HEAP32[$112>>2]=HEAP32[$1229>>2]|0;HEAP32[$112+4>>2]=HEAP32[$1229+4>>2]|0;HEAP32[$112+8>>2]=HEAP32[$1229+8>>2]|0;
         HEAP32[$1229>>2] = 0;
         $1232 = ((($1229)) + 4|0);
         HEAP32[$1232>>2] = 0;
         $1233 = ((($1229)) + 8|0);
         HEAP32[$1233>>2] = 0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($111,$112);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($1223,$111);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($111);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($112);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($113);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($114);
         $$0 = $1217;
         break L1;
        }
       }
      } while(0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($114);
      $$23 = $$12;$$2332 = $$1221;
      break L7;
      break;
     }
     default: {
      $$0 = $first;
      break L1;
     }
     }
     break;
    }
    case 110:  {
     $1238 = ((($t$0)) + 1|0);
     $1239 = HEAP8[$1238>>0]|0;
     $1240 = $1239 << 24 >> 24;
     switch ($1240|0) {
     case 119: case 97:  {
      L530: do {
       if ($146) {
        $1241 = HEAP8[$first>>0]|0;
        $1242 = ($1241<<24>>24)==(103);
        if ($1242) {
         $1243 = ((($first)) + 1|0);
         $1244 = HEAP8[$1243>>0]|0;
         $1245 = ($1244<<24>>24)==(115);
         $1246 = ((($first)) + 2|0);
         $$first$i = $1245 ? $1246 : $first;
         $$pre = HEAP8[$$first$i>>0]|0;
         $1248 = $$pre;$parsed_gs$0$off0$i = $1245;$t$0$i267 = $$first$i;
        } else {
         $1248 = $1241;$parsed_gs$0$off0$i = 0;$t$0$i267 = $first;
        }
        $1247 = ($1248<<24>>24)==(110);
        if ($1247) {
         $1249 = ((($t$0$i267)) + 1|0);
         $1250 = HEAP8[$1249>>0]|0;
         switch ($1250<<24>>24) {
         case 97: case 119:  {
          break;
         }
         default: {
          $$221$i = $first;
          label = 487;
          break L530;
         }
         }
         $1251 = ($1250<<24>>24)==(97);
         $1252 = ((($t$0$i267)) + 2|0);
         $1253 = ($1252|0)==($last|0);
         if ($1253) {
          $$9$i = $first;
         } else {
          $has_expr_list$0$off0$i = 0;$t$1$i = $1252;
          while(1) {
           $1254 = HEAP8[$t$1$i>>0]|0;
           $1255 = ($1254<<24>>24)==(95);
           if ($1255) {
            $has_expr_list$0$off0$i$lcssa = $has_expr_list$0$off0$i;$t$1$i$lcssa = $t$1$i;
            break;
           }
           $1256 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($t$1$i,$last,$db)|0);
           $1257 = ($1256|0)==($t$1$i|0);
           $1258 = ($1256|0)==($last|0);
           $or$cond$i = $1257 | $1258;
           if ($or$cond$i) {
            $$9$i = $first;
            break L530;
           } else {
            $has_expr_list$0$off0$i = 1;$t$1$i = $1256;
           }
          }
          $1259 = ((($t$1$i$lcssa)) + 1|0);
          $1260 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($1259,$last,$db)|0);
          $1261 = ($1260|0)==($1259|0);
          $1262 = ($1260|0)==($last|0);
          $or$cond22$i = $1261 | $1262;
          if ($or$cond22$i) {
           $$9$i = $first;
          } else {
           $1263 = $1260;
           $1264 = (($142) - ($1263))|0;
           $1265 = ($1264|0)>(2);
           $1266 = HEAP8[$1260>>0]|0;
           $1267 = ($1266<<24>>24)==(112);
           $or$cond = $1265 & $1267;
           L542: do {
            if ($or$cond) {
             $1268 = ((($1260)) + 1|0);
             $1269 = HEAP8[$1268>>0]|0;
             $1270 = ($1269<<24>>24)==(105);
             if (!($1270)) {
              $$9$i = $first;
              break L530;
             }
             $1271 = ((($1260)) + 2|0);
             $t$2$i = $1271;
             while(1) {
              $1272 = HEAP8[$t$2$i>>0]|0;
              $1273 = ($1272<<24>>24)==(69);
              if ($1273) {
               $has_init$0$off0$i513 = 1;$t$3$i512 = $t$2$i;
               break L542;
              }
              $1274 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($t$2$i,$last,$db)|0);
              $1275 = ($1274|0)==($t$2$i|0);
              $1276 = ($1274|0)==($last|0);
              $or$cond23$i = $1275 | $1276;
              if ($or$cond23$i) {
               $$9$i = $first;
               break L530;
              } else {
               $t$2$i = $1274;
              }
             }
            } else {
             $1277 = ($1266<<24>>24)==(69);
             if ($1277) {
              $has_init$0$off0$i513 = 0;$t$3$i512 = $1260;
             } else {
              $$9$i = $first;
              break L530;
             }
            }
           } while(0);
           HEAP32[$init_list$i>>2] = 0;
           $1278 = ((($init_list$i)) + 4|0);
           HEAP32[$1278>>2] = 0;
           $1279 = ((($init_list$i)) + 8|0);
           HEAP32[$1279>>2] = 0;
           if ($has_init$0$off0$i513) {
            $1280 = HEAP32[$db>>2]|0;
            $1281 = ((($db)) + 4|0);
            $1282 = HEAP32[$1281>>2]|0;
            $1283 = ($1280|0)==($1282|0);
            if ($1283) {
             label = 482;
            } else {
             $1284 = ((($1282)) + -24|0);
             __THREW__ = 0;
             invoke_vii(396,($27|0),($1284|0));
             $1285 = __THREW__; __THREW__ = 0;
             $1286 = $1285&1;
             if ($1286) {
              label = 430;
             } else {
              $1287 = HEAP8[$init_list$i>>0]|0;
              $1288 = $1287 & 1;
              $1289 = ($1288<<24>>24)==(0);
              L554: do {
               if ($1289) {
                $1290 = ((($init_list$i)) + 1|0);
                HEAP8[$1290>>0] = 0;
                HEAP8[$init_list$i>>0] = 0;
               } else {
                $1291 = ((($init_list$i)) + 8|0);
                $1292 = HEAP32[$1291>>2]|0;
                HEAP8[$1292>>0] = 0;
                $1293 = ((($init_list$i)) + 4|0);
                HEAP32[$1293>>2] = 0;
                $1294 = HEAP32[$init_list$i>>2]|0;
                $1295 = $1294 & -2;
                $phitmp$i$i$i$i$i$i$i273 = (($1295) + -1)|0;
                $1296 = $1294&255;
                $1297 = $1296 & 1;
                $1298 = ($1297<<24>>24)==(0);
                do {
                 if ($1298) {
                  $1299 = $1294 >>> 1;
                  $1300 = $1299 & 127;
                  $1301 = ($1296&255)<(22);
                  if ($1301) {
                   $1308 = ((($init_list$i)) + 1|0);
                   $1309 = $1294 >>> 1;
                   $1310 = $1309 & 127;
                   $1311 = (($1310) + 1)|0;
                   _memcpy(($1308|0),($1292|0),($1311|0))|0;
                   _free($1292);
                   $$ph518 = $1300;
                   break;
                  }
                  $1302 = (($1300) + 16)|0;
                  $1303 = $1302 & 240;
                  $phitmp$i2$i$i$i$i$i$i276 = (($1303) + -1)|0;
                  $1304 = ($phitmp$i2$i$i$i$i$i$i276|0)==($phitmp$i$i$i$i$i$i$i273|0);
                  if ($1304) {
                   break L554;
                  }
                  $1305 = ($phitmp$i2$i$i$i$i$i$i276>>>0)<=($phitmp$i$i$i$i$i$i$i273>>>0);
                  $1306 = (_malloc($1303)|0);
                  $1307 = ($1306|0)==(0|0);
                  $or$cond$i$i$i$i$i$i278 = $1305 & $1307;
                  if ($or$cond$i$i$i$i$i$i278) {
                   break L554;
                  }
                  $1313 = ((($init_list$i)) + 1|0);
                  $1314 = $1294 >>> 1;
                  $1315 = $1314 & 127;
                  $1316 = (($1315) + 1)|0;
                  _memcpy(($1306|0),($1313|0),($1316|0))|0;
                  $1317 = $1303 | 1;
                  HEAP32[$init_list$i>>2] = $1317;
                  HEAP32[$1293>>2] = $1300;
                  HEAP32[$1291>>2] = $1306;
                  break L554;
                 } else {
                  $1312 = ((($init_list$i)) + 1|0);
                  HEAP8[$1312>>0] = 0;
                  _free($1292);
                  $$ph518 = 0;
                 }
                } while(0);
                $1318 = $$ph518 << 1;
                $1319 = $1318&255;
                HEAP8[$init_list$i>>0] = $1319;
               }
              } while(0);
              ;HEAP32[$init_list$i>>2]=HEAP32[$27>>2]|0;HEAP32[$init_list$i+4>>2]=HEAP32[$27+4>>2]|0;HEAP32[$init_list$i+8>>2]=HEAP32[$27+8>>2]|0;
              HEAP32[$27>>2] = 0;
              $1320 = ((($27)) + 4|0);
              HEAP32[$1320>>2] = 0;
              $1321 = ((($27)) + 8|0);
              HEAP32[$1321>>2] = 0;
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($27);
              $1322 = HEAP32[$1281>>2]|0;
              $1323 = ((($1322)) + -24|0);
              $1325 = $1322;
              while(1) {
               $1324 = ((($1325)) + -24|0);
               HEAP32[$1281>>2] = $1324;
               __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1324);
               $$pre$i$i289 = HEAP32[$1281>>2]|0;
               $1326 = ($$pre$i$i289|0)==($1323|0);
               if ($1326) {
                $$pre$phi511Z2D = $1281;$$pre$phiZ2D = $db;$1331 = $1323;
                label = 431;
                break;
               } else {
                $1325 = $$pre$i$i289;
               }
              }
             }
            }
           } else {
            $$phi$trans$insert = ((($db)) + 4|0);
            $$pre507 = HEAP32[$$phi$trans$insert>>2]|0;
            $$pre$phi511Z2D = $$phi$trans$insert;$$pre$phiZ2D = $db;$1331 = $$pre507;
            label = 431;
           }
           do {
            if ((label|0) == 431) {
             $1329 = HEAP32[$$pre$phiZ2D>>2]|0;
             $1330 = ($1329|0)==($1331|0);
             if ($1330) {
              label = 482;
             } else {
              $1332 = ((($1331)) + -24|0);
              __THREW__ = 0;
              invoke_vii(396,($type$i|0),($1332|0));
              $1333 = __THREW__; __THREW__ = 0;
              $1334 = $1333&1;
              if ($1334) {
               label = 430;
              } else {
               $1335 = HEAP32[$$pre$phi511Z2D>>2]|0;
               $1336 = ((($1335)) + -24|0);
               $1338 = $1335;
               while(1) {
                $1337 = ((($1338)) + -24|0);
                HEAP32[$$pre$phi511Z2D>>2] = $1337;
                __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1337);
                $$pre$i24$i = HEAP32[$$pre$phi511Z2D>>2]|0;
                $1339 = ($$pre$i24$i|0)==($1336|0);
                if ($1339) {
                 break;
                } else {
                 $1338 = $$pre$i24$i;
                }
               }
               HEAP32[$expr_list$i>>2] = 0;
               $1340 = ((($expr_list$i)) + 4|0);
               HEAP32[$1340>>2] = 0;
               $1341 = ((($expr_list$i)) + 8|0);
               HEAP32[$1341>>2] = 0;
               do {
                if ($has_expr_list$0$off0$i$lcssa) {
                 $1342 = HEAP32[$$pre$phiZ2D>>2]|0;
                 $1343 = ($1342|0)==($1336|0);
                 if ($1343) {
                  $$019$i = $first;$$2$i302 = 0;
                  label = 483;
                 } else {
                  $1344 = ((($1335)) + -48|0);
                  __THREW__ = 0;
                  invoke_vii(396,($28|0),($1344|0));
                  $1345 = __THREW__; __THREW__ = 0;
                  $1346 = $1345&1;
                  if ($1346) {
                   $1387 = ___cxa_find_matching_catch()|0;
                   $1388 = tempRet0;
                   $$310$i = $1387;$$36$i = $1388;
                   label = 485;
                   break;
                  }
                  $1347 = HEAP8[$expr_list$i>>0]|0;
                  $1348 = $1347 & 1;
                  $1349 = ($1348<<24>>24)==(0);
                  L583: do {
                   if ($1349) {
                    $1350 = ((($expr_list$i)) + 1|0);
                    HEAP8[$1350>>0] = 0;
                    HEAP8[$expr_list$i>>0] = 0;
                   } else {
                    $1351 = ((($expr_list$i)) + 8|0);
                    $1352 = HEAP32[$1351>>2]|0;
                    HEAP8[$1352>>0] = 0;
                    $1353 = ((($expr_list$i)) + 4|0);
                    HEAP32[$1353>>2] = 0;
                    $1354 = HEAP32[$expr_list$i>>2]|0;
                    $1355 = $1354 & -2;
                    $phitmp$i$i$i$i$i$i32$i = (($1355) + -1)|0;
                    $1356 = $1354&255;
                    $1357 = $1356 & 1;
                    $1358 = ($1357<<24>>24)==(0);
                    do {
                     if ($1358) {
                      $1359 = $1354 >>> 1;
                      $1360 = $1359 & 127;
                      $1361 = ($1356&255)<(22);
                      if ($1361) {
                       $1368 = ((($expr_list$i)) + 1|0);
                       $1369 = $1354 >>> 1;
                       $1370 = $1369 & 127;
                       $1371 = (($1370) + 1)|0;
                       _memcpy(($1368|0),($1352|0),($1371|0))|0;
                       _free($1352);
                       $$ph520524 = $1360;
                       break;
                      }
                      $1362 = (($1360) + 16)|0;
                      $1363 = $1362 & 240;
                      $phitmp$i2$i$i$i$i$i35$i = (($1363) + -1)|0;
                      $1364 = ($phitmp$i2$i$i$i$i$i35$i|0)==($phitmp$i$i$i$i$i$i32$i|0);
                      if ($1364) {
                       break L583;
                      }
                      $1365 = ($phitmp$i2$i$i$i$i$i35$i>>>0)<=($phitmp$i$i$i$i$i$i32$i>>>0);
                      $1366 = (_malloc($1363)|0);
                      $1367 = ($1366|0)==(0|0);
                      $or$cond$i$i$i$i$i37$i = $1365 & $1367;
                      if ($or$cond$i$i$i$i$i37$i) {
                       break L583;
                      }
                      $1373 = ((($expr_list$i)) + 1|0);
                      $1374 = $1354 >>> 1;
                      $1375 = $1374 & 127;
                      $1376 = (($1375) + 1)|0;
                      _memcpy(($1366|0),($1373|0),($1376|0))|0;
                      $1377 = $1363 | 1;
                      HEAP32[$expr_list$i>>2] = $1377;
                      HEAP32[$1353>>2] = $1360;
                      HEAP32[$1351>>2] = $1366;
                      break L583;
                     } else {
                      $1372 = ((($expr_list$i)) + 1|0);
                      HEAP8[$1372>>0] = 0;
                      _free($1352);
                      $$ph520524 = 0;
                     }
                    } while(0);
                    $1378 = $$ph520524 << 1;
                    $1379 = $1378&255;
                    HEAP8[$expr_list$i>>0] = $1379;
                   }
                  } while(0);
                  ;HEAP32[$expr_list$i>>2]=HEAP32[$28>>2]|0;HEAP32[$expr_list$i+4>>2]=HEAP32[$28+4>>2]|0;HEAP32[$expr_list$i+8>>2]=HEAP32[$28+8>>2]|0;
                  HEAP32[$28>>2] = 0;
                  $1380 = ((($28)) + 4|0);
                  HEAP32[$1380>>2] = 0;
                  $1381 = ((($28)) + 8|0);
                  HEAP32[$1381>>2] = 0;
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($28);
                  $1382 = HEAP32[$$pre$phi511Z2D>>2]|0;
                  $1383 = ((($1382)) + -24|0);
                  $1385 = $1382;
                  while(1) {
                   $1384 = ((($1385)) + -24|0);
                   HEAP32[$$pre$phi511Z2D>>2] = $1384;
                   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1384);
                   $$pre$i48$i = HEAP32[$$pre$phi511Z2D>>2]|0;
                   $1386 = ($$pre$i48$i|0)==($1383|0);
                   if ($1386) {
                    label = 451;
                    break;
                   } else {
                    $1385 = $$pre$i48$i;
                   }
                  }
                 }
                } else {
                 label = 451;
                }
               } while(0);
               L598: do {
                if ((label|0) == 451) {
                 HEAP32[$r$i>>2] = 0;
                 $1389 = ((($r$i)) + 4|0);
                 HEAP32[$1389>>2] = 0;
                 $1390 = ((($r$i)) + 8|0);
                 HEAP32[$1390>>2] = 0;
                 if ($parsed_gs$0$off0$i) {
                  __THREW__ = 0;
                  invoke_viii(410,($r$i|0),(17239|0),2);
                  $1391 = __THREW__; __THREW__ = 0;
                  $1392 = $1391&1;
                  if ($1392) {
                   label = 453;
                  } else {
                   label = 454;
                  }
                 } else {
                  label = 454;
                 }
                 L602: do {
                  if ((label|0) == 454) {
                   __THREW__ = 0;
                   if ($1251) {
                    (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($r$i,18323)|0);
                    $1395 = __THREW__; __THREW__ = 0;
                    $1396 = $1395&1;
                    if ($1396) {
                     label = 453;
                     break;
                    }
                   } else {
                    (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($r$i,17063)|0);
                    $1397 = __THREW__; __THREW__ = 0;
                    $1398 = $1397&1;
                    if ($1398) {
                     label = 453;
                     break;
                    }
                   }
                   L608: do {
                    if ($has_expr_list$0$off0$i$lcssa) {
                     __THREW__ = 0;
                     invoke_viii(407,($30|0),(17051|0),($expr_list$i|0));
                     $1399 = __THREW__; __THREW__ = 0;
                     $1400 = $1399&1;
                     if ($1400) {
                      label = 453;
                      break L602;
                     }
                     __THREW__ = 0;
                     $1401 = (invoke_iii(392,($30|0),(18327|0))|0);
                     $1402 = __THREW__; __THREW__ = 0;
                     $1403 = $1402&1;
                     do {
                      if ($1403) {
                       $1420 = ___cxa_find_matching_catch()|0;
                       $1421 = tempRet0;
                       $$03$i297 = $1421;$$07$i = $1420;
                      } else {
                       ;HEAP32[$29>>2]=HEAP32[$1401>>2]|0;HEAP32[$29+4>>2]=HEAP32[$1401+4>>2]|0;HEAP32[$29+8>>2]=HEAP32[$1401+8>>2]|0;
                       HEAP32[$1401>>2] = 0;
                       $1404 = ((($1401)) + 4|0);
                       HEAP32[$1404>>2] = 0;
                       $1405 = ((($1401)) + 8|0);
                       HEAP32[$1405>>2] = 0;
                       $1406 = HEAP8[$29>>0]|0;
                       $1407 = $1406 & 1;
                       $1408 = ($1407<<24>>24)==(0);
                       $1409 = ((($29)) + 8|0);
                       $1410 = HEAP32[$1409>>2]|0;
                       $1411 = ((($29)) + 1|0);
                       $1412 = $1408 ? $1411 : $1410;
                       $1413 = ((($29)) + 4|0);
                       $1414 = HEAP32[$1413>>2]|0;
                       $1415 = $1406&255;
                       $1416 = $1415 >>> 1;
                       $1417 = $1408 ? $1416 : $1414;
                       __THREW__ = 0;
                       (invoke_iiii(387,($r$i|0),($1412|0),($1417|0))|0);
                       $1418 = __THREW__; __THREW__ = 0;
                       $1419 = $1418&1;
                       if ($1419) {
                        $1422 = ___cxa_find_matching_catch()|0;
                        $1423 = tempRet0;
                        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($29);
                        $$03$i297 = $1423;$$07$i = $1422;
                        break;
                       } else {
                        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($29);
                        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($30);
                        break L608;
                       }
                      }
                     } while(0);
                     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($30);
                     $$25$i = $$03$i297;$$29$i = $$07$i;
                     break L602;
                    }
                   } while(0);
                   $1424 = HEAP8[$type$i>>0]|0;
                   $1425 = $1424 & 1;
                   $1426 = ($1425<<24>>24)==(0);
                   $1427 = ((($type$i)) + 8|0);
                   $1428 = HEAP32[$1427>>2]|0;
                   $1429 = ((($type$i)) + 1|0);
                   $1430 = $1426 ? $1429 : $1428;
                   $1431 = ((($type$i)) + 4|0);
                   $1432 = HEAP32[$1431>>2]|0;
                   $1433 = $1424&255;
                   $1434 = $1433 >>> 1;
                   $1435 = $1426 ? $1434 : $1432;
                   __THREW__ = 0;
                   (invoke_iiii(387,($r$i|0),($1430|0),($1435|0))|0);
                   $1436 = __THREW__; __THREW__ = 0;
                   $1437 = $1436&1;
                   if ($1437) {
                    label = 453;
                    break;
                   }
                   L620: do {
                    if ($has_init$0$off0$i513) {
                     __THREW__ = 0;
                     invoke_viii(407,($32|0),(16953|0),($init_list$i|0));
                     $1438 = __THREW__; __THREW__ = 0;
                     $1439 = $1438&1;
                     if ($1439) {
                      label = 453;
                      break L602;
                     }
                     __THREW__ = 0;
                     $1440 = (invoke_iii(392,($32|0),(16956|0))|0);
                     $1441 = __THREW__; __THREW__ = 0;
                     $1442 = $1441&1;
                     do {
                      if ($1442) {
                       $1459 = ___cxa_find_matching_catch()|0;
                       $1460 = tempRet0;
                       $$14$i = $1460;$$18$i = $1459;
                      } else {
                       ;HEAP32[$31>>2]=HEAP32[$1440>>2]|0;HEAP32[$31+4>>2]=HEAP32[$1440+4>>2]|0;HEAP32[$31+8>>2]=HEAP32[$1440+8>>2]|0;
                       HEAP32[$1440>>2] = 0;
                       $1443 = ((($1440)) + 4|0);
                       HEAP32[$1443>>2] = 0;
                       $1444 = ((($1440)) + 8|0);
                       HEAP32[$1444>>2] = 0;
                       $1445 = HEAP8[$31>>0]|0;
                       $1446 = $1445 & 1;
                       $1447 = ($1446<<24>>24)==(0);
                       $1448 = ((($31)) + 8|0);
                       $1449 = HEAP32[$1448>>2]|0;
                       $1450 = ((($31)) + 1|0);
                       $1451 = $1447 ? $1450 : $1449;
                       $1452 = ((($31)) + 4|0);
                       $1453 = HEAP32[$1452>>2]|0;
                       $1454 = $1445&255;
                       $1455 = $1454 >>> 1;
                       $1456 = $1447 ? $1455 : $1453;
                       __THREW__ = 0;
                       (invoke_iiii(387,($r$i|0),($1451|0),($1456|0))|0);
                       $1457 = __THREW__; __THREW__ = 0;
                       $1458 = $1457&1;
                       if ($1458) {
                        $1461 = ___cxa_find_matching_catch()|0;
                        $1462 = tempRet0;
                        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($31);
                        $$14$i = $1462;$$18$i = $1461;
                        break;
                       } else {
                        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($31);
                        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($32);
                        break L620;
                       }
                      }
                     } while(0);
                     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($32);
                     $$25$i = $$14$i;$$29$i = $$18$i;
                     break L602;
                    }
                   } while(0);
                   ;HEAP32[$34>>2]=HEAP32[$r$i>>2]|0;HEAP32[$34+4>>2]=HEAP32[$r$i+4>>2]|0;HEAP32[$34+8>>2]=HEAP32[$r$i+8>>2]|0;
                   HEAP32[$r$i>>2] = 0;
                   $1463 = ((($r$i)) + 4|0);
                   HEAP32[$1463>>2] = 0;
                   $1464 = ((($r$i)) + 8|0);
                   HEAP32[$1464>>2] = 0;
                   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($33,$34);
                   $1465 = HEAP32[$$pre$phi511Z2D>>2]|0;
                   $1466 = ((($db)) + 8|0);
                   $1467 = HEAP32[$1466>>2]|0;
                   $1468 = ($1465>>>0)<($1467>>>0);
                   if ($1468) {
                    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1465,$33);
                    $1469 = HEAP32[$$pre$phi511Z2D>>2]|0;
                    $1470 = ((($1469)) + 24|0);
                    HEAP32[$$pre$phi511Z2D>>2] = $1470;
                   } else {
                    $1471 = ((($db)) + 12|0);
                    $1472 = HEAP32[$$pre$phiZ2D>>2]|0;
                    $1473 = $1465;
                    $1474 = $1472;
                    $1475 = (($1473) - ($1474))|0;
                    $1476 = (($1475|0) / 24)&-1;
                    $1477 = (($1476) + 1)|0;
                    $1478 = ($1475|0)<(-24);
                    if ($1478) {
                     __THREW__ = 0;
                     invoke_vi(402,($db|0));
                     $1479 = __THREW__; __THREW__ = 0;
                     $1480 = ___cxa_find_matching_catch()|0;
                     $1481 = tempRet0;
                     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($33);
                     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($34);
                     $$25$i = $1481;$$29$i = $1480;
                     break;
                    }
                    $1482 = $1467;
                    $1483 = (($1482) - ($1474))|0;
                    $1484 = (($1483|0) / 24)&-1;
                    $1485 = ($1484>>>0)<(1073741823);
                    if ($1485) {
                     $1486 = $1484 << 1;
                     $1487 = ($1486>>>0)<($1477>>>0);
                     $1488 = $1487 ? $1477 : $1486;
                     $$0$i$i$i$i299 = $1488;
                    } else {
                     $$0$i$i$i$i299 = 2147483647;
                    }
                    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i$i266,$$0$i$i$i$i299,$1476,$1471);
                    $1489 = ((($__v$i$i$i266)) + 8|0);
                    $1490 = HEAP32[$1489>>2]|0;
                    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1490,$33);
                    $1491 = ((($1490)) + 24|0);
                    HEAP32[$1489>>2] = $1491;
                    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i$i266);
                    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i$i266);
                   }
                   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($33);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($34);
                   $1492 = ((($t$3$i512)) + 1|0);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($r$i);
                   $$019$i = $1492;$$2$i302 = 1;
                   label = 483;
                   break L598;
                  }
                 } while(0);
                 if ((label|0) == 453) {
                  $1393 = ___cxa_find_matching_catch()|0;
                  $1394 = tempRet0;
                  $$25$i = $1394;$$29$i = $1393;
                 }
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($r$i);
                 $$310$i = $$29$i;$$36$i = $$25$i;
                 label = 485;
                }
               } while(0);
               if ((label|0) == 483) {
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($expr_list$i);
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($type$i);
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($init_list$i);
                if ($$2$i302) {
                 $$221$i = $$019$i;
                 label = 487;
                 break L530;
                } else {
                 $$9$i = $first;
                 break L530;
                }
               }
               else if ((label|0) == 485) {
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($expr_list$i);
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($type$i);
                $$4$i304 = $$36$i;$$411$i = $$310$i;
                break;
               }
              }
             }
            }
           } while(0);
           if ((label|0) == 430) {
            $1327 = ___cxa_find_matching_catch()|0;
            $1328 = tempRet0;
            $$4$i304 = $1328;$$411$i = $1327;
           }
           else if ((label|0) == 482) {
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($init_list$i);
            $$9$i = $first;
            break;
           }
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($init_list$i);
           ___resumeException($$411$i|0);
           // unreachable;
          }
         }
        } else {
         $$221$i = $first;
         label = 487;
        }
       } else {
        $$221$i = $first;
        label = 487;
       }
      } while(0);
      if ((label|0) == 487) {
       $$9$i = $$221$i;
      }
      $$0 = $$9$i;
      break L1;
      break;
     }
     case 101:  {
      $1493 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($115,18330,2);
      __THREW__ = 0;
      $1494 = (invoke_iiiii(408,($1493|0),($last|0),($115|0),($db|0))|0);
      $1495 = __THREW__; __THREW__ = 0;
      $1496 = $1495&1;
      if ($1496) {
       $1498 = ___cxa_find_matching_catch()|0;
       $1499 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($115);
       $$23 = $1498;$$2332 = $1499;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($115);
       $1497 = ($1494|0)==($1493|0);
       $first$56 = $1497 ? $first : $1494;
       $$0 = $first$56;
       break L1;
      }
      break;
     }
     case 103:  {
      $1500 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($116,18308,1);
      __THREW__ = 0;
      $1501 = (invoke_iiiii(409,($1500|0),($last|0),($116|0),($db|0))|0);
      $1502 = __THREW__; __THREW__ = 0;
      $1503 = $1502&1;
      if ($1503) {
       $1505 = ___cxa_find_matching_catch()|0;
       $1506 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($116);
       $$23 = $1505;$$2332 = $1506;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($116);
       $1504 = ($1501|0)==($1500|0);
       $first$57 = $1504 ? $first : $1501;
       $$0 = $first$57;
       break L1;
      }
      break;
     }
     case 116:  {
      $1507 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($117,18333,1);
      __THREW__ = 0;
      $1508 = (invoke_iiiii(409,($1507|0),($last|0),($117|0),($db|0))|0);
      $1509 = __THREW__; __THREW__ = 0;
      $1510 = $1509&1;
      if ($1510) {
       $1512 = ___cxa_find_matching_catch()|0;
       $1513 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($117);
       $$23 = $1512;$$2332 = $1513;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($117);
       $1511 = ($1508|0)==($1507|0);
       $first$58 = $1511 ? $first : $1508;
       $$0 = $first$58;
       break L1;
      }
      break;
     }
     case 120:  {
      $1514 = ((($first)) + 2|0);
      $1515 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1514,$last,$db)|0);
      $1516 = ($1515|0)==($1514|0);
      L667: do {
       if ($1516) {
        $$03$i265 = $1514;
       } else {
        $1517 = HEAP32[$db>>2]|0;
        $1518 = ((($db)) + 4|0);
        $1519 = HEAP32[$1518>>2]|0;
        $1520 = ($1517|0)==($1519|0);
        if ($1520) {
         $$03$i265 = $1514;
        } else {
         $1521 = ((($1519)) + -24|0);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($37,$1521);
         __THREW__ = 0;
         $1522 = (invoke_iiii(391,($37|0),0,(18335|0))|0);
         $1523 = __THREW__; __THREW__ = 0;
         $1524 = $1523&1;
         do {
          if ($1524) {
           $1578 = ___cxa_find_matching_catch()|0;
           $1579 = tempRet0;
           $$1$i264 = $1579;$$12$i263 = $1578;
          } else {
           ;HEAP32[$36>>2]=HEAP32[$1522>>2]|0;HEAP32[$36+4>>2]=HEAP32[$1522+4>>2]|0;HEAP32[$36+8>>2]=HEAP32[$1522+8>>2]|0;
           HEAP32[$1522>>2] = 0;
           $1525 = ((($1522)) + 4|0);
           HEAP32[$1525>>2] = 0;
           $1526 = ((($1522)) + 8|0);
           HEAP32[$1526>>2] = 0;
           __THREW__ = 0;
           $1527 = (invoke_iii(392,($36|0),(16956|0))|0);
           $1528 = __THREW__; __THREW__ = 0;
           $1529 = $1528&1;
           if ($1529) {
            $1580 = ___cxa_find_matching_catch()|0;
            $1581 = tempRet0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($36);
            $$1$i264 = $1581;$$12$i263 = $1580;
            break;
           }
           ;HEAP32[$35>>2]=HEAP32[$1527>>2]|0;HEAP32[$35+4>>2]=HEAP32[$1527+4>>2]|0;HEAP32[$35+8>>2]=HEAP32[$1527+8>>2]|0;
           HEAP32[$1527>>2] = 0;
           $1530 = ((($1527)) + 4|0);
           HEAP32[$1530>>2] = 0;
           $1531 = ((($1527)) + 8|0);
           HEAP32[$1531>>2] = 0;
           $1532 = HEAP8[$1521>>0]|0;
           $1533 = $1532 & 1;
           $1534 = ($1533<<24>>24)==(0);
           do {
            if ($1534) {
             $1535 = ((($1521)) + 1|0);
             HEAP8[$1535>>0] = 0;
             HEAP8[$1521>>0] = 0;
            } else {
             $1536 = ((($1519)) + -16|0);
             $1537 = HEAP32[$1536>>2]|0;
             HEAP8[$1537>>0] = 0;
             $1538 = ((($1519)) + -20|0);
             HEAP32[$1538>>2] = 0;
             $$pre$i$i$i$i = HEAP8[$1521>>0]|0;
             $1539 = $$pre$i$i$i$i & 1;
             $1540 = ($1539<<24>>24)==(0);
             if ($1540) {
              $1545 = $$pre$i$i$i$i;$1554 = 10;
             } else {
              $1541 = HEAP32[$1521>>2]|0;
              $1542 = $1541 & -2;
              $phitmp$i$i$i$i$i$i$i = (($1542) + -1)|0;
              $1543 = $1541&255;
              $1545 = $1543;$1554 = $phitmp$i$i$i$i$i$i$i;
             }
             $1544 = $1545 & 1;
             $1546 = ($1544<<24>>24)==(0);
             if ($1546) {
              $1547 = $1545&255;
              $1548 = $1547 >>> 1;
              $1549 = ($1545&255)<(22);
              if ($1549) {
               $1553 = 10;$1573 = $1548;$2317 = 1;
              } else {
               $1550 = (($1548) + 16)|0;
               $1551 = $1550 & 240;
               $phitmp$i2$i$i$i$i$i$i = (($1551) + -1)|0;
               $1553 = $phitmp$i2$i$i$i$i$i$i;$1573 = $1548;$2317 = 1;
              }
             } else {
              $1553 = 10;$1573 = 0;$2317 = 0;
             }
             $1552 = ($1553|0)==($1554|0);
             if (!($1552)) {
              $1555 = ($1553|0)==(10);
              if ($1555) {
               $1560 = ((($1521)) + 1|0);
               $1561 = HEAP32[$1536>>2]|0;
               if ($2317) {
                $1562 = $1545&255;
                $1563 = $1562 >>> 1;
                $1564 = (($1563) + 1)|0;
                _memcpy(($1560|0),($1561|0),($1564|0))|0;
                _free($1561);
               } else {
                $1569 = HEAP8[$1561>>0]|0;
                HEAP8[$1560>>0] = $1569;
                _free($1561);
               }
               $1574 = $1573 << 1;
               $1575 = $1574&255;
               HEAP8[$1521>>0] = $1575;
               break;
              }
              $1556 = ($1553>>>0)<=($1554>>>0);
              $1557 = (($1553) + 1)|0;
              $1558 = (_malloc($1557)|0);
              $1559 = ($1558|0)==(0|0);
              $or$cond$i$i$i$i$i$i = $1556 & $1559;
              if (!($or$cond$i$i$i$i$i$i)) {
               if ($2317) {
                $1565 = ((($1521)) + 1|0);
                $1566 = $1545&255;
                $1567 = $1566 >>> 1;
                $1568 = (($1567) + 1)|0;
                _memcpy(($1558|0),($1565|0),($1568|0))|0;
               } else {
                $1570 = HEAP32[$1536>>2]|0;
                $1571 = HEAP8[$1570>>0]|0;
                HEAP8[$1558>>0] = $1571;
                _free($1570);
               }
               $1572 = $1557 | 1;
               HEAP32[$1521>>2] = $1572;
               HEAP32[$1538>>2] = $1573;
               HEAP32[$1536>>2] = $1558;
              }
             }
            }
           } while(0);
           ;HEAP32[$1521>>2]=HEAP32[$35>>2]|0;HEAP32[$1521+4>>2]=HEAP32[$35+4>>2]|0;HEAP32[$1521+8>>2]=HEAP32[$35+8>>2]|0;
           HEAP32[$35>>2] = 0;
           $1576 = ((($35)) + 4|0);
           HEAP32[$1576>>2] = 0;
           $1577 = ((($35)) + 8|0);
           HEAP32[$1577>>2] = 0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($35);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($36);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($37);
           $$03$i265 = $1515;
           break L667;
          }
         } while(0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($37);
         ___resumeException($$12$i263|0);
         // unreachable;
        }
       }
      } while(0);
      $1582 = ($$03$i265|0)==($1514|0);
      $first$59 = $1582 ? $first : $$03$i265;
      $$0 = $first$59;
      break L1;
      break;
     }
     default: {
      $$0 = $first;
      break L1;
     }
     }
     break;
    }
    case 111:  {
     $1583 = ((($t$0)) + 1|0);
     $1584 = HEAP8[$1583>>0]|0;
     $1585 = $1584 << 24 >> 24;
     switch ($1585|0) {
     case 110:  {
      $1586 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $$0 = $1586;
      break L1;
      break;
     }
     case 111:  {
      $1587 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($118,18346,2);
      __THREW__ = 0;
      $1588 = (invoke_iiiii(408,($1587|0),($last|0),($118|0),($db|0))|0);
      $1589 = __THREW__; __THREW__ = 0;
      $1590 = $1589&1;
      if ($1590) {
       $1592 = ___cxa_find_matching_catch()|0;
       $1593 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($118);
       $$23 = $1592;$$2332 = $1593;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($118);
       $1591 = ($1588|0)==($1587|0);
       $first$60 = $1591 ? $first : $1588;
       $$0 = $first$60;
       break L1;
      }
      break;
     }
     case 114:  {
      $1594 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($119,18349,1);
      __THREW__ = 0;
      $1595 = (invoke_iiiii(408,($1594|0),($last|0),($119|0),($db|0))|0);
      $1596 = __THREW__; __THREW__ = 0;
      $1597 = $1596&1;
      if ($1597) {
       $1599 = ___cxa_find_matching_catch()|0;
       $1600 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($119);
       $$23 = $1599;$$2332 = $1600;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($119);
       $1598 = ($1595|0)==($1594|0);
       $first$61 = $1598 ? $first : $1595;
       $$0 = $first$61;
       break L1;
      }
      break;
     }
     case 82:  {
      $1601 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($120,18351,2);
      __THREW__ = 0;
      $1602 = (invoke_iiiii(408,($1601|0),($last|0),($120|0),($db|0))|0);
      $1603 = __THREW__; __THREW__ = 0;
      $1604 = $1603&1;
      if ($1604) {
       $1606 = ___cxa_find_matching_catch()|0;
       $1607 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($120);
       $$23 = $1606;$$2332 = $1607;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($120);
       $1605 = ($1602|0)==($1601|0);
       $first$62 = $1605 ? $first : $1602;
       $$0 = $first$62;
       break L1;
      }
      break;
     }
     default: {
      $$0 = $first;
      break L1;
     }
     }
     break;
    }
    case 112:  {
     $1608 = ((($t$0)) + 1|0);
     $1609 = HEAP8[$1608>>0]|0;
     $1610 = $1609 << 24 >> 24;
     switch ($1610|0) {
     case 109:  {
      $1611 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($121,18354,3);
      __THREW__ = 0;
      $1612 = (invoke_iiiii(408,($1611|0),($last|0),($121|0),($db|0))|0);
      $1613 = __THREW__; __THREW__ = 0;
      $1614 = $1613&1;
      if ($1614) {
       $1616 = ___cxa_find_matching_catch()|0;
       $1617 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($121);
       $$23 = $1616;$$2332 = $1617;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($121);
       $1615 = ($1612|0)==($1611|0);
       $first$63 = $1615 ? $first : $1612;
       $$0 = $first$63;
       break L1;
      }
      break;
     }
     case 108:  {
      $1618 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($122,18358,1);
      __THREW__ = 0;
      $1619 = (invoke_iiiii(408,($1618|0),($last|0),($122|0),($db|0))|0);
      $1620 = __THREW__; __THREW__ = 0;
      $1621 = $1620&1;
      if ($1621) {
       $1623 = ___cxa_find_matching_catch()|0;
       $1624 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($122);
       $$23 = $1623;$$2332 = $1624;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($122);
       $1622 = ($1619|0)==($1618|0);
       $first$64 = $1622 ? $first : $1619;
       $$0 = $first$64;
       break L1;
      }
      break;
     }
     case 76:  {
      $1625 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($123,18360,2);
      __THREW__ = 0;
      $1626 = (invoke_iiiii(408,($1625|0),($last|0),($123|0),($db|0))|0);
      $1627 = __THREW__; __THREW__ = 0;
      $1628 = $1627&1;
      if ($1628) {
       $1630 = ___cxa_find_matching_catch()|0;
       $1631 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($123);
       $$23 = $1630;$$2332 = $1631;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($123);
       $1629 = ($1626|0)==($1625|0);
       $first$65 = $1629 ? $first : $1626;
       $$0 = $first$65;
       break L1;
      }
      break;
     }
     case 112:  {
      $1632 = ((($first)) + 2|0);
      $1633 = ($1632|0)==($last|0);
      if (!($1633)) {
       $1634 = HEAP8[$1632>>0]|0;
       $1635 = ($1634<<24>>24)==(95);
       if ($1635) {
        $1636 = ((($first)) + 3|0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($124,18363,2);
        __THREW__ = 0;
        $1637 = (invoke_iiiii(409,($1636|0),($last|0),($124|0),($db|0))|0);
        $1638 = __THREW__; __THREW__ = 0;
        $1639 = $1638&1;
        if ($1639) {
         $1641 = ___cxa_find_matching_catch()|0;
         $1642 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($124);
         $$23 = $1641;$$2332 = $1642;
         break L7;
        } else {
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($124);
         $1640 = ($1637|0)==($1636|0);
         $first$66 = $1640 ? $first : $1637;
         $$0 = $first$66;
         break L1;
        }
       }
      }
      $1643 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1632,$last,$db)|0);
      $1644 = ($1643|0)==($1632|0);
      if ($1644) {
       $$0 = $first;
       break L1;
      }
      $1645 = HEAP32[$db>>2]|0;
      $1646 = ((($db)) + 4|0);
      $1647 = HEAP32[$1646>>2]|0;
      $1648 = ($1645|0)==($1647|0);
      if ($1648) {
       $$0 = $first;
       break L1;
      }
      $1649 = ((($1647)) + -24|0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($128,$1649);
      __THREW__ = 0;
      $1650 = (invoke_iiii(391,($128|0),0,(17051|0))|0);
      $1651 = __THREW__; __THREW__ = 0;
      $1652 = $1651&1;
      do {
       if ($1652) {
        $1660 = ___cxa_find_matching_catch()|0;
        $1661 = tempRet0;
        $$14 = $1660;$$1423 = $1661;
       } else {
        ;HEAP32[$127>>2]=HEAP32[$1650>>2]|0;HEAP32[$127+4>>2]=HEAP32[$1650+4>>2]|0;HEAP32[$127+8>>2]=HEAP32[$1650+8>>2]|0;
        HEAP32[$1650>>2] = 0;
        $1653 = ((($1650)) + 4|0);
        HEAP32[$1653>>2] = 0;
        $1654 = ((($1650)) + 8|0);
        HEAP32[$1654>>2] = 0;
        __THREW__ = 0;
        $1655 = (invoke_iii(392,($127|0),(18366|0))|0);
        $1656 = __THREW__; __THREW__ = 0;
        $1657 = $1656&1;
        if ($1657) {
         $1662 = ___cxa_find_matching_catch()|0;
         $1663 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($127);
         $$14 = $1662;$$1423 = $1663;
         break;
        } else {
         ;HEAP32[$126>>2]=HEAP32[$1655>>2]|0;HEAP32[$126+4>>2]=HEAP32[$1655+4>>2]|0;HEAP32[$126+8>>2]=HEAP32[$1655+8>>2]|0;
         HEAP32[$1655>>2] = 0;
         $1658 = ((($1655)) + 4|0);
         HEAP32[$1658>>2] = 0;
         $1659 = ((($1655)) + 8|0);
         HEAP32[$1659>>2] = 0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($125,$126);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($1649,$125);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($125);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($126);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($127);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($128);
         $$0 = $1643;
         break L1;
        }
       }
      } while(0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($128);
      $$23 = $$14;$$2332 = $$1423;
      break L7;
      break;
     }
     case 115:  {
      $1664 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($129,18358,1);
      __THREW__ = 0;
      $1665 = (invoke_iiiii(409,($1664|0),($last|0),($129|0),($db|0))|0);
      $1666 = __THREW__; __THREW__ = 0;
      $1667 = $1666&1;
      if ($1667) {
       $1669 = ___cxa_find_matching_catch()|0;
       $1670 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($129);
       $$23 = $1669;$$2332 = $1670;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($129);
       $1668 = ($1665|0)==($1664|0);
       $first$67 = $1668 ? $first : $1665;
       $$0 = $first$67;
       break L1;
      }
      break;
     }
     case 116:  {
      $1671 = ($144|0)>(2);
      do {
       if ($1671) {
        $1672 = HEAP8[$first>>0]|0;
        $1673 = ($1672<<24>>24)==(112);
        if ($1673) {
         $1674 = ((($first)) + 1|0);
         $1675 = HEAP8[$1674>>0]|0;
         $1676 = ($1675<<24>>24)==(116);
         if ($1676) {
          $1677 = ((($first)) + 2|0);
          $1678 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1677,$last,$db)|0);
          $1679 = ($1678|0)==($1677|0);
          if ($1679) {
           $$0$i254 = $first;
          } else {
           $1680 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1678,$last,$db)|0);
           $1681 = ($1680|0)==($1678|0);
           if ($1681) {
            $$0$i254 = $first;
           } else {
            $1682 = ((($db)) + 4|0);
            $1683 = HEAP32[$1682>>2]|0;
            $1684 = HEAP32[$db>>2]|0;
            $1685 = $1683;
            $1686 = $1684;
            $1687 = (($1685) - ($1686))|0;
            $1688 = (($1687|0) / 24)&-1;
            $1689 = ($1688>>>0)<(2);
            if ($1689) {
             $$0$i254 = $first;
            } else {
             $1690 = ((($1683)) + -24|0);
             __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($tmp$i249,$1690);
             $1691 = HEAP32[$1682>>2]|0;
             $1692 = ((($1691)) + -24|0);
             $1694 = $1691;
             while(1) {
              $1693 = ((($1694)) + -24|0);
              HEAP32[$1682>>2] = $1693;
              __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1693);
              $$pre$i$i250 = HEAP32[$1682>>2]|0;
              $1695 = ($$pre$i$i250|0)==($1692|0);
              if ($1695) {
               break;
              } else {
               $1694 = $$pre$i$i250;
              }
             }
             $1696 = ((($1691)) + -48|0);
             __THREW__ = 0;
             (invoke_iii(392,($1696|0),(18370|0))|0);
             $1697 = __THREW__; __THREW__ = 0;
             $1698 = $1697&1;
             if (!($1698)) {
              $1699 = HEAP32[$1682>>2]|0;
              $1700 = ((($1699)) + -24|0);
              $1701 = HEAP8[$tmp$i249>>0]|0;
              $1702 = $1701 & 1;
              $1703 = ($1702<<24>>24)==(0);
              $1704 = ((($tmp$i249)) + 8|0);
              $1705 = HEAP32[$1704>>2]|0;
              $1706 = ((($tmp$i249)) + 1|0);
              $1707 = $1703 ? $1706 : $1705;
              $1708 = ((($tmp$i249)) + 4|0);
              $1709 = HEAP32[$1708>>2]|0;
              $1710 = $1701&255;
              $1711 = $1710 >>> 1;
              $1712 = $1703 ? $1711 : $1709;
              __THREW__ = 0;
              (invoke_iiii(387,($1700|0),($1707|0),($1712|0))|0);
              $1713 = __THREW__; __THREW__ = 0;
              $1714 = $1713&1;
              if (!($1714)) {
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp$i249);
               $$0$i254 = $1680;
               break;
              }
             }
             $1715 = ___cxa_find_matching_catch()|0;
             $1716 = tempRet0;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp$i249);
             ___resumeException($1715|0);
             // unreachable;
            }
           }
          }
         } else {
          $$0$i254 = $first;
         }
        } else {
         $$0$i254 = $first;
        }
       } else {
        $$0$i254 = $first;
       }
      } while(0);
      $$0 = $$0$i254;
      break L1;
      break;
     }
     default: {
      $$0 = $first;
      break L1;
     }
     }
     break;
    }
    case 113:  {
     $1717 = ((($t$0)) + 1|0);
     $1718 = HEAP8[$1717>>0]|0;
     $1719 = ($1718<<24>>24)==(117);
     if (!($1719)) {
      $$0 = $first;
      break L1;
     }
     $1720 = ((($first)) + 2|0);
     $1721 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1720,$last,$db)|0);
     $1722 = ($1721|0)==($1720|0);
     if ($1722) {
      $$0 = $first;
      break L1;
     }
     $1723 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1721,$last,$db)|0);
     $1724 = ($1723|0)==($1721|0);
     if ($1724) {
      $1829 = ((($db)) + 4|0);
      $1830 = HEAP32[$1829>>2]|0;
      $1831 = ((($1830)) + -24|0);
      $1833 = $1830;
      while(1) {
       $1832 = ((($1833)) + -24|0);
       HEAP32[$1829>>2] = $1832;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1832);
       $$pre$i161 = HEAP32[$1829>>2]|0;
       $1834 = ($$pre$i161|0)==($1831|0);
       if ($1834) {
        $$0 = $first;
        break L1;
       } else {
        $1833 = $$pre$i161;
       }
      }
     }
     $1725 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1723,$last,$db)|0);
     $1726 = ($1725|0)==($1723|0);
     $1727 = ((($db)) + 4|0);
     $1728 = HEAP32[$1727>>2]|0;
     if ($1726) {
      $1821 = ((($1728)) + -24|0);
      $1823 = $1728;
      while(1) {
       $1822 = ((($1823)) + -24|0);
       HEAP32[$1727>>2] = $1822;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1822);
       $$pre$i157 = HEAP32[$1727>>2]|0;
       $1824 = ($$pre$i157|0)==($1821|0);
       if ($1824) {
        break;
       } else {
        $1823 = $$pre$i157;
       }
      }
      $1825 = ((($1728)) + -48|0);
      $1827 = $1821;
      while(1) {
       $1826 = ((($1827)) + -24|0);
       HEAP32[$1727>>2] = $1826;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1826);
       $$pre$i159 = HEAP32[$1727>>2]|0;
       $1828 = ($$pre$i159|0)==($1825|0);
       if ($1828) {
        $$0 = $first;
        break L1;
       } else {
        $1827 = $$pre$i159;
       }
      }
     }
     $1729 = HEAP32[$db>>2]|0;
     $1730 = $1728;
     $1731 = $1729;
     $1732 = (($1730) - ($1731))|0;
     $1733 = (($1732|0) / 24)&-1;
     $1734 = ($1733>>>0)<(3);
     if ($1734) {
      $$0 = $first;
      break L1;
     }
     $1735 = ((($1728)) + -24|0);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($op3,$1735);
     $1736 = HEAP32[$1727>>2]|0;
     $1737 = ((($1736)) + -24|0);
     $1739 = $1736;
     while(1) {
      $1738 = ((($1739)) + -24|0);
      HEAP32[$1727>>2] = $1738;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1738);
      $$pre$i133 = HEAP32[$1727>>2]|0;
      $1740 = ($$pre$i133|0)==($1737|0);
      if ($1740) {
       break;
      } else {
       $1739 = $$pre$i133;
      }
     }
     $1741 = ((($1736)) + -48|0);
     __THREW__ = 0;
     invoke_vii(396,($op27|0),($1741|0));
     $1742 = __THREW__; __THREW__ = 0;
     $1743 = $1742&1;
     if ($1743) {
      $1805 = ___cxa_find_matching_catch()|0;
      $1806 = tempRet0;
      $$22 = $1805;$$2231 = $1806;
     } else {
      $1744 = HEAP32[$1727>>2]|0;
      $1745 = ((($1744)) + -24|0);
      $1747 = $1744;
      while(1) {
       $1746 = ((($1747)) + -24|0);
       HEAP32[$1727>>2] = $1746;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1746);
       $$pre$i135 = HEAP32[$1727>>2]|0;
       $1748 = ($$pre$i135|0)==($1745|0);
       if ($1748) {
        break;
       } else {
        $1747 = $$pre$i135;
       }
      }
      $1749 = ((($1744)) + -48|0);
      __THREW__ = 0;
      invoke_vii(396,($op18|0),($1749|0));
      $1750 = __THREW__; __THREW__ = 0;
      $1751 = $1750&1;
      if ($1751) {
       $1807 = ___cxa_find_matching_catch()|0;
       $1808 = tempRet0;
       $$21 = $1807;$$2130 = $1808;
      } else {
       $1752 = HEAP32[$1727>>2]|0;
       $1753 = ((($1752)) + -24|0);
       __THREW__ = 0;
       invoke_viii(407,($136|0),(17051|0),($op18|0));
       $1754 = __THREW__; __THREW__ = 0;
       $1755 = $1754&1;
       if ($1755) {
        $1809 = ___cxa_find_matching_catch()|0;
        $1810 = tempRet0;
        $$20 = $1809;$$2029 = $1810;
       } else {
        __THREW__ = 0;
        $1756 = (invoke_iii(392,($136|0),(18373|0))|0);
        $1757 = __THREW__; __THREW__ = 0;
        $1758 = $1757&1;
        if ($1758) {
         $1811 = ___cxa_find_matching_catch()|0;
         $1812 = tempRet0;
         $$19 = $1811;$$1928 = $1812;
        } else {
         ;HEAP32[$135>>2]=HEAP32[$1756>>2]|0;HEAP32[$135+4>>2]=HEAP32[$1756+4>>2]|0;HEAP32[$135+8>>2]=HEAP32[$1756+8>>2]|0;
         HEAP32[$1756>>2] = 0;
         $1759 = ((($1756)) + 4|0);
         HEAP32[$1759>>2] = 0;
         $1760 = ((($1756)) + 8|0);
         HEAP32[$1760>>2] = 0;
         $1761 = HEAP8[$op27>>0]|0;
         $1762 = $1761 & 1;
         $1763 = ($1762<<24>>24)==(0);
         $1764 = ((($op27)) + 8|0);
         $1765 = HEAP32[$1764>>2]|0;
         $1766 = ((($op27)) + 1|0);
         $1767 = $1763 ? $1766 : $1765;
         $1768 = ((($op27)) + 4|0);
         $1769 = HEAP32[$1768>>2]|0;
         $1770 = $1761&255;
         $1771 = $1770 >>> 1;
         $1772 = $1763 ? $1771 : $1769;
         __THREW__ = 0;
         $1773 = (invoke_iiii(387,($135|0),($1767|0),($1772|0))|0);
         $1774 = __THREW__; __THREW__ = 0;
         $1775 = $1774&1;
         if ($1775) {
          $1813 = ___cxa_find_matching_catch()|0;
          $1814 = tempRet0;
          $$18 = $1813;$$1827 = $1814;
         } else {
          ;HEAP32[$134>>2]=HEAP32[$1773>>2]|0;HEAP32[$134+4>>2]=HEAP32[$1773+4>>2]|0;HEAP32[$134+8>>2]=HEAP32[$1773+8>>2]|0;
          HEAP32[$1773>>2] = 0;
          $1776 = ((($1773)) + 4|0);
          HEAP32[$1776>>2] = 0;
          $1777 = ((($1773)) + 8|0);
          HEAP32[$1777>>2] = 0;
          __THREW__ = 0;
          $1778 = (invoke_iii(392,($134|0),(18379|0))|0);
          $1779 = __THREW__; __THREW__ = 0;
          $1780 = $1779&1;
          if ($1780) {
           $1815 = ___cxa_find_matching_catch()|0;
           $1816 = tempRet0;
           $$17 = $1815;$$1726 = $1816;
          } else {
           ;HEAP32[$133>>2]=HEAP32[$1778>>2]|0;HEAP32[$133+4>>2]=HEAP32[$1778+4>>2]|0;HEAP32[$133+8>>2]=HEAP32[$1778+8>>2]|0;
           HEAP32[$1778>>2] = 0;
           $1781 = ((($1778)) + 4|0);
           HEAP32[$1781>>2] = 0;
           $1782 = ((($1778)) + 8|0);
           HEAP32[$1782>>2] = 0;
           $1783 = HEAP8[$op3>>0]|0;
           $1784 = $1783 & 1;
           $1785 = ($1784<<24>>24)==(0);
           $1786 = ((($op3)) + 8|0);
           $1787 = HEAP32[$1786>>2]|0;
           $1788 = ((($op3)) + 1|0);
           $1789 = $1785 ? $1788 : $1787;
           $1790 = ((($op3)) + 4|0);
           $1791 = HEAP32[$1790>>2]|0;
           $1792 = $1783&255;
           $1793 = $1792 >>> 1;
           $1794 = $1785 ? $1793 : $1791;
           __THREW__ = 0;
           $1795 = (invoke_iiii(387,($133|0),($1789|0),($1794|0))|0);
           $1796 = __THREW__; __THREW__ = 0;
           $1797 = $1796&1;
           do {
            if ($1797) {
             $1817 = ___cxa_find_matching_catch()|0;
             $1818 = tempRet0;
             $$16 = $1817;$$1625 = $1818;
            } else {
             ;HEAP32[$132>>2]=HEAP32[$1795>>2]|0;HEAP32[$132+4>>2]=HEAP32[$1795+4>>2]|0;HEAP32[$132+8>>2]=HEAP32[$1795+8>>2]|0;
             HEAP32[$1795>>2] = 0;
             $1798 = ((($1795)) + 4|0);
             HEAP32[$1798>>2] = 0;
             $1799 = ((($1795)) + 8|0);
             HEAP32[$1799>>2] = 0;
             __THREW__ = 0;
             $1800 = (invoke_iii(392,($132|0),(16956|0))|0);
             $1801 = __THREW__; __THREW__ = 0;
             $1802 = $1801&1;
             if ($1802) {
              $1819 = ___cxa_find_matching_catch()|0;
              $1820 = tempRet0;
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($132);
              $$16 = $1819;$$1625 = $1820;
              break;
             } else {
              ;HEAP32[$131>>2]=HEAP32[$1800>>2]|0;HEAP32[$131+4>>2]=HEAP32[$1800+4>>2]|0;HEAP32[$131+8>>2]=HEAP32[$1800+8>>2]|0;
              HEAP32[$1800>>2] = 0;
              $1803 = ((($1800)) + 4|0);
              HEAP32[$1803>>2] = 0;
              $1804 = ((($1800)) + 8|0);
              HEAP32[$1804>>2] = 0;
              __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($130,$131);
              __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($1753,$130);
              __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($130);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($131);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($132);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($133);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($134);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($135);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($136);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op18);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op27);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op3);
              $$0 = $1725;
              break L1;
             }
            }
           } while(0);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($133);
           $$17 = $$16;$$1726 = $$1625;
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($134);
          $$18 = $$17;$$1827 = $$1726;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($135);
         $$19 = $$18;$$1928 = $$1827;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($136);
        $$20 = $$19;$$2029 = $$1928;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op18);
       $$21 = $$20;$$2130 = $$2029;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op27);
      $$22 = $$21;$$2231 = $$2130;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op3);
     $$23 = $$22;$$2332 = $$2231;
     break;
    }
    case 114:  {
     $1835 = ((($t$0)) + 1|0);
     $1836 = HEAP8[$1835>>0]|0;
     $1837 = $1836 << 24 >> 24;
     switch ($1837|0) {
     case 99:  {
      $1838 = ($144|0)>(2);
      L825: do {
       if ($1838) {
        $1839 = HEAP8[$first>>0]|0;
        $1840 = ($1839<<24>>24)==(114);
        if ($1840) {
         $1841 = ((($first)) + 1|0);
         $1842 = HEAP8[$1841>>0]|0;
         $1843 = ($1842<<24>>24)==(99);
         if ($1843) {
          $1844 = ((($first)) + 2|0);
          $1845 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($1844,$last,$db)|0);
          $1846 = ($1845|0)==($1844|0);
          if ($1846) {
           $$06$i248 = $first;
          } else {
           $1847 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1845,$last,$db)|0);
           $1848 = ($1847|0)==($1845|0);
           if ($1848) {
            $$06$i248 = $first;
           } else {
            $1849 = ((($db)) + 4|0);
            $1850 = HEAP32[$1849>>2]|0;
            $1851 = HEAP32[$db>>2]|0;
            $1852 = $1850;
            $1853 = $1851;
            $1854 = (($1852) - ($1853))|0;
            $1855 = (($1854|0) / 24)&-1;
            $1856 = ($1855>>>0)<(2);
            if ($1856) {
             $$06$i248 = $first;
            } else {
             $1857 = ((($1850)) + -24|0);
             __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($expr$i221,$1857);
             $1858 = HEAP32[$1849>>2]|0;
             $1859 = ((($1858)) + -24|0);
             $1861 = $1858;
             while(1) {
              $1860 = ((($1861)) + -24|0);
              HEAP32[$1849>>2] = $1860;
              __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1860);
              $$pre$i$i222 = HEAP32[$1849>>2]|0;
              $1862 = ($$pre$i$i222|0)==($1859|0);
              if ($1862) {
               break;
              } else {
               $1861 = $$pre$i$i222;
              }
             }
             $1863 = ((($1858)) + -48|0);
             __THREW__ = 0;
             invoke_vii(396,($43|0),($1863|0));
             $1864 = __THREW__; __THREW__ = 0;
             $1865 = $1864&1;
             if ($1865) {
              $1898 = ___cxa_find_matching_catch()|0;
              $1899 = tempRet0;
              $$4$i247 = $1899;$$45$i246 = $1898;
             } else {
              __THREW__ = 0;
              $1866 = (invoke_iiii(391,($43|0),0,(18385|0))|0);
              $1867 = __THREW__; __THREW__ = 0;
              $1868 = $1867&1;
              if ($1868) {
               $1900 = ___cxa_find_matching_catch()|0;
               $1901 = tempRet0;
               $$3$i245 = $1901;$$34$i244 = $1900;
              } else {
               ;HEAP32[$42>>2]=HEAP32[$1866>>2]|0;HEAP32[$42+4>>2]=HEAP32[$1866+4>>2]|0;HEAP32[$42+8>>2]=HEAP32[$1866+8>>2]|0;
               HEAP32[$1866>>2] = 0;
               $1869 = ((($1866)) + 4|0);
               HEAP32[$1869>>2] = 0;
               $1870 = ((($1866)) + 8|0);
               HEAP32[$1870>>2] = 0;
               __THREW__ = 0;
               $1871 = (invoke_iii(392,($42|0),(18236|0))|0);
               $1872 = __THREW__; __THREW__ = 0;
               $1873 = $1872&1;
               if ($1873) {
                $1902 = ___cxa_find_matching_catch()|0;
                $1903 = tempRet0;
                $$2$i243 = $1903;$$23$i242 = $1902;
               } else {
                ;HEAP32[$41>>2]=HEAP32[$1871>>2]|0;HEAP32[$41+4>>2]=HEAP32[$1871+4>>2]|0;HEAP32[$41+8>>2]=HEAP32[$1871+8>>2]|0;
                HEAP32[$1871>>2] = 0;
                $1874 = ((($1871)) + 4|0);
                HEAP32[$1874>>2] = 0;
                $1875 = ((($1871)) + 8|0);
                HEAP32[$1875>>2] = 0;
                $1876 = HEAP8[$expr$i221>>0]|0;
                $1877 = $1876 & 1;
                $1878 = ($1877<<24>>24)==(0);
                $1879 = ((($expr$i221)) + 8|0);
                $1880 = HEAP32[$1879>>2]|0;
                $1881 = ((($expr$i221)) + 1|0);
                $1882 = $1878 ? $1881 : $1880;
                $1883 = ((($expr$i221)) + 4|0);
                $1884 = HEAP32[$1883>>2]|0;
                $1885 = $1876&255;
                $1886 = $1885 >>> 1;
                $1887 = $1878 ? $1886 : $1884;
                __THREW__ = 0;
                $1888 = (invoke_iiii(387,($41|0),($1882|0),($1887|0))|0);
                $1889 = __THREW__; __THREW__ = 0;
                $1890 = $1889&1;
                do {
                 if ($1890) {
                  $1904 = ___cxa_find_matching_catch()|0;
                  $1905 = tempRet0;
                  $$1$i241 = $1905;$$12$i240 = $1904;
                 } else {
                  ;HEAP32[$40>>2]=HEAP32[$1888>>2]|0;HEAP32[$40+4>>2]=HEAP32[$1888+4>>2]|0;HEAP32[$40+8>>2]=HEAP32[$1888+8>>2]|0;
                  HEAP32[$1888>>2] = 0;
                  $1891 = ((($1888)) + 4|0);
                  HEAP32[$1891>>2] = 0;
                  $1892 = ((($1888)) + 8|0);
                  HEAP32[$1892>>2] = 0;
                  __THREW__ = 0;
                  $1893 = (invoke_iii(392,($40|0),(16956|0))|0);
                  $1894 = __THREW__; __THREW__ = 0;
                  $1895 = $1894&1;
                  if ($1895) {
                   $1906 = ___cxa_find_matching_catch()|0;
                   $1907 = tempRet0;
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($40);
                   $$1$i241 = $1907;$$12$i240 = $1906;
                   break;
                  } else {
                   ;HEAP32[$39>>2]=HEAP32[$1893>>2]|0;HEAP32[$39+4>>2]=HEAP32[$1893+4>>2]|0;HEAP32[$39+8>>2]=HEAP32[$1893+8>>2]|0;
                   HEAP32[$1893>>2] = 0;
                   $1896 = ((($1893)) + 4|0);
                   HEAP32[$1896>>2] = 0;
                   $1897 = ((($1893)) + 8|0);
                   HEAP32[$1897>>2] = 0;
                   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($38,$39);
                   __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($1863,$38);
                   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($38);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($39);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($40);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($41);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($42);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($43);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($expr$i221);
                   $$06$i248 = $1847;
                   break L825;
                  }
                 }
                } while(0);
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($41);
                $$2$i243 = $$1$i241;$$23$i242 = $$12$i240;
               }
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($42);
               $$3$i245 = $$2$i243;$$34$i244 = $$23$i242;
              }
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($43);
              $$4$i247 = $$3$i245;$$45$i246 = $$34$i244;
             }
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($expr$i221);
             ___resumeException($$45$i246|0);
             // unreachable;
            }
           }
          }
         } else {
          $$06$i248 = $first;
         }
        } else {
         $$06$i248 = $first;
        }
       } else {
        $$06$i248 = $first;
       }
      } while(0);
      $$0 = $$06$i248;
      break L1;
      break;
     }
     case 109:  {
      $1908 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($137,18403,1);
      __THREW__ = 0;
      $1909 = (invoke_iiiii(408,($1908|0),($last|0),($137|0),($db|0))|0);
      $1910 = __THREW__; __THREW__ = 0;
      $1911 = $1910&1;
      if ($1911) {
       $1913 = ___cxa_find_matching_catch()|0;
       $1914 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($137);
       $$23 = $1913;$$2332 = $1914;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($137);
       $1912 = ($1909|0)==($1908|0);
       $first$68 = $1912 ? $first : $1909;
       $$0 = $first$68;
       break L1;
      }
      break;
     }
     case 77:  {
      $1915 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($138,18405,2);
      __THREW__ = 0;
      $1916 = (invoke_iiiii(408,($1915|0),($last|0),($138|0),($db|0))|0);
      $1917 = __THREW__; __THREW__ = 0;
      $1918 = $1917&1;
      if ($1918) {
       $1920 = ___cxa_find_matching_catch()|0;
       $1921 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($138);
       $$23 = $1920;$$2332 = $1921;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($138);
       $1919 = ($1916|0)==($1915|0);
       $first$69 = $1919 ? $first : $1916;
       $$0 = $first$69;
       break L1;
      }
      break;
     }
     case 115:  {
      $1922 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($139,18408,2);
      __THREW__ = 0;
      $1923 = (invoke_iiiii(408,($1922|0),($last|0),($139|0),($db|0))|0);
      $1924 = __THREW__; __THREW__ = 0;
      $1925 = $1924&1;
      if ($1925) {
       $1927 = ___cxa_find_matching_catch()|0;
       $1928 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($139);
       $$23 = $1927;$$2332 = $1928;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($139);
       $1926 = ($1923|0)==($1922|0);
       $first$70 = $1926 ? $first : $1923;
       $$0 = $first$70;
       break L1;
      }
      break;
     }
     case 83:  {
      $1929 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($140,18411,3);
      __THREW__ = 0;
      $1930 = (invoke_iiiii(408,($1929|0),($last|0),($140|0),($db|0))|0);
      $1931 = __THREW__; __THREW__ = 0;
      $1932 = $1931&1;
      if ($1932) {
       $1934 = ___cxa_find_matching_catch()|0;
       $1935 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($140);
       $$23 = $1934;$$2332 = $1935;
       break L7;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($140);
       $1933 = ($1930|0)==($1929|0);
       $first$71 = $1933 ? $first : $1930;
       STACKTOP = sp;return ($first$71|0);
      }
      break;
     }
     default: {
      $$0 = $first;
      break L1;
     }
     }
     break;
    }
    case 115:  {
     $1936 = ((($t$0)) + 1|0);
     $1937 = HEAP8[$1936>>0]|0;
     $1938 = $1937 << 24 >> 24;
     switch ($1938|0) {
     case 99:  {
      $1939 = ($144|0)>(2);
      L874: do {
       if ($1939) {
        $1940 = HEAP8[$first>>0]|0;
        $1941 = ($1940<<24>>24)==(115);
        if ($1941) {
         $1942 = ((($first)) + 1|0);
         $1943 = HEAP8[$1942>>0]|0;
         $1944 = ($1943<<24>>24)==(99);
         if ($1944) {
          $1945 = ((($first)) + 2|0);
          $1946 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($1945,$last,$db)|0);
          $1947 = ($1946|0)==($1945|0);
          if ($1947) {
           $$06$i = $first;
          } else {
           $1948 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1946,$last,$db)|0);
           $1949 = ($1948|0)==($1946|0);
           if ($1949) {
            $$06$i = $first;
           } else {
            $1950 = ((($db)) + 4|0);
            $1951 = HEAP32[$1950>>2]|0;
            $1952 = HEAP32[$db>>2]|0;
            $1953 = $1951;
            $1954 = $1952;
            $1955 = (($1953) - ($1954))|0;
            $1956 = (($1955|0) / 24)&-1;
            $1957 = ($1956>>>0)<(2);
            if ($1957) {
             $$06$i = $first;
            } else {
             $1958 = ((($1951)) + -24|0);
             __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($expr$i,$1958);
             $1959 = HEAP32[$1950>>2]|0;
             $1960 = ((($1959)) + -24|0);
             $1962 = $1959;
             while(1) {
              $1961 = ((($1962)) + -24|0);
              HEAP32[$1950>>2] = $1961;
              __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1961);
              $$pre$i$i212 = HEAP32[$1950>>2]|0;
              $1963 = ($$pre$i$i212|0)==($1960|0);
              if ($1963) {
               break;
              } else {
               $1962 = $$pre$i$i212;
              }
             }
             $1964 = ((($1959)) + -48|0);
             __THREW__ = 0;
             invoke_vii(396,($49|0),($1964|0));
             $1965 = __THREW__; __THREW__ = 0;
             $1966 = $1965&1;
             if ($1966) {
              $1999 = ___cxa_find_matching_catch()|0;
              $2000 = tempRet0;
              $$4$i = $2000;$$45$i = $1999;
             } else {
              __THREW__ = 0;
              $1967 = (invoke_iiii(391,($49|0),0,(18415|0))|0);
              $1968 = __THREW__; __THREW__ = 0;
              $1969 = $1968&1;
              if ($1969) {
               $2001 = ___cxa_find_matching_catch()|0;
               $2002 = tempRet0;
               $$3$i = $2002;$$34$i = $2001;
              } else {
               ;HEAP32[$48>>2]=HEAP32[$1967>>2]|0;HEAP32[$48+4>>2]=HEAP32[$1967+4>>2]|0;HEAP32[$48+8>>2]=HEAP32[$1967+8>>2]|0;
               HEAP32[$1967>>2] = 0;
               $1970 = ((($1967)) + 4|0);
               HEAP32[$1970>>2] = 0;
               $1971 = ((($1967)) + 8|0);
               HEAP32[$1971>>2] = 0;
               __THREW__ = 0;
               $1972 = (invoke_iii(392,($48|0),(18236|0))|0);
               $1973 = __THREW__; __THREW__ = 0;
               $1974 = $1973&1;
               if ($1974) {
                $2003 = ___cxa_find_matching_catch()|0;
                $2004 = tempRet0;
                $$2$i = $2004;$$23$i = $2003;
               } else {
                ;HEAP32[$47>>2]=HEAP32[$1972>>2]|0;HEAP32[$47+4>>2]=HEAP32[$1972+4>>2]|0;HEAP32[$47+8>>2]=HEAP32[$1972+8>>2]|0;
                HEAP32[$1972>>2] = 0;
                $1975 = ((($1972)) + 4|0);
                HEAP32[$1975>>2] = 0;
                $1976 = ((($1972)) + 8|0);
                HEAP32[$1976>>2] = 0;
                $1977 = HEAP8[$expr$i>>0]|0;
                $1978 = $1977 & 1;
                $1979 = ($1978<<24>>24)==(0);
                $1980 = ((($expr$i)) + 8|0);
                $1981 = HEAP32[$1980>>2]|0;
                $1982 = ((($expr$i)) + 1|0);
                $1983 = $1979 ? $1982 : $1981;
                $1984 = ((($expr$i)) + 4|0);
                $1985 = HEAP32[$1984>>2]|0;
                $1986 = $1977&255;
                $1987 = $1986 >>> 1;
                $1988 = $1979 ? $1987 : $1985;
                __THREW__ = 0;
                $1989 = (invoke_iiii(387,($47|0),($1983|0),($1988|0))|0);
                $1990 = __THREW__; __THREW__ = 0;
                $1991 = $1990&1;
                do {
                 if ($1991) {
                  $2005 = ___cxa_find_matching_catch()|0;
                  $2006 = tempRet0;
                  $$1$i220 = $2006;$$12$i219 = $2005;
                 } else {
                  ;HEAP32[$46>>2]=HEAP32[$1989>>2]|0;HEAP32[$46+4>>2]=HEAP32[$1989+4>>2]|0;HEAP32[$46+8>>2]=HEAP32[$1989+8>>2]|0;
                  HEAP32[$1989>>2] = 0;
                  $1992 = ((($1989)) + 4|0);
                  HEAP32[$1992>>2] = 0;
                  $1993 = ((($1989)) + 8|0);
                  HEAP32[$1993>>2] = 0;
                  __THREW__ = 0;
                  $1994 = (invoke_iii(392,($46|0),(16956|0))|0);
                  $1995 = __THREW__; __THREW__ = 0;
                  $1996 = $1995&1;
                  if ($1996) {
                   $2007 = ___cxa_find_matching_catch()|0;
                   $2008 = tempRet0;
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($46);
                   $$1$i220 = $2008;$$12$i219 = $2007;
                   break;
                  } else {
                   ;HEAP32[$45>>2]=HEAP32[$1994>>2]|0;HEAP32[$45+4>>2]=HEAP32[$1994+4>>2]|0;HEAP32[$45+8>>2]=HEAP32[$1994+8>>2]|0;
                   HEAP32[$1994>>2] = 0;
                   $1997 = ((($1994)) + 4|0);
                   HEAP32[$1997>>2] = 0;
                   $1998 = ((($1994)) + 8|0);
                   HEAP32[$1998>>2] = 0;
                   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($44,$45);
                   __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($1964,$44);
                   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($44);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($45);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($46);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($47);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($48);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($49);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($expr$i);
                   $$06$i = $1948;
                   break L874;
                  }
                 }
                } while(0);
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($47);
                $$2$i = $$1$i220;$$23$i = $$12$i219;
               }
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($48);
               $$3$i = $$2$i;$$34$i = $$23$i;
              }
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($49);
              $$4$i = $$3$i;$$45$i = $$34$i;
             }
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($expr$i);
             ___resumeException($$45$i|0);
             // unreachable;
            }
           }
          }
         } else {
          $$06$i = $first;
         }
        } else {
         $$06$i = $first;
        }
       } else {
        $$06$i = $first;
       }
      } while(0);
      $$0 = $$06$i;
      break L1;
      break;
     }
     case 112:  {
      $2009 = ($144|0)>(2);
      if (!($2009)) {
       $$0 = $first;
       break L1;
      }
      $2010 = HEAP8[$first>>0]|0;
      $2011 = ($2010<<24>>24)==(115);
      if (!($2011)) {
       $$0 = $first;
       break L1;
      }
      $2012 = ((($first)) + 1|0);
      $2013 = HEAP8[$2012>>0]|0;
      $2014 = ($2013<<24>>24)==(112);
      if (!($2014)) {
       $$0 = $first;
       break L1;
      }
      $2015 = ((($first)) + 2|0);
      $2016 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($2015,$last,$db)|0);
      $2017 = ($2016|0)==($2015|0);
      $first$$i = $2017 ? $first : $2016;
      $$0 = $first$$i;
      break L1;
      break;
     }
     case 114:  {
      $2018 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
      $$0 = $2018;
      break L1;
      break;
     }
     case 116:  {
      $2019 = ($144|0)>(2);
      L910: do {
       if ($2019) {
        $2020 = HEAP8[$first>>0]|0;
        $2021 = ($2020<<24>>24)==(115);
        if ($2021) {
         $2022 = ((($first)) + 1|0);
         $2023 = HEAP8[$2022>>0]|0;
         $2024 = ($2023<<24>>24)==(116);
         if ($2024) {
          $2025 = ((($first)) + 2|0);
          $2026 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($2025,$last,$db)|0);
          $2027 = ($2026|0)==($2025|0);
          if ($2027) {
           $$03$i211 = $first;
          } else {
           $2028 = HEAP32[$db>>2]|0;
           $2029 = ((($db)) + 4|0);
           $2030 = HEAP32[$2029>>2]|0;
           $2031 = ($2028|0)==($2030|0);
           if ($2031) {
            $$03$i211 = $first;
           } else {
            $2032 = ((($2030)) + -24|0);
            __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($53,$2032);
            __THREW__ = 0;
            $2033 = (invoke_iiii(391,($53|0),0,(18428|0))|0);
            $2034 = __THREW__; __THREW__ = 0;
            $2035 = $2034&1;
            do {
             if ($2035) {
              $2043 = ___cxa_find_matching_catch()|0;
              $2044 = tempRet0;
              $$1$i210 = $2044;$$12$i209 = $2043;
             } else {
              ;HEAP32[$52>>2]=HEAP32[$2033>>2]|0;HEAP32[$52+4>>2]=HEAP32[$2033+4>>2]|0;HEAP32[$52+8>>2]=HEAP32[$2033+8>>2]|0;
              HEAP32[$2033>>2] = 0;
              $2036 = ((($2033)) + 4|0);
              HEAP32[$2036>>2] = 0;
              $2037 = ((($2033)) + 8|0);
              HEAP32[$2037>>2] = 0;
              __THREW__ = 0;
              $2038 = (invoke_iii(392,($52|0),(16956|0))|0);
              $2039 = __THREW__; __THREW__ = 0;
              $2040 = $2039&1;
              if ($2040) {
               $2045 = ___cxa_find_matching_catch()|0;
               $2046 = tempRet0;
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($52);
               $$1$i210 = $2046;$$12$i209 = $2045;
               break;
              } else {
               ;HEAP32[$51>>2]=HEAP32[$2038>>2]|0;HEAP32[$51+4>>2]=HEAP32[$2038+4>>2]|0;HEAP32[$51+8>>2]=HEAP32[$2038+8>>2]|0;
               HEAP32[$2038>>2] = 0;
               $2041 = ((($2038)) + 4|0);
               HEAP32[$2041>>2] = 0;
               $2042 = ((($2038)) + 8|0);
               HEAP32[$2042>>2] = 0;
               __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($50,$51);
               __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($2032,$50);
               __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($50);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($51);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($52);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($53);
               $$03$i211 = $2026;
               break L910;
              }
             }
            } while(0);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($53);
            ___resumeException($$12$i209|0);
            // unreachable;
           }
          }
         } else {
          $$03$i211 = $first;
         }
        } else {
         $$03$i211 = $first;
        }
       } else {
        $$03$i211 = $first;
       }
      } while(0);
      $$0 = $$03$i211;
      break L1;
      break;
     }
     case 122:  {
      $2047 = ($144|0)>(2);
      L925: do {
       if ($2047) {
        $2048 = HEAP8[$first>>0]|0;
        $2049 = ($2048<<24>>24)==(115);
        if ($2049) {
         $2050 = ((($first)) + 1|0);
         $2051 = HEAP8[$2050>>0]|0;
         $2052 = ($2051<<24>>24)==(122);
         if ($2052) {
          $2053 = ((($first)) + 2|0);
          $2054 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($2053,$last,$db)|0);
          $2055 = ($2054|0)==($2053|0);
          if ($2055) {
           $$03$i200 = $first;
          } else {
           $2056 = HEAP32[$db>>2]|0;
           $2057 = ((($db)) + 4|0);
           $2058 = HEAP32[$2057>>2]|0;
           $2059 = ($2056|0)==($2058|0);
           if ($2059) {
            $$03$i200 = $first;
           } else {
            $2060 = ((($2058)) + -24|0);
            __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($57,$2060);
            __THREW__ = 0;
            $2061 = (invoke_iiii(391,($57|0),0,(18428|0))|0);
            $2062 = __THREW__; __THREW__ = 0;
            $2063 = $2062&1;
            do {
             if ($2063) {
              $2071 = ___cxa_find_matching_catch()|0;
              $2072 = tempRet0;
              $$1$i199 = $2072;$$12$i198 = $2071;
             } else {
              ;HEAP32[$56>>2]=HEAP32[$2061>>2]|0;HEAP32[$56+4>>2]=HEAP32[$2061+4>>2]|0;HEAP32[$56+8>>2]=HEAP32[$2061+8>>2]|0;
              HEAP32[$2061>>2] = 0;
              $2064 = ((($2061)) + 4|0);
              HEAP32[$2064>>2] = 0;
              $2065 = ((($2061)) + 8|0);
              HEAP32[$2065>>2] = 0;
              __THREW__ = 0;
              $2066 = (invoke_iii(392,($56|0),(16956|0))|0);
              $2067 = __THREW__; __THREW__ = 0;
              $2068 = $2067&1;
              if ($2068) {
               $2073 = ___cxa_find_matching_catch()|0;
               $2074 = tempRet0;
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($56);
               $$1$i199 = $2074;$$12$i198 = $2073;
               break;
              } else {
               ;HEAP32[$55>>2]=HEAP32[$2066>>2]|0;HEAP32[$55+4>>2]=HEAP32[$2066+4>>2]|0;HEAP32[$55+8>>2]=HEAP32[$2066+8>>2]|0;
               HEAP32[$2066>>2] = 0;
               $2069 = ((($2066)) + 4|0);
               HEAP32[$2069>>2] = 0;
               $2070 = ((($2066)) + 8|0);
               HEAP32[$2070>>2] = 0;
               __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($54,$55);
               __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($2060,$54);
               __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($54);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($55);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($56);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($57);
               $$03$i200 = $2054;
               break L925;
              }
             }
            } while(0);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($57);
            ___resumeException($$12$i198|0);
            // unreachable;
           }
          }
         } else {
          $$03$i200 = $first;
         }
        } else {
         $$03$i200 = $first;
        }
       } else {
        $$03$i200 = $first;
       }
      } while(0);
      $$0 = $$03$i200;
      break L1;
      break;
     }
     case 90:  {
      $2075 = $t$0;
      $2076 = (($142) - ($2075))|0;
      $2077 = ($2076|0)>(2);
      if (!($2077)) {
       $$0 = $first;
       break L1;
      }
      $2078 = ((($t$0)) + 2|0);
      $2079 = HEAP8[$2078>>0]|0;
      $2080 = $2079 << 24 >> 24;
      switch ($2080|0) {
      case 84:  {
       break;
      }
      case 102:  {
       $2199 = ($144|0)>(2);
       L943: do {
        if ($2199) {
         $2200 = HEAP8[$first>>0]|0;
         $2201 = ($2200<<24>>24)==(115);
         if ($2201) {
          $2202 = ((($first)) + 1|0);
          $2203 = HEAP8[$2202>>0]|0;
          $2204 = ($2203<<24>>24)==(90);
          if ($2204) {
           $2205 = ((($first)) + 2|0);
           $2206 = HEAP8[$2205>>0]|0;
           $2207 = ($2206<<24>>24)==(102);
           if ($2207) {
            $2208 = (__ZN10__cxxabiv112_GLOBAL__N_120parse_function_paramINS0_2DbEEEPKcS4_S4_RT_($2205,$last,$db)|0);
            $2209 = ($2208|0)==($2205|0);
            if ($2209) {
             $$03$i174 = $first;
            } else {
             $2210 = HEAP32[$db>>2]|0;
             $2211 = ((($db)) + 4|0);
             $2212 = HEAP32[$2211>>2]|0;
             $2213 = ($2210|0)==($2212|0);
             if ($2213) {
              $$03$i174 = $first;
             } else {
              $2214 = ((($2212)) + -24|0);
              __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($68,$2214);
              __THREW__ = 0;
              $2215 = (invoke_iiii(391,($68|0),0,(18437|0))|0);
              $2216 = __THREW__; __THREW__ = 0;
              $2217 = $2216&1;
              do {
               if ($2217) {
                $2225 = ___cxa_find_matching_catch()|0;
                $2226 = tempRet0;
                $$1$i173 = $2226;$$12$i172 = $2225;
               } else {
                ;HEAP32[$67>>2]=HEAP32[$2215>>2]|0;HEAP32[$67+4>>2]=HEAP32[$2215+4>>2]|0;HEAP32[$67+8>>2]=HEAP32[$2215+8>>2]|0;
                HEAP32[$2215>>2] = 0;
                $2218 = ((($2215)) + 4|0);
                HEAP32[$2218>>2] = 0;
                $2219 = ((($2215)) + 8|0);
                HEAP32[$2219>>2] = 0;
                __THREW__ = 0;
                $2220 = (invoke_iii(392,($67|0),(16956|0))|0);
                $2221 = __THREW__; __THREW__ = 0;
                $2222 = $2221&1;
                if ($2222) {
                 $2227 = ___cxa_find_matching_catch()|0;
                 $2228 = tempRet0;
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($67);
                 $$1$i173 = $2228;$$12$i172 = $2227;
                 break;
                } else {
                 ;HEAP32[$66>>2]=HEAP32[$2220>>2]|0;HEAP32[$66+4>>2]=HEAP32[$2220+4>>2]|0;HEAP32[$66+8>>2]=HEAP32[$2220+8>>2]|0;
                 HEAP32[$2220>>2] = 0;
                 $2223 = ((($2220)) + 4|0);
                 HEAP32[$2223>>2] = 0;
                 $2224 = ((($2220)) + 8|0);
                 HEAP32[$2224>>2] = 0;
                 __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($65,$66);
                 __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($2214,$65);
                 __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($65);
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($66);
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($67);
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($68);
                 $$03$i174 = $2208;
                 break L943;
                }
               }
              } while(0);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($68);
              ___resumeException($$12$i172|0);
              // unreachable;
             }
            }
           } else {
            $$03$i174 = $first;
           }
          } else {
           $$03$i174 = $first;
          }
         } else {
          $$03$i174 = $first;
         }
        } else {
         $$03$i174 = $first;
        }
       } while(0);
       $$0 = $$03$i174;
       break L1;
       break;
      }
      default: {
       $$0 = $first;
       break L1;
      }
      }
      $2081 = ($144|0)>(2);
      L959: do {
       if ($2081) {
        $2082 = HEAP8[$first>>0]|0;
        $2083 = ($2082<<24>>24)==(115);
        if ($2083) {
         $2084 = ((($first)) + 1|0);
         $2085 = HEAP8[$2084>>0]|0;
         $2086 = ($2085<<24>>24)==(90);
         if ($2086) {
          $2087 = ((($first)) + 2|0);
          $2088 = HEAP8[$2087>>0]|0;
          $2089 = ($2088<<24>>24)==(84);
          if ($2089) {
           $2090 = ((($db)) + 4|0);
           $2091 = HEAP32[$2090>>2]|0;
           $2092 = HEAP32[$db>>2]|0;
           $2093 = $2091;
           $2094 = $2092;
           $2095 = (($2093) - ($2094))|0;
           $2096 = (($2095|0) / 24)&-1;
           $2097 = (__ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($2087,$last,$db)|0);
           $2098 = HEAP32[$2090>>2]|0;
           $2099 = HEAP32[$db>>2]|0;
           $2100 = $2098;
           $2101 = $2099;
           $2102 = (($2100) - ($2101))|0;
           $2103 = (($2102|0) / 24)&-1;
           $2104 = ($2097|0)==($2087|0);
           if ($2104) {
            $$03$i = $first;
           } else {
            HEAP8[$tmp$i>>0] = 20;
            $2105 = ((($tmp$i)) + 1|0);
            dest=$2105; src=18437; stop=dest+10|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
            $2106 = ((($tmp$i)) + 11|0);
            HEAP8[$2106>>0] = 0;
            $2107 = ($2096|0)==($2103|0);
            L965: do {
             if ($2107) {
              label = 727;
             } else {
              $2108 = (($2099) + (($2096*24)|0)|0);
              __THREW__ = 0;
              invoke_vii(396,($69|0),($2108|0));
              $2109 = __THREW__; __THREW__ = 0;
              $2110 = $2109&1;
              if ($2110) {
               label = 721;
              } else {
               $2111 = HEAP8[$69>>0]|0;
               $2112 = $2111 & 1;
               $2113 = ($2112<<24>>24)==(0);
               $2114 = ((($69)) + 8|0);
               $2115 = HEAP32[$2114>>2]|0;
               $2116 = ((($69)) + 1|0);
               $2117 = $2113 ? $2116 : $2115;
               $2118 = ((($69)) + 4|0);
               $2119 = HEAP32[$2118>>2]|0;
               $2120 = $2111&255;
               $2121 = $2120 >>> 1;
               $2122 = $2113 ? $2121 : $2119;
               __THREW__ = 0;
               (invoke_iiii(387,($tmp$i|0),($2117|0),($2122|0))|0);
               $2123 = __THREW__; __THREW__ = 0;
               $2124 = $2123&1;
               if ($2124) {
                $2154 = ___cxa_find_matching_catch()|0;
                $2155 = tempRet0;
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($69);
                $$1$i = $2155;$$12$i = $2154;
                break;
               }
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($69);
               $2125 = ((($70)) + 8|0);
               $2126 = ((($70)) + 1|0);
               $2127 = ((($70)) + 4|0);
               $k$0$i621 = (($2096) + 1)|0;
               $2128 = ($k$0$i621|0)==($2103|0);
               if ($2128) {
                label = 727;
               } else {
                $k$0$i622 = $k$0$i621;
                while(1) {
                 $2129 = HEAP32[$db>>2]|0;
                 $2130 = (($2129) + (($k$0$i622*24)|0)|0);
                 __THREW__ = 0;
                 invoke_vii(396,($71|0),($2130|0));
                 $2131 = __THREW__; __THREW__ = 0;
                 $2132 = $2131&1;
                 if ($2132) {
                  label = 720;
                  break;
                 }
                 __THREW__ = 0;
                 $2133 = (invoke_iiii(391,($71|0),0,(17053|0))|0);
                 $2134 = __THREW__; __THREW__ = 0;
                 $2135 = $2134&1;
                 if ($2135) {
                  label = 724;
                  break;
                 }
                 ;HEAP32[$70>>2]=HEAP32[$2133>>2]|0;HEAP32[$70+4>>2]=HEAP32[$2133+4>>2]|0;HEAP32[$70+8>>2]=HEAP32[$2133+8>>2]|0;
                 HEAP32[$2133>>2] = 0;
                 $2136 = ((($2133)) + 4|0);
                 HEAP32[$2136>>2] = 0;
                 $2137 = ((($2133)) + 8|0);
                 HEAP32[$2137>>2] = 0;
                 $2138 = HEAP8[$70>>0]|0;
                 $2139 = $2138 & 1;
                 $2140 = ($2139<<24>>24)==(0);
                 $2141 = HEAP32[$2125>>2]|0;
                 $2142 = $2140 ? $2126 : $2141;
                 $2143 = HEAP32[$2127>>2]|0;
                 $2144 = $2138&255;
                 $2145 = $2144 >>> 1;
                 $2146 = $2140 ? $2145 : $2143;
                 __THREW__ = 0;
                 (invoke_iiii(387,($tmp$i|0),($2142|0),($2146|0))|0);
                 $2147 = __THREW__; __THREW__ = 0;
                 $2148 = $2147&1;
                 if ($2148) {
                  label = 725;
                  break;
                 }
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($70);
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($71);
                 $k$0$i = (($k$0$i622) + 1)|0;
                 $2149 = ($k$0$i|0)==($2103|0);
                 if ($2149) {
                  label = 727;
                  break L965;
                 } else {
                  $k$0$i622 = $k$0$i;
                 }
                }
                if ((label|0) == 720) {
                 $2150 = ___cxa_find_matching_catch()|0;
                 $2151 = tempRet0;
                 $lpad$phi$i$index = $2150;$lpad$phi$i$index2 = $2151;
                 label = 722;
                 break;
                }
                else if ((label|0) == 724) {
                 $2156 = ___cxa_find_matching_catch()|0;
                 $2157 = tempRet0;
                 $$0$i = $2157;$$01$i = $2156;
                }
                else if ((label|0) == 725) {
                 $2158 = ___cxa_find_matching_catch()|0;
                 $2159 = tempRet0;
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($70);
                 $$0$i = $2159;$$01$i = $2158;
                }
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($71);
                $$1$i = $$0$i;$$12$i = $$01$i;
               }
              }
             }
            } while(0);
            do {
             if ((label|0) == 727) {
              __THREW__ = 0;
              (invoke_iii(392,($tmp$i|0),(16956|0))|0);
              $2160 = __THREW__; __THREW__ = 0;
              $2161 = $2160&1;
              if ($2161) {
               label = 721;
              } else {
               $2162 = ($2103|0)==($2096|0);
               if (!($2162)) {
                $k1$0$i618 = $2103;
                while(1) {
                 $2163 = HEAP32[$2090>>2]|0;
                 $2164 = ((($2163)) + -24|0);
                 $2166 = $2163;
                 while(1) {
                  $2165 = ((($2166)) + -24|0);
                  HEAP32[$2090>>2] = $2165;
                  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2165);
                  $$pre$i$i = HEAP32[$2090>>2]|0;
                  $2167 = ($$pre$i$i|0)==($2164|0);
                  if ($2167) {
                   break;
                  } else {
                   $2166 = $$pre$i$i;
                  }
                 }
                 $2168 = (($k1$0$i618) + -1)|0;
                 $2169 = ($2168|0)==($2096|0);
                 if ($2169) {
                  break;
                 } else {
                  $k1$0$i618 = $2168;
                 }
                }
               }
               ;HEAP32[$73>>2]=HEAP32[$tmp$i>>2]|0;HEAP32[$73+4>>2]=HEAP32[$tmp$i+4>>2]|0;HEAP32[$73+8>>2]=HEAP32[$tmp$i+8>>2]|0;
               HEAP32[$tmp$i>>2] = 0;
               $2170 = ((($tmp$i)) + 4|0);
               HEAP32[$2170>>2] = 0;
               $2171 = ((($tmp$i)) + 8|0);
               HEAP32[$2171>>2] = 0;
               __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($72,$73);
               $2172 = HEAP32[$2090>>2]|0;
               $2173 = ((($db)) + 8|0);
               $2174 = HEAP32[$2173>>2]|0;
               $2175 = ($2172>>>0)<($2174>>>0);
               if ($2175) {
                __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($2172,$72);
                $2176 = HEAP32[$2090>>2]|0;
                $2177 = ((($2176)) + 24|0);
                HEAP32[$2090>>2] = $2177;
               } else {
                $2178 = ((($db)) + 12|0);
                $2179 = HEAP32[$db>>2]|0;
                $2180 = $2172;
                $2181 = $2179;
                $2182 = (($2180) - ($2181))|0;
                $2183 = (($2182|0) / 24)&-1;
                $2184 = (($2183) + 1)|0;
                $2185 = ($2182|0)<(-24);
                if ($2185) {
                 __THREW__ = 0;
                 invoke_vi(402,($db|0));
                 $2186 = __THREW__; __THREW__ = 0;
                 $2187 = ___cxa_find_matching_catch()|0;
                 $2188 = tempRet0;
                 __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($72);
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($73);
                 $$1$i = $2188;$$12$i = $2187;
                 break;
                }
                $2189 = $2174;
                $2190 = (($2189) - ($2181))|0;
                $2191 = (($2190|0) / 24)&-1;
                $2192 = ($2191>>>0)<(1073741823);
                if ($2192) {
                 $2193 = $2191 << 1;
                 $2194 = ($2193>>>0)<($2184>>>0);
                 $2195 = $2194 ? $2184 : $2193;
                 $$0$i$i$i$i = $2195;
                } else {
                 $$0$i$i$i$i = 2147483647;
                }
                __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i$i,$$0$i$i$i$i,$2183,$2178);
                $2196 = ((($__v$i$i$i)) + 8|0);
                $2197 = HEAP32[$2196>>2]|0;
                __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($2197,$72);
                $2198 = ((($2197)) + 24|0);
                HEAP32[$2196>>2] = $2198;
                __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i$i);
                __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i$i);
               }
               __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($72);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($73);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp$i);
               $$03$i = $2097;
               break L959;
              }
             }
            } while(0);
            if ((label|0) == 721) {
             $2152 = ___cxa_find_matching_catch()|0;
             $2153 = tempRet0;
             $lpad$phi$i$index = $2152;$lpad$phi$i$index2 = $2153;
             label = 722;
            }
            if ((label|0) == 722) {
             $$1$i = $lpad$phi$i$index2;$$12$i = $lpad$phi$i$index;
            }
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp$i);
            ___resumeException($$12$i|0);
            // unreachable;
           }
          } else {
           $$03$i = $first;
          }
         } else {
          $$03$i = $first;
         }
        } else {
         $$03$i = $first;
        }
       } else {
        $$03$i = $first;
       }
      } while(0);
      $$0 = $$03$i;
      break L1;
      break;
     }
     default: {
      $$0 = $first;
      break L1;
     }
     }
     break;
    }
    case 116:  {
     $2229 = ((($t$0)) + 1|0);
     $2230 = HEAP8[$2229>>0]|0;
     $2231 = $2230 << 24 >> 24;
     switch ($2231|0) {
     case 105: case 101:  {
      $2232 = ($144|0)>(2);
      L1010: do {
       if ($2232) {
        $2233 = HEAP8[$first>>0]|0;
        $2234 = ($2233<<24>>24)==(116);
        if ($2234) {
         $2235 = ((($first)) + 1|0);
         $2236 = HEAP8[$2235>>0]|0;
         switch ($2236<<24>>24) {
         case 105: case 101:  {
          break;
         }
         default: {
          $$03$i189 = $first;
          break L1010;
         }
         }
         $2237 = ($2236<<24>>24)==(101);
         $2238 = ((($first)) + 2|0);
         if ($2237) {
          $2239 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($2238,$last,$db)|0);
          $t$0$i = $2239;
         } else {
          $2240 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($2238,$last,$db)|0);
          $t$0$i = $2240;
         }
         $2241 = ($t$0$i|0)==($2238|0);
         if ($2241) {
          $$03$i189 = $first;
         } else {
          $2242 = HEAP32[$db>>2]|0;
          $2243 = ((($db)) + 4|0);
          $2244 = HEAP32[$2243>>2]|0;
          $2245 = ($2242|0)==($2244|0);
          if ($2245) {
           $$03$i189 = $first;
          } else {
           $2246 = ((($2244)) + -24|0);
           __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($61,$2246);
           __THREW__ = 0;
           $2247 = (invoke_iiii(391,($61|0),0,(18448|0))|0);
           $2248 = __THREW__; __THREW__ = 0;
           $2249 = $2248&1;
           do {
            if ($2249) {
             $2257 = ___cxa_find_matching_catch()|0;
             $2258 = tempRet0;
             $$1$i188 = $2258;$$12$i187 = $2257;
            } else {
             ;HEAP32[$60>>2]=HEAP32[$2247>>2]|0;HEAP32[$60+4>>2]=HEAP32[$2247+4>>2]|0;HEAP32[$60+8>>2]=HEAP32[$2247+8>>2]|0;
             HEAP32[$2247>>2] = 0;
             $2250 = ((($2247)) + 4|0);
             HEAP32[$2250>>2] = 0;
             $2251 = ((($2247)) + 8|0);
             HEAP32[$2251>>2] = 0;
             __THREW__ = 0;
             $2252 = (invoke_iii(392,($60|0),(16956|0))|0);
             $2253 = __THREW__; __THREW__ = 0;
             $2254 = $2253&1;
             if ($2254) {
              $2259 = ___cxa_find_matching_catch()|0;
              $2260 = tempRet0;
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($60);
              $$1$i188 = $2260;$$12$i187 = $2259;
              break;
             } else {
              ;HEAP32[$59>>2]=HEAP32[$2252>>2]|0;HEAP32[$59+4>>2]=HEAP32[$2252+4>>2]|0;HEAP32[$59+8>>2]=HEAP32[$2252+8>>2]|0;
              HEAP32[$2252>>2] = 0;
              $2255 = ((($2252)) + 4|0);
              HEAP32[$2255>>2] = 0;
              $2256 = ((($2252)) + 8|0);
              HEAP32[$2256>>2] = 0;
              __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($58,$59);
              __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($2246,$58);
              __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($58);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($59);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($60);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($61);
              $$03$i189 = $t$0$i;
              break L1010;
             }
            }
           } while(0);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($61);
           ___resumeException($$12$i187|0);
           // unreachable;
          }
         }
        } else {
         $$03$i189 = $first;
        }
       } else {
        $$03$i189 = $first;
       }
      } while(0);
      $$0 = $$03$i189;
      break L1;
      break;
     }
     case 114:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj6EEERAT__Kc($141,18456);
      $2261 = ((($db)) + 4|0);
      $2262 = HEAP32[$2261>>2]|0;
      $2263 = ((($db)) + 8|0);
      $2264 = HEAP32[$2263>>2]|0;
      $2265 = ($2262>>>0)<($2264>>>0);
      if ($2265) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($2262,$141);
       $2266 = HEAP32[$2261>>2]|0;
       $2267 = ((($2266)) + 24|0);
       HEAP32[$2261>>2] = $2267;
      } else {
       $2268 = ((($db)) + 12|0);
       $2269 = HEAP32[$db>>2]|0;
       $2270 = $2262;
       $2271 = $2269;
       $2272 = (($2270) - ($2271))|0;
       $2273 = (($2272|0) / 24)&-1;
       $2274 = (($2273) + 1)|0;
       $2275 = ($2272|0)<(-24);
       if ($2275) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $2276 = __THREW__; __THREW__ = 0;
        $2277 = ___cxa_find_matching_catch()|0;
        $2278 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($141);
        $$23 = $2277;$$2332 = $2278;
        break L7;
       }
       $2279 = $2264;
       $2280 = (($2279) - ($2271))|0;
       $2281 = (($2280|0) / 24)&-1;
       $2282 = ($2281>>>0)<(1073741823);
       if ($2282) {
        $2283 = $2281 << 1;
        $2284 = ($2283>>>0)<($2274>>>0);
        $2285 = $2284 ? $2274 : $2283;
        $$0$i$i$i = $2285;
       } else {
        $$0$i$i$i = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i,$$0$i$i$i,$2273,$2268);
       $2286 = ((($__v$i$i)) + 8|0);
       $2287 = HEAP32[$2286>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($2287,$141);
       $2288 = ((($2287)) + 24|0);
       HEAP32[$2286>>2] = $2288;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($141);
      $2289 = ((($first)) + 2|0);
      $$0 = $2289;
      break L1;
      break;
     }
     case 119:  {
      $2290 = ($144|0)>(2);
      do {
       if ($2290) {
        $2291 = HEAP8[$first>>0]|0;
        $2292 = ($2291<<24>>24)==(116);
        if ($2292) {
         $2293 = ((($first)) + 1|0);
         $2294 = HEAP8[$2293>>0]|0;
         $2295 = ($2294<<24>>24)==(119);
         if ($2295) {
          $2296 = ((($first)) + 2|0);
          $2297 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($2296,$last,$db)|0);
          $2298 = ($2297|0)==($2296|0);
          if ($2298) {
           $$02$i = $first;
          } else {
           $2299 = HEAP32[$db>>2]|0;
           $2300 = ((($db)) + 4|0);
           $2301 = HEAP32[$2300>>2]|0;
           $2302 = ($2299|0)==($2301|0);
           if ($2302) {
            $$02$i = $first;
           } else {
            $2303 = ((($2301)) + -24|0);
            __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($64,$2303);
            __THREW__ = 0;
            $2304 = (invoke_iiii(391,($64|0),0,(18462|0))|0);
            $2305 = __THREW__; __THREW__ = 0;
            $2306 = $2305&1;
            if ($2306) {
             $2309 = ___cxa_find_matching_catch()|0;
             $2310 = tempRet0;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($64);
             ___resumeException($2309|0);
             // unreachable;
            } else {
             ;HEAP32[$63>>2]=HEAP32[$2304>>2]|0;HEAP32[$63+4>>2]=HEAP32[$2304+4>>2]|0;HEAP32[$63+8>>2]=HEAP32[$2304+8>>2]|0;
             HEAP32[$2304>>2] = 0;
             $2307 = ((($2304)) + 4|0);
             HEAP32[$2307>>2] = 0;
             $2308 = ((($2304)) + 8|0);
             HEAP32[$2308>>2] = 0;
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($62,$63);
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($2303,$62);
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($62);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($63);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($64);
             $$02$i = $2297;
             break;
            }
           }
          }
         } else {
          $$02$i = $first;
         }
        } else {
         $$02$i = $first;
        }
       } else {
        $$02$i = $first;
       }
      } while(0);
      $$0 = $$02$i;
      break L1;
      break;
     }
     default: {
      $$0 = $first;
      break L1;
     }
     }
     break;
    }
    case 57: case 56: case 55: case 54: case 53: case 52: case 51: case 50: case 49:  {
     $2311 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
     $$0 = $2311;
     break L1;
     break;
    }
    default: {
     $$0 = $first;
     break L1;
    }
    }
   } while(0);
   ___resumeException($$23|0);
   // unreachable;
  } else {
   $$0 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$this>>2]=HEAP32[$0>>2]|0;HEAP32[$this+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$this+8>>2]=HEAP32[$0+8>>2]|0;
 HEAP32[$0>>2] = 0;
 $1 = ((($0)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = ((($this)) + 12|0);
 $4 = ((($0)) + 12|0);
 ;HEAP32[$3>>2]=HEAP32[$4>>2]|0;HEAP32[$3+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$3+8>>2]=HEAP32[$4+8>>2]|0;
 HEAP32[$4>>2] = 0;
 $5 = ((($4)) + 4|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($4)) + 8|0);
 HEAP32[$6>>2] = 0;
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 $4 = ((($this)) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($0)) + 1|0);
 $7 = $3 ? $6 : $5;
 $8 = ((($this)) + 16|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $1&255;
 $11 = $10 >>> 1;
 $12 = $3 ? $11 : $9;
 $13 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($this,$7,$12)|0);
 ;HEAP32[$agg$result>>2]=HEAP32[$13>>2]|0;HEAP32[$agg$result+4>>2]=HEAP32[$13+4>>2]|0;HEAP32[$agg$result+8>>2]=HEAP32[$13+8>>2]|0;
 HEAP32[$13>>2] = 0;
 $14 = ((($13)) + 4|0);
 HEAP32[$14>>2] = 0;
 $15 = ((($13)) + 8|0);
 HEAP32[$15>>2] = 0;
 return;
}
function __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($this,$__x,$__a) {
 $this = $this|0;
 $__x = $__x|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$__a>>2]|0;
 HEAP32[$1>>2] = 0;
 $3 = ((($this)) + 12|0);
 HEAP32[$3>>2] = $2;
 $4 = $2;
 $5 = (__ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8allocateEj($4,24)|0);
 HEAP32[$0>>2] = $5;
 HEAP32[$this>>2] = $5;
 $6 = ((($5)) + 24|0);
 $7 = ((($this)) + 8|0);
 HEAP32[$7>>2] = $6;
 __THREW__ = 0;
 invoke_vii(400,($5|0),($__x|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 do {
  if ($9) {
   $16 = ___cxa_find_matching_catch()|0;
   $17 = tempRet0;
   $eh$lpad$body$index2Z2D = $17;$eh$lpad$body$indexZ2D = $16;
  } else {
   $10 = ((($5)) + 12|0);
   $11 = ((($__x)) + 12|0);
   __THREW__ = 0;
   invoke_vii(400,($10|0),($11|0));
   $12 = __THREW__; __THREW__ = 0;
   $13 = $12&1;
   if ($13) {
    $14 = ___cxa_find_matching_catch()|0;
    $15 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    $eh$lpad$body$index2Z2D = $15;$eh$lpad$body$indexZ2D = $14;
    break;
   } else {
    $18 = HEAP32[$0>>2]|0;
    $19 = ((($18)) + 24|0);
    HEAP32[$0>>2] = $19;
    return;
   }
  }
 } while(0);
 __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($this);
 ___resumeException($eh$lpad$body$indexZ2D|0);
 // unreachable;
}
function __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i15 = 0, $$0$i$i$i7 = 0, $$0$i$i$i9 = 0, $$0$i$i58 = 0, $$02 = 0, $$03 = 0, $$lcssa = 0, $$lcssa75 = 0, $$lcssa76 = 0, $$lcssa78 = 0, $$lcssa81 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0;
 var $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0;
 var $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__p$0$i$i57 = 0, $__p$0$ph$i$i = 0, $__v$i$i = 0, $__v$i$i13 = 0;
 var $__v$i$i6 = 0, $__v$i$i8 = 0, $eh$lpad$body$i$i$index2Z2D = 0, $eh$lpad$body$i$i$indexZ2D = 0, $eh$lpad$body$i$i18$index7Z2D = 0, $eh$lpad$body$i$i18$indexZ2D = 0, $isdigit = 0, $isdigit5 = 0, $isdigittmp = 0, $isdigittmp4 = 0, $scevgep2$i$i = 0, $sub$061 = 0, $sub$061$lcssa = 0, $t1$060 = 0, $t1$060$lcssa = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v$i$i13 = sp + 124|0;
 $__v$i$i8 = sp + 104|0;
 $__v$i$i6 = sp + 84|0;
 $__v$i$i = sp + 64|0;
 $0 = sp + 40|0;
 $1 = sp + 16|0;
 $2 = sp;
 $3 = $last;
 $4 = $first;
 $5 = (($3) - ($4))|0;
 $6 = ($5|0)>(1);
 L1: do {
  if ($6) {
   $7 = HEAP8[$first>>0]|0;
   $8 = ($7<<24>>24)==(84);
   if ($8) {
    $9 = ((($first)) + 1|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(95);
    do {
     if ($11) {
      $12 = ((($db)) + 32|0);
      $13 = HEAP32[$12>>2]|0;
      $14 = ((($db)) + 36|0);
      $15 = HEAP32[$14>>2]|0;
      $16 = ($13|0)==($15|0);
      if ($16) {
       $$0 = $first;
       break L1;
      }
      $17 = ((($15)) + -16|0);
      $18 = HEAP32[$17>>2]|0;
      $19 = ((($15)) + -12|0);
      $20 = HEAP32[$19>>2]|0;
      $21 = ($18|0)==($20|0);
      if ($21) {
       HEAP8[$0>>0] = 4;
       $68 = ((($0)) + 1|0);
       HEAP8[$68>>0]=24404&255;HEAP8[$68+1>>0]=24404>>8;
       $69 = ((($0)) + 3|0);
       HEAP8[$69>>0] = 0;
       $70 = ((($0)) + 12|0);
       HEAP32[$70>>2] = 0;
       $71 = ((($70)) + 4|0);
       HEAP32[$71>>2] = 0;
       $72 = ((($70)) + 8|0);
       HEAP32[$72>>2] = 0;
       $73 = ((($db)) + 4|0);
       $74 = HEAP32[$73>>2]|0;
       $75 = ((($db)) + 8|0);
       $76 = HEAP32[$75>>2]|0;
       $77 = ($74>>>0)<($76>>>0);
       if ($77) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($74,$0);
        $78 = HEAP32[$73>>2]|0;
        $79 = ((($78)) + 24|0);
        HEAP32[$73>>2] = $79;
       } else {
        $80 = ((($db)) + 12|0);
        $81 = HEAP32[$db>>2]|0;
        $82 = $74;
        $83 = $81;
        $84 = (($82) - ($83))|0;
        $85 = (($84|0) / 24)&-1;
        $86 = (($85) + 1)|0;
        $87 = ($84|0)<(-24);
        if ($87) {
         __THREW__ = 0;
         invoke_vi(402,($db|0));
         $88 = __THREW__; __THREW__ = 0;
         $89 = ___cxa_find_matching_catch()|0;
         $90 = tempRet0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
         $$02 = $90;$$03 = $89;
         break;
        }
        $91 = $76;
        $92 = (($91) - ($83))|0;
        $93 = (($92|0) / 24)&-1;
        $94 = ($93>>>0)<(1073741823);
        if ($94) {
         $95 = $93 << 1;
         $96 = ($95>>>0)<($86>>>0);
         $97 = $96 ? $86 : $95;
         $$0$i$i$i9 = $97;
        } else {
         $$0$i$i$i9 = 2147483647;
        }
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i8,$$0$i$i$i9,$85,$80);
        $98 = ((($__v$i$i8)) + 8|0);
        $99 = HEAP32[$98>>2]|0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($99,$0);
        $100 = ((($99)) + 24|0);
        HEAP32[$98>>2] = $100;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i8);
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i8);
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
       $101 = ((($first)) + 2|0);
       $102 = ((($db)) + 62|0);
       HEAP8[$102>>0] = 1;
       $$0 = $101;
       break L1;
      }
      $22 = HEAP32[$18>>2]|0;
      $23 = ((($18)) + 4|0);
      $24 = HEAP32[$23>>2]|0;
      $25 = ((($db)) + 4|0);
      $26 = ((($db)) + 8|0);
      $27 = ((($db)) + 12|0);
      $28 = ((($__v$i$i6)) + 8|0);
      $29 = ($22|0)==($24|0);
      L20: do {
       if (!($29)) {
        $33 = $22;
        while(1) {
         $30 = HEAP32[$25>>2]|0;
         $31 = HEAP32[$26>>2]|0;
         $32 = ($30|0)==($31|0);
         if ($32) {
          $42 = HEAP32[$db>>2]|0;
          $43 = $30;
          $44 = $42;
          $45 = (($43) - ($44))|0;
          $46 = (($45|0) / 24)&-1;
          $47 = (($46) + 1)|0;
          $48 = ($45|0)<(-24);
          if ($48) {
           label = 12;
           break;
          }
          $49 = ($46>>>0)<(1073741823);
          if ($49) {
           $50 = $46 << 1;
           $51 = ($50>>>0)<($47>>>0);
           $52 = $51 ? $47 : $50;
           $$0$i$i$i7 = $52;
          } else {
           $$0$i$i$i7 = 2147483647;
          }
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i6,$$0$i$i$i7,$46,$27);
          $53 = HEAP32[$28>>2]|0;
          __THREW__ = 0;
          invoke_vii(400,($53|0),($33|0));
          $54 = __THREW__; __THREW__ = 0;
          $55 = $54&1;
          if ($55) {
           label = 18;
           break;
          }
          $56 = ((($53)) + 12|0);
          $57 = ((($33)) + 12|0);
          __THREW__ = 0;
          invoke_vii(400,($56|0),($57|0));
          $58 = __THREW__; __THREW__ = 0;
          $59 = $58&1;
          if ($59) {
           $$lcssa75 = $53;
           label = 17;
           break;
          }
          $64 = ((($53)) + 24|0);
          HEAP32[$28>>2] = $64;
          __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i6);
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i6);
         } else {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($30,$33);
          $34 = ((($30)) + 12|0);
          $35 = ((($33)) + 12|0);
          __THREW__ = 0;
          invoke_vii(400,($34|0),($35|0));
          $36 = __THREW__; __THREW__ = 0;
          $37 = $36&1;
          if ($37) {
           $$lcssa = $30;
           label = 9;
           break;
          }
          $40 = HEAP32[$25>>2]|0;
          $41 = ((($40)) + 24|0);
          HEAP32[$25>>2] = $41;
         }
         $65 = ((($33)) + 24|0);
         $66 = ($65|0)==($24|0);
         if ($66) {
          break L20;
         } else {
          $33 = $65;
         }
        }
        if ((label|0) == 9) {
         $38 = ___cxa_find_matching_catch()|0;
         $39 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($$lcssa);
         ___resumeException($38|0);
         // unreachable;
        }
        else if ((label|0) == 12) {
         __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
         // unreachable;
        }
        else if ((label|0) == 17) {
         $60 = ___cxa_find_matching_catch()|0;
         $61 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($$lcssa75);
         $eh$lpad$body$i$i$index2Z2D = $61;$eh$lpad$body$i$i$indexZ2D = $60;
        }
        else if ((label|0) == 18) {
         $62 = ___cxa_find_matching_catch()|0;
         $63 = tempRet0;
         $eh$lpad$body$i$i$index2Z2D = $63;$eh$lpad$body$i$i$indexZ2D = $62;
        }
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i6);
        ___resumeException($eh$lpad$body$i$i$indexZ2D|0);
        // unreachable;
       }
      } while(0);
      $67 = ((($first)) + 2|0);
      $$0 = $67;
      break L1;
     } else {
      $103 = $10 << 24 >> 24;
      $isdigittmp = (($103) + -48)|0;
      $isdigit = ($isdigittmp>>>0)<(10);
      if (!($isdigit)) {
       $$0 = $first;
       break L1;
      }
      $104 = ((($first)) + 2|0);
      $105 = ($104|0)==($last|0);
      if ($105) {
       $$0 = $first;
       break L1;
      } else {
       $sub$061 = $isdigittmp;$t1$060 = $104;
      }
      while(1) {
       $106 = HEAP8[$t1$060>>0]|0;
       $107 = $106 << 24 >> 24;
       $isdigittmp4 = (($107) + -48)|0;
       $isdigit5 = ($isdigittmp4>>>0)<(10);
       if (!($isdigit5)) {
        $$lcssa81 = $106;$sub$061$lcssa = $sub$061;$t1$060$lcssa = $t1$060;
        break;
       }
       $108 = ($sub$061*10)|0;
       $109 = (($isdigittmp4) + ($108))|0;
       $110 = ((($t1$060)) + 1|0);
       $111 = ($110|0)==($last|0);
       if ($111) {
        $$0 = $first;
        break L1;
       } else {
        $sub$061 = $109;$t1$060 = $110;
       }
      }
      $112 = ($$lcssa81<<24>>24)==(95);
      if (!($112)) {
       $$0 = $first;
       break L1;
      }
      $113 = ((($db)) + 32|0);
      $114 = HEAP32[$113>>2]|0;
      $115 = ((($db)) + 36|0);
      $116 = HEAP32[$115>>2]|0;
      $117 = ($114|0)==($116|0);
      if ($117) {
       $$0 = $first;
       break L1;
      }
      $118 = (($sub$061$lcssa) + 1)|0;
      $119 = ((($116)) + -12|0);
      $120 = HEAP32[$119>>2]|0;
      $121 = ((($116)) + -16|0);
      $122 = HEAP32[$121>>2]|0;
      $123 = $120;
      $124 = $122;
      $125 = (($123) - ($124))|0;
      $126 = $125 >> 4;
      $127 = ($118>>>0)<($126>>>0);
      if (!($127)) {
       $175 = ((($t1$060$lcssa)) + 1|0);
       $176 = $175;
       $177 = (($176) - ($4))|0;
       $178 = ($177>>>0)>(4294967279);
       if ($178) {
        __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($2);
        // unreachable;
       }
       $179 = ($177>>>0)<(11);
       if ($179) {
        $180 = $177 << 1;
        $181 = $180&255;
        HEAP8[$2>>0] = $181;
        $182 = ((($2)) + 1|0);
        $__p$0$ph$i$i = $182;
       } else {
        $183 = (($177) + 16)|0;
        $184 = $183 & -16;
        $185 = (_malloc($184)|0);
        $186 = ((($2)) + 8|0);
        HEAP32[$186>>2] = $185;
        $187 = $184 | 1;
        HEAP32[$2>>2] = $187;
        $188 = ((($2)) + 4|0);
        HEAP32[$188>>2] = $177;
        $__p$0$ph$i$i = $185;
       }
       $189 = ($175|0)==($first|0);
       if (!($189)) {
        $$0$i$i58 = $first;$__p$0$i$i57 = $__p$0$ph$i$i;
        while(1) {
         $190 = HEAP8[$$0$i$i58>>0]|0;
         HEAP8[$__p$0$i$i57>>0] = $190;
         $191 = ((($$0$i$i58)) + 1|0);
         $192 = ((($__p$0$i$i57)) + 1|0);
         $193 = ($$0$i$i58|0)==($t1$060$lcssa|0);
         if ($193) {
          break;
         } else {
          $$0$i$i58 = $191;$__p$0$i$i57 = $192;
         }
        }
       }
       $scevgep2$i$i = (($__p$0$ph$i$i) + ($177)|0);
       HEAP8[$scevgep2$i$i>>0] = 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($1,$2);
       $194 = ((($db)) + 4|0);
       $195 = HEAP32[$194>>2]|0;
       $196 = ((($db)) + 8|0);
       $197 = HEAP32[$196>>2]|0;
       $198 = ($195>>>0)<($197>>>0);
       if ($198) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($195,$1);
        $199 = HEAP32[$194>>2]|0;
        $200 = ((($199)) + 24|0);
        HEAP32[$194>>2] = $200;
       } else {
        $201 = ((($db)) + 12|0);
        $202 = HEAP32[$db>>2]|0;
        $203 = $195;
        $204 = $202;
        $205 = (($203) - ($204))|0;
        $206 = (($205|0) / 24)&-1;
        $207 = (($206) + 1)|0;
        $208 = ($205|0)<(-24);
        if ($208) {
         __THREW__ = 0;
         invoke_vi(402,($db|0));
         $209 = __THREW__; __THREW__ = 0;
         $210 = ___cxa_find_matching_catch()|0;
         $211 = tempRet0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
         $$02 = $211;$$03 = $210;
         break;
        }
        $212 = $197;
        $213 = (($212) - ($204))|0;
        $214 = (($213|0) / 24)&-1;
        $215 = ($214>>>0)<(1073741823);
        if ($215) {
         $216 = $214 << 1;
         $217 = ($216>>>0)<($207>>>0);
         $218 = $217 ? $207 : $216;
         $$0$i$i$i = $218;
        } else {
         $$0$i$i$i = 2147483647;
        }
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i,$$0$i$i$i,$206,$201);
        $219 = ((($__v$i$i)) + 8|0);
        $220 = HEAP32[$219>>2]|0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($220,$1);
        $221 = ((($220)) + 24|0);
        HEAP32[$219>>2] = $221;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i);
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i);
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
       $222 = ((($db)) + 62|0);
       HEAP8[$222>>0] = 1;
       $$0 = $175;
       break L1;
      }
      $128 = (($122) + ($118<<4)|0);
      $129 = HEAP32[$128>>2]|0;
      $130 = (((($122) + ($118<<4)|0)) + 4|0);
      $131 = HEAP32[$130>>2]|0;
      $132 = ((($db)) + 4|0);
      $133 = ((($db)) + 8|0);
      $134 = ((($db)) + 12|0);
      $135 = ((($__v$i$i13)) + 8|0);
      $136 = ($129|0)==($131|0);
      L73: do {
       if (!($136)) {
        $140 = $129;
        while(1) {
         $137 = HEAP32[$132>>2]|0;
         $138 = HEAP32[$133>>2]|0;
         $139 = ($137|0)==($138|0);
         if ($139) {
          $149 = HEAP32[$db>>2]|0;
          $150 = $137;
          $151 = $149;
          $152 = (($150) - ($151))|0;
          $153 = (($152|0) / 24)&-1;
          $154 = (($153) + 1)|0;
          $155 = ($152|0)<(-24);
          if ($155) {
           label = 44;
           break;
          }
          $156 = ($153>>>0)<(1073741823);
          if ($156) {
           $157 = $153 << 1;
           $158 = ($157>>>0)<($154>>>0);
           $159 = $158 ? $154 : $157;
           $$0$i$i$i15 = $159;
          } else {
           $$0$i$i$i15 = 2147483647;
          }
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i13,$$0$i$i$i15,$153,$134);
          $160 = HEAP32[$135>>2]|0;
          __THREW__ = 0;
          invoke_vii(400,($160|0),($140|0));
          $161 = __THREW__; __THREW__ = 0;
          $162 = $161&1;
          if ($162) {
           label = 50;
           break;
          }
          $163 = ((($160)) + 12|0);
          $164 = ((($140)) + 12|0);
          __THREW__ = 0;
          invoke_vii(400,($163|0),($164|0));
          $165 = __THREW__; __THREW__ = 0;
          $166 = $165&1;
          if ($166) {
           $$lcssa78 = $160;
           label = 49;
           break;
          }
          $171 = ((($160)) + 24|0);
          HEAP32[$135>>2] = $171;
          __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i13);
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i13);
         } else {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($137,$140);
          $141 = ((($137)) + 12|0);
          $142 = ((($140)) + 12|0);
          __THREW__ = 0;
          invoke_vii(400,($141|0),($142|0));
          $143 = __THREW__; __THREW__ = 0;
          $144 = $143&1;
          if ($144) {
           $$lcssa76 = $137;
           label = 41;
           break;
          }
          $147 = HEAP32[$132>>2]|0;
          $148 = ((($147)) + 24|0);
          HEAP32[$132>>2] = $148;
         }
         $172 = ((($140)) + 24|0);
         $173 = ($172|0)==($131|0);
         if ($173) {
          break L73;
         } else {
          $140 = $172;
         }
        }
        if ((label|0) == 41) {
         $145 = ___cxa_find_matching_catch()|0;
         $146 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($$lcssa76);
         ___resumeException($145|0);
         // unreachable;
        }
        else if ((label|0) == 44) {
         __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
         // unreachable;
        }
        else if ((label|0) == 49) {
         $167 = ___cxa_find_matching_catch()|0;
         $168 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($$lcssa78);
         $eh$lpad$body$i$i18$index7Z2D = $168;$eh$lpad$body$i$i18$indexZ2D = $167;
        }
        else if ((label|0) == 50) {
         $169 = ___cxa_find_matching_catch()|0;
         $170 = tempRet0;
         $eh$lpad$body$i$i18$index7Z2D = $170;$eh$lpad$body$i$i18$indexZ2D = $169;
        }
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i13);
        ___resumeException($eh$lpad$body$i$i18$indexZ2D|0);
        // unreachable;
       }
      } while(0);
      $174 = ((($t1$060$lcssa)) + 1|0);
      $$0 = $174;
      break L1;
     }
    } while(0);
    ___resumeException($$03|0);
    // unreachable;
   } else {
    $$0 = $first;
   }
  } else {
   $$0 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$0$i$i$i = 0, $$0$i$i$i10 = 0, $$0$i$i$i21 = 0, $$0$i$i$i7 = 0, $$04 = 0, $$05 = 0, $$1 = 0, $$lcssa = 0, $$lcssa152 = 0, $$lcssa156 = 0, $$lcssa157 = 0, $$pre = 0, $$pre$i = 0, $$pre$i15 = 0, $$sum$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0;
 var $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__v$i$i = 0, $__v$i$i20 = 0, $__v$i$i6 = 0, $__v$i$i9 = 0, $args = 0, $eh$lpad$body$i$i$index15Z2D = 0, $eh$lpad$body$i$i$indexZ2D = 0, $eh$lpad$body$index6Z2D = 0, $eh$lpad$body$indexZ2D = 0, $k$0121 = 0;
 var $k1$0124 = 0, $k2$0123 = 0, $or$cond = 0, $t$0$lcssa = 0, $t$0126 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v$i$i20 = sp + 124|0;
 $__v$i$i9 = sp + 104|0;
 $__v$i$i6 = sp + 84|0;
 $__v$i$i = sp + 64|0;
 $args = sp + 52|0;
 $0 = sp + 40|0;
 $1 = sp + 16|0;
 $2 = sp;
 $3 = $last;
 $4 = $first;
 $5 = (($3) - ($4))|0;
 $6 = ($5|0)>(1);
 L1: do {
  if ($6) {
   $7 = HEAP8[$first>>0]|0;
   $8 = ($7<<24>>24)==(73);
   if ($8) {
    $9 = ((($db)) + 61|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(0);
    $$pre = ((($db)) + 36|0);
    if (!($11)) {
     $12 = HEAP32[$$pre>>2]|0;
     $13 = ((($12)) + -16|0);
     $14 = HEAP32[$13>>2]|0;
     $15 = ((($12)) + -12|0);
     $16 = HEAP32[$15>>2]|0;
     $17 = ($16|0)==($14|0);
     if (!($17)) {
      $19 = $16;
      while(1) {
       $18 = ((($19)) + -16|0);
       HEAP32[$15>>2] = $18;
       __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($18);
       $20 = HEAP32[$15>>2]|0;
       $21 = ($20|0)==($14|0);
       if ($21) {
        break;
       } else {
        $19 = $20;
       }
      }
     }
    }
    $22 = ((($first)) + 1|0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($args,17113,1);
    $23 = ((($db)) + 4|0);
    $24 = ((($db)) + 12|0);
    $25 = ((($__v$i$i6)) + 8|0);
    $26 = ((($__v$i$i9)) + 8|0);
    $27 = ((($args)) + 4|0);
    $28 = ((($0)) + 8|0);
    $29 = ((($0)) + 1|0);
    $30 = ((($0)) + 4|0);
    $31 = ((($db)) + 32|0);
    $32 = ((($db)) + 40|0);
    $33 = ((($db)) + 44|0);
    $34 = ((($__v$i$i)) + 8|0);
    $35 = HEAP8[$22>>0]|0;
    $36 = ($35<<24>>24)==(69);
    L9: do {
     if ($36) {
      $t$0$lcssa = $22;
      label = 62;
     } else {
      $t$0126 = $22;
      L10: while(1) {
       $40 = HEAP8[$9>>0]|0;
       $41 = ($40<<24>>24)==(0);
       do {
        if (!($41)) {
         $42 = HEAP32[$24>>2]|0;
         $43 = $42;
         $44 = HEAP32[$$pre>>2]|0;
         $45 = HEAP32[$32>>2]|0;
         $46 = ($44>>>0)<($45>>>0);
         if ($46) {
          HEAP32[$44>>2] = 0;
          $47 = ((($44)) + 4|0);
          HEAP32[$47>>2] = 0;
          $48 = ((($44)) + 8|0);
          HEAP32[$48>>2] = 0;
          $49 = ((($44)) + 12|0);
          HEAP32[$49>>2] = $43;
          $50 = HEAP32[$$pre>>2]|0;
          $51 = ((($50)) + 16|0);
          HEAP32[$$pre>>2] = $51;
          break;
         }
         $52 = HEAP32[$31>>2]|0;
         $53 = $44;
         $54 = $52;
         $55 = (($53) - ($54))|0;
         $56 = $55 >> 4;
         $57 = (($56) + 1)|0;
         $58 = ($55|0)<(-16);
         if ($58) {
          label = 12;
          break L10;
         }
         $60 = $45;
         $61 = (($60) - ($54))|0;
         $62 = $61 >> 4;
         $63 = ($62>>>0)<(1073741823);
         if ($63) {
          $64 = $61 >> 3;
          $65 = ($64>>>0)<($57>>>0);
          $66 = $65 ? $57 : $64;
          $$0$i$i$i = $66;
         } else {
          $$0$i$i$i = 2147483647;
         }
         __ZNSt3__114__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEEC2EjjSB_($__v$i$i,$$0$i$i$i,$56,$33);
         $67 = HEAP32[$34>>2]|0;
         HEAP32[$67>>2] = 0;
         $68 = ((($67)) + 4|0);
         HEAP32[$68>>2] = 0;
         $69 = ((($67)) + 8|0);
         HEAP32[$69>>2] = 0;
         $70 = ((($67)) + 12|0);
         HEAP32[$70>>2] = $43;
         $71 = ((($67)) + 16|0);
         HEAP32[$34>>2] = $71;
         __ZNSt3__16vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE($31,$__v$i$i);
         __ZNSt3__114__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEED2Ev($__v$i$i);
        }
       } while(0);
       $80 = HEAP32[$23>>2]|0;
       $81 = HEAP32[$db>>2]|0;
       $82 = $80;
       $83 = $81;
       $84 = (($82) - ($83))|0;
       $85 = (($84|0) / 24)&-1;
       __THREW__ = 0;
       $38 = (invoke_iiii(411,($t$0126|0),($last|0),($db|0))|0);
       $86 = __THREW__; __THREW__ = 0;
       $87 = $86&1;
       if ($87) {
        label = 18;
        break;
       }
       $88 = HEAP32[$23>>2]|0;
       $89 = HEAP32[$db>>2]|0;
       $90 = $88;
       $91 = $89;
       $92 = (($90) - ($91))|0;
       $93 = (($92|0) / 24)&-1;
       $94 = HEAP8[$9>>0]|0;
       $95 = ($94<<24>>24)==(0);
       if (!($95)) {
        $96 = HEAP32[$$pre>>2]|0;
        $97 = ((($96)) + -16|0);
        $99 = $96;
        while(1) {
         $98 = ((($99)) + -16|0);
         HEAP32[$$pre>>2] = $98;
         __ZNSt3__113__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev($98);
         $$pre$i = HEAP32[$$pre>>2]|0;
         $100 = ($$pre$i|0)==($97|0);
         if ($100) {
          break;
         } else {
          $99 = $$pre$i;
         }
        }
       }
       $101 = ($38|0)==($t$0126|0);
       $102 = ($38|0)==($last|0);
       $or$cond = $101 | $102;
       if ($or$cond) {
        label = 73;
        break;
       }
       $103 = HEAP8[$9>>0]|0;
       $104 = ($103<<24>>24)==(0);
       if (!($104)) {
        $106 = HEAP32[$$pre>>2]|0;
        $107 = ((($106)) + -16|0);
        $108 = HEAP32[$24>>2]|0;
        $109 = $108;
        $110 = ((($106)) + -12|0);
        $111 = HEAP32[$110>>2]|0;
        $112 = ((($106)) + -8|0);
        $113 = HEAP32[$112>>2]|0;
        $114 = ($111>>>0)<($113>>>0);
        if ($114) {
         HEAP32[$111>>2] = 0;
         $115 = ((($111)) + 4|0);
         HEAP32[$115>>2] = 0;
         $116 = ((($111)) + 8|0);
         HEAP32[$116>>2] = 0;
         $117 = ((($111)) + 12|0);
         HEAP32[$117>>2] = $109;
         $118 = HEAP32[$110>>2]|0;
         $119 = ((($118)) + 16|0);
         HEAP32[$110>>2] = $119;
        } else {
         $120 = ((($106)) + -4|0);
         $121 = HEAP32[$107>>2]|0;
         $122 = $111;
         $123 = $121;
         $124 = (($122) - ($123))|0;
         $125 = $124 >> 4;
         $126 = (($125) + 1)|0;
         $127 = ($124|0)<(-16);
         if ($127) {
          $$lcssa = $107;
          label = 31;
          break;
         }
         $129 = $113;
         $130 = (($129) - ($123))|0;
         $131 = $130 >> 4;
         $132 = ($131>>>0)<(1073741823);
         if ($132) {
          $133 = $130 >> 3;
          $134 = ($133>>>0)<($126>>>0);
          $135 = $134 ? $126 : $133;
          $$0$i$i$i7 = $135;
         } else {
          $$0$i$i$i7 = 2147483647;
         }
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i6,$$0$i$i$i7,$125,$120);
         $136 = HEAP32[$25>>2]|0;
         HEAP32[$136>>2] = 0;
         $137 = ((($136)) + 4|0);
         HEAP32[$137>>2] = 0;
         $138 = ((($136)) + 8|0);
         HEAP32[$138>>2] = 0;
         $139 = ((($136)) + 12|0);
         HEAP32[$139>>2] = $109;
         $140 = ((($136)) + 16|0);
         HEAP32[$25>>2] = $140;
         __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($107,$__v$i$i6);
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i6);
        }
        $141 = ($85>>>0)<($93>>>0);
        if ($141) {
         $k$0121 = $85;
         while(1) {
          $142 = HEAP32[$$pre>>2]|0;
          $143 = ((($142)) + -12|0);
          $144 = HEAP32[$143>>2]|0;
          $145 = ((($144)) + -16|0);
          $146 = HEAP32[$db>>2]|0;
          $147 = (($146) + (($k$0121*24)|0)|0);
          $148 = ((($144)) + -12|0);
          $149 = HEAP32[$148>>2]|0;
          $150 = ((($144)) + -8|0);
          $151 = HEAP32[$150>>2]|0;
          $152 = ($149|0)==($151|0);
          if ($152) {
           $163 = ((($144)) + -4|0);
           $164 = HEAP32[$145>>2]|0;
           $165 = $149;
           $166 = $164;
           $167 = (($165) - ($166))|0;
           $168 = (($167|0) / 24)&-1;
           $169 = (($168) + 1)|0;
           $170 = ($167|0)<(-24);
           if ($170) {
            $$lcssa152 = $145;
            label = 42;
            break L10;
           }
           $172 = ($168>>>0)<(1073741823);
           if ($172) {
            $173 = $168 << 1;
            $174 = ($173>>>0)<($169>>>0);
            $175 = $174 ? $169 : $173;
            $$0$i$i$i10 = $175;
           } else {
            $$0$i$i$i10 = 2147483647;
           }
           __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i9,$$0$i$i$i10,$168,$163);
           $176 = HEAP32[$26>>2]|0;
           __THREW__ = 0;
           invoke_vii(400,($176|0),($147|0));
           $177 = __THREW__; __THREW__ = 0;
           $178 = $177&1;
           if ($178) {
            label = 48;
            break L10;
           }
           $179 = ((($176)) + 12|0);
           $180 = (((($146) + (($k$0121*24)|0)|0)) + 12|0);
           __THREW__ = 0;
           invoke_vii(400,($179|0),($180|0));
           $181 = __THREW__; __THREW__ = 0;
           $182 = $181&1;
           if ($182) {
            $$lcssa157 = $176;
            label = 47;
            break L10;
           }
           $187 = ((($176)) + 24|0);
           HEAP32[$26>>2] = $187;
           __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($145,$__v$i$i9);
           __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i9);
          } else {
           __THREW__ = 0;
           invoke_vii(400,($149|0),($147|0));
           $153 = __THREW__; __THREW__ = 0;
           $154 = $153&1;
           if ($154) {
            label = 17;
            break L10;
           }
           $155 = ((($149)) + 12|0);
           $156 = (((($146) + (($k$0121*24)|0)|0)) + 12|0);
           __THREW__ = 0;
           invoke_vii(400,($155|0),($156|0));
           $157 = __THREW__; __THREW__ = 0;
           $158 = $157&1;
           if ($158) {
            $$lcssa156 = $149;
            label = 39;
            break L10;
           }
           $161 = HEAP32[$148>>2]|0;
           $162 = ((($161)) + 24|0);
           HEAP32[$148>>2] = $162;
          }
          $188 = (($k$0121) + 1)|0;
          $189 = ($188>>>0)<($93>>>0);
          if ($189) {
           $k$0121 = $188;
          } else {
           break;
          }
         }
        }
       }
       $105 = ($85>>>0)<($93>>>0);
       if ($105) {
        $k2$0123 = $85;
        while(1) {
         $191 = HEAP8[$args>>0]|0;
         $192 = $191 & 1;
         $193 = ($192<<24>>24)==(0);
         $194 = HEAP32[$27>>2]|0;
         $195 = $191&255;
         $196 = $195 >>> 1;
         $197 = $193 ? $196 : $194;
         $198 = ($197>>>0)>(1);
         if ($198) {
          __THREW__ = 0;
          (invoke_iii(392,($args|0),(17053|0))|0);
          $199 = __THREW__; __THREW__ = 0;
          $200 = $199&1;
          if ($200) {
           label = 16;
           break L10;
          }
         }
         $201 = HEAP32[$db>>2]|0;
         $202 = (($201) + (($k2$0123*24)|0)|0);
         __THREW__ = 0;
         invoke_vii(396,($0|0),($202|0));
         $203 = __THREW__; __THREW__ = 0;
         $204 = $203&1;
         if ($204) {
          label = 16;
          break L10;
         }
         $205 = HEAP8[$0>>0]|0;
         $206 = $205 & 1;
         $207 = ($206<<24>>24)==(0);
         $208 = HEAP32[$28>>2]|0;
         $209 = $207 ? $29 : $208;
         $210 = HEAP32[$30>>2]|0;
         $211 = $205&255;
         $212 = $211 >>> 1;
         $213 = $207 ? $212 : $210;
         __THREW__ = 0;
         (invoke_iiii(387,($args|0),($209|0),($213|0))|0);
         $214 = __THREW__; __THREW__ = 0;
         $215 = $214&1;
         if ($215) {
          label = 58;
          break L10;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
         $216 = (($k2$0123) + 1)|0;
         $217 = ($216>>>0)<($93>>>0);
         if ($217) {
          $k2$0123 = $216;
         } else {
          break;
         }
        }
       }
       $190 = ($93|0)==($85|0);
       if (!($190)) {
        $k1$0124 = $93;
        while(1) {
         $220 = HEAP32[$23>>2]|0;
         $221 = ((($220)) + -24|0);
         $223 = $220;
         while(1) {
          $222 = ((($223)) + -24|0);
          HEAP32[$23>>2] = $222;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($222);
          $$pre$i15 = HEAP32[$23>>2]|0;
          $224 = ($$pre$i15|0)==($221|0);
          if ($224) {
           break;
          } else {
           $223 = $$pre$i15;
          }
         }
         $225 = (($k1$0124) + -1)|0;
         $226 = ($225|0)==($85|0);
         if ($226) {
          break;
         } else {
          $k1$0124 = $225;
         }
        }
       }
       $37 = HEAP8[$38>>0]|0;
       $39 = ($37<<24>>24)==(69);
       if ($39) {
        $t$0$lcssa = $38;
        label = 62;
        break L9;
       } else {
        $t$0126 = $38;
       }
      }
      switch (label|0) {
       case 12: {
        __THREW__ = 0;
        invoke_vi(402,($31|0));
        $59 = __THREW__; __THREW__ = 0;
        label = 19;
        break L9;
        break;
       }
       case 16: {
        $72 = ___cxa_find_matching_catch()|0;
        $73 = tempRet0;
        $eh$lpad$body$index6Z2D = $73;$eh$lpad$body$indexZ2D = $72;
        label = 20;
        break L9;
        break;
       }
       case 17: {
        $74 = ___cxa_find_matching_catch()|0;
        $75 = tempRet0;
        $eh$lpad$body$index6Z2D = $75;$eh$lpad$body$indexZ2D = $74;
        label = 20;
        break L9;
        break;
       }
       case 18: {
        $76 = ___cxa_find_matching_catch()|0;
        $77 = tempRet0;
        $eh$lpad$body$index6Z2D = $77;$eh$lpad$body$indexZ2D = $76;
        label = 20;
        break L9;
        break;
       }
       case 31: {
        __THREW__ = 0;
        invoke_vi(402,($$lcssa|0));
        $128 = __THREW__; __THREW__ = 0;
        label = 19;
        break L9;
        break;
       }
       case 39: {
        $159 = ___cxa_find_matching_catch()|0;
        $160 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($$lcssa156);
        $eh$lpad$body$index6Z2D = $160;$eh$lpad$body$indexZ2D = $159;
        label = 20;
        break L9;
        break;
       }
       case 42: {
        __THREW__ = 0;
        invoke_vi(402,($$lcssa152|0));
        $171 = __THREW__; __THREW__ = 0;
        label = 19;
        break L9;
        break;
       }
       case 47: {
        $183 = ___cxa_find_matching_catch()|0;
        $184 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($$lcssa157);
        $eh$lpad$body$i$i$index15Z2D = $184;$eh$lpad$body$i$i$indexZ2D = $183;
        break;
       }
       case 48: {
        $185 = ___cxa_find_matching_catch()|0;
        $186 = tempRet0;
        $eh$lpad$body$i$i$index15Z2D = $186;$eh$lpad$body$i$i$indexZ2D = $185;
        break;
       }
       case 58: {
        $218 = ___cxa_find_matching_catch()|0;
        $219 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
        $$04 = $219;$$05 = $218;
        break L9;
        break;
       }
       case 73: {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
        $$1 = $first;
        break L1;
        break;
       }
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i9);
      $eh$lpad$body$index6Z2D = $eh$lpad$body$i$i$index15Z2D;$eh$lpad$body$indexZ2D = $eh$lpad$body$i$i$indexZ2D;
      label = 20;
     }
    } while(0);
    do {
     if ((label|0) == 62) {
      $227 = ((($t$0$lcssa)) + 1|0);
      $228 = HEAP8[$args>>0]|0;
      $229 = $228 & 1;
      $230 = ($229<<24>>24)==(0);
      $231 = ((($args)) + 8|0);
      $232 = HEAP32[$231>>2]|0;
      $233 = HEAP32[$27>>2]|0;
      $234 = ((($args)) + 1|0);
      $235 = $228&255;
      $236 = $235 >>> 1;
      $237 = $230 ? $234 : $232;
      $238 = $230 ? $236 : $233;
      $$sum$i = (($238) + -1)|0;
      $239 = (($237) + ($$sum$i)|0);
      $240 = HEAP8[$239>>0]|0;
      $241 = ($240<<24>>24)==(62);
      __THREW__ = 0;
      if ($241) {
       (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($args,18098)|0);
       $244 = __THREW__; __THREW__ = 0;
       $245 = $244&1;
       if ($245) {
        label = 19;
        break;
       }
      } else {
       (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($args,17115)|0);
       $242 = __THREW__; __THREW__ = 0;
       $243 = $242&1;
       if ($243) {
        label = 19;
        break;
       }
      }
      ;HEAP32[$2>>2]=HEAP32[$args>>2]|0;HEAP32[$2+4>>2]=HEAP32[$args+4>>2]|0;HEAP32[$2+8>>2]=HEAP32[$args+8>>2]|0;
      HEAP32[$args>>2] = 0;
      $246 = ((($args)) + 4|0);
      HEAP32[$246>>2] = 0;
      $247 = ((($args)) + 8|0);
      HEAP32[$247>>2] = 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($1,$2);
      $248 = HEAP32[$23>>2]|0;
      $249 = ((($db)) + 8|0);
      $250 = HEAP32[$249>>2]|0;
      $251 = ($248>>>0)<($250>>>0);
      if ($251) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($248,$1);
       $252 = HEAP32[$23>>2]|0;
       $253 = ((($252)) + 24|0);
       HEAP32[$23>>2] = $253;
      } else {
       $254 = ((($db)) + 12|0);
       $255 = HEAP32[$db>>2]|0;
       $256 = $248;
       $257 = $255;
       $258 = (($256) - ($257))|0;
       $259 = (($258|0) / 24)&-1;
       $260 = (($259) + 1)|0;
       $261 = ($258|0)<(-24);
       if ($261) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $262 = __THREW__; __THREW__ = 0;
        $263 = ___cxa_find_matching_catch()|0;
        $264 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
        $$04 = $264;$$05 = $263;
        break;
       }
       $265 = $250;
       $266 = (($265) - ($257))|0;
       $267 = (($266|0) / 24)&-1;
       $268 = ($267>>>0)<(1073741823);
       if ($268) {
        $269 = $267 << 1;
        $270 = ($269>>>0)<($260>>>0);
        $271 = $270 ? $260 : $269;
        $$0$i$i$i21 = $271;
       } else {
        $$0$i$i$i21 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i20,$$0$i$i$i21,$259,$254);
       $272 = ((($__v$i$i20)) + 8|0);
       $273 = HEAP32[$272>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($273,$1);
       $274 = ((($273)) + 24|0);
       HEAP32[$272>>2] = $274;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i20);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i20);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
      $$1 = $227;
      break L1;
     }
    } while(0);
    if ((label|0) == 19) {
     $78 = ___cxa_find_matching_catch()|0;
     $79 = tempRet0;
     $eh$lpad$body$index6Z2D = $79;$eh$lpad$body$indexZ2D = $78;
     label = 20;
    }
    if ((label|0) == 20) {
     $$04 = $eh$lpad$body$index6Z2D;$$05 = $eh$lpad$body$indexZ2D;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
    ___resumeException($$05|0);
    // unreachable;
   } else {
    $$1 = $first;
   }
  } else {
   $$1 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($$1|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$$$i$i$i = 0, $$$i$i$i = 0, $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i8 = 0, $$01 = 0, $$02 = 0, $$lcssa = 0, $$sum = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__v$i$i = 0, $__v$i$i7 = 0, $c$0 = 0, $c$0$in$lcssa = 0, $c$0$in29 = 0, $c$026 = 0, $isdigit = 0, $isdigit5 = 0, $isdigit528 = 0;
 var $isdigittmp = 0, $isdigittmp4 = 0, $isdigittmp427 = 0, $isdigittmp431 = 0, $n$0$lcssa = 0, $n$030 = 0, $r = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v$i$i7 = sp + 108|0;
 $__v$i$i = sp + 88|0;
 $r = sp + 76|0;
 $0 = sp + 64|0;
 $1 = sp + 40|0;
 $2 = sp + 16|0;
 $3 = sp;
 $4 = ($first|0)==($last|0);
 L1: do {
  if ($4) {
   $$02 = $first;
  } else {
   $5 = HEAP8[$first>>0]|0;
   $6 = $5 << 24 >> 24;
   $isdigittmp = (($6) + -48)|0;
   $isdigit = ($isdigittmp>>>0)<(10);
   if ($isdigit) {
    $7 = ((($first)) + 1|0);
    $8 = ($7|0)==($last|0);
    if ($8) {
     $$02 = $first;
    } else {
     $c$026 = HEAP8[$7>>0]|0;
     $9 = $c$026 << 24 >> 24;
     $isdigittmp427 = (($9) + -48)|0;
     $isdigit528 = ($isdigittmp427>>>0)<(10);
     if ($isdigit528) {
      $c$0$in29 = $7;$isdigittmp431 = $isdigittmp427;$n$030 = $isdigittmp;
      while(1) {
       $10 = ((($c$0$in29)) + 1|0);
       $11 = ($10|0)==($last|0);
       if ($11) {
        $$02 = $first;
        break L1;
       }
       $12 = ($n$030*10)|0;
       $13 = (($isdigittmp431) + ($12))|0;
       $c$0 = HEAP8[$10>>0]|0;
       $14 = $c$0 << 24 >> 24;
       $isdigittmp4 = (($14) + -48)|0;
       $isdigit5 = ($isdigittmp4>>>0)<(10);
       if ($isdigit5) {
        $c$0$in29 = $10;$isdigittmp431 = $isdigittmp4;$n$030 = $13;
       } else {
        $$lcssa = $c$0$in29;$c$0$in$lcssa = $10;$n$0$lcssa = $13;
        break;
       }
      }
     } else {
      $$lcssa = $first;$c$0$in$lcssa = $7;$n$0$lcssa = $isdigittmp;
     }
     $15 = $last;
     $16 = $c$0$in$lcssa;
     $17 = (($15) - ($16))|0;
     $18 = ($17>>>0)<($n$0$lcssa>>>0);
     if ($18) {
      $$02 = $first;
     } else {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($r,$c$0$in$lcssa,$n$0$lcssa);
      $19 = HEAP8[$r>>0]|0;
      $20 = $19 & 1;
      $21 = ($20<<24>>24)==(0);
      $22 = ((($r)) + 4|0);
      $23 = HEAP32[$22>>2]|0;
      $24 = $19&255;
      $25 = $24 >>> 1;
      $26 = $21 ? $25 : $23;
      $27 = ((($r)) + 8|0);
      $28 = HEAP32[$27>>2]|0;
      $29 = ((($r)) + 1|0);
      $30 = $21 ? $29 : $28;
      $31 = ($26>>>0)<(10);
      $32 = $31 ? $26 : 10;
      __THREW__ = 0;
      invoke_viii(401,($0|0),($30|0),($32|0));
      $33 = __THREW__; __THREW__ = 0;
      $34 = $33&1;
      do {
       if ($34) {
        $89 = ___cxa_find_matching_catch()|0;
        $90 = tempRet0;
        $$0 = $90;$$01 = $89;
       } else {
        $35 = HEAP8[$0>>0]|0;
        $36 = $35 & 1;
        $37 = ($36<<24>>24)==(0);
        $38 = ((($0)) + 4|0);
        $39 = HEAP32[$38>>2]|0;
        $40 = $35&255;
        $41 = $40 >>> 1;
        $42 = $37 ? $41 : $39;
        $43 = ((($0)) + 8|0);
        $44 = HEAP32[$43>>2]|0;
        $45 = ((($0)) + 1|0);
        $46 = $37 ? $45 : $44;
        $47 = ($42>>>0)>(10);
        $48 = $47 ? 10 : $42;
        $49 = (_memcmp($46,18065,$48)|0);
        $50 = ($49|0)==(0);
        $51 = ($42>>>0)<(10);
        $$$i$i$i = $47&1;
        $$$$i$i$i = $51 ? -1 : $$$i$i$i;
        $52 = $50 ? $$$$i$i$i : $49;
        $53 = ($52|0)==(0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
        if ($53) {
         $54 = (_malloc(32)|0);
         $55 = ((($1)) + 8|0);
         HEAP32[$55>>2] = $54;
         HEAP32[$1>>2] = 33;
         $56 = ((($1)) + 4|0);
         HEAP32[$56>>2] = 21;
         dest=$54; src=18076; stop=dest+21|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
         $57 = ((($54)) + 21|0);
         HEAP8[$57>>0] = 0;
         $58 = ((($1)) + 12|0);
         HEAP32[$58>>2] = 0;
         $59 = ((($58)) + 4|0);
         HEAP32[$59>>2] = 0;
         $60 = ((($58)) + 8|0);
         HEAP32[$60>>2] = 0;
         $61 = ((($db)) + 4|0);
         $62 = HEAP32[$61>>2]|0;
         $63 = ((($db)) + 8|0);
         $64 = HEAP32[$63>>2]|0;
         $65 = ($62>>>0)<($64>>>0);
         if ($65) {
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($62,$1);
          $66 = HEAP32[$61>>2]|0;
          $67 = ((($66)) + 24|0);
          HEAP32[$61>>2] = $67;
         } else {
          $68 = ((($db)) + 12|0);
          $69 = HEAP32[$db>>2]|0;
          $70 = $62;
          $71 = $69;
          $72 = (($70) - ($71))|0;
          $73 = (($72|0) / 24)&-1;
          $74 = (($73) + 1)|0;
          $75 = ($72|0)<(-24);
          if ($75) {
           __THREW__ = 0;
           invoke_vi(402,($db|0));
           $76 = __THREW__; __THREW__ = 0;
           $77 = ___cxa_find_matching_catch()|0;
           $78 = tempRet0;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
           $$0 = $78;$$01 = $77;
           break;
          }
          $79 = $64;
          $80 = (($79) - ($71))|0;
          $81 = (($80|0) / 24)&-1;
          $82 = ($81>>>0)<(1073741823);
          if ($82) {
           $83 = $81 << 1;
           $84 = ($83>>>0)<($74>>>0);
           $85 = $84 ? $74 : $83;
           $$0$i$i$i = $85;
          } else {
           $$0$i$i$i = 2147483647;
          }
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i,$$0$i$i$i,$73,$68);
          $86 = ((($__v$i$i)) + 8|0);
          $87 = HEAP32[$86>>2]|0;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($87,$1);
          $88 = ((($87)) + 24|0);
          HEAP32[$86>>2] = $88;
          __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i);
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i);
         }
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
        } else {
         ;HEAP32[$3>>2]=HEAP32[$r>>2]|0;HEAP32[$3+4>>2]=HEAP32[$r+4>>2]|0;HEAP32[$3+8>>2]=HEAP32[$r+8>>2]|0;
         HEAP32[$r>>2] = 0;
         $91 = ((($r)) + 4|0);
         HEAP32[$91>>2] = 0;
         $92 = ((($r)) + 8|0);
         HEAP32[$92>>2] = 0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($2,$3);
         $93 = ((($db)) + 4|0);
         $94 = HEAP32[$93>>2]|0;
         $95 = ((($db)) + 8|0);
         $96 = HEAP32[$95>>2]|0;
         $97 = ($94>>>0)<($96>>>0);
         if ($97) {
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($94,$2);
          $98 = HEAP32[$93>>2]|0;
          $99 = ((($98)) + 24|0);
          HEAP32[$93>>2] = $99;
         } else {
          $100 = ((($db)) + 12|0);
          $101 = HEAP32[$db>>2]|0;
          $102 = $94;
          $103 = $101;
          $104 = (($102) - ($103))|0;
          $105 = (($104|0) / 24)&-1;
          $106 = (($105) + 1)|0;
          $107 = ($104|0)<(-24);
          if ($107) {
           __THREW__ = 0;
           invoke_vi(402,($db|0));
           $108 = __THREW__; __THREW__ = 0;
           $109 = ___cxa_find_matching_catch()|0;
           $110 = tempRet0;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
           $$0 = $110;$$01 = $109;
           break;
          }
          $111 = $96;
          $112 = (($111) - ($103))|0;
          $113 = (($112|0) / 24)&-1;
          $114 = ($113>>>0)<(1073741823);
          if ($114) {
           $115 = $113 << 1;
           $116 = ($115>>>0)<($106>>>0);
           $117 = $116 ? $106 : $115;
           $$0$i$i$i8 = $117;
          } else {
           $$0$i$i$i8 = 2147483647;
          }
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i7,$$0$i$i$i8,$105,$100);
          $118 = ((($__v$i$i7)) + 8|0);
          $119 = HEAP32[$118>>2]|0;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($119,$2);
          $120 = ((($119)) + 24|0);
          HEAP32[$118>>2] = $120;
          __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i7);
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i7);
         }
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
        }
        $$sum = (($n$0$lcssa) + 1)|0;
        $121 = (($$lcssa) + ($$sum)|0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($r);
        $$02 = $121;
        break L1;
       }
      } while(0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($r);
      ___resumeException($$01|0);
      // unreachable;
     }
    }
   } else {
    $$02 = $first;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$02|0);
}
function __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_($agg$result,$__lhs,$__rhs) {
 $agg$result = $agg$result|0;
 $__lhs = $__lhs|0;
 $__rhs = $__rhs|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__lhs>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 $5 = ((($__lhs)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $2&255;
 $8 = $7 >>> 1;
 $9 = $4 ? $8 : $6;
 $10 = (_strlen($__rhs)|0);
 $11 = ((($__lhs)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($__lhs)) + 1|0);
 $14 = $4 ? $13 : $12;
 $15 = (($9) + ($10))|0;
 __THREW__ = 0;
 invoke_viiii(412,($agg$result|0),($14|0),($9|0),($15|0));
 $16 = __THREW__; __THREW__ = 0;
 $17 = $16&1;
 if (!($17)) {
  __THREW__ = 0;
  (invoke_iiii(387,($agg$result|0),($__rhs|0),($10|0))|0);
  $18 = __THREW__; __THREW__ = 0;
  $19 = $18&1;
  if (!($19)) {
   return;
  }
 }
 $20 = ___cxa_find_matching_catch()|0;
 $21 = tempRet0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$result);
 ___resumeException($20|0);
 // unreachable;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$this>>2]=HEAP32[$f>>2]|0;HEAP32[$this+4>>2]=HEAP32[$f+4>>2]|0;HEAP32[$this+8>>2]=HEAP32[$f+8>>2]|0;
 HEAP32[$f>>2] = 0;
 $0 = ((($f)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($f)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($this)) + 12|0);
 HEAP32[$2>>2] = 0;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($2)) + 8|0);
 HEAP32[$4>>2] = 0;
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $$pre$i$i$i = 0, $$pre$i$i$i2 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $or$cond$i$i$i$i$i = 0, $or$cond$i$i$i$i$i9 = 0;
 var $phitmp$i$i$i$i$i$i = 0, $phitmp$i$i$i$i$i$i4 = 0, $phitmp$i2$i$i$i$i$i = 0, $phitmp$i2$i$i$i$i$i7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 do {
  if ($3) {
   $4 = ((($this)) + 1|0);
   HEAP8[$4>>0] = 0;
   HEAP8[$this>>0] = 0;
  } else {
   $5 = ((($this)) + 8|0);
   $6 = HEAP32[$5>>2]|0;
   HEAP8[$6>>0] = 0;
   $7 = ((($this)) + 4|0);
   HEAP32[$7>>2] = 0;
   $$pre$i$i$i = HEAP8[$this>>0]|0;
   $8 = $$pre$i$i$i & 1;
   $9 = ($8<<24>>24)==(0);
   if ($9) {
    $14 = $$pre$i$i$i;$23 = 10;
   } else {
    $10 = HEAP32[$this>>2]|0;
    $11 = $10 & -2;
    $phitmp$i$i$i$i$i$i = (($11) + -1)|0;
    $12 = $10&255;
    $14 = $12;$23 = $phitmp$i$i$i$i$i$i;
   }
   $13 = $14 & 1;
   $15 = ($13<<24>>24)==(0);
   if ($15) {
    $16 = $14&255;
    $17 = $16 >>> 1;
    $18 = ($14&255)<(22);
    if ($18) {
     $22 = 10;$42 = $17;$95 = 1;
    } else {
     $19 = (($17) + 16)|0;
     $20 = $19 & 240;
     $phitmp$i2$i$i$i$i$i = (($20) + -1)|0;
     $22 = $phitmp$i2$i$i$i$i$i;$42 = $17;$95 = 1;
    }
   } else {
    $22 = 10;$42 = 0;$95 = 0;
   }
   $21 = ($22|0)==($23|0);
   if (!($21)) {
    $24 = ($22|0)==(10);
    if ($24) {
     $29 = ((($this)) + 1|0);
     $30 = HEAP32[$5>>2]|0;
     if ($95) {
      $31 = $14&255;
      $32 = $31 >>> 1;
      $33 = (($32) + 1)|0;
      _memcpy(($29|0),($30|0),($33|0))|0;
      _free($30);
     } else {
      $38 = HEAP8[$30>>0]|0;
      HEAP8[$29>>0] = $38;
      _free($30);
     }
     $43 = $42 << 1;
     $44 = $43&255;
     HEAP8[$this>>0] = $44;
     break;
    }
    $25 = ($22>>>0)<=($23>>>0);
    $26 = (($22) + 1)|0;
    $27 = (_malloc($26)|0);
    $28 = ($27|0)==(0|0);
    $or$cond$i$i$i$i$i = $25 & $28;
    if (!($or$cond$i$i$i$i$i)) {
     if ($95) {
      $34 = ((($this)) + 1|0);
      $35 = $14&255;
      $36 = $35 >>> 1;
      $37 = (($36) + 1)|0;
      _memcpy(($27|0),($34|0),($37|0))|0;
     } else {
      $39 = HEAP32[$5>>2]|0;
      $40 = HEAP8[$39>>0]|0;
      HEAP8[$27>>0] = $40;
      _free($39);
     }
     $41 = $26 | 1;
     HEAP32[$this>>2] = $41;
     HEAP32[$7>>2] = $42;
     HEAP32[$5>>2] = $27;
    }
   }
  }
 } while(0);
 ;HEAP32[$this>>2]=HEAP32[$0>>2]|0;HEAP32[$this+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$this+8>>2]=HEAP32[$0+8>>2]|0;
 HEAP32[$0>>2] = 0;
 $45 = ((($0)) + 4|0);
 HEAP32[$45>>2] = 0;
 $46 = ((($0)) + 8|0);
 HEAP32[$46>>2] = 0;
 $47 = ((($this)) + 12|0);
 $48 = ((($0)) + 12|0);
 $49 = HEAP8[$47>>0]|0;
 $50 = $49 & 1;
 $51 = ($50<<24>>24)==(0);
 do {
  if ($51) {
   $52 = ((($47)) + 1|0);
   HEAP8[$52>>0] = 0;
   HEAP8[$47>>0] = 0;
  } else {
   $53 = ((($this)) + 20|0);
   $54 = HEAP32[$53>>2]|0;
   HEAP8[$54>>0] = 0;
   $55 = ((($this)) + 16|0);
   HEAP32[$55>>2] = 0;
   $$pre$i$i$i2 = HEAP8[$47>>0]|0;
   $56 = $$pre$i$i$i2 & 1;
   $57 = ($56<<24>>24)==(0);
   if ($57) {
    $62 = $$pre$i$i$i2;$71 = 10;
   } else {
    $58 = HEAP32[$47>>2]|0;
    $59 = $58 & -2;
    $phitmp$i$i$i$i$i$i4 = (($59) + -1)|0;
    $60 = $58&255;
    $62 = $60;$71 = $phitmp$i$i$i$i$i$i4;
   }
   $61 = $62 & 1;
   $63 = ($61<<24>>24)==(0);
   if ($63) {
    $64 = $62&255;
    $65 = $64 >>> 1;
    $66 = ($62&255)<(22);
    if ($66) {
     $70 = 10;$90 = $65;$96 = 1;
    } else {
     $67 = (($65) + 16)|0;
     $68 = $67 & 240;
     $phitmp$i2$i$i$i$i$i7 = (($68) + -1)|0;
     $70 = $phitmp$i2$i$i$i$i$i7;$90 = $65;$96 = 1;
    }
   } else {
    $70 = 10;$90 = 0;$96 = 0;
   }
   $69 = ($70|0)==($71|0);
   if (!($69)) {
    $72 = ($70|0)==(10);
    if ($72) {
     $77 = ((($47)) + 1|0);
     $78 = HEAP32[$53>>2]|0;
     if ($96) {
      $79 = $62&255;
      $80 = $79 >>> 1;
      $81 = (($80) + 1)|0;
      _memcpy(($77|0),($78|0),($81|0))|0;
      _free($78);
     } else {
      $86 = HEAP8[$78>>0]|0;
      HEAP8[$77>>0] = $86;
      _free($78);
     }
     $91 = $90 << 1;
     $92 = $91&255;
     HEAP8[$47>>0] = $92;
     break;
    }
    $73 = ($70>>>0)<=($71>>>0);
    $74 = (($70) + 1)|0;
    $75 = (_malloc($74)|0);
    $76 = ($75|0)==(0|0);
    $or$cond$i$i$i$i$i9 = $73 & $76;
    if (!($or$cond$i$i$i$i$i9)) {
     if ($96) {
      $82 = ((($47)) + 1|0);
      $83 = $62&255;
      $84 = $83 >>> 1;
      $85 = (($84) + 1)|0;
      _memcpy(($75|0),($82|0),($85|0))|0;
     } else {
      $87 = HEAP32[$53>>2]|0;
      $88 = HEAP8[$87>>0]|0;
      HEAP8[$75>>0] = $88;
      _free($87);
     }
     $89 = $74 | 1;
     HEAP32[$47>>2] = $89;
     HEAP32[$55>>2] = $90;
     HEAP32[$53>>2] = $75;
    }
   }
  }
 } while(0);
 ;HEAP32[$47>>2]=HEAP32[$48>>2]|0;HEAP32[$47+4>>2]=HEAP32[$48+4>>2]|0;HEAP32[$47+8>>2]=HEAP32[$48+8>>2]|0;
 HEAP32[$48>>2] = 0;
 $93 = ((($48)) + 4|0);
 HEAP32[$93>>2] = 0;
 $94 = ((($48)) + 8|0);
 HEAP32[$94>>2] = 0;
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$$i = 0, $$0 = 0, $$0$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i16$i = 0, $$0$i$i$i23$i = 0, $$0$i$i$i33$i = 0, $$0$i$i$i42$i = 0, $$0$i$i$i52$i = 0, $$0$i10 = 0, $$0$i18 = 0, $$01 = 0, $$01$i = 0, $$01$i17 = 0, $$02 = 0, $$02$i = 0, $$07$i = 0, $$1$i = 0, $$12$i = 0;
 var $$2$i = 0, $$23$i = 0, $$3$i = 0, $$34$i = 0, $$4$i = 0, $$45$i = 0, $$5$i = 0, $$56$i = 0, $$first = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i$i14 = 0, $$pre$i13$i = 0, $$pre$i17$i = 0, $$pre$i27$i = 0, $$pre$i37$i = 0, $$pre$i4$i = 0, $$pre$i46$i = 0, $$pre$i56$i = 0, $$pre$i6 = 0;
 var $$pre$i6$i = 0, $$pre$i9$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;
 var $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0;
 var $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0;
 var $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0;
 var $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0;
 var $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0;
 var $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0;
 var $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0;
 var $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0;
 var $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0;
 var $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0;
 var $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0;
 var $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0;
 var $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0;
 var $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0;
 var $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0;
 var $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0;
 var $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0;
 var $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0;
 var $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0;
 var $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0;
 var $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0;
 var $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0;
 var $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0;
 var $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0;
 var $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0;
 var $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0;
 var $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0;
 var $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0;
 var $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $St$0$off0$i = 0, $__v$i$i = 0, $__v$i$i$i = 0, $__v$i$i15$i = 0, $__v$i$i22$i = 0, $__v$i$i32$i = 0;
 var $__v$i$i41$i = 0, $__v$i$i51$i = 0, $brmerge$i = 0, $cv$i = 0, $first$ = 0, $first$4 = 0, $first$mux$i = 0, $name$i = 0, $name$i11 = 0, $name1$i = 0, $name2$i = 0, $name2$i12 = 0, $name3$i = 0, $name4$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i16 = 0, $or$cond10$i = 0, $or$cond11$i = 0, $or$cond12$i = 0;
 var $or$cond9$i = 0, $pop_subs$0$off0$i$ph$lcssa = 0, $pop_subs$0$off0$i$ph136 = 0, $t0$0$i = 0, $t0$0$i13 = 0, $t0$1$i = 0, $t0$2$i$be = 0, $t0$2$i$lcssa = 0, $t0$2$i$ph$be = 0, $t0$2$i$ph135 = 0, $t0$2$i131 = 0, $t0$2$i131$lcssa177 = 0, $t0$2$i131$lcssa178 = 0, $t0$2$i131$lcssa179 = 0, $t0$2$i131184 = 0, $tmp = 0, $tmp3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 448|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v$i$i51$i = sp + 416|0;
 $__v$i$i41$i = sp + 396|0;
 $__v$i$i32$i = sp + 376|0;
 $__v$i$i22$i = sp + 356|0;
 $__v$i$i15$i = sp + 336|0;
 $__v$i$i$i = sp + 316|0;
 $cv$i = sp + 312|0;
 $name$i11 = sp + 300|0;
 $0 = sp + 288|0;
 $1 = sp + 272|0;
 $2 = sp + 264|0;
 $name1$i = sp + 252|0;
 $3 = sp + 240|0;
 $4 = sp + 224|0;
 $5 = sp + 216|0;
 $name2$i12 = sp + 204|0;
 $6 = sp + 192|0;
 $7 = sp + 176|0;
 $8 = sp + 172|0;
 $name3$i = sp + 160|0;
 $9 = sp + 144|0;
 $10 = sp + 136|0;
 $name4$i = sp + 124|0;
 $11 = sp + 112|0;
 $12 = sp + 96|0;
 $13 = sp + 92|0;
 $name$i = sp + 80|0;
 $name2$i = sp + 68|0;
 $__v$i$i = sp + 48|0;
 $14 = sp + 32|0;
 $15 = sp + 24|0;
 $tmp = sp + 12|0;
 $tmp3 = sp;
 $16 = $last;
 $17 = $first;
 $18 = (($16) - ($17))|0;
 $19 = ($18|0)>(1);
 L1: do {
  if ($19) {
   $20 = HEAP8[$first>>0]|0;
   $21 = ($20<<24>>24)==(76);
   $22 = ((($first)) + 1|0);
   $$first = $21 ? $22 : $first;
   $23 = HEAP8[$$first>>0]|0;
   $24 = $23 << 24 >> 24;
   switch ($24|0) {
   case 78:  {
    $25 = ($$first|0)==($last|0);
    L52: do {
     if ($25) {
      $$07$i = $last;
     } else {
      $26 = ($23<<24>>24)==(78);
      if ($26) {
       $27 = ((($$first)) + 1|0);
       $28 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($27,$last,$cv$i)|0);
       $29 = ($28|0)==($last|0);
       if ($29) {
        $$07$i = $$first;
       } else {
        $30 = ((($db)) + 52|0);
        HEAP32[$30>>2] = 0;
        $31 = HEAP8[$28>>0]|0;
        switch ($31<<24>>24) {
        case 82:  {
         HEAP32[$30>>2] = 1;
         $32 = ((($28)) + 1|0);
         $t0$0$i13 = $32;
         break;
        }
        case 79:  {
         HEAP32[$30>>2] = 2;
         $33 = ((($28)) + 1|0);
         $t0$0$i13 = $33;
         break;
        }
        default: {
         $t0$0$i13 = $28;
        }
        }
        $34 = ((($db)) + 4|0);
        $35 = HEAP32[$34>>2]|0;
        $36 = ((($db)) + 8|0);
        $37 = HEAP32[$36>>2]|0;
        $38 = ($35>>>0)<($37>>>0);
        if ($38) {
         ;HEAP32[$35>>2]=0|0;HEAP32[$35+4>>2]=0|0;HEAP32[$35+8>>2]=0|0;HEAP32[$35+12>>2]=0|0;HEAP32[$35+16>>2]=0|0;HEAP32[$35+20>>2]=0|0;
         HEAP32[$35>>2] = 0;
         $39 = ((($35)) + 4|0);
         HEAP32[$39>>2] = 0;
         $40 = ((($35)) + 8|0);
         HEAP32[$40>>2] = 0;
         $41 = ((($35)) + 12|0);
         HEAP32[$41>>2] = 0;
         $42 = ((($41)) + 4|0);
         HEAP32[$42>>2] = 0;
         $43 = ((($41)) + 8|0);
         HEAP32[$43>>2] = 0;
         $44 = HEAP32[$34>>2]|0;
         $45 = ((($44)) + 24|0);
         HEAP32[$34>>2] = $45;
        } else {
         $46 = ((($db)) + 12|0);
         $47 = HEAP32[$db>>2]|0;
         $48 = $35;
         $49 = $47;
         $50 = (($48) - ($49))|0;
         $51 = (($50|0) / 24)&-1;
         $52 = (($51) + 1)|0;
         $53 = ($50|0)<(-24);
         if ($53) {
          __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
          // unreachable;
         }
         $54 = $37;
         $55 = (($54) - ($49))|0;
         $56 = (($55|0) / 24)&-1;
         $57 = ($56>>>0)<(1073741823);
         if ($57) {
          $58 = $56 << 1;
          $59 = ($58>>>0)<($52>>>0);
          $60 = $59 ? $52 : $58;
          $$0$i$i$i$i = $60;
         } else {
          $$0$i$i$i$i = 2147483647;
         }
         __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i$i,$$0$i$i$i$i,$51,$46);
         $61 = ((($__v$i$i$i)) + 8|0);
         $62 = HEAP32[$61>>2]|0;
         ;HEAP32[$62>>2]=0|0;HEAP32[$62+4>>2]=0|0;HEAP32[$62+8>>2]=0|0;HEAP32[$62+12>>2]=0|0;HEAP32[$62+16>>2]=0|0;HEAP32[$62+20>>2]=0|0;
         HEAP32[$62>>2] = 0;
         $63 = ((($62)) + 4|0);
         HEAP32[$63>>2] = 0;
         $64 = ((($62)) + 8|0);
         HEAP32[$64>>2] = 0;
         $65 = ((($62)) + 12|0);
         HEAP32[$65>>2] = 0;
         $66 = ((($65)) + 4|0);
         HEAP32[$66>>2] = 0;
         $67 = ((($65)) + 8|0);
         HEAP32[$67>>2] = 0;
         $68 = ((($62)) + 24|0);
         HEAP32[$61>>2] = $68;
         __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i$i);
         __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i$i);
        }
        $69 = $t0$0$i13;
        $70 = (($16) - ($69))|0;
        $71 = ($70|0)>(1);
        if ($71) {
         $72 = HEAP8[$t0$0$i13>>0]|0;
         $73 = ($72<<24>>24)==(83);
         if ($73) {
          $74 = ((($t0$0$i13)) + 1|0);
          $75 = HEAP8[$74>>0]|0;
          $76 = ($75<<24>>24)==(116);
          if ($76) {
           $77 = ((($t0$0$i13)) + 2|0);
           $78 = HEAP32[$34>>2]|0;
           $79 = ((($78)) + -24|0);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj($79,17235,3);
           $t0$1$i = $77;
          } else {
           $t0$1$i = $t0$0$i13;
          }
         } else {
          $t0$1$i = $t0$0$i13;
         }
        } else {
         $t0$1$i = $t0$0$i13;
        }
        $80 = ($t0$1$i|0)==($last|0);
        if ($80) {
         $123 = HEAP32[$34>>2]|0;
         $124 = ((($123)) + -24|0);
         $126 = $123;
         while(1) {
          $125 = ((($126)) + -24|0);
          HEAP32[$34>>2] = $125;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($125);
          $$pre$i$i14 = HEAP32[$34>>2]|0;
          $127 = ($$pre$i$i14|0)==($124|0);
          if ($127) {
           $$07$i = $$first;
           break L52;
          } else {
           $126 = $$pre$i$i14;
          }
         }
        }
        $81 = ((($name3$i)) + 8|0);
        $82 = ((($name3$i)) + 1|0);
        $83 = ((($name3$i)) + 4|0);
        $84 = ((($db)) + 12|0);
        $85 = ((($db)) + 16|0);
        $86 = ((($db)) + 20|0);
        $87 = ((($db)) + 24|0);
        $88 = ((($9)) + 12|0);
        $89 = ((($9)) + 4|0);
        $90 = ((($9)) + 8|0);
        $91 = ((($db)) + 28|0);
        $92 = ((($__v$i$i41$i)) + 8|0);
        $93 = ((($12)) + 12|0);
        $94 = ((($12)) + 4|0);
        $95 = ((($12)) + 8|0);
        $96 = ((($__v$i$i51$i)) + 8|0);
        $97 = ((($11)) + 8|0);
        $98 = ((($11)) + 1|0);
        $99 = ((($11)) + 4|0);
        $100 = ((($0)) + 8|0);
        $101 = ((($0)) + 1|0);
        $102 = ((($0)) + 4|0);
        $103 = ((($1)) + 12|0);
        $104 = ((($1)) + 4|0);
        $105 = ((($1)) + 8|0);
        $106 = ((($__v$i$i15$i)) + 8|0);
        $107 = ((($4)) + 12|0);
        $108 = ((($4)) + 4|0);
        $109 = ((($4)) + 8|0);
        $110 = ((($__v$i$i22$i)) + 8|0);
        $111 = ((($3)) + 8|0);
        $112 = ((($3)) + 1|0);
        $113 = ((($3)) + 4|0);
        $114 = ((($7)) + 12|0);
        $115 = ((($7)) + 4|0);
        $116 = ((($7)) + 8|0);
        $117 = ((($__v$i$i32$i)) + 8|0);
        $118 = ((($6)) + 8|0);
        $119 = ((($6)) + 1|0);
        $120 = ((($6)) + 4|0);
        $121 = HEAP8[$t0$1$i>>0]|0;
        $122 = ($121<<24>>24)==(69);
        L80: do {
         if ($122) {
          $pop_subs$0$off0$i$ph$lcssa = 0;$t0$2$i$lcssa = $t0$1$i;
         } else {
          $811 = $121;$pop_subs$0$off0$i$ph136 = 0;$t0$2$i$ph135 = $t0$1$i;
          L81: while(1) {
           $129 = $811;$t0$2$i131 = $t0$2$i$ph135;
           L83: while(1) {
            $128 = $129 << 24 >> 24;
            switch ($128|0) {
            case 83:  {
             $t0$2$i131$lcssa177 = $t0$2$i131;
             label = 25;
             break L83;
             break;
            }
            case 84:  {
             $t0$2$i131$lcssa178 = $t0$2$i131;
             label = 50;
             break L83;
             break;
            }
            case 68:  {
             $t0$2$i131$lcssa179 = $t0$2$i131;
             label = 73;
             break L83;
             break;
            }
            case 73:  {
             $383 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($t0$2$i131,$last,$db)|0);
             $384 = ($383|0)==($t0$2$i131|0);
             $385 = ($383|0)==($last|0);
             $or$cond11$i = $384 | $385;
             if ($or$cond11$i) {
              $$07$i = $$first;
              break L52;
             }
             $386 = HEAP32[$34>>2]|0;
             $387 = ((($386)) + -24|0);
             __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($name3$i,$387);
             $388 = HEAP32[$34>>2]|0;
             $389 = ((($388)) + -24|0);
             $391 = $388;
             while(1) {
              $390 = ((($391)) + -24|0);
              HEAP32[$34>>2] = $390;
              __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($390);
              $$pre$i37$i = HEAP32[$34>>2]|0;
              $392 = ($$pre$i37$i|0)==($389|0);
              if ($392) {
               break;
              } else {
               $391 = $$pre$i37$i;
              }
             }
             $393 = ((($388)) + -48|0);
             $394 = HEAP8[$name3$i>>0]|0;
             $395 = $394 & 1;
             $396 = ($395<<24>>24)==(0);
             $397 = HEAP32[$81>>2]|0;
             $398 = $396 ? $82 : $397;
             $399 = HEAP32[$83>>2]|0;
             $400 = $394&255;
             $401 = $400 >>> 1;
             $402 = $396 ? $401 : $399;
             __THREW__ = 0;
             (invoke_iiii(387,($393|0),($398|0),($402|0))|0);
             $403 = __THREW__; __THREW__ = 0;
             $404 = $403&1;
             if ($404) {
              label = 112;
              break L81;
             }
             $405 = HEAP32[$34>>2]|0;
             $406 = ((($405)) + -24|0);
             $407 = HEAP32[$84>>2]|0;
             HEAP32[$10>>2] = $407;
             __THREW__ = 0;
             invoke_viii(403,($9|0),($406|0),($10|0));
             $408 = __THREW__; __THREW__ = 0;
             $409 = $408&1;
             if ($409) {
              label = 112;
              break L81;
             }
             $410 = HEAP32[$86>>2]|0;
             $411 = HEAP32[$87>>2]|0;
             $412 = ($410>>>0)<($411>>>0);
             if ($412) {
              $413 = ((($410)) + 4|0);
              $414 = HEAP32[$88>>2]|0;
              $415 = ((($410)) + 12|0);
              HEAP32[$415>>2] = $414;
              $416 = HEAP32[$9>>2]|0;
              HEAP32[$410>>2] = $416;
              $417 = HEAP32[$89>>2]|0;
              HEAP32[$413>>2] = $417;
              $418 = HEAP32[$90>>2]|0;
              $419 = ((($410)) + 8|0);
              HEAP32[$419>>2] = $418;
              HEAP32[$90>>2] = 0;
              HEAP32[$89>>2] = 0;
              HEAP32[$9>>2] = 0;
              $420 = HEAP32[$86>>2]|0;
              $421 = ((($420)) + 16|0);
              HEAP32[$86>>2] = $421;
             } else {
              $422 = HEAP32[$85>>2]|0;
              $423 = $410;
              $424 = $422;
              $425 = (($423) - ($424))|0;
              $426 = $425 >> 4;
              $427 = (($426) + 1)|0;
              $428 = ($425|0)<(-16);
              if ($428) {
               label = 106;
               break L81;
              }
              $432 = $411;
              $433 = (($432) - ($424))|0;
              $434 = $433 >> 4;
              $435 = ($434>>>0)<(1073741823);
              if ($435) {
               $436 = $433 >> 3;
               $437 = ($436>>>0)<($427>>>0);
               $438 = $437 ? $427 : $436;
               $$0$i$i$i42$i = $438;
              } else {
               $$0$i$i$i42$i = 2147483647;
              }
              __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i41$i,$$0$i$i$i42$i,$426,$91);
              $439 = HEAP32[$92>>2]|0;
              $440 = ((($439)) + 4|0);
              $441 = HEAP32[$88>>2]|0;
              $442 = ((($439)) + 12|0);
              HEAP32[$442>>2] = $441;
              $443 = HEAP32[$9>>2]|0;
              HEAP32[$439>>2] = $443;
              $444 = HEAP32[$89>>2]|0;
              HEAP32[$440>>2] = $444;
              $445 = HEAP32[$90>>2]|0;
              $446 = ((($439)) + 8|0);
              HEAP32[$446>>2] = $445;
              HEAP32[$90>>2] = 0;
              HEAP32[$89>>2] = 0;
              HEAP32[$9>>2] = 0;
              $447 = ((($439)) + 16|0);
              HEAP32[$92>>2] = $447;
              __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($85,$__v$i$i41$i);
              __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i41$i);
             }
             __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($9);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name3$i);
             $t0$2$i$be = $383;
             break;
            }
            case 76:  {
             $452 = ((($t0$2$i131)) + 1|0);
             $453 = ($452|0)==($last|0);
             if ($453) {
              $$07$i = $$first;
              break L52;
             } else {
              $t0$2$i$be = $452;
             }
             break;
            }
            default: {
             $t0$2$i131184 = $t0$2$i131;
             label = 115;
             break L83;
            }
            }
            $448 = HEAP8[$t0$2$i$be>>0]|0;
            $449 = ($448<<24>>24)==(69);
            if ($449) {
             $pop_subs$0$off0$i$ph$lcssa = $pop_subs$0$off0$i$ph136;$t0$2$i$lcssa = $t0$2$i$be;
             break L80;
            } else {
             $129 = $448;$t0$2$i131 = $t0$2$i$be;
            }
           }
           L103: do {
            if ((label|0) == 25) {
             label = 0;
             $130 = ((($t0$2$i131$lcssa177)) + 1|0);
             $131 = ($130|0)==($last|0);
             if (!($131)) {
              $132 = HEAP8[$130>>0]|0;
              $133 = ($132<<24>>24)==(116);
              if ($133) {
               $t0$2$i131184 = $t0$2$i131$lcssa177;
               label = 115;
               break;
              }
             }
             $134 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($t0$2$i131$lcssa177,$last,$db)|0);
             $135 = ($134|0)==($t0$2$i131$lcssa177|0);
             $136 = ($134|0)==($last|0);
             $or$cond$i16 = $135 | $136;
             if ($or$cond$i16) {
              $$07$i = $$first;
              break L52;
             }
             $137 = HEAP32[$34>>2]|0;
             $138 = ((($137)) + -24|0);
             __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($name$i11,$138);
             $139 = HEAP32[$34>>2]|0;
             $140 = ((($139)) + -24|0);
             $142 = $139;
             while(1) {
              $141 = ((($142)) + -24|0);
              HEAP32[$34>>2] = $141;
              __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($141);
              $$pre$i13$i = HEAP32[$34>>2]|0;
              $143 = ($$pre$i13$i|0)==($140|0);
              if ($143) {
               break;
              } else {
               $142 = $$pre$i13$i;
              }
             }
             $144 = ((($139)) + -48|0);
             $145 = HEAP8[$144>>0]|0;
             $146 = $145 & 1;
             $147 = ($146<<24>>24)==(0);
             if ($147) {
              $150 = $145&255;
              $151 = $150 >>> 1;
              $153 = $151;
             } else {
              $148 = ((($139)) + -44|0);
              $149 = HEAP32[$148>>2]|0;
              $153 = $149;
             }
             $152 = ($153|0)==(0);
             __THREW__ = 0;
             if ($152) {
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_($144,$name$i11);
              $214 = __THREW__; __THREW__ = 0;
              $215 = $214&1;
              if ($215) {
               label = 45;
               break L81;
              }
             } else {
              __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($0,17239,$name$i11);
              $154 = __THREW__; __THREW__ = 0;
              $155 = $154&1;
              if ($155) {
               label = 45;
               break L81;
              }
              $156 = HEAP8[$0>>0]|0;
              $157 = $156 & 1;
              $158 = ($157<<24>>24)==(0);
              $159 = HEAP32[$100>>2]|0;
              $160 = $158 ? $101 : $159;
              $161 = HEAP32[$102>>2]|0;
              $162 = $156&255;
              $163 = $162 >>> 1;
              $164 = $158 ? $163 : $161;
              __THREW__ = 0;
              (invoke_iiii(387,($144|0),($160|0),($164|0))|0);
              $165 = __THREW__; __THREW__ = 0;
              $166 = $165&1;
              if ($166) {
               label = 46;
               break L81;
              }
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
              $167 = HEAP32[$34>>2]|0;
              $168 = ((($167)) + -24|0);
              $169 = HEAP32[$84>>2]|0;
              HEAP32[$2>>2] = $169;
              __THREW__ = 0;
              invoke_viii(403,($1|0),($168|0),($2|0));
              $170 = __THREW__; __THREW__ = 0;
              $171 = $170&1;
              if ($171) {
               label = 45;
               break L81;
              }
              $172 = HEAP32[$86>>2]|0;
              $173 = HEAP32[$87>>2]|0;
              $174 = ($172>>>0)<($173>>>0);
              if ($174) {
               $175 = ((($172)) + 4|0);
               $176 = HEAP32[$103>>2]|0;
               $177 = ((($172)) + 12|0);
               HEAP32[$177>>2] = $176;
               $178 = HEAP32[$1>>2]|0;
               HEAP32[$172>>2] = $178;
               $179 = HEAP32[$104>>2]|0;
               HEAP32[$175>>2] = $179;
               $180 = HEAP32[$105>>2]|0;
               $181 = ((($172)) + 8|0);
               HEAP32[$181>>2] = $180;
               HEAP32[$105>>2] = 0;
               HEAP32[$104>>2] = 0;
               HEAP32[$1>>2] = 0;
               $182 = HEAP32[$86>>2]|0;
               $183 = ((($182)) + 16|0);
               HEAP32[$86>>2] = $183;
              } else {
               $184 = HEAP32[$85>>2]|0;
               $185 = $172;
               $186 = $184;
               $187 = (($185) - ($186))|0;
               $188 = $187 >> 4;
               $189 = (($188) + 1)|0;
               $190 = ($187|0)<(-16);
               if ($190) {
                label = 40;
                break L81;
               }
               $194 = $173;
               $195 = (($194) - ($186))|0;
               $196 = $195 >> 4;
               $197 = ($196>>>0)<(1073741823);
               if ($197) {
                $198 = $195 >> 3;
                $199 = ($198>>>0)<($189>>>0);
                $200 = $199 ? $189 : $198;
                $$0$i$i$i16$i = $200;
               } else {
                $$0$i$i$i16$i = 2147483647;
               }
               __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i15$i,$$0$i$i$i16$i,$188,$91);
               $201 = HEAP32[$106>>2]|0;
               $202 = ((($201)) + 4|0);
               $203 = HEAP32[$103>>2]|0;
               $204 = ((($201)) + 12|0);
               HEAP32[$204>>2] = $203;
               $205 = HEAP32[$1>>2]|0;
               HEAP32[$201>>2] = $205;
               $206 = HEAP32[$104>>2]|0;
               HEAP32[$202>>2] = $206;
               $207 = HEAP32[$105>>2]|0;
               $208 = ((($201)) + 8|0);
               HEAP32[$208>>2] = $207;
               HEAP32[$105>>2] = 0;
               HEAP32[$104>>2] = 0;
               HEAP32[$1>>2] = 0;
               $209 = ((($201)) + 16|0);
               HEAP32[$106>>2] = $209;
               __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($85,$__v$i$i15$i);
               __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i15$i);
              }
              __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($1);
             }
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name$i11);
             $t0$2$i$ph$be = $134;
            }
            else if ((label|0) == 50) {
             label = 0;
             $216 = (__ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($t0$2$i131$lcssa178,$last,$db)|0);
             $217 = ($216|0)==($t0$2$i131$lcssa178|0);
             $218 = ($216|0)==($last|0);
             $or$cond9$i = $217 | $218;
             if ($or$cond9$i) {
              $$07$i = $$first;
              break L52;
             }
             $219 = HEAP32[$34>>2]|0;
             $220 = ((($219)) + -24|0);
             __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($name1$i,$220);
             $221 = HEAP32[$34>>2]|0;
             $222 = ((($221)) + -24|0);
             $224 = $221;
             while(1) {
              $223 = ((($224)) + -24|0);
              HEAP32[$34>>2] = $223;
              __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($223);
              $$pre$i17$i = HEAP32[$34>>2]|0;
              $225 = ($$pre$i17$i|0)==($222|0);
              if ($225) {
               break;
              } else {
               $224 = $$pre$i17$i;
              }
             }
             $226 = ((($221)) + -48|0);
             $227 = HEAP8[$226>>0]|0;
             $228 = $227 & 1;
             $229 = ($228<<24>>24)==(0);
             if ($229) {
              $232 = $227&255;
              $233 = $232 >>> 1;
              $235 = $233;
             } else {
              $230 = ((($221)) + -44|0);
              $231 = HEAP32[$230>>2]|0;
              $235 = $231;
             }
             $234 = ($235|0)==(0);
             __THREW__ = 0;
             if ($234) {
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_($226,$name1$i);
              $253 = __THREW__; __THREW__ = 0;
              $254 = $253&1;
              if ($254) {
               label = 60;
               break L81;
              }
             } else {
              __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($3,17239,$name1$i);
              $236 = __THREW__; __THREW__ = 0;
              $237 = $236&1;
              if ($237) {
               label = 60;
               break L81;
              }
              $238 = HEAP8[$3>>0]|0;
              $239 = $238 & 1;
              $240 = ($239<<24>>24)==(0);
              $241 = HEAP32[$111>>2]|0;
              $242 = $240 ? $112 : $241;
              $243 = HEAP32[$113>>2]|0;
              $244 = $238&255;
              $245 = $244 >>> 1;
              $246 = $240 ? $245 : $243;
              __THREW__ = 0;
              (invoke_iiii(387,($226|0),($242|0),($246|0))|0);
              $247 = __THREW__; __THREW__ = 0;
              $248 = $247&1;
              if ($248) {
               label = 61;
               break L81;
              }
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
             }
             $255 = HEAP32[$34>>2]|0;
             $256 = ((($255)) + -24|0);
             $257 = HEAP32[$84>>2]|0;
             HEAP32[$5>>2] = $257;
             __THREW__ = 0;
             invoke_viii(403,($4|0),($256|0),($5|0));
             $258 = __THREW__; __THREW__ = 0;
             $259 = $258&1;
             if ($259) {
              label = 60;
              break L81;
             }
             $260 = HEAP32[$86>>2]|0;
             $261 = HEAP32[$87>>2]|0;
             $262 = ($260>>>0)<($261>>>0);
             if ($262) {
              $263 = ((($260)) + 4|0);
              $264 = HEAP32[$107>>2]|0;
              $265 = ((($260)) + 12|0);
              HEAP32[$265>>2] = $264;
              $266 = HEAP32[$4>>2]|0;
              HEAP32[$260>>2] = $266;
              $267 = HEAP32[$108>>2]|0;
              HEAP32[$263>>2] = $267;
              $268 = HEAP32[$109>>2]|0;
              $269 = ((($260)) + 8|0);
              HEAP32[$269>>2] = $268;
              HEAP32[$109>>2] = 0;
              HEAP32[$108>>2] = 0;
              HEAP32[$4>>2] = 0;
              $270 = HEAP32[$86>>2]|0;
              $271 = ((($270)) + 16|0);
              HEAP32[$86>>2] = $271;
             } else {
              $272 = HEAP32[$85>>2]|0;
              $273 = $260;
              $274 = $272;
              $275 = (($273) - ($274))|0;
              $276 = $275 >> 4;
              $277 = (($276) + 1)|0;
              $278 = ($275|0)<(-16);
              if ($278) {
               label = 67;
               break L81;
              }
              $282 = $261;
              $283 = (($282) - ($274))|0;
              $284 = $283 >> 4;
              $285 = ($284>>>0)<(1073741823);
              if ($285) {
               $286 = $283 >> 3;
               $287 = ($286>>>0)<($277>>>0);
               $288 = $287 ? $277 : $286;
               $$0$i$i$i23$i = $288;
              } else {
               $$0$i$i$i23$i = 2147483647;
              }
              __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i22$i,$$0$i$i$i23$i,$276,$91);
              $289 = HEAP32[$110>>2]|0;
              $290 = ((($289)) + 4|0);
              $291 = HEAP32[$107>>2]|0;
              $292 = ((($289)) + 12|0);
              HEAP32[$292>>2] = $291;
              $293 = HEAP32[$4>>2]|0;
              HEAP32[$289>>2] = $293;
              $294 = HEAP32[$108>>2]|0;
              HEAP32[$290>>2] = $294;
              $295 = HEAP32[$109>>2]|0;
              $296 = ((($289)) + 8|0);
              HEAP32[$296>>2] = $295;
              HEAP32[$109>>2] = 0;
              HEAP32[$108>>2] = 0;
              HEAP32[$4>>2] = 0;
              $297 = ((($289)) + 16|0);
              HEAP32[$110>>2] = $297;
              __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($85,$__v$i$i22$i);
              __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i22$i);
             }
             __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($4);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name1$i);
             $t0$2$i$ph$be = $216;
            }
            else if ((label|0) == 73) {
             label = 0;
             $298 = ((($t0$2$i131$lcssa179)) + 1|0);
             $299 = ($298|0)==($last|0);
             if (!($299)) {
              $300 = HEAP8[$298>>0]|0;
              switch ($300<<24>>24) {
              case 84: case 116:  {
               break;
              }
              default: {
               $t0$2$i131184 = $t0$2$i131$lcssa179;
               label = 115;
               break L103;
              }
              }
             }
             $301 = (__ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_($t0$2$i131$lcssa179,$last,$db)|0);
             $302 = ($301|0)==($t0$2$i131$lcssa179|0);
             $303 = ($301|0)==($last|0);
             $or$cond10$i = $302 | $303;
             if ($or$cond10$i) {
              $$07$i = $$first;
              break L52;
             }
             $304 = HEAP32[$34>>2]|0;
             $305 = ((($304)) + -24|0);
             __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($name2$i12,$305);
             $306 = HEAP32[$34>>2]|0;
             $307 = ((($306)) + -24|0);
             $309 = $306;
             while(1) {
              $308 = ((($309)) + -24|0);
              HEAP32[$34>>2] = $308;
              __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($308);
              $$pre$i27$i = HEAP32[$34>>2]|0;
              $310 = ($$pre$i27$i|0)==($307|0);
              if ($310) {
               break;
              } else {
               $309 = $$pre$i27$i;
              }
             }
             $311 = ((($306)) + -48|0);
             $312 = HEAP8[$311>>0]|0;
             $313 = $312 & 1;
             $314 = ($313<<24>>24)==(0);
             if ($314) {
              $317 = $312&255;
              $318 = $317 >>> 1;
              $320 = $318;
             } else {
              $315 = ((($306)) + -44|0);
              $316 = HEAP32[$315>>2]|0;
              $320 = $316;
             }
             $319 = ($320|0)==(0);
             __THREW__ = 0;
             if ($319) {
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_($311,$name2$i12);
              $338 = __THREW__; __THREW__ = 0;
              $339 = $338&1;
              if ($339) {
               label = 85;
               break L81;
              }
             } else {
              __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($6,17239,$name2$i12);
              $321 = __THREW__; __THREW__ = 0;
              $322 = $321&1;
              if ($322) {
               label = 85;
               break L81;
              }
              $323 = HEAP8[$6>>0]|0;
              $324 = $323 & 1;
              $325 = ($324<<24>>24)==(0);
              $326 = HEAP32[$118>>2]|0;
              $327 = $325 ? $119 : $326;
              $328 = HEAP32[$120>>2]|0;
              $329 = $323&255;
              $330 = $329 >>> 1;
              $331 = $325 ? $330 : $328;
              __THREW__ = 0;
              (invoke_iiii(387,($311|0),($327|0),($331|0))|0);
              $332 = __THREW__; __THREW__ = 0;
              $333 = $332&1;
              if ($333) {
               label = 86;
               break L81;
              }
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
             }
             $340 = HEAP32[$34>>2]|0;
             $341 = ((($340)) + -24|0);
             $342 = HEAP32[$84>>2]|0;
             HEAP32[$8>>2] = $342;
             __THREW__ = 0;
             invoke_viii(403,($7|0),($341|0),($8|0));
             $343 = __THREW__; __THREW__ = 0;
             $344 = $343&1;
             if ($344) {
              label = 85;
              break L81;
             }
             $345 = HEAP32[$86>>2]|0;
             $346 = HEAP32[$87>>2]|0;
             $347 = ($345>>>0)<($346>>>0);
             if ($347) {
              $348 = ((($345)) + 4|0);
              $349 = HEAP32[$114>>2]|0;
              $350 = ((($345)) + 12|0);
              HEAP32[$350>>2] = $349;
              $351 = HEAP32[$7>>2]|0;
              HEAP32[$345>>2] = $351;
              $352 = HEAP32[$115>>2]|0;
              HEAP32[$348>>2] = $352;
              $353 = HEAP32[$116>>2]|0;
              $354 = ((($345)) + 8|0);
              HEAP32[$354>>2] = $353;
              HEAP32[$116>>2] = 0;
              HEAP32[$115>>2] = 0;
              HEAP32[$7>>2] = 0;
              $355 = HEAP32[$86>>2]|0;
              $356 = ((($355)) + 16|0);
              HEAP32[$86>>2] = $356;
             } else {
              $357 = HEAP32[$85>>2]|0;
              $358 = $345;
              $359 = $357;
              $360 = (($358) - ($359))|0;
              $361 = $360 >> 4;
              $362 = (($361) + 1)|0;
              $363 = ($360|0)<(-16);
              if ($363) {
               label = 92;
               break L81;
              }
              $367 = $346;
              $368 = (($367) - ($359))|0;
              $369 = $368 >> 4;
              $370 = ($369>>>0)<(1073741823);
              if ($370) {
               $371 = $368 >> 3;
               $372 = ($371>>>0)<($362>>>0);
               $373 = $372 ? $362 : $371;
               $$0$i$i$i33$i = $373;
              } else {
               $$0$i$i$i33$i = 2147483647;
              }
              __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i32$i,$$0$i$i$i33$i,$361,$91);
              $374 = HEAP32[$117>>2]|0;
              $375 = ((($374)) + 4|0);
              $376 = HEAP32[$114>>2]|0;
              $377 = ((($374)) + 12|0);
              HEAP32[$377>>2] = $376;
              $378 = HEAP32[$7>>2]|0;
              HEAP32[$374>>2] = $378;
              $379 = HEAP32[$115>>2]|0;
              HEAP32[$375>>2] = $379;
              $380 = HEAP32[$116>>2]|0;
              $381 = ((($374)) + 8|0);
              HEAP32[$381>>2] = $380;
              HEAP32[$116>>2] = 0;
              HEAP32[$115>>2] = 0;
              HEAP32[$7>>2] = 0;
              $382 = ((($374)) + 16|0);
              HEAP32[$117>>2] = $382;
              __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($85,$__v$i$i32$i);
              __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i32$i);
             }
             __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($7);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name2$i12);
             $t0$2$i$ph$be = $301;
            }
           } while(0);
           if ((label|0) == 115) {
            label = 0;
            $454 = (__ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_($t0$2$i131184,$last,$db)|0);
            $455 = ($454|0)==($t0$2$i131184|0);
            $456 = ($454|0)==($last|0);
            $or$cond12$i = $455 | $456;
            if ($or$cond12$i) {
             $$07$i = $$first;
             break L52;
            }
            $457 = HEAP32[$34>>2]|0;
            $458 = ((($457)) + -24|0);
            __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($name4$i,$458);
            $459 = HEAP32[$34>>2]|0;
            $460 = ((($459)) + -24|0);
            $462 = $459;
            while(1) {
             $461 = ((($462)) + -24|0);
             HEAP32[$34>>2] = $461;
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($461);
             $$pre$i46$i = HEAP32[$34>>2]|0;
             $463 = ($$pre$i46$i|0)==($460|0);
             if ($463) {
              break;
             } else {
              $462 = $$pre$i46$i;
             }
            }
            $464 = ((($459)) + -48|0);
            $465 = HEAP8[$464>>0]|0;
            $466 = $465 & 1;
            $467 = ($466<<24>>24)==(0);
            if ($467) {
             $470 = $465&255;
             $471 = $470 >>> 1;
             $473 = $471;
            } else {
             $468 = ((($459)) + -44|0);
             $469 = HEAP32[$468>>2]|0;
             $473 = $469;
            }
            $472 = ($473|0)==(0);
            __THREW__ = 0;
            if ($472) {
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_($464,$name4$i);
             $491 = __THREW__; __THREW__ = 0;
             $492 = $491&1;
             if ($492) {
              label = 125;
              break;
             }
            } else {
             __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($11,17239,$name4$i);
             $474 = __THREW__; __THREW__ = 0;
             $475 = $474&1;
             if ($475) {
              label = 125;
              break;
             }
             $476 = HEAP8[$11>>0]|0;
             $477 = $476 & 1;
             $478 = ($477<<24>>24)==(0);
             $479 = HEAP32[$97>>2]|0;
             $480 = $478 ? $98 : $479;
             $481 = HEAP32[$99>>2]|0;
             $482 = $476&255;
             $483 = $482 >>> 1;
             $484 = $478 ? $483 : $481;
             __THREW__ = 0;
             (invoke_iiii(387,($464|0),($480|0),($484|0))|0);
             $485 = __THREW__; __THREW__ = 0;
             $486 = $485&1;
             if ($486) {
              label = 126;
              break;
             }
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($11);
            }
            $493 = HEAP32[$34>>2]|0;
            $494 = ((($493)) + -24|0);
            $495 = HEAP32[$84>>2]|0;
            HEAP32[$13>>2] = $495;
            __THREW__ = 0;
            invoke_viii(403,($12|0),($494|0),($13|0));
            $496 = __THREW__; __THREW__ = 0;
            $497 = $496&1;
            if ($497) {
             label = 125;
             break;
            }
            $498 = HEAP32[$86>>2]|0;
            $499 = HEAP32[$87>>2]|0;
            $500 = ($498>>>0)<($499>>>0);
            if ($500) {
             $501 = ((($498)) + 4|0);
             $502 = HEAP32[$93>>2]|0;
             $503 = ((($498)) + 12|0);
             HEAP32[$503>>2] = $502;
             $504 = HEAP32[$12>>2]|0;
             HEAP32[$498>>2] = $504;
             $505 = HEAP32[$94>>2]|0;
             HEAP32[$501>>2] = $505;
             $506 = HEAP32[$95>>2]|0;
             $507 = ((($498)) + 8|0);
             HEAP32[$507>>2] = $506;
             HEAP32[$95>>2] = 0;
             HEAP32[$94>>2] = 0;
             HEAP32[$12>>2] = 0;
             $508 = HEAP32[$86>>2]|0;
             $509 = ((($508)) + 16|0);
             HEAP32[$86>>2] = $509;
            } else {
             $510 = HEAP32[$85>>2]|0;
             $511 = $498;
             $512 = $510;
             $513 = (($511) - ($512))|0;
             $514 = $513 >> 4;
             $515 = (($514) + 1)|0;
             $516 = ($513|0)<(-16);
             if ($516) {
              label = 132;
              break;
             }
             $520 = $499;
             $521 = (($520) - ($512))|0;
             $522 = $521 >> 4;
             $523 = ($522>>>0)<(1073741823);
             if ($523) {
              $524 = $521 >> 3;
              $525 = ($524>>>0)<($515>>>0);
              $526 = $525 ? $515 : $524;
              $$0$i$i$i52$i = $526;
             } else {
              $$0$i$i$i52$i = 2147483647;
             }
             __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i51$i,$$0$i$i$i52$i,$514,$91);
             $527 = HEAP32[$96>>2]|0;
             $528 = ((($527)) + 4|0);
             $529 = HEAP32[$93>>2]|0;
             $530 = ((($527)) + 12|0);
             HEAP32[$530>>2] = $529;
             $531 = HEAP32[$12>>2]|0;
             HEAP32[$527>>2] = $531;
             $532 = HEAP32[$94>>2]|0;
             HEAP32[$528>>2] = $532;
             $533 = HEAP32[$95>>2]|0;
             $534 = ((($527)) + 8|0);
             HEAP32[$534>>2] = $533;
             HEAP32[$95>>2] = 0;
             HEAP32[$94>>2] = 0;
             HEAP32[$12>>2] = 0;
             $535 = ((($527)) + 16|0);
             HEAP32[$96>>2] = $535;
             __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($85,$__v$i$i51$i);
             __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i51$i);
            }
            __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($12);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name4$i);
            $t0$2$i$ph$be = $454;
           }
           $536 = HEAP8[$t0$2$i$ph$be>>0]|0;
           $537 = ($536<<24>>24)==(69);
           if ($537) {
            $pop_subs$0$off0$i$ph$lcssa = 1;$t0$2$i$lcssa = $t0$2$i$ph$be;
            break L80;
           } else {
            $811 = $536;$pop_subs$0$off0$i$ph136 = 1;$t0$2$i$ph135 = $t0$2$i$ph$be;
           }
          }
          switch (label|0) {
           case 40: {
            __THREW__ = 0;
            invoke_vi(402,($85|0));
            $191 = __THREW__; __THREW__ = 0;
            $192 = ___cxa_find_matching_catch()|0;
            $193 = tempRet0;
            __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($1);
            $$0$i18 = $193;$$01$i17 = $192;
            label = 49;
            break;
           }
           case 45: {
            $210 = ___cxa_find_matching_catch()|0;
            $211 = tempRet0;
            $$0$i18 = $211;$$01$i17 = $210;
            label = 49;
            break;
           }
           case 46: {
            $212 = ___cxa_find_matching_catch()|0;
            $213 = tempRet0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
            $$0$i18 = $213;$$01$i17 = $212;
            label = 49;
            break;
           }
           case 60: {
            $249 = ___cxa_find_matching_catch()|0;
            $250 = tempRet0;
            $$1$i = $250;$$12$i = $249;
            label = 72;
            break;
           }
           case 61: {
            $251 = ___cxa_find_matching_catch()|0;
            $252 = tempRet0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
            $$1$i = $252;$$12$i = $251;
            label = 72;
            break;
           }
           case 67: {
            __THREW__ = 0;
            invoke_vi(402,($85|0));
            $279 = __THREW__; __THREW__ = 0;
            $280 = ___cxa_find_matching_catch()|0;
            $281 = tempRet0;
            __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($4);
            $$1$i = $281;$$12$i = $280;
            label = 72;
            break;
           }
           case 85: {
            $334 = ___cxa_find_matching_catch()|0;
            $335 = tempRet0;
            $$2$i = $335;$$23$i = $334;
            label = 97;
            break;
           }
           case 86: {
            $336 = ___cxa_find_matching_catch()|0;
            $337 = tempRet0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
            $$2$i = $337;$$23$i = $336;
            label = 97;
            break;
           }
           case 92: {
            __THREW__ = 0;
            invoke_vi(402,($85|0));
            $364 = __THREW__; __THREW__ = 0;
            $365 = ___cxa_find_matching_catch()|0;
            $366 = tempRet0;
            __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($7);
            $$2$i = $366;$$23$i = $365;
            label = 97;
            break;
           }
           case 106: {
            __THREW__ = 0;
            invoke_vi(402,($85|0));
            $429 = __THREW__; __THREW__ = 0;
            $430 = ___cxa_find_matching_catch()|0;
            $431 = tempRet0;
            __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($9);
            $$3$i = $431;$$34$i = $430;
            label = 113;
            break;
           }
           case 112: {
            $450 = ___cxa_find_matching_catch()|0;
            $451 = tempRet0;
            $$3$i = $451;$$34$i = $450;
            label = 113;
            break;
           }
           case 125: {
            $487 = ___cxa_find_matching_catch()|0;
            $488 = tempRet0;
            $$4$i = $488;$$45$i = $487;
            label = 139;
            break;
           }
           case 126: {
            $489 = ___cxa_find_matching_catch()|0;
            $490 = tempRet0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($11);
            $$4$i = $490;$$45$i = $489;
            label = 139;
            break;
           }
           case 132: {
            __THREW__ = 0;
            invoke_vi(402,($85|0));
            $517 = __THREW__; __THREW__ = 0;
            $518 = ___cxa_find_matching_catch()|0;
            $519 = tempRet0;
            __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($12);
            $$4$i = $519;$$45$i = $518;
            label = 139;
            break;
           }
          }
          if ((label|0) == 49) {
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name$i11);
           $$5$i = $$0$i18;$$56$i = $$01$i17;
          }
          else if ((label|0) == 72) {
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name1$i);
           $$5$i = $$1$i;$$56$i = $$12$i;
          }
          else if ((label|0) == 97) {
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name2$i12);
           $$5$i = $$2$i;$$56$i = $$23$i;
          }
          else if ((label|0) == 113) {
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name3$i);
           $$5$i = $$3$i;$$56$i = $$34$i;
          }
          else if ((label|0) == 139) {
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name4$i);
           $$5$i = $$4$i;$$56$i = $$45$i;
          }
          ___resumeException($$56$i|0);
          // unreachable;
         }
        } while(0);
        $538 = ((($t0$2$i$lcssa)) + 1|0);
        $539 = HEAP32[$cv$i>>2]|0;
        $540 = ((($db)) + 48|0);
        HEAP32[$540>>2] = $539;
        if ($pop_subs$0$off0$i$ph$lcssa) {
         $541 = ((($db)) + 16|0);
         $542 = HEAP32[$541>>2]|0;
         $543 = HEAP32[$86>>2]|0;
         $544 = ($542|0)==($543|0);
         if ($544) {
          $$07$i = $538;
         } else {
          $545 = ((($543)) + -16|0);
          $547 = $543;
          while(1) {
           $546 = ((($547)) + -16|0);
           HEAP32[$86>>2] = $546;
           __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($546);
           $$pre$i56$i = HEAP32[$86>>2]|0;
           $548 = ($$pre$i56$i|0)==($545|0);
           if ($548) {
            $$07$i = $538;
            break;
           } else {
            $547 = $$pre$i56$i;
           }
          }
         }
        } else {
         $$07$i = $538;
        }
       }
      } else {
       $$07$i = $$first;
      }
     }
    } while(0);
    $549 = ($$07$i|0)==($$first|0);
    $first$ = $549 ? $first : $$07$i;
    $$02 = $first$;
    break L1;
    break;
   }
   case 90:  {
    $550 = ($$first|0)==($last|0);
    L237: do {
     if ($550) {
      $$0$i10 = $last;
     } else {
      $551 = ($23<<24>>24)==(90);
      if ($551) {
       $552 = ((($$first)) + 1|0);
       $553 = (__ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($552,$last,$db)|0);
       $554 = ($553|0)==($552|0);
       $555 = ($553|0)==($last|0);
       $or$cond$i = $554 | $555;
       if ($or$cond$i) {
        $$0$i10 = $$first;
       } else {
        $556 = HEAP8[$553>>0]|0;
        $557 = ($556<<24>>24)==(69);
        if ($557) {
         $558 = ((($553)) + 1|0);
         $559 = ($558|0)==($last|0);
         if ($559) {
          $$0$i10 = $$first;
         } else {
          $560 = HEAP8[$558>>0]|0;
          $561 = $560 << 24 >> 24;
          switch ($561|0) {
          case 115:  {
           $562 = ((($553)) + 2|0);
           $563 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_discriminatorEPKcS2_($562,$last)|0);
           $564 = HEAP32[$db>>2]|0;
           $565 = ((($db)) + 4|0);
           $566 = HEAP32[$565>>2]|0;
           $567 = ($564|0)==($566|0);
           if ($567) {
            $$0$i10 = $563;
            break L237;
           }
           $568 = ((($566)) + -24|0);
           (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($568,17242)|0);
           $$0$i10 = $563;
           break L237;
           break;
          }
          case 100:  {
           $569 = ((($553)) + 2|0);
           $570 = ($569|0)==($last|0);
           if ($570) {
            $$0$i10 = $$first;
            break L237;
           }
           $571 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($569,$last)|0);
           $572 = ($571|0)==($last|0);
           if ($572) {
            $$0$i10 = $$first;
            break L237;
           }
           $573 = HEAP8[$571>>0]|0;
           $574 = ($573<<24>>24)==(95);
           if (!($574)) {
            $$0$i10 = $$first;
            break L237;
           }
           $575 = ((($571)) + 1|0);
           $576 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($575,$last,$db)|0);
           $577 = ($576|0)==($575|0);
           $578 = ((($db)) + 4|0);
           $579 = HEAP32[$578>>2]|0;
           if ($577) {
            $613 = ((($579)) + -24|0);
            $615 = $579;
            while(1) {
             $614 = ((($615)) + -24|0);
             HEAP32[$578>>2] = $614;
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($614);
             $$pre$i4$i = HEAP32[$578>>2]|0;
             $616 = ($$pre$i4$i|0)==($613|0);
             if ($616) {
              $$0$i10 = $$first;
              break L237;
             } else {
              $615 = $$pre$i4$i;
             }
            }
           }
           $580 = HEAP32[$db>>2]|0;
           $581 = $579;
           $582 = $580;
           $583 = (($581) - ($582))|0;
           $584 = (($583|0) / 24)&-1;
           $585 = ($584>>>0)<(2);
           if ($585) {
            $$0$i10 = $$first;
            break L237;
           }
           $586 = ((($579)) + -24|0);
           __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($name$i,$586);
           $587 = HEAP32[$578>>2]|0;
           $588 = ((($587)) + -24|0);
           $590 = $587;
           while(1) {
            $589 = ((($590)) + -24|0);
            HEAP32[$578>>2] = $589;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($589);
            $$pre$i$i = HEAP32[$578>>2]|0;
            $591 = ($$pre$i$i|0)==($588|0);
            if ($591) {
             break;
            } else {
             $590 = $$pre$i$i;
            }
           }
           $592 = ((($587)) + -48|0);
           __THREW__ = 0;
           (invoke_iii(392,($592|0),(17239|0))|0);
           $593 = __THREW__; __THREW__ = 0;
           $594 = $593&1;
           if (!($594)) {
            $595 = HEAP32[$578>>2]|0;
            $596 = ((($595)) + -24|0);
            $597 = HEAP8[$name$i>>0]|0;
            $598 = $597 & 1;
            $599 = ($598<<24>>24)==(0);
            $600 = ((($name$i)) + 8|0);
            $601 = HEAP32[$600>>2]|0;
            $602 = ((($name$i)) + 1|0);
            $603 = $599 ? $602 : $601;
            $604 = ((($name$i)) + 4|0);
            $605 = HEAP32[$604>>2]|0;
            $606 = $597&255;
            $607 = $606 >>> 1;
            $608 = $599 ? $607 : $605;
            __THREW__ = 0;
            (invoke_iiii(387,($596|0),($603|0),($608|0))|0);
            $609 = __THREW__; __THREW__ = 0;
            $610 = $609&1;
            if (!($610)) {
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name$i);
             $$0$i10 = $576;
             break L237;
            }
           }
           $611 = ___cxa_find_matching_catch()|0;
           $612 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name$i);
           $$01$i = $612;$$02$i = $611;
           break;
          }
          default: {
           $617 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($558,$last,$db)|0);
           $618 = ($617|0)==($558|0);
           if ($618) {
            $655 = ((($db)) + 4|0);
            $656 = HEAP32[$655>>2]|0;
            $657 = ((($656)) + -24|0);
            $659 = $656;
            while(1) {
             $658 = ((($659)) + -24|0);
             HEAP32[$655>>2] = $658;
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($658);
             $$pre$i9$i = HEAP32[$655>>2]|0;
             $660 = ($$pre$i9$i|0)==($657|0);
             if ($660) {
              $$0$i10 = $$first;
              break L237;
             } else {
              $659 = $$pre$i9$i;
             }
            }
           }
           $619 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_discriminatorEPKcS2_($617,$last)|0);
           $620 = ((($db)) + 4|0);
           $621 = HEAP32[$620>>2]|0;
           $622 = HEAP32[$db>>2]|0;
           $623 = $621;
           $624 = $622;
           $625 = (($623) - ($624))|0;
           $626 = (($625|0) / 24)&-1;
           $627 = ($626>>>0)<(2);
           if ($627) {
            $$0$i10 = $619;
            break L237;
           }
           $628 = ((($621)) + -24|0);
           __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($name2$i,$628);
           $629 = HEAP32[$620>>2]|0;
           $630 = ((($629)) + -24|0);
           $632 = $629;
           while(1) {
            $631 = ((($632)) + -24|0);
            HEAP32[$620>>2] = $631;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($631);
            $$pre$i6$i = HEAP32[$620>>2]|0;
            $633 = ($$pre$i6$i|0)==($630|0);
            if ($633) {
             break;
            } else {
             $632 = $$pre$i6$i;
            }
           }
           $634 = ((($629)) + -48|0);
           __THREW__ = 0;
           (invoke_iii(392,($634|0),(17239|0))|0);
           $635 = __THREW__; __THREW__ = 0;
           $636 = $635&1;
           if (!($636)) {
            $637 = HEAP32[$620>>2]|0;
            $638 = ((($637)) + -24|0);
            $639 = HEAP8[$name2$i>>0]|0;
            $640 = $639 & 1;
            $641 = ($640<<24>>24)==(0);
            $642 = ((($name2$i)) + 8|0);
            $643 = HEAP32[$642>>2]|0;
            $644 = ((($name2$i)) + 1|0);
            $645 = $641 ? $644 : $643;
            $646 = ((($name2$i)) + 4|0);
            $647 = HEAP32[$646>>2]|0;
            $648 = $639&255;
            $649 = $648 >>> 1;
            $650 = $641 ? $649 : $647;
            __THREW__ = 0;
            (invoke_iiii(387,($638|0),($645|0),($650|0))|0);
            $651 = __THREW__; __THREW__ = 0;
            $652 = $651&1;
            if (!($652)) {
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name2$i);
             $$0$i10 = $619;
             break L237;
            }
           }
           $653 = ___cxa_find_matching_catch()|0;
           $654 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name2$i);
           $$01$i = $654;$$02$i = $653;
          }
          }
          ___resumeException($$02$i|0);
          // unreachable;
         }
        } else {
         $$0$i10 = $$first;
        }
       }
      } else {
       $$0$i10 = $$first;
      }
     }
    } while(0);
    $661 = ($$0$i10|0)==($$first|0);
    $first$4 = $661 ? $first : $$0$i10;
    STACKTOP = sp;return ($first$4|0);
    break;
   }
   default: {
    $662 = $$first;
    $663 = (($16) - ($662))|0;
    $664 = ($663|0)>(1);
    do {
     if ($664) {
      $665 = ($23<<24>>24)==(83);
      if ($665) {
       $666 = ((($$first)) + 1|0);
       $667 = HEAP8[$666>>0]|0;
       $668 = ($667<<24>>24)==(116);
       if ($668) {
        $669 = ((($$first)) + 2|0);
        $670 = ($669|0)==($last|0);
        if ($670) {
         $St$0$off0$i = 0;$t0$0$i = $last;
        } else {
         $671 = HEAP8[$669>>0]|0;
         $672 = ($671<<24>>24)==(76);
         $673 = ((($$first)) + 3|0);
         $$$i = $672 ? $673 : $669;
         $St$0$off0$i = 0;$t0$0$i = $$$i;
        }
       } else {
        $St$0$off0$i = 1;$t0$0$i = $$first;
       }
      } else {
       $St$0$off0$i = 1;$t0$0$i = $$first;
      }
      $674 = (__ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_($t0$0$i,$last,$db)|0);
      $675 = ($674|0)==($t0$0$i|0);
      $brmerge$i = $St$0$off0$i | $675;
      $first$mux$i = $675 ? $$first : $674;
      if ($brmerge$i) {
       $$0$i = $first$mux$i;
      } else {
       $676 = HEAP32[$db>>2]|0;
       $677 = ((($db)) + 4|0);
       $678 = HEAP32[$677>>2]|0;
       $679 = ($676|0)==($678|0);
       if ($679) {
        label = 205;
        break;
       }
       $680 = ((($678)) + -24|0);
       (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($680,0,17259)|0);
       $$0$i = $674;
      }
      $681 = ($$0$i|0)==($$first|0);
      if ($681) {
       label = 205;
      } else {
       $682 = ($$0$i|0)==($last|0);
       if ($682) {
        $$02 = $last;
        break L1;
       }
       $683 = HEAP8[$$0$i>>0]|0;
       $684 = ($683<<24>>24)==(73);
       if (!($684)) {
        $$02 = $$0$i;
        break L1;
       }
       $685 = HEAP32[$db>>2]|0;
       $686 = ((($db)) + 4|0);
       $687 = HEAP32[$686>>2]|0;
       $688 = ($685|0)==($687|0);
       if ($688) {
        $$02 = $first;
        break L1;
       }
       $689 = ((($db)) + 16|0);
       $690 = ((($687)) + -24|0);
       $691 = ((($db)) + 12|0);
       $692 = HEAP32[$691>>2]|0;
       HEAP32[$15>>2] = $692;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($14,$690,$15);
       $693 = ((($db)) + 20|0);
       $694 = HEAP32[$693>>2]|0;
       $695 = ((($db)) + 24|0);
       $696 = HEAP32[$695>>2]|0;
       $697 = ($694>>>0)<($696>>>0);
       if ($697) {
        $698 = ((($14)) + 12|0);
        $699 = ((($694)) + 4|0);
        $700 = HEAP32[$698>>2]|0;
        $701 = ((($694)) + 12|0);
        HEAP32[$701>>2] = $700;
        $702 = HEAP32[$14>>2]|0;
        HEAP32[$694>>2] = $702;
        $703 = ((($14)) + 4|0);
        $704 = HEAP32[$703>>2]|0;
        HEAP32[$699>>2] = $704;
        $705 = ((($14)) + 8|0);
        $706 = HEAP32[$705>>2]|0;
        $707 = ((($694)) + 8|0);
        HEAP32[$707>>2] = $706;
        HEAP32[$705>>2] = 0;
        HEAP32[$703>>2] = 0;
        HEAP32[$14>>2] = 0;
        $708 = HEAP32[$693>>2]|0;
        $709 = ((($708)) + 16|0);
        HEAP32[$693>>2] = $709;
       } else {
        $710 = ((($db)) + 28|0);
        $711 = HEAP32[$689>>2]|0;
        $712 = $694;
        $713 = $711;
        $714 = (($712) - ($713))|0;
        $715 = $714 >> 4;
        $716 = (($715) + 1)|0;
        $717 = ($714|0)<(-16);
        if ($717) {
         __THREW__ = 0;
         invoke_vi(402,($689|0));
         $718 = __THREW__; __THREW__ = 0;
         $719 = ___cxa_find_matching_catch()|0;
         $720 = tempRet0;
         __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($14);
         $$0 = $720;$$01 = $719;
         break;
        }
        $721 = $696;
        $722 = (($721) - ($713))|0;
        $723 = $722 >> 4;
        $724 = ($723>>>0)<(1073741823);
        if ($724) {
         $725 = $722 >> 3;
         $726 = ($725>>>0)<($716>>>0);
         $727 = $726 ? $716 : $725;
         $$0$i$i$i = $727;
        } else {
         $$0$i$i$i = 2147483647;
        }
        __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i,$$0$i$i$i,$715,$710);
        $728 = ((($__v$i$i)) + 8|0);
        $729 = HEAP32[$728>>2]|0;
        $730 = ((($14)) + 12|0);
        $731 = ((($729)) + 4|0);
        $732 = HEAP32[$730>>2]|0;
        $733 = ((($729)) + 12|0);
        HEAP32[$733>>2] = $732;
        $734 = HEAP32[$14>>2]|0;
        HEAP32[$729>>2] = $734;
        $735 = ((($14)) + 4|0);
        $736 = HEAP32[$735>>2]|0;
        HEAP32[$731>>2] = $736;
        $737 = ((($14)) + 8|0);
        $738 = HEAP32[$737>>2]|0;
        $739 = ((($729)) + 8|0);
        HEAP32[$739>>2] = $738;
        HEAP32[$737>>2] = 0;
        HEAP32[$735>>2] = 0;
        HEAP32[$14>>2] = 0;
        $740 = ((($729)) + 16|0);
        HEAP32[$728>>2] = $740;
        __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($689,$__v$i$i);
        __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i);
       }
       __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($14);
       $741 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($$0$i,$last,$db)|0);
       $742 = ($741|0)==($$0$i|0);
       if ($742) {
        $$02 = $first;
        break L1;
       }
       $743 = HEAP32[$686>>2]|0;
       $744 = HEAP32[$db>>2]|0;
       $745 = $743;
       $746 = $744;
       $747 = (($745) - ($746))|0;
       $748 = (($747|0) / 24)&-1;
       $749 = ($748>>>0)<(2);
       if ($749) {
        $$02 = $first;
        break L1;
       }
       $750 = ((($743)) + -24|0);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($tmp,$750);
       $751 = HEAP32[$686>>2]|0;
       $752 = ((($751)) + -24|0);
       $754 = $751;
       while(1) {
        $753 = ((($754)) + -24|0);
        HEAP32[$686>>2] = $753;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($753);
        $$pre$i = HEAP32[$686>>2]|0;
        $755 = ($$pre$i|0)==($752|0);
        if ($755) {
         break;
        } else {
         $754 = $$pre$i;
        }
       }
       $756 = ((($751)) + -48|0);
       $757 = HEAP8[$tmp>>0]|0;
       $758 = $757 & 1;
       $759 = ($758<<24>>24)==(0);
       $760 = ((($tmp)) + 8|0);
       $761 = HEAP32[$760>>2]|0;
       $762 = ((($tmp)) + 1|0);
       $763 = $759 ? $762 : $761;
       $764 = ((($tmp)) + 4|0);
       $765 = HEAP32[$764>>2]|0;
       $766 = $757&255;
       $767 = $766 >>> 1;
       $768 = $759 ? $767 : $765;
       __THREW__ = 0;
       (invoke_iiii(387,($756|0),($763|0),($768|0))|0);
       $769 = __THREW__; __THREW__ = 0;
       $770 = $769&1;
       if ($770) {
        $771 = ___cxa_find_matching_catch()|0;
        $772 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp);
        $$0 = $772;$$01 = $771;
        break;
       } else {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp);
        $$02 = $741;
        break L1;
       }
      }
     } else {
      label = 205;
     }
    } while(0);
    do {
     if ((label|0) == 205) {
      $773 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($$first,$last,$db)|0);
      $774 = ($773|0)==($$first|0);
      $775 = ($773|0)==($last|0);
      $or$cond = $774 | $775;
      if ($or$cond) {
       $$02 = $first;
       break L1;
      }
      $776 = HEAP8[$773>>0]|0;
      $777 = ($776<<24>>24)==(73);
      if (!($777)) {
       $$02 = $first;
       break L1;
      }
      $778 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($773,$last,$db)|0);
      $779 = ($778|0)==($773|0);
      if ($779) {
       $$02 = $first;
       break L1;
      }
      $780 = ((($db)) + 4|0);
      $781 = HEAP32[$780>>2]|0;
      $782 = HEAP32[$db>>2]|0;
      $783 = $781;
      $784 = $782;
      $785 = (($783) - ($784))|0;
      $786 = (($785|0) / 24)&-1;
      $787 = ($786>>>0)<(2);
      if ($787) {
       $$02 = $first;
       break L1;
      }
      $788 = ((($781)) + -24|0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($tmp3,$788);
      $789 = HEAP32[$780>>2]|0;
      $790 = ((($789)) + -24|0);
      $792 = $789;
      while(1) {
       $791 = ((($792)) + -24|0);
       HEAP32[$780>>2] = $791;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($791);
       $$pre$i6 = HEAP32[$780>>2]|0;
       $793 = ($$pre$i6|0)==($790|0);
       if ($793) {
        break;
       } else {
        $792 = $$pre$i6;
       }
      }
      $794 = ((($789)) + -48|0);
      $795 = HEAP8[$tmp3>>0]|0;
      $796 = $795 & 1;
      $797 = ($796<<24>>24)==(0);
      $798 = ((($tmp3)) + 8|0);
      $799 = HEAP32[$798>>2]|0;
      $800 = ((($tmp3)) + 1|0);
      $801 = $797 ? $800 : $799;
      $802 = ((($tmp3)) + 4|0);
      $803 = HEAP32[$802>>2]|0;
      $804 = $795&255;
      $805 = $804 >>> 1;
      $806 = $797 ? $805 : $803;
      __THREW__ = 0;
      (invoke_iiii(387,($794|0),($801|0),($806|0))|0);
      $807 = __THREW__; __THREW__ = 0;
      $808 = $807&1;
      if ($808) {
       $809 = ___cxa_find_matching_catch()|0;
       $810 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp3);
       $$0 = $810;$$01 = $809;
       break;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp3);
       $$02 = $778;
       break L1;
      }
     }
    } while(0);
    ___resumeException($$01|0);
    // unreachable;
   }
   }
  } else {
   $$02 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($$02|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i12 = 0, $$0$i$i$i17 = 0, $$0$i$i$i22 = 0, $$0$i$i$i27 = 0, $$0$i$i$i32 = 0, $$0$i$i$i37 = 0, $$0$i$i$i40 = 0, $$03 = 0, $$04 = 0, $$lcssa = 0, $$lcssa101 = 0, $$lcssa95 = 0, $$lcssa98 = 0, $$lcssa99 = 0, $$pn = 0, $$pre = 0, $0 = 0, $1 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__v$i$i = 0, $__v$i$i11 = 0, $__v$i$i16 = 0, $__v$i$i21 = 0, $__v$i$i26 = 0, $__v$i$i31 = 0;
 var $__v$i$i36 = 0, $__v$i$i38 = 0, $eh$lpad$body$i$i$index2Z2D = 0, $eh$lpad$body$i$i$indexZ2D = 0, $eh$lpad$body$i$i43$index7Z2D = 0, $eh$lpad$body$i$i43$indexZ2D = 0, $isdigit = 0, $isdigit10 = 0, $isdigit6 = 0, $isdigit8 = 0, $isdigittmp = 0, $isdigittmp5 = 0, $isdigittmp7 = 0, $isdigittmp9 = 0, $sub$0 = 0, $sub$179 = 0, $sub$179$lcssa = 0, $sub$2 = 0, $t$080 = 0, $t$080$lcssa = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v$i$i38 = sp + 284|0;
 $__v$i$i36 = sp + 264|0;
 $__v$i$i31 = sp + 244|0;
 $__v$i$i26 = sp + 224|0;
 $__v$i$i21 = sp + 204|0;
 $__v$i$i16 = sp + 184|0;
 $__v$i$i11 = sp + 164|0;
 $__v$i$i = sp + 144|0;
 $0 = sp + 120|0;
 $1 = sp + 96|0;
 $2 = sp + 72|0;
 $3 = sp + 48|0;
 $4 = sp + 24|0;
 $5 = sp;
 $6 = $last;
 $7 = $first;
 $8 = (($6) - ($7))|0;
 $9 = ($8|0)>(1);
 L1: do {
  if ($9) {
   $10 = HEAP8[$first>>0]|0;
   $11 = ($10<<24>>24)==(83);
   if ($11) {
    $12 = ((($first)) + 1|0);
    $13 = HEAP8[$12>>0]|0;
    $14 = $13 << 24 >> 24;
    L4: do {
     switch ($14|0) {
     case 97:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj15EEERAT__Kc($0,17150);
      $15 = ((($db)) + 4|0);
      $16 = HEAP32[$15>>2]|0;
      $17 = ((($db)) + 8|0);
      $18 = HEAP32[$17>>2]|0;
      $19 = ($16>>>0)<($18>>>0);
      if ($19) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($16,$0);
       $20 = HEAP32[$15>>2]|0;
       $21 = ((($20)) + 24|0);
       HEAP32[$15>>2] = $21;
      } else {
       $22 = ((($db)) + 12|0);
       $23 = HEAP32[$db>>2]|0;
       $24 = $16;
       $25 = $23;
       $26 = (($24) - ($25))|0;
       $27 = (($26|0) / 24)&-1;
       $28 = (($27) + 1)|0;
       $29 = ($26|0)<(-24);
       if ($29) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $30 = __THREW__; __THREW__ = 0;
        $31 = ___cxa_find_matching_catch()|0;
        $32 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
        $$03 = $31;$$04 = $32;
        break L4;
       }
       $33 = $18;
       $34 = (($33) - ($25))|0;
       $35 = (($34|0) / 24)&-1;
       $36 = ($35>>>0)<(1073741823);
       if ($36) {
        $37 = $35 << 1;
        $38 = ($37>>>0)<($28>>>0);
        $39 = $38 ? $28 : $37;
        $$0$i$i$i = $39;
       } else {
        $$0$i$i$i = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i,$$0$i$i$i,$27,$22);
       $40 = ((($__v$i$i)) + 8|0);
       $41 = HEAP32[$40>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($41,$0);
       $42 = ((($41)) + 24|0);
       HEAP32[$40>>2] = $42;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
      $43 = ((($first)) + 2|0);
      $$0 = $43;
      break L1;
      break;
     }
     case 98:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj18EEERAT__Kc($1,17165);
      $44 = ((($db)) + 4|0);
      $45 = HEAP32[$44>>2]|0;
      $46 = ((($db)) + 8|0);
      $47 = HEAP32[$46>>2]|0;
      $48 = ($45>>>0)<($47>>>0);
      if ($48) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($45,$1);
       $49 = HEAP32[$44>>2]|0;
       $50 = ((($49)) + 24|0);
       HEAP32[$44>>2] = $50;
      } else {
       $51 = ((($db)) + 12|0);
       $52 = HEAP32[$db>>2]|0;
       $53 = $45;
       $54 = $52;
       $55 = (($53) - ($54))|0;
       $56 = (($55|0) / 24)&-1;
       $57 = (($56) + 1)|0;
       $58 = ($55|0)<(-24);
       if ($58) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $59 = __THREW__; __THREW__ = 0;
        $60 = ___cxa_find_matching_catch()|0;
        $61 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
        $$03 = $60;$$04 = $61;
        break L4;
       }
       $62 = $47;
       $63 = (($62) - ($54))|0;
       $64 = (($63|0) / 24)&-1;
       $65 = ($64>>>0)<(1073741823);
       if ($65) {
        $66 = $64 << 1;
        $67 = ($66>>>0)<($57>>>0);
        $68 = $67 ? $57 : $66;
        $$0$i$i$i12 = $68;
       } else {
        $$0$i$i$i12 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i11,$$0$i$i$i12,$56,$51);
       $69 = ((($__v$i$i11)) + 8|0);
       $70 = HEAP32[$69>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($70,$1);
       $71 = ((($70)) + 24|0);
       HEAP32[$69>>2] = $71;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i11);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i11);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
      $72 = ((($first)) + 2|0);
      $$0 = $72;
      break L1;
      break;
     }
     case 115:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc($2,17183);
      $73 = ((($db)) + 4|0);
      $74 = HEAP32[$73>>2]|0;
      $75 = ((($db)) + 8|0);
      $76 = HEAP32[$75>>2]|0;
      $77 = ($74>>>0)<($76>>>0);
      if ($77) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($74,$2);
       $78 = HEAP32[$73>>2]|0;
       $79 = ((($78)) + 24|0);
       HEAP32[$73>>2] = $79;
      } else {
       $80 = ((($db)) + 12|0);
       $81 = HEAP32[$db>>2]|0;
       $82 = $74;
       $83 = $81;
       $84 = (($82) - ($83))|0;
       $85 = (($84|0) / 24)&-1;
       $86 = (($85) + 1)|0;
       $87 = ($84|0)<(-24);
       if ($87) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $88 = __THREW__; __THREW__ = 0;
        $89 = ___cxa_find_matching_catch()|0;
        $90 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2);
        $$03 = $89;$$04 = $90;
        break L4;
       }
       $91 = $76;
       $92 = (($91) - ($83))|0;
       $93 = (($92|0) / 24)&-1;
       $94 = ($93>>>0)<(1073741823);
       if ($94) {
        $95 = $93 << 1;
        $96 = ($95>>>0)<($86>>>0);
        $97 = $96 ? $86 : $95;
        $$0$i$i$i17 = $97;
       } else {
        $$0$i$i$i17 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i16,$$0$i$i$i17,$85,$80);
       $98 = ((($__v$i$i16)) + 8|0);
       $99 = HEAP32[$98>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($99,$2);
       $100 = ((($99)) + 24|0);
       HEAP32[$98>>2] = $100;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i16);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i16);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2);
      $101 = ((($first)) + 2|0);
      $$0 = $101;
      break L1;
      break;
     }
     case 105:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj13EEERAT__Kc($3,17195);
      $102 = ((($db)) + 4|0);
      $103 = HEAP32[$102>>2]|0;
      $104 = ((($db)) + 8|0);
      $105 = HEAP32[$104>>2]|0;
      $106 = ($103>>>0)<($105>>>0);
      if ($106) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($103,$3);
       $107 = HEAP32[$102>>2]|0;
       $108 = ((($107)) + 24|0);
       HEAP32[$102>>2] = $108;
      } else {
       $109 = ((($db)) + 12|0);
       $110 = HEAP32[$db>>2]|0;
       $111 = $103;
       $112 = $110;
       $113 = (($111) - ($112))|0;
       $114 = (($113|0) / 24)&-1;
       $115 = (($114) + 1)|0;
       $116 = ($113|0)<(-24);
       if ($116) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $117 = __THREW__; __THREW__ = 0;
        $118 = ___cxa_find_matching_catch()|0;
        $119 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
        $$03 = $118;$$04 = $119;
        break L4;
       }
       $120 = $105;
       $121 = (($120) - ($112))|0;
       $122 = (($121|0) / 24)&-1;
       $123 = ($122>>>0)<(1073741823);
       if ($123) {
        $124 = $122 << 1;
        $125 = ($124>>>0)<($115>>>0);
        $126 = $125 ? $115 : $124;
        $$0$i$i$i22 = $126;
       } else {
        $$0$i$i$i22 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i21,$$0$i$i$i22,$114,$109);
       $127 = ((($__v$i$i21)) + 8|0);
       $128 = HEAP32[$127>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($128,$3);
       $129 = ((($128)) + 24|0);
       HEAP32[$127>>2] = $129;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i21);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i21);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
      $130 = ((($first)) + 2|0);
      $$0 = $130;
      break L1;
      break;
     }
     case 111:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj13EEERAT__Kc($4,17208);
      $131 = ((($db)) + 4|0);
      $132 = HEAP32[$131>>2]|0;
      $133 = ((($db)) + 8|0);
      $134 = HEAP32[$133>>2]|0;
      $135 = ($132>>>0)<($134>>>0);
      if ($135) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($132,$4);
       $136 = HEAP32[$131>>2]|0;
       $137 = ((($136)) + 24|0);
       HEAP32[$131>>2] = $137;
      } else {
       $138 = ((($db)) + 12|0);
       $139 = HEAP32[$db>>2]|0;
       $140 = $132;
       $141 = $139;
       $142 = (($140) - ($141))|0;
       $143 = (($142|0) / 24)&-1;
       $144 = (($143) + 1)|0;
       $145 = ($142|0)<(-24);
       if ($145) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $146 = __THREW__; __THREW__ = 0;
        $147 = ___cxa_find_matching_catch()|0;
        $148 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
        $$03 = $147;$$04 = $148;
        break L4;
       }
       $149 = $134;
       $150 = (($149) - ($141))|0;
       $151 = (($150|0) / 24)&-1;
       $152 = ($151>>>0)<(1073741823);
       if ($152) {
        $153 = $151 << 1;
        $154 = ($153>>>0)<($144>>>0);
        $155 = $154 ? $144 : $153;
        $$0$i$i$i27 = $155;
       } else {
        $$0$i$i$i27 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i26,$$0$i$i$i27,$143,$138);
       $156 = ((($__v$i$i26)) + 8|0);
       $157 = HEAP32[$156>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($157,$4);
       $158 = ((($157)) + 24|0);
       HEAP32[$156>>2] = $158;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i26);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i26);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
      $159 = ((($first)) + 2|0);
      $$0 = $159;
      break L1;
      break;
     }
     case 100:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj14EEERAT__Kc($5,17221);
      $160 = ((($db)) + 4|0);
      $161 = HEAP32[$160>>2]|0;
      $162 = ((($db)) + 8|0);
      $163 = HEAP32[$162>>2]|0;
      $164 = ($161>>>0)<($163>>>0);
      if ($164) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($161,$5);
       $165 = HEAP32[$160>>2]|0;
       $166 = ((($165)) + 24|0);
       HEAP32[$160>>2] = $166;
      } else {
       $167 = ((($db)) + 12|0);
       $168 = HEAP32[$db>>2]|0;
       $169 = $161;
       $170 = $168;
       $171 = (($169) - ($170))|0;
       $172 = (($171|0) / 24)&-1;
       $173 = (($172) + 1)|0;
       $174 = ($171|0)<(-24);
       if ($174) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $175 = __THREW__; __THREW__ = 0;
        $176 = ___cxa_find_matching_catch()|0;
        $177 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
        $$03 = $176;$$04 = $177;
        break L4;
       }
       $178 = $163;
       $179 = (($178) - ($170))|0;
       $180 = (($179|0) / 24)&-1;
       $181 = ($180>>>0)<(1073741823);
       if ($181) {
        $182 = $180 << 1;
        $183 = ($182>>>0)<($173>>>0);
        $184 = $183 ? $173 : $182;
        $$0$i$i$i32 = $184;
       } else {
        $$0$i$i$i32 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i31,$$0$i$i$i32,$172,$167);
       $185 = ((($__v$i$i31)) + 8|0);
       $186 = HEAP32[$185>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($186,$5);
       $187 = ((($186)) + 24|0);
       HEAP32[$185>>2] = $187;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i31);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i31);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
      $188 = ((($first)) + 2|0);
      $$0 = $188;
      break L1;
      break;
     }
     case 95:  {
      $189 = ((($db)) + 16|0);
      $190 = HEAP32[$189>>2]|0;
      $191 = ((($db)) + 20|0);
      $192 = HEAP32[$191>>2]|0;
      $193 = ($190|0)==($192|0);
      if ($193) {
       $$0 = $first;
       break L1;
      }
      $194 = HEAP32[$190>>2]|0;
      $195 = ((($190)) + 4|0);
      $196 = HEAP32[$195>>2]|0;
      $197 = ((($db)) + 4|0);
      $198 = ((($db)) + 8|0);
      $199 = ((($db)) + 12|0);
      $200 = ((($__v$i$i36)) + 8|0);
      $201 = ($194|0)==($196|0);
      L108: do {
       if (!($201)) {
        $205 = $194;
        while(1) {
         $202 = HEAP32[$197>>2]|0;
         $203 = HEAP32[$198>>2]|0;
         $204 = ($202|0)==($203|0);
         if ($204) {
          $214 = HEAP32[$db>>2]|0;
          $215 = $202;
          $216 = $214;
          $217 = (($215) - ($216))|0;
          $218 = (($217|0) / 24)&-1;
          $219 = (($218) + 1)|0;
          $220 = ($217|0)<(-24);
          if ($220) {
           label = 59;
           break;
          }
          $221 = ($218>>>0)<(1073741823);
          if ($221) {
           $222 = $218 << 1;
           $223 = ($222>>>0)<($219>>>0);
           $224 = $223 ? $219 : $222;
           $$0$i$i$i37 = $224;
          } else {
           $$0$i$i$i37 = 2147483647;
          }
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i36,$$0$i$i$i37,$218,$199);
          $225 = HEAP32[$200>>2]|0;
          __THREW__ = 0;
          invoke_vii(400,($225|0),($205|0));
          $226 = __THREW__; __THREW__ = 0;
          $227 = $226&1;
          if ($227) {
           label = 65;
           break;
          }
          $228 = ((($225)) + 12|0);
          $229 = ((($205)) + 12|0);
          __THREW__ = 0;
          invoke_vii(400,($228|0),($229|0));
          $230 = __THREW__; __THREW__ = 0;
          $231 = $230&1;
          if ($231) {
           $$lcssa101 = $225;
           label = 64;
           break;
          }
          $236 = ((($225)) + 24|0);
          HEAP32[$200>>2] = $236;
          __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i36);
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i36);
         } else {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($202,$205);
          $206 = ((($202)) + 12|0);
          $207 = ((($205)) + 12|0);
          __THREW__ = 0;
          invoke_vii(400,($206|0),($207|0));
          $208 = __THREW__; __THREW__ = 0;
          $209 = $208&1;
          if ($209) {
           $$lcssa99 = $202;
           label = 56;
           break;
          }
          $212 = HEAP32[$197>>2]|0;
          $213 = ((($212)) + 24|0);
          HEAP32[$197>>2] = $213;
         }
         $237 = ((($205)) + 24|0);
         $238 = ($237|0)==($196|0);
         if ($238) {
          break L108;
         } else {
          $205 = $237;
         }
        }
        if ((label|0) == 56) {
         $210 = ___cxa_find_matching_catch()|0;
         $211 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($$lcssa99);
         ___resumeException($210|0);
         // unreachable;
        }
        else if ((label|0) == 59) {
         __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
         // unreachable;
        }
        else if ((label|0) == 64) {
         $232 = ___cxa_find_matching_catch()|0;
         $233 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($$lcssa101);
         $eh$lpad$body$i$i$index2Z2D = $233;$eh$lpad$body$i$i$indexZ2D = $232;
        }
        else if ((label|0) == 65) {
         $234 = ___cxa_find_matching_catch()|0;
         $235 = tempRet0;
         $eh$lpad$body$i$i$index2Z2D = $235;$eh$lpad$body$i$i$indexZ2D = $234;
        }
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i36);
        ___resumeException($eh$lpad$body$i$i$indexZ2D|0);
        // unreachable;
       }
      } while(0);
      $239 = ((($first)) + 2|0);
      $$0 = $239;
      break L1;
      break;
     }
     default: {
      $isdigittmp = (($14) + -48)|0;
      $isdigit = ($isdigittmp>>>0)<(10);
      if ($isdigit) {
       $243 = $13;
      } else {
       $240 = (_isupper($14)|0);
       $241 = ($240|0)==(0);
       if ($241) {
        $$0 = $first;
        break L1;
       }
       $$pre = HEAP8[$12>>0]|0;
       $243 = $$pre;
      }
      $242 = $243 << 24 >> 24;
      $isdigittmp5 = (($242) + -48)|0;
      $244 = ((($first)) + 2|0);
      $245 = ($244|0)==($last|0);
      if ($245) {
       $$0 = $first;
       break L1;
      }
      $isdigit6 = ($isdigittmp5>>>0)<(10);
      $246 = (($242) + -55)|0;
      $sub$0 = $isdigit6 ? $isdigittmp5 : $246;
      $sub$179 = $sub$0;$t$080 = $244;
      while(1) {
       $247 = HEAP8[$t$080>>0]|0;
       $248 = $247 << 24 >> 24;
       $isdigittmp7 = (($248) + -48)|0;
       $isdigit8 = ($isdigittmp7>>>0)<(10);
       if ($isdigit8) {
        $254 = $247;
       } else {
        $249 = (_isupper($248)|0);
        $250 = ($249|0)==(0);
        $251 = HEAP8[$t$080>>0]|0;
        if ($250) {
         $$lcssa98 = $251;$sub$179$lcssa = $sub$179;$t$080$lcssa = $t$080;
         break;
        } else {
         $254 = $251;
        }
       }
       $252 = ($sub$179*36)|0;
       $253 = $254 << 24 >> 24;
       $isdigittmp9 = (($253) + -48)|0;
       $isdigit10 = ($isdigittmp9>>>0)<(10);
       $255 = (($253) + -55)|0;
       $$pn = $isdigit10 ? $isdigittmp9 : $255;
       $sub$2 = (($$pn) + ($252))|0;
       $256 = ((($t$080)) + 1|0);
       $257 = ($256|0)==($last|0);
       if ($257) {
        $$0 = $first;
        break L1;
       } else {
        $sub$179 = $sub$2;$t$080 = $256;
       }
      }
      $258 = ($$lcssa98<<24>>24)==(95);
      if (!($258)) {
       $$0 = $first;
       break L1;
      }
      $259 = (($sub$179$lcssa) + 1)|0;
      $260 = ((($db)) + 20|0);
      $261 = HEAP32[$260>>2]|0;
      $262 = ((($db)) + 16|0);
      $263 = HEAP32[$262>>2]|0;
      $264 = $261;
      $265 = $263;
      $266 = (($264) - ($265))|0;
      $267 = $266 >> 4;
      $268 = ($259>>>0)<($267>>>0);
      if (!($268)) {
       $$0 = $first;
       break L1;
      }
      $269 = (($263) + ($259<<4)|0);
      $270 = HEAP32[$269>>2]|0;
      $271 = (((($263) + ($259<<4)|0)) + 4|0);
      $272 = HEAP32[$271>>2]|0;
      $273 = ((($db)) + 4|0);
      $274 = ((($db)) + 8|0);
      $275 = ((($db)) + 12|0);
      $276 = ((($__v$i$i38)) + 8|0);
      $277 = ($270|0)==($272|0);
      L19: do {
       if (!($277)) {
        $281 = $270;
        while(1) {
         $278 = HEAP32[$273>>2]|0;
         $279 = HEAP32[$274>>2]|0;
         $280 = ($278|0)==($279|0);
         if ($280) {
          $290 = HEAP32[$db>>2]|0;
          $291 = $278;
          $292 = $290;
          $293 = (($291) - ($292))|0;
          $294 = (($293|0) / 24)&-1;
          $295 = (($294) + 1)|0;
          $296 = ($293|0)<(-24);
          if ($296) {
           label = 86;
           break;
          }
          $297 = ($294>>>0)<(1073741823);
          if ($297) {
           $298 = $294 << 1;
           $299 = ($298>>>0)<($295>>>0);
           $300 = $299 ? $295 : $298;
           $$0$i$i$i40 = $300;
          } else {
           $$0$i$i$i40 = 2147483647;
          }
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i38,$$0$i$i$i40,$294,$275);
          $301 = HEAP32[$276>>2]|0;
          __THREW__ = 0;
          invoke_vii(400,($301|0),($281|0));
          $302 = __THREW__; __THREW__ = 0;
          $303 = $302&1;
          if ($303) {
           label = 92;
           break;
          }
          $304 = ((($301)) + 12|0);
          $305 = ((($281)) + 12|0);
          __THREW__ = 0;
          invoke_vii(400,($304|0),($305|0));
          $306 = __THREW__; __THREW__ = 0;
          $307 = $306&1;
          if ($307) {
           $$lcssa95 = $301;
           label = 91;
           break;
          }
          $312 = ((($301)) + 24|0);
          HEAP32[$276>>2] = $312;
          __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i38);
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i38);
         } else {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($278,$281);
          $282 = ((($278)) + 12|0);
          $283 = ((($281)) + 12|0);
          __THREW__ = 0;
          invoke_vii(400,($282|0),($283|0));
          $284 = __THREW__; __THREW__ = 0;
          $285 = $284&1;
          if ($285) {
           $$lcssa = $278;
           label = 83;
           break;
          }
          $288 = HEAP32[$273>>2]|0;
          $289 = ((($288)) + 24|0);
          HEAP32[$273>>2] = $289;
         }
         $313 = ((($281)) + 24|0);
         $314 = ($313|0)==($272|0);
         if ($314) {
          break L19;
         } else {
          $281 = $313;
         }
        }
        if ((label|0) == 83) {
         $286 = ___cxa_find_matching_catch()|0;
         $287 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($$lcssa);
         ___resumeException($286|0);
         // unreachable;
        }
        else if ((label|0) == 86) {
         __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
         // unreachable;
        }
        else if ((label|0) == 91) {
         $308 = ___cxa_find_matching_catch()|0;
         $309 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($$lcssa95);
         $eh$lpad$body$i$i43$index7Z2D = $309;$eh$lpad$body$i$i43$indexZ2D = $308;
        }
        else if ((label|0) == 92) {
         $310 = ___cxa_find_matching_catch()|0;
         $311 = tempRet0;
         $eh$lpad$body$i$i43$index7Z2D = $311;$eh$lpad$body$i$i43$indexZ2D = $310;
        }
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i38);
        ___resumeException($eh$lpad$body$i$i43$indexZ2D|0);
        // unreachable;
       }
      } while(0);
      $315 = ((($t$080$lcssa)) + 1|0);
      $$0 = $315;
      break L1;
     }
     }
    } while(0);
    ___resumeException($$03|0);
    // unreachable;
   } else {
    $$0 = $first;
   }
  } else {
   $$0 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$03 = 0, $$1 = 0, $$12 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 40|0;
 $1 = sp + 24|0;
 $2 = sp + 12|0;
 $3 = sp;
 $4 = $last;
 $5 = $first;
 $6 = (($4) - ($5))|0;
 $7 = ($6|0)>(3);
 L1: do {
  if ($7) {
   $8 = HEAP8[$first>>0]|0;
   $9 = ($8<<24>>24)==(68);
   if ($9) {
    $10 = ((($first)) + 1|0);
    $11 = HEAP8[$10>>0]|0;
    $12 = $11 << 24 >> 24;
    switch ($12|0) {
    case 84: case 116:  {
     break;
    }
    default: {
     $$03 = $first;
     break L1;
    }
    }
    $13 = ((($first)) + 2|0);
    $14 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($13,$last,$db)|0);
    $15 = ($14|0)==($13|0);
    $16 = ($14|0)==($last|0);
    $or$cond = $15 | $16;
    if ($or$cond) {
     $$03 = $first;
    } else {
     $17 = HEAP8[$14>>0]|0;
     $18 = ($17<<24>>24)==(69);
     if ($18) {
      $19 = HEAP32[$db>>2]|0;
      $20 = ((($db)) + 4|0);
      $21 = HEAP32[$20>>2]|0;
      $22 = ($19|0)==($21|0);
      if ($22) {
       $$03 = $first;
      } else {
       $23 = ((($21)) + -24|0);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3,$23);
       __THREW__ = 0;
       $24 = (invoke_iiii(391,($3|0),0,(17140|0))|0);
       $25 = __THREW__; __THREW__ = 0;
       $26 = $25&1;
       do {
        if ($26) {
         $35 = ___cxa_find_matching_catch()|0;
         $36 = tempRet0;
         $$1 = $36;$$12 = $35;
        } else {
         ;HEAP32[$2>>2]=HEAP32[$24>>2]|0;HEAP32[$2+4>>2]=HEAP32[$24+4>>2]|0;HEAP32[$2+8>>2]=HEAP32[$24+8>>2]|0;
         HEAP32[$24>>2] = 0;
         $27 = ((($24)) + 4|0);
         HEAP32[$27>>2] = 0;
         $28 = ((($24)) + 8|0);
         HEAP32[$28>>2] = 0;
         __THREW__ = 0;
         $29 = (invoke_iii(392,($2|0),(16956|0))|0);
         $30 = __THREW__; __THREW__ = 0;
         $31 = $30&1;
         if ($31) {
          $37 = ___cxa_find_matching_catch()|0;
          $38 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
          $$1 = $38;$$12 = $37;
          break;
         } else {
          ;HEAP32[$1>>2]=HEAP32[$29>>2]|0;HEAP32[$1+4>>2]=HEAP32[$29+4>>2]|0;HEAP32[$1+8>>2]=HEAP32[$29+8>>2]|0;
          HEAP32[$29>>2] = 0;
          $32 = ((($29)) + 4|0);
          HEAP32[$32>>2] = 0;
          $33 = ((($29)) + 8|0);
          HEAP32[$33>>2] = 0;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($0,$1);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($23,$0);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
          $34 = ((($14)) + 1|0);
          $$03 = $34;
          break L1;
         }
        }
       } while(0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
       ___resumeException($$12|0);
       // unreachable;
      }
     } else {
      $$03 = $first;
     }
    }
   } else {
    $$03 = $first;
   }
  } else {
   $$03 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($$03|0);
}
function __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($agg$result,$__lhs,$__rhs) {
 $agg$result = $agg$result|0;
 $__lhs = $__lhs|0;
 $__rhs = $__rhs|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = (_strlen($__lhs)|0);
 $3 = HEAP8[$__rhs>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 $6 = ((($__rhs)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $3&255;
 $9 = $8 >>> 1;
 $10 = $5 ? $9 : $7;
 $11 = (($10) + ($2))|0;
 __THREW__ = 0;
 invoke_viiii(412,($agg$result|0),($__lhs|0),($2|0),($11|0));
 $12 = __THREW__; __THREW__ = 0;
 $13 = $12&1;
 if (!($13)) {
  $14 = HEAP8[$__rhs>>0]|0;
  $15 = $14 & 1;
  $16 = ($15<<24>>24)==(0);
  $17 = ((($__rhs)) + 8|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = ((($__rhs)) + 1|0);
  $20 = $16 ? $19 : $18;
  __THREW__ = 0;
  (invoke_iiii(387,($agg$result|0),($20|0),($10|0))|0);
  $21 = __THREW__; __THREW__ = 0;
  $22 = $21&1;
  if (!($22)) {
   return;
  }
 }
 $23 = ___cxa_find_matching_catch()|0;
 $24 = tempRet0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($agg$result);
 ___resumeException($23|0);
 // unreachable;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcjj($this,$__s,$__sz,$__reserve) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 $__reserve = $__reserve|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__reserve>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__reserve>>>0)<(11);
 if ($1) {
  $2 = $__sz << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 1|0);
  $__p$0 = $4;
 } else {
  $5 = (($__reserve) + 16)|0;
  $6 = $5 & -16;
  $7 = (_malloc($6)|0);
  $8 = ((($this)) + 8|0);
  HEAP32[$8>>2] = $7;
  $9 = $6 | 1;
  HEAP32[$this>>2] = $9;
  $10 = ((($this)) + 4|0);
  HEAP32[$10>>2] = $__sz;
  $__p$0 = $7;
 }
 _memcpy(($__p$0|0),($__s|0),($__sz|0))|0;
 $11 = (($__p$0) + ($__sz)|0);
 HEAP8[$11>>0] = 0;
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj15EEERAT__Kc($this,$s) {
 $this = $this|0;
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this,$s,14);
 $0 = ((($this)) + 12|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($0)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = 0;
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj18EEERAT__Kc($this,$s) {
 $this = $this|0;
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this,$s,17);
 $0 = ((($this)) + 12|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($0)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = 0;
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc($this,$s) {
 $this = $this|0;
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this,$s,11);
 $0 = ((($this)) + 12|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($0)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = 0;
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj13EEERAT__Kc($this,$s) {
 $this = $this|0;
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this,$s,12);
 $0 = ((($this)) + 12|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($0)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = 0;
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj14EEERAT__Kc($this,$s) {
 $this = $this|0;
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this,$s,13);
 $0 = ((($this)) + 12|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($0)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $7 = 10;$9 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $7 = $phitmp$i;$9 = $5;
 }
 $6 = ($7>>>0)<($__n>>>0);
 $8 = $9 & 1;
 $10 = ($8<<24>>24)==(0);
 do {
  if ($6) {
   if ($10) {
    $24 = $9&255;
    $25 = $24 >>> 1;
    $27 = $25;
   } else {
    $22 = ((($this)) + 4|0);
    $23 = HEAP32[$22>>2]|0;
    $27 = $23;
   }
   $26 = (($__n) - ($7))|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$7,$26,$27,0,$27,$__n,$__s);
  } else {
   if ($10) {
    $13 = ((($this)) + 1|0);
    $14 = $13;
   } else {
    $11 = ((($this)) + 8|0);
    $12 = HEAP32[$11>>2]|0;
    $14 = $12;
   }
   _memmove(($14|0),($__s|0),($__n|0))|0;
   $15 = (($14) + ($__n)|0);
   HEAP8[$15>>0] = 0;
   $16 = HEAP8[$this>>0]|0;
   $17 = $16 & 1;
   $18 = ($17<<24>>24)==(0);
   if ($18) {
    $20 = $__n << 1;
    $21 = $20&255;
    HEAP8[$this>>0] = $21;
    break;
   } else {
    $19 = ((($this)) + 4|0);
    HEAP32[$19>>2] = $__n;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_($this,$__str) {
 $this = $this|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($this|0)==($__str|0);
 if (!($0)) {
  $1 = HEAP8[$__str>>0]|0;
  $2 = $1 & 1;
  $3 = ($2<<24>>24)==(0);
  $4 = ((($__str)) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($__str)) + 1|0);
  $7 = $3 ? $6 : $5;
  $8 = ((($__str)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = $1&255;
  $11 = $10 >>> 1;
  $12 = $3 ? $11 : $9;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj($this,$7,$12);
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i6 = 0, $$0$i$i$i18$i = 0, $$0$i$i$i7$i = 0, $$0$i$i49 = 0, $$01$i = 0, $$03$i = 0, $$1$i = 0, $$1$i9 = 0, $$12$i = 0, $$14$i = 0, $$16$i = 0, $$lcssa = 0, $$ph26 = 0, $$pre$i$i = 0, $$pre$i$i$i$i = 0, $$pre$i15$i = 0, $$pre$i22$i = 0;
 var $$pre$i24$i = 0, $$pre$i27$i = 0, $$pre$i31$i = 0, $$pre$i33$i = 0, $$pre$i35$i = 0, $$sum$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;
 var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;
 var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0;
 var $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0;
 var $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0;
 var $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0;
 var $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0;
 var $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0;
 var $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0;
 var $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0;
 var $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0;
 var $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0;
 var $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__p$0$i$i = 0, $__p$1$i$i48 = 0, $__v$i$i$i = 0, $__v$i$i$i4 = 0, $__v$i$i17$i = 0, $__v$i$i6$i = 0, $isdigit$i = 0, $isdigit11$i = 0, $isdigit13$i = 0, $isdigit9$i = 0, $isdigittmp$i = 0, $isdigittmp10$i = 0, $isdigittmp12$i = 0, $isdigittmp8$i = 0;
 var $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0, $or$cond$i$i$i$i$i$i = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i$i$i$i$i = 0, $phitmp$i2$i$i$i$i$i$i = 0, $t0$0$i = 0, $t01$0$i = 0, $t01$0$i$lcssa67 = 0, $t01$1$i = 0, $t01$2$i = 0, $t1$0$i$lcssa = 0, $t1$0$i45 = 0, $t13$0$i$lcssa = 0, $t13$0$i51 = 0, $tmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v$i$i17$i = sp + 252|0;
 $__v$i$i$i4 = sp + 232|0;
 $0 = sp + 208|0;
 $1 = sp + 192|0;
 $2 = sp + 168|0;
 $3 = sp + 152|0;
 $tmp$i = sp + 140|0;
 $4 = sp + 128|0;
 $__v$i$i6$i = sp + 108|0;
 $__v$i$i$i = sp + 88|0;
 $5 = sp + 64|0;
 $6 = sp + 48|0;
 $7 = sp + 24|0;
 $8 = sp + 12|0;
 $9 = sp;
 $10 = ($first|0)==($last|0);
 L1: do {
  if ($10) {
   $$0 = $first;
  } else {
   $11 = HEAP8[$first>>0]|0;
   $12 = $11 << 24 >> 24;
   switch ($12|0) {
   case 68: case 67:  {
    $13 = $last;
    $14 = $first;
    $15 = (($13) - ($14))|0;
    $16 = ($15|0)>(1);
    L6: do {
     if ($16) {
      $17 = HEAP32[$db>>2]|0;
      $18 = ((($db)) + 4|0);
      $19 = HEAP32[$18>>2]|0;
      $20 = ($17|0)==($19|0);
      if ($20) {
       $$03$i = $first;
      } else {
       L9: do {
        switch ($12|0) {
        case 67:  {
         $21 = ((($first)) + 1|0);
         $22 = HEAP8[$21>>0]|0;
         $23 = $22 << 24 >> 24;
         switch ($23|0) {
         case 53: case 51: case 50: case 49:  {
          break;
         }
         default: {
          $$03$i = $first;
          break L6;
         }
         }
         $24 = ((($19)) + -24|0);
         __ZN10__cxxabiv112_GLOBAL__N_19base_nameINSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEEEET_RS9_($6,$24);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($5,$6);
         $25 = HEAP32[$18>>2]|0;
         $26 = ((($db)) + 8|0);
         $27 = HEAP32[$26>>2]|0;
         $28 = ($25>>>0)<($27>>>0);
         if ($28) {
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($25,$5);
          $29 = HEAP32[$18>>2]|0;
          $30 = ((($29)) + 24|0);
          HEAP32[$18>>2] = $30;
         } else {
          $31 = ((($db)) + 12|0);
          $32 = HEAP32[$db>>2]|0;
          $33 = $25;
          $34 = $32;
          $35 = (($33) - ($34))|0;
          $36 = (($35|0) / 24)&-1;
          $37 = (($36) + 1)|0;
          $38 = ($35|0)<(-24);
          if ($38) {
           __THREW__ = 0;
           invoke_vi(402,($db|0));
           $39 = __THREW__; __THREW__ = 0;
           $40 = ___cxa_find_matching_catch()|0;
           $41 = tempRet0;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
           $$1$i = $41;$$12$i = $40;
           break L9;
          }
          $42 = $27;
          $43 = (($42) - ($34))|0;
          $44 = (($43|0) / 24)&-1;
          $45 = ($44>>>0)<(1073741823);
          if ($45) {
           $46 = $44 << 1;
           $47 = ($46>>>0)<($37>>>0);
           $48 = $47 ? $37 : $46;
           $$0$i$i$i$i = $48;
          } else {
           $$0$i$i$i$i = 2147483647;
          }
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i$i,$$0$i$i$i$i,$36,$31);
          $49 = ((($__v$i$i$i)) + 8|0);
          $50 = HEAP32[$49>>2]|0;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($50,$5);
          $51 = ((($50)) + 24|0);
          HEAP32[$49>>2] = $51;
          __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i$i);
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i$i);
         }
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
         $52 = ((($first)) + 2|0);
         $53 = ((($db)) + 60|0);
         HEAP8[$53>>0] = 1;
         $$03$i = $52;
         break L6;
         break;
        }
        case 68:  {
         $54 = ((($first)) + 1|0);
         $55 = HEAP8[$54>>0]|0;
         $56 = $55 << 24 >> 24;
         switch ($56|0) {
         case 53: case 50: case 49: case 48:  {
          break;
         }
         default: {
          $$03$i = $first;
          break L6;
         }
         }
         $57 = ((($19)) + -24|0);
         __ZN10__cxxabiv112_GLOBAL__N_19base_nameINSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEEEET_RS9_($9,$57);
         __THREW__ = 0;
         $58 = (invoke_iiii(391,($9|0),0,(17265|0))|0);
         $59 = __THREW__; __THREW__ = 0;
         $60 = $59&1;
         do {
          if ($60) {
           $92 = ___cxa_find_matching_catch()|0;
           $93 = tempRet0;
           $$0$i = $93;$$01$i = $92;
          } else {
           ;HEAP32[$8>>2]=HEAP32[$58>>2]|0;HEAP32[$8+4>>2]=HEAP32[$58+4>>2]|0;HEAP32[$8+8>>2]=HEAP32[$58+8>>2]|0;
           HEAP32[$58>>2] = 0;
           $61 = ((($58)) + 4|0);
           HEAP32[$61>>2] = 0;
           $62 = ((($58)) + 8|0);
           HEAP32[$62>>2] = 0;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($7,$8);
           $63 = HEAP32[$18>>2]|0;
           $64 = ((($db)) + 8|0);
           $65 = HEAP32[$64>>2]|0;
           $66 = ($63>>>0)<($65>>>0);
           if ($66) {
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($63,$7);
            $67 = HEAP32[$18>>2]|0;
            $68 = ((($67)) + 24|0);
            HEAP32[$18>>2] = $68;
           } else {
            $69 = ((($db)) + 12|0);
            $70 = HEAP32[$db>>2]|0;
            $71 = $63;
            $72 = $70;
            $73 = (($71) - ($72))|0;
            $74 = (($73|0) / 24)&-1;
            $75 = (($74) + 1)|0;
            $76 = ($73|0)<(-24);
            if ($76) {
             __THREW__ = 0;
             invoke_vi(402,($db|0));
             $77 = __THREW__; __THREW__ = 0;
             $78 = ___cxa_find_matching_catch()|0;
             $79 = tempRet0;
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($7);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
             $$0$i = $79;$$01$i = $78;
             break;
            }
            $80 = $65;
            $81 = (($80) - ($72))|0;
            $82 = (($81|0) / 24)&-1;
            $83 = ($82>>>0)<(1073741823);
            if ($83) {
             $84 = $82 << 1;
             $85 = ($84>>>0)<($75>>>0);
             $86 = $85 ? $75 : $84;
             $$0$i$i$i7$i = $86;
            } else {
             $$0$i$i$i7$i = 2147483647;
            }
            __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i6$i,$$0$i$i$i7$i,$74,$69);
            $87 = ((($__v$i$i6$i)) + 8|0);
            $88 = HEAP32[$87>>2]|0;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($88,$7);
            $89 = ((($88)) + 24|0);
            HEAP32[$87>>2] = $89;
            __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i6$i);
            __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i6$i);
           }
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($7);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
           $90 = ((($first)) + 2|0);
           $91 = ((($db)) + 60|0);
           HEAP8[$91>>0] = 1;
           $$03$i = $90;
           break L6;
          }
         } while(0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
         $$1$i = $$0$i;$$12$i = $$01$i;
         break;
        }
        default: {
         $$03$i = $first;
         break L6;
        }
        }
       } while(0);
       ___resumeException($$12$i|0);
       // unreachable;
      }
     } else {
      $$03$i = $first;
     }
    } while(0);
    $$0 = $$03$i;
    break L1;
    break;
   }
   case 85:  {
    $94 = $last;
    $95 = $first;
    $96 = (($94) - ($95))|0;
    $97 = ($96|0)>(2);
    $98 = ($11<<24>>24)==(85);
    $or$cond = $97 & $98;
    L41: do {
     if ($or$cond) {
      $99 = ((($first)) + 1|0);
      $100 = HEAP8[$99>>0]|0;
      $101 = $100 << 24 >> 24;
      L43: do {
       switch ($101|0) {
       case 116:  {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($1,17267,8);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($0,$1);
        $102 = ((($db)) + 4|0);
        $103 = HEAP32[$102>>2]|0;
        $104 = ((($db)) + 8|0);
        $105 = HEAP32[$104>>2]|0;
        $106 = ($103>>>0)<($105>>>0);
        if ($106) {
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($103,$0);
         $107 = HEAP32[$102>>2]|0;
         $108 = ((($107)) + 24|0);
         HEAP32[$102>>2] = $108;
        } else {
         $109 = ((($db)) + 12|0);
         $110 = HEAP32[$db>>2]|0;
         $111 = $103;
         $112 = $110;
         $113 = (($111) - ($112))|0;
         $114 = (($113|0) / 24)&-1;
         $115 = (($114) + 1)|0;
         $116 = ($113|0)<(-24);
         if ($116) {
          __THREW__ = 0;
          invoke_vi(402,($db|0));
          $117 = __THREW__; __THREW__ = 0;
          $118 = ___cxa_find_matching_catch()|0;
          $119 = tempRet0;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
          $$14$i = $119;$$16$i = $118;
          break L43;
         }
         $120 = $105;
         $121 = (($120) - ($112))|0;
         $122 = (($121|0) / 24)&-1;
         $123 = ($122>>>0)<(1073741823);
         if ($123) {
          $124 = $122 << 1;
          $125 = ($124>>>0)<($115>>>0);
          $126 = $125 ? $115 : $124;
          $$0$i$i$i$i6 = $126;
         } else {
          $$0$i$i$i$i6 = 2147483647;
         }
         __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i$i4,$$0$i$i$i$i6,$114,$109);
         $127 = ((($__v$i$i$i4)) + 8|0);
         $128 = HEAP32[$127>>2]|0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($128,$0);
         $129 = ((($128)) + 24|0);
         HEAP32[$127>>2] = $129;
         __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i$i4);
         __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i$i4);
        }
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
        $130 = ((($first)) + 2|0);
        $131 = ($130|0)==($last|0);
        if ($131) {
         $132 = HEAP32[$102>>2]|0;
         $133 = ((($132)) + -24|0);
         $135 = $132;
         while(1) {
          $134 = ((($135)) + -24|0);
          HEAP32[$102>>2] = $134;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($134);
          $$pre$i$i = HEAP32[$102>>2]|0;
          $136 = ($$pre$i$i|0)==($133|0);
          if ($136) {
           $$1$i9 = $first;
           break L41;
          } else {
           $135 = $$pre$i$i;
          }
         }
        }
        $137 = HEAP8[$130>>0]|0;
        $138 = $137 << 24 >> 24;
        $isdigittmp10$i = (($138) + -48)|0;
        $isdigit11$i = ($isdigittmp10$i>>>0)<(10);
        if ($isdigit11$i) {
         $139 = ((($first)) + 3|0);
         $140 = ($139|0)==($last|0);
         L62: do {
          if ($140) {
           $t1$0$i$lcssa = $last;
          } else {
           $t1$0$i45 = $139;
           while(1) {
            $141 = HEAP8[$t1$0$i45>>0]|0;
            $142 = $141 << 24 >> 24;
            $isdigittmp12$i = (($142) + -48)|0;
            $isdigit13$i = ($isdigittmp12$i>>>0)<(10);
            if (!($isdigit13$i)) {
             $t1$0$i$lcssa = $t1$0$i45;
             break L62;
            }
            $143 = ((($t1$0$i45)) + 1|0);
            $144 = ($143|0)==($last|0);
            if ($144) {
             $t1$0$i$lcssa = $last;
             break;
            } else {
             $t1$0$i45 = $143;
            }
           }
          }
         } while(0);
         $145 = HEAP32[$102>>2]|0;
         $146 = ((($145)) + -24|0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS7_E4typeESC_SC_($146,$130,$t1$0$i$lcssa);
         $t0$0$i = $t1$0$i$lcssa;
        } else {
         $t0$0$i = $130;
        }
        $147 = HEAP32[$102>>2]|0;
        $148 = ((($147)) + -24|0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($148,39);
        $149 = ($t0$0$i|0)==($last|0);
        if (!($149)) {
         $150 = HEAP8[$t0$0$i>>0]|0;
         $151 = ($150<<24>>24)==(95);
         if ($151) {
          $157 = ((($t0$0$i)) + 1|0);
          $$1$i9 = $157;
          break L41;
         }
        }
        $152 = HEAP32[$102>>2]|0;
        $153 = ((($152)) + -24|0);
        $155 = $152;
        while(1) {
         $154 = ((($155)) + -24|0);
         HEAP32[$102>>2] = $154;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($154);
         $$pre$i15$i = HEAP32[$102>>2]|0;
         $156 = ($$pre$i15$i|0)==($153|0);
         if ($156) {
          $$1$i9 = $first;
          break L41;
         } else {
          $155 = $$pre$i15$i;
         }
        }
        break;
       }
       case 108:  {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3,17276,9);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($2,$3);
        $158 = ((($db)) + 4|0);
        $159 = HEAP32[$158>>2]|0;
        $160 = ((($db)) + 8|0);
        $161 = HEAP32[$160>>2]|0;
        $162 = ($159>>>0)<($161>>>0);
        if ($162) {
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($159,$2);
         $163 = HEAP32[$158>>2]|0;
         $164 = ((($163)) + 24|0);
         HEAP32[$158>>2] = $164;
        } else {
         $165 = ((($db)) + 12|0);
         $166 = HEAP32[$db>>2]|0;
         $167 = $159;
         $168 = $166;
         $169 = (($167) - ($168))|0;
         $170 = (($169|0) / 24)&-1;
         $171 = (($170) + 1)|0;
         $172 = ($169|0)<(-24);
         if ($172) {
          __THREW__ = 0;
          invoke_vi(402,($db|0));
          $173 = __THREW__; __THREW__ = 0;
          $174 = ___cxa_find_matching_catch()|0;
          $175 = tempRet0;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
          $$14$i = $175;$$16$i = $174;
          break L43;
         }
         $176 = $161;
         $177 = (($176) - ($168))|0;
         $178 = (($177|0) / 24)&-1;
         $179 = ($178>>>0)<(1073741823);
         if ($179) {
          $180 = $178 << 1;
          $181 = ($180>>>0)<($171>>>0);
          $182 = $181 ? $171 : $180;
          $$0$i$i$i18$i = $182;
         } else {
          $$0$i$i$i18$i = 2147483647;
         }
         __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i17$i,$$0$i$i$i18$i,$170,$165);
         $183 = ((($__v$i$i17$i)) + 8|0);
         $184 = HEAP32[$183>>2]|0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($184,$2);
         $185 = ((($184)) + 24|0);
         HEAP32[$183>>2] = $185;
         __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i17$i);
         __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i17$i);
        }
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
        $186 = ((($first)) + 2|0);
        $187 = HEAP8[$186>>0]|0;
        $188 = ($187<<24>>24)==(118);
        L85: do {
         if ($188) {
          $189 = HEAP32[$158>>2]|0;
          $190 = ((($189)) + -24|0);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($190,41);
          $191 = ((($first)) + 3|0);
          $t01$1$i = $191;
         } else {
          $192 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($186,$last,$db)|0);
          $193 = ($192|0)==($186|0);
          $194 = HEAP32[$158>>2]|0;
          if ($193) {
           $195 = ((($194)) + -24|0);
           $197 = $194;
           while(1) {
            $196 = ((($197)) + -24|0);
            HEAP32[$158>>2] = $196;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($196);
            $$pre$i22$i = HEAP32[$158>>2]|0;
            $198 = ($$pre$i22$i|0)==($195|0);
            if ($198) {
             $$1$i9 = $first;
             break L41;
            } else {
             $197 = $$pre$i22$i;
            }
           }
          }
          $199 = HEAP32[$db>>2]|0;
          $200 = $194;
          $201 = $199;
          $202 = (($200) - ($201))|0;
          $203 = (($202|0) / 24)&-1;
          $204 = ($203>>>0)<(2);
          if ($204) {
           $$1$i9 = $first;
           break L41;
          }
          $205 = ((($194)) + -24|0);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($tmp$i,$205);
          $206 = HEAP32[$158>>2]|0;
          $207 = ((($206)) + -24|0);
          $209 = $206;
          while(1) {
           $208 = ((($209)) + -24|0);
           HEAP32[$158>>2] = $208;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($208);
           $$pre$i24$i = HEAP32[$158>>2]|0;
           $210 = ($$pre$i24$i|0)==($207|0);
           if ($210) {
            break;
           } else {
            $209 = $$pre$i24$i;
           }
          }
          $211 = ((($206)) + -48|0);
          $212 = HEAP8[$tmp$i>>0]|0;
          $213 = $212 & 1;
          $214 = ($213<<24>>24)==(0);
          $215 = ((($tmp$i)) + 8|0);
          $216 = HEAP32[$215>>2]|0;
          $217 = ((($tmp$i)) + 1|0);
          $218 = $214 ? $217 : $216;
          $219 = ((($tmp$i)) + 4|0);
          $220 = HEAP32[$219>>2]|0;
          $221 = $212&255;
          $222 = $221 >>> 1;
          $223 = $214 ? $222 : $220;
          __THREW__ = 0;
          (invoke_iiii(387,($211|0),($218|0),($223|0))|0);
          $224 = __THREW__; __THREW__ = 0;
          $225 = $224&1;
          do {
           if ($225) {
            label = 71;
           } else {
            $226 = ((($4)) + 4|0);
            $227 = ((($4)) + 8|0);
            $$pre$i$i$i$i = $212;$t01$0$i = $192;
            while(1) {
             __THREW__ = 0;
             $228 = (invoke_iiii(394,($t01$0$i|0),($last|0),($db|0))|0);
             $229 = __THREW__; __THREW__ = 0;
             $230 = $229&1;
             if ($230) {
              label = 70;
              break;
             }
             $231 = ($228|0)==($t01$0$i|0);
             $232 = HEAP32[$158>>2]|0;
             if ($231) {
              $$lcssa = $232;$t01$0$i$lcssa67 = $t01$0$i;
              label = 90;
              break;
             }
             $237 = HEAP32[$db>>2]|0;
             $238 = $232;
             $239 = $237;
             $240 = (($238) - ($239))|0;
             $241 = (($240|0) / 24)&-1;
             $242 = ($241>>>0)<(2);
             if ($242) {
              label = 125;
              break;
             }
             $243 = ((($232)) + -24|0);
             __THREW__ = 0;
             invoke_vii(396,($4|0),($243|0));
             $244 = __THREW__; __THREW__ = 0;
             $245 = $244&1;
             if ($245) {
              label = 70;
              break;
             }
             $246 = $$pre$i$i$i$i & 1;
             $247 = ($246<<24>>24)==(0);
             L105: do {
              if ($247) {
               HEAP8[$217>>0] = 0;
               HEAP8[$tmp$i>>0] = 0;
              } else {
               $248 = HEAP32[$215>>2]|0;
               HEAP8[$248>>0] = 0;
               HEAP32[$219>>2] = 0;
               $249 = HEAP32[$tmp$i>>2]|0;
               $250 = $249 & -2;
               $phitmp$i$i$i$i$i$i$i = (($250) + -1)|0;
               $251 = $249&255;
               $252 = $251 & 1;
               $253 = ($252<<24>>24)==(0);
               do {
                if ($253) {
                 $254 = $249 >>> 1;
                 $255 = $254 & 127;
                 $256 = ($251&255)<(22);
                 if ($256) {
                  $263 = $249 >>> 1;
                  $264 = $263 & 127;
                  $265 = (($264) + 1)|0;
                  _memcpy(($217|0),($248|0),($265|0))|0;
                  _free($248);
                  $$ph26 = $255;
                  break;
                 }
                 $257 = (($255) + 16)|0;
                 $258 = $257 & 240;
                 $phitmp$i2$i$i$i$i$i$i = (($258) + -1)|0;
                 $259 = ($phitmp$i2$i$i$i$i$i$i|0)==($phitmp$i$i$i$i$i$i$i|0);
                 if ($259) {
                  break L105;
                 }
                 $260 = ($phitmp$i2$i$i$i$i$i$i>>>0)<=($phitmp$i$i$i$i$i$i$i>>>0);
                 $261 = (_malloc($258)|0);
                 $262 = ($261|0)==(0|0);
                 $or$cond$i$i$i$i$i$i = $260 & $262;
                 if ($or$cond$i$i$i$i$i$i) {
                  break L105;
                 }
                 $266 = $249 >>> 1;
                 $267 = $266 & 127;
                 $268 = (($267) + 1)|0;
                 _memcpy(($261|0),($217|0),($268|0))|0;
                 $269 = $258 | 1;
                 HEAP32[$tmp$i>>2] = $269;
                 HEAP32[$219>>2] = $255;
                 HEAP32[$215>>2] = $261;
                 break L105;
                } else {
                 HEAP8[$217>>0] = 0;
                 _free($248);
                 $$ph26 = 0;
                }
               } while(0);
               $270 = $$ph26 << 1;
               $271 = $270&255;
               HEAP8[$tmp$i>>0] = $271;
              }
             } while(0);
             ;HEAP32[$tmp$i>>2]=HEAP32[$4>>2]|0;HEAP32[$tmp$i+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$tmp$i+8>>2]=HEAP32[$4+8>>2]|0;
             HEAP32[$4>>2] = 0;
             HEAP32[$226>>2] = 0;
             HEAP32[$227>>2] = 0;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
             $272 = HEAP32[$158>>2]|0;
             $273 = ((($272)) + -24|0);
             $275 = $272;
             while(1) {
              $274 = ((($275)) + -24|0);
              HEAP32[$158>>2] = $274;
              __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($274);
              $$pre$i27$i = HEAP32[$158>>2]|0;
              $276 = ($$pre$i27$i|0)==($273|0);
              if ($276) {
               break;
              } else {
               $275 = $$pre$i27$i;
              }
             }
             $277 = HEAP8[$tmp$i>>0]|0;
             $278 = $277 & 1;
             $279 = ($278<<24>>24)==(0);
             $280 = HEAP32[$219>>2]|0;
             $281 = $277&255;
             $282 = $281 >>> 1;
             $283 = $279 ? $282 : $280;
             $284 = ($283|0)==(0);
             if ($284) {
              $$pre$i$i$i$i = $277;$t01$0$i = $228;
              continue;
             }
             $285 = ((($272)) + -48|0);
             __THREW__ = 0;
             (invoke_iii(392,($285|0),(17053|0))|0);
             $286 = __THREW__; __THREW__ = 0;
             $287 = $286&1;
             if ($287) {
              label = 70;
              break;
             }
             $288 = HEAP32[$158>>2]|0;
             $289 = ((($288)) + -24|0);
             $290 = HEAP32[$215>>2]|0;
             $291 = $279 ? $217 : $290;
             __THREW__ = 0;
             (invoke_iiii(387,($289|0),($291|0),($283|0))|0);
             $292 = __THREW__; __THREW__ = 0;
             $293 = $292&1;
             if ($293) {
              label = 70;
              break;
             } else {
              $$pre$i$i$i$i = $277;$t01$0$i = $228;
             }
            }
            if ((label|0) == 70) {
             $233 = ___cxa_find_matching_catch()|0;
             $234 = tempRet0;
             $lpad$phi$index = $233;$lpad$phi$index2 = $234;
             break;
            }
            else if ((label|0) == 90) {
             $294 = ((($$lcssa)) + -24|0);
             __THREW__ = 0;
             (invoke_iii(392,($294|0),(16956|0))|0);
             $295 = __THREW__; __THREW__ = 0;
             $296 = $295&1;
             if ($296) {
              label = 71;
              break;
             }
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp$i);
             $t01$1$i = $t01$0$i$lcssa67;
             break L85;
            }
            else if ((label|0) == 125) {
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp$i);
             $$1$i9 = $first;
             break L41;
            }
           }
          } while(0);
          if ((label|0) == 71) {
           $235 = ___cxa_find_matching_catch()|0;
           $236 = tempRet0;
           $lpad$phi$index = $235;$lpad$phi$index2 = $236;
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp$i);
          $$14$i = $lpad$phi$index2;$$16$i = $lpad$phi$index;
          break L43;
         }
        } while(0);
        $297 = ($t01$1$i|0)==($last|0);
        if (!($297)) {
         $298 = HEAP8[$t01$1$i>>0]|0;
         $299 = ($298<<24>>24)==(69);
         if ($299) {
          $305 = ((($t01$1$i)) + 1|0);
          $306 = ($305|0)==($last|0);
          if ($306) {
           $307 = HEAP32[$158>>2]|0;
           $308 = ((($307)) + -24|0);
           $310 = $307;
           while(1) {
            $309 = ((($310)) + -24|0);
            HEAP32[$158>>2] = $309;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($309);
            $$pre$i33$i = HEAP32[$158>>2]|0;
            $311 = ($$pre$i33$i|0)==($308|0);
            if ($311) {
             $$1$i9 = $first;
             break L41;
            } else {
             $310 = $$pre$i33$i;
            }
           }
          }
          $312 = HEAP8[$305>>0]|0;
          $313 = $312 << 24 >> 24;
          $isdigittmp$i = (($313) + -48)|0;
          $isdigit$i = ($isdigittmp$i>>>0)<(10);
          if ($isdigit$i) {
           $314 = ((($t01$1$i)) + 2|0);
           $315 = ($314|0)==($last|0);
           L142: do {
            if ($315) {
             $t13$0$i$lcssa = $last;
            } else {
             $t13$0$i51 = $314;
             while(1) {
              $316 = HEAP8[$t13$0$i51>>0]|0;
              $317 = $316 << 24 >> 24;
              $isdigittmp8$i = (($317) + -48)|0;
              $isdigit9$i = ($isdigittmp8$i>>>0)<(10);
              if (!($isdigit9$i)) {
               $t13$0$i$lcssa = $t13$0$i51;
               break L142;
              }
              $318 = ((($t13$0$i51)) + 1|0);
              $319 = ($318|0)==($last|0);
              if ($319) {
               $t13$0$i$lcssa = $last;
               break;
              } else {
               $t13$0$i51 = $318;
              }
             }
            }
           } while(0);
           $320 = HEAP32[$158>>2]|0;
           $321 = ((($320)) + -24|0);
           $322 = HEAP8[$321>>0]|0;
           $323 = $322 & 1;
           $324 = ($323<<24>>24)==(0);
           if ($324) {
            $325 = $322&255;
            $326 = $325 >>> 1;
            $337 = 10;$338 = $326;$341 = $322;
           } else {
            $327 = ((($320)) + -20|0);
            $328 = HEAP32[$327>>2]|0;
            $329 = HEAP32[$321>>2]|0;
            $330 = $329 & -2;
            $phitmp$i$i$i = (($330) + -1)|0;
            $331 = $329&255;
            $337 = $phitmp$i$i$i;$338 = $328;$341 = $331;
           }
           $332 = $t13$0$i$lcssa;
           $333 = $305;
           $334 = (($332) - ($333))|0;
           $335 = ($t13$0$i$lcssa|0)==($305|0);
           if ($335) {
            $t01$2$i = $305;
           } else {
            $336 = (($337) - ($338))|0;
            $339 = ($336>>>0)<($334>>>0);
            do {
             if ($339) {
              $351 = (($338) + ($334))|0;
              $352 = (($351) - ($337))|0;
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEjjjjjj($321,$337,$352,$338,7,$334);
              $353 = ((($320)) + -16|0);
              $354 = HEAP32[$353>>2]|0;
              $__p$0$i$i = $354;
             } else {
              $340 = $341 & 1;
              $342 = ($340<<24>>24)==(0);
              if ($342) {
               $345 = ((($321)) + 1|0);
               $349 = $345;
              } else {
               $343 = ((($320)) + -16|0);
               $344 = HEAP32[$343>>2]|0;
               $349 = $344;
              }
              $346 = ($338|0)==(7);
              if ($346) {
               $__p$0$i$i = $349;
               break;
              }
              $347 = (($338) + -7)|0;
              $348 = ((($349)) + 7|0);
              $$sum$i$i = (($334) + 7)|0;
              $350 = (($349) + ($$sum$i$i)|0);
              _memmove(($350|0),($348|0),($347|0))|0;
              $__p$0$i$i = $349;
             }
            } while(0);
            $355 = (($338) + ($334))|0;
            $356 = HEAP8[$321>>0]|0;
            $357 = $356 & 1;
            $358 = ($357<<24>>24)==(0);
            if ($358) {
             $360 = $355 << 1;
             $361 = $360&255;
             HEAP8[$321>>0] = $361;
            } else {
             $359 = ((($320)) + -20|0);
             HEAP32[$359>>2] = $355;
            }
            $362 = (($__p$0$i$i) + ($355)|0);
            HEAP8[$362>>0] = 0;
            $363 = ($305|0)==($t13$0$i$lcssa|0);
            if ($363) {
             $t01$2$i = $t13$0$i$lcssa;
            } else {
             $364 = ((($__p$0$i$i)) + 7|0);
             $$0$i$i49 = $305;$__p$1$i$i48 = $364;
             while(1) {
              $365 = HEAP8[$$0$i$i49>>0]|0;
              HEAP8[$__p$1$i$i48>>0] = $365;
              $366 = ((($__p$1$i$i48)) + 1|0);
              $367 = ((($$0$i$i49)) + 1|0);
              $368 = ($367|0)==($t13$0$i$lcssa|0);
              if ($368) {
               $t01$2$i = $t13$0$i$lcssa;
               break;
              } else {
               $$0$i$i49 = $367;$__p$1$i$i48 = $366;
              }
             }
            }
           }
          } else {
           $t01$2$i = $305;
          }
          $369 = ($t01$2$i|0)==($last|0);
          if (!($369)) {
           $370 = HEAP8[$t01$2$i>>0]|0;
           $371 = ($370<<24>>24)==(95);
           if ($371) {
            $377 = ((($t01$2$i)) + 1|0);
            $$1$i9 = $377;
            break L41;
           }
          }
          $372 = HEAP32[$158>>2]|0;
          $373 = ((($372)) + -24|0);
          $375 = $372;
          while(1) {
           $374 = ((($375)) + -24|0);
           HEAP32[$158>>2] = $374;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($374);
           $$pre$i35$i = HEAP32[$158>>2]|0;
           $376 = ($$pre$i35$i|0)==($373|0);
           if ($376) {
            $$1$i9 = $first;
            break L41;
           } else {
            $375 = $$pre$i35$i;
           }
          }
         }
        }
        $300 = HEAP32[$158>>2]|0;
        $301 = ((($300)) + -24|0);
        $303 = $300;
        while(1) {
         $302 = ((($303)) + -24|0);
         HEAP32[$158>>2] = $302;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($302);
         $$pre$i31$i = HEAP32[$158>>2]|0;
         $304 = ($$pre$i31$i|0)==($301|0);
         if ($304) {
          $$1$i9 = $first;
          break L41;
         } else {
          $303 = $$pre$i31$i;
         }
        }
        break;
       }
       default: {
        $$1$i9 = $first;
        break L41;
       }
       }
      } while(0);
      ___resumeException($$16$i|0);
      // unreachable;
     } else {
      $$1$i9 = $first;
     }
    } while(0);
    $$0 = $$1$i9;
    break L1;
    break;
   }
   case 57: case 56: case 55: case 54: case 53: case 52: case 51: case 50: case 49:  {
    $378 = (__ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
    STACKTOP = sp;return ($378|0);
    break;
   }
   default: {
    $379 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
    $$0 = $379;
    break L1;
   }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_119parse_discriminatorEPKcS2_($first,$last) {
 $first = $first|0;
 $last = $last|0;
 var $$0 = 0, $$first = 0, $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $first$pn = 0, $isdigit = 0, $isdigit3 = 0, $isdigit5 = 0, $isdigit7 = 0, $isdigittmp = 0, $isdigittmp2 = 0, $isdigittmp4 = 0, $isdigittmp6 = 0, $t1$016 = 0, $t1$016$lcssa = 0, $t11$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($first|0)==($last|0);
 L1: do {
  if ($0) {
   $$0 = $first;
  } else {
   $1 = HEAP8[$first>>0]|0;
   $2 = ($1<<24>>24)==(95);
   if (!($2)) {
    $17 = $1 << 24 >> 24;
    $isdigittmp = (($17) + -48)|0;
    $isdigit = ($isdigittmp>>>0)<(10);
    if ($isdigit) {
     $first$pn = $first;
    } else {
     $$0 = $first;
     break;
    }
    while(1) {
     $t11$0 = ((($first$pn)) + 1|0);
     $18 = ($t11$0|0)==($last|0);
     if ($18) {
      $$0 = $last;
      break L1;
     }
     $19 = HEAP8[$t11$0>>0]|0;
     $20 = $19 << 24 >> 24;
     $isdigittmp2 = (($20) + -48)|0;
     $isdigit3 = ($isdigittmp2>>>0)<(10);
     if ($isdigit3) {
      $first$pn = $t11$0;
     } else {
      $$0 = $t11$0;
      break L1;
     }
    }
   }
   $3 = ((($first)) + 1|0);
   $4 = ($3|0)==($last|0);
   if ($4) {
    $$0 = $first;
   } else {
    $5 = HEAP8[$3>>0]|0;
    $6 = $5 << 24 >> 24;
    $isdigittmp4 = (($6) + -48)|0;
    $isdigit5 = ($isdigittmp4>>>0)<(10);
    if ($isdigit5) {
     $7 = ((($first)) + 2|0);
     $$0 = $7;
     break;
    }
    $8 = ($5<<24>>24)==(95);
    if ($8) {
     $9 = ((($first)) + 2|0);
     $10 = ($9|0)==($last|0);
     if ($10) {
      $$0 = $first;
     } else {
      $t1$016 = $9;
      while(1) {
       $11 = HEAP8[$t1$016>>0]|0;
       $12 = $11 << 24 >> 24;
       $isdigittmp6 = (($12) + -48)|0;
       $isdigit7 = ($isdigittmp6>>>0)<(10);
       if (!($isdigit7)) {
        $$lcssa = $11;$t1$016$lcssa = $t1$016;
        break;
       }
       $13 = ((($t1$016)) + 1|0);
       $14 = ($13|0)==($last|0);
       if ($14) {
        $$0 = $first;
        break L1;
       } else {
        $t1$016 = $13;
       }
      }
      $15 = ($$lcssa<<24>>24)==(95);
      $16 = ((($t1$016$lcssa)) + 1|0);
      $$first = $15 ? $16 : $first;
      return ($$first|0);
     }
    } else {
     $$0 = $first;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_19base_nameINSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEEEET_RS9_($agg$result,$s) {
 $agg$result = $agg$result|0;
 $s = $s|0;
 var $$$$i$i$i = 0, $$$$i$i$i11 = 0, $$$$i$i$i3 = 0, $$$i$i$i = 0, $$$i$i$i10 = 0, $$$i$i$i2 = 0, $$0$i$i27 = 0, $$lcssa = 0, $$lcssa32 = 0, $$lcssa33 = 0, $$sum = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $8 = 0, $9 = 0, $__p$0$i$i26 = 0, $__p$0$ph$i$i = 0, $c$0$ph = 0, $p0$0 = 0, $p0$1 = 0, $pe$0 = 0, $pe$0$ph = 0, $pe$1 = 0, $pe$1$pn = 0, $scevgep2$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$s>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 $3 = ((($s)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $0&255;
 $6 = $5 >>> 1;
 $7 = $2 ? $6 : $4;
 $8 = ($7|0)==(0);
 L1: do {
  if ($8) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($agg$result,$s);
  } else {
   $9 = ((($s)) + 8|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ((($s)) + 1|0);
   $12 = $2 ? $11 : $10;
   $13 = ($7>>>0)>(11);
   $14 = $13 ? 11 : $7;
   $15 = (_memcmp($12,17183,$14)|0);
   $16 = ($15|0)==(0);
   $17 = ($7>>>0)<(11);
   $$$i$i$i = $13&1;
   $$$$i$i$i = $17 ? -1 : $$$i$i$i;
   $18 = $16 ? $$$$i$i$i : $15;
   $19 = ($18|0)==(0);
   if ($19) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj($s,17787,70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($agg$result,17858,12);
    break;
   }
   $20 = ($7>>>0)>(12);
   $21 = $20 ? 12 : $7;
   $22 = (_memcmp($12,17195,$21)|0);
   $23 = ($22|0)==(0);
   $24 = ($7>>>0)<(12);
   $$$i$i$i2 = $20&1;
   $$$$i$i$i3 = $24 ? -1 : $$$i$i$i2;
   $25 = $23 ? $$$$i$i$i3 : $22;
   $26 = ($25|0)==(0);
   if ($26) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj($s,17871,49);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($agg$result,17921,13);
    break;
   }
   $27 = (_memcmp($12,17208,$21)|0);
   $28 = ($27|0)==(0);
   $29 = $28 ? $$$$i$i$i3 : $27;
   $30 = ($29|0)==(0);
   if ($30) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj($s,17935,49);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($agg$result,17985,13);
    break;
   }
   $31 = ($7>>>0)>(13);
   $32 = $31 ? 13 : $7;
   $33 = (_memcmp($12,17221,$32)|0);
   $34 = ($33|0)==(0);
   $35 = ($7>>>0)<(13);
   $$$i$i$i10 = $31&1;
   $$$$i$i$i11 = $35 ? -1 : $$$i$i$i10;
   $36 = $34 ? $$$$i$i$i11 : $33;
   $37 = ($36|0)==(0);
   if ($37) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj($s,17999,50);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($agg$result,18050,14);
    break;
   }
   $38 = (($12) + ($7)|0);
   $$sum = (($7) + -1)|0;
   $39 = (($12) + ($$sum)|0);
   $40 = HEAP8[$39>>0]|0;
   $41 = ($40<<24>>24)==(62);
   L16: do {
    if ($41) {
     $c$0$ph = 1;$pe$0$ph = $38;
     L17: while(1) {
      $pe$0 = $pe$0$ph;
      L19: while(1) {
       $42 = ((($pe$0)) + -1|0);
       $43 = ($42|0)==($12|0);
       if ($43) {
        break L17;
       }
       $46 = ((($pe$0)) + -2|0);
       $47 = HEAP8[$46>>0]|0;
       switch ($47<<24>>24) {
       case 60:  {
        $$lcssa = $46;$$lcssa32 = $42;
        label = 16;
        break L19;
        break;
       }
       case 62:  {
        $$lcssa33 = $42;
        label = 17;
        break L19;
        break;
       }
       default: {
        $pe$0 = $42;
       }
       }
      }
      if ((label|0) == 16) {
       label = 0;
       $48 = (($c$0$ph) + -1)|0;
       $49 = ($48|0)==(0);
       if ($49) {
        $pe$1 = $$lcssa;
        break L16;
       } else {
        $c$0$ph = $48;$pe$0$ph = $$lcssa32;
        continue;
       }
      }
      else if ((label|0) == 17) {
       label = 0;
       $50 = (($c$0$ph) + 1)|0;
       $c$0$ph = $50;$pe$0$ph = $$lcssa33;
       continue;
      }
     }
     HEAP32[$agg$result>>2] = 0;
     $44 = ((($agg$result)) + 4|0);
     HEAP32[$44>>2] = 0;
     $45 = ((($agg$result)) + 8|0);
     HEAP32[$45>>2] = 0;
     break L1;
    } else {
     $pe$1 = $38;
    }
   } while(0);
   $pe$1$pn = $pe$1;
   while(1) {
    $p0$0 = ((($pe$1$pn)) + -1|0);
    $51 = ($p0$0|0)==($12|0);
    if ($51) {
     $p0$1 = $12;
     break;
    }
    $52 = HEAP8[$p0$0>>0]|0;
    $53 = ($52<<24>>24)==(58);
    if ($53) {
     $p0$1 = $pe$1$pn;
     break;
    } else {
     $pe$1$pn = $p0$0;
    }
   }
   $54 = $p0$1;
   $55 = $pe$1;
   $56 = (($55) - ($54))|0;
   $57 = ($56>>>0)>(4294967279);
   if ($57) {
    __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($agg$result);
    // unreachable;
   }
   $58 = ($56>>>0)<(11);
   if ($58) {
    $59 = $56 << 1;
    $60 = $59&255;
    HEAP8[$agg$result>>0] = $60;
    $61 = ((($agg$result)) + 1|0);
    $__p$0$ph$i$i = $61;
   } else {
    $62 = (($56) + 16)|0;
    $63 = $62 & -16;
    $64 = (_malloc($63)|0);
    $65 = ((($agg$result)) + 8|0);
    HEAP32[$65>>2] = $64;
    $66 = $63 | 1;
    HEAP32[$agg$result>>2] = $66;
    $67 = ((($agg$result)) + 4|0);
    HEAP32[$67>>2] = $56;
    $__p$0$ph$i$i = $64;
   }
   $68 = ($p0$1|0)==($pe$1|0);
   if (!($68)) {
    $$0$i$i27 = $p0$1;$__p$0$i$i26 = $__p$0$ph$i$i;
    while(1) {
     $69 = HEAP8[$$0$i$i27>>0]|0;
     HEAP8[$__p$0$i$i26>>0] = $69;
     $70 = ((($$0$i$i27)) + 1|0);
     $71 = ((($__p$0$i$i26)) + 1|0);
     $72 = ($70|0)==($pe$1|0);
     if ($72) {
      break;
     } else {
      $$0$i$i27 = $70;$__p$0$i$i26 = $71;
     }
    }
   }
   $scevgep2$i$i = (($__p$0$ph$i$i) + ($56)|0);
   HEAP8[$scevgep2$i$i>>0] = 0;
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS7_E4typeESC_SC_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$03 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$04 = 0, $phitmp$i = 0, $scevgep = 0, $scevgep1 = 0, $scevgep2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $4 = $1&255;
  $5 = $4 >>> 1;
  $15 = 10;$16 = $5;$41 = $1;
 } else {
  $6 = ((($this)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$this>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $8&255;
  $15 = $phitmp$i;$16 = $7;$41 = $10;
 }
 $11 = $__last;
 $12 = (($11) - ($0))|0;
 $13 = ($__last|0)==($__first|0);
 do {
  if (!($13)) {
   $14 = (($15) - ($16))|0;
   $17 = ($14>>>0)<($12>>>0);
   if ($17) {
    $18 = (($16) + ($12))|0;
    $19 = (($18) - ($15))|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEjjjjjj($this,$15,$19,$16,$16,0);
    $$pre = HEAP8[$this>>0]|0;
    $21 = $$pre;
   } else {
    $21 = $41;
   }
   $20 = $21 & 1;
   $22 = ($20<<24>>24)==(0);
   if ($22) {
    $25 = ((($this)) + 1|0);
    $29 = $25;
   } else {
    $23 = ((($this)) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    $29 = $24;
   }
   $26 = (($16) - ($0))|0;
   $scevgep = (($__last) + ($26)|0);
   $scevgep1 = $scevgep;
   $27 = ($__first|0)==($__last|0);
   if (!($27)) {
    $28 = (($29) + ($16)|0);
    $$03 = $__first;$__p$04 = $28;
    while(1) {
     $30 = HEAP8[$$03>>0]|0;
     HEAP8[$__p$04>>0] = $30;
     $31 = ((($__p$04)) + 1|0);
     $32 = ((($$03)) + 1|0);
     $33 = ($32|0)==($__last|0);
     if ($33) {
      break;
     } else {
      $$03 = $32;$__p$04 = $31;
     }
    }
   }
   $scevgep2 = (($29) + ($scevgep1)|0);
   HEAP8[$scevgep2>>0] = 0;
   $34 = (($16) + ($12))|0;
   $35 = HEAP8[$this>>0]|0;
   $36 = $35 & 1;
   $37 = ($36<<24>>24)==(0);
   if ($37) {
    $39 = $34 << 1;
    $40 = $39&255;
    HEAP8[$this>>0] = $40;
    break;
   } else {
    $38 = ((($this)) + 4|0);
    HEAP32[$38>>2] = $34;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cap$0 = 0, $__p$0 = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)!=(0);
 if ($2) {
  $5 = HEAP32[$this>>2]|0;
  $6 = $5 & -2;
  $7 = (($6) + -1)|0;
  $8 = ((($this)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $__cap$0 = $7;$__sz$0 = $9;
 } else {
  $3 = $0&255;
  $4 = $3 >>> 1;
  $__cap$0 = 10;$__sz$0 = $4;
 }
 $10 = ($__sz$0|0)==($__cap$0|0);
 if ($10) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEjjjjjj($this,$__cap$0,1,$__cap$0,$__cap$0,0);
  $11 = HEAP8[$this>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   label = 7;
  } else {
   label = 8;
  }
 } else {
  if ($2) {
   label = 8;
  } else {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $14 = ((($this)) + 1|0);
  $15 = $__sz$0 << 1;
  $16 = (($15) + 2)|0;
  $17 = $16&255;
  HEAP8[$this>>0] = $17;
  $$pre = (($__sz$0) + 1)|0;
  $$pn = $14;$__p$0$sum$pre$phiZZZ2D = $$pre;
 }
 else if ((label|0) == 8) {
  $18 = ((($this)) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($__sz$0) + 1)|0;
  $21 = ((($this)) + 4|0);
  HEAP32[$21>>2] = $20;
  $$pn = $19;$__p$0$sum$pre$phiZZZ2D = $20;
 }
 $__p$0 = (($$pn) + ($__sz$0)|0);
 HEAP8[$__p$0>>0] = $__c;
 $22 = (($$pn) + ($__p$0$sum$pre$phiZZZ2D)|0);
 HEAP8[$22>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEjjjjjj($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_add) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_add = $__n_add|0;
 var $$sum = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (-17 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 1|0);
  $20 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $20 = $6;
 }
 $8 = ($__old_cap>>>0)<(2147483623);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(11);
  $14 = (($12) + 16)|0;
  $15 = $14 & -16;
  $16 = $13 ? 11 : $15;
  $17 = $16;
 } else {
  $17 = -17;
 }
 $18 = (_malloc($17)|0);
 $19 = ($__n_copy|0)==(0);
 if (!($19)) {
  _memcpy(($18|0),($20|0),($__n_copy|0))|0;
 }
 $21 = ($__old_sz|0)==($__n_copy|0);
 if (!($21)) {
  $22 = (($__old_sz) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $23 = (($18) + ($$sum)|0);
  $24 = (($20) + ($__n_copy)|0);
  _memcpy(($23|0),($24|0),($22|0))|0;
 }
 $25 = ($__old_cap|0)==(10);
 if (!($25)) {
  _free($20);
 }
 $26 = ((($this)) + 8|0);
 HEAP32[$26>>2] = $18;
 $27 = $17 | 1;
 HEAP32[$this>>2] = $27;
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i10 = 0, $$0$i$i$i100 = 0, $$0$i$i$i105 = 0, $$0$i$i$i110 = 0, $$0$i$i$i115 = 0, $$0$i$i$i120 = 0, $$0$i$i$i125 = 0, $$0$i$i$i130 = 0, $$0$i$i$i135 = 0, $$0$i$i$i140 = 0, $$0$i$i$i145 = 0, $$0$i$i$i15 = 0, $$0$i$i$i150 = 0, $$0$i$i$i155 = 0, $$0$i$i$i160 = 0, $$0$i$i$i165 = 0, $$0$i$i$i170 = 0, $$0$i$i$i175 = 0;
 var $$0$i$i$i180 = 0, $$0$i$i$i185 = 0, $$0$i$i$i190 = 0, $$0$i$i$i195 = 0, $$0$i$i$i20 = 0, $$0$i$i$i200 = 0, $$0$i$i$i205 = 0, $$0$i$i$i210 = 0, $$0$i$i$i215 = 0, $$0$i$i$i220 = 0, $$0$i$i$i225 = 0, $$0$i$i$i25 = 0, $$0$i$i$i30 = 0, $$0$i$i$i35 = 0, $$0$i$i$i40 = 0, $$0$i$i$i45 = 0, $$0$i$i$i5 = 0, $$0$i$i$i50 = 0, $$0$i$i$i55 = 0, $$0$i$i$i60 = 0;
 var $$0$i$i$i65 = 0, $$0$i$i$i70 = 0, $$0$i$i$i75 = 0, $$0$i$i$i80 = 0, $$0$i$i$i85 = 0, $$0$i$i$i90 = 0, $$0$i$i$i95 = 0, $$02 = 0, $$03 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0;
 var $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0;
 var $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0;
 var $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0;
 var $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0;
 var $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0;
 var $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0;
 var $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0;
 var $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0;
 var $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0;
 var $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0;
 var $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0, $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0, $1202 = 0, $1203 = 0, $1204 = 0;
 var $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1221 = 0, $1222 = 0;
 var $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0, $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0, $1239 = 0, $124 = 0, $1240 = 0;
 var $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1249 = 0, $125 = 0, $1250 = 0, $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0, $1258 = 0, $1259 = 0;
 var $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0, $1266 = 0, $1267 = 0, $1268 = 0, $1269 = 0, $127 = 0, $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0, $1274 = 0, $1275 = 0, $1276 = 0, $1277 = 0;
 var $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0, $1284 = 0, $1285 = 0, $1286 = 0, $1287 = 0, $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0;
 var $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1311 = 0, $1312 = 0;
 var $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0, $132 = 0, $1320 = 0, $1321 = 0, $1322 = 0, $1323 = 0, $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0, $1328 = 0, $1329 = 0, $133 = 0, $1330 = 0;
 var $1331 = 0, $1332 = 0, $1333 = 0, $1334 = 0, $1335 = 0, $1336 = 0, $1337 = 0, $1338 = 0, $1339 = 0, $134 = 0, $1340 = 0, $1341 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0, $1346 = 0, $1347 = 0, $1348 = 0, $1349 = 0;
 var $135 = 0, $1350 = 0, $1351 = 0, $1352 = 0, $1353 = 0, $1354 = 0, $1355 = 0, $1356 = 0, $1357 = 0, $1358 = 0, $1359 = 0, $136 = 0, $1360 = 0, $1361 = 0, $1362 = 0, $1363 = 0, $1364 = 0, $1365 = 0, $1366 = 0, $1367 = 0;
 var $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1371 = 0, $1372 = 0, $1373 = 0, $1374 = 0, $1375 = 0, $1376 = 0, $1377 = 0, $1378 = 0, $1379 = 0, $138 = 0, $1380 = 0, $1381 = 0, $1382 = 0, $1383 = 0, $1384 = 0, $1385 = 0;
 var $1386 = 0, $1387 = 0, $1388 = 0, $1389 = 0, $139 = 0, $1390 = 0, $1391 = 0, $1392 = 0, $1393 = 0, $1394 = 0, $1395 = 0, $1396 = 0, $1397 = 0, $1398 = 0, $1399 = 0, $14 = 0, $140 = 0, $1400 = 0, $1401 = 0, $1402 = 0;
 var $1403 = 0, $1404 = 0, $1405 = 0, $1406 = 0, $1407 = 0, $1408 = 0, $1409 = 0, $141 = 0, $1410 = 0, $1411 = 0, $1412 = 0, $1413 = 0, $1414 = 0, $1415 = 0, $1416 = 0, $1417 = 0, $1418 = 0, $1419 = 0, $142 = 0, $1420 = 0;
 var $1421 = 0, $1422 = 0, $1423 = 0, $1424 = 0, $1425 = 0, $1426 = 0, $1427 = 0, $1428 = 0, $1429 = 0, $143 = 0, $1430 = 0, $1431 = 0, $1432 = 0, $1433 = 0, $1434 = 0, $1435 = 0, $1436 = 0, $1437 = 0, $1438 = 0, $1439 = 0;
 var $144 = 0, $1440 = 0, $1441 = 0, $1442 = 0, $1443 = 0, $1444 = 0, $1445 = 0, $1446 = 0, $1447 = 0, $1448 = 0, $1449 = 0, $145 = 0, $1450 = 0, $1451 = 0, $1452 = 0, $1453 = 0, $1454 = 0, $1455 = 0, $1456 = 0, $1457 = 0;
 var $1458 = 0, $1459 = 0, $146 = 0, $1460 = 0, $1461 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0;
 var $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0;
 var $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0;
 var $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0;
 var $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0;
 var $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0;
 var $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0;
 var $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0;
 var $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0;
 var $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0;
 var $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0;
 var $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0;
 var $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0;
 var $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0;
 var $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0;
 var $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0;
 var $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0;
 var $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0;
 var $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0;
 var $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0;
 var $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0;
 var $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0;
 var $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0;
 var $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0;
 var $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0;
 var $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0;
 var $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0;
 var $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0;
 var $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0;
 var $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0;
 var $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0;
 var $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0;
 var $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0;
 var $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0;
 var $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0;
 var $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0;
 var $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0;
 var $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0;
 var $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0;
 var $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0;
 var $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0;
 var $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0;
 var $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0;
 var $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0;
 var $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0;
 var $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0;
 var $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $__v$i$i = 0, $__v$i$i104 = 0, $__v$i$i109 = 0, $__v$i$i114 = 0, $__v$i$i119 = 0, $__v$i$i124 = 0, $__v$i$i129 = 0, $__v$i$i134 = 0, $__v$i$i139 = 0;
 var $__v$i$i14 = 0, $__v$i$i144 = 0, $__v$i$i149 = 0, $__v$i$i154 = 0, $__v$i$i159 = 0, $__v$i$i164 = 0, $__v$i$i169 = 0, $__v$i$i174 = 0, $__v$i$i179 = 0, $__v$i$i184 = 0, $__v$i$i189 = 0, $__v$i$i19 = 0, $__v$i$i194 = 0, $__v$i$i199 = 0, $__v$i$i204 = 0, $__v$i$i209 = 0, $__v$i$i214 = 0, $__v$i$i219 = 0, $__v$i$i224 = 0, $__v$i$i24 = 0;
 var $__v$i$i29 = 0, $__v$i$i34 = 0, $__v$i$i39 = 0, $__v$i$i4 = 0, $__v$i$i44 = 0, $__v$i$i49 = 0, $__v$i$i54 = 0, $__v$i$i59 = 0, $__v$i$i64 = 0, $__v$i$i69 = 0, $__v$i$i74 = 0, $__v$i$i79 = 0, $__v$i$i84 = 0, $__v$i$i89 = 0, $__v$i$i9 = 0, $__v$i$i94 = 0, $__v$i$i99 = 0, $isdigit = 0, $isdigittmp = 0, dest = 0;
 var label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2032|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v$i$i224 = sp + 2004|0;
 $__v$i$i219 = sp + 1984|0;
 $__v$i$i214 = sp + 1964|0;
 $__v$i$i209 = sp + 1944|0;
 $__v$i$i204 = sp + 1924|0;
 $__v$i$i199 = sp + 1904|0;
 $__v$i$i194 = sp + 1884|0;
 $__v$i$i189 = sp + 1864|0;
 $__v$i$i184 = sp + 1844|0;
 $__v$i$i179 = sp + 1824|0;
 $__v$i$i174 = sp + 1804|0;
 $__v$i$i169 = sp + 1784|0;
 $__v$i$i164 = sp + 1764|0;
 $__v$i$i159 = sp + 1744|0;
 $__v$i$i154 = sp + 1724|0;
 $__v$i$i149 = sp + 1704|0;
 $__v$i$i144 = sp + 1684|0;
 $__v$i$i139 = sp + 1664|0;
 $__v$i$i134 = sp + 1644|0;
 $__v$i$i129 = sp + 1624|0;
 $__v$i$i124 = sp + 1604|0;
 $__v$i$i119 = sp + 1584|0;
 $__v$i$i114 = sp + 1564|0;
 $__v$i$i109 = sp + 1544|0;
 $__v$i$i104 = sp + 1524|0;
 $__v$i$i99 = sp + 1504|0;
 $__v$i$i94 = sp + 1484|0;
 $__v$i$i89 = sp + 1464|0;
 $__v$i$i84 = sp + 1444|0;
 $__v$i$i79 = sp + 1424|0;
 $__v$i$i74 = sp + 1404|0;
 $__v$i$i69 = sp + 1384|0;
 $__v$i$i64 = sp + 1364|0;
 $__v$i$i59 = sp + 1344|0;
 $__v$i$i54 = sp + 1324|0;
 $__v$i$i49 = sp + 1304|0;
 $__v$i$i44 = sp + 1284|0;
 $__v$i$i39 = sp + 1264|0;
 $__v$i$i34 = sp + 1244|0;
 $__v$i$i29 = sp + 1224|0;
 $__v$i$i24 = sp + 1204|0;
 $__v$i$i19 = sp + 1184|0;
 $__v$i$i14 = sp + 1164|0;
 $__v$i$i9 = sp + 1144|0;
 $__v$i$i4 = sp + 1124|0;
 $__v$i$i = sp + 1104|0;
 $0 = sp + 1080|0;
 $1 = sp + 1056|0;
 $2 = sp + 1032|0;
 $3 = sp + 1008|0;
 $4 = sp + 984|0;
 $5 = sp + 960|0;
 $6 = sp + 936|0;
 $7 = sp + 912|0;
 $8 = sp + 888|0;
 $9 = sp + 864|0;
 $10 = sp + 840|0;
 $11 = sp + 816|0;
 $12 = sp + 792|0;
 $13 = sp + 768|0;
 $14 = sp + 744|0;
 $15 = sp + 720|0;
 $16 = sp + 696|0;
 $17 = sp + 672|0;
 $18 = sp + 648|0;
 $19 = sp + 624|0;
 $20 = sp + 600|0;
 $21 = sp + 576|0;
 $22 = sp + 552|0;
 $23 = sp + 528|0;
 $24 = sp + 504|0;
 $25 = sp + 480|0;
 $26 = sp + 456|0;
 $27 = sp + 432|0;
 $28 = sp + 408|0;
 $29 = sp + 384|0;
 $30 = sp + 360|0;
 $31 = sp + 336|0;
 $32 = sp + 312|0;
 $33 = sp + 288|0;
 $34 = sp + 264|0;
 $35 = sp + 240|0;
 $36 = sp + 216|0;
 $37 = sp + 192|0;
 $38 = sp + 168|0;
 $39 = sp + 144|0;
 $40 = sp + 120|0;
 $41 = sp + 96|0;
 $42 = sp + 72|0;
 $43 = sp + 48|0;
 $44 = sp + 24|0;
 $45 = sp;
 $46 = $last;
 $47 = $first;
 $48 = (($46) - ($47))|0;
 $49 = ($48|0)>(1);
 L1: do {
  if ($49) {
   $50 = HEAP8[$first>>0]|0;
   $51 = $50 << 24 >> 24;
   L3: do {
    switch ($51|0) {
    case 97:  {
     $52 = ((($first)) + 1|0);
     $53 = HEAP8[$52>>0]|0;
     $54 = $53 << 24 >> 24;
     switch ($54|0) {
     case 97:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($0,17286);
      $55 = ((($db)) + 4|0);
      $56 = HEAP32[$55>>2]|0;
      $57 = ((($db)) + 8|0);
      $58 = HEAP32[$57>>2]|0;
      $59 = ($56>>>0)<($58>>>0);
      if ($59) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($56,$0);
       $60 = HEAP32[$55>>2]|0;
       $61 = ((($60)) + 24|0);
       HEAP32[$55>>2] = $61;
      } else {
       $62 = ((($db)) + 12|0);
       $63 = HEAP32[$db>>2]|0;
       $64 = $56;
       $65 = $63;
       $66 = (($64) - ($65))|0;
       $67 = (($66|0) / 24)&-1;
       $68 = (($67) + 1)|0;
       $69 = ($66|0)<(-24);
       if ($69) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $70 = __THREW__; __THREW__ = 0;
        $71 = ___cxa_find_matching_catch()|0;
        $72 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
        $$02 = $71;$$03 = $72;
        break L3;
       }
       $73 = $58;
       $74 = (($73) - ($65))|0;
       $75 = (($74|0) / 24)&-1;
       $76 = ($75>>>0)<(1073741823);
       if ($76) {
        $77 = $75 << 1;
        $78 = ($77>>>0)<($68>>>0);
        $79 = $78 ? $68 : $77;
        $$0$i$i$i = $79;
       } else {
        $$0$i$i$i = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i,$$0$i$i$i,$67,$62);
       $80 = ((($__v$i$i)) + 8|0);
       $81 = HEAP32[$80>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($81,$0);
       $82 = ((($81)) + 24|0);
       HEAP32[$80>>2] = $82;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
      $83 = ((($first)) + 2|0);
      $$0 = $83;
      break L1;
      break;
     }
     case 110: case 100:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($1,17297);
      $84 = ((($db)) + 4|0);
      $85 = HEAP32[$84>>2]|0;
      $86 = ((($db)) + 8|0);
      $87 = HEAP32[$86>>2]|0;
      $88 = ($85>>>0)<($87>>>0);
      if ($88) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($85,$1);
       $89 = HEAP32[$84>>2]|0;
       $90 = ((($89)) + 24|0);
       HEAP32[$84>>2] = $90;
      } else {
       $91 = ((($db)) + 12|0);
       $92 = HEAP32[$db>>2]|0;
       $93 = $85;
       $94 = $92;
       $95 = (($93) - ($94))|0;
       $96 = (($95|0) / 24)&-1;
       $97 = (($96) + 1)|0;
       $98 = ($95|0)<(-24);
       if ($98) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $99 = __THREW__; __THREW__ = 0;
        $100 = ___cxa_find_matching_catch()|0;
        $101 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
        $$02 = $100;$$03 = $101;
        break L3;
       }
       $102 = $87;
       $103 = (($102) - ($94))|0;
       $104 = (($103|0) / 24)&-1;
       $105 = ($104>>>0)<(1073741823);
       if ($105) {
        $106 = $104 << 1;
        $107 = ($106>>>0)<($97>>>0);
        $108 = $107 ? $97 : $106;
        $$0$i$i$i5 = $108;
       } else {
        $$0$i$i$i5 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i4,$$0$i$i$i5,$96,$91);
       $109 = ((($__v$i$i4)) + 8|0);
       $110 = HEAP32[$109>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($110,$1);
       $111 = ((($110)) + 24|0);
       HEAP32[$109>>2] = $111;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i4);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i4);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
      $112 = ((($first)) + 2|0);
      $$0 = $112;
      break L1;
      break;
     }
     case 78:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($2,17307);
      $113 = ((($db)) + 4|0);
      $114 = HEAP32[$113>>2]|0;
      $115 = ((($db)) + 8|0);
      $116 = HEAP32[$115>>2]|0;
      $117 = ($114>>>0)<($116>>>0);
      if ($117) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($114,$2);
       $118 = HEAP32[$113>>2]|0;
       $119 = ((($118)) + 24|0);
       HEAP32[$113>>2] = $119;
      } else {
       $120 = ((($db)) + 12|0);
       $121 = HEAP32[$db>>2]|0;
       $122 = $114;
       $123 = $121;
       $124 = (($122) - ($123))|0;
       $125 = (($124|0) / 24)&-1;
       $126 = (($125) + 1)|0;
       $127 = ($124|0)<(-24);
       if ($127) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $128 = __THREW__; __THREW__ = 0;
        $129 = ___cxa_find_matching_catch()|0;
        $130 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2);
        $$02 = $129;$$03 = $130;
        break L3;
       }
       $131 = $116;
       $132 = (($131) - ($123))|0;
       $133 = (($132|0) / 24)&-1;
       $134 = ($133>>>0)<(1073741823);
       if ($134) {
        $135 = $133 << 1;
        $136 = ($135>>>0)<($126>>>0);
        $137 = $136 ? $126 : $135;
        $$0$i$i$i10 = $137;
       } else {
        $$0$i$i$i10 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i9,$$0$i$i$i10,$125,$120);
       $138 = ((($__v$i$i9)) + 8|0);
       $139 = HEAP32[$138>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($139,$2);
       $140 = ((($139)) + 24|0);
       HEAP32[$138>>2] = $140;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i9);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i9);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2);
      $141 = ((($first)) + 2|0);
      $$0 = $141;
      break L1;
      break;
     }
     case 83:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($3,17318);
      $142 = ((($db)) + 4|0);
      $143 = HEAP32[$142>>2]|0;
      $144 = ((($db)) + 8|0);
      $145 = HEAP32[$144>>2]|0;
      $146 = ($143>>>0)<($145>>>0);
      if ($146) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($143,$3);
       $147 = HEAP32[$142>>2]|0;
       $148 = ((($147)) + 24|0);
       HEAP32[$142>>2] = $148;
      } else {
       $149 = ((($db)) + 12|0);
       $150 = HEAP32[$db>>2]|0;
       $151 = $143;
       $152 = $150;
       $153 = (($151) - ($152))|0;
       $154 = (($153|0) / 24)&-1;
       $155 = (($154) + 1)|0;
       $156 = ($153|0)<(-24);
       if ($156) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $157 = __THREW__; __THREW__ = 0;
        $158 = ___cxa_find_matching_catch()|0;
        $159 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
        $$02 = $158;$$03 = $159;
        break L3;
       }
       $160 = $145;
       $161 = (($160) - ($152))|0;
       $162 = (($161|0) / 24)&-1;
       $163 = ($162>>>0)<(1073741823);
       if ($163) {
        $164 = $162 << 1;
        $165 = ($164>>>0)<($155>>>0);
        $166 = $165 ? $155 : $164;
        $$0$i$i$i15 = $166;
       } else {
        $$0$i$i$i15 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i14,$$0$i$i$i15,$154,$149);
       $167 = ((($__v$i$i14)) + 8|0);
       $168 = HEAP32[$167>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($168,$3);
       $169 = ((($168)) + 24|0);
       HEAP32[$167>>2] = $169;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i14);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i14);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
      $170 = ((($first)) + 2|0);
      $$0 = $170;
      break L1;
      break;
     }
     default: {
      $$0 = $first;
      break L1;
     }
     }
     break;
    }
    case 99:  {
     $171 = ((($first)) + 1|0);
     $172 = HEAP8[$171>>0]|0;
     $173 = $172 << 24 >> 24;
     switch ($173|0) {
     case 108:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($4,17328);
      $174 = ((($db)) + 4|0);
      $175 = HEAP32[$174>>2]|0;
      $176 = ((($db)) + 8|0);
      $177 = HEAP32[$176>>2]|0;
      $178 = ($175>>>0)<($177>>>0);
      if ($178) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($175,$4);
       $179 = HEAP32[$174>>2]|0;
       $180 = ((($179)) + 24|0);
       HEAP32[$174>>2] = $180;
      } else {
       $181 = ((($db)) + 12|0);
       $182 = HEAP32[$db>>2]|0;
       $183 = $175;
       $184 = $182;
       $185 = (($183) - ($184))|0;
       $186 = (($185|0) / 24)&-1;
       $187 = (($186) + 1)|0;
       $188 = ($185|0)<(-24);
       if ($188) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $189 = __THREW__; __THREW__ = 0;
        $190 = ___cxa_find_matching_catch()|0;
        $191 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
        $$02 = $190;$$03 = $191;
        break L3;
       }
       $192 = $177;
       $193 = (($192) - ($184))|0;
       $194 = (($193|0) / 24)&-1;
       $195 = ($194>>>0)<(1073741823);
       if ($195) {
        $196 = $194 << 1;
        $197 = ($196>>>0)<($187>>>0);
        $198 = $197 ? $187 : $196;
        $$0$i$i$i20 = $198;
       } else {
        $$0$i$i$i20 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i19,$$0$i$i$i20,$186,$181);
       $199 = ((($__v$i$i19)) + 8|0);
       $200 = HEAP32[$199>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($200,$4);
       $201 = ((($200)) + 24|0);
       HEAP32[$199>>2] = $201;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i19);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i19);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
      $202 = ((($first)) + 2|0);
      $$0 = $202;
      break L1;
      break;
     }
     case 109:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($5,17339);
      $203 = ((($db)) + 4|0);
      $204 = HEAP32[$203>>2]|0;
      $205 = ((($db)) + 8|0);
      $206 = HEAP32[$205>>2]|0;
      $207 = ($204>>>0)<($206>>>0);
      if ($207) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($204,$5);
       $208 = HEAP32[$203>>2]|0;
       $209 = ((($208)) + 24|0);
       HEAP32[$203>>2] = $209;
      } else {
       $210 = ((($db)) + 12|0);
       $211 = HEAP32[$db>>2]|0;
       $212 = $204;
       $213 = $211;
       $214 = (($212) - ($213))|0;
       $215 = (($214|0) / 24)&-1;
       $216 = (($215) + 1)|0;
       $217 = ($214|0)<(-24);
       if ($217) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $218 = __THREW__; __THREW__ = 0;
        $219 = ___cxa_find_matching_catch()|0;
        $220 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
        $$02 = $219;$$03 = $220;
        break L3;
       }
       $221 = $206;
       $222 = (($221) - ($213))|0;
       $223 = (($222|0) / 24)&-1;
       $224 = ($223>>>0)<(1073741823);
       if ($224) {
        $225 = $223 << 1;
        $226 = ($225>>>0)<($216>>>0);
        $227 = $226 ? $216 : $225;
        $$0$i$i$i25 = $227;
       } else {
        $$0$i$i$i25 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i24,$$0$i$i$i25,$215,$210);
       $228 = ((($__v$i$i24)) + 8|0);
       $229 = HEAP32[$228>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($229,$5);
       $230 = ((($229)) + 24|0);
       HEAP32[$228>>2] = $230;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i24);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i24);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
      $231 = ((($first)) + 2|0);
      $$0 = $231;
      break L1;
      break;
     }
     case 111:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($6,17349);
      $232 = ((($db)) + 4|0);
      $233 = HEAP32[$232>>2]|0;
      $234 = ((($db)) + 8|0);
      $235 = HEAP32[$234>>2]|0;
      $236 = ($233>>>0)<($235>>>0);
      if ($236) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($233,$6);
       $237 = HEAP32[$232>>2]|0;
       $238 = ((($237)) + 24|0);
       HEAP32[$232>>2] = $238;
      } else {
       $239 = ((($db)) + 12|0);
       $240 = HEAP32[$db>>2]|0;
       $241 = $233;
       $242 = $240;
       $243 = (($241) - ($242))|0;
       $244 = (($243|0) / 24)&-1;
       $245 = (($244) + 1)|0;
       $246 = ($243|0)<(-24);
       if ($246) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $247 = __THREW__; __THREW__ = 0;
        $248 = ___cxa_find_matching_catch()|0;
        $249 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($6);
        $$02 = $248;$$03 = $249;
        break L3;
       }
       $250 = $235;
       $251 = (($250) - ($242))|0;
       $252 = (($251|0) / 24)&-1;
       $253 = ($252>>>0)<(1073741823);
       if ($253) {
        $254 = $252 << 1;
        $255 = ($254>>>0)<($245>>>0);
        $256 = $255 ? $245 : $254;
        $$0$i$i$i30 = $256;
       } else {
        $$0$i$i$i30 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i29,$$0$i$i$i30,$244,$239);
       $257 = ((($__v$i$i29)) + 8|0);
       $258 = HEAP32[$257>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($258,$6);
       $259 = ((($258)) + 24|0);
       HEAP32[$257>>2] = $259;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i29);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i29);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($6);
      $260 = ((($first)) + 2|0);
      $$0 = $260;
      break L1;
      break;
     }
     case 118:  {
      $261 = ((($db)) + 63|0);
      $262 = HEAP8[$261>>0]|0;
      HEAP8[$261>>0] = 0;
      $263 = ((($first)) + 2|0);
      $264 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($263,$last,$db)|0);
      HEAP8[$261>>0] = $262;
      $265 = ($264|0)==($263|0);
      if ($265) {
       $$0 = $first;
       break L1;
      }
      $266 = HEAP32[$db>>2]|0;
      $267 = ((($db)) + 4|0);
      $268 = HEAP32[$267>>2]|0;
      $269 = ($266|0)==($268|0);
      if ($269) {
       $$0 = $first;
       break L1;
      }
      $270 = ((($268)) + -24|0);
      (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($270,0,17359)|0);
      $271 = ((($db)) + 60|0);
      HEAP8[$271>>0] = 1;
      $$0 = $264;
      break L1;
      break;
     }
     default: {
      $$0 = $first;
      break L1;
     }
     }
     break;
    }
    case 100:  {
     $272 = ((($first)) + 1|0);
     $273 = HEAP8[$272>>0]|0;
     $274 = $273 << 24 >> 24;
     switch ($274|0) {
     case 97:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj18EEERAT__Kc($7,17369);
      $275 = ((($db)) + 4|0);
      $276 = HEAP32[$275>>2]|0;
      $277 = ((($db)) + 8|0);
      $278 = HEAP32[$277>>2]|0;
      $279 = ($276>>>0)<($278>>>0);
      if ($279) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($276,$7);
       $280 = HEAP32[$275>>2]|0;
       $281 = ((($280)) + 24|0);
       HEAP32[$275>>2] = $281;
      } else {
       $282 = ((($db)) + 12|0);
       $283 = HEAP32[$db>>2]|0;
       $284 = $276;
       $285 = $283;
       $286 = (($284) - ($285))|0;
       $287 = (($286|0) / 24)&-1;
       $288 = (($287) + 1)|0;
       $289 = ($286|0)<(-24);
       if ($289) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $290 = __THREW__; __THREW__ = 0;
        $291 = ___cxa_find_matching_catch()|0;
        $292 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($7);
        $$02 = $291;$$03 = $292;
        break L3;
       }
       $293 = $278;
       $294 = (($293) - ($285))|0;
       $295 = (($294|0) / 24)&-1;
       $296 = ($295>>>0)<(1073741823);
       if ($296) {
        $297 = $295 << 1;
        $298 = ($297>>>0)<($288>>>0);
        $299 = $298 ? $288 : $297;
        $$0$i$i$i35 = $299;
       } else {
        $$0$i$i$i35 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i34,$$0$i$i$i35,$287,$282);
       $300 = ((($__v$i$i34)) + 8|0);
       $301 = HEAP32[$300>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($301,$7);
       $302 = ((($301)) + 24|0);
       HEAP32[$300>>2] = $302;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i34);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i34);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($7);
      $303 = ((($first)) + 2|0);
      $$0 = $303;
      break L1;
      break;
     }
     case 101:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($8,17387);
      $304 = ((($db)) + 4|0);
      $305 = HEAP32[$304>>2]|0;
      $306 = ((($db)) + 8|0);
      $307 = HEAP32[$306>>2]|0;
      $308 = ($305>>>0)<($307>>>0);
      if ($308) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($305,$8);
       $309 = HEAP32[$304>>2]|0;
       $310 = ((($309)) + 24|0);
       HEAP32[$304>>2] = $310;
      } else {
       $311 = ((($db)) + 12|0);
       $312 = HEAP32[$db>>2]|0;
       $313 = $305;
       $314 = $312;
       $315 = (($313) - ($314))|0;
       $316 = (($315|0) / 24)&-1;
       $317 = (($316) + 1)|0;
       $318 = ($315|0)<(-24);
       if ($318) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $319 = __THREW__; __THREW__ = 0;
        $320 = ___cxa_find_matching_catch()|0;
        $321 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($8);
        $$02 = $320;$$03 = $321;
        break L3;
       }
       $322 = $307;
       $323 = (($322) - ($314))|0;
       $324 = (($323|0) / 24)&-1;
       $325 = ($324>>>0)<(1073741823);
       if ($325) {
        $326 = $324 << 1;
        $327 = ($326>>>0)<($317>>>0);
        $328 = $327 ? $317 : $326;
        $$0$i$i$i40 = $328;
       } else {
        $$0$i$i$i40 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i39,$$0$i$i$i40,$316,$311);
       $329 = ((($__v$i$i39)) + 8|0);
       $330 = HEAP32[$329>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($330,$8);
       $331 = ((($330)) + 24|0);
       HEAP32[$329>>2] = $331;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i39);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i39);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($8);
      $332 = ((($first)) + 2|0);
      $$0 = $332;
      break L1;
      break;
     }
     case 108:  {
      $333 = (_malloc(16)|0);
      $334 = ((($9)) + 8|0);
      HEAP32[$334>>2] = $333;
      HEAP32[$9>>2] = 17;
      $335 = ((($9)) + 4|0);
      HEAP32[$335>>2] = 15;
      dest=$333; src=17397; stop=dest+15|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
      $336 = ((($333)) + 15|0);
      HEAP8[$336>>0] = 0;
      $337 = ((($9)) + 12|0);
      HEAP32[$337>>2] = 0;
      $338 = ((($337)) + 4|0);
      HEAP32[$338>>2] = 0;
      $339 = ((($337)) + 8|0);
      HEAP32[$339>>2] = 0;
      $340 = ((($db)) + 4|0);
      $341 = HEAP32[$340>>2]|0;
      $342 = ((($db)) + 8|0);
      $343 = HEAP32[$342>>2]|0;
      $344 = ($341>>>0)<($343>>>0);
      if ($344) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($341,$9);
       $345 = HEAP32[$340>>2]|0;
       $346 = ((($345)) + 24|0);
       HEAP32[$340>>2] = $346;
      } else {
       $347 = ((($db)) + 12|0);
       $348 = HEAP32[$db>>2]|0;
       $349 = $341;
       $350 = $348;
       $351 = (($349) - ($350))|0;
       $352 = (($351|0) / 24)&-1;
       $353 = (($352) + 1)|0;
       $354 = ($351|0)<(-24);
       if ($354) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $355 = __THREW__; __THREW__ = 0;
        $356 = ___cxa_find_matching_catch()|0;
        $357 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($9);
        $$02 = $356;$$03 = $357;
        break L3;
       }
       $358 = $343;
       $359 = (($358) - ($350))|0;
       $360 = (($359|0) / 24)&-1;
       $361 = ($360>>>0)<(1073741823);
       if ($361) {
        $362 = $360 << 1;
        $363 = ($362>>>0)<($353>>>0);
        $364 = $363 ? $353 : $362;
        $$0$i$i$i45 = $364;
       } else {
        $$0$i$i$i45 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i44,$$0$i$i$i45,$352,$347);
       $365 = ((($__v$i$i44)) + 8|0);
       $366 = HEAP32[$365>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($366,$9);
       $367 = ((($366)) + 24|0);
       HEAP32[$365>>2] = $367;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i44);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i44);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($9);
      $368 = ((($first)) + 2|0);
      $$0 = $368;
      break L1;
      break;
     }
     case 118:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($10,17413);
      $369 = ((($db)) + 4|0);
      $370 = HEAP32[$369>>2]|0;
      $371 = ((($db)) + 8|0);
      $372 = HEAP32[$371>>2]|0;
      $373 = ($370>>>0)<($372>>>0);
      if ($373) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($370,$10);
       $374 = HEAP32[$369>>2]|0;
       $375 = ((($374)) + 24|0);
       HEAP32[$369>>2] = $375;
      } else {
       $376 = ((($db)) + 12|0);
       $377 = HEAP32[$db>>2]|0;
       $378 = $370;
       $379 = $377;
       $380 = (($378) - ($379))|0;
       $381 = (($380|0) / 24)&-1;
       $382 = (($381) + 1)|0;
       $383 = ($380|0)<(-24);
       if ($383) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $384 = __THREW__; __THREW__ = 0;
        $385 = ___cxa_find_matching_catch()|0;
        $386 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($10);
        $$02 = $385;$$03 = $386;
        break L3;
       }
       $387 = $372;
       $388 = (($387) - ($379))|0;
       $389 = (($388|0) / 24)&-1;
       $390 = ($389>>>0)<(1073741823);
       if ($390) {
        $391 = $389 << 1;
        $392 = ($391>>>0)<($382>>>0);
        $393 = $392 ? $382 : $391;
        $$0$i$i$i50 = $393;
       } else {
        $$0$i$i$i50 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i49,$$0$i$i$i50,$381,$376);
       $394 = ((($__v$i$i49)) + 8|0);
       $395 = HEAP32[$394>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($395,$10);
       $396 = ((($395)) + 24|0);
       HEAP32[$394>>2] = $396;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i49);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i49);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($10);
      $397 = ((($first)) + 2|0);
      $$0 = $397;
      break L1;
      break;
     }
     case 86:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($11,17423);
      $398 = ((($db)) + 4|0);
      $399 = HEAP32[$398>>2]|0;
      $400 = ((($db)) + 8|0);
      $401 = HEAP32[$400>>2]|0;
      $402 = ($399>>>0)<($401>>>0);
      if ($402) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($399,$11);
       $403 = HEAP32[$398>>2]|0;
       $404 = ((($403)) + 24|0);
       HEAP32[$398>>2] = $404;
      } else {
       $405 = ((($db)) + 12|0);
       $406 = HEAP32[$db>>2]|0;
       $407 = $399;
       $408 = $406;
       $409 = (($407) - ($408))|0;
       $410 = (($409|0) / 24)&-1;
       $411 = (($410) + 1)|0;
       $412 = ($409|0)<(-24);
       if ($412) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $413 = __THREW__; __THREW__ = 0;
        $414 = ___cxa_find_matching_catch()|0;
        $415 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($11);
        $$02 = $414;$$03 = $415;
        break L3;
       }
       $416 = $401;
       $417 = (($416) - ($408))|0;
       $418 = (($417|0) / 24)&-1;
       $419 = ($418>>>0)<(1073741823);
       if ($419) {
        $420 = $418 << 1;
        $421 = ($420>>>0)<($411>>>0);
        $422 = $421 ? $411 : $420;
        $$0$i$i$i55 = $422;
       } else {
        $$0$i$i$i55 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i54,$$0$i$i$i55,$410,$405);
       $423 = ((($__v$i$i54)) + 8|0);
       $424 = HEAP32[$423>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($424,$11);
       $425 = ((($424)) + 24|0);
       HEAP32[$423>>2] = $425;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i54);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i54);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($11);
      $426 = ((($first)) + 2|0);
      $$0 = $426;
      break L1;
      break;
     }
     default: {
      $$0 = $first;
      break L1;
     }
     }
     break;
    }
    case 101:  {
     $427 = ((($first)) + 1|0);
     $428 = HEAP8[$427>>0]|0;
     $429 = $428 << 24 >> 24;
     switch ($429|0) {
     case 111:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($12,17434);
      $430 = ((($db)) + 4|0);
      $431 = HEAP32[$430>>2]|0;
      $432 = ((($db)) + 8|0);
      $433 = HEAP32[$432>>2]|0;
      $434 = ($431>>>0)<($433>>>0);
      if ($434) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($431,$12);
       $435 = HEAP32[$430>>2]|0;
       $436 = ((($435)) + 24|0);
       HEAP32[$430>>2] = $436;
      } else {
       $437 = ((($db)) + 12|0);
       $438 = HEAP32[$db>>2]|0;
       $439 = $431;
       $440 = $438;
       $441 = (($439) - ($440))|0;
       $442 = (($441|0) / 24)&-1;
       $443 = (($442) + 1)|0;
       $444 = ($441|0)<(-24);
       if ($444) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $445 = __THREW__; __THREW__ = 0;
        $446 = ___cxa_find_matching_catch()|0;
        $447 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($12);
        $$02 = $446;$$03 = $447;
        break L3;
       }
       $448 = $433;
       $449 = (($448) - ($440))|0;
       $450 = (($449|0) / 24)&-1;
       $451 = ($450>>>0)<(1073741823);
       if ($451) {
        $452 = $450 << 1;
        $453 = ($452>>>0)<($443>>>0);
        $454 = $453 ? $443 : $452;
        $$0$i$i$i60 = $454;
       } else {
        $$0$i$i$i60 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i59,$$0$i$i$i60,$442,$437);
       $455 = ((($__v$i$i59)) + 8|0);
       $456 = HEAP32[$455>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($456,$12);
       $457 = ((($456)) + 24|0);
       HEAP32[$455>>2] = $457;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i59);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i59);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($12);
      $458 = ((($first)) + 2|0);
      $$0 = $458;
      break L1;
      break;
     }
     case 79:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($13,17444);
      $459 = ((($db)) + 4|0);
      $460 = HEAP32[$459>>2]|0;
      $461 = ((($db)) + 8|0);
      $462 = HEAP32[$461>>2]|0;
      $463 = ($460>>>0)<($462>>>0);
      if ($463) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($460,$13);
       $464 = HEAP32[$459>>2]|0;
       $465 = ((($464)) + 24|0);
       HEAP32[$459>>2] = $465;
      } else {
       $466 = ((($db)) + 12|0);
       $467 = HEAP32[$db>>2]|0;
       $468 = $460;
       $469 = $467;
       $470 = (($468) - ($469))|0;
       $471 = (($470|0) / 24)&-1;
       $472 = (($471) + 1)|0;
       $473 = ($470|0)<(-24);
       if ($473) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $474 = __THREW__; __THREW__ = 0;
        $475 = ___cxa_find_matching_catch()|0;
        $476 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($13);
        $$02 = $475;$$03 = $476;
        break L3;
       }
       $477 = $462;
       $478 = (($477) - ($469))|0;
       $479 = (($478|0) / 24)&-1;
       $480 = ($479>>>0)<(1073741823);
       if ($480) {
        $481 = $479 << 1;
        $482 = ($481>>>0)<($472>>>0);
        $483 = $482 ? $472 : $481;
        $$0$i$i$i65 = $483;
       } else {
        $$0$i$i$i65 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i64,$$0$i$i$i65,$471,$466);
       $484 = ((($__v$i$i64)) + 8|0);
       $485 = HEAP32[$484>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($485,$13);
       $486 = ((($485)) + 24|0);
       HEAP32[$484>>2] = $486;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i64);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i64);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($13);
      $487 = ((($first)) + 2|0);
      $$0 = $487;
      break L1;
      break;
     }
     case 113:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($14,17455);
      $488 = ((($db)) + 4|0);
      $489 = HEAP32[$488>>2]|0;
      $490 = ((($db)) + 8|0);
      $491 = HEAP32[$490>>2]|0;
      $492 = ($489>>>0)<($491>>>0);
      if ($492) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($489,$14);
       $493 = HEAP32[$488>>2]|0;
       $494 = ((($493)) + 24|0);
       HEAP32[$488>>2] = $494;
      } else {
       $495 = ((($db)) + 12|0);
       $496 = HEAP32[$db>>2]|0;
       $497 = $489;
       $498 = $496;
       $499 = (($497) - ($498))|0;
       $500 = (($499|0) / 24)&-1;
       $501 = (($500) + 1)|0;
       $502 = ($499|0)<(-24);
       if ($502) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $503 = __THREW__; __THREW__ = 0;
        $504 = ___cxa_find_matching_catch()|0;
        $505 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($14);
        $$02 = $504;$$03 = $505;
        break L3;
       }
       $506 = $491;
       $507 = (($506) - ($498))|0;
       $508 = (($507|0) / 24)&-1;
       $509 = ($508>>>0)<(1073741823);
       if ($509) {
        $510 = $508 << 1;
        $511 = ($510>>>0)<($501>>>0);
        $512 = $511 ? $501 : $510;
        $$0$i$i$i70 = $512;
       } else {
        $$0$i$i$i70 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i69,$$0$i$i$i70,$500,$495);
       $513 = ((($__v$i$i69)) + 8|0);
       $514 = HEAP32[$513>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($514,$14);
       $515 = ((($514)) + 24|0);
       HEAP32[$513>>2] = $515;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i69);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i69);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($14);
      $516 = ((($first)) + 2|0);
      $$0 = $516;
      break L1;
      break;
     }
     default: {
      $$0 = $first;
      break L1;
     }
     }
     break;
    }
    case 103:  {
     $517 = ((($first)) + 1|0);
     $518 = HEAP8[$517>>0]|0;
     $519 = $518 << 24 >> 24;
     switch ($519|0) {
     case 101:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($15,17466);
      $520 = ((($db)) + 4|0);
      $521 = HEAP32[$520>>2]|0;
      $522 = ((($db)) + 8|0);
      $523 = HEAP32[$522>>2]|0;
      $524 = ($521>>>0)<($523>>>0);
      if ($524) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($521,$15);
       $525 = HEAP32[$520>>2]|0;
       $526 = ((($525)) + 24|0);
       HEAP32[$520>>2] = $526;
      } else {
       $527 = ((($db)) + 12|0);
       $528 = HEAP32[$db>>2]|0;
       $529 = $521;
       $530 = $528;
       $531 = (($529) - ($530))|0;
       $532 = (($531|0) / 24)&-1;
       $533 = (($532) + 1)|0;
       $534 = ($531|0)<(-24);
       if ($534) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $535 = __THREW__; __THREW__ = 0;
        $536 = ___cxa_find_matching_catch()|0;
        $537 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($15);
        $$02 = $536;$$03 = $537;
        break L3;
       }
       $538 = $523;
       $539 = (($538) - ($530))|0;
       $540 = (($539|0) / 24)&-1;
       $541 = ($540>>>0)<(1073741823);
       if ($541) {
        $542 = $540 << 1;
        $543 = ($542>>>0)<($533>>>0);
        $544 = $543 ? $533 : $542;
        $$0$i$i$i75 = $544;
       } else {
        $$0$i$i$i75 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i74,$$0$i$i$i75,$532,$527);
       $545 = ((($__v$i$i74)) + 8|0);
       $546 = HEAP32[$545>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($546,$15);
       $547 = ((($546)) + 24|0);
       HEAP32[$545>>2] = $547;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i74);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i74);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($15);
      $548 = ((($first)) + 2|0);
      $$0 = $548;
      break L1;
      break;
     }
     case 116:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($16,17477);
      $549 = ((($db)) + 4|0);
      $550 = HEAP32[$549>>2]|0;
      $551 = ((($db)) + 8|0);
      $552 = HEAP32[$551>>2]|0;
      $553 = ($550>>>0)<($552>>>0);
      if ($553) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($550,$16);
       $554 = HEAP32[$549>>2]|0;
       $555 = ((($554)) + 24|0);
       HEAP32[$549>>2] = $555;
      } else {
       $556 = ((($db)) + 12|0);
       $557 = HEAP32[$db>>2]|0;
       $558 = $550;
       $559 = $557;
       $560 = (($558) - ($559))|0;
       $561 = (($560|0) / 24)&-1;
       $562 = (($561) + 1)|0;
       $563 = ($560|0)<(-24);
       if ($563) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $564 = __THREW__; __THREW__ = 0;
        $565 = ___cxa_find_matching_catch()|0;
        $566 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($16);
        $$02 = $565;$$03 = $566;
        break L3;
       }
       $567 = $552;
       $568 = (($567) - ($559))|0;
       $569 = (($568|0) / 24)&-1;
       $570 = ($569>>>0)<(1073741823);
       if ($570) {
        $571 = $569 << 1;
        $572 = ($571>>>0)<($562>>>0);
        $573 = $572 ? $562 : $571;
        $$0$i$i$i80 = $573;
       } else {
        $$0$i$i$i80 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i79,$$0$i$i$i80,$561,$556);
       $574 = ((($__v$i$i79)) + 8|0);
       $575 = HEAP32[$574>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($575,$16);
       $576 = ((($575)) + 24|0);
       HEAP32[$574>>2] = $576;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i79);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i79);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($16);
      $577 = ((($first)) + 2|0);
      $$0 = $577;
      break L1;
      break;
     }
     default: {
      $$0 = $first;
      break L1;
     }
     }
     break;
    }
    case 105:  {
     $578 = ((($first)) + 1|0);
     $579 = HEAP8[$578>>0]|0;
     $580 = ($579<<24>>24)==(120);
     if (!($580)) {
      $$0 = $first;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($17,17487);
     $581 = ((($db)) + 4|0);
     $582 = HEAP32[$581>>2]|0;
     $583 = ((($db)) + 8|0);
     $584 = HEAP32[$583>>2]|0;
     $585 = ($582>>>0)<($584>>>0);
     if ($585) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($582,$17);
      $586 = HEAP32[$581>>2]|0;
      $587 = ((($586)) + 24|0);
      HEAP32[$581>>2] = $587;
     } else {
      $588 = ((($db)) + 12|0);
      $589 = HEAP32[$db>>2]|0;
      $590 = $582;
      $591 = $589;
      $592 = (($590) - ($591))|0;
      $593 = (($592|0) / 24)&-1;
      $594 = (($593) + 1)|0;
      $595 = ($592|0)<(-24);
      if ($595) {
       __THREW__ = 0;
       invoke_vi(402,($db|0));
       $596 = __THREW__; __THREW__ = 0;
       $597 = ___cxa_find_matching_catch()|0;
       $598 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($17);
       $$02 = $597;$$03 = $598;
       break L3;
      }
      $599 = $584;
      $600 = (($599) - ($591))|0;
      $601 = (($600|0) / 24)&-1;
      $602 = ($601>>>0)<(1073741823);
      if ($602) {
       $603 = $601 << 1;
       $604 = ($603>>>0)<($594>>>0);
       $605 = $604 ? $594 : $603;
       $$0$i$i$i85 = $605;
      } else {
       $$0$i$i$i85 = 2147483647;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i84,$$0$i$i$i85,$593,$588);
      $606 = ((($__v$i$i84)) + 8|0);
      $607 = HEAP32[$606>>2]|0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($607,$17);
      $608 = ((($607)) + 24|0);
      HEAP32[$606>>2] = $608;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i84);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i84);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($17);
     $609 = ((($first)) + 2|0);
     $$0 = $609;
     break L1;
     break;
    }
    case 108:  {
     $610 = ((($first)) + 1|0);
     $611 = HEAP8[$610>>0]|0;
     $612 = $611 << 24 >> 24;
     switch ($612|0) {
     case 101:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($18,17498);
      $613 = ((($db)) + 4|0);
      $614 = HEAP32[$613>>2]|0;
      $615 = ((($db)) + 8|0);
      $616 = HEAP32[$615>>2]|0;
      $617 = ($614>>>0)<($616>>>0);
      if ($617) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($614,$18);
       $618 = HEAP32[$613>>2]|0;
       $619 = ((($618)) + 24|0);
       HEAP32[$613>>2] = $619;
      } else {
       $620 = ((($db)) + 12|0);
       $621 = HEAP32[$db>>2]|0;
       $622 = $614;
       $623 = $621;
       $624 = (($622) - ($623))|0;
       $625 = (($624|0) / 24)&-1;
       $626 = (($625) + 1)|0;
       $627 = ($624|0)<(-24);
       if ($627) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $628 = __THREW__; __THREW__ = 0;
        $629 = ___cxa_find_matching_catch()|0;
        $630 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($18);
        $$02 = $629;$$03 = $630;
        break L3;
       }
       $631 = $616;
       $632 = (($631) - ($623))|0;
       $633 = (($632|0) / 24)&-1;
       $634 = ($633>>>0)<(1073741823);
       if ($634) {
        $635 = $633 << 1;
        $636 = ($635>>>0)<($626>>>0);
        $637 = $636 ? $626 : $635;
        $$0$i$i$i90 = $637;
       } else {
        $$0$i$i$i90 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i89,$$0$i$i$i90,$625,$620);
       $638 = ((($__v$i$i89)) + 8|0);
       $639 = HEAP32[$638>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($639,$18);
       $640 = ((($639)) + 24|0);
       HEAP32[$638>>2] = $640;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i89);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i89);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($18);
      $641 = ((($first)) + 2|0);
      $$0 = $641;
      break L1;
      break;
     }
     case 105:  {
      $642 = ((($first)) + 2|0);
      $643 = (__ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($642,$last,$db)|0);
      $644 = ($643|0)==($642|0);
      if ($644) {
       $$0 = $first;
       break L1;
      }
      $645 = HEAP32[$db>>2]|0;
      $646 = ((($db)) + 4|0);
      $647 = HEAP32[$646>>2]|0;
      $648 = ($645|0)==($647|0);
      if ($648) {
       $$0 = $first;
       break L1;
      }
      $649 = ((($647)) + -24|0);
      (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($649,0,17509)|0);
      $$0 = $643;
      break L1;
      break;
     }
     case 115:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($19,17521);
      $650 = ((($db)) + 4|0);
      $651 = HEAP32[$650>>2]|0;
      $652 = ((($db)) + 8|0);
      $653 = HEAP32[$652>>2]|0;
      $654 = ($651>>>0)<($653>>>0);
      if ($654) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($651,$19);
       $655 = HEAP32[$650>>2]|0;
       $656 = ((($655)) + 24|0);
       HEAP32[$650>>2] = $656;
      } else {
       $657 = ((($db)) + 12|0);
       $658 = HEAP32[$db>>2]|0;
       $659 = $651;
       $660 = $658;
       $661 = (($659) - ($660))|0;
       $662 = (($661|0) / 24)&-1;
       $663 = (($662) + 1)|0;
       $664 = ($661|0)<(-24);
       if ($664) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $665 = __THREW__; __THREW__ = 0;
        $666 = ___cxa_find_matching_catch()|0;
        $667 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($19);
        $$02 = $666;$$03 = $667;
        break L3;
       }
       $668 = $653;
       $669 = (($668) - ($660))|0;
       $670 = (($669|0) / 24)&-1;
       $671 = ($670>>>0)<(1073741823);
       if ($671) {
        $672 = $670 << 1;
        $673 = ($672>>>0)<($663>>>0);
        $674 = $673 ? $663 : $672;
        $$0$i$i$i95 = $674;
       } else {
        $$0$i$i$i95 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i94,$$0$i$i$i95,$662,$657);
       $675 = ((($__v$i$i94)) + 8|0);
       $676 = HEAP32[$675>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($676,$19);
       $677 = ((($676)) + 24|0);
       HEAP32[$675>>2] = $677;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i94);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i94);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($19);
      $678 = ((($first)) + 2|0);
      $$0 = $678;
      break L1;
      break;
     }
     case 83:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc($20,17532);
      $679 = ((($db)) + 4|0);
      $680 = HEAP32[$679>>2]|0;
      $681 = ((($db)) + 8|0);
      $682 = HEAP32[$681>>2]|0;
      $683 = ($680>>>0)<($682>>>0);
      if ($683) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($680,$20);
       $684 = HEAP32[$679>>2]|0;
       $685 = ((($684)) + 24|0);
       HEAP32[$679>>2] = $685;
      } else {
       $686 = ((($db)) + 12|0);
       $687 = HEAP32[$db>>2]|0;
       $688 = $680;
       $689 = $687;
       $690 = (($688) - ($689))|0;
       $691 = (($690|0) / 24)&-1;
       $692 = (($691) + 1)|0;
       $693 = ($690|0)<(-24);
       if ($693) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $694 = __THREW__; __THREW__ = 0;
        $695 = ___cxa_find_matching_catch()|0;
        $696 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($20);
        $$02 = $695;$$03 = $696;
        break L3;
       }
       $697 = $682;
       $698 = (($697) - ($689))|0;
       $699 = (($698|0) / 24)&-1;
       $700 = ($699>>>0)<(1073741823);
       if ($700) {
        $701 = $699 << 1;
        $702 = ($701>>>0)<($692>>>0);
        $703 = $702 ? $692 : $701;
        $$0$i$i$i100 = $703;
       } else {
        $$0$i$i$i100 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i99,$$0$i$i$i100,$691,$686);
       $704 = ((($__v$i$i99)) + 8|0);
       $705 = HEAP32[$704>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($705,$20);
       $706 = ((($705)) + 24|0);
       HEAP32[$704>>2] = $706;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i99);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i99);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($20);
      $707 = ((($first)) + 2|0);
      $$0 = $707;
      break L1;
      break;
     }
     case 116:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($21,17544);
      $708 = ((($db)) + 4|0);
      $709 = HEAP32[$708>>2]|0;
      $710 = ((($db)) + 8|0);
      $711 = HEAP32[$710>>2]|0;
      $712 = ($709>>>0)<($711>>>0);
      if ($712) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($709,$21);
       $713 = HEAP32[$708>>2]|0;
       $714 = ((($713)) + 24|0);
       HEAP32[$708>>2] = $714;
      } else {
       $715 = ((($db)) + 12|0);
       $716 = HEAP32[$db>>2]|0;
       $717 = $709;
       $718 = $716;
       $719 = (($717) - ($718))|0;
       $720 = (($719|0) / 24)&-1;
       $721 = (($720) + 1)|0;
       $722 = ($719|0)<(-24);
       if ($722) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $723 = __THREW__; __THREW__ = 0;
        $724 = ___cxa_find_matching_catch()|0;
        $725 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($21);
        $$02 = $724;$$03 = $725;
        break L3;
       }
       $726 = $711;
       $727 = (($726) - ($718))|0;
       $728 = (($727|0) / 24)&-1;
       $729 = ($728>>>0)<(1073741823);
       if ($729) {
        $730 = $728 << 1;
        $731 = ($730>>>0)<($721>>>0);
        $732 = $731 ? $721 : $730;
        $$0$i$i$i105 = $732;
       } else {
        $$0$i$i$i105 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i104,$$0$i$i$i105,$720,$715);
       $733 = ((($__v$i$i104)) + 8|0);
       $734 = HEAP32[$733>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($734,$21);
       $735 = ((($734)) + 24|0);
       HEAP32[$733>>2] = $735;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i104);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i104);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($21);
      $736 = ((($first)) + 2|0);
      $$0 = $736;
      break L1;
      break;
     }
     default: {
      $$0 = $first;
      break L1;
     }
     }
     break;
    }
    case 109:  {
     $737 = ((($first)) + 1|0);
     $738 = HEAP8[$737>>0]|0;
     $739 = $738 << 24 >> 24;
     switch ($739|0) {
     case 105:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($22,17554);
      $740 = ((($db)) + 4|0);
      $741 = HEAP32[$740>>2]|0;
      $742 = ((($db)) + 8|0);
      $743 = HEAP32[$742>>2]|0;
      $744 = ($741>>>0)<($743>>>0);
      if ($744) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($741,$22);
       $745 = HEAP32[$740>>2]|0;
       $746 = ((($745)) + 24|0);
       HEAP32[$740>>2] = $746;
      } else {
       $747 = ((($db)) + 12|0);
       $748 = HEAP32[$db>>2]|0;
       $749 = $741;
       $750 = $748;
       $751 = (($749) - ($750))|0;
       $752 = (($751|0) / 24)&-1;
       $753 = (($752) + 1)|0;
       $754 = ($751|0)<(-24);
       if ($754) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $755 = __THREW__; __THREW__ = 0;
        $756 = ___cxa_find_matching_catch()|0;
        $757 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($22);
        $$02 = $756;$$03 = $757;
        break L3;
       }
       $758 = $743;
       $759 = (($758) - ($750))|0;
       $760 = (($759|0) / 24)&-1;
       $761 = ($760>>>0)<(1073741823);
       if ($761) {
        $762 = $760 << 1;
        $763 = ($762>>>0)<($753>>>0);
        $764 = $763 ? $753 : $762;
        $$0$i$i$i110 = $764;
       } else {
        $$0$i$i$i110 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i109,$$0$i$i$i110,$752,$747);
       $765 = ((($__v$i$i109)) + 8|0);
       $766 = HEAP32[$765>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($766,$22);
       $767 = ((($766)) + 24|0);
       HEAP32[$765>>2] = $767;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i109);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i109);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($22);
      $768 = ((($first)) + 2|0);
      $$0 = $768;
      break L1;
      break;
     }
     case 73:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($23,17564);
      $769 = ((($db)) + 4|0);
      $770 = HEAP32[$769>>2]|0;
      $771 = ((($db)) + 8|0);
      $772 = HEAP32[$771>>2]|0;
      $773 = ($770>>>0)<($772>>>0);
      if ($773) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($770,$23);
       $774 = HEAP32[$769>>2]|0;
       $775 = ((($774)) + 24|0);
       HEAP32[$769>>2] = $775;
      } else {
       $776 = ((($db)) + 12|0);
       $777 = HEAP32[$db>>2]|0;
       $778 = $770;
       $779 = $777;
       $780 = (($778) - ($779))|0;
       $781 = (($780|0) / 24)&-1;
       $782 = (($781) + 1)|0;
       $783 = ($780|0)<(-24);
       if ($783) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $784 = __THREW__; __THREW__ = 0;
        $785 = ___cxa_find_matching_catch()|0;
        $786 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($23);
        $$02 = $785;$$03 = $786;
        break L3;
       }
       $787 = $772;
       $788 = (($787) - ($779))|0;
       $789 = (($788|0) / 24)&-1;
       $790 = ($789>>>0)<(1073741823);
       if ($790) {
        $791 = $789 << 1;
        $792 = ($791>>>0)<($782>>>0);
        $793 = $792 ? $782 : $791;
        $$0$i$i$i115 = $793;
       } else {
        $$0$i$i$i115 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i114,$$0$i$i$i115,$781,$776);
       $794 = ((($__v$i$i114)) + 8|0);
       $795 = HEAP32[$794>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($795,$23);
       $796 = ((($795)) + 24|0);
       HEAP32[$794>>2] = $796;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i114);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i114);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($23);
      $797 = ((($first)) + 2|0);
      $$0 = $797;
      break L1;
      break;
     }
     case 108:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($24,17387);
      $798 = ((($db)) + 4|0);
      $799 = HEAP32[$798>>2]|0;
      $800 = ((($db)) + 8|0);
      $801 = HEAP32[$800>>2]|0;
      $802 = ($799>>>0)<($801>>>0);
      if ($802) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($799,$24);
       $803 = HEAP32[$798>>2]|0;
       $804 = ((($803)) + 24|0);
       HEAP32[$798>>2] = $804;
      } else {
       $805 = ((($db)) + 12|0);
       $806 = HEAP32[$db>>2]|0;
       $807 = $799;
       $808 = $806;
       $809 = (($807) - ($808))|0;
       $810 = (($809|0) / 24)&-1;
       $811 = (($810) + 1)|0;
       $812 = ($809|0)<(-24);
       if ($812) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $813 = __THREW__; __THREW__ = 0;
        $814 = ___cxa_find_matching_catch()|0;
        $815 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($24);
        $$02 = $814;$$03 = $815;
        break L3;
       }
       $816 = $801;
       $817 = (($816) - ($808))|0;
       $818 = (($817|0) / 24)&-1;
       $819 = ($818>>>0)<(1073741823);
       if ($819) {
        $820 = $818 << 1;
        $821 = ($820>>>0)<($811>>>0);
        $822 = $821 ? $811 : $820;
        $$0$i$i$i120 = $822;
       } else {
        $$0$i$i$i120 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i119,$$0$i$i$i120,$810,$805);
       $823 = ((($__v$i$i119)) + 8|0);
       $824 = HEAP32[$823>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($824,$24);
       $825 = ((($824)) + 24|0);
       HEAP32[$823>>2] = $825;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i119);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i119);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($24);
      $826 = ((($first)) + 2|0);
      $$0 = $826;
      break L1;
      break;
     }
     case 76:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($25,17575);
      $827 = ((($db)) + 4|0);
      $828 = HEAP32[$827>>2]|0;
      $829 = ((($db)) + 8|0);
      $830 = HEAP32[$829>>2]|0;
      $831 = ($828>>>0)<($830>>>0);
      if ($831) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($828,$25);
       $832 = HEAP32[$827>>2]|0;
       $833 = ((($832)) + 24|0);
       HEAP32[$827>>2] = $833;
      } else {
       $834 = ((($db)) + 12|0);
       $835 = HEAP32[$db>>2]|0;
       $836 = $828;
       $837 = $835;
       $838 = (($836) - ($837))|0;
       $839 = (($838|0) / 24)&-1;
       $840 = (($839) + 1)|0;
       $841 = ($838|0)<(-24);
       if ($841) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $842 = __THREW__; __THREW__ = 0;
        $843 = ___cxa_find_matching_catch()|0;
        $844 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($25);
        $$02 = $843;$$03 = $844;
        break L3;
       }
       $845 = $830;
       $846 = (($845) - ($837))|0;
       $847 = (($846|0) / 24)&-1;
       $848 = ($847>>>0)<(1073741823);
       if ($848) {
        $849 = $847 << 1;
        $850 = ($849>>>0)<($840>>>0);
        $851 = $850 ? $840 : $849;
        $$0$i$i$i125 = $851;
       } else {
        $$0$i$i$i125 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i124,$$0$i$i$i125,$839,$834);
       $852 = ((($__v$i$i124)) + 8|0);
       $853 = HEAP32[$852>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($853,$25);
       $854 = ((($853)) + 24|0);
       HEAP32[$852>>2] = $854;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i124);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i124);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($25);
      $855 = ((($first)) + 2|0);
      $$0 = $855;
      break L1;
      break;
     }
     case 109:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($26,17586);
      $856 = ((($db)) + 4|0);
      $857 = HEAP32[$856>>2]|0;
      $858 = ((($db)) + 8|0);
      $859 = HEAP32[$858>>2]|0;
      $860 = ($857>>>0)<($859>>>0);
      if ($860) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($857,$26);
       $861 = HEAP32[$856>>2]|0;
       $862 = ((($861)) + 24|0);
       HEAP32[$856>>2] = $862;
      } else {
       $863 = ((($db)) + 12|0);
       $864 = HEAP32[$db>>2]|0;
       $865 = $857;
       $866 = $864;
       $867 = (($865) - ($866))|0;
       $868 = (($867|0) / 24)&-1;
       $869 = (($868) + 1)|0;
       $870 = ($867|0)<(-24);
       if ($870) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $871 = __THREW__; __THREW__ = 0;
        $872 = ___cxa_find_matching_catch()|0;
        $873 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($26);
        $$02 = $872;$$03 = $873;
        break L3;
       }
       $874 = $859;
       $875 = (($874) - ($866))|0;
       $876 = (($875|0) / 24)&-1;
       $877 = ($876>>>0)<(1073741823);
       if ($877) {
        $878 = $876 << 1;
        $879 = ($878>>>0)<($869>>>0);
        $880 = $879 ? $869 : $878;
        $$0$i$i$i130 = $880;
       } else {
        $$0$i$i$i130 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i129,$$0$i$i$i130,$868,$863);
       $881 = ((($__v$i$i129)) + 8|0);
       $882 = HEAP32[$881>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($882,$26);
       $883 = ((($882)) + 24|0);
       HEAP32[$881>>2] = $883;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i129);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i129);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($26);
      $884 = ((($first)) + 2|0);
      $$0 = $884;
      break L1;
      break;
     }
     default: {
      $$0 = $first;
      break L1;
     }
     }
     break;
    }
    case 110:  {
     $885 = ((($first)) + 1|0);
     $886 = HEAP8[$885>>0]|0;
     $887 = $886 << 24 >> 24;
     switch ($887|0) {
     case 97:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj15EEERAT__Kc($27,17597);
      $888 = ((($db)) + 4|0);
      $889 = HEAP32[$888>>2]|0;
      $890 = ((($db)) + 8|0);
      $891 = HEAP32[$890>>2]|0;
      $892 = ($889>>>0)<($891>>>0);
      if ($892) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($889,$27);
       $893 = HEAP32[$888>>2]|0;
       $894 = ((($893)) + 24|0);
       HEAP32[$888>>2] = $894;
      } else {
       $895 = ((($db)) + 12|0);
       $896 = HEAP32[$db>>2]|0;
       $897 = $889;
       $898 = $896;
       $899 = (($897) - ($898))|0;
       $900 = (($899|0) / 24)&-1;
       $901 = (($900) + 1)|0;
       $902 = ($899|0)<(-24);
       if ($902) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $903 = __THREW__; __THREW__ = 0;
        $904 = ___cxa_find_matching_catch()|0;
        $905 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($27);
        $$02 = $904;$$03 = $905;
        break L3;
       }
       $906 = $891;
       $907 = (($906) - ($898))|0;
       $908 = (($907|0) / 24)&-1;
       $909 = ($908>>>0)<(1073741823);
       if ($909) {
        $910 = $908 << 1;
        $911 = ($910>>>0)<($901>>>0);
        $912 = $911 ? $901 : $910;
        $$0$i$i$i135 = $912;
       } else {
        $$0$i$i$i135 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i134,$$0$i$i$i135,$900,$895);
       $913 = ((($__v$i$i134)) + 8|0);
       $914 = HEAP32[$913>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($914,$27);
       $915 = ((($914)) + 24|0);
       HEAP32[$913>>2] = $915;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i134);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i134);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($27);
      $916 = ((($first)) + 2|0);
      $$0 = $916;
      break L1;
      break;
     }
     case 101:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($28,17612);
      $917 = ((($db)) + 4|0);
      $918 = HEAP32[$917>>2]|0;
      $919 = ((($db)) + 8|0);
      $920 = HEAP32[$919>>2]|0;
      $921 = ($918>>>0)<($920>>>0);
      if ($921) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($918,$28);
       $922 = HEAP32[$917>>2]|0;
       $923 = ((($922)) + 24|0);
       HEAP32[$917>>2] = $923;
      } else {
       $924 = ((($db)) + 12|0);
       $925 = HEAP32[$db>>2]|0;
       $926 = $918;
       $927 = $925;
       $928 = (($926) - ($927))|0;
       $929 = (($928|0) / 24)&-1;
       $930 = (($929) + 1)|0;
       $931 = ($928|0)<(-24);
       if ($931) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $932 = __THREW__; __THREW__ = 0;
        $933 = ___cxa_find_matching_catch()|0;
        $934 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($28);
        $$02 = $933;$$03 = $934;
        break L3;
       }
       $935 = $920;
       $936 = (($935) - ($927))|0;
       $937 = (($936|0) / 24)&-1;
       $938 = ($937>>>0)<(1073741823);
       if ($938) {
        $939 = $937 << 1;
        $940 = ($939>>>0)<($930>>>0);
        $941 = $940 ? $930 : $939;
        $$0$i$i$i140 = $941;
       } else {
        $$0$i$i$i140 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i139,$$0$i$i$i140,$929,$924);
       $942 = ((($__v$i$i139)) + 8|0);
       $943 = HEAP32[$942>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($943,$28);
       $944 = ((($943)) + 24|0);
       HEAP32[$942>>2] = $944;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i139);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i139);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($28);
      $945 = ((($first)) + 2|0);
      $$0 = $945;
      break L1;
      break;
     }
     case 103:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($29,17554);
      $946 = ((($db)) + 4|0);
      $947 = HEAP32[$946>>2]|0;
      $948 = ((($db)) + 8|0);
      $949 = HEAP32[$948>>2]|0;
      $950 = ($947>>>0)<($949>>>0);
      if ($950) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($947,$29);
       $951 = HEAP32[$946>>2]|0;
       $952 = ((($951)) + 24|0);
       HEAP32[$946>>2] = $952;
      } else {
       $953 = ((($db)) + 12|0);
       $954 = HEAP32[$db>>2]|0;
       $955 = $947;
       $956 = $954;
       $957 = (($955) - ($956))|0;
       $958 = (($957|0) / 24)&-1;
       $959 = (($958) + 1)|0;
       $960 = ($957|0)<(-24);
       if ($960) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $961 = __THREW__; __THREW__ = 0;
        $962 = ___cxa_find_matching_catch()|0;
        $963 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($29);
        $$02 = $962;$$03 = $963;
        break L3;
       }
       $964 = $949;
       $965 = (($964) - ($956))|0;
       $966 = (($965|0) / 24)&-1;
       $967 = ($966>>>0)<(1073741823);
       if ($967) {
        $968 = $966 << 1;
        $969 = ($968>>>0)<($959>>>0);
        $970 = $969 ? $959 : $968;
        $$0$i$i$i145 = $970;
       } else {
        $$0$i$i$i145 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i144,$$0$i$i$i145,$958,$953);
       $971 = ((($__v$i$i144)) + 8|0);
       $972 = HEAP32[$971>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($972,$29);
       $973 = ((($972)) + 24|0);
       HEAP32[$971>>2] = $973;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i144);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i144);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($29);
      $974 = ((($first)) + 2|0);
      $$0 = $974;
      break L1;
      break;
     }
     case 116:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($30,17623);
      $975 = ((($db)) + 4|0);
      $976 = HEAP32[$975>>2]|0;
      $977 = ((($db)) + 8|0);
      $978 = HEAP32[$977>>2]|0;
      $979 = ($976>>>0)<($978>>>0);
      if ($979) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($976,$30);
       $980 = HEAP32[$975>>2]|0;
       $981 = ((($980)) + 24|0);
       HEAP32[$975>>2] = $981;
      } else {
       $982 = ((($db)) + 12|0);
       $983 = HEAP32[$db>>2]|0;
       $984 = $976;
       $985 = $983;
       $986 = (($984) - ($985))|0;
       $987 = (($986|0) / 24)&-1;
       $988 = (($987) + 1)|0;
       $989 = ($986|0)<(-24);
       if ($989) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $990 = __THREW__; __THREW__ = 0;
        $991 = ___cxa_find_matching_catch()|0;
        $992 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($30);
        $$02 = $991;$$03 = $992;
        break L3;
       }
       $993 = $978;
       $994 = (($993) - ($985))|0;
       $995 = (($994|0) / 24)&-1;
       $996 = ($995>>>0)<(1073741823);
       if ($996) {
        $997 = $995 << 1;
        $998 = ($997>>>0)<($988>>>0);
        $999 = $998 ? $988 : $997;
        $$0$i$i$i150 = $999;
       } else {
        $$0$i$i$i150 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i149,$$0$i$i$i150,$987,$982);
       $1000 = ((($__v$i$i149)) + 8|0);
       $1001 = HEAP32[$1000>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1001,$30);
       $1002 = ((($1001)) + 24|0);
       HEAP32[$1000>>2] = $1002;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i149);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i149);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($30);
      $1003 = ((($first)) + 2|0);
      $$0 = $1003;
      break L1;
      break;
     }
     case 119:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj13EEERAT__Kc($31,17633);
      $1004 = ((($db)) + 4|0);
      $1005 = HEAP32[$1004>>2]|0;
      $1006 = ((($db)) + 8|0);
      $1007 = HEAP32[$1006>>2]|0;
      $1008 = ($1005>>>0)<($1007>>>0);
      if ($1008) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1005,$31);
       $1009 = HEAP32[$1004>>2]|0;
       $1010 = ((($1009)) + 24|0);
       HEAP32[$1004>>2] = $1010;
      } else {
       $1011 = ((($db)) + 12|0);
       $1012 = HEAP32[$db>>2]|0;
       $1013 = $1005;
       $1014 = $1012;
       $1015 = (($1013) - ($1014))|0;
       $1016 = (($1015|0) / 24)&-1;
       $1017 = (($1016) + 1)|0;
       $1018 = ($1015|0)<(-24);
       if ($1018) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $1019 = __THREW__; __THREW__ = 0;
        $1020 = ___cxa_find_matching_catch()|0;
        $1021 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($31);
        $$02 = $1020;$$03 = $1021;
        break L3;
       }
       $1022 = $1007;
       $1023 = (($1022) - ($1014))|0;
       $1024 = (($1023|0) / 24)&-1;
       $1025 = ($1024>>>0)<(1073741823);
       if ($1025) {
        $1026 = $1024 << 1;
        $1027 = ($1026>>>0)<($1017>>>0);
        $1028 = $1027 ? $1017 : $1026;
        $$0$i$i$i155 = $1028;
       } else {
        $$0$i$i$i155 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i154,$$0$i$i$i155,$1016,$1011);
       $1029 = ((($__v$i$i154)) + 8|0);
       $1030 = HEAP32[$1029>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1030,$31);
       $1031 = ((($1030)) + 24|0);
       HEAP32[$1029>>2] = $1031;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i154);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i154);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($31);
      $1032 = ((($first)) + 2|0);
      $$0 = $1032;
      break L1;
      break;
     }
     default: {
      $$0 = $first;
      break L1;
     }
     }
     break;
    }
    case 111:  {
     $1033 = ((($first)) + 1|0);
     $1034 = HEAP8[$1033>>0]|0;
     $1035 = $1034 << 24 >> 24;
     switch ($1035|0) {
     case 111:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($32,17646);
      $1036 = ((($db)) + 4|0);
      $1037 = HEAP32[$1036>>2]|0;
      $1038 = ((($db)) + 8|0);
      $1039 = HEAP32[$1038>>2]|0;
      $1040 = ($1037>>>0)<($1039>>>0);
      if ($1040) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1037,$32);
       $1041 = HEAP32[$1036>>2]|0;
       $1042 = ((($1041)) + 24|0);
       HEAP32[$1036>>2] = $1042;
      } else {
       $1043 = ((($db)) + 12|0);
       $1044 = HEAP32[$db>>2]|0;
       $1045 = $1037;
       $1046 = $1044;
       $1047 = (($1045) - ($1046))|0;
       $1048 = (($1047|0) / 24)&-1;
       $1049 = (($1048) + 1)|0;
       $1050 = ($1047|0)<(-24);
       if ($1050) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $1051 = __THREW__; __THREW__ = 0;
        $1052 = ___cxa_find_matching_catch()|0;
        $1053 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($32);
        $$02 = $1052;$$03 = $1053;
        break L3;
       }
       $1054 = $1039;
       $1055 = (($1054) - ($1046))|0;
       $1056 = (($1055|0) / 24)&-1;
       $1057 = ($1056>>>0)<(1073741823);
       if ($1057) {
        $1058 = $1056 << 1;
        $1059 = ($1058>>>0)<($1049>>>0);
        $1060 = $1059 ? $1049 : $1058;
        $$0$i$i$i160 = $1060;
       } else {
        $$0$i$i$i160 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i159,$$0$i$i$i160,$1048,$1043);
       $1061 = ((($__v$i$i159)) + 8|0);
       $1062 = HEAP32[$1061>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1062,$32);
       $1063 = ((($1062)) + 24|0);
       HEAP32[$1061>>2] = $1063;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i159);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i159);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($32);
      $1064 = ((($first)) + 2|0);
      $$0 = $1064;
      break L1;
      break;
     }
     case 114:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($33,17657);
      $1065 = ((($db)) + 4|0);
      $1066 = HEAP32[$1065>>2]|0;
      $1067 = ((($db)) + 8|0);
      $1068 = HEAP32[$1067>>2]|0;
      $1069 = ($1066>>>0)<($1068>>>0);
      if ($1069) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1066,$33);
       $1070 = HEAP32[$1065>>2]|0;
       $1071 = ((($1070)) + 24|0);
       HEAP32[$1065>>2] = $1071;
      } else {
       $1072 = ((($db)) + 12|0);
       $1073 = HEAP32[$db>>2]|0;
       $1074 = $1066;
       $1075 = $1073;
       $1076 = (($1074) - ($1075))|0;
       $1077 = (($1076|0) / 24)&-1;
       $1078 = (($1077) + 1)|0;
       $1079 = ($1076|0)<(-24);
       if ($1079) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $1080 = __THREW__; __THREW__ = 0;
        $1081 = ___cxa_find_matching_catch()|0;
        $1082 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($33);
        $$02 = $1081;$$03 = $1082;
        break L3;
       }
       $1083 = $1068;
       $1084 = (($1083) - ($1075))|0;
       $1085 = (($1084|0) / 24)&-1;
       $1086 = ($1085>>>0)<(1073741823);
       if ($1086) {
        $1087 = $1085 << 1;
        $1088 = ($1087>>>0)<($1078>>>0);
        $1089 = $1088 ? $1078 : $1087;
        $$0$i$i$i165 = $1089;
       } else {
        $$0$i$i$i165 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i164,$$0$i$i$i165,$1077,$1072);
       $1090 = ((($__v$i$i164)) + 8|0);
       $1091 = HEAP32[$1090>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1091,$33);
       $1092 = ((($1091)) + 24|0);
       HEAP32[$1090>>2] = $1092;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i164);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i164);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($33);
      $1093 = ((($first)) + 2|0);
      $$0 = $1093;
      break L1;
      break;
     }
     case 82:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($34,17667);
      $1094 = ((($db)) + 4|0);
      $1095 = HEAP32[$1094>>2]|0;
      $1096 = ((($db)) + 8|0);
      $1097 = HEAP32[$1096>>2]|0;
      $1098 = ($1095>>>0)<($1097>>>0);
      if ($1098) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1095,$34);
       $1099 = HEAP32[$1094>>2]|0;
       $1100 = ((($1099)) + 24|0);
       HEAP32[$1094>>2] = $1100;
      } else {
       $1101 = ((($db)) + 12|0);
       $1102 = HEAP32[$db>>2]|0;
       $1103 = $1095;
       $1104 = $1102;
       $1105 = (($1103) - ($1104))|0;
       $1106 = (($1105|0) / 24)&-1;
       $1107 = (($1106) + 1)|0;
       $1108 = ($1105|0)<(-24);
       if ($1108) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $1109 = __THREW__; __THREW__ = 0;
        $1110 = ___cxa_find_matching_catch()|0;
        $1111 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($34);
        $$02 = $1110;$$03 = $1111;
        break L3;
       }
       $1112 = $1097;
       $1113 = (($1112) - ($1104))|0;
       $1114 = (($1113|0) / 24)&-1;
       $1115 = ($1114>>>0)<(1073741823);
       if ($1115) {
        $1116 = $1114 << 1;
        $1117 = ($1116>>>0)<($1107>>>0);
        $1118 = $1117 ? $1107 : $1116;
        $$0$i$i$i170 = $1118;
       } else {
        $$0$i$i$i170 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i169,$$0$i$i$i170,$1106,$1101);
       $1119 = ((($__v$i$i169)) + 8|0);
       $1120 = HEAP32[$1119>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1120,$34);
       $1121 = ((($1120)) + 24|0);
       HEAP32[$1119>>2] = $1121;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i169);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i169);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($34);
      $1122 = ((($first)) + 2|0);
      $$0 = $1122;
      break L1;
      break;
     }
     default: {
      $$0 = $first;
      break L1;
     }
     }
     break;
    }
    case 112:  {
     $1123 = ((($first)) + 1|0);
     $1124 = HEAP8[$1123>>0]|0;
     $1125 = $1124 << 24 >> 24;
     switch ($1125|0) {
     case 109:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc($35,17678);
      $1126 = ((($db)) + 4|0);
      $1127 = HEAP32[$1126>>2]|0;
      $1128 = ((($db)) + 8|0);
      $1129 = HEAP32[$1128>>2]|0;
      $1130 = ($1127>>>0)<($1129>>>0);
      if ($1130) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1127,$35);
       $1131 = HEAP32[$1126>>2]|0;
       $1132 = ((($1131)) + 24|0);
       HEAP32[$1126>>2] = $1132;
      } else {
       $1133 = ((($db)) + 12|0);
       $1134 = HEAP32[$db>>2]|0;
       $1135 = $1127;
       $1136 = $1134;
       $1137 = (($1135) - ($1136))|0;
       $1138 = (($1137|0) / 24)&-1;
       $1139 = (($1138) + 1)|0;
       $1140 = ($1137|0)<(-24);
       if ($1140) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $1141 = __THREW__; __THREW__ = 0;
        $1142 = ___cxa_find_matching_catch()|0;
        $1143 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($35);
        $$02 = $1142;$$03 = $1143;
        break L3;
       }
       $1144 = $1129;
       $1145 = (($1144) - ($1136))|0;
       $1146 = (($1145|0) / 24)&-1;
       $1147 = ($1146>>>0)<(1073741823);
       if ($1147) {
        $1148 = $1146 << 1;
        $1149 = ($1148>>>0)<($1139>>>0);
        $1150 = $1149 ? $1139 : $1148;
        $$0$i$i$i175 = $1150;
       } else {
        $$0$i$i$i175 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i174,$$0$i$i$i175,$1138,$1133);
       $1151 = ((($__v$i$i174)) + 8|0);
       $1152 = HEAP32[$1151>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1152,$35);
       $1153 = ((($1152)) + 24|0);
       HEAP32[$1151>>2] = $1153;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i174);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i174);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($35);
      $1154 = ((($first)) + 2|0);
      $$0 = $1154;
      break L1;
      break;
     }
     case 108:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($36,17690);
      $1155 = ((($db)) + 4|0);
      $1156 = HEAP32[$1155>>2]|0;
      $1157 = ((($db)) + 8|0);
      $1158 = HEAP32[$1157>>2]|0;
      $1159 = ($1156>>>0)<($1158>>>0);
      if ($1159) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1156,$36);
       $1160 = HEAP32[$1155>>2]|0;
       $1161 = ((($1160)) + 24|0);
       HEAP32[$1155>>2] = $1161;
      } else {
       $1162 = ((($db)) + 12|0);
       $1163 = HEAP32[$db>>2]|0;
       $1164 = $1156;
       $1165 = $1163;
       $1166 = (($1164) - ($1165))|0;
       $1167 = (($1166|0) / 24)&-1;
       $1168 = (($1167) + 1)|0;
       $1169 = ($1166|0)<(-24);
       if ($1169) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $1170 = __THREW__; __THREW__ = 0;
        $1171 = ___cxa_find_matching_catch()|0;
        $1172 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($36);
        $$02 = $1171;$$03 = $1172;
        break L3;
       }
       $1173 = $1158;
       $1174 = (($1173) - ($1165))|0;
       $1175 = (($1174|0) / 24)&-1;
       $1176 = ($1175>>>0)<(1073741823);
       if ($1176) {
        $1177 = $1175 << 1;
        $1178 = ($1177>>>0)<($1168>>>0);
        $1179 = $1178 ? $1168 : $1177;
        $$0$i$i$i180 = $1179;
       } else {
        $$0$i$i$i180 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i179,$$0$i$i$i180,$1167,$1162);
       $1180 = ((($__v$i$i179)) + 8|0);
       $1181 = HEAP32[$1180>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1181,$36);
       $1182 = ((($1181)) + 24|0);
       HEAP32[$1180>>2] = $1182;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i179);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i179);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($36);
      $1183 = ((($first)) + 2|0);
      $$0 = $1183;
      break L1;
      break;
     }
     case 76:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($37,17700);
      $1184 = ((($db)) + 4|0);
      $1185 = HEAP32[$1184>>2]|0;
      $1186 = ((($db)) + 8|0);
      $1187 = HEAP32[$1186>>2]|0;
      $1188 = ($1185>>>0)<($1187>>>0);
      if ($1188) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1185,$37);
       $1189 = HEAP32[$1184>>2]|0;
       $1190 = ((($1189)) + 24|0);
       HEAP32[$1184>>2] = $1190;
      } else {
       $1191 = ((($db)) + 12|0);
       $1192 = HEAP32[$db>>2]|0;
       $1193 = $1185;
       $1194 = $1192;
       $1195 = (($1193) - ($1194))|0;
       $1196 = (($1195|0) / 24)&-1;
       $1197 = (($1196) + 1)|0;
       $1198 = ($1195|0)<(-24);
       if ($1198) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $1199 = __THREW__; __THREW__ = 0;
        $1200 = ___cxa_find_matching_catch()|0;
        $1201 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($37);
        $$02 = $1200;$$03 = $1201;
        break L3;
       }
       $1202 = $1187;
       $1203 = (($1202) - ($1194))|0;
       $1204 = (($1203|0) / 24)&-1;
       $1205 = ($1204>>>0)<(1073741823);
       if ($1205) {
        $1206 = $1204 << 1;
        $1207 = ($1206>>>0)<($1197>>>0);
        $1208 = $1207 ? $1197 : $1206;
        $$0$i$i$i185 = $1208;
       } else {
        $$0$i$i$i185 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i184,$$0$i$i$i185,$1196,$1191);
       $1209 = ((($__v$i$i184)) + 8|0);
       $1210 = HEAP32[$1209>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1210,$37);
       $1211 = ((($1210)) + 24|0);
       HEAP32[$1209>>2] = $1211;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i184);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i184);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($37);
      $1212 = ((($first)) + 2|0);
      $$0 = $1212;
      break L1;
      break;
     }
     case 112:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($38,17711);
      $1213 = ((($db)) + 4|0);
      $1214 = HEAP32[$1213>>2]|0;
      $1215 = ((($db)) + 8|0);
      $1216 = HEAP32[$1215>>2]|0;
      $1217 = ($1214>>>0)<($1216>>>0);
      if ($1217) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1214,$38);
       $1218 = HEAP32[$1213>>2]|0;
       $1219 = ((($1218)) + 24|0);
       HEAP32[$1213>>2] = $1219;
      } else {
       $1220 = ((($db)) + 12|0);
       $1221 = HEAP32[$db>>2]|0;
       $1222 = $1214;
       $1223 = $1221;
       $1224 = (($1222) - ($1223))|0;
       $1225 = (($1224|0) / 24)&-1;
       $1226 = (($1225) + 1)|0;
       $1227 = ($1224|0)<(-24);
       if ($1227) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $1228 = __THREW__; __THREW__ = 0;
        $1229 = ___cxa_find_matching_catch()|0;
        $1230 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($38);
        $$02 = $1229;$$03 = $1230;
        break L3;
       }
       $1231 = $1216;
       $1232 = (($1231) - ($1223))|0;
       $1233 = (($1232|0) / 24)&-1;
       $1234 = ($1233>>>0)<(1073741823);
       if ($1234) {
        $1235 = $1233 << 1;
        $1236 = ($1235>>>0)<($1226>>>0);
        $1237 = $1236 ? $1226 : $1235;
        $$0$i$i$i190 = $1237;
       } else {
        $$0$i$i$i190 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i189,$$0$i$i$i190,$1225,$1220);
       $1238 = ((($__v$i$i189)) + 8|0);
       $1239 = HEAP32[$1238>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1239,$38);
       $1240 = ((($1239)) + 24|0);
       HEAP32[$1238>>2] = $1240;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i189);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i189);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($38);
      $1241 = ((($first)) + 2|0);
      $$0 = $1241;
      break L1;
      break;
     }
     case 115:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($39,17690);
      $1242 = ((($db)) + 4|0);
      $1243 = HEAP32[$1242>>2]|0;
      $1244 = ((($db)) + 8|0);
      $1245 = HEAP32[$1244>>2]|0;
      $1246 = ($1243>>>0)<($1245>>>0);
      if ($1246) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1243,$39);
       $1247 = HEAP32[$1242>>2]|0;
       $1248 = ((($1247)) + 24|0);
       HEAP32[$1242>>2] = $1248;
      } else {
       $1249 = ((($db)) + 12|0);
       $1250 = HEAP32[$db>>2]|0;
       $1251 = $1243;
       $1252 = $1250;
       $1253 = (($1251) - ($1252))|0;
       $1254 = (($1253|0) / 24)&-1;
       $1255 = (($1254) + 1)|0;
       $1256 = ($1253|0)<(-24);
       if ($1256) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $1257 = __THREW__; __THREW__ = 0;
        $1258 = ___cxa_find_matching_catch()|0;
        $1259 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($39);
        $$02 = $1258;$$03 = $1259;
        break L3;
       }
       $1260 = $1245;
       $1261 = (($1260) - ($1252))|0;
       $1262 = (($1261|0) / 24)&-1;
       $1263 = ($1262>>>0)<(1073741823);
       if ($1263) {
        $1264 = $1262 << 1;
        $1265 = ($1264>>>0)<($1255>>>0);
        $1266 = $1265 ? $1255 : $1264;
        $$0$i$i$i195 = $1266;
       } else {
        $$0$i$i$i195 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i194,$$0$i$i$i195,$1254,$1249);
       $1267 = ((($__v$i$i194)) + 8|0);
       $1268 = HEAP32[$1267>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1268,$39);
       $1269 = ((($1268)) + 24|0);
       HEAP32[$1267>>2] = $1269;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i194);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i194);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($39);
      $1270 = ((($first)) + 2|0);
      $$0 = $1270;
      break L1;
      break;
     }
     case 116:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($40,17722);
      $1271 = ((($db)) + 4|0);
      $1272 = HEAP32[$1271>>2]|0;
      $1273 = ((($db)) + 8|0);
      $1274 = HEAP32[$1273>>2]|0;
      $1275 = ($1272>>>0)<($1274>>>0);
      if ($1275) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1272,$40);
       $1276 = HEAP32[$1271>>2]|0;
       $1277 = ((($1276)) + 24|0);
       HEAP32[$1271>>2] = $1277;
      } else {
       $1278 = ((($db)) + 12|0);
       $1279 = HEAP32[$db>>2]|0;
       $1280 = $1272;
       $1281 = $1279;
       $1282 = (($1280) - ($1281))|0;
       $1283 = (($1282|0) / 24)&-1;
       $1284 = (($1283) + 1)|0;
       $1285 = ($1282|0)<(-24);
       if ($1285) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $1286 = __THREW__; __THREW__ = 0;
        $1287 = ___cxa_find_matching_catch()|0;
        $1288 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($40);
        $$02 = $1287;$$03 = $1288;
        break L3;
       }
       $1289 = $1274;
       $1290 = (($1289) - ($1281))|0;
       $1291 = (($1290|0) / 24)&-1;
       $1292 = ($1291>>>0)<(1073741823);
       if ($1292) {
        $1293 = $1291 << 1;
        $1294 = ($1293>>>0)<($1284>>>0);
        $1295 = $1294 ? $1284 : $1293;
        $$0$i$i$i200 = $1295;
       } else {
        $$0$i$i$i200 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i199,$$0$i$i$i200,$1283,$1278);
       $1296 = ((($__v$i$i199)) + 8|0);
       $1297 = HEAP32[$1296>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1297,$40);
       $1298 = ((($1297)) + 24|0);
       HEAP32[$1296>>2] = $1298;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i199);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i199);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($40);
      $1299 = ((($first)) + 2|0);
      $$0 = $1299;
      break L1;
      break;
     }
     default: {
      $$0 = $first;
      break L1;
     }
     }
     break;
    }
    case 113:  {
     $1300 = ((($first)) + 1|0);
     $1301 = HEAP8[$1300>>0]|0;
     $1302 = ($1301<<24>>24)==(117);
     if (!($1302)) {
      $$0 = $first;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($41,17733);
     $1303 = ((($db)) + 4|0);
     $1304 = HEAP32[$1303>>2]|0;
     $1305 = ((($db)) + 8|0);
     $1306 = HEAP32[$1305>>2]|0;
     $1307 = ($1304>>>0)<($1306>>>0);
     if ($1307) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1304,$41);
      $1308 = HEAP32[$1303>>2]|0;
      $1309 = ((($1308)) + 24|0);
      HEAP32[$1303>>2] = $1309;
     } else {
      $1310 = ((($db)) + 12|0);
      $1311 = HEAP32[$db>>2]|0;
      $1312 = $1304;
      $1313 = $1311;
      $1314 = (($1312) - ($1313))|0;
      $1315 = (($1314|0) / 24)&-1;
      $1316 = (($1315) + 1)|0;
      $1317 = ($1314|0)<(-24);
      if ($1317) {
       __THREW__ = 0;
       invoke_vi(402,($db|0));
       $1318 = __THREW__; __THREW__ = 0;
       $1319 = ___cxa_find_matching_catch()|0;
       $1320 = tempRet0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($41);
       $$02 = $1319;$$03 = $1320;
       break L3;
      }
      $1321 = $1306;
      $1322 = (($1321) - ($1313))|0;
      $1323 = (($1322|0) / 24)&-1;
      $1324 = ($1323>>>0)<(1073741823);
      if ($1324) {
       $1325 = $1323 << 1;
       $1326 = ($1325>>>0)<($1316>>>0);
       $1327 = $1326 ? $1316 : $1325;
       $$0$i$i$i205 = $1327;
      } else {
       $$0$i$i$i205 = 2147483647;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i204,$$0$i$i$i205,$1315,$1310);
      $1328 = ((($__v$i$i204)) + 8|0);
      $1329 = HEAP32[$1328>>2]|0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1329,$41);
      $1330 = ((($1329)) + 24|0);
      HEAP32[$1328>>2] = $1330;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i204);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i204);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($41);
     $1331 = ((($first)) + 2|0);
     $$0 = $1331;
     break L1;
     break;
    }
    case 114:  {
     $1332 = ((($first)) + 1|0);
     $1333 = HEAP8[$1332>>0]|0;
     $1334 = $1333 << 24 >> 24;
     switch ($1334|0) {
     case 109:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($42,17743);
      $1335 = ((($db)) + 4|0);
      $1336 = HEAP32[$1335>>2]|0;
      $1337 = ((($db)) + 8|0);
      $1338 = HEAP32[$1337>>2]|0;
      $1339 = ($1336>>>0)<($1338>>>0);
      if ($1339) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1336,$42);
       $1340 = HEAP32[$1335>>2]|0;
       $1341 = ((($1340)) + 24|0);
       HEAP32[$1335>>2] = $1341;
      } else {
       $1342 = ((($db)) + 12|0);
       $1343 = HEAP32[$db>>2]|0;
       $1344 = $1336;
       $1345 = $1343;
       $1346 = (($1344) - ($1345))|0;
       $1347 = (($1346|0) / 24)&-1;
       $1348 = (($1347) + 1)|0;
       $1349 = ($1346|0)<(-24);
       if ($1349) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $1350 = __THREW__; __THREW__ = 0;
        $1351 = ___cxa_find_matching_catch()|0;
        $1352 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($42);
        $$02 = $1351;$$03 = $1352;
        break L3;
       }
       $1353 = $1338;
       $1354 = (($1353) - ($1345))|0;
       $1355 = (($1354|0) / 24)&-1;
       $1356 = ($1355>>>0)<(1073741823);
       if ($1356) {
        $1357 = $1355 << 1;
        $1358 = ($1357>>>0)<($1348>>>0);
        $1359 = $1358 ? $1348 : $1357;
        $$0$i$i$i210 = $1359;
       } else {
        $$0$i$i$i210 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i209,$$0$i$i$i210,$1347,$1342);
       $1360 = ((($__v$i$i209)) + 8|0);
       $1361 = HEAP32[$1360>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1361,$42);
       $1362 = ((($1361)) + 24|0);
       HEAP32[$1360>>2] = $1362;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i209);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i209);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($42);
      $1363 = ((($first)) + 2|0);
      $$0 = $1363;
      break L1;
      break;
     }
     case 77:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($43,17753);
      $1364 = ((($db)) + 4|0);
      $1365 = HEAP32[$1364>>2]|0;
      $1366 = ((($db)) + 8|0);
      $1367 = HEAP32[$1366>>2]|0;
      $1368 = ($1365>>>0)<($1367>>>0);
      if ($1368) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1365,$43);
       $1369 = HEAP32[$1364>>2]|0;
       $1370 = ((($1369)) + 24|0);
       HEAP32[$1364>>2] = $1370;
      } else {
       $1371 = ((($db)) + 12|0);
       $1372 = HEAP32[$db>>2]|0;
       $1373 = $1365;
       $1374 = $1372;
       $1375 = (($1373) - ($1374))|0;
       $1376 = (($1375|0) / 24)&-1;
       $1377 = (($1376) + 1)|0;
       $1378 = ($1375|0)<(-24);
       if ($1378) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $1379 = __THREW__; __THREW__ = 0;
        $1380 = ___cxa_find_matching_catch()|0;
        $1381 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($43);
        $$02 = $1380;$$03 = $1381;
        break L3;
       }
       $1382 = $1367;
       $1383 = (($1382) - ($1374))|0;
       $1384 = (($1383|0) / 24)&-1;
       $1385 = ($1384>>>0)<(1073741823);
       if ($1385) {
        $1386 = $1384 << 1;
        $1387 = ($1386>>>0)<($1377>>>0);
        $1388 = $1387 ? $1377 : $1386;
        $$0$i$i$i215 = $1388;
       } else {
        $$0$i$i$i215 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i214,$$0$i$i$i215,$1376,$1371);
       $1389 = ((($__v$i$i214)) + 8|0);
       $1390 = HEAP32[$1389>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1390,$43);
       $1391 = ((($1390)) + 24|0);
       HEAP32[$1389>>2] = $1391;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i214);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i214);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($43);
      $1392 = ((($first)) + 2|0);
      $$0 = $1392;
      break L1;
      break;
     }
     case 115:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($44,17764);
      $1393 = ((($db)) + 4|0);
      $1394 = HEAP32[$1393>>2]|0;
      $1395 = ((($db)) + 8|0);
      $1396 = HEAP32[$1395>>2]|0;
      $1397 = ($1394>>>0)<($1396>>>0);
      if ($1397) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1394,$44);
       $1398 = HEAP32[$1393>>2]|0;
       $1399 = ((($1398)) + 24|0);
       HEAP32[$1393>>2] = $1399;
      } else {
       $1400 = ((($db)) + 12|0);
       $1401 = HEAP32[$db>>2]|0;
       $1402 = $1394;
       $1403 = $1401;
       $1404 = (($1402) - ($1403))|0;
       $1405 = (($1404|0) / 24)&-1;
       $1406 = (($1405) + 1)|0;
       $1407 = ($1404|0)<(-24);
       if ($1407) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $1408 = __THREW__; __THREW__ = 0;
        $1409 = ___cxa_find_matching_catch()|0;
        $1410 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($44);
        $$02 = $1409;$$03 = $1410;
        break L3;
       }
       $1411 = $1396;
       $1412 = (($1411) - ($1403))|0;
       $1413 = (($1412|0) / 24)&-1;
       $1414 = ($1413>>>0)<(1073741823);
       if ($1414) {
        $1415 = $1413 << 1;
        $1416 = ($1415>>>0)<($1406>>>0);
        $1417 = $1416 ? $1406 : $1415;
        $$0$i$i$i220 = $1417;
       } else {
        $$0$i$i$i220 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i219,$$0$i$i$i220,$1405,$1400);
       $1418 = ((($__v$i$i219)) + 8|0);
       $1419 = HEAP32[$1418>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1419,$44);
       $1420 = ((($1419)) + 24|0);
       HEAP32[$1418>>2] = $1420;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i219);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i219);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($44);
      $1421 = ((($first)) + 2|0);
      $$0 = $1421;
      break L1;
      break;
     }
     case 83:  {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc($45,17775);
      $1422 = ((($db)) + 4|0);
      $1423 = HEAP32[$1422>>2]|0;
      $1424 = ((($db)) + 8|0);
      $1425 = HEAP32[$1424>>2]|0;
      $1426 = ($1423>>>0)<($1425>>>0);
      if ($1426) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1423,$45);
       $1427 = HEAP32[$1422>>2]|0;
       $1428 = ((($1427)) + 24|0);
       HEAP32[$1422>>2] = $1428;
      } else {
       $1429 = ((($db)) + 12|0);
       $1430 = HEAP32[$db>>2]|0;
       $1431 = $1423;
       $1432 = $1430;
       $1433 = (($1431) - ($1432))|0;
       $1434 = (($1433|0) / 24)&-1;
       $1435 = (($1434) + 1)|0;
       $1436 = ($1433|0)<(-24);
       if ($1436) {
        __THREW__ = 0;
        invoke_vi(402,($db|0));
        $1437 = __THREW__; __THREW__ = 0;
        $1438 = ___cxa_find_matching_catch()|0;
        $1439 = tempRet0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($45);
        $$02 = $1438;$$03 = $1439;
        break L3;
       }
       $1440 = $1425;
       $1441 = (($1440) - ($1432))|0;
       $1442 = (($1441|0) / 24)&-1;
       $1443 = ($1442>>>0)<(1073741823);
       if ($1443) {
        $1444 = $1442 << 1;
        $1445 = ($1444>>>0)<($1435>>>0);
        $1446 = $1445 ? $1435 : $1444;
        $$0$i$i$i225 = $1446;
       } else {
        $$0$i$i$i225 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224,$$0$i$i$i225,$1434,$1429);
       $1447 = ((($__v$i$i224)) + 8|0);
       $1448 = HEAP32[$1447>>2]|0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1448,$45);
       $1449 = ((($1448)) + 24|0);
       HEAP32[$1447>>2] = $1449;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i224);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($45);
      $1450 = ((($first)) + 2|0);
      $$0 = $1450;
      break L1;
      break;
     }
     default: {
      $$0 = $first;
      break L1;
     }
     }
     break;
    }
    case 118:  {
     $1451 = ((($first)) + 1|0);
     $1452 = HEAP8[$1451>>0]|0;
     $1453 = $1452 << 24 >> 24;
     $isdigittmp = (($1453) + -48)|0;
     $isdigit = ($isdigittmp>>>0)<(10);
     if (!($isdigit)) {
      $$0 = $first;
      break L1;
     }
     $1454 = ((($first)) + 2|0);
     $1455 = (__ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($1454,$last,$db)|0);
     $1456 = ($1455|0)==($1454|0);
     if ($1456) {
      $$0 = $first;
      break L1;
     }
     $1457 = HEAP32[$db>>2]|0;
     $1458 = ((($db)) + 4|0);
     $1459 = HEAP32[$1458>>2]|0;
     $1460 = ($1457|0)==($1459|0);
     if ($1460) {
      $$0 = $first;
      break L1;
     }
     $1461 = ((($1459)) + -24|0);
     (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($1461,0,17359)|0);
     $$0 = $1455;
     break L1;
     break;
    }
    default: {
     $$0 = $first;
     break L1;
    }
    }
   } while(0);
   ___resumeException($$02|0);
   // unreachable;
  } else {
   $$0 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($this,$s) {
 $this = $this|0;
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 HEAP8[$this>>0] = 20;
 $0 = ((($this)) + 1|0);
 dest=$0; src=$s; stop=dest+10|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 $1 = ((($this)) + 11|0);
 HEAP8[$1>>0] = 0;
 $2 = ((($this)) + 12|0);
 HEAP32[$2>>2] = 0;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($2)) + 8|0);
 HEAP32[$4>>2] = 0;
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($this,$s) {
 $this = $this|0;
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 HEAP8[$this>>0] = 18;
 $0 = ((($this)) + 1|0);
 dest=$0; src=$s; stop=dest+9|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 $1 = ((($this)) + 10|0);
 HEAP8[$1>>0] = 0;
 $2 = ((($this)) + 12|0);
 HEAP32[$2>>2] = 0;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($2)) + 8|0);
 HEAP32[$4>>2] = 0;
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_118parse_template_argINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$0 = 0, $$first = 0, $$first3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond2 = 0, $t$0 = 0, $t$0$lcssa = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($first|0)==($last|0);
 L1: do {
  if ($0) {
   $$0 = $first;
  } else {
   $1 = HEAP8[$first>>0]|0;
   $2 = $1 << 24 >> 24;
   switch ($2|0) {
   case 88:  {
    $3 = ((($first)) + 1|0);
    $4 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($3,$last,$db)|0);
    $5 = ($4|0)==($3|0);
    $6 = ($4|0)==($last|0);
    $or$cond = $5 | $6;
    if ($or$cond) {
     $$0 = $first;
     break L1;
    }
    $7 = HEAP8[$4>>0]|0;
    $8 = ($7<<24>>24)==(69);
    $9 = ((($4)) + 1|0);
    $$first = $8 ? $9 : $first;
    $$0 = $$first;
    break L1;
    break;
   }
   case 74:  {
    $10 = ((($first)) + 1|0);
    $11 = ($10|0)==($last|0);
    if ($11) {
     $$0 = $first;
     break L1;
    } else {
     $t$0 = $10;
    }
    while(1) {
     $12 = HEAP8[$t$0>>0]|0;
     $13 = ($12<<24>>24)==(69);
     if ($13) {
      $t$0$lcssa = $t$0;
      break;
     }
     $14 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_template_argINS0_2DbEEEPKcS4_S4_RT_($t$0,$last,$db)|0);
     $15 = ($14|0)==($t$0|0);
     if ($15) {
      $$0 = $first;
      break L1;
     } else {
      $t$0 = $14;
     }
    }
    $16 = ((($t$0$lcssa)) + 1|0);
    $$0 = $16;
    break L1;
    break;
   }
   case 76:  {
    $17 = ((($first)) + 1|0);
    $18 = ($17|0)==($last|0);
    if (!($18)) {
     $19 = HEAP8[$17>>0]|0;
     $20 = ($19<<24>>24)==(90);
     if ($20) {
      $21 = ((($first)) + 2|0);
      $22 = (__ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($21,$last,$db)|0);
      $23 = ($22|0)==($21|0);
      $24 = ($22|0)==($last|0);
      $or$cond2 = $23 | $24;
      if ($or$cond2) {
       $$0 = $first;
       break L1;
      }
      $25 = HEAP8[$22>>0]|0;
      $26 = ($25<<24>>24)==(69);
      $27 = ((($22)) + 1|0);
      $$first3 = $26 ? $27 : $first;
      return ($$first3|0);
     }
    }
    $28 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_expr_primaryINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
    $$0 = $28;
    break L1;
    break;
   }
   default: {
    $29 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
    $$0 = $29;
    break L1;
   }
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_118parse_expr_primaryINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i46 = 0, $$0$i$i$i$i62 = 0, $$0$i$i$i26 = 0, $$0$i$i117 = 0, $$0$i49 = 0, $$01$i$i$i122 = 0, $$01$i$i$i41126 = 0, $$01$i$i$i57130 = 0, $$1 = 0, $$1$i = 0, $$14 = 0, $$2 = 0, $$25 = 0, $$3 = 0, $$36 = 0, $$4 = 0;
 var $$47 = 0, $$first = 0, $$lcssa = 0, $$lcssa154 = 0, $$lcssa155 = 0, $$lcssa157 = 0, $$lcssa158 = 0, $$lcssa160 = 0, $$lcssa161 = 0, $$v$i = 0, $$v$i37 = 0, $$v$i56 = 0, $$v4$i = 0, $$v4$i40 = 0, $$v6$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $216$phi = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;
 var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0.0, $238 = 0.0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0;
 var $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0;
 var $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0;
 var $282 = 0, $283 = 0, $284 = 0, $285 = 0, $285$phi = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;
 var $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0.0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0;
 var $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0;
 var $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0;
 var $353 = 0, $353$phi = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0;
 var $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0.0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0;
 var $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0;
 var $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0;
 var $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0;
 var $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0;
 var $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0;
 var $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__p$0$i$i116 = 0, $__p$0$ph$i$i = 0, $__v$i$i = 0, $__v$i$i$i = 0, $__v$i$i$i31 = 0, $__v$i$i$i50 = 0, $__v$i$i25 = 0, $e$0$i124 = 0, $e$0$i124$lcssa153 = 0, $e$0$i33128 = 0, $e$0$i33128$lcssa156 = 0;
 var $e$0$i52132 = 0, $e$0$i52132$lcssa159 = 0, $first$ = 0, $first$10 = 0, $first$11 = 0, $first$12 = 0, $first$13 = 0, $first$14 = 0, $first$15 = 0, $first$16 = 0, $first$17 = 0, $first$18 = 0, $first$19 = 0, $first$20 = 0, $first$21 = 0, $first$22 = 0, $first$23 = 0, $first$8 = 0, $first$9 = 0, $isdigit = 0;
 var $isdigit$i = 0, $isdigit$i36 = 0, $isdigit$i55 = 0, $isdigit3$i = 0, $isdigit3$i39 = 0, $isdigit5$i = 0, $isdigittmp = 0, $isdigittmp$i = 0, $isdigittmp$i35 = 0, $isdigittmp$i54 = 0, $isdigittmp2$i = 0, $isdigittmp2$i38 = 0, $isdigittmp4$i = 0, $n$0120 = 0, $n$0120$lcssa = 0, $num$i = 0, $num$i32 = 0, $num$i51 = 0, $or$cond = 0, $or$cond104 = 0;
 var $or$cond134 = 0, $or$cond135 = 0, $or$cond136 = 0, $or$cond24 = 0, $scevgep2$i$i = 0, $t$0$i125 = 0, $t$0$i34129 = 0, $t$0$i53133 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer4 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 672|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer4 = sp + 32|0;
 $vararg_buffer1 = sp + 24|0;
 $vararg_buffer = sp + 16|0;
 $__v$i$i$i50 = sp + 544|0;
 $0 = sp + 8|0;
 $num$i51 = sp + 624|0;
 $1 = sp + 520|0;
 $2 = sp + 508|0;
 $__v$i$i$i31 = sp + 488|0;
 $3 = sp;
 $num$i32 = sp + 592|0;
 $4 = sp + 464|0;
 $5 = sp + 448|0;
 $__v$i$i$i = sp + 428|0;
 $6 = sp + 424|0;
 $num$i = sp + 568|0;
 $7 = sp + 400|0;
 $8 = sp + 388|0;
 $__v$i$i25 = sp + 368|0;
 $__v$i$i = sp + 348|0;
 $9 = sp + 336|0;
 $10 = sp + 312|0;
 $11 = sp + 288|0;
 $12 = sp + 272|0;
 $13 = sp + 260|0;
 $14 = sp + 248|0;
 $15 = sp + 236|0;
 $16 = sp + 224|0;
 $17 = sp + 212|0;
 $18 = sp + 200|0;
 $19 = sp + 188|0;
 $20 = sp + 176|0;
 $21 = sp + 164|0;
 $22 = sp + 152|0;
 $23 = sp + 140|0;
 $24 = sp + 128|0;
 $25 = sp + 104|0;
 $26 = sp + 88|0;
 $27 = sp + 76|0;
 $28 = sp + 64|0;
 $29 = sp + 52|0;
 $30 = sp + 40|0;
 $31 = $last;
 $32 = $first;
 $33 = (($31) - ($32))|0;
 $34 = ($33|0)>(3);
 L1: do {
  if ($34) {
   $35 = HEAP8[$first>>0]|0;
   $36 = ($35<<24>>24)==(76);
   if ($36) {
    $37 = ((($first)) + 1|0);
    $38 = HEAP8[$37>>0]|0;
    $39 = $38 << 24 >> 24;
    L4: do {
     switch ($39|0) {
     case 84:  {
      $$0 = $first;
      break L1;
      break;
     }
     case 119:  {
      $40 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($9,18101,7);
      __THREW__ = 0;
      $41 = (invoke_iiiii(413,($40|0),($last|0),($9|0),($db|0))|0);
      $42 = __THREW__; __THREW__ = 0;
      $43 = $42&1;
      if ($43) {
       $45 = ___cxa_find_matching_catch()|0;
       $46 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
       $$4 = $45;$$47 = $46;
       break L4;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
       $44 = ($41|0)==($40|0);
       $first$ = $44 ? $first : $41;
       $$0 = $first$;
       break L1;
      }
      break;
     }
     case 98:  {
      $47 = ((($first)) + 3|0);
      $48 = HEAP8[$47>>0]|0;
      $49 = ($48<<24>>24)==(69);
      if (!($49)) {
       $$0 = $first;
       break L1;
      }
      $50 = ((($first)) + 2|0);
      $51 = HEAP8[$50>>0]|0;
      $52 = $51 << 24 >> 24;
      switch ($52|0) {
      case 48:  {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj6EEERAT__Kc($10,26150);
       $53 = ((($db)) + 4|0);
       $54 = HEAP32[$53>>2]|0;
       $55 = ((($db)) + 8|0);
       $56 = HEAP32[$55>>2]|0;
       $57 = ($54>>>0)<($56>>>0);
       if ($57) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($54,$10);
        $58 = HEAP32[$53>>2]|0;
        $59 = ((($58)) + 24|0);
        HEAP32[$53>>2] = $59;
       } else {
        $60 = ((($db)) + 12|0);
        $61 = HEAP32[$db>>2]|0;
        $62 = $54;
        $63 = $61;
        $64 = (($62) - ($63))|0;
        $65 = (($64|0) / 24)&-1;
        $66 = (($65) + 1)|0;
        $67 = ($64|0)<(-24);
        if ($67) {
         __THREW__ = 0;
         invoke_vi(402,($db|0));
         $68 = __THREW__; __THREW__ = 0;
         $69 = ___cxa_find_matching_catch()|0;
         $70 = tempRet0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($10);
         $$4 = $69;$$47 = $70;
         break L4;
        }
        $71 = $56;
        $72 = (($71) - ($63))|0;
        $73 = (($72|0) / 24)&-1;
        $74 = ($73>>>0)<(1073741823);
        if ($74) {
         $75 = $73 << 1;
         $76 = ($75>>>0)<($66>>>0);
         $77 = $76 ? $66 : $75;
         $$0$i$i$i = $77;
        } else {
         $$0$i$i$i = 2147483647;
        }
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i,$$0$i$i$i,$65,$60);
        $78 = ((($__v$i$i)) + 8|0);
        $79 = HEAP32[$78>>2]|0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($79,$10);
        $80 = ((($79)) + 24|0);
        HEAP32[$78>>2] = $80;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i);
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i);
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($10);
       $81 = ((($first)) + 4|0);
       $$0 = $81;
       break L1;
       break;
      }
      case 49:  {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc($11,26145);
       $82 = ((($db)) + 4|0);
       $83 = HEAP32[$82>>2]|0;
       $84 = ((($db)) + 8|0);
       $85 = HEAP32[$84>>2]|0;
       $86 = ($83>>>0)<($85>>>0);
       if ($86) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($83,$11);
        $87 = HEAP32[$82>>2]|0;
        $88 = ((($87)) + 24|0);
        HEAP32[$82>>2] = $88;
       } else {
        $89 = ((($db)) + 12|0);
        $90 = HEAP32[$db>>2]|0;
        $91 = $83;
        $92 = $90;
        $93 = (($91) - ($92))|0;
        $94 = (($93|0) / 24)&-1;
        $95 = (($94) + 1)|0;
        $96 = ($93|0)<(-24);
        if ($96) {
         __THREW__ = 0;
         invoke_vi(402,($db|0));
         $97 = __THREW__; __THREW__ = 0;
         $98 = ___cxa_find_matching_catch()|0;
         $99 = tempRet0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($11);
         $$4 = $98;$$47 = $99;
         break L4;
        }
        $100 = $85;
        $101 = (($100) - ($92))|0;
        $102 = (($101|0) / 24)&-1;
        $103 = ($102>>>0)<(1073741823);
        if ($103) {
         $104 = $102 << 1;
         $105 = ($104>>>0)<($95>>>0);
         $106 = $105 ? $95 : $104;
         $$0$i$i$i26 = $106;
        } else {
         $$0$i$i$i26 = 2147483647;
        }
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i25,$$0$i$i$i26,$94,$89);
        $107 = ((($__v$i$i25)) + 8|0);
        $108 = HEAP32[$107>>2]|0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($108,$11);
        $109 = ((($108)) + 24|0);
        HEAP32[$107>>2] = $109;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i25);
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i25);
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($11);
       $110 = ((($first)) + 4|0);
       $$0 = $110;
       break L1;
       break;
      }
      default: {
       $$0 = $first;
       break L1;
      }
      }
      break;
     }
     case 99:  {
      $111 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($12,18109,4);
      __THREW__ = 0;
      $112 = (invoke_iiiii(413,($111|0),($last|0),($12|0),($db|0))|0);
      $113 = __THREW__; __THREW__ = 0;
      $114 = $113&1;
      if ($114) {
       $116 = ___cxa_find_matching_catch()|0;
       $117 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($12);
       $$4 = $116;$$47 = $117;
       break L4;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($12);
       $115 = ($112|0)==($111|0);
       $first$8 = $115 ? $first : $112;
       $$0 = $first$8;
       break L1;
      }
      break;
     }
     case 97:  {
      $118 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($13,18114,11);
      __THREW__ = 0;
      $119 = (invoke_iiiii(413,($118|0),($last|0),($13|0),($db|0))|0);
      $120 = __THREW__; __THREW__ = 0;
      $121 = $120&1;
      if ($121) {
       $123 = ___cxa_find_matching_catch()|0;
       $124 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($13);
       $$4 = $123;$$47 = $124;
       break L4;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($13);
       $122 = ($119|0)==($118|0);
       $first$9 = $122 ? $first : $119;
       $$0 = $first$9;
       break L1;
      }
      break;
     }
     case 104:  {
      $125 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($14,18126,13);
      __THREW__ = 0;
      $126 = (invoke_iiiii(413,($125|0),($last|0),($14|0),($db|0))|0);
      $127 = __THREW__; __THREW__ = 0;
      $128 = $127&1;
      if ($128) {
       $130 = ___cxa_find_matching_catch()|0;
       $131 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($14);
       $$4 = $130;$$47 = $131;
       break L4;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($14);
       $129 = ($126|0)==($125|0);
       $first$10 = $129 ? $first : $126;
       $$0 = $first$10;
       break L1;
      }
      break;
     }
     case 115:  {
      $132 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($15,18140,5);
      __THREW__ = 0;
      $133 = (invoke_iiiii(413,($132|0),($last|0),($15|0),($db|0))|0);
      $134 = __THREW__; __THREW__ = 0;
      $135 = $134&1;
      if ($135) {
       $137 = ___cxa_find_matching_catch()|0;
       $138 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($15);
       $$4 = $137;$$47 = $138;
       break L4;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($15);
       $136 = ($133|0)==($132|0);
       $first$11 = $136 ? $first : $133;
       $$0 = $first$11;
       break L1;
      }
      break;
     }
     case 116:  {
      $139 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($16,18146,14);
      __THREW__ = 0;
      $140 = (invoke_iiiii(413,($139|0),($last|0),($16|0),($db|0))|0);
      $141 = __THREW__; __THREW__ = 0;
      $142 = $141&1;
      if ($142) {
       $144 = ___cxa_find_matching_catch()|0;
       $145 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($16);
       $$4 = $144;$$47 = $145;
       break L4;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($16);
       $143 = ($140|0)==($139|0);
       $first$12 = $143 ? $first : $140;
       $$0 = $first$12;
       break L1;
      }
      break;
     }
     case 105:  {
      $146 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($17,26019,0);
      __THREW__ = 0;
      $147 = (invoke_iiiii(413,($146|0),($last|0),($17|0),($db|0))|0);
      $148 = __THREW__; __THREW__ = 0;
      $149 = $148&1;
      if ($149) {
       $151 = ___cxa_find_matching_catch()|0;
       $152 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($17);
       $$4 = $151;$$47 = $152;
       break L4;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($17);
       $150 = ($147|0)==($146|0);
       $first$13 = $150 ? $first : $147;
       $$0 = $first$13;
       break L1;
      }
      break;
     }
     case 106:  {
      $153 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($18,18161,1);
      __THREW__ = 0;
      $154 = (invoke_iiiii(413,($153|0),($last|0),($18|0),($db|0))|0);
      $155 = __THREW__; __THREW__ = 0;
      $156 = $155&1;
      if ($156) {
       $158 = ___cxa_find_matching_catch()|0;
       $159 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($18);
       $$4 = $158;$$47 = $159;
       break L4;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($18);
       $157 = ($154|0)==($153|0);
       $first$14 = $157 ? $first : $154;
       $$0 = $first$14;
       break L1;
      }
      break;
     }
     case 108:  {
      $160 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($19,26014,1);
      __THREW__ = 0;
      $161 = (invoke_iiiii(413,($160|0),($last|0),($19|0),($db|0))|0);
      $162 = __THREW__; __THREW__ = 0;
      $163 = $162&1;
      if ($163) {
       $165 = ___cxa_find_matching_catch()|0;
       $166 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($19);
       $$4 = $165;$$47 = $166;
       break L4;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($19);
       $164 = ($161|0)==($160|0);
       $first$15 = $164 ? $first : $161;
       $$0 = $first$15;
       break L1;
      }
      break;
     }
     case 109:  {
      $167 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($20,18163,2);
      __THREW__ = 0;
      $168 = (invoke_iiiii(413,($167|0),($last|0),($20|0),($db|0))|0);
      $169 = __THREW__; __THREW__ = 0;
      $170 = $169&1;
      if ($170) {
       $172 = ___cxa_find_matching_catch()|0;
       $173 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($20);
       $$4 = $172;$$47 = $173;
       break L4;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($20);
       $171 = ($168|0)==($167|0);
       $first$16 = $171 ? $first : $168;
       $$0 = $first$16;
       break L1;
      }
      break;
     }
     case 120:  {
      $174 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($21,26016,2);
      __THREW__ = 0;
      $175 = (invoke_iiiii(413,($174|0),($last|0),($21|0),($db|0))|0);
      $176 = __THREW__; __THREW__ = 0;
      $177 = $176&1;
      if ($177) {
       $179 = ___cxa_find_matching_catch()|0;
       $180 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($21);
       $$4 = $179;$$47 = $180;
       break L4;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($21);
       $178 = ($175|0)==($174|0);
       $first$17 = $178 ? $first : $175;
       $$0 = $first$17;
       break L1;
      }
      break;
     }
     case 121:  {
      $181 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($22,18166,3);
      __THREW__ = 0;
      $182 = (invoke_iiiii(413,($181|0),($last|0),($22|0),($db|0))|0);
      $183 = __THREW__; __THREW__ = 0;
      $184 = $183&1;
      if ($184) {
       $186 = ___cxa_find_matching_catch()|0;
       $187 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($22);
       $$4 = $186;$$47 = $187;
       break L4;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($22);
       $185 = ($182|0)==($181|0);
       $first$18 = $185 ? $first : $182;
       $$0 = $first$18;
       break L1;
      }
      break;
     }
     case 110:  {
      $188 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($23,18170,8);
      __THREW__ = 0;
      $189 = (invoke_iiiii(413,($188|0),($last|0),($23|0),($db|0))|0);
      $190 = __THREW__; __THREW__ = 0;
      $191 = $190&1;
      if ($191) {
       $193 = ___cxa_find_matching_catch()|0;
       $194 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($23);
       $$4 = $193;$$47 = $194;
       break L4;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($23);
       $192 = ($189|0)==($188|0);
       $first$19 = $192 ? $first : $189;
       $$0 = $first$19;
       break L1;
      }
      break;
     }
     case 111:  {
      $195 = ((($first)) + 2|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($24,18179,17);
      __THREW__ = 0;
      $196 = (invoke_iiiii(413,($195|0),($last|0),($24|0),($db|0))|0);
      $197 = __THREW__; __THREW__ = 0;
      $198 = $197&1;
      if ($198) {
       $200 = ___cxa_find_matching_catch()|0;
       $201 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($24);
       $$4 = $200;$$47 = $201;
       break L4;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($24);
       $199 = ($196|0)==($195|0);
       $first$20 = $199 ? $first : $196;
       $$0 = $first$20;
       break L1;
      }
      break;
     }
     case 102:  {
      $202 = ((($first)) + 2|0);
      $203 = $202;
      $204 = (($31) - ($203))|0;
      $205 = ($204>>>0)>(8);
      L121: do {
       if ($205) {
        $206 = ((($first)) + 10|0);
        $207 = HEAP8[$202>>0]|0;
        $209 = $207;$216 = $first;$e$0$i124 = $6;$t$0$i125 = $202;
        while(1) {
         $208 = $209 << 24 >> 24;
         $210 = (_isxdigit($208)|0);
         $211 = ($210|0)==(0);
         if ($211) {
          $$0$i = $202;
          break L121;
         }
         $212 = HEAP8[$t$0$i125>>0]|0;
         $213 = $212 << 24 >> 24;
         $isdigittmp$i = (($213) + -48)|0;
         $isdigit$i = ($isdigittmp$i>>>0)<(10);
         $$v$i = $isdigit$i ? 0 : 9;
         $214 = (($$v$i) + ($213))|0;
         $215 = ((($216)) + 3|0);
         $217 = HEAP8[$215>>0]|0;
         $218 = $217 << 24 >> 24;
         $isdigittmp2$i = (($218) + -48)|0;
         $isdigit3$i = ($isdigittmp2$i>>>0)<(10);
         $219 = $217&255;
         $$v4$i = $isdigit3$i ? 208 : 169;
         $220 = (($$v4$i) + ($219))|0;
         $221 = $214 << 4;
         $222 = (($220) + ($221))|0;
         $223 = $222&255;
         HEAP8[$e$0$i124>>0] = $223;
         $224 = ((($t$0$i125)) + 2|0);
         $225 = ((($e$0$i124)) + 1|0);
         $226 = ($224|0)==($206|0);
         $227 = HEAP8[$224>>0]|0;
         if ($226) {
          $$lcssa154 = $225;$$lcssa155 = $227;$e$0$i124$lcssa153 = $e$0$i124;
          break;
         } else {
          $216$phi = $t$0$i125;$209 = $227;$e$0$i124 = $225;$t$0$i125 = $224;$216 = $216$phi;
         }
        }
        $228 = ($$lcssa155<<24>>24)==(69);
        if ($228) {
         $229 = ($6|0)!=($$lcssa154|0);
         $230 = ($6>>>0)<($e$0$i124$lcssa153>>>0);
         $or$cond134 = $229 & $230;
         if ($or$cond134) {
          $$01$i$i$i122 = $6;$233 = $e$0$i124$lcssa153;
          while(1) {
           $231 = HEAP8[$$01$i$i$i122>>0]|0;
           $232 = HEAP8[$233>>0]|0;
           HEAP8[$$01$i$i$i122>>0] = $232;
           HEAP8[$233>>0] = $231;
           $234 = ((($$01$i$i$i122)) + 1|0);
           $235 = ((($233)) + -1|0);
           $236 = ($234>>>0)<($235>>>0);
           if ($236) {
            $$01$i$i$i122 = $234;$233 = $235;
           } else {
            break;
           }
          }
         }
         dest=$num$i; stop=dest+24|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
         $237 = +HEAPF32[$6>>2];
         $238 = $237;
         HEAPF64[$vararg_buffer>>3] = $238;
         $239 = (_snprintf($num$i,24,18197,$vararg_buffer)|0);
         $240 = ($239>>>0)>(23);
         if ($240) {
          $$0$i = $202;
         } else {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($8,$num$i,$239);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($7,$8);
          $241 = ((($db)) + 4|0);
          $242 = HEAP32[$241>>2]|0;
          $243 = ((($db)) + 8|0);
          $244 = HEAP32[$243>>2]|0;
          $245 = ($242>>>0)<($244>>>0);
          if ($245) {
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($242,$7);
           $246 = HEAP32[$241>>2]|0;
           $247 = ((($246)) + 24|0);
           HEAP32[$241>>2] = $247;
          } else {
           $248 = ((($db)) + 12|0);
           $249 = HEAP32[$db>>2]|0;
           $250 = $242;
           $251 = $249;
           $252 = (($250) - ($251))|0;
           $253 = (($252|0) / 24)&-1;
           $254 = (($253) + 1)|0;
           $255 = ($252|0)<(-24);
           if ($255) {
            __THREW__ = 0;
            invoke_vi(402,($db|0));
            $256 = __THREW__; __THREW__ = 0;
            $257 = ___cxa_find_matching_catch()|0;
            $258 = tempRet0;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($7);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
            ___resumeException($257|0);
            // unreachable;
           }
           $259 = $244;
           $260 = (($259) - ($251))|0;
           $261 = (($260|0) / 24)&-1;
           $262 = ($261>>>0)<(1073741823);
           if ($262) {
            $263 = $261 << 1;
            $264 = ($263>>>0)<($254>>>0);
            $265 = $264 ? $254 : $263;
            $$0$i$i$i$i = $265;
           } else {
            $$0$i$i$i$i = 2147483647;
           }
           __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i$i,$$0$i$i$i$i,$253,$248);
           $266 = ((($__v$i$i$i)) + 8|0);
           $267 = HEAP32[$266>>2]|0;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($267,$7);
           $268 = ((($267)) + 24|0);
           HEAP32[$266>>2] = $268;
           __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i$i);
           __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i$i);
          }
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($7);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
          $269 = ((($first)) + 11|0);
          $$0$i = $269;
         }
        } else {
         $$0$i = $202;
        }
       } else {
        $$0$i = $202;
       }
      } while(0);
      $270 = ($$0$i|0)==($202|0);
      $first$21 = $270 ? $first : $$0$i;
      $$0 = $first$21;
      break L1;
      break;
     }
     case 100:  {
      $271 = ((($first)) + 2|0);
      $272 = $271;
      $273 = (($31) - ($272))|0;
      $274 = ($273>>>0)>(16);
      L145: do {
       if ($274) {
        $275 = ((($first)) + 18|0);
        $276 = HEAP8[$271>>0]|0;
        $278 = $276;$285 = $first;$e$0$i33128 = $3;$t$0$i34129 = $271;
        while(1) {
         $277 = $278 << 24 >> 24;
         $279 = (_isxdigit($277)|0);
         $280 = ($279|0)==(0);
         if ($280) {
          $$0$i49 = $271;
          break L145;
         }
         $281 = HEAP8[$t$0$i34129>>0]|0;
         $282 = $281 << 24 >> 24;
         $isdigittmp$i35 = (($282) + -48)|0;
         $isdigit$i36 = ($isdigittmp$i35>>>0)<(10);
         $$v$i37 = $isdigit$i36 ? 0 : 9;
         $283 = (($$v$i37) + ($282))|0;
         $284 = ((($285)) + 3|0);
         $286 = HEAP8[$284>>0]|0;
         $287 = $286 << 24 >> 24;
         $isdigittmp2$i38 = (($287) + -48)|0;
         $isdigit3$i39 = ($isdigittmp2$i38>>>0)<(10);
         $288 = $286&255;
         $$v4$i40 = $isdigit3$i39 ? 208 : 169;
         $289 = (($$v4$i40) + ($288))|0;
         $290 = $283 << 4;
         $291 = (($289) + ($290))|0;
         $292 = $291&255;
         HEAP8[$e$0$i33128>>0] = $292;
         $293 = ((($t$0$i34129)) + 2|0);
         $294 = ((($e$0$i33128)) + 1|0);
         $295 = ($293|0)==($275|0);
         $296 = HEAP8[$293>>0]|0;
         if ($295) {
          $$lcssa157 = $294;$$lcssa158 = $296;$e$0$i33128$lcssa156 = $e$0$i33128;
          break;
         } else {
          $285$phi = $t$0$i34129;$278 = $296;$e$0$i33128 = $294;$t$0$i34129 = $293;$285 = $285$phi;
         }
        }
        $297 = ($$lcssa158<<24>>24)==(69);
        if ($297) {
         $298 = ($3|0)!=($$lcssa157|0);
         $299 = ($3>>>0)<($e$0$i33128$lcssa156>>>0);
         $or$cond135 = $298 & $299;
         if ($or$cond135) {
          $$01$i$i$i41126 = $3;$302 = $e$0$i33128$lcssa156;
          while(1) {
           $300 = HEAP8[$$01$i$i$i41126>>0]|0;
           $301 = HEAP8[$302>>0]|0;
           HEAP8[$$01$i$i$i41126>>0] = $301;
           HEAP8[$302>>0] = $300;
           $303 = ((($$01$i$i$i41126)) + 1|0);
           $304 = ((($302)) + -1|0);
           $305 = ($303>>>0)<($304>>>0);
           if ($305) {
            $$01$i$i$i41126 = $303;$302 = $304;
           } else {
            break;
           }
          }
         }
         dest=$num$i32; stop=dest+32|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
         $306 = +HEAPF64[$3>>3];
         HEAPF64[$vararg_buffer1>>3] = $306;
         $307 = (_snprintf($num$i32,32,18201,$vararg_buffer1)|0);
         $308 = ($307>>>0)>(31);
         if ($308) {
          $$0$i49 = $271;
         } else {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($5,$num$i32,$307);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($4,$5);
          $309 = ((($db)) + 4|0);
          $310 = HEAP32[$309>>2]|0;
          $311 = ((($db)) + 8|0);
          $312 = HEAP32[$311>>2]|0;
          $313 = ($310>>>0)<($312>>>0);
          if ($313) {
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($310,$4);
           $314 = HEAP32[$309>>2]|0;
           $315 = ((($314)) + 24|0);
           HEAP32[$309>>2] = $315;
          } else {
           $316 = ((($db)) + 12|0);
           $317 = HEAP32[$db>>2]|0;
           $318 = $310;
           $319 = $317;
           $320 = (($318) - ($319))|0;
           $321 = (($320|0) / 24)&-1;
           $322 = (($321) + 1)|0;
           $323 = ($320|0)<(-24);
           if ($323) {
            __THREW__ = 0;
            invoke_vi(402,($db|0));
            $324 = __THREW__; __THREW__ = 0;
            $325 = ___cxa_find_matching_catch()|0;
            $326 = tempRet0;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
            ___resumeException($325|0);
            // unreachable;
           }
           $327 = $312;
           $328 = (($327) - ($319))|0;
           $329 = (($328|0) / 24)&-1;
           $330 = ($329>>>0)<(1073741823);
           if ($330) {
            $331 = $329 << 1;
            $332 = ($331>>>0)<($322>>>0);
            $333 = $332 ? $322 : $331;
            $$0$i$i$i$i46 = $333;
           } else {
            $$0$i$i$i$i46 = 2147483647;
           }
           __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i$i31,$$0$i$i$i$i46,$321,$316);
           $334 = ((($__v$i$i$i31)) + 8|0);
           $335 = HEAP32[$334>>2]|0;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($335,$4);
           $336 = ((($335)) + 24|0);
           HEAP32[$334>>2] = $336;
           __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i$i31);
           __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i$i31);
          }
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
          $337 = ((($first)) + 19|0);
          $$0$i49 = $337;
         }
        } else {
         $$0$i49 = $271;
        }
       } else {
        $$0$i49 = $271;
       }
      } while(0);
      $338 = ($$0$i49|0)==($271|0);
      $first$22 = $338 ? $first : $$0$i49;
      $$0 = $first$22;
      break L1;
      break;
     }
     case 101:  {
      $339 = ((($first)) + 2|0);
      $340 = $339;
      $341 = (($31) - ($340))|0;
      $342 = ($341>>>0)>(20);
      L169: do {
       if ($342) {
        $343 = ((($first)) + 22|0);
        $344 = HEAP8[$339>>0]|0;
        $346 = $344;$353 = $first;$e$0$i52132 = $0;$t$0$i53133 = $339;
        while(1) {
         $345 = $346 << 24 >> 24;
         $347 = (_isxdigit($345)|0);
         $348 = ($347|0)==(0);
         if ($348) {
          $$1$i = $339;
          break L169;
         }
         $349 = HEAP8[$t$0$i53133>>0]|0;
         $350 = $349 << 24 >> 24;
         $isdigittmp$i54 = (($350) + -48)|0;
         $isdigit$i55 = ($isdigittmp$i54>>>0)<(10);
         $$v$i56 = $isdigit$i55 ? 0 : 9;
         $351 = (($$v$i56) + ($350))|0;
         $352 = ((($353)) + 3|0);
         $354 = HEAP8[$352>>0]|0;
         $355 = $354 << 24 >> 24;
         $isdigittmp4$i = (($355) + -48)|0;
         $isdigit5$i = ($isdigittmp4$i>>>0)<(10);
         $356 = $354&255;
         $$v6$i = $isdigit5$i ? 208 : 169;
         $357 = (($$v6$i) + ($356))|0;
         $358 = $351 << 4;
         $359 = (($357) + ($358))|0;
         $360 = $359&255;
         HEAP8[$e$0$i52132>>0] = $360;
         $361 = ((($t$0$i53133)) + 2|0);
         $362 = ((($e$0$i52132)) + 1|0);
         $363 = ($361|0)==($343|0);
         $364 = HEAP8[$361>>0]|0;
         if ($363) {
          $$lcssa160 = $362;$$lcssa161 = $364;$e$0$i52132$lcssa159 = $e$0$i52132;
          break;
         } else {
          $353$phi = $t$0$i53133;$346 = $364;$e$0$i52132 = $362;$t$0$i53133 = $361;$353 = $353$phi;
         }
        }
        $365 = ($$lcssa161<<24>>24)==(69);
        if ($365) {
         $366 = ($0|0)!=($$lcssa160|0);
         $367 = ($0>>>0)<($e$0$i52132$lcssa159>>>0);
         $or$cond136 = $366 & $367;
         if ($or$cond136) {
          $$01$i$i$i57130 = $0;$370 = $e$0$i52132$lcssa159;
          while(1) {
           $368 = HEAP8[$$01$i$i$i57130>>0]|0;
           $369 = HEAP8[$370>>0]|0;
           HEAP8[$$01$i$i$i57130>>0] = $369;
           HEAP8[$370>>0] = $368;
           $371 = ((($$01$i$i$i57130)) + 1|0);
           $372 = ((($370)) + -1|0);
           $373 = ($371>>>0)<($372>>>0);
           if ($373) {
            $$01$i$i$i57130 = $371;$370 = $372;
           } else {
            break;
           }
          }
         }
         dest=$num$i51; stop=dest+40|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
         $374 = +HEAPF64[$0>>3];
         HEAPF64[$vararg_buffer4>>3] = $374;
         $375 = (_snprintf($num$i51,40,18204,$vararg_buffer4)|0);
         $376 = ($375>>>0)>(39);
         if ($376) {
          $$1$i = $339;
          break;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($2,$num$i51,$375);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($1,$2);
         $377 = ((($db)) + 4|0);
         $378 = HEAP32[$377>>2]|0;
         $379 = ((($db)) + 8|0);
         $380 = HEAP32[$379>>2]|0;
         $381 = ($378>>>0)<($380>>>0);
         if ($381) {
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($378,$1);
          $382 = HEAP32[$377>>2]|0;
          $383 = ((($382)) + 24|0);
          HEAP32[$377>>2] = $383;
         } else {
          $384 = ((($db)) + 12|0);
          $385 = HEAP32[$db>>2]|0;
          $386 = $378;
          $387 = $385;
          $388 = (($386) - ($387))|0;
          $389 = (($388|0) / 24)&-1;
          $390 = (($389) + 1)|0;
          $391 = ($388|0)<(-24);
          if ($391) {
           __THREW__ = 0;
           invoke_vi(402,($db|0));
           $392 = __THREW__; __THREW__ = 0;
           $393 = ___cxa_find_matching_catch()|0;
           $394 = tempRet0;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
           ___resumeException($393|0);
           // unreachable;
          }
          $395 = $380;
          $396 = (($395) - ($387))|0;
          $397 = (($396|0) / 24)&-1;
          $398 = ($397>>>0)<(1073741823);
          if ($398) {
           $399 = $397 << 1;
           $400 = ($399>>>0)<($390>>>0);
           $401 = $400 ? $390 : $399;
           $$0$i$i$i$i62 = $401;
          } else {
           $$0$i$i$i$i62 = 2147483647;
          }
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i$i50,$$0$i$i$i$i62,$389,$384);
          $402 = ((($__v$i$i$i50)) + 8|0);
          $403 = HEAP32[$402>>2]|0;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($403,$1);
          $404 = ((($403)) + 24|0);
          HEAP32[$402>>2] = $404;
          __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i$i50);
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i$i50);
         }
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
         $405 = ((($first)) + 23|0);
         $$1$i = $405;
        } else {
         $$1$i = $339;
        }
       } else {
        $$1$i = $339;
       }
      } while(0);
      $406 = ($$1$i|0)==($339|0);
      $first$23 = $406 ? $first : $$1$i;
      $$0 = $first$23;
      break L1;
      break;
     }
     case 95:  {
      $407 = ((($first)) + 2|0);
      $408 = HEAP8[$407>>0]|0;
      $409 = ($408<<24>>24)==(90);
      if (!($409)) {
       $$0 = $first;
       break L1;
      }
      $410 = ((($first)) + 3|0);
      $411 = (__ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($410,$last,$db)|0);
      $412 = ($411|0)==($410|0);
      $413 = ($411|0)==($last|0);
      $or$cond = $412 | $413;
      if ($or$cond) {
       $$0 = $first;
       break L1;
      }
      $414 = HEAP8[$411>>0]|0;
      $415 = ($414<<24>>24)==(69);
      $416 = ((($411)) + 1|0);
      $$first = $415 ? $416 : $first;
      STACKTOP = sp;return ($$first|0);
      break;
     }
     default: {
      $417 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($37,$last,$db)|0);
      $418 = ($417|0)==($37|0);
      $419 = ($417|0)==($last|0);
      $or$cond24 = $418 | $419;
      if ($or$cond24) {
       $$0 = $first;
       break L1;
      }
      $420 = HEAP8[$417>>0]|0;
      $421 = ($420<<24>>24)==(69);
      if ($421) {
       $490 = ((($417)) + 1|0);
       $$0 = $490;
       break L1;
      }
      $422 = ($417|0)==($last|0);
      if ($422) {
       $$0 = $first;
       break L1;
      } else {
       $n$0120 = $417;
      }
      while(1) {
       $423 = HEAP8[$n$0120>>0]|0;
       $424 = $423 << 24 >> 24;
       $isdigittmp = (($424) + -48)|0;
       $isdigit = ($isdigittmp>>>0)<(10);
       if (!($isdigit)) {
        $$lcssa = $423;$n$0120$lcssa = $n$0120;
        break;
       }
       $425 = ((($n$0120)) + 1|0);
       $426 = ($425|0)==($last|0);
       if ($426) {
        $$0 = $first;
        break L1;
       } else {
        $n$0120 = $425;
       }
      }
      $427 = ($n$0120$lcssa|0)!=($417|0);
      $428 = ($$lcssa<<24>>24)==(69);
      $or$cond104 = $427 & $428;
      if (!($or$cond104)) {
       $$0 = $first;
       break L1;
      }
      $429 = HEAP32[$db>>2]|0;
      $430 = ((($db)) + 4|0);
      $431 = HEAP32[$430>>2]|0;
      $432 = ($429|0)==($431|0);
      if ($432) {
       $$0 = $first;
       break L1;
      }
      $433 = ((($431)) + -24|0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($29,$433);
      __THREW__ = 0;
      $434 = (invoke_iiii(391,($29|0),0,(17051|0))|0);
      $435 = __THREW__; __THREW__ = 0;
      $436 = $435&1;
      if ($436) {
       $484 = ___cxa_find_matching_catch()|0;
       $485 = tempRet0;
       $$3 = $484;$$36 = $485;
      } else {
       ;HEAP32[$28>>2]=HEAP32[$434>>2]|0;HEAP32[$28+4>>2]=HEAP32[$434+4>>2]|0;HEAP32[$28+8>>2]=HEAP32[$434+8>>2]|0;
       HEAP32[$434>>2] = 0;
       $437 = ((($434)) + 4|0);
       HEAP32[$437>>2] = 0;
       $438 = ((($434)) + 8|0);
       HEAP32[$438>>2] = 0;
       __THREW__ = 0;
       $439 = (invoke_iii(392,($28|0),(16956|0))|0);
       $440 = __THREW__; __THREW__ = 0;
       $441 = $440&1;
       if ($441) {
        $486 = ___cxa_find_matching_catch()|0;
        $487 = tempRet0;
        $$2 = $486;$$25 = $487;
       } else {
        ;HEAP32[$27>>2]=HEAP32[$439>>2]|0;HEAP32[$27+4>>2]=HEAP32[$439+4>>2]|0;HEAP32[$27+8>>2]=HEAP32[$439+8>>2]|0;
        HEAP32[$439>>2] = 0;
        $442 = ((($439)) + 4|0);
        HEAP32[$442>>2] = 0;
        $443 = ((($439)) + 8|0);
        HEAP32[$443>>2] = 0;
        $444 = $417;
        $445 = $n$0120$lcssa;
        $446 = (($445) - ($444))|0;
        $447 = ($446>>>0)>(4294967279);
        do {
         if ($447) {
          __THREW__ = 0;
          invoke_vi(414,($30|0));
          $448 = __THREW__; __THREW__ = 0;
          $449 = ___cxa_find_matching_catch()|0;
          $450 = tempRet0;
          $$1 = $449;$$14 = $450;
         } else {
          $451 = ($446>>>0)<(11);
          if ($451) {
           $452 = $446 << 1;
           $453 = $452&255;
           HEAP8[$30>>0] = $453;
           $454 = ((($30)) + 1|0);
           $__p$0$ph$i$i = $454;
          } else {
           $455 = (($446) + 16)|0;
           $456 = $455 & -16;
           $457 = (_malloc($456)|0);
           $458 = ((($30)) + 8|0);
           HEAP32[$458>>2] = $457;
           $459 = $456 | 1;
           HEAP32[$30>>2] = $459;
           $460 = ((($30)) + 4|0);
           HEAP32[$460>>2] = $446;
           $__p$0$ph$i$i = $457;
          }
          $461 = ($417|0)==($n$0120$lcssa|0);
          if (!($461)) {
           $$0$i$i117 = $417;$__p$0$i$i116 = $__p$0$ph$i$i;
           while(1) {
            $462 = HEAP8[$$0$i$i117>>0]|0;
            HEAP8[$__p$0$i$i116>>0] = $462;
            $463 = ((($$0$i$i117)) + 1|0);
            $464 = ((($__p$0$i$i116)) + 1|0);
            $465 = ($463|0)==($n$0120$lcssa|0);
            if ($465) {
             break;
            } else {
             $$0$i$i117 = $463;$__p$0$i$i116 = $464;
            }
           }
          }
          $scevgep2$i$i = (($__p$0$ph$i$i) + ($446)|0);
          HEAP8[$scevgep2$i$i>>0] = 0;
          $466 = HEAP8[$30>>0]|0;
          $467 = $466 & 1;
          $468 = ($467<<24>>24)==(0);
          $469 = ((($30)) + 8|0);
          $470 = HEAP32[$469>>2]|0;
          $471 = ((($30)) + 1|0);
          $472 = $468 ? $471 : $470;
          $473 = ((($30)) + 4|0);
          $474 = HEAP32[$473>>2]|0;
          $475 = $466&255;
          $476 = $475 >>> 1;
          $477 = $468 ? $476 : $474;
          __THREW__ = 0;
          $478 = (invoke_iiii(387,($27|0),($472|0),($477|0))|0);
          $479 = __THREW__; __THREW__ = 0;
          $480 = $479&1;
          if ($480) {
           $488 = ___cxa_find_matching_catch()|0;
           $489 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($30);
           $$1 = $488;$$14 = $489;
           break;
          } else {
           ;HEAP32[$26>>2]=HEAP32[$478>>2]|0;HEAP32[$26+4>>2]=HEAP32[$478+4>>2]|0;HEAP32[$26+8>>2]=HEAP32[$478+8>>2]|0;
           HEAP32[$478>>2] = 0;
           $481 = ((($478)) + 4|0);
           HEAP32[$481>>2] = 0;
           $482 = ((($478)) + 8|0);
           HEAP32[$482>>2] = 0;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($25,$26);
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($433,$25);
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($25);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($26);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($30);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($27);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($28);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($29);
           $483 = ((($n$0120$lcssa)) + 1|0);
           $$0 = $483;
           break L1;
          }
         }
        } while(0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($27);
        $$2 = $$1;$$25 = $$14;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($28);
       $$3 = $$2;$$36 = $$25;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($29);
      $$4 = $$3;$$47 = $$36;
     }
     }
    } while(0);
    ___resumeException($$4|0);
    // unreachable;
   } else {
    $$0 = $first;
   }
  } else {
   $$0 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($first,$last,$lit,$db) {
 $first = $first|0;
 $last = $last|0;
 $lit = $lit|0;
 $db = $db|0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i5 = 0, $$01 = 0, $$02 = 0, $$1 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__v$i$i = 0, $__v$i$i4 = 0, $or$cond = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v$i$i4 = sp + 68|0;
 $__v$i$i = sp + 48|0;
 $0 = sp + 24|0;
 $1 = sp + 12|0;
 $2 = sp;
 $3 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($first,$last)|0);
 $4 = ($3|0)==($first|0);
 $5 = ($3|0)==($last|0);
 $or$cond = $4 | $5;
 if ($or$cond) {
  $$1 = $first;
 } else {
  $6 = HEAP8[$3>>0]|0;
  $7 = ($6<<24>>24)==(69);
  if ($7) {
   $8 = HEAP8[$lit>>0]|0;
   $9 = $8 & 1;
   $10 = ($9<<24>>24)==(0);
   $11 = ((($lit)) + 4|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = $8&255;
   $14 = $13 >>> 1;
   $15 = $10 ? $14 : $12;
   $16 = ($15>>>0)>(3);
   L4: do {
    if ($16) {
     __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($2,17051,$lit);
     __THREW__ = 0;
     $17 = (invoke_iii(392,($2|0),(16956|0))|0);
     $18 = __THREW__; __THREW__ = 0;
     $19 = $18&1;
     do {
      if ($19) {
       $50 = ___cxa_find_matching_catch()|0;
       $51 = tempRet0;
       $$0 = $51;$$01 = $50;
      } else {
       ;HEAP32[$1>>2]=HEAP32[$17>>2]|0;HEAP32[$1+4>>2]=HEAP32[$17+4>>2]|0;HEAP32[$1+8>>2]=HEAP32[$17+8>>2]|0;
       HEAP32[$17>>2] = 0;
       $20 = ((($17)) + 4|0);
       HEAP32[$20>>2] = 0;
       $21 = ((($17)) + 8|0);
       HEAP32[$21>>2] = 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($0,$1);
       $22 = ((($db)) + 4|0);
       $23 = HEAP32[$22>>2]|0;
       $24 = ((($db)) + 8|0);
       $25 = HEAP32[$24>>2]|0;
       $26 = ($23>>>0)<($25>>>0);
       if ($26) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($23,$0);
        $27 = HEAP32[$22>>2]|0;
        $28 = ((($27)) + 24|0);
        HEAP32[$22>>2] = $28;
       } else {
        $29 = ((($db)) + 12|0);
        $30 = HEAP32[$db>>2]|0;
        $31 = $23;
        $32 = $30;
        $33 = (($31) - ($32))|0;
        $34 = (($33|0) / 24)&-1;
        $35 = (($34) + 1)|0;
        $36 = ($33|0)<(-24);
        if ($36) {
         __THREW__ = 0;
         invoke_vi(402,($db|0));
         $37 = __THREW__; __THREW__ = 0;
         $38 = ___cxa_find_matching_catch()|0;
         $39 = tempRet0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
         $$0 = $39;$$01 = $38;
         break;
        }
        $40 = $25;
        $41 = (($40) - ($32))|0;
        $42 = (($41|0) / 24)&-1;
        $43 = ($42>>>0)<(1073741823);
        if ($43) {
         $44 = $42 << 1;
         $45 = ($44>>>0)<($35>>>0);
         $46 = $45 ? $35 : $44;
         $$0$i$i$i = $46;
        } else {
         $$0$i$i$i = 2147483647;
        }
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i,$$0$i$i$i,$34,$29);
        $47 = ((($__v$i$i)) + 8|0);
        $48 = HEAP32[$47>>2]|0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($48,$0);
        $49 = ((($48)) + 24|0);
        HEAP32[$47>>2] = $49;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i);
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i);
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
       break L4;
      }
     } while(0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
     ___resumeException($$01|0);
     // unreachable;
    } else {
     $52 = ((($db)) + 4|0);
     $53 = HEAP32[$52>>2]|0;
     $54 = ((($db)) + 8|0);
     $55 = HEAP32[$54>>2]|0;
     $56 = ($53>>>0)<($55>>>0);
     if ($56) {
      ;HEAP32[$53>>2]=0|0;HEAP32[$53+4>>2]=0|0;HEAP32[$53+8>>2]=0|0;HEAP32[$53+12>>2]=0|0;HEAP32[$53+16>>2]=0|0;HEAP32[$53+20>>2]=0|0;
      HEAP32[$53>>2] = 0;
      $57 = ((($53)) + 4|0);
      HEAP32[$57>>2] = 0;
      $58 = ((($53)) + 8|0);
      HEAP32[$58>>2] = 0;
      $59 = ((($53)) + 12|0);
      HEAP32[$59>>2] = 0;
      $60 = ((($59)) + 4|0);
      HEAP32[$60>>2] = 0;
      $61 = ((($59)) + 8|0);
      HEAP32[$61>>2] = 0;
      $62 = HEAP32[$52>>2]|0;
      $63 = ((($62)) + 24|0);
      HEAP32[$52>>2] = $63;
      break;
     }
     $64 = ((($db)) + 12|0);
     $65 = HEAP32[$db>>2]|0;
     $66 = $53;
     $67 = $65;
     $68 = (($66) - ($67))|0;
     $69 = (($68|0) / 24)&-1;
     $70 = (($69) + 1)|0;
     $71 = ($68|0)<(-24);
     if ($71) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      // unreachable;
     }
     $72 = $55;
     $73 = (($72) - ($67))|0;
     $74 = (($73|0) / 24)&-1;
     $75 = ($74>>>0)<(1073741823);
     if ($75) {
      $76 = $74 << 1;
      $77 = ($76>>>0)<($70>>>0);
      $78 = $77 ? $70 : $76;
      $$0$i$i$i5 = $78;
     } else {
      $$0$i$i$i5 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i4,$$0$i$i$i5,$69,$64);
     $79 = ((($__v$i$i4)) + 8|0);
     $80 = HEAP32[$79>>2]|0;
     ;HEAP32[$80>>2]=0|0;HEAP32[$80+4>>2]=0|0;HEAP32[$80+8>>2]=0|0;HEAP32[$80+12>>2]=0|0;HEAP32[$80+16>>2]=0|0;HEAP32[$80+20>>2]=0|0;
     HEAP32[$80>>2] = 0;
     $81 = ((($80)) + 4|0);
     HEAP32[$81>>2] = 0;
     $82 = ((($80)) + 8|0);
     HEAP32[$82>>2] = 0;
     $83 = ((($80)) + 12|0);
     HEAP32[$83>>2] = 0;
     $84 = ((($83)) + 4|0);
     HEAP32[$84>>2] = 0;
     $85 = ((($83)) + 8|0);
     HEAP32[$85>>2] = 0;
     $86 = ((($80)) + 24|0);
     HEAP32[$79>>2] = $86;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i4);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i4);
    }
   } while(0);
   $87 = HEAP8[$first>>0]|0;
   $88 = ($87<<24>>24)==(110);
   $89 = ((($db)) + 4|0);
   if ($88) {
    $90 = HEAP32[$89>>2]|0;
    $91 = ((($90)) + -24|0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($91,45);
    $92 = ((($first)) + 1|0);
    $$02 = $92;
   } else {
    $$02 = $first;
   }
   $93 = HEAP32[$89>>2]|0;
   $94 = ((($93)) + -24|0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS7_E4typeESC_SC_($94,$$02,$3);
   $95 = HEAP8[$lit>>0]|0;
   $96 = $95 & 1;
   $97 = ($96<<24>>24)==(0);
   $98 = HEAP32[$11>>2]|0;
   $99 = $95&255;
   $100 = $99 >>> 1;
   $101 = $97 ? $100 : $98;
   $102 = ($101>>>0)<(4);
   if ($102) {
    $103 = HEAP32[$89>>2]|0;
    $104 = ((($103)) + -24|0);
    $105 = ((($lit)) + 8|0);
    $106 = HEAP32[$105>>2]|0;
    $107 = ((($lit)) + 1|0);
    $108 = $97 ? $107 : $106;
    (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($104,$108,$101)|0);
   }
   $109 = ((($3)) + 1|0);
   $$1 = $109;
  } else {
   $$1 = $first;
  }
 }
 STACKTOP = sp;return ($$1|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj6EEERAT__Kc($this,$s) {
 $this = $this|0;
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$this>>0] = 10;
 $0 = ((($this)) + 1|0);
 ;HEAP8[$0>>0]=HEAP8[$s>>0]|0;HEAP8[$0+1>>0]=HEAP8[$s+1>>0]|0;HEAP8[$0+2>>0]=HEAP8[$s+2>>0]|0;HEAP8[$0+3>>0]=HEAP8[$s+3>>0]|0;HEAP8[$0+4>>0]=HEAP8[$s+4>>0]|0;
 $1 = ((($this)) + 6|0);
 HEAP8[$1>>0] = 0;
 $2 = ((($this)) + 12|0);
 HEAP32[$2>>2] = 0;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($2)) + 8|0);
 HEAP32[$4>>2] = 0;
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc($this,$s) {
 $this = $this|0;
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$this>>0] = 8;
 $0 = ((($this)) + 1|0);
 $1 = HEAPU8[$s>>0]|(HEAPU8[$s+1>>0]<<8)|(HEAPU8[$s+2>>0]<<16)|(HEAPU8[$s+3>>0]<<24);
 HEAP8[$0>>0]=$1&255;HEAP8[$0+1>>0]=($1>>8)&255;HEAP8[$0+2>>0]=($1>>16)&255;HEAP8[$0+3>>0]=$1>>24;
 $2 = ((($this)) + 5|0);
 HEAP8[$2>>0] = 0;
 $3 = ((($this)) + 12|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($3)) + 4|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($3)) + 8|0);
 HEAP32[$5>>2] = 0;
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8allocateEj($this,$n) {
 $this = $this|0;
 $n = $n|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($n) + 15)|0;
 $1 = $0 & -16;
 $2 = ((($this)) + 4096|0);
 $3 = ((($this)) + 4096|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $2;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<($1>>>0);
 if ($8) {
  $10 = (_malloc($1)|0);
  $$0 = $10;
 } else {
  $9 = (($4) + ($1)|0);
  HEAP32[$3>>2] = $9;
  $$0 = $4;
 }
 return ($$0|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_120parse_function_paramINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i18 = 0, $$0$i$i1027 = 0, $$0$i$i24 = 0, $$01 = 0, $$02 = 0, $$1 = 0, $$13 = 0, $$2 = 0, $$24 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__p$0$i$i23 = 0, $__p$0$i$i926 = 0, $__p$0$ph$i$i = 0, $__p$0$ph$i$i7 = 0, $__v$i$i = 0, $__v$i$i17 = 0, $cv = 0, $cv1 = 0;
 var $scevgep2$i$i = 0, $scevgep2$i$i11 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v$i$i17 = sp + 128|0;
 $__v$i$i = sp + 108|0;
 $cv = sp + 104|0;
 $0 = sp + 80|0;
 $1 = sp + 64|0;
 $2 = sp + 52|0;
 $cv1 = sp + 48|0;
 $3 = sp + 24|0;
 $4 = sp + 12|0;
 $5 = sp;
 $6 = $last;
 $7 = $first;
 $8 = (($6) - ($7))|0;
 $9 = ($8|0)>(2);
 L1: do {
  if ($9) {
   $10 = HEAP8[$first>>0]|0;
   $11 = ($10<<24>>24)==(102);
   if ($11) {
    $12 = ((($first)) + 1|0);
    $13 = HEAP8[$12>>0]|0;
    switch ($13<<24>>24) {
    case 112:  {
     $14 = ((($first)) + 2|0);
     $15 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($14,$last,$cv)|0);
     $16 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($15,$last)|0);
     $17 = ($16|0)==($last|0);
     if ($17) {
      $$0 = $first;
      break L1;
     }
     $18 = HEAP8[$16>>0]|0;
     $19 = ($18<<24>>24)==(95);
     if (!($19)) {
      $$0 = $first;
      break L1;
     }
     $20 = $15;
     $21 = $16;
     $22 = (($21) - ($20))|0;
     $23 = ($22>>>0)>(4294967279);
     if ($23) {
      __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($2);
      // unreachable;
     }
     $24 = ($22>>>0)<(11);
     if ($24) {
      $25 = $22 << 1;
      $26 = $25&255;
      HEAP8[$2>>0] = $26;
      $27 = ((($2)) + 1|0);
      $__p$0$ph$i$i = $27;
     } else {
      $28 = (($22) + 16)|0;
      $29 = $28 & -16;
      $30 = (_malloc($29)|0);
      $31 = ((($2)) + 8|0);
      HEAP32[$31>>2] = $30;
      $32 = $29 | 1;
      HEAP32[$2>>2] = $32;
      $33 = ((($2)) + 4|0);
      HEAP32[$33>>2] = $22;
      $__p$0$ph$i$i = $30;
     }
     $34 = ($15|0)==($16|0);
     if (!($34)) {
      $$0$i$i24 = $15;$__p$0$i$i23 = $__p$0$ph$i$i;
      while(1) {
       $35 = HEAP8[$$0$i$i24>>0]|0;
       HEAP8[$__p$0$i$i23>>0] = $35;
       $36 = ((($$0$i$i24)) + 1|0);
       $37 = ((($__p$0$i$i23)) + 1|0);
       $38 = ($36|0)==($16|0);
       if ($38) {
        break;
       } else {
        $$0$i$i24 = $36;$__p$0$i$i23 = $37;
       }
      }
     }
     $scevgep2$i$i = (($__p$0$ph$i$i) + ($22)|0);
     HEAP8[$scevgep2$i$i>>0] = 0;
     __THREW__ = 0;
     $39 = (invoke_iiii(391,($2|0),0,(18469|0))|0);
     $40 = __THREW__; __THREW__ = 0;
     $41 = $40&1;
     do {
      if ($41) {
       $73 = ___cxa_find_matching_catch()|0;
       $74 = tempRet0;
       $$01 = $73;$$02 = $74;
      } else {
       ;HEAP32[$1>>2]=HEAP32[$39>>2]|0;HEAP32[$1+4>>2]=HEAP32[$39+4>>2]|0;HEAP32[$1+8>>2]=HEAP32[$39+8>>2]|0;
       HEAP32[$39>>2] = 0;
       $42 = ((($39)) + 4|0);
       HEAP32[$42>>2] = 0;
       $43 = ((($39)) + 8|0);
       HEAP32[$43>>2] = 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($0,$1);
       $44 = ((($db)) + 4|0);
       $45 = HEAP32[$44>>2]|0;
       $46 = ((($db)) + 8|0);
       $47 = HEAP32[$46>>2]|0;
       $48 = ($45>>>0)<($47>>>0);
       if ($48) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($45,$0);
        $49 = HEAP32[$44>>2]|0;
        $50 = ((($49)) + 24|0);
        HEAP32[$44>>2] = $50;
       } else {
        $51 = ((($db)) + 12|0);
        $52 = HEAP32[$db>>2]|0;
        $53 = $45;
        $54 = $52;
        $55 = (($53) - ($54))|0;
        $56 = (($55|0) / 24)&-1;
        $57 = (($56) + 1)|0;
        $58 = ($55|0)<(-24);
        if ($58) {
         __THREW__ = 0;
         invoke_vi(402,($db|0));
         $59 = __THREW__; __THREW__ = 0;
         $60 = ___cxa_find_matching_catch()|0;
         $61 = tempRet0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
         $$01 = $60;$$02 = $61;
         break;
        }
        $62 = $47;
        $63 = (($62) - ($54))|0;
        $64 = (($63|0) / 24)&-1;
        $65 = ($64>>>0)<(1073741823);
        if ($65) {
         $66 = $64 << 1;
         $67 = ($66>>>0)<($57>>>0);
         $68 = $67 ? $57 : $66;
         $$0$i$i$i = $68;
        } else {
         $$0$i$i$i = 2147483647;
        }
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i,$$0$i$i$i,$56,$51);
        $69 = ((($__v$i$i)) + 8|0);
        $70 = HEAP32[$69>>2]|0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($70,$0);
        $71 = ((($70)) + 24|0);
        HEAP32[$69>>2] = $71;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i);
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i);
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
       $72 = ((($16)) + 1|0);
       $$0 = $72;
       break L1;
      }
     } while(0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
     $$2 = $$01;$$24 = $$02;
     break;
    }
    case 76:  {
     $75 = ((($first)) + 2|0);
     $76 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($75,$last)|0);
     $77 = ($76|0)==($last|0);
     if ($77) {
      $$0 = $first;
      break L1;
     }
     $78 = HEAP8[$76>>0]|0;
     $79 = ($78<<24>>24)==(112);
     if (!($79)) {
      $$0 = $first;
      break L1;
     }
     $80 = ((($76)) + 1|0);
     $81 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($80,$last,$cv1)|0);
     $82 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($81,$last)|0);
     $83 = ($82|0)==($last|0);
     if ($83) {
      $$0 = $first;
      break L1;
     }
     $84 = HEAP8[$82>>0]|0;
     $85 = ($84<<24>>24)==(95);
     if (!($85)) {
      $$0 = $first;
      break L1;
     }
     $86 = $81;
     $87 = $82;
     $88 = (($87) - ($86))|0;
     $89 = ($88>>>0)>(4294967279);
     if ($89) {
      __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($5);
      // unreachable;
     }
     $90 = ($88>>>0)<(11);
     if ($90) {
      $91 = $88 << 1;
      $92 = $91&255;
      HEAP8[$5>>0] = $92;
      $93 = ((($5)) + 1|0);
      $__p$0$ph$i$i7 = $93;
     } else {
      $94 = (($88) + 16)|0;
      $95 = $94 & -16;
      $96 = (_malloc($95)|0);
      $97 = ((($5)) + 8|0);
      HEAP32[$97>>2] = $96;
      $98 = $95 | 1;
      HEAP32[$5>>2] = $98;
      $99 = ((($5)) + 4|0);
      HEAP32[$99>>2] = $88;
      $__p$0$ph$i$i7 = $96;
     }
     $100 = ($81|0)==($82|0);
     if (!($100)) {
      $$0$i$i1027 = $81;$__p$0$i$i926 = $__p$0$ph$i$i7;
      while(1) {
       $101 = HEAP8[$$0$i$i1027>>0]|0;
       HEAP8[$__p$0$i$i926>>0] = $101;
       $102 = ((($$0$i$i1027)) + 1|0);
       $103 = ((($__p$0$i$i926)) + 1|0);
       $104 = ($102|0)==($82|0);
       if ($104) {
        break;
       } else {
        $$0$i$i1027 = $102;$__p$0$i$i926 = $103;
       }
      }
     }
     $scevgep2$i$i11 = (($__p$0$ph$i$i7) + ($88)|0);
     HEAP8[$scevgep2$i$i11>>0] = 0;
     __THREW__ = 0;
     $105 = (invoke_iiii(391,($5|0),0,(18469|0))|0);
     $106 = __THREW__; __THREW__ = 0;
     $107 = $106&1;
     do {
      if ($107) {
       $139 = ___cxa_find_matching_catch()|0;
       $140 = tempRet0;
       $$1 = $139;$$13 = $140;
      } else {
       ;HEAP32[$4>>2]=HEAP32[$105>>2]|0;HEAP32[$4+4>>2]=HEAP32[$105+4>>2]|0;HEAP32[$4+8>>2]=HEAP32[$105+8>>2]|0;
       HEAP32[$105>>2] = 0;
       $108 = ((($105)) + 4|0);
       HEAP32[$108>>2] = 0;
       $109 = ((($105)) + 8|0);
       HEAP32[$109>>2] = 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3,$4);
       $110 = ((($db)) + 4|0);
       $111 = HEAP32[$110>>2]|0;
       $112 = ((($db)) + 8|0);
       $113 = HEAP32[$112>>2]|0;
       $114 = ($111>>>0)<($113>>>0);
       if ($114) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($111,$3);
        $115 = HEAP32[$110>>2]|0;
        $116 = ((($115)) + 24|0);
        HEAP32[$110>>2] = $116;
       } else {
        $117 = ((($db)) + 12|0);
        $118 = HEAP32[$db>>2]|0;
        $119 = $111;
        $120 = $118;
        $121 = (($119) - ($120))|0;
        $122 = (($121|0) / 24)&-1;
        $123 = (($122) + 1)|0;
        $124 = ($121|0)<(-24);
        if ($124) {
         __THREW__ = 0;
         invoke_vi(402,($db|0));
         $125 = __THREW__; __THREW__ = 0;
         $126 = ___cxa_find_matching_catch()|0;
         $127 = tempRet0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
         $$1 = $126;$$13 = $127;
         break;
        }
        $128 = $113;
        $129 = (($128) - ($120))|0;
        $130 = (($129|0) / 24)&-1;
        $131 = ($130>>>0)<(1073741823);
        if ($131) {
         $132 = $130 << 1;
         $133 = ($132>>>0)<($123>>>0);
         $134 = $133 ? $123 : $132;
         $$0$i$i$i18 = $134;
        } else {
         $$0$i$i$i18 = 2147483647;
        }
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i17,$$0$i$i$i18,$122,$117);
        $135 = ((($__v$i$i17)) + 8|0);
        $136 = HEAP32[$135>>2]|0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($136,$3);
        $137 = ((($136)) + 24|0);
        HEAP32[$135>>2] = $137;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i17);
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i17);
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
       $138 = ((($82)) + 1|0);
       $$0 = $138;
       break L1;
      }
     } while(0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
     $$2 = $$1;$$24 = $$13;
     break;
    }
    default: {
     $$0 = $first;
     break L1;
    }
    }
    ___resumeException($$2|0);
    // unreachable;
   } else {
    $$0 = $first;
   }
  } else {
   $$0 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($first,$last,$op,$db) {
 $first = $first|0;
 $last = $last|0;
 $op = $op|0;
 $db = $db|0;
 var $$$$i$i$i = 0, $$$$i$i$i28 = 0, $$$i$i$i = 0, $$$i$i$i27 = 0, $$0 = 0, $$01 = 0, $$02 = 0, $$1 = 0, $$13 = 0, $$2 = 0, $$24 = 0, $$3 = 0, $$35 = 0, $$4 = 0, $$46 = 0, $$5 = 0, $$57 = 0, $$6 = 0, $$68 = 0, $$pre$i = 0;
 var $$pre$i32 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $op1 = 0, $op2 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $op2 = sp + 84|0;
 $op1 = sp + 72|0;
 $0 = sp + 60|0;
 $1 = sp + 48|0;
 $2 = sp + 36|0;
 $3 = sp + 24|0;
 $4 = sp + 12|0;
 $5 = sp;
 $6 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
 $7 = ($6|0)==($first|0);
 L1: do {
  if ($7) {
   $$0 = $first;
  } else {
   $8 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($6,$last,$db)|0);
   $9 = ($8|0)==($6|0);
   $10 = ((($db)) + 4|0);
   $11 = HEAP32[$10>>2]|0;
   if ($9) {
    $153 = ((($11)) + -24|0);
    $155 = $11;
    while(1) {
     $154 = ((($155)) + -24|0);
     HEAP32[$10>>2] = $154;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($154);
     $$pre$i32 = HEAP32[$10>>2]|0;
     $156 = ($$pre$i32|0)==($153|0);
     if ($156) {
      $$0 = $first;
      break L1;
     } else {
      $155 = $$pre$i32;
     }
    }
   }
   $12 = HEAP32[$db>>2]|0;
   $13 = $11;
   $14 = $12;
   $15 = (($13) - ($14))|0;
   $16 = (($15|0) / 24)&-1;
   $17 = ($16>>>0)<(2);
   if ($17) {
    $$0 = $first;
   } else {
    $18 = ((($11)) + -24|0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($op2,$18);
    $19 = HEAP32[$10>>2]|0;
    $20 = ((($19)) + -24|0);
    $22 = $19;
    while(1) {
     $21 = ((($22)) + -24|0);
     HEAP32[$10>>2] = $21;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($21);
     $$pre$i = HEAP32[$10>>2]|0;
     $23 = ($$pre$i|0)==($20|0);
     if ($23) {
      break;
     } else {
      $22 = $$pre$i;
     }
    }
    $24 = ((($19)) + -48|0);
    __THREW__ = 0;
    invoke_vii(396,($op1|0),($24|0));
    $25 = __THREW__; __THREW__ = 0;
    $26 = $25&1;
    if ($26) {
     $57 = ___cxa_find_matching_catch()|0;
     $58 = tempRet0;
     $$6 = $58;$$68 = $57;
    } else {
     $27 = HEAP32[$10>>2]|0;
     $28 = ((($27)) + -24|0);
     $29 = HEAP8[$28>>0]|0;
     $30 = $29 & 1;
     $31 = ($30<<24>>24)==(0);
     if ($31) {
      $35 = ((($28)) + 1|0);
      HEAP8[$35>>0] = 0;
      HEAP8[$28>>0] = 0;
     } else {
      $32 = ((($27)) + -16|0);
      $33 = HEAP32[$32>>2]|0;
      HEAP8[$33>>0] = 0;
      $34 = ((($27)) + -20|0);
      HEAP32[$34>>2] = 0;
     }
     $36 = HEAP8[$op>>0]|0;
     $37 = $36 & 1;
     $38 = ($37<<24>>24)==(0);
     $39 = ((($op)) + 4|0);
     $40 = HEAP32[$39>>2]|0;
     $41 = $36&255;
     $42 = $41 >>> 1;
     $43 = $38 ? $42 : $40;
     $44 = ((($op)) + 8|0);
     $45 = HEAP32[$44>>2]|0;
     $46 = ((($op)) + 1|0);
     $47 = $38 ? $46 : $45;
     $48 = ($43>>>0)>(1);
     $49 = $48 ? 1 : $43;
     $50 = (_memcmp($47,17115,$49)|0);
     $51 = ($50|0)==(0);
     $52 = ($43|0)==(0);
     $$$i$i$i = $48&1;
     $$$$i$i$i = $52 ? -1 : $$$i$i$i;
     $53 = $51 ? $$$$i$i$i : $50;
     $54 = ($53|0)==(0);
     if ($54) {
      __THREW__ = 0;
      invoke_vii(398,($28|0),40);
      $55 = __THREW__; __THREW__ = 0;
      $56 = $55&1;
      if ($56) {
       label = 13;
      } else {
       label = 14;
      }
     } else {
      label = 14;
     }
     L21: do {
      if ((label|0) == 14) {
       __THREW__ = 0;
       invoke_viii(407,($5|0),(17051|0),($op1|0));
       $61 = __THREW__; __THREW__ = 0;
       $62 = $61&1;
       if ($62) {
        label = 13;
       } else {
        __THREW__ = 0;
        $63 = (invoke_iii(392,($5|0),(18327|0))|0);
        $64 = __THREW__; __THREW__ = 0;
        $65 = $64&1;
        if ($65) {
         $141 = ___cxa_find_matching_catch()|0;
         $142 = tempRet0;
         $$4 = $142;$$46 = $141;
        } else {
         ;HEAP32[$4>>2]=HEAP32[$63>>2]|0;HEAP32[$4+4>>2]=HEAP32[$63+4>>2]|0;HEAP32[$4+8>>2]=HEAP32[$63+8>>2]|0;
         HEAP32[$63>>2] = 0;
         $66 = ((($63)) + 4|0);
         HEAP32[$66>>2] = 0;
         $67 = ((($63)) + 8|0);
         HEAP32[$67>>2] = 0;
         $68 = HEAP8[$op>>0]|0;
         $69 = $68 & 1;
         $70 = ($69<<24>>24)==(0);
         $71 = HEAP32[$44>>2]|0;
         $72 = $70 ? $46 : $71;
         $73 = HEAP32[$39>>2]|0;
         $74 = $68&255;
         $75 = $74 >>> 1;
         $76 = $70 ? $75 : $73;
         __THREW__ = 0;
         $77 = (invoke_iiii(387,($4|0),($72|0),($76|0))|0);
         $78 = __THREW__; __THREW__ = 0;
         $79 = $78&1;
         if ($79) {
          $143 = ___cxa_find_matching_catch()|0;
          $144 = tempRet0;
          $$3 = $144;$$35 = $143;
         } else {
          ;HEAP32[$3>>2]=HEAP32[$77>>2]|0;HEAP32[$3+4>>2]=HEAP32[$77+4>>2]|0;HEAP32[$3+8>>2]=HEAP32[$77+8>>2]|0;
          HEAP32[$77>>2] = 0;
          $80 = ((($77)) + 4|0);
          HEAP32[$80>>2] = 0;
          $81 = ((($77)) + 8|0);
          HEAP32[$81>>2] = 0;
          __THREW__ = 0;
          $82 = (invoke_iii(392,($3|0),(16953|0))|0);
          $83 = __THREW__; __THREW__ = 0;
          $84 = $83&1;
          if ($84) {
           $145 = ___cxa_find_matching_catch()|0;
           $146 = tempRet0;
           $$2 = $146;$$24 = $145;
          } else {
           ;HEAP32[$2>>2]=HEAP32[$82>>2]|0;HEAP32[$2+4>>2]=HEAP32[$82+4>>2]|0;HEAP32[$2+8>>2]=HEAP32[$82+8>>2]|0;
           HEAP32[$82>>2] = 0;
           $85 = ((($82)) + 4|0);
           HEAP32[$85>>2] = 0;
           $86 = ((($82)) + 8|0);
           HEAP32[$86>>2] = 0;
           $87 = HEAP8[$op2>>0]|0;
           $88 = $87 & 1;
           $89 = ($88<<24>>24)==(0);
           $90 = ((($op2)) + 8|0);
           $91 = HEAP32[$90>>2]|0;
           $92 = ((($op2)) + 1|0);
           $93 = $89 ? $92 : $91;
           $94 = ((($op2)) + 4|0);
           $95 = HEAP32[$94>>2]|0;
           $96 = $87&255;
           $97 = $96 >>> 1;
           $98 = $89 ? $97 : $95;
           __THREW__ = 0;
           $99 = (invoke_iiii(387,($2|0),($93|0),($98|0))|0);
           $100 = __THREW__; __THREW__ = 0;
           $101 = $100&1;
           if ($101) {
            $147 = ___cxa_find_matching_catch()|0;
            $148 = tempRet0;
            $$1 = $148;$$13 = $147;
           } else {
            ;HEAP32[$1>>2]=HEAP32[$99>>2]|0;HEAP32[$1+4>>2]=HEAP32[$99+4>>2]|0;HEAP32[$1+8>>2]=HEAP32[$99+8>>2]|0;
            HEAP32[$99>>2] = 0;
            $102 = ((($99)) + 4|0);
            HEAP32[$102>>2] = 0;
            $103 = ((($99)) + 8|0);
            HEAP32[$103>>2] = 0;
            __THREW__ = 0;
            $104 = (invoke_iii(392,($1|0),(16956|0))|0);
            $105 = __THREW__; __THREW__ = 0;
            $106 = $105&1;
            do {
             if ($106) {
              $149 = ___cxa_find_matching_catch()|0;
              $150 = tempRet0;
              $$01 = $150;$$02 = $149;
             } else {
              ;HEAP32[$0>>2]=HEAP32[$104>>2]|0;HEAP32[$0+4>>2]=HEAP32[$104+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[$104+8>>2]|0;
              HEAP32[$104>>2] = 0;
              $107 = ((($104)) + 4|0);
              HEAP32[$107>>2] = 0;
              $108 = ((($104)) + 8|0);
              HEAP32[$108>>2] = 0;
              $109 = HEAP8[$0>>0]|0;
              $110 = $109 & 1;
              $111 = ($110<<24>>24)==(0);
              $112 = ((($0)) + 8|0);
              $113 = HEAP32[$112>>2]|0;
              $114 = ((($0)) + 1|0);
              $115 = $111 ? $114 : $113;
              $116 = ((($0)) + 4|0);
              $117 = HEAP32[$116>>2]|0;
              $118 = $109&255;
              $119 = $118 >>> 1;
              $120 = $111 ? $119 : $117;
              __THREW__ = 0;
              (invoke_iiii(387,($28|0),($115|0),($120|0))|0);
              $121 = __THREW__; __THREW__ = 0;
              $122 = $121&1;
              if ($122) {
               $151 = ___cxa_find_matching_catch()|0;
               $152 = tempRet0;
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
               $$01 = $152;$$02 = $151;
               break;
              }
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
              $123 = HEAP8[$op>>0]|0;
              $124 = $123 & 1;
              $125 = ($124<<24>>24)==(0);
              $126 = HEAP32[$39>>2]|0;
              $127 = $123&255;
              $128 = $127 >>> 1;
              $129 = $125 ? $128 : $126;
              $130 = HEAP32[$44>>2]|0;
              $131 = $125 ? $46 : $130;
              $132 = ($129>>>0)>(1);
              $133 = $132 ? 1 : $129;
              $134 = (_memcmp($131,17115,$133)|0);
              $135 = ($134|0)==(0);
              $136 = ($129|0)==(0);
              $$$i$i$i27 = $132&1;
              $$$$i$i$i28 = $136 ? -1 : $$$i$i$i27;
              $137 = $135 ? $$$$i$i$i28 : $134;
              $138 = ($137|0)==(0);
              if ($138) {
               __THREW__ = 0;
               invoke_vii(398,($28|0),41);
               $139 = __THREW__; __THREW__ = 0;
               $140 = $139&1;
               if ($140) {
                label = 13;
                break L21;
               }
              }
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op1);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op2);
              $$0 = $8;
              break L1;
             }
            } while(0);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
            $$1 = $$01;$$13 = $$02;
           }
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
           $$2 = $$1;$$24 = $$13;
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
          $$3 = $$2;$$35 = $$24;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
         $$4 = $$3;$$46 = $$35;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
        $$5 = $$4;$$57 = $$46;
       }
      }
     } while(0);
     if ((label|0) == 13) {
      $59 = ___cxa_find_matching_catch()|0;
      $60 = tempRet0;
      $$5 = $60;$$57 = $59;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op1);
     $$6 = $$5;$$68 = $$57;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op2);
    ___resumeException($$68|0);
    // unreachable;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($first,$last,$op,$db) {
 $first = $first|0;
 $last = $last|0;
 $op = $op|0;
 $db = $db|0;
 var $$04 = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $or$cond$i$i$i$i$i = 0, $phitmp$i$i$i$i$i$i = 0, $phitmp$i2$i$i$i$i$i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 36|0;
 $1 = sp + 24|0;
 $2 = sp + 12|0;
 $3 = sp;
 $4 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
 $5 = ($4|0)==($first|0);
 L1: do {
  if ($5) {
   $$04 = $first;
  } else {
   $6 = HEAP32[$db>>2]|0;
   $7 = ((($db)) + 4|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = ($6|0)==($8|0);
   if ($9) {
    $$04 = $first;
   } else {
    $10 = ((($8)) + -24|0);
    __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_($2,$op,17051);
    $11 = HEAP32[$7>>2]|0;
    $12 = ((($11)) + -24|0);
    __THREW__ = 0;
    invoke_vii(396,($3|0),($12|0));
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    if ($14) {
     $83 = ___cxa_find_matching_catch()|0;
     $84 = tempRet0;
     $$2 = $84;$$23 = $83;
    } else {
     $15 = HEAP8[$3>>0]|0;
     $16 = $15 & 1;
     $17 = ($16<<24>>24)==(0);
     $18 = ((($3)) + 8|0);
     $19 = HEAP32[$18>>2]|0;
     $20 = ((($3)) + 1|0);
     $21 = $17 ? $20 : $19;
     $22 = ((($3)) + 4|0);
     $23 = HEAP32[$22>>2]|0;
     $24 = $15&255;
     $25 = $24 >>> 1;
     $26 = $17 ? $25 : $23;
     __THREW__ = 0;
     $27 = (invoke_iiii(387,($2|0),($21|0),($26|0))|0);
     $28 = __THREW__; __THREW__ = 0;
     $29 = $28&1;
     do {
      if ($29) {
       $85 = ___cxa_find_matching_catch()|0;
       $86 = tempRet0;
       $$1 = $86;$$12 = $85;
      } else {
       ;HEAP32[$1>>2]=HEAP32[$27>>2]|0;HEAP32[$1+4>>2]=HEAP32[$27+4>>2]|0;HEAP32[$1+8>>2]=HEAP32[$27+8>>2]|0;
       HEAP32[$27>>2] = 0;
       $30 = ((($27)) + 4|0);
       HEAP32[$30>>2] = 0;
       $31 = ((($27)) + 8|0);
       HEAP32[$31>>2] = 0;
       __THREW__ = 0;
       $32 = (invoke_iii(392,($1|0),(16956|0))|0);
       $33 = __THREW__; __THREW__ = 0;
       $34 = $33&1;
       if ($34) {
        $87 = ___cxa_find_matching_catch()|0;
        $88 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
        $$1 = $88;$$12 = $87;
        break;
       }
       ;HEAP32[$0>>2]=HEAP32[$32>>2]|0;HEAP32[$0+4>>2]=HEAP32[$32+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[$32+8>>2]|0;
       HEAP32[$32>>2] = 0;
       $35 = ((($32)) + 4|0);
       HEAP32[$35>>2] = 0;
       $36 = ((($32)) + 8|0);
       HEAP32[$36>>2] = 0;
       $37 = HEAP8[$10>>0]|0;
       $38 = $37 & 1;
       $39 = ($38<<24>>24)==(0);
       do {
        if ($39) {
         $40 = ((($10)) + 1|0);
         HEAP8[$40>>0] = 0;
         HEAP8[$10>>0] = 0;
        } else {
         $41 = ((($8)) + -16|0);
         $42 = HEAP32[$41>>2]|0;
         HEAP8[$42>>0] = 0;
         $43 = ((($8)) + -20|0);
         HEAP32[$43>>2] = 0;
         $$pre$i$i$i = HEAP8[$10>>0]|0;
         $44 = $$pre$i$i$i & 1;
         $45 = ($44<<24>>24)==(0);
         if ($45) {
          $50 = $$pre$i$i$i;$59 = 10;
         } else {
          $46 = HEAP32[$10>>2]|0;
          $47 = $46 & -2;
          $phitmp$i$i$i$i$i$i = (($47) + -1)|0;
          $48 = $46&255;
          $50 = $48;$59 = $phitmp$i$i$i$i$i$i;
         }
         $49 = $50 & 1;
         $51 = ($49<<24>>24)==(0);
         if ($51) {
          $52 = $50&255;
          $53 = $52 >>> 1;
          $54 = ($50&255)<(22);
          if ($54) {
           $58 = 10;$78 = $53;$89 = 1;
          } else {
           $55 = (($53) + 16)|0;
           $56 = $55 & 240;
           $phitmp$i2$i$i$i$i$i = (($56) + -1)|0;
           $58 = $phitmp$i2$i$i$i$i$i;$78 = $53;$89 = 1;
          }
         } else {
          $58 = 10;$78 = 0;$89 = 0;
         }
         $57 = ($58|0)==($59|0);
         if (!($57)) {
          $60 = ($58|0)==(10);
          if ($60) {
           $65 = ((($10)) + 1|0);
           $66 = HEAP32[$41>>2]|0;
           if ($89) {
            $67 = $50&255;
            $68 = $67 >>> 1;
            $69 = (($68) + 1)|0;
            _memcpy(($65|0),($66|0),($69|0))|0;
            _free($66);
           } else {
            $74 = HEAP8[$66>>0]|0;
            HEAP8[$65>>0] = $74;
            _free($66);
           }
           $79 = $78 << 1;
           $80 = $79&255;
           HEAP8[$10>>0] = $80;
           break;
          }
          $61 = ($58>>>0)<=($59>>>0);
          $62 = (($58) + 1)|0;
          $63 = (_malloc($62)|0);
          $64 = ($63|0)==(0|0);
          $or$cond$i$i$i$i$i = $61 & $64;
          if (!($or$cond$i$i$i$i$i)) {
           if ($89) {
            $70 = ((($10)) + 1|0);
            $71 = $50&255;
            $72 = $71 >>> 1;
            $73 = (($72) + 1)|0;
            _memcpy(($63|0),($70|0),($73|0))|0;
           } else {
            $75 = HEAP32[$41>>2]|0;
            $76 = HEAP8[$75>>0]|0;
            HEAP8[$63>>0] = $76;
            _free($75);
           }
           $77 = $62 | 1;
           HEAP32[$10>>2] = $77;
           HEAP32[$43>>2] = $78;
           HEAP32[$41>>2] = $63;
          }
         }
        }
       } while(0);
       ;HEAP32[$10>>2]=HEAP32[$0>>2]|0;HEAP32[$10+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$10+8>>2]=HEAP32[$0+8>>2]|0;
       HEAP32[$0>>2] = 0;
       $81 = ((($0)) + 4|0);
       HEAP32[$81>>2] = 0;
       $82 = ((($0)) + 8|0);
       HEAP32[$82>>2] = 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
       $$04 = $4;
       break L1;
      }
     } while(0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$2 = $$1;$$23 = $$12;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
    ___resumeException($$23|0);
    // unreachable;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$04|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$01 = 0, $$02 = 0, $$1 = 0, $$13 = 0, $$19 = 0, $$2 = 0, $$24 = 0, $$3 = 0, $$35 = 0, $$4 = 0, $$46 = 0, $$5 = 0, $$57 = 0, $$first = 0, $$pre = 0, $$pre$i = 0, $$pre$i14 = 0, $$pre$i16 = 0, $$pre$i20 = 0, $$pre$i22 = 0;
 var $$pre$i30 = 0, $$pre$i34 = 0, $$pre$i36 = 0, $$pre$i44 = 0, $$pre$i52 = 0, $$pre$i54 = 0, $$pre$phi80Z2D = 0, $$pre$phi82Z2D = 0, $$pre$phi84Z2D = 0, $$pre81 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0;
 var $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0;
 var $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0;
 var $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0;
 var $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0;
 var $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0;
 var $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0;
 var $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0;
 var $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0;
 var $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $args = 0, $args3 = 0;
 var $global$0$off0 = 0, $or$cond = 0, $or$cond11 = 0, $or$cond12 = 0, $or$cond13 = 0, $s = 0, $s1 = 0, $s4 = 0, $s5 = 0, $s6 = 0, $t$0 = 0, $t$1$lcssa = 0, $t$1$ph = 0, $t$1107 = 0, $t$2 = 0, $t$3$lcssa = 0, $t$3110 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $args = sp + 132|0;
 $s = sp + 120|0;
 $0 = sp + 108|0;
 $s1 = sp + 96|0;
 $1 = sp + 84|0;
 $args3 = sp + 72|0;
 $s4 = sp + 60|0;
 $2 = sp + 48|0;
 $s5 = sp + 36|0;
 $3 = sp + 24|0;
 $s6 = sp + 12|0;
 $4 = sp;
 $5 = $last;
 $6 = $first;
 $7 = (($5) - ($6))|0;
 $8 = ($7|0)>(2);
 L1: do {
  if ($8) {
   $9 = HEAP8[$first>>0]|0;
   $10 = ($9<<24>>24)==(103);
   if ($10) {
    $11 = ((($first)) + 1|0);
    $12 = HEAP8[$11>>0]|0;
    $13 = ($12<<24>>24)==(115);
    $14 = ((($first)) + 2|0);
    $$first = $13 ? $14 : $first;
    $global$0$off0 = $13;$t$0 = $$first;
   } else {
    $global$0$off0 = 0;$t$0 = $first;
   }
   $15 = (__ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($t$0,$last,$db)|0);
   $16 = ($15|0)==($t$0|0);
   if (!($16)) {
    if (!($global$0$off0)) {
     $$19 = $15;
     break;
    }
    $17 = HEAP32[$db>>2]|0;
    $18 = ((($db)) + 4|0);
    $19 = HEAP32[$18>>2]|0;
    $20 = ($17|0)==($19|0);
    if ($20) {
     $$19 = $first;
     break;
    }
    $21 = ((($19)) + -24|0);
    (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($21,0,17239)|0);
    $$19 = $15;
    break;
   }
   $22 = $t$0;
   $23 = (($5) - ($22))|0;
   $24 = ($23|0)>(2);
   if ($24) {
    $25 = HEAP8[$t$0>>0]|0;
    $26 = ($25<<24>>24)==(115);
    if ($26) {
     $27 = ((($t$0)) + 1|0);
     $28 = HEAP8[$27>>0]|0;
     $29 = ($28<<24>>24)==(114);
     if ($29) {
      $30 = ((($t$0)) + 2|0);
      $31 = HEAP8[$30>>0]|0;
      $32 = ($31<<24>>24)==(78);
      L14: do {
       if ($32) {
        $33 = ((($t$0)) + 3|0);
        $34 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_($33,$last,$db)|0);
        $35 = ($34|0)==($33|0);
        $36 = ($34|0)==($last|0);
        $or$cond = $35 | $36;
        if ($or$cond) {
         $$19 = $first;
         break L1;
        }
        $37 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($34,$last,$db)|0);
        $38 = ($37|0)==($34|0);
        $$pre = ((($db)) + 4|0);
        do {
         if ($38) {
          $$pre$phi80Z2D = $db;$t$1$ph = $34;
         } else {
          $39 = HEAP32[$$pre>>2]|0;
          $40 = HEAP32[$db>>2]|0;
          $41 = $39;
          $42 = $40;
          $43 = (($41) - ($42))|0;
          $44 = (($43|0) / 24)&-1;
          $45 = ($44>>>0)<(2);
          if ($45) {
           $$19 = $first;
           break L1;
          }
          $46 = ((($39)) + -24|0);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($args,$46);
          $47 = HEAP32[$$pre>>2]|0;
          $48 = ((($47)) + -24|0);
          $50 = $47;
          while(1) {
           $49 = ((($50)) + -24|0);
           HEAP32[$$pre>>2] = $49;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($49);
           $$pre$i = HEAP32[$$pre>>2]|0;
           $51 = ($$pre$i|0)==($48|0);
           if ($51) {
            break;
           } else {
            $50 = $$pre$i;
           }
          }
          $52 = ((($47)) + -48|0);
          $53 = HEAP8[$args>>0]|0;
          $54 = $53 & 1;
          $55 = ($54<<24>>24)==(0);
          $56 = ((($args)) + 8|0);
          $57 = HEAP32[$56>>2]|0;
          $58 = ((($args)) + 1|0);
          $59 = $55 ? $58 : $57;
          $60 = ((($args)) + 4|0);
          $61 = HEAP32[$60>>2]|0;
          $62 = $53&255;
          $63 = $62 >>> 1;
          $64 = $55 ? $63 : $61;
          __THREW__ = 0;
          (invoke_iiii(387,($52|0),($59|0),($64|0))|0);
          $65 = __THREW__; __THREW__ = 0;
          $66 = $65&1;
          if ($66) {
           $73 = ___cxa_find_matching_catch()|0;
           $74 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
           $$5 = $74;$$57 = $73;
           break L14;
          }
          $67 = ($37|0)==($last|0);
          if (!($67)) {
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
           $$pre$phi80Z2D = $db;$t$1$ph = $37;
           break;
          }
          $68 = HEAP32[$$pre>>2]|0;
          $69 = ((($68)) + -24|0);
          $71 = $68;
          while(1) {
           $70 = ((($71)) + -24|0);
           HEAP32[$$pre>>2] = $70;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($70);
           $$pre$i14 = HEAP32[$$pre>>2]|0;
           $72 = ($$pre$i14|0)==($69|0);
           if ($72) {
            break;
           } else {
            $71 = $$pre$i14;
           }
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
          $$19 = $first;
          break L1;
         }
        } while(0);
        $75 = ((($0)) + 8|0);
        $76 = ((($0)) + 1|0);
        $77 = ((($0)) + 4|0);
        $78 = HEAP8[$t$1$ph>>0]|0;
        $79 = ($78<<24>>24)==(69);
        L34: do {
         if ($79) {
          $t$1$lcssa = $t$1$ph;
         } else {
          $t$1107 = $t$1$ph;
          while(1) {
           $80 = (__ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($t$1107,$last,$db)|0);
           $81 = ($80|0)==($t$1107|0);
           $82 = ($80|0)==($last|0);
           $or$cond11 = $81 | $82;
           if ($or$cond11) {
            $$19 = $first;
            break L1;
           }
           $83 = HEAP32[$$pre>>2]|0;
           $84 = HEAP32[$$pre$phi80Z2D>>2]|0;
           $85 = $83;
           $86 = $84;
           $87 = (($85) - ($86))|0;
           $88 = (($87|0) / 24)&-1;
           $89 = ($88>>>0)<(2);
           if ($89) {
            $$19 = $first;
            break L1;
           }
           $90 = ((($83)) + -24|0);
           __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($s,$90);
           $91 = HEAP32[$$pre>>2]|0;
           $92 = ((($91)) + -24|0);
           $94 = $91;
           while(1) {
            $93 = ((($94)) + -24|0);
            HEAP32[$$pre>>2] = $93;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($93);
            $$pre$i16 = HEAP32[$$pre>>2]|0;
            $95 = ($$pre$i16|0)==($92|0);
            if ($95) {
             break;
            } else {
             $94 = $$pre$i16;
            }
           }
           __THREW__ = 0;
           $96 = (invoke_iiii(391,($s|0),0,(17239|0))|0);
           $97 = __THREW__; __THREW__ = 0;
           $98 = $97&1;
           if ($98) {
            label = 33;
            break;
           }
           ;HEAP32[$0>>2]=HEAP32[$96>>2]|0;HEAP32[$0+4>>2]=HEAP32[$96+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[$96+8>>2]|0;
           HEAP32[$96>>2] = 0;
           $99 = ((($96)) + 4|0);
           HEAP32[$99>>2] = 0;
           $100 = ((($96)) + 8|0);
           HEAP32[$100>>2] = 0;
           $101 = ((($91)) + -48|0);
           $102 = HEAP8[$0>>0]|0;
           $103 = $102 & 1;
           $104 = ($103<<24>>24)==(0);
           $105 = HEAP32[$75>>2]|0;
           $106 = $104 ? $76 : $105;
           $107 = HEAP32[$77>>2]|0;
           $108 = $102&255;
           $109 = $108 >>> 1;
           $110 = $104 ? $109 : $107;
           __THREW__ = 0;
           (invoke_iiii(387,($101|0),($106|0),($110|0))|0);
           $111 = __THREW__; __THREW__ = 0;
           $112 = $111&1;
           if ($112) {
            label = 34;
            break;
           }
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($s);
           $113 = HEAP8[$80>>0]|0;
           $114 = ($113<<24>>24)==(69);
           if ($114) {
            $t$1$lcssa = $80;
            break L34;
           } else {
            $t$1107 = $80;
           }
          }
          if ((label|0) == 33) {
           $115 = ___cxa_find_matching_catch()|0;
           $116 = tempRet0;
           $$01 = $116;$$02 = $115;
          }
          else if ((label|0) == 34) {
           $117 = ___cxa_find_matching_catch()|0;
           $118 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
           $$01 = $118;$$02 = $117;
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($s);
          $$5 = $$01;$$57 = $$02;
          break L14;
         }
        } while(0);
        $119 = ((($t$1$lcssa)) + 1|0);
        $120 = (__ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($119,$last,$db)|0);
        $121 = ($120|0)==($119|0);
        if ($121) {
         $122 = HEAP32[$$pre$phi80Z2D>>2]|0;
         $123 = HEAP32[$$pre>>2]|0;
         $124 = ($122|0)==($123|0);
         if ($124) {
          $$19 = $first;
          break L1;
         }
         $125 = ((($123)) + -24|0);
         $127 = $123;
         while(1) {
          $126 = ((($127)) + -24|0);
          HEAP32[$$pre>>2] = $126;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($126);
          $$pre$i20 = HEAP32[$$pre>>2]|0;
          $128 = ($$pre$i20|0)==($125|0);
          if ($128) {
           $$19 = $first;
           break L1;
          } else {
           $127 = $$pre$i20;
          }
         }
        }
        $129 = HEAP32[$$pre>>2]|0;
        $130 = HEAP32[$$pre$phi80Z2D>>2]|0;
        $131 = $129;
        $132 = $130;
        $133 = (($131) - ($132))|0;
        $134 = (($133|0) / 24)&-1;
        $135 = ($134>>>0)<(2);
        if ($135) {
         $$19 = $first;
         break L1;
        }
        $136 = ((($129)) + -24|0);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($s1,$136);
        $137 = HEAP32[$$pre>>2]|0;
        $138 = ((($137)) + -24|0);
        $140 = $137;
        while(1) {
         $139 = ((($140)) + -24|0);
         HEAP32[$$pre>>2] = $139;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($139);
         $$pre$i22 = HEAP32[$$pre>>2]|0;
         $141 = ($$pre$i22|0)==($138|0);
         if ($141) {
          break;
         } else {
          $140 = $$pre$i22;
         }
        }
        __THREW__ = 0;
        $142 = (invoke_iiii(391,($s1|0),0,(17239|0))|0);
        $143 = __THREW__; __THREW__ = 0;
        $144 = $143&1;
        do {
         if ($144) {
          $162 = ___cxa_find_matching_catch()|0;
          $163 = tempRet0;
          $$1 = $163;$$13 = $162;
         } else {
          ;HEAP32[$1>>2]=HEAP32[$142>>2]|0;HEAP32[$1+4>>2]=HEAP32[$142+4>>2]|0;HEAP32[$1+8>>2]=HEAP32[$142+8>>2]|0;
          HEAP32[$142>>2] = 0;
          $145 = ((($142)) + 4|0);
          HEAP32[$145>>2] = 0;
          $146 = ((($142)) + 8|0);
          HEAP32[$146>>2] = 0;
          $147 = ((($137)) + -48|0);
          $148 = HEAP8[$1>>0]|0;
          $149 = $148 & 1;
          $150 = ($149<<24>>24)==(0);
          $151 = ((($1)) + 8|0);
          $152 = HEAP32[$151>>2]|0;
          $153 = ((($1)) + 1|0);
          $154 = $150 ? $153 : $152;
          $155 = ((($1)) + 4|0);
          $156 = HEAP32[$155>>2]|0;
          $157 = $148&255;
          $158 = $157 >>> 1;
          $159 = $150 ? $158 : $156;
          __THREW__ = 0;
          (invoke_iiii(387,($147|0),($154|0),($159|0))|0);
          $160 = __THREW__; __THREW__ = 0;
          $161 = $160&1;
          if ($161) {
           $164 = ___cxa_find_matching_catch()|0;
           $165 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
           $$1 = $165;$$13 = $164;
           break;
          } else {
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($s1);
           $$19 = $120;
           break L1;
          }
         }
        } while(0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($s1);
        $$5 = $$1;$$57 = $$13;
       } else {
        $166 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_($30,$last,$db)|0);
        $167 = ($166|0)==($30|0);
        if (!($167)) {
         $168 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($166,$last,$db)|0);
         $169 = ($168|0)==($166|0);
         do {
          if ($169) {
           $t$2 = $166;
          } else {
           $170 = ((($db)) + 4|0);
           $171 = HEAP32[$170>>2]|0;
           $172 = HEAP32[$db>>2]|0;
           $173 = $171;
           $174 = $172;
           $175 = (($173) - ($174))|0;
           $176 = (($175|0) / 24)&-1;
           $177 = ($176>>>0)<(2);
           if ($177) {
            $$19 = $first;
            break L1;
           }
           $178 = ((($171)) + -24|0);
           __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($args3,$178);
           $179 = HEAP32[$170>>2]|0;
           $180 = ((($179)) + -24|0);
           $182 = $179;
           while(1) {
            $181 = ((($182)) + -24|0);
            HEAP32[$170>>2] = $181;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($181);
            $$pre$i30 = HEAP32[$170>>2]|0;
            $183 = ($$pre$i30|0)==($180|0);
            if ($183) {
             break;
            } else {
             $182 = $$pre$i30;
            }
           }
           $184 = ((($179)) + -48|0);
           $185 = HEAP8[$args3>>0]|0;
           $186 = $185 & 1;
           $187 = ($186<<24>>24)==(0);
           $188 = ((($args3)) + 8|0);
           $189 = HEAP32[$188>>2]|0;
           $190 = ((($args3)) + 1|0);
           $191 = $187 ? $190 : $189;
           $192 = ((($args3)) + 4|0);
           $193 = HEAP32[$192>>2]|0;
           $194 = $185&255;
           $195 = $194 >>> 1;
           $196 = $187 ? $195 : $193;
           __THREW__ = 0;
           (invoke_iiii(387,($184|0),($191|0),($196|0))|0);
           $197 = __THREW__; __THREW__ = 0;
           $198 = $197&1;
           if ($198) {
            $199 = ___cxa_find_matching_catch()|0;
            $200 = tempRet0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args3);
            $$5 = $200;$$57 = $199;
            break L14;
           } else {
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args3);
            $t$2 = $168;
            break;
           }
          }
         } while(0);
         $201 = (__ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($t$2,$last,$db)|0);
         $202 = ($201|0)==($t$2|0);
         if ($202) {
          $203 = HEAP32[$db>>2]|0;
          $204 = ((($db)) + 4|0);
          $205 = HEAP32[$204>>2]|0;
          $206 = ($203|0)==($205|0);
          if ($206) {
           $$19 = $first;
           break L1;
          }
          $207 = ((($205)) + -24|0);
          $209 = $205;
          while(1) {
           $208 = ((($209)) + -24|0);
           HEAP32[$204>>2] = $208;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($208);
           $$pre$i34 = HEAP32[$204>>2]|0;
           $210 = ($$pre$i34|0)==($207|0);
           if ($210) {
            $$19 = $first;
            break L1;
           } else {
            $209 = $$pre$i34;
           }
          }
         }
         $211 = ((($db)) + 4|0);
         $212 = HEAP32[$211>>2]|0;
         $213 = HEAP32[$db>>2]|0;
         $214 = $212;
         $215 = $213;
         $216 = (($214) - ($215))|0;
         $217 = (($216|0) / 24)&-1;
         $218 = ($217>>>0)<(2);
         if ($218) {
          $$19 = $first;
          break L1;
         }
         $219 = ((($212)) + -24|0);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($s4,$219);
         $220 = HEAP32[$211>>2]|0;
         $221 = ((($220)) + -24|0);
         $223 = $220;
         while(1) {
          $222 = ((($223)) + -24|0);
          HEAP32[$211>>2] = $222;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($222);
          $$pre$i36 = HEAP32[$211>>2]|0;
          $224 = ($$pre$i36|0)==($221|0);
          if ($224) {
           break;
          } else {
           $223 = $$pre$i36;
          }
         }
         __THREW__ = 0;
         $225 = (invoke_iiii(391,($s4|0),0,(17239|0))|0);
         $226 = __THREW__; __THREW__ = 0;
         $227 = $226&1;
         do {
          if ($227) {
           $245 = ___cxa_find_matching_catch()|0;
           $246 = tempRet0;
           $$2 = $246;$$24 = $245;
          } else {
           ;HEAP32[$2>>2]=HEAP32[$225>>2]|0;HEAP32[$2+4>>2]=HEAP32[$225+4>>2]|0;HEAP32[$2+8>>2]=HEAP32[$225+8>>2]|0;
           HEAP32[$225>>2] = 0;
           $228 = ((($225)) + 4|0);
           HEAP32[$228>>2] = 0;
           $229 = ((($225)) + 8|0);
           HEAP32[$229>>2] = 0;
           $230 = ((($220)) + -48|0);
           $231 = HEAP8[$2>>0]|0;
           $232 = $231 & 1;
           $233 = ($232<<24>>24)==(0);
           $234 = ((($2)) + 8|0);
           $235 = HEAP32[$234>>2]|0;
           $236 = ((($2)) + 1|0);
           $237 = $233 ? $236 : $235;
           $238 = ((($2)) + 4|0);
           $239 = HEAP32[$238>>2]|0;
           $240 = $231&255;
           $241 = $240 >>> 1;
           $242 = $233 ? $241 : $239;
           __THREW__ = 0;
           (invoke_iiii(387,($230|0),($237|0),($242|0))|0);
           $243 = __THREW__; __THREW__ = 0;
           $244 = $243&1;
           if ($244) {
            $247 = ___cxa_find_matching_catch()|0;
            $248 = tempRet0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
            $$2 = $248;$$24 = $247;
            break;
           } else {
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($s4);
            $$19 = $201;
            break L1;
           }
          }
         } while(0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($s4);
         $$5 = $$2;$$57 = $$24;
         break;
        }
        $249 = (__ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($30,$last,$db)|0);
        $250 = ($249|0)==($30|0);
        $251 = ($249|0)==($last|0);
        $or$cond12 = $250 | $251;
        if ($or$cond12) {
         $$19 = $first;
         break L1;
        }
        if ($global$0$off0) {
         $252 = HEAP32[$db>>2]|0;
         $253 = ((($db)) + 4|0);
         $254 = HEAP32[$253>>2]|0;
         $255 = ($252|0)==($254|0);
         if ($255) {
          $$19 = $first;
          break L1;
         }
         $256 = ((($254)) + -24|0);
         (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($256,0,17239)|0);
         $$pre$phi82Z2D = $253;$$pre$phi84Z2D = $db;
        } else {
         $$pre81 = ((($db)) + 4|0);
         $$pre$phi82Z2D = $$pre81;$$pre$phi84Z2D = $db;
        }
        $257 = ((($3)) + 8|0);
        $258 = ((($3)) + 1|0);
        $259 = ((($3)) + 4|0);
        $260 = HEAP8[$249>>0]|0;
        $261 = ($260<<24>>24)==(69);
        L103: do {
         if ($261) {
          $t$3$lcssa = $249;
         } else {
          $t$3110 = $249;
          while(1) {
           $262 = (__ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($t$3110,$last,$db)|0);
           $263 = ($262|0)==($t$3110|0);
           $264 = ($262|0)==($last|0);
           $or$cond13 = $263 | $264;
           if ($or$cond13) {
            $$19 = $first;
            break L1;
           }
           $265 = HEAP32[$$pre$phi82Z2D>>2]|0;
           $266 = HEAP32[$$pre$phi84Z2D>>2]|0;
           $267 = $265;
           $268 = $266;
           $269 = (($267) - ($268))|0;
           $270 = (($269|0) / 24)&-1;
           $271 = ($270>>>0)<(2);
           if ($271) {
            $$19 = $first;
            break L1;
           }
           $272 = ((($265)) + -24|0);
           __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($s5,$272);
           $273 = HEAP32[$$pre$phi82Z2D>>2]|0;
           $274 = ((($273)) + -24|0);
           $276 = $273;
           while(1) {
            $275 = ((($276)) + -24|0);
            HEAP32[$$pre$phi82Z2D>>2] = $275;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($275);
            $$pre$i44 = HEAP32[$$pre$phi82Z2D>>2]|0;
            $277 = ($$pre$i44|0)==($274|0);
            if ($277) {
             break;
            } else {
             $276 = $$pre$i44;
            }
           }
           __THREW__ = 0;
           $278 = (invoke_iiii(391,($s5|0),0,(17239|0))|0);
           $279 = __THREW__; __THREW__ = 0;
           $280 = $279&1;
           if ($280) {
            label = 83;
            break;
           }
           ;HEAP32[$3>>2]=HEAP32[$278>>2]|0;HEAP32[$3+4>>2]=HEAP32[$278+4>>2]|0;HEAP32[$3+8>>2]=HEAP32[$278+8>>2]|0;
           HEAP32[$278>>2] = 0;
           $281 = ((($278)) + 4|0);
           HEAP32[$281>>2] = 0;
           $282 = ((($278)) + 8|0);
           HEAP32[$282>>2] = 0;
           $283 = ((($273)) + -48|0);
           $284 = HEAP8[$3>>0]|0;
           $285 = $284 & 1;
           $286 = ($285<<24>>24)==(0);
           $287 = HEAP32[$257>>2]|0;
           $288 = $286 ? $258 : $287;
           $289 = HEAP32[$259>>2]|0;
           $290 = $284&255;
           $291 = $290 >>> 1;
           $292 = $286 ? $291 : $289;
           __THREW__ = 0;
           (invoke_iiii(387,($283|0),($288|0),($292|0))|0);
           $293 = __THREW__; __THREW__ = 0;
           $294 = $293&1;
           if ($294) {
            label = 84;
            break;
           }
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($s5);
           $295 = HEAP8[$262>>0]|0;
           $296 = ($295<<24>>24)==(69);
           if ($296) {
            $t$3$lcssa = $262;
            break L103;
           } else {
            $t$3110 = $262;
           }
          }
          if ((label|0) == 83) {
           $297 = ___cxa_find_matching_catch()|0;
           $298 = tempRet0;
           $$3 = $298;$$35 = $297;
          }
          else if ((label|0) == 84) {
           $299 = ___cxa_find_matching_catch()|0;
           $300 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
           $$3 = $300;$$35 = $299;
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($s5);
          $$5 = $$3;$$57 = $$35;
          break L14;
         }
        } while(0);
        $301 = ((($t$3$lcssa)) + 1|0);
        $302 = (__ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($301,$last,$db)|0);
        $303 = ($302|0)==($301|0);
        if ($303) {
         $304 = HEAP32[$$pre$phi84Z2D>>2]|0;
         $305 = HEAP32[$$pre$phi82Z2D>>2]|0;
         $306 = ($304|0)==($305|0);
         if ($306) {
          $$19 = $first;
          break L1;
         }
         $307 = ((($305)) + -24|0);
         $309 = $305;
         while(1) {
          $308 = ((($309)) + -24|0);
          HEAP32[$$pre$phi82Z2D>>2] = $308;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($308);
          $$pre$i52 = HEAP32[$$pre$phi82Z2D>>2]|0;
          $310 = ($$pre$i52|0)==($307|0);
          if ($310) {
           $$19 = $first;
           break L1;
          } else {
           $309 = $$pre$i52;
          }
         }
        }
        $311 = HEAP32[$$pre$phi82Z2D>>2]|0;
        $312 = HEAP32[$$pre$phi84Z2D>>2]|0;
        $313 = $311;
        $314 = $312;
        $315 = (($313) - ($314))|0;
        $316 = (($315|0) / 24)&-1;
        $317 = ($316>>>0)<(2);
        if ($317) {
         $$19 = $first;
         break L1;
        }
        $318 = ((($311)) + -24|0);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($s6,$318);
        $319 = HEAP32[$$pre$phi82Z2D>>2]|0;
        $320 = ((($319)) + -24|0);
        $322 = $319;
        while(1) {
         $321 = ((($322)) + -24|0);
         HEAP32[$$pre$phi82Z2D>>2] = $321;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($321);
         $$pre$i54 = HEAP32[$$pre$phi82Z2D>>2]|0;
         $323 = ($$pre$i54|0)==($320|0);
         if ($323) {
          break;
         } else {
          $322 = $$pre$i54;
         }
        }
        __THREW__ = 0;
        $324 = (invoke_iiii(391,($s6|0),0,(17239|0))|0);
        $325 = __THREW__; __THREW__ = 0;
        $326 = $325&1;
        do {
         if ($326) {
          $344 = ___cxa_find_matching_catch()|0;
          $345 = tempRet0;
          $$4 = $345;$$46 = $344;
         } else {
          ;HEAP32[$4>>2]=HEAP32[$324>>2]|0;HEAP32[$4+4>>2]=HEAP32[$324+4>>2]|0;HEAP32[$4+8>>2]=HEAP32[$324+8>>2]|0;
          HEAP32[$324>>2] = 0;
          $327 = ((($324)) + 4|0);
          HEAP32[$327>>2] = 0;
          $328 = ((($324)) + 8|0);
          HEAP32[$328>>2] = 0;
          $329 = ((($319)) + -48|0);
          $330 = HEAP8[$4>>0]|0;
          $331 = $330 & 1;
          $332 = ($331<<24>>24)==(0);
          $333 = ((($4)) + 8|0);
          $334 = HEAP32[$333>>2]|0;
          $335 = ((($4)) + 1|0);
          $336 = $332 ? $335 : $334;
          $337 = ((($4)) + 4|0);
          $338 = HEAP32[$337>>2]|0;
          $339 = $330&255;
          $340 = $339 >>> 1;
          $341 = $332 ? $340 : $338;
          __THREW__ = 0;
          (invoke_iiii(387,($329|0),($336|0),($341|0))|0);
          $342 = __THREW__; __THREW__ = 0;
          $343 = $342&1;
          if ($343) {
           $346 = ___cxa_find_matching_catch()|0;
           $347 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
           $$4 = $347;$$46 = $346;
           break;
          } else {
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($s6);
           $$19 = $302;
           break L1;
          }
         }
        } while(0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($s6);
        $$5 = $$4;$$57 = $$46;
       }
      } while(0);
      ___resumeException($$57|0);
      // unreachable;
     } else {
      $$19 = $first;
     }
    } else {
     $$19 = $first;
    }
   } else {
    $$19 = $first;
   }
  } else {
   $$19 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($$19|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$0 = 0, $$0$i = 0, $$01 = 0, $$02 = 0, $$pre$i = 0, $$pre$i4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $args = 0;
 var $args3 = 0, $first$ = 0, $t$0$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $args = sp + 12|0;
 $args3 = sp;
 $0 = $last;
 $1 = $first;
 $2 = (($0) - ($1))|0;
 $3 = ($2|0)>(1);
 L1: do {
  if ($3) {
   $4 = HEAP8[$first>>0]|0;
   L3: do {
    switch ($4<<24>>24) {
    case 100: case 111:  {
     $5 = ((($first)) + 1|0);
     $6 = HEAP8[$5>>0]|0;
     $7 = ($6<<24>>24)==(110);
     if ($7) {
      $8 = ($4<<24>>24)==(111);
      $9 = ((($first)) + 2|0);
      if (!($8)) {
       $45 = ($9|0)==($last|0);
       if ($45) {
        $$0$i = $last;
       } else {
        $46 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_($9,$last,$db)|0);
        $47 = ($46|0)==($9|0);
        if ($47) {
         $48 = (__ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($9,$last,$db)|0);
         $t$0$i = $48;
        } else {
         $t$0$i = $46;
        }
        $49 = ($t$0$i|0)==($9|0);
        if ($49) {
         $$0$i = $9;
        } else {
         $50 = HEAP32[$db>>2]|0;
         $51 = ((($db)) + 4|0);
         $52 = HEAP32[$51>>2]|0;
         $53 = ($50|0)==($52|0);
         if ($53) {
          $$0$i = $9;
         } else {
          $54 = ((($52)) + -24|0);
          (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($54,0,17265)|0);
          $$0$i = $t$0$i;
         }
        }
       }
       $55 = ($$0$i|0)==($9|0);
       $first$ = $55 ? $first : $$0$i;
       STACKTOP = sp;return ($first$|0);
      }
      $10 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_($9,$last,$db)|0);
      $11 = ($10|0)==($9|0);
      if ($11) {
       $$0 = $first;
       break L1;
      }
      $12 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($10,$last,$db)|0);
      $13 = ($12|0)==($10|0);
      if ($13) {
       $$0 = $10;
       break L1;
      }
      $14 = ((($db)) + 4|0);
      $15 = HEAP32[$14>>2]|0;
      $16 = HEAP32[$db>>2]|0;
      $17 = $15;
      $18 = $16;
      $19 = (($17) - ($18))|0;
      $20 = (($19|0) / 24)&-1;
      $21 = ($20>>>0)<(2);
      if ($21) {
       $$0 = $12;
       break L1;
      }
      $22 = ((($15)) + -24|0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($args,$22);
      $23 = HEAP32[$14>>2]|0;
      $24 = ((($23)) + -24|0);
      $26 = $23;
      while(1) {
       $25 = ((($26)) + -24|0);
       HEAP32[$14>>2] = $25;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($25);
       $$pre$i = HEAP32[$14>>2]|0;
       $27 = ($$pre$i|0)==($24|0);
       if ($27) {
        break;
       } else {
        $26 = $$pre$i;
       }
      }
      $28 = ((($23)) + -48|0);
      $29 = HEAP8[$args>>0]|0;
      $30 = $29 & 1;
      $31 = ($30<<24>>24)==(0);
      $32 = ((($args)) + 8|0);
      $33 = HEAP32[$32>>2]|0;
      $34 = ((($args)) + 1|0);
      $35 = $31 ? $34 : $33;
      $36 = ((($args)) + 4|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = $29&255;
      $39 = $38 >>> 1;
      $40 = $31 ? $39 : $37;
      __THREW__ = 0;
      (invoke_iiii(387,($28|0),($35|0),($40|0))|0);
      $41 = __THREW__; __THREW__ = 0;
      $42 = $41&1;
      if ($42) {
       $43 = ___cxa_find_matching_catch()|0;
       $44 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
       $$01 = $44;$$02 = $43;
       break L3;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
       $$0 = $12;
       break L1;
      }
     } else {
      label = 20;
     }
     break;
    }
    default: {
     label = 20;
    }
    }
   } while(0);
   do {
    if ((label|0) == 20) {
     $56 = (__ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
     $57 = ($56|0)==($first|0);
     if (!($57)) {
      $$0 = $56;
      break L1;
     }
     $58 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
     $59 = ($58|0)==($first|0);
     if ($59) {
      $$0 = $first;
      break L1;
     }
     $60 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($58,$last,$db)|0);
     $61 = ($60|0)==($58|0);
     if ($61) {
      $$0 = $58;
      break L1;
     }
     $62 = ((($db)) + 4|0);
     $63 = HEAP32[$62>>2]|0;
     $64 = HEAP32[$db>>2]|0;
     $65 = $63;
     $66 = $64;
     $67 = (($65) - ($66))|0;
     $68 = (($67|0) / 24)&-1;
     $69 = ($68>>>0)<(2);
     if ($69) {
      $$0 = $60;
      break L1;
     }
     $70 = ((($63)) + -24|0);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($args3,$70);
     $71 = HEAP32[$62>>2]|0;
     $72 = ((($71)) + -24|0);
     $74 = $71;
     while(1) {
      $73 = ((($74)) + -24|0);
      HEAP32[$62>>2] = $73;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($73);
      $$pre$i4 = HEAP32[$62>>2]|0;
      $75 = ($$pre$i4|0)==($72|0);
      if ($75) {
       break;
      } else {
       $74 = $$pre$i4;
      }
     }
     $76 = ((($71)) + -48|0);
     $77 = HEAP8[$args3>>0]|0;
     $78 = $77 & 1;
     $79 = ($78<<24>>24)==(0);
     $80 = ((($args3)) + 8|0);
     $81 = HEAP32[$80>>2]|0;
     $82 = ((($args3)) + 1|0);
     $83 = $79 ? $82 : $81;
     $84 = ((($args3)) + 4|0);
     $85 = HEAP32[$84>>2]|0;
     $86 = $77&255;
     $87 = $86 >>> 1;
     $88 = $79 ? $87 : $85;
     __THREW__ = 0;
     (invoke_iiii(387,($76|0),($83|0),($88|0))|0);
     $89 = __THREW__; __THREW__ = 0;
     $90 = $89&1;
     if ($90) {
      $91 = ___cxa_find_matching_catch()|0;
      $92 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args3);
      $$01 = $92;$$02 = $91;
      break;
     } else {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args3);
      $$0 = $60;
      break L1;
     }
    }
   } while(0);
   ___resumeException($$02|0);
   // unreachable;
  } else {
   $$0 = $first;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i11 = 0, $$0$i$i$i6 = 0, $$01 = 0, $$02 = 0, $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0;
 var $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0;
 var $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0;
 var $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__v$i$i = 0, $__v$i$i10 = 0, $__v$i$i5 = 0, $k1$015 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v$i$i10 = sp + 112|0;
 $__v$i$i5 = sp + 92|0;
 $__v$i$i = sp + 72|0;
 $0 = sp + 56|0;
 $1 = sp + 48|0;
 $2 = sp + 32|0;
 $3 = sp + 24|0;
 $4 = sp + 8|0;
 $5 = sp;
 $6 = ($first|0)==($last|0);
 L1: do {
  if ($6) {
   $$02 = $first;
  } else {
   $7 = HEAP8[$first>>0]|0;
   $8 = $7 << 24 >> 24;
   L3: do {
    switch ($8|0) {
    case 84:  {
     $9 = ((($db)) + 4|0);
     $10 = HEAP32[$9>>2]|0;
     $11 = HEAP32[$db>>2]|0;
     $12 = $10;
     $13 = $11;
     $14 = (($12) - ($13))|0;
     $15 = (($14|0) / 24)&-1;
     $16 = (__ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
     $17 = HEAP32[$9>>2]|0;
     $18 = HEAP32[$db>>2]|0;
     $19 = $17;
     $20 = $18;
     $21 = (($19) - ($20))|0;
     $22 = (($21|0) / 24)&-1;
     $23 = ($16|0)!=($first|0);
     $24 = (($15) + 1)|0;
     $25 = ($22|0)==($24|0);
     $or$cond = $23 & $25;
     if (!($or$cond)) {
      $26 = ($22|0)==($15|0);
      if ($26) {
       $$02 = $first;
       break L1;
      } else {
       $80 = $17;$k1$015 = $22;
      }
      while(1) {
       $79 = ((($80)) + -24|0);
       $82 = $80;
       while(1) {
        $81 = ((($82)) + -24|0);
        HEAP32[$9>>2] = $81;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($81);
        $$pre$i = HEAP32[$9>>2]|0;
        $83 = ($$pre$i|0)==($79|0);
        if ($83) {
         break;
        } else {
         $82 = $$pre$i;
        }
       }
       $84 = (($k1$015) + -1)|0;
       $85 = ($84|0)==($15|0);
       if ($85) {
        $$02 = $first;
        break L1;
       } else {
        $80 = $79;$k1$015 = $84;
       }
      }
     }
     $27 = ((($db)) + 16|0);
     $28 = ((($17)) + -24|0);
     $29 = ((($db)) + 12|0);
     $30 = HEAP32[$29>>2]|0;
     HEAP32[$1>>2] = $30;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($0,$28,$1);
     $31 = ((($db)) + 20|0);
     $32 = HEAP32[$31>>2]|0;
     $33 = ((($db)) + 24|0);
     $34 = HEAP32[$33>>2]|0;
     $35 = ($32>>>0)<($34>>>0);
     if ($35) {
      $36 = ((($0)) + 12|0);
      $37 = ((($32)) + 4|0);
      $38 = HEAP32[$36>>2]|0;
      $39 = ((($32)) + 12|0);
      HEAP32[$39>>2] = $38;
      $40 = HEAP32[$0>>2]|0;
      HEAP32[$32>>2] = $40;
      $41 = ((($0)) + 4|0);
      $42 = HEAP32[$41>>2]|0;
      HEAP32[$37>>2] = $42;
      $43 = ((($0)) + 8|0);
      $44 = HEAP32[$43>>2]|0;
      $45 = ((($32)) + 8|0);
      HEAP32[$45>>2] = $44;
      HEAP32[$43>>2] = 0;
      HEAP32[$41>>2] = 0;
      HEAP32[$0>>2] = 0;
      $46 = HEAP32[$31>>2]|0;
      $47 = ((($46)) + 16|0);
      HEAP32[$31>>2] = $47;
     } else {
      $48 = ((($db)) + 28|0);
      $49 = HEAP32[$27>>2]|0;
      $50 = $32;
      $51 = $49;
      $52 = (($50) - ($51))|0;
      $53 = $52 >> 4;
      $54 = (($53) + 1)|0;
      $55 = ($52|0)<(-16);
      if ($55) {
       __THREW__ = 0;
       invoke_vi(402,($27|0));
       $56 = __THREW__; __THREW__ = 0;
       $57 = ___cxa_find_matching_catch()|0;
       $58 = tempRet0;
       __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($0);
       $$0 = $58;$$01 = $57;
       break L3;
      }
      $59 = $34;
      $60 = (($59) - ($51))|0;
      $61 = $60 >> 4;
      $62 = ($61>>>0)<(1073741823);
      if ($62) {
       $63 = $60 >> 3;
       $64 = ($63>>>0)<($54>>>0);
       $65 = $64 ? $54 : $63;
       $$0$i$i$i = $65;
      } else {
       $$0$i$i$i = 2147483647;
      }
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i,$$0$i$i$i,$53,$48);
      $66 = ((($__v$i$i)) + 8|0);
      $67 = HEAP32[$66>>2]|0;
      $68 = ((($0)) + 12|0);
      $69 = ((($67)) + 4|0);
      $70 = HEAP32[$68>>2]|0;
      $71 = ((($67)) + 12|0);
      HEAP32[$71>>2] = $70;
      $72 = HEAP32[$0>>2]|0;
      HEAP32[$67>>2] = $72;
      $73 = ((($0)) + 4|0);
      $74 = HEAP32[$73>>2]|0;
      HEAP32[$69>>2] = $74;
      $75 = ((($0)) + 8|0);
      $76 = HEAP32[$75>>2]|0;
      $77 = ((($67)) + 8|0);
      HEAP32[$77>>2] = $76;
      HEAP32[$75>>2] = 0;
      HEAP32[$73>>2] = 0;
      HEAP32[$0>>2] = 0;
      $78 = ((($67)) + 16|0);
      HEAP32[$66>>2] = $78;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($27,$__v$i$i);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i);
     }
     __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($0);
     $$02 = $16;
     break L1;
     break;
    }
    case 68:  {
     $86 = (__ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
     $87 = ($86|0)==($first|0);
     if ($87) {
      $$02 = $first;
      break L1;
     }
     $88 = HEAP32[$db>>2]|0;
     $89 = ((($db)) + 4|0);
     $90 = HEAP32[$89>>2]|0;
     $91 = ($88|0)==($90|0);
     if ($91) {
      $$02 = $first;
      break L1;
     }
     $92 = ((($db)) + 16|0);
     $93 = ((($90)) + -24|0);
     $94 = ((($db)) + 12|0);
     $95 = HEAP32[$94>>2]|0;
     HEAP32[$3>>2] = $95;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($2,$93,$3);
     $96 = ((($db)) + 20|0);
     $97 = HEAP32[$96>>2]|0;
     $98 = ((($db)) + 24|0);
     $99 = HEAP32[$98>>2]|0;
     $100 = ($97>>>0)<($99>>>0);
     if ($100) {
      $101 = ((($2)) + 12|0);
      $102 = ((($97)) + 4|0);
      $103 = HEAP32[$101>>2]|0;
      $104 = ((($97)) + 12|0);
      HEAP32[$104>>2] = $103;
      $105 = HEAP32[$2>>2]|0;
      HEAP32[$97>>2] = $105;
      $106 = ((($2)) + 4|0);
      $107 = HEAP32[$106>>2]|0;
      HEAP32[$102>>2] = $107;
      $108 = ((($2)) + 8|0);
      $109 = HEAP32[$108>>2]|0;
      $110 = ((($97)) + 8|0);
      HEAP32[$110>>2] = $109;
      HEAP32[$108>>2] = 0;
      HEAP32[$106>>2] = 0;
      HEAP32[$2>>2] = 0;
      $111 = HEAP32[$96>>2]|0;
      $112 = ((($111)) + 16|0);
      HEAP32[$96>>2] = $112;
     } else {
      $113 = ((($db)) + 28|0);
      $114 = HEAP32[$92>>2]|0;
      $115 = $97;
      $116 = $114;
      $117 = (($115) - ($116))|0;
      $118 = $117 >> 4;
      $119 = (($118) + 1)|0;
      $120 = ($117|0)<(-16);
      if ($120) {
       __THREW__ = 0;
       invoke_vi(402,($92|0));
       $121 = __THREW__; __THREW__ = 0;
       $122 = ___cxa_find_matching_catch()|0;
       $123 = tempRet0;
       __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($2);
       $$0 = $123;$$01 = $122;
       break L3;
      }
      $124 = $99;
      $125 = (($124) - ($116))|0;
      $126 = $125 >> 4;
      $127 = ($126>>>0)<(1073741823);
      if ($127) {
       $128 = $125 >> 3;
       $129 = ($128>>>0)<($119>>>0);
       $130 = $129 ? $119 : $128;
       $$0$i$i$i6 = $130;
      } else {
       $$0$i$i$i6 = 2147483647;
      }
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i5,$$0$i$i$i6,$118,$113);
      $131 = ((($__v$i$i5)) + 8|0);
      $132 = HEAP32[$131>>2]|0;
      $133 = ((($2)) + 12|0);
      $134 = ((($132)) + 4|0);
      $135 = HEAP32[$133>>2]|0;
      $136 = ((($132)) + 12|0);
      HEAP32[$136>>2] = $135;
      $137 = HEAP32[$2>>2]|0;
      HEAP32[$132>>2] = $137;
      $138 = ((($2)) + 4|0);
      $139 = HEAP32[$138>>2]|0;
      HEAP32[$134>>2] = $139;
      $140 = ((($2)) + 8|0);
      $141 = HEAP32[$140>>2]|0;
      $142 = ((($132)) + 8|0);
      HEAP32[$142>>2] = $141;
      HEAP32[$140>>2] = 0;
      HEAP32[$138>>2] = 0;
      HEAP32[$2>>2] = 0;
      $143 = ((($132)) + 16|0);
      HEAP32[$131>>2] = $143;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($92,$__v$i$i5);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i5);
     }
     __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($2);
     $$02 = $86;
     break L1;
     break;
    }
    case 83:  {
     $144 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
     $145 = ($144|0)==($first|0);
     if (!($145)) {
      $$02 = $144;
      break L1;
     }
     $146 = $last;
     $147 = $first;
     $148 = (($146) - ($147))|0;
     $149 = ($148|0)>(2);
     if (!($149)) {
      $$02 = $first;
      break L1;
     }
     $150 = ((($first)) + 1|0);
     $151 = HEAP8[$150>>0]|0;
     $152 = ($151<<24>>24)==(116);
     if (!($152)) {
      $$02 = $first;
      break L1;
     }
     $153 = ((($first)) + 2|0);
     $154 = (__ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_($153,$last,$db)|0);
     $155 = ($154|0)==($153|0);
     if ($155) {
      $$02 = $first;
      break L1;
     }
     $156 = HEAP32[$db>>2]|0;
     $157 = ((($db)) + 4|0);
     $158 = HEAP32[$157>>2]|0;
     $159 = ($156|0)==($158|0);
     if ($159) {
      $$02 = $first;
      break L1;
     }
     $160 = ((($158)) + -24|0);
     (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($160,0,17259)|0);
     $161 = ((($db)) + 16|0);
     $162 = HEAP32[$157>>2]|0;
     $163 = ((($162)) + -24|0);
     $164 = ((($db)) + 12|0);
     $165 = HEAP32[$164>>2]|0;
     HEAP32[$5>>2] = $165;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($4,$163,$5);
     $166 = ((($db)) + 20|0);
     $167 = HEAP32[$166>>2]|0;
     $168 = ((($db)) + 24|0);
     $169 = HEAP32[$168>>2]|0;
     $170 = ($167>>>0)<($169>>>0);
     if ($170) {
      $171 = ((($4)) + 12|0);
      $172 = ((($167)) + 4|0);
      $173 = HEAP32[$171>>2]|0;
      $174 = ((($167)) + 12|0);
      HEAP32[$174>>2] = $173;
      $175 = HEAP32[$4>>2]|0;
      HEAP32[$167>>2] = $175;
      $176 = ((($4)) + 4|0);
      $177 = HEAP32[$176>>2]|0;
      HEAP32[$172>>2] = $177;
      $178 = ((($4)) + 8|0);
      $179 = HEAP32[$178>>2]|0;
      $180 = ((($167)) + 8|0);
      HEAP32[$180>>2] = $179;
      HEAP32[$178>>2] = 0;
      HEAP32[$176>>2] = 0;
      HEAP32[$4>>2] = 0;
      $181 = HEAP32[$166>>2]|0;
      $182 = ((($181)) + 16|0);
      HEAP32[$166>>2] = $182;
     } else {
      $183 = ((($db)) + 28|0);
      $184 = HEAP32[$161>>2]|0;
      $185 = $167;
      $186 = $184;
      $187 = (($185) - ($186))|0;
      $188 = $187 >> 4;
      $189 = (($188) + 1)|0;
      $190 = ($187|0)<(-16);
      if ($190) {
       __THREW__ = 0;
       invoke_vi(402,($161|0));
       $191 = __THREW__; __THREW__ = 0;
       $192 = ___cxa_find_matching_catch()|0;
       $193 = tempRet0;
       __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($4);
       $$0 = $193;$$01 = $192;
       break L3;
      }
      $194 = $169;
      $195 = (($194) - ($186))|0;
      $196 = $195 >> 4;
      $197 = ($196>>>0)<(1073741823);
      if ($197) {
       $198 = $195 >> 3;
       $199 = ($198>>>0)<($189>>>0);
       $200 = $199 ? $189 : $198;
       $$0$i$i$i11 = $200;
      } else {
       $$0$i$i$i11 = 2147483647;
      }
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i10,$$0$i$i$i11,$188,$183);
      $201 = ((($__v$i$i10)) + 8|0);
      $202 = HEAP32[$201>>2]|0;
      $203 = ((($4)) + 12|0);
      $204 = ((($202)) + 4|0);
      $205 = HEAP32[$203>>2]|0;
      $206 = ((($202)) + 12|0);
      HEAP32[$206>>2] = $205;
      $207 = HEAP32[$4>>2]|0;
      HEAP32[$202>>2] = $207;
      $208 = ((($4)) + 4|0);
      $209 = HEAP32[$208>>2]|0;
      HEAP32[$204>>2] = $209;
      $210 = ((($4)) + 8|0);
      $211 = HEAP32[$210>>2]|0;
      $212 = ((($202)) + 8|0);
      HEAP32[$212>>2] = $211;
      HEAP32[$210>>2] = 0;
      HEAP32[$208>>2] = 0;
      HEAP32[$4>>2] = 0;
      $213 = ((($202)) + 16|0);
      HEAP32[$201>>2] = $213;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($161,$__v$i$i10);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i10);
     }
     __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($4);
     $$02 = $154;
     break L1;
     break;
    }
    default: {
     $$02 = $first;
     break L1;
    }
    }
   } while(0);
   ___resumeException($$01|0);
   // unreachable;
  }
 } while(0);
 STACKTOP = sp;return ($$02|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$0 = 0, $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $args = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $args = sp;
 $0 = ($first|0)==($last|0);
 do {
  if ($0) {
   $$0 = $first;
  } else {
   $1 = (__ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
   $2 = ($1|0)==($first|0);
   if ($2) {
    $$0 = $first;
   } else {
    $3 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($1,$last,$db)|0);
    $4 = ($3|0)==($1|0);
    if ($4) {
     $$0 = $1;
    } else {
     $5 = ((($db)) + 4|0);
     $6 = HEAP32[$5>>2]|0;
     $7 = HEAP32[$db>>2]|0;
     $8 = $6;
     $9 = $7;
     $10 = (($8) - ($9))|0;
     $11 = (($10|0) / 24)&-1;
     $12 = ($11>>>0)<(2);
     if ($12) {
      $$0 = $first;
     } else {
      $13 = ((($6)) + -24|0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($args,$13);
      $14 = HEAP32[$5>>2]|0;
      $15 = ((($14)) + -24|0);
      $17 = $14;
      while(1) {
       $16 = ((($17)) + -24|0);
       HEAP32[$5>>2] = $16;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($16);
       $$pre$i = HEAP32[$5>>2]|0;
       $18 = ($$pre$i|0)==($15|0);
       if ($18) {
        break;
       } else {
        $17 = $$pre$i;
       }
      }
      $19 = ((($14)) + -48|0);
      $20 = HEAP8[$args>>0]|0;
      $21 = $20 & 1;
      $22 = ($21<<24>>24)==(0);
      $23 = ((($args)) + 8|0);
      $24 = HEAP32[$23>>2]|0;
      $25 = ((($args)) + 1|0);
      $26 = $22 ? $25 : $24;
      $27 = ((($args)) + 4|0);
      $28 = HEAP32[$27>>2]|0;
      $29 = $20&255;
      $30 = $29 >>> 1;
      $31 = $22 ? $30 : $28;
      __THREW__ = 0;
      (invoke_iiii(387,($19|0),($26|0),($31|0))|0);
      $32 = __THREW__; __THREW__ = 0;
      $33 = $32&1;
      if ($33) {
       $34 = ___cxa_find_matching_catch()|0;
       $35 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
       ___resumeException($34|0);
       // unreachable;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
       $$0 = $3;
       break;
      }
     }
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___assert_fail((18472|0),(16840|0),1175,(18501|0));
 // unreachable;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj4EEERAT__Kc($this,$s) {
 $this = $this|0;
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$this>>0] = 6;
 $0 = ((($this)) + 1|0);
 ;HEAP8[$0>>0]=HEAP8[$s>>0]|0;HEAP8[$0+1>>0]=HEAP8[$s+1>>0]|0;HEAP8[$0+2>>0]=HEAP8[$s+2>>0]|0;
 $1 = ((($this)) + 4|0);
 HEAP8[$1>>0] = 0;
 $2 = ((($this)) + 12|0);
 HEAP32[$2>>2] = 0;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($2)) + 8|0);
 HEAP32[$4>>2] = 0;
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj9EEERAT__Kc($this,$s) {
 $this = $this|0;
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$this>>0] = 16;
 $0 = ((($this)) + 1|0);
 $1 = $s;
 $2 = $1;
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $4 = (($1) + 4)|0;
 $5 = $4;
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $7 = $0;
 $8 = $7;
 HEAP8[$8>>0]=$3&255;HEAP8[$8+1>>0]=($3>>8)&255;HEAP8[$8+2>>0]=($3>>16)&255;HEAP8[$8+3>>0]=$3>>24;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP8[$10>>0]=$6&255;HEAP8[$10+1>>0]=($6>>8)&255;HEAP8[$10+2>>0]=($6>>16)&255;HEAP8[$10+3>>0]=$6>>24;
 $11 = ((($this)) + 9|0);
 HEAP8[$11>>0] = 0;
 $12 = ((($this)) + 12|0);
 HEAP32[$12>>2] = 0;
 $13 = ((($12)) + 4|0);
 HEAP32[$13>>2] = 0;
 $14 = ((($12)) + 8|0);
 HEAP32[$14>>2] = 0;
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_($first,$last) {
 $first = $first|0;
 $last = $last|0;
 var $$0 = 0, $$first = 0, $$first3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond1 = 0, $or$cond2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($first|0)==($last|0);
 L1: do {
  if ($0) {
   $$0 = $first;
  } else {
   $1 = HEAP8[$first>>0]|0;
   $2 = $1 << 24 >> 24;
   switch ($2|0) {
   case 104:  {
    $3 = ((($first)) + 1|0);
    $4 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($3,$last)|0);
    $5 = ($4|0)==($3|0);
    $6 = ($4|0)==($last|0);
    $or$cond = $5 | $6;
    if ($or$cond) {
     $$0 = $first;
     break L1;
    }
    $7 = HEAP8[$4>>0]|0;
    $8 = ($7<<24>>24)==(95);
    $9 = ((($4)) + 1|0);
    $$first = $8 ? $9 : $first;
    $$0 = $$first;
    break L1;
    break;
   }
   case 118:  {
    break;
   }
   default: {
    $$0 = $first;
    break L1;
   }
   }
   $10 = ((($first)) + 1|0);
   $11 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($10,$last)|0);
   $12 = ($11|0)==($10|0);
   $13 = ($11|0)==($last|0);
   $or$cond1 = $12 | $13;
   if ($or$cond1) {
    $$0 = $first;
   } else {
    $14 = HEAP8[$11>>0]|0;
    $15 = ($14<<24>>24)==(95);
    if ($15) {
     $16 = ((($11)) + 1|0);
     $17 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($16,$last)|0);
     $18 = ($17|0)==($16|0);
     $19 = ($17|0)==($last|0);
     $or$cond2 = $18 | $19;
     if ($or$cond2) {
      $$0 = $first;
     } else {
      $20 = HEAP8[$17>>0]|0;
      $21 = ($20<<24>>24)==(95);
      $22 = ((($17)) + 1|0);
      $$first3 = $21 ? $22 : $first;
      return ($$first3|0);
     }
    } else {
     $$0 = $first;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function _malloc($bytes) {
 $bytes = $bytes|0;
 var $$3$i = 0, $$lcssa = 0, $$lcssa211 = 0, $$lcssa215 = 0, $$lcssa216 = 0, $$lcssa217 = 0, $$lcssa219 = 0, $$lcssa222 = 0, $$lcssa224 = 0, $$lcssa226 = 0, $$lcssa228 = 0, $$lcssa230 = 0, $$lcssa232 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i22$i = 0, $$pre$i25 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i23$iZ2D = 0;
 var $$pre$phi$i26Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi58$i$iZ2D = 0, $$pre$phiZ2D = 0, $$pre105 = 0, $$pre106 = 0, $$pre14$i$i = 0, $$pre43$i = 0, $$pre56$i$i = 0, $$pre57$i$i = 0, $$pre8$i = 0, $$rsize$0$i = 0, $$rsize$3$i = 0, $$sum = 0, $$sum$i$i = 0, $$sum$i$i$i = 0, $$sum$i13$i = 0, $$sum$i15$i = 0, $$sum$i17$i = 0, $$sum$i19$i = 0;
 var $$sum$i2334 = 0, $$sum$i32 = 0, $$sum$i35 = 0, $$sum1 = 0, $$sum1$i = 0, $$sum1$i$i = 0, $$sum1$i14$i = 0, $$sum1$i20$i = 0, $$sum1$i24 = 0, $$sum10 = 0, $$sum10$i = 0, $$sum10$i$i = 0, $$sum11$i = 0, $$sum11$i$i = 0, $$sum1112 = 0, $$sum112$i = 0, $$sum113$i = 0, $$sum114$i = 0, $$sum115$i = 0, $$sum116$i = 0;
 var $$sum117$i = 0, $$sum118$i = 0, $$sum119$i = 0, $$sum12$i = 0, $$sum12$i$i = 0, $$sum120$i = 0, $$sum121$i = 0, $$sum122$i = 0, $$sum123$i = 0, $$sum124$i = 0, $$sum125$i = 0, $$sum13$i = 0, $$sum13$i$i = 0, $$sum14$i$i = 0, $$sum15$i = 0, $$sum15$i$i = 0, $$sum16$i = 0, $$sum16$i$i = 0, $$sum17$i = 0, $$sum17$i$i = 0;
 var $$sum18$i = 0, $$sum1819$i$i = 0, $$sum2 = 0, $$sum2$i = 0, $$sum2$i$i = 0, $$sum2$i$i$i = 0, $$sum2$i16$i = 0, $$sum2$i18$i = 0, $$sum2$i21$i = 0, $$sum20$i$i = 0, $$sum21$i$i = 0, $$sum22$i$i = 0, $$sum23$i$i = 0, $$sum24$i$i = 0, $$sum25$i$i = 0, $$sum27$i$i = 0, $$sum28$i$i = 0, $$sum29$i$i = 0, $$sum3$i = 0, $$sum3$i27 = 0;
 var $$sum30$i$i = 0, $$sum3132$i$i = 0, $$sum34$i$i = 0, $$sum3536$i$i = 0, $$sum3738$i$i = 0, $$sum39$i$i = 0, $$sum4 = 0, $$sum4$i = 0, $$sum4$i$i = 0, $$sum4$i28 = 0, $$sum40$i$i = 0, $$sum41$i$i = 0, $$sum42$i$i = 0, $$sum5$i = 0, $$sum5$i$i = 0, $$sum56 = 0, $$sum6$i = 0, $$sum67$i$i = 0, $$sum7$i = 0, $$sum8$i = 0;
 var $$sum9 = 0, $$sum9$i = 0, $$sum9$i$i = 0, $$tsize$1$i = 0, $$v$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0;
 var $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0;
 var $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0;
 var $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0;
 var $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0;
 var $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0;
 var $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0;
 var $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0;
 var $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0;
 var $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0;
 var $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0;
 var $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0;
 var $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0;
 var $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0;
 var $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0;
 var $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0;
 var $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0;
 var $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0;
 var $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0;
 var $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0;
 var $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0;
 var $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0;
 var $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0;
 var $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0;
 var $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0;
 var $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0;
 var $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0;
 var $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0;
 var $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0;
 var $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0;
 var $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0;
 var $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0;
 var $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0;
 var $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0;
 var $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0;
 var $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0;
 var $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0;
 var $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0;
 var $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0;
 var $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0;
 var $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0;
 var $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0;
 var $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0;
 var $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0;
 var $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0;
 var $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0;
 var $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0;
 var $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0;
 var $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0;
 var $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $F$0$i$i = 0, $F1$0$i = 0, $F4$0 = 0, $F4$0$i$i = 0, $F5$0$i = 0, $I1$0$i$i = 0, $I7$0$i = 0, $I7$0$i$i = 0, $K12$029$i = 0, $K2$07$i$i = 0, $K8$051$i$i = 0;
 var $R$0$i = 0, $R$0$i$i = 0, $R$0$i$i$lcssa = 0, $R$0$i$lcssa = 0, $R$0$i18 = 0, $R$0$i18$lcssa = 0, $R$1$i = 0, $R$1$i$i = 0, $R$1$i20 = 0, $RP$0$i = 0, $RP$0$i$i = 0, $RP$0$i$i$lcssa = 0, $RP$0$i$lcssa = 0, $RP$0$i17 = 0, $RP$0$i17$lcssa = 0, $T$0$lcssa$i = 0, $T$0$lcssa$i$i = 0, $T$0$lcssa$i25$i = 0, $T$028$i = 0, $T$028$i$lcssa = 0;
 var $T$050$i$i = 0, $T$050$i$i$lcssa = 0, $T$06$i$i = 0, $T$06$i$i$lcssa = 0, $br$0$ph$i = 0, $cond$i = 0, $cond$i$i = 0, $cond$i21 = 0, $exitcond$i$i = 0, $i$02$i$i = 0, $idx$0$i = 0, $mem$0 = 0, $nb$0 = 0, $not$$i = 0, $not$$i$i = 0, $not$$i26$i = 0, $oldfirst$0$i$i = 0, $or$cond$i = 0, $or$cond$i30 = 0, $or$cond1$i = 0;
 var $or$cond19$i = 0, $or$cond2$i = 0, $or$cond3$i = 0, $or$cond5$i = 0, $or$cond57$i = 0, $or$cond6$i = 0, $or$cond8$i = 0, $or$cond9$i = 0, $qsize$0$i$i = 0, $rsize$0$i = 0, $rsize$0$i$lcssa = 0, $rsize$0$i15 = 0, $rsize$1$i = 0, $rsize$2$i = 0, $rsize$3$lcssa$i = 0, $rsize$331$i = 0, $rst$0$i = 0, $rst$1$i = 0, $sizebits$0$i = 0, $sp$0$i$i = 0;
 var $sp$0$i$i$i = 0, $sp$084$i = 0, $sp$084$i$lcssa = 0, $sp$183$i = 0, $sp$183$i$lcssa = 0, $ssize$0$$i = 0, $ssize$0$i = 0, $ssize$1$ph$i = 0, $ssize$2$i = 0, $t$0$i = 0, $t$0$i14 = 0, $t$1$i = 0, $t$2$ph$i = 0, $t$2$v$3$i = 0, $t$230$i = 0, $tbase$255$i = 0, $tsize$0$ph$i = 0, $tsize$0323944$i = 0, $tsize$1$i = 0, $tsize$254$i = 0;
 var $v$0$i = 0, $v$0$i$lcssa = 0, $v$0$i16 = 0, $v$1$i = 0, $v$2$i = 0, $v$3$lcssa$i = 0, $v$3$ph$i = 0, $v$332$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($bytes>>>0)<(245);
 do {
  if ($0) {
   $1 = ($bytes>>>0)<(11);
   $2 = (($bytes) + 11)|0;
   $3 = $2 & -8;
   $4 = $1 ? 16 : $3;
   $5 = $4 >>> 3;
   $6 = HEAP32[3180>>2]|0;
   $7 = $6 >>> $5;
   $8 = $7 & 3;
   $9 = ($8|0)==(0);
   if (!($9)) {
    $10 = $7 & 1;
    $11 = $10 ^ 1;
    $12 = (($11) + ($5))|0;
    $13 = $12 << 1;
    $14 = (3220 + ($13<<2)|0);
    $$sum10 = (($13) + 2)|0;
    $15 = (3220 + ($$sum10<<2)|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ((($16)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($14|0)==($18|0);
    do {
     if ($19) {
      $20 = 1 << $12;
      $21 = $20 ^ -1;
      $22 = $6 & $21;
      HEAP32[3180>>2] = $22;
     } else {
      $23 = HEAP32[(3196)>>2]|0;
      $24 = ($18>>>0)<($23>>>0);
      if (!($24)) {
       $25 = ((($18)) + 12|0);
       $26 = HEAP32[$25>>2]|0;
       $27 = ($26|0)==($16|0);
       if ($27) {
        HEAP32[$25>>2] = $14;
        HEAP32[$15>>2] = $18;
        break;
       }
      }
      _abort();
      // unreachable;
     }
    } while(0);
    $28 = $12 << 3;
    $29 = $28 | 3;
    $30 = ((($16)) + 4|0);
    HEAP32[$30>>2] = $29;
    $$sum1112 = $28 | 4;
    $31 = (($16) + ($$sum1112)|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = $32 | 1;
    HEAP32[$31>>2] = $33;
    $mem$0 = $17;
    break;
   }
   $34 = HEAP32[(3188)>>2]|0;
   $35 = ($4>>>0)>($34>>>0);
   if ($35) {
    $36 = ($7|0)==(0);
    if (!($36)) {
     $37 = $7 << $5;
     $38 = 2 << $5;
     $39 = (0 - ($38))|0;
     $40 = $38 | $39;
     $41 = $37 & $40;
     $42 = (0 - ($41))|0;
     $43 = $41 & $42;
     $44 = (($43) + -1)|0;
     $45 = $44 >>> 12;
     $46 = $45 & 16;
     $47 = $44 >>> $46;
     $48 = $47 >>> 5;
     $49 = $48 & 8;
     $50 = $49 | $46;
     $51 = $47 >>> $49;
     $52 = $51 >>> 2;
     $53 = $52 & 4;
     $54 = $50 | $53;
     $55 = $51 >>> $53;
     $56 = $55 >>> 1;
     $57 = $56 & 2;
     $58 = $54 | $57;
     $59 = $55 >>> $57;
     $60 = $59 >>> 1;
     $61 = $60 & 1;
     $62 = $58 | $61;
     $63 = $59 >>> $61;
     $64 = (($62) + ($63))|0;
     $65 = $64 << 1;
     $66 = (3220 + ($65<<2)|0);
     $$sum4 = (($65) + 2)|0;
     $67 = (3220 + ($$sum4<<2)|0);
     $68 = HEAP32[$67>>2]|0;
     $69 = ((($68)) + 8|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = ($66|0)==($70|0);
     do {
      if ($71) {
       $72 = 1 << $64;
       $73 = $72 ^ -1;
       $74 = $6 & $73;
       HEAP32[3180>>2] = $74;
       $89 = $34;
      } else {
       $75 = HEAP32[(3196)>>2]|0;
       $76 = ($70>>>0)<($75>>>0);
       if (!($76)) {
        $77 = ((($70)) + 12|0);
        $78 = HEAP32[$77>>2]|0;
        $79 = ($78|0)==($68|0);
        if ($79) {
         HEAP32[$77>>2] = $66;
         HEAP32[$67>>2] = $70;
         $$pre = HEAP32[(3188)>>2]|0;
         $89 = $$pre;
         break;
        }
       }
       _abort();
       // unreachable;
      }
     } while(0);
     $80 = $64 << 3;
     $81 = (($80) - ($4))|0;
     $82 = $4 | 3;
     $83 = ((($68)) + 4|0);
     HEAP32[$83>>2] = $82;
     $84 = (($68) + ($4)|0);
     $85 = $81 | 1;
     $$sum56 = $4 | 4;
     $86 = (($68) + ($$sum56)|0);
     HEAP32[$86>>2] = $85;
     $87 = (($68) + ($80)|0);
     HEAP32[$87>>2] = $81;
     $88 = ($89|0)==(0);
     if (!($88)) {
      $90 = HEAP32[(3200)>>2]|0;
      $91 = $89 >>> 3;
      $92 = $91 << 1;
      $93 = (3220 + ($92<<2)|0);
      $94 = HEAP32[3180>>2]|0;
      $95 = 1 << $91;
      $96 = $94 & $95;
      $97 = ($96|0)==(0);
      if ($97) {
       $98 = $94 | $95;
       HEAP32[3180>>2] = $98;
       $$pre105 = (($92) + 2)|0;
       $$pre106 = (3220 + ($$pre105<<2)|0);
       $$pre$phiZ2D = $$pre106;$F4$0 = $93;
      } else {
       $$sum9 = (($92) + 2)|0;
       $99 = (3220 + ($$sum9<<2)|0);
       $100 = HEAP32[$99>>2]|0;
       $101 = HEAP32[(3196)>>2]|0;
       $102 = ($100>>>0)<($101>>>0);
       if ($102) {
        _abort();
        // unreachable;
       } else {
        $$pre$phiZ2D = $99;$F4$0 = $100;
       }
      }
      HEAP32[$$pre$phiZ2D>>2] = $90;
      $103 = ((($F4$0)) + 12|0);
      HEAP32[$103>>2] = $90;
      $104 = ((($90)) + 8|0);
      HEAP32[$104>>2] = $F4$0;
      $105 = ((($90)) + 12|0);
      HEAP32[$105>>2] = $93;
     }
     HEAP32[(3188)>>2] = $81;
     HEAP32[(3200)>>2] = $84;
     $mem$0 = $69;
     break;
    }
    $106 = HEAP32[(3184)>>2]|0;
    $107 = ($106|0)==(0);
    if ($107) {
     $nb$0 = $4;
     label = 154;
    } else {
     $108 = (0 - ($106))|0;
     $109 = $106 & $108;
     $110 = (($109) + -1)|0;
     $111 = $110 >>> 12;
     $112 = $111 & 16;
     $113 = $110 >>> $112;
     $114 = $113 >>> 5;
     $115 = $114 & 8;
     $116 = $115 | $112;
     $117 = $113 >>> $115;
     $118 = $117 >>> 2;
     $119 = $118 & 4;
     $120 = $116 | $119;
     $121 = $117 >>> $119;
     $122 = $121 >>> 1;
     $123 = $122 & 2;
     $124 = $120 | $123;
     $125 = $121 >>> $123;
     $126 = $125 >>> 1;
     $127 = $126 & 1;
     $128 = $124 | $127;
     $129 = $125 >>> $127;
     $130 = (($128) + ($129))|0;
     $131 = (3484 + ($130<<2)|0);
     $132 = HEAP32[$131>>2]|0;
     $133 = ((($132)) + 4|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = $134 & -8;
     $136 = (($135) - ($4))|0;
     $rsize$0$i = $136;$t$0$i = $132;$v$0$i = $132;
     while(1) {
      $137 = ((($t$0$i)) + 16|0);
      $138 = HEAP32[$137>>2]|0;
      $139 = ($138|0)==(0|0);
      if ($139) {
       $140 = ((($t$0$i)) + 20|0);
       $141 = HEAP32[$140>>2]|0;
       $142 = ($141|0)==(0|0);
       if ($142) {
        $rsize$0$i$lcssa = $rsize$0$i;$v$0$i$lcssa = $v$0$i;
        break;
       } else {
        $144 = $141;
       }
      } else {
       $144 = $138;
      }
      $143 = ((($144)) + 4|0);
      $145 = HEAP32[$143>>2]|0;
      $146 = $145 & -8;
      $147 = (($146) - ($4))|0;
      $148 = ($147>>>0)<($rsize$0$i>>>0);
      $$rsize$0$i = $148 ? $147 : $rsize$0$i;
      $$v$0$i = $148 ? $144 : $v$0$i;
      $rsize$0$i = $$rsize$0$i;$t$0$i = $144;$v$0$i = $$v$0$i;
     }
     $149 = HEAP32[(3196)>>2]|0;
     $150 = ($v$0$i$lcssa>>>0)<($149>>>0);
     if (!($150)) {
      $151 = (($v$0$i$lcssa) + ($4)|0);
      $152 = ($v$0$i$lcssa>>>0)<($151>>>0);
      if ($152) {
       $153 = ((($v$0$i$lcssa)) + 24|0);
       $154 = HEAP32[$153>>2]|0;
       $155 = ((($v$0$i$lcssa)) + 12|0);
       $156 = HEAP32[$155>>2]|0;
       $157 = ($156|0)==($v$0$i$lcssa|0);
       do {
        if ($157) {
         $167 = ((($v$0$i$lcssa)) + 20|0);
         $168 = HEAP32[$167>>2]|0;
         $169 = ($168|0)==(0|0);
         if ($169) {
          $170 = ((($v$0$i$lcssa)) + 16|0);
          $171 = HEAP32[$170>>2]|0;
          $172 = ($171|0)==(0|0);
          if ($172) {
           $R$1$i = 0;
           break;
          } else {
           $R$0$i = $171;$RP$0$i = $170;
          }
         } else {
          $R$0$i = $168;$RP$0$i = $167;
         }
         while(1) {
          $173 = ((($R$0$i)) + 20|0);
          $174 = HEAP32[$173>>2]|0;
          $175 = ($174|0)==(0|0);
          if (!($175)) {
           $R$0$i = $174;$RP$0$i = $173;
           continue;
          }
          $176 = ((($R$0$i)) + 16|0);
          $177 = HEAP32[$176>>2]|0;
          $178 = ($177|0)==(0|0);
          if ($178) {
           $R$0$i$lcssa = $R$0$i;$RP$0$i$lcssa = $RP$0$i;
           break;
          } else {
           $R$0$i = $177;$RP$0$i = $176;
          }
         }
         $179 = ($RP$0$i$lcssa>>>0)<($149>>>0);
         if ($179) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$RP$0$i$lcssa>>2] = 0;
          $R$1$i = $R$0$i$lcssa;
          break;
         }
        } else {
         $158 = ((($v$0$i$lcssa)) + 8|0);
         $159 = HEAP32[$158>>2]|0;
         $160 = ($159>>>0)<($149>>>0);
         if (!($160)) {
          $161 = ((($159)) + 12|0);
          $162 = HEAP32[$161>>2]|0;
          $163 = ($162|0)==($v$0$i$lcssa|0);
          if ($163) {
           $164 = ((($156)) + 8|0);
           $165 = HEAP32[$164>>2]|0;
           $166 = ($165|0)==($v$0$i$lcssa|0);
           if ($166) {
            HEAP32[$161>>2] = $156;
            HEAP32[$164>>2] = $159;
            $R$1$i = $156;
            break;
           }
          }
         }
         _abort();
         // unreachable;
        }
       } while(0);
       $180 = ($154|0)==(0|0);
       do {
        if (!($180)) {
         $181 = ((($v$0$i$lcssa)) + 28|0);
         $182 = HEAP32[$181>>2]|0;
         $183 = (3484 + ($182<<2)|0);
         $184 = HEAP32[$183>>2]|0;
         $185 = ($v$0$i$lcssa|0)==($184|0);
         if ($185) {
          HEAP32[$183>>2] = $R$1$i;
          $cond$i = ($R$1$i|0)==(0|0);
          if ($cond$i) {
           $186 = 1 << $182;
           $187 = $186 ^ -1;
           $188 = HEAP32[(3184)>>2]|0;
           $189 = $188 & $187;
           HEAP32[(3184)>>2] = $189;
           break;
          }
         } else {
          $190 = HEAP32[(3196)>>2]|0;
          $191 = ($154>>>0)<($190>>>0);
          if ($191) {
           _abort();
           // unreachable;
          }
          $192 = ((($154)) + 16|0);
          $193 = HEAP32[$192>>2]|0;
          $194 = ($193|0)==($v$0$i$lcssa|0);
          if ($194) {
           HEAP32[$192>>2] = $R$1$i;
          } else {
           $195 = ((($154)) + 20|0);
           HEAP32[$195>>2] = $R$1$i;
          }
          $196 = ($R$1$i|0)==(0|0);
          if ($196) {
           break;
          }
         }
         $197 = HEAP32[(3196)>>2]|0;
         $198 = ($R$1$i>>>0)<($197>>>0);
         if ($198) {
          _abort();
          // unreachable;
         }
         $199 = ((($R$1$i)) + 24|0);
         HEAP32[$199>>2] = $154;
         $200 = ((($v$0$i$lcssa)) + 16|0);
         $201 = HEAP32[$200>>2]|0;
         $202 = ($201|0)==(0|0);
         do {
          if (!($202)) {
           $203 = ($201>>>0)<($197>>>0);
           if ($203) {
            _abort();
            // unreachable;
           } else {
            $204 = ((($R$1$i)) + 16|0);
            HEAP32[$204>>2] = $201;
            $205 = ((($201)) + 24|0);
            HEAP32[$205>>2] = $R$1$i;
            break;
           }
          }
         } while(0);
         $206 = ((($v$0$i$lcssa)) + 20|0);
         $207 = HEAP32[$206>>2]|0;
         $208 = ($207|0)==(0|0);
         if (!($208)) {
          $209 = HEAP32[(3196)>>2]|0;
          $210 = ($207>>>0)<($209>>>0);
          if ($210) {
           _abort();
           // unreachable;
          } else {
           $211 = ((($R$1$i)) + 20|0);
           HEAP32[$211>>2] = $207;
           $212 = ((($207)) + 24|0);
           HEAP32[$212>>2] = $R$1$i;
           break;
          }
         }
        }
       } while(0);
       $213 = ($rsize$0$i$lcssa>>>0)<(16);
       if ($213) {
        $214 = (($rsize$0$i$lcssa) + ($4))|0;
        $215 = $214 | 3;
        $216 = ((($v$0$i$lcssa)) + 4|0);
        HEAP32[$216>>2] = $215;
        $$sum4$i = (($214) + 4)|0;
        $217 = (($v$0$i$lcssa) + ($$sum4$i)|0);
        $218 = HEAP32[$217>>2]|0;
        $219 = $218 | 1;
        HEAP32[$217>>2] = $219;
       } else {
        $220 = $4 | 3;
        $221 = ((($v$0$i$lcssa)) + 4|0);
        HEAP32[$221>>2] = $220;
        $222 = $rsize$0$i$lcssa | 1;
        $$sum$i35 = $4 | 4;
        $223 = (($v$0$i$lcssa) + ($$sum$i35)|0);
        HEAP32[$223>>2] = $222;
        $$sum1$i = (($rsize$0$i$lcssa) + ($4))|0;
        $224 = (($v$0$i$lcssa) + ($$sum1$i)|0);
        HEAP32[$224>>2] = $rsize$0$i$lcssa;
        $225 = HEAP32[(3188)>>2]|0;
        $226 = ($225|0)==(0);
        if (!($226)) {
         $227 = HEAP32[(3200)>>2]|0;
         $228 = $225 >>> 3;
         $229 = $228 << 1;
         $230 = (3220 + ($229<<2)|0);
         $231 = HEAP32[3180>>2]|0;
         $232 = 1 << $228;
         $233 = $231 & $232;
         $234 = ($233|0)==(0);
         if ($234) {
          $235 = $231 | $232;
          HEAP32[3180>>2] = $235;
          $$pre$i = (($229) + 2)|0;
          $$pre8$i = (3220 + ($$pre$i<<2)|0);
          $$pre$phi$iZ2D = $$pre8$i;$F1$0$i = $230;
         } else {
          $$sum3$i = (($229) + 2)|0;
          $236 = (3220 + ($$sum3$i<<2)|0);
          $237 = HEAP32[$236>>2]|0;
          $238 = HEAP32[(3196)>>2]|0;
          $239 = ($237>>>0)<($238>>>0);
          if ($239) {
           _abort();
           // unreachable;
          } else {
           $$pre$phi$iZ2D = $236;$F1$0$i = $237;
          }
         }
         HEAP32[$$pre$phi$iZ2D>>2] = $227;
         $240 = ((($F1$0$i)) + 12|0);
         HEAP32[$240>>2] = $227;
         $241 = ((($227)) + 8|0);
         HEAP32[$241>>2] = $F1$0$i;
         $242 = ((($227)) + 12|0);
         HEAP32[$242>>2] = $230;
        }
        HEAP32[(3188)>>2] = $rsize$0$i$lcssa;
        HEAP32[(3200)>>2] = $151;
       }
       $243 = ((($v$0$i$lcssa)) + 8|0);
       $mem$0 = $243;
       break;
      }
     }
     _abort();
     // unreachable;
    }
   } else {
    $nb$0 = $4;
    label = 154;
   }
  } else {
   $244 = ($bytes>>>0)>(4294967231);
   if ($244) {
    $nb$0 = -1;
    label = 154;
   } else {
    $245 = (($bytes) + 11)|0;
    $246 = $245 & -8;
    $247 = HEAP32[(3184)>>2]|0;
    $248 = ($247|0)==(0);
    if ($248) {
     $nb$0 = $246;
     label = 154;
    } else {
     $249 = (0 - ($246))|0;
     $250 = $245 >>> 8;
     $251 = ($250|0)==(0);
     if ($251) {
      $idx$0$i = 0;
     } else {
      $252 = ($246>>>0)>(16777215);
      if ($252) {
       $idx$0$i = 31;
      } else {
       $253 = (($250) + 1048320)|0;
       $254 = $253 >>> 16;
       $255 = $254 & 8;
       $256 = $250 << $255;
       $257 = (($256) + 520192)|0;
       $258 = $257 >>> 16;
       $259 = $258 & 4;
       $260 = $259 | $255;
       $261 = $256 << $259;
       $262 = (($261) + 245760)|0;
       $263 = $262 >>> 16;
       $264 = $263 & 2;
       $265 = $260 | $264;
       $266 = (14 - ($265))|0;
       $267 = $261 << $264;
       $268 = $267 >>> 15;
       $269 = (($266) + ($268))|0;
       $270 = $269 << 1;
       $271 = (($269) + 7)|0;
       $272 = $246 >>> $271;
       $273 = $272 & 1;
       $274 = $273 | $270;
       $idx$0$i = $274;
      }
     }
     $275 = (3484 + ($idx$0$i<<2)|0);
     $276 = HEAP32[$275>>2]|0;
     $277 = ($276|0)==(0|0);
     L110: do {
      if ($277) {
       $rsize$2$i = $249;$t$1$i = 0;$v$2$i = 0;
       label = 86;
      } else {
       $278 = ($idx$0$i|0)==(31);
       $279 = $idx$0$i >>> 1;
       $280 = (25 - ($279))|0;
       $281 = $278 ? 0 : $280;
       $282 = $246 << $281;
       $rsize$0$i15 = $249;$rst$0$i = 0;$sizebits$0$i = $282;$t$0$i14 = $276;$v$0$i16 = 0;
       while(1) {
        $283 = ((($t$0$i14)) + 4|0);
        $284 = HEAP32[$283>>2]|0;
        $285 = $284 & -8;
        $286 = (($285) - ($246))|0;
        $287 = ($286>>>0)<($rsize$0$i15>>>0);
        if ($287) {
         $288 = ($285|0)==($246|0);
         if ($288) {
          $rsize$331$i = $286;$t$230$i = $t$0$i14;$v$332$i = $t$0$i14;
          label = 90;
          break L110;
         } else {
          $rsize$1$i = $286;$v$1$i = $t$0$i14;
         }
        } else {
         $rsize$1$i = $rsize$0$i15;$v$1$i = $v$0$i16;
        }
        $289 = ((($t$0$i14)) + 20|0);
        $290 = HEAP32[$289>>2]|0;
        $291 = $sizebits$0$i >>> 31;
        $292 = (((($t$0$i14)) + 16|0) + ($291<<2)|0);
        $293 = HEAP32[$292>>2]|0;
        $294 = ($290|0)==(0|0);
        $295 = ($290|0)==($293|0);
        $or$cond19$i = $294 | $295;
        $rst$1$i = $or$cond19$i ? $rst$0$i : $290;
        $296 = ($293|0)==(0|0);
        $297 = $sizebits$0$i << 1;
        if ($296) {
         $rsize$2$i = $rsize$1$i;$t$1$i = $rst$1$i;$v$2$i = $v$1$i;
         label = 86;
         break;
        } else {
         $rsize$0$i15 = $rsize$1$i;$rst$0$i = $rst$1$i;$sizebits$0$i = $297;$t$0$i14 = $293;$v$0$i16 = $v$1$i;
        }
       }
      }
     } while(0);
     if ((label|0) == 86) {
      $298 = ($t$1$i|0)==(0|0);
      $299 = ($v$2$i|0)==(0|0);
      $or$cond$i = $298 & $299;
      if ($or$cond$i) {
       $300 = 2 << $idx$0$i;
       $301 = (0 - ($300))|0;
       $302 = $300 | $301;
       $303 = $247 & $302;
       $304 = ($303|0)==(0);
       if ($304) {
        $nb$0 = $246;
        label = 154;
        break;
       }
       $305 = (0 - ($303))|0;
       $306 = $303 & $305;
       $307 = (($306) + -1)|0;
       $308 = $307 >>> 12;
       $309 = $308 & 16;
       $310 = $307 >>> $309;
       $311 = $310 >>> 5;
       $312 = $311 & 8;
       $313 = $312 | $309;
       $314 = $310 >>> $312;
       $315 = $314 >>> 2;
       $316 = $315 & 4;
       $317 = $313 | $316;
       $318 = $314 >>> $316;
       $319 = $318 >>> 1;
       $320 = $319 & 2;
       $321 = $317 | $320;
       $322 = $318 >>> $320;
       $323 = $322 >>> 1;
       $324 = $323 & 1;
       $325 = $321 | $324;
       $326 = $322 >>> $324;
       $327 = (($325) + ($326))|0;
       $328 = (3484 + ($327<<2)|0);
       $329 = HEAP32[$328>>2]|0;
       $t$2$ph$i = $329;$v$3$ph$i = 0;
      } else {
       $t$2$ph$i = $t$1$i;$v$3$ph$i = $v$2$i;
      }
      $330 = ($t$2$ph$i|0)==(0|0);
      if ($330) {
       $rsize$3$lcssa$i = $rsize$2$i;$v$3$lcssa$i = $v$3$ph$i;
      } else {
       $rsize$331$i = $rsize$2$i;$t$230$i = $t$2$ph$i;$v$332$i = $v$3$ph$i;
       label = 90;
      }
     }
     if ((label|0) == 90) {
      while(1) {
       label = 0;
       $331 = ((($t$230$i)) + 4|0);
       $332 = HEAP32[$331>>2]|0;
       $333 = $332 & -8;
       $334 = (($333) - ($246))|0;
       $335 = ($334>>>0)<($rsize$331$i>>>0);
       $$rsize$3$i = $335 ? $334 : $rsize$331$i;
       $t$2$v$3$i = $335 ? $t$230$i : $v$332$i;
       $336 = ((($t$230$i)) + 16|0);
       $337 = HEAP32[$336>>2]|0;
       $338 = ($337|0)==(0|0);
       if (!($338)) {
        $rsize$331$i = $$rsize$3$i;$t$230$i = $337;$v$332$i = $t$2$v$3$i;
        label = 90;
        continue;
       }
       $339 = ((($t$230$i)) + 20|0);
       $340 = HEAP32[$339>>2]|0;
       $341 = ($340|0)==(0|0);
       if ($341) {
        $rsize$3$lcssa$i = $$rsize$3$i;$v$3$lcssa$i = $t$2$v$3$i;
        break;
       } else {
        $rsize$331$i = $$rsize$3$i;$t$230$i = $340;$v$332$i = $t$2$v$3$i;
        label = 90;
       }
      }
     }
     $342 = ($v$3$lcssa$i|0)==(0|0);
     if ($342) {
      $nb$0 = $246;
      label = 154;
     } else {
      $343 = HEAP32[(3188)>>2]|0;
      $344 = (($343) - ($246))|0;
      $345 = ($rsize$3$lcssa$i>>>0)<($344>>>0);
      if ($345) {
       $346 = HEAP32[(3196)>>2]|0;
       $347 = ($v$3$lcssa$i>>>0)<($346>>>0);
       if (!($347)) {
        $348 = (($v$3$lcssa$i) + ($246)|0);
        $349 = ($v$3$lcssa$i>>>0)<($348>>>0);
        if ($349) {
         $350 = ((($v$3$lcssa$i)) + 24|0);
         $351 = HEAP32[$350>>2]|0;
         $352 = ((($v$3$lcssa$i)) + 12|0);
         $353 = HEAP32[$352>>2]|0;
         $354 = ($353|0)==($v$3$lcssa$i|0);
         do {
          if ($354) {
           $364 = ((($v$3$lcssa$i)) + 20|0);
           $365 = HEAP32[$364>>2]|0;
           $366 = ($365|0)==(0|0);
           if ($366) {
            $367 = ((($v$3$lcssa$i)) + 16|0);
            $368 = HEAP32[$367>>2]|0;
            $369 = ($368|0)==(0|0);
            if ($369) {
             $R$1$i20 = 0;
             break;
            } else {
             $R$0$i18 = $368;$RP$0$i17 = $367;
            }
           } else {
            $R$0$i18 = $365;$RP$0$i17 = $364;
           }
           while(1) {
            $370 = ((($R$0$i18)) + 20|0);
            $371 = HEAP32[$370>>2]|0;
            $372 = ($371|0)==(0|0);
            if (!($372)) {
             $R$0$i18 = $371;$RP$0$i17 = $370;
             continue;
            }
            $373 = ((($R$0$i18)) + 16|0);
            $374 = HEAP32[$373>>2]|0;
            $375 = ($374|0)==(0|0);
            if ($375) {
             $R$0$i18$lcssa = $R$0$i18;$RP$0$i17$lcssa = $RP$0$i17;
             break;
            } else {
             $R$0$i18 = $374;$RP$0$i17 = $373;
            }
           }
           $376 = ($RP$0$i17$lcssa>>>0)<($346>>>0);
           if ($376) {
            _abort();
            // unreachable;
           } else {
            HEAP32[$RP$0$i17$lcssa>>2] = 0;
            $R$1$i20 = $R$0$i18$lcssa;
            break;
           }
          } else {
           $355 = ((($v$3$lcssa$i)) + 8|0);
           $356 = HEAP32[$355>>2]|0;
           $357 = ($356>>>0)<($346>>>0);
           if (!($357)) {
            $358 = ((($356)) + 12|0);
            $359 = HEAP32[$358>>2]|0;
            $360 = ($359|0)==($v$3$lcssa$i|0);
            if ($360) {
             $361 = ((($353)) + 8|0);
             $362 = HEAP32[$361>>2]|0;
             $363 = ($362|0)==($v$3$lcssa$i|0);
             if ($363) {
              HEAP32[$358>>2] = $353;
              HEAP32[$361>>2] = $356;
              $R$1$i20 = $353;
              break;
             }
            }
           }
           _abort();
           // unreachable;
          }
         } while(0);
         $377 = ($351|0)==(0|0);
         do {
          if (!($377)) {
           $378 = ((($v$3$lcssa$i)) + 28|0);
           $379 = HEAP32[$378>>2]|0;
           $380 = (3484 + ($379<<2)|0);
           $381 = HEAP32[$380>>2]|0;
           $382 = ($v$3$lcssa$i|0)==($381|0);
           if ($382) {
            HEAP32[$380>>2] = $R$1$i20;
            $cond$i21 = ($R$1$i20|0)==(0|0);
            if ($cond$i21) {
             $383 = 1 << $379;
             $384 = $383 ^ -1;
             $385 = HEAP32[(3184)>>2]|0;
             $386 = $385 & $384;
             HEAP32[(3184)>>2] = $386;
             break;
            }
           } else {
            $387 = HEAP32[(3196)>>2]|0;
            $388 = ($351>>>0)<($387>>>0);
            if ($388) {
             _abort();
             // unreachable;
            }
            $389 = ((($351)) + 16|0);
            $390 = HEAP32[$389>>2]|0;
            $391 = ($390|0)==($v$3$lcssa$i|0);
            if ($391) {
             HEAP32[$389>>2] = $R$1$i20;
            } else {
             $392 = ((($351)) + 20|0);
             HEAP32[$392>>2] = $R$1$i20;
            }
            $393 = ($R$1$i20|0)==(0|0);
            if ($393) {
             break;
            }
           }
           $394 = HEAP32[(3196)>>2]|0;
           $395 = ($R$1$i20>>>0)<($394>>>0);
           if ($395) {
            _abort();
            // unreachable;
           }
           $396 = ((($R$1$i20)) + 24|0);
           HEAP32[$396>>2] = $351;
           $397 = ((($v$3$lcssa$i)) + 16|0);
           $398 = HEAP32[$397>>2]|0;
           $399 = ($398|0)==(0|0);
           do {
            if (!($399)) {
             $400 = ($398>>>0)<($394>>>0);
             if ($400) {
              _abort();
              // unreachable;
             } else {
              $401 = ((($R$1$i20)) + 16|0);
              HEAP32[$401>>2] = $398;
              $402 = ((($398)) + 24|0);
              HEAP32[$402>>2] = $R$1$i20;
              break;
             }
            }
           } while(0);
           $403 = ((($v$3$lcssa$i)) + 20|0);
           $404 = HEAP32[$403>>2]|0;
           $405 = ($404|0)==(0|0);
           if (!($405)) {
            $406 = HEAP32[(3196)>>2]|0;
            $407 = ($404>>>0)<($406>>>0);
            if ($407) {
             _abort();
             // unreachable;
            } else {
             $408 = ((($R$1$i20)) + 20|0);
             HEAP32[$408>>2] = $404;
             $409 = ((($404)) + 24|0);
             HEAP32[$409>>2] = $R$1$i20;
             break;
            }
           }
          }
         } while(0);
         $410 = ($rsize$3$lcssa$i>>>0)<(16);
         L179: do {
          if ($410) {
           $411 = (($rsize$3$lcssa$i) + ($246))|0;
           $412 = $411 | 3;
           $413 = ((($v$3$lcssa$i)) + 4|0);
           HEAP32[$413>>2] = $412;
           $$sum18$i = (($411) + 4)|0;
           $414 = (($v$3$lcssa$i) + ($$sum18$i)|0);
           $415 = HEAP32[$414>>2]|0;
           $416 = $415 | 1;
           HEAP32[$414>>2] = $416;
          } else {
           $417 = $246 | 3;
           $418 = ((($v$3$lcssa$i)) + 4|0);
           HEAP32[$418>>2] = $417;
           $419 = $rsize$3$lcssa$i | 1;
           $$sum$i2334 = $246 | 4;
           $420 = (($v$3$lcssa$i) + ($$sum$i2334)|0);
           HEAP32[$420>>2] = $419;
           $$sum1$i24 = (($rsize$3$lcssa$i) + ($246))|0;
           $421 = (($v$3$lcssa$i) + ($$sum1$i24)|0);
           HEAP32[$421>>2] = $rsize$3$lcssa$i;
           $422 = $rsize$3$lcssa$i >>> 3;
           $423 = ($rsize$3$lcssa$i>>>0)<(256);
           if ($423) {
            $424 = $422 << 1;
            $425 = (3220 + ($424<<2)|0);
            $426 = HEAP32[3180>>2]|0;
            $427 = 1 << $422;
            $428 = $426 & $427;
            $429 = ($428|0)==(0);
            if ($429) {
             $430 = $426 | $427;
             HEAP32[3180>>2] = $430;
             $$pre$i25 = (($424) + 2)|0;
             $$pre43$i = (3220 + ($$pre$i25<<2)|0);
             $$pre$phi$i26Z2D = $$pre43$i;$F5$0$i = $425;
            } else {
             $$sum17$i = (($424) + 2)|0;
             $431 = (3220 + ($$sum17$i<<2)|0);
             $432 = HEAP32[$431>>2]|0;
             $433 = HEAP32[(3196)>>2]|0;
             $434 = ($432>>>0)<($433>>>0);
             if ($434) {
              _abort();
              // unreachable;
             } else {
              $$pre$phi$i26Z2D = $431;$F5$0$i = $432;
             }
            }
            HEAP32[$$pre$phi$i26Z2D>>2] = $348;
            $435 = ((($F5$0$i)) + 12|0);
            HEAP32[$435>>2] = $348;
            $$sum15$i = (($246) + 8)|0;
            $436 = (($v$3$lcssa$i) + ($$sum15$i)|0);
            HEAP32[$436>>2] = $F5$0$i;
            $$sum16$i = (($246) + 12)|0;
            $437 = (($v$3$lcssa$i) + ($$sum16$i)|0);
            HEAP32[$437>>2] = $425;
            break;
           }
           $438 = $rsize$3$lcssa$i >>> 8;
           $439 = ($438|0)==(0);
           if ($439) {
            $I7$0$i = 0;
           } else {
            $440 = ($rsize$3$lcssa$i>>>0)>(16777215);
            if ($440) {
             $I7$0$i = 31;
            } else {
             $441 = (($438) + 1048320)|0;
             $442 = $441 >>> 16;
             $443 = $442 & 8;
             $444 = $438 << $443;
             $445 = (($444) + 520192)|0;
             $446 = $445 >>> 16;
             $447 = $446 & 4;
             $448 = $447 | $443;
             $449 = $444 << $447;
             $450 = (($449) + 245760)|0;
             $451 = $450 >>> 16;
             $452 = $451 & 2;
             $453 = $448 | $452;
             $454 = (14 - ($453))|0;
             $455 = $449 << $452;
             $456 = $455 >>> 15;
             $457 = (($454) + ($456))|0;
             $458 = $457 << 1;
             $459 = (($457) + 7)|0;
             $460 = $rsize$3$lcssa$i >>> $459;
             $461 = $460 & 1;
             $462 = $461 | $458;
             $I7$0$i = $462;
            }
           }
           $463 = (3484 + ($I7$0$i<<2)|0);
           $$sum2$i = (($246) + 28)|0;
           $464 = (($v$3$lcssa$i) + ($$sum2$i)|0);
           HEAP32[$464>>2] = $I7$0$i;
           $$sum3$i27 = (($246) + 16)|0;
           $465 = (($v$3$lcssa$i) + ($$sum3$i27)|0);
           $$sum4$i28 = (($246) + 20)|0;
           $466 = (($v$3$lcssa$i) + ($$sum4$i28)|0);
           HEAP32[$466>>2] = 0;
           HEAP32[$465>>2] = 0;
           $467 = HEAP32[(3184)>>2]|0;
           $468 = 1 << $I7$0$i;
           $469 = $467 & $468;
           $470 = ($469|0)==(0);
           if ($470) {
            $471 = $467 | $468;
            HEAP32[(3184)>>2] = $471;
            HEAP32[$463>>2] = $348;
            $$sum5$i = (($246) + 24)|0;
            $472 = (($v$3$lcssa$i) + ($$sum5$i)|0);
            HEAP32[$472>>2] = $463;
            $$sum6$i = (($246) + 12)|0;
            $473 = (($v$3$lcssa$i) + ($$sum6$i)|0);
            HEAP32[$473>>2] = $348;
            $$sum7$i = (($246) + 8)|0;
            $474 = (($v$3$lcssa$i) + ($$sum7$i)|0);
            HEAP32[$474>>2] = $348;
            break;
           }
           $475 = HEAP32[$463>>2]|0;
           $476 = ((($475)) + 4|0);
           $477 = HEAP32[$476>>2]|0;
           $478 = $477 & -8;
           $479 = ($478|0)==($rsize$3$lcssa$i|0);
           L197: do {
            if ($479) {
             $T$0$lcssa$i = $475;
            } else {
             $480 = ($I7$0$i|0)==(31);
             $481 = $I7$0$i >>> 1;
             $482 = (25 - ($481))|0;
             $483 = $480 ? 0 : $482;
             $484 = $rsize$3$lcssa$i << $483;
             $K12$029$i = $484;$T$028$i = $475;
             while(1) {
              $491 = $K12$029$i >>> 31;
              $492 = (((($T$028$i)) + 16|0) + ($491<<2)|0);
              $487 = HEAP32[$492>>2]|0;
              $493 = ($487|0)==(0|0);
              if ($493) {
               $$lcssa232 = $492;$T$028$i$lcssa = $T$028$i;
               break;
              }
              $485 = $K12$029$i << 1;
              $486 = ((($487)) + 4|0);
              $488 = HEAP32[$486>>2]|0;
              $489 = $488 & -8;
              $490 = ($489|0)==($rsize$3$lcssa$i|0);
              if ($490) {
               $T$0$lcssa$i = $487;
               break L197;
              } else {
               $K12$029$i = $485;$T$028$i = $487;
              }
             }
             $494 = HEAP32[(3196)>>2]|0;
             $495 = ($$lcssa232>>>0)<($494>>>0);
             if ($495) {
              _abort();
              // unreachable;
             } else {
              HEAP32[$$lcssa232>>2] = $348;
              $$sum11$i = (($246) + 24)|0;
              $496 = (($v$3$lcssa$i) + ($$sum11$i)|0);
              HEAP32[$496>>2] = $T$028$i$lcssa;
              $$sum12$i = (($246) + 12)|0;
              $497 = (($v$3$lcssa$i) + ($$sum12$i)|0);
              HEAP32[$497>>2] = $348;
              $$sum13$i = (($246) + 8)|0;
              $498 = (($v$3$lcssa$i) + ($$sum13$i)|0);
              HEAP32[$498>>2] = $348;
              break L179;
             }
            }
           } while(0);
           $499 = ((($T$0$lcssa$i)) + 8|0);
           $500 = HEAP32[$499>>2]|0;
           $501 = HEAP32[(3196)>>2]|0;
           $502 = ($500>>>0)>=($501>>>0);
           $not$$i = ($T$0$lcssa$i>>>0)>=($501>>>0);
           $503 = $502 & $not$$i;
           if ($503) {
            $504 = ((($500)) + 12|0);
            HEAP32[$504>>2] = $348;
            HEAP32[$499>>2] = $348;
            $$sum8$i = (($246) + 8)|0;
            $505 = (($v$3$lcssa$i) + ($$sum8$i)|0);
            HEAP32[$505>>2] = $500;
            $$sum9$i = (($246) + 12)|0;
            $506 = (($v$3$lcssa$i) + ($$sum9$i)|0);
            HEAP32[$506>>2] = $T$0$lcssa$i;
            $$sum10$i = (($246) + 24)|0;
            $507 = (($v$3$lcssa$i) + ($$sum10$i)|0);
            HEAP32[$507>>2] = 0;
            break;
           } else {
            _abort();
            // unreachable;
           }
          }
         } while(0);
         $508 = ((($v$3$lcssa$i)) + 8|0);
         $mem$0 = $508;
         break;
        }
       }
       _abort();
       // unreachable;
      } else {
       $nb$0 = $246;
       label = 154;
      }
     }
    }
   }
  }
 } while(0);
 L212: do {
  if ((label|0) == 154) {
   $509 = HEAP32[(3188)>>2]|0;
   $510 = ($509>>>0)<($nb$0>>>0);
   if (!($510)) {
    $511 = (($509) - ($nb$0))|0;
    $512 = HEAP32[(3200)>>2]|0;
    $513 = ($511>>>0)>(15);
    if ($513) {
     $514 = (($512) + ($nb$0)|0);
     HEAP32[(3200)>>2] = $514;
     HEAP32[(3188)>>2] = $511;
     $515 = $511 | 1;
     $$sum2 = (($nb$0) + 4)|0;
     $516 = (($512) + ($$sum2)|0);
     HEAP32[$516>>2] = $515;
     $517 = (($512) + ($509)|0);
     HEAP32[$517>>2] = $511;
     $518 = $nb$0 | 3;
     $519 = ((($512)) + 4|0);
     HEAP32[$519>>2] = $518;
    } else {
     HEAP32[(3188)>>2] = 0;
     HEAP32[(3200)>>2] = 0;
     $520 = $509 | 3;
     $521 = ((($512)) + 4|0);
     HEAP32[$521>>2] = $520;
     $$sum1 = (($509) + 4)|0;
     $522 = (($512) + ($$sum1)|0);
     $523 = HEAP32[$522>>2]|0;
     $524 = $523 | 1;
     HEAP32[$522>>2] = $524;
    }
    $525 = ((($512)) + 8|0);
    $mem$0 = $525;
    break;
   }
   $526 = HEAP32[(3192)>>2]|0;
   $527 = ($526>>>0)>($nb$0>>>0);
   if ($527) {
    $528 = (($526) - ($nb$0))|0;
    HEAP32[(3192)>>2] = $528;
    $529 = HEAP32[(3204)>>2]|0;
    $530 = (($529) + ($nb$0)|0);
    HEAP32[(3204)>>2] = $530;
    $531 = $528 | 1;
    $$sum = (($nb$0) + 4)|0;
    $532 = (($529) + ($$sum)|0);
    HEAP32[$532>>2] = $531;
    $533 = $nb$0 | 3;
    $534 = ((($529)) + 4|0);
    HEAP32[$534>>2] = $533;
    $535 = ((($529)) + 8|0);
    $mem$0 = $535;
    break;
   }
   $536 = HEAP32[3652>>2]|0;
   $537 = ($536|0)==(0);
   if ($537) {
    _init_mparams();
   }
   $538 = (($nb$0) + 48)|0;
   $539 = HEAP32[(3660)>>2]|0;
   $540 = (($nb$0) + 47)|0;
   $541 = (($539) + ($540))|0;
   $542 = (0 - ($539))|0;
   $543 = $541 & $542;
   $544 = ($543>>>0)>($nb$0>>>0);
   if ($544) {
    $545 = HEAP32[(3620)>>2]|0;
    $546 = ($545|0)==(0);
    if (!($546)) {
     $547 = HEAP32[(3612)>>2]|0;
     $548 = (($547) + ($543))|0;
     $549 = ($548>>>0)<=($547>>>0);
     $550 = ($548>>>0)>($545>>>0);
     $or$cond1$i = $549 | $550;
     if ($or$cond1$i) {
      $mem$0 = 0;
      break;
     }
    }
    $551 = HEAP32[(3624)>>2]|0;
    $552 = $551 & 4;
    $553 = ($552|0)==(0);
    L231: do {
     if ($553) {
      $554 = HEAP32[(3204)>>2]|0;
      $555 = ($554|0)==(0|0);
      L233: do {
       if ($555) {
        label = 172;
       } else {
        $sp$0$i$i = (3628);
        while(1) {
         $556 = HEAP32[$sp$0$i$i>>2]|0;
         $557 = ($556>>>0)>($554>>>0);
         if (!($557)) {
          $558 = ((($sp$0$i$i)) + 4|0);
          $559 = HEAP32[$558>>2]|0;
          $560 = (($556) + ($559)|0);
          $561 = ($560>>>0)>($554>>>0);
          if ($561) {
           $$lcssa228 = $sp$0$i$i;$$lcssa230 = $558;
           break;
          }
         }
         $562 = ((($sp$0$i$i)) + 8|0);
         $563 = HEAP32[$562>>2]|0;
         $564 = ($563|0)==(0|0);
         if ($564) {
          label = 172;
          break L233;
         } else {
          $sp$0$i$i = $563;
         }
        }
        $587 = HEAP32[(3192)>>2]|0;
        $588 = (($541) - ($587))|0;
        $589 = $588 & $542;
        $590 = ($589>>>0)<(2147483647);
        if ($590) {
         $591 = (_sbrk(($589|0))|0);
         $592 = HEAP32[$$lcssa228>>2]|0;
         $593 = HEAP32[$$lcssa230>>2]|0;
         $594 = (($592) + ($593)|0);
         $595 = ($591|0)==($594|0);
         $$3$i = $595 ? $589 : 0;
         if ($595) {
          $596 = ($591|0)==((-1)|0);
          if ($596) {
           $tsize$0323944$i = $$3$i;
          } else {
           $tbase$255$i = $591;$tsize$254$i = $$3$i;
           label = 192;
           break L231;
          }
         } else {
          $br$0$ph$i = $591;$ssize$1$ph$i = $589;$tsize$0$ph$i = $$3$i;
          label = 182;
         }
        } else {
         $tsize$0323944$i = 0;
        }
       }
      } while(0);
      do {
       if ((label|0) == 172) {
        $565 = (_sbrk(0)|0);
        $566 = ($565|0)==((-1)|0);
        if ($566) {
         $tsize$0323944$i = 0;
        } else {
         $567 = $565;
         $568 = HEAP32[(3656)>>2]|0;
         $569 = (($568) + -1)|0;
         $570 = $569 & $567;
         $571 = ($570|0)==(0);
         if ($571) {
          $ssize$0$i = $543;
         } else {
          $572 = (($569) + ($567))|0;
          $573 = (0 - ($568))|0;
          $574 = $572 & $573;
          $575 = (($543) - ($567))|0;
          $576 = (($575) + ($574))|0;
          $ssize$0$i = $576;
         }
         $577 = HEAP32[(3612)>>2]|0;
         $578 = (($577) + ($ssize$0$i))|0;
         $579 = ($ssize$0$i>>>0)>($nb$0>>>0);
         $580 = ($ssize$0$i>>>0)<(2147483647);
         $or$cond$i30 = $579 & $580;
         if ($or$cond$i30) {
          $581 = HEAP32[(3620)>>2]|0;
          $582 = ($581|0)==(0);
          if (!($582)) {
           $583 = ($578>>>0)<=($577>>>0);
           $584 = ($578>>>0)>($581>>>0);
           $or$cond2$i = $583 | $584;
           if ($or$cond2$i) {
            $tsize$0323944$i = 0;
            break;
           }
          }
          $585 = (_sbrk(($ssize$0$i|0))|0);
          $586 = ($585|0)==($565|0);
          $ssize$0$$i = $586 ? $ssize$0$i : 0;
          if ($586) {
           $tbase$255$i = $565;$tsize$254$i = $ssize$0$$i;
           label = 192;
           break L231;
          } else {
           $br$0$ph$i = $585;$ssize$1$ph$i = $ssize$0$i;$tsize$0$ph$i = $ssize$0$$i;
           label = 182;
          }
         } else {
          $tsize$0323944$i = 0;
         }
        }
       }
      } while(0);
      L253: do {
       if ((label|0) == 182) {
        $597 = (0 - ($ssize$1$ph$i))|0;
        $598 = ($br$0$ph$i|0)!=((-1)|0);
        $599 = ($ssize$1$ph$i>>>0)<(2147483647);
        $or$cond5$i = $599 & $598;
        $600 = ($538>>>0)>($ssize$1$ph$i>>>0);
        $or$cond6$i = $600 & $or$cond5$i;
        do {
         if ($or$cond6$i) {
          $601 = HEAP32[(3660)>>2]|0;
          $602 = (($540) - ($ssize$1$ph$i))|0;
          $603 = (($602) + ($601))|0;
          $604 = (0 - ($601))|0;
          $605 = $603 & $604;
          $606 = ($605>>>0)<(2147483647);
          if ($606) {
           $607 = (_sbrk(($605|0))|0);
           $608 = ($607|0)==((-1)|0);
           if ($608) {
            (_sbrk(($597|0))|0);
            $tsize$0323944$i = $tsize$0$ph$i;
            break L253;
           } else {
            $609 = (($605) + ($ssize$1$ph$i))|0;
            $ssize$2$i = $609;
            break;
           }
          } else {
           $ssize$2$i = $ssize$1$ph$i;
          }
         } else {
          $ssize$2$i = $ssize$1$ph$i;
         }
        } while(0);
        $610 = ($br$0$ph$i|0)==((-1)|0);
        if ($610) {
         $tsize$0323944$i = $tsize$0$ph$i;
        } else {
         $tbase$255$i = $br$0$ph$i;$tsize$254$i = $ssize$2$i;
         label = 192;
         break L231;
        }
       }
      } while(0);
      $611 = HEAP32[(3624)>>2]|0;
      $612 = $611 | 4;
      HEAP32[(3624)>>2] = $612;
      $tsize$1$i = $tsize$0323944$i;
      label = 189;
     } else {
      $tsize$1$i = 0;
      label = 189;
     }
    } while(0);
    if ((label|0) == 189) {
     $613 = ($543>>>0)<(2147483647);
     if ($613) {
      $614 = (_sbrk(($543|0))|0);
      $615 = (_sbrk(0)|0);
      $616 = ($614|0)!=((-1)|0);
      $617 = ($615|0)!=((-1)|0);
      $or$cond3$i = $616 & $617;
      $618 = ($614>>>0)<($615>>>0);
      $or$cond8$i = $618 & $or$cond3$i;
      if ($or$cond8$i) {
       $619 = $615;
       $620 = $614;
       $621 = (($619) - ($620))|0;
       $622 = (($nb$0) + 40)|0;
       $623 = ($621>>>0)>($622>>>0);
       $$tsize$1$i = $623 ? $621 : $tsize$1$i;
       if ($623) {
        $tbase$255$i = $614;$tsize$254$i = $$tsize$1$i;
        label = 192;
       }
      }
     }
    }
    if ((label|0) == 192) {
     $624 = HEAP32[(3612)>>2]|0;
     $625 = (($624) + ($tsize$254$i))|0;
     HEAP32[(3612)>>2] = $625;
     $626 = HEAP32[(3616)>>2]|0;
     $627 = ($625>>>0)>($626>>>0);
     if ($627) {
      HEAP32[(3616)>>2] = $625;
     }
     $628 = HEAP32[(3204)>>2]|0;
     $629 = ($628|0)==(0|0);
     L272: do {
      if ($629) {
       $630 = HEAP32[(3196)>>2]|0;
       $631 = ($630|0)==(0|0);
       $632 = ($tbase$255$i>>>0)<($630>>>0);
       $or$cond9$i = $631 | $632;
       if ($or$cond9$i) {
        HEAP32[(3196)>>2] = $tbase$255$i;
       }
       HEAP32[(3628)>>2] = $tbase$255$i;
       HEAP32[(3632)>>2] = $tsize$254$i;
       HEAP32[(3640)>>2] = 0;
       $633 = HEAP32[3652>>2]|0;
       HEAP32[(3216)>>2] = $633;
       HEAP32[(3212)>>2] = -1;
       $i$02$i$i = 0;
       while(1) {
        $634 = $i$02$i$i << 1;
        $635 = (3220 + ($634<<2)|0);
        $$sum$i13$i = (($634) + 3)|0;
        $636 = (3220 + ($$sum$i13$i<<2)|0);
        HEAP32[$636>>2] = $635;
        $$sum1$i14$i = (($634) + 2)|0;
        $637 = (3220 + ($$sum1$i14$i<<2)|0);
        HEAP32[$637>>2] = $635;
        $638 = (($i$02$i$i) + 1)|0;
        $exitcond$i$i = ($638|0)==(32);
        if ($exitcond$i$i) {
         break;
        } else {
         $i$02$i$i = $638;
        }
       }
       $639 = (($tsize$254$i) + -40)|0;
       $640 = ((($tbase$255$i)) + 8|0);
       $641 = $640;
       $642 = $641 & 7;
       $643 = ($642|0)==(0);
       $644 = (0 - ($641))|0;
       $645 = $644 & 7;
       $646 = $643 ? 0 : $645;
       $647 = (($tbase$255$i) + ($646)|0);
       $648 = (($639) - ($646))|0;
       HEAP32[(3204)>>2] = $647;
       HEAP32[(3192)>>2] = $648;
       $649 = $648 | 1;
       $$sum$i15$i = (($646) + 4)|0;
       $650 = (($tbase$255$i) + ($$sum$i15$i)|0);
       HEAP32[$650>>2] = $649;
       $$sum2$i16$i = (($tsize$254$i) + -36)|0;
       $651 = (($tbase$255$i) + ($$sum2$i16$i)|0);
       HEAP32[$651>>2] = 40;
       $652 = HEAP32[(3668)>>2]|0;
       HEAP32[(3208)>>2] = $652;
      } else {
       $sp$084$i = (3628);
       while(1) {
        $653 = HEAP32[$sp$084$i>>2]|0;
        $654 = ((($sp$084$i)) + 4|0);
        $655 = HEAP32[$654>>2]|0;
        $656 = (($653) + ($655)|0);
        $657 = ($tbase$255$i|0)==($656|0);
        if ($657) {
         $$lcssa222 = $653;$$lcssa224 = $654;$$lcssa226 = $655;$sp$084$i$lcssa = $sp$084$i;
         label = 202;
         break;
        }
        $658 = ((($sp$084$i)) + 8|0);
        $659 = HEAP32[$658>>2]|0;
        $660 = ($659|0)==(0|0);
        if ($660) {
         break;
        } else {
         $sp$084$i = $659;
        }
       }
       if ((label|0) == 202) {
        $661 = ((($sp$084$i$lcssa)) + 12|0);
        $662 = HEAP32[$661>>2]|0;
        $663 = $662 & 8;
        $664 = ($663|0)==(0);
        if ($664) {
         $665 = ($628>>>0)>=($$lcssa222>>>0);
         $666 = ($628>>>0)<($tbase$255$i>>>0);
         $or$cond57$i = $666 & $665;
         if ($or$cond57$i) {
          $667 = (($$lcssa226) + ($tsize$254$i))|0;
          HEAP32[$$lcssa224>>2] = $667;
          $668 = HEAP32[(3192)>>2]|0;
          $669 = (($668) + ($tsize$254$i))|0;
          $670 = ((($628)) + 8|0);
          $671 = $670;
          $672 = $671 & 7;
          $673 = ($672|0)==(0);
          $674 = (0 - ($671))|0;
          $675 = $674 & 7;
          $676 = $673 ? 0 : $675;
          $677 = (($628) + ($676)|0);
          $678 = (($669) - ($676))|0;
          HEAP32[(3204)>>2] = $677;
          HEAP32[(3192)>>2] = $678;
          $679 = $678 | 1;
          $$sum$i17$i = (($676) + 4)|0;
          $680 = (($628) + ($$sum$i17$i)|0);
          HEAP32[$680>>2] = $679;
          $$sum2$i18$i = (($669) + 4)|0;
          $681 = (($628) + ($$sum2$i18$i)|0);
          HEAP32[$681>>2] = 40;
          $682 = HEAP32[(3668)>>2]|0;
          HEAP32[(3208)>>2] = $682;
          break;
         }
        }
       }
       $683 = HEAP32[(3196)>>2]|0;
       $684 = ($tbase$255$i>>>0)<($683>>>0);
       if ($684) {
        HEAP32[(3196)>>2] = $tbase$255$i;
        $748 = $tbase$255$i;
       } else {
        $748 = $683;
       }
       $685 = (($tbase$255$i) + ($tsize$254$i)|0);
       $sp$183$i = (3628);
       while(1) {
        $686 = HEAP32[$sp$183$i>>2]|0;
        $687 = ($686|0)==($685|0);
        if ($687) {
         $$lcssa219 = $sp$183$i;$sp$183$i$lcssa = $sp$183$i;
         label = 210;
         break;
        }
        $688 = ((($sp$183$i)) + 8|0);
        $689 = HEAP32[$688>>2]|0;
        $690 = ($689|0)==(0|0);
        if ($690) {
         $sp$0$i$i$i = (3628);
         break;
        } else {
         $sp$183$i = $689;
        }
       }
       if ((label|0) == 210) {
        $691 = ((($sp$183$i$lcssa)) + 12|0);
        $692 = HEAP32[$691>>2]|0;
        $693 = $692 & 8;
        $694 = ($693|0)==(0);
        if ($694) {
         HEAP32[$$lcssa219>>2] = $tbase$255$i;
         $695 = ((($sp$183$i$lcssa)) + 4|0);
         $696 = HEAP32[$695>>2]|0;
         $697 = (($696) + ($tsize$254$i))|0;
         HEAP32[$695>>2] = $697;
         $698 = ((($tbase$255$i)) + 8|0);
         $699 = $698;
         $700 = $699 & 7;
         $701 = ($700|0)==(0);
         $702 = (0 - ($699))|0;
         $703 = $702 & 7;
         $704 = $701 ? 0 : $703;
         $705 = (($tbase$255$i) + ($704)|0);
         $$sum112$i = (($tsize$254$i) + 8)|0;
         $706 = (($tbase$255$i) + ($$sum112$i)|0);
         $707 = $706;
         $708 = $707 & 7;
         $709 = ($708|0)==(0);
         $710 = (0 - ($707))|0;
         $711 = $710 & 7;
         $712 = $709 ? 0 : $711;
         $$sum113$i = (($712) + ($tsize$254$i))|0;
         $713 = (($tbase$255$i) + ($$sum113$i)|0);
         $714 = $713;
         $715 = $705;
         $716 = (($714) - ($715))|0;
         $$sum$i19$i = (($704) + ($nb$0))|0;
         $717 = (($tbase$255$i) + ($$sum$i19$i)|0);
         $718 = (($716) - ($nb$0))|0;
         $719 = $nb$0 | 3;
         $$sum1$i20$i = (($704) + 4)|0;
         $720 = (($tbase$255$i) + ($$sum1$i20$i)|0);
         HEAP32[$720>>2] = $719;
         $721 = ($713|0)==($628|0);
         L297: do {
          if ($721) {
           $722 = HEAP32[(3192)>>2]|0;
           $723 = (($722) + ($718))|0;
           HEAP32[(3192)>>2] = $723;
           HEAP32[(3204)>>2] = $717;
           $724 = $723 | 1;
           $$sum42$i$i = (($$sum$i19$i) + 4)|0;
           $725 = (($tbase$255$i) + ($$sum42$i$i)|0);
           HEAP32[$725>>2] = $724;
          } else {
           $726 = HEAP32[(3200)>>2]|0;
           $727 = ($713|0)==($726|0);
           if ($727) {
            $728 = HEAP32[(3188)>>2]|0;
            $729 = (($728) + ($718))|0;
            HEAP32[(3188)>>2] = $729;
            HEAP32[(3200)>>2] = $717;
            $730 = $729 | 1;
            $$sum40$i$i = (($$sum$i19$i) + 4)|0;
            $731 = (($tbase$255$i) + ($$sum40$i$i)|0);
            HEAP32[$731>>2] = $730;
            $$sum41$i$i = (($729) + ($$sum$i19$i))|0;
            $732 = (($tbase$255$i) + ($$sum41$i$i)|0);
            HEAP32[$732>>2] = $729;
            break;
           }
           $$sum2$i21$i = (($tsize$254$i) + 4)|0;
           $$sum114$i = (($$sum2$i21$i) + ($712))|0;
           $733 = (($tbase$255$i) + ($$sum114$i)|0);
           $734 = HEAP32[$733>>2]|0;
           $735 = $734 & 3;
           $736 = ($735|0)==(1);
           if ($736) {
            $737 = $734 & -8;
            $738 = $734 >>> 3;
            $739 = ($734>>>0)<(256);
            L305: do {
             if ($739) {
              $$sum3738$i$i = $712 | 8;
              $$sum124$i = (($$sum3738$i$i) + ($tsize$254$i))|0;
              $740 = (($tbase$255$i) + ($$sum124$i)|0);
              $741 = HEAP32[$740>>2]|0;
              $$sum39$i$i = (($tsize$254$i) + 12)|0;
              $$sum125$i = (($$sum39$i$i) + ($712))|0;
              $742 = (($tbase$255$i) + ($$sum125$i)|0);
              $743 = HEAP32[$742>>2]|0;
              $744 = $738 << 1;
              $745 = (3220 + ($744<<2)|0);
              $746 = ($741|0)==($745|0);
              do {
               if (!($746)) {
                $747 = ($741>>>0)<($748>>>0);
                if (!($747)) {
                 $749 = ((($741)) + 12|0);
                 $750 = HEAP32[$749>>2]|0;
                 $751 = ($750|0)==($713|0);
                 if ($751) {
                  break;
                 }
                }
                _abort();
                // unreachable;
               }
              } while(0);
              $752 = ($743|0)==($741|0);
              if ($752) {
               $753 = 1 << $738;
               $754 = $753 ^ -1;
               $755 = HEAP32[3180>>2]|0;
               $756 = $755 & $754;
               HEAP32[3180>>2] = $756;
               break;
              }
              $757 = ($743|0)==($745|0);
              do {
               if ($757) {
                $$pre57$i$i = ((($743)) + 8|0);
                $$pre$phi58$i$iZ2D = $$pre57$i$i;
               } else {
                $758 = ($743>>>0)<($748>>>0);
                if (!($758)) {
                 $759 = ((($743)) + 8|0);
                 $760 = HEAP32[$759>>2]|0;
                 $761 = ($760|0)==($713|0);
                 if ($761) {
                  $$pre$phi58$i$iZ2D = $759;
                  break;
                 }
                }
                _abort();
                // unreachable;
               }
              } while(0);
              $762 = ((($741)) + 12|0);
              HEAP32[$762>>2] = $743;
              HEAP32[$$pre$phi58$i$iZ2D>>2] = $741;
             } else {
              $$sum34$i$i = $712 | 24;
              $$sum115$i = (($$sum34$i$i) + ($tsize$254$i))|0;
              $763 = (($tbase$255$i) + ($$sum115$i)|0);
              $764 = HEAP32[$763>>2]|0;
              $$sum5$i$i = (($tsize$254$i) + 12)|0;
              $$sum116$i = (($$sum5$i$i) + ($712))|0;
              $765 = (($tbase$255$i) + ($$sum116$i)|0);
              $766 = HEAP32[$765>>2]|0;
              $767 = ($766|0)==($713|0);
              L324: do {
               if ($767) {
                $$sum67$i$i = $712 | 16;
                $$sum122$i = (($$sum2$i21$i) + ($$sum67$i$i))|0;
                $777 = (($tbase$255$i) + ($$sum122$i)|0);
                $778 = HEAP32[$777>>2]|0;
                $779 = ($778|0)==(0|0);
                if ($779) {
                 $$sum123$i = (($$sum67$i$i) + ($tsize$254$i))|0;
                 $780 = (($tbase$255$i) + ($$sum123$i)|0);
                 $781 = HEAP32[$780>>2]|0;
                 $782 = ($781|0)==(0|0);
                 if ($782) {
                  $R$1$i$i = 0;
                  break;
                 } else {
                  $R$0$i$i = $781;$RP$0$i$i = $780;
                 }
                } else {
                 $R$0$i$i = $778;$RP$0$i$i = $777;
                }
                while(1) {
                 $783 = ((($R$0$i$i)) + 20|0);
                 $784 = HEAP32[$783>>2]|0;
                 $785 = ($784|0)==(0|0);
                 if (!($785)) {
                  $R$0$i$i = $784;$RP$0$i$i = $783;
                  continue;
                 }
                 $786 = ((($R$0$i$i)) + 16|0);
                 $787 = HEAP32[$786>>2]|0;
                 $788 = ($787|0)==(0|0);
                 if ($788) {
                  $R$0$i$i$lcssa = $R$0$i$i;$RP$0$i$i$lcssa = $RP$0$i$i;
                  break;
                 } else {
                  $R$0$i$i = $787;$RP$0$i$i = $786;
                 }
                }
                $789 = ($RP$0$i$i$lcssa>>>0)<($748>>>0);
                if ($789) {
                 _abort();
                 // unreachable;
                } else {
                 HEAP32[$RP$0$i$i$lcssa>>2] = 0;
                 $R$1$i$i = $R$0$i$i$lcssa;
                 break;
                }
               } else {
                $$sum3536$i$i = $712 | 8;
                $$sum117$i = (($$sum3536$i$i) + ($tsize$254$i))|0;
                $768 = (($tbase$255$i) + ($$sum117$i)|0);
                $769 = HEAP32[$768>>2]|0;
                $770 = ($769>>>0)<($748>>>0);
                do {
                 if (!($770)) {
                  $771 = ((($769)) + 12|0);
                  $772 = HEAP32[$771>>2]|0;
                  $773 = ($772|0)==($713|0);
                  if (!($773)) {
                   break;
                  }
                  $774 = ((($766)) + 8|0);
                  $775 = HEAP32[$774>>2]|0;
                  $776 = ($775|0)==($713|0);
                  if (!($776)) {
                   break;
                  }
                  HEAP32[$771>>2] = $766;
                  HEAP32[$774>>2] = $769;
                  $R$1$i$i = $766;
                  break L324;
                 }
                } while(0);
                _abort();
                // unreachable;
               }
              } while(0);
              $790 = ($764|0)==(0|0);
              if ($790) {
               break;
              }
              $$sum30$i$i = (($tsize$254$i) + 28)|0;
              $$sum118$i = (($$sum30$i$i) + ($712))|0;
              $791 = (($tbase$255$i) + ($$sum118$i)|0);
              $792 = HEAP32[$791>>2]|0;
              $793 = (3484 + ($792<<2)|0);
              $794 = HEAP32[$793>>2]|0;
              $795 = ($713|0)==($794|0);
              do {
               if ($795) {
                HEAP32[$793>>2] = $R$1$i$i;
                $cond$i$i = ($R$1$i$i|0)==(0|0);
                if (!($cond$i$i)) {
                 break;
                }
                $796 = 1 << $792;
                $797 = $796 ^ -1;
                $798 = HEAP32[(3184)>>2]|0;
                $799 = $798 & $797;
                HEAP32[(3184)>>2] = $799;
                break L305;
               } else {
                $800 = HEAP32[(3196)>>2]|0;
                $801 = ($764>>>0)<($800>>>0);
                if ($801) {
                 _abort();
                 // unreachable;
                }
                $802 = ((($764)) + 16|0);
                $803 = HEAP32[$802>>2]|0;
                $804 = ($803|0)==($713|0);
                if ($804) {
                 HEAP32[$802>>2] = $R$1$i$i;
                } else {
                 $805 = ((($764)) + 20|0);
                 HEAP32[$805>>2] = $R$1$i$i;
                }
                $806 = ($R$1$i$i|0)==(0|0);
                if ($806) {
                 break L305;
                }
               }
              } while(0);
              $807 = HEAP32[(3196)>>2]|0;
              $808 = ($R$1$i$i>>>0)<($807>>>0);
              if ($808) {
               _abort();
               // unreachable;
              }
              $809 = ((($R$1$i$i)) + 24|0);
              HEAP32[$809>>2] = $764;
              $$sum3132$i$i = $712 | 16;
              $$sum119$i = (($$sum3132$i$i) + ($tsize$254$i))|0;
              $810 = (($tbase$255$i) + ($$sum119$i)|0);
              $811 = HEAP32[$810>>2]|0;
              $812 = ($811|0)==(0|0);
              do {
               if (!($812)) {
                $813 = ($811>>>0)<($807>>>0);
                if ($813) {
                 _abort();
                 // unreachable;
                } else {
                 $814 = ((($R$1$i$i)) + 16|0);
                 HEAP32[$814>>2] = $811;
                 $815 = ((($811)) + 24|0);
                 HEAP32[$815>>2] = $R$1$i$i;
                 break;
                }
               }
              } while(0);
              $$sum120$i = (($$sum2$i21$i) + ($$sum3132$i$i))|0;
              $816 = (($tbase$255$i) + ($$sum120$i)|0);
              $817 = HEAP32[$816>>2]|0;
              $818 = ($817|0)==(0|0);
              if ($818) {
               break;
              }
              $819 = HEAP32[(3196)>>2]|0;
              $820 = ($817>>>0)<($819>>>0);
              if ($820) {
               _abort();
               // unreachable;
              } else {
               $821 = ((($R$1$i$i)) + 20|0);
               HEAP32[$821>>2] = $817;
               $822 = ((($817)) + 24|0);
               HEAP32[$822>>2] = $R$1$i$i;
               break;
              }
             }
            } while(0);
            $$sum9$i$i = $737 | $712;
            $$sum121$i = (($$sum9$i$i) + ($tsize$254$i))|0;
            $823 = (($tbase$255$i) + ($$sum121$i)|0);
            $824 = (($737) + ($718))|0;
            $oldfirst$0$i$i = $823;$qsize$0$i$i = $824;
           } else {
            $oldfirst$0$i$i = $713;$qsize$0$i$i = $718;
           }
           $825 = ((($oldfirst$0$i$i)) + 4|0);
           $826 = HEAP32[$825>>2]|0;
           $827 = $826 & -2;
           HEAP32[$825>>2] = $827;
           $828 = $qsize$0$i$i | 1;
           $$sum10$i$i = (($$sum$i19$i) + 4)|0;
           $829 = (($tbase$255$i) + ($$sum10$i$i)|0);
           HEAP32[$829>>2] = $828;
           $$sum11$i$i = (($qsize$0$i$i) + ($$sum$i19$i))|0;
           $830 = (($tbase$255$i) + ($$sum11$i$i)|0);
           HEAP32[$830>>2] = $qsize$0$i$i;
           $831 = $qsize$0$i$i >>> 3;
           $832 = ($qsize$0$i$i>>>0)<(256);
           if ($832) {
            $833 = $831 << 1;
            $834 = (3220 + ($833<<2)|0);
            $835 = HEAP32[3180>>2]|0;
            $836 = 1 << $831;
            $837 = $835 & $836;
            $838 = ($837|0)==(0);
            do {
             if ($838) {
              $839 = $835 | $836;
              HEAP32[3180>>2] = $839;
              $$pre$i22$i = (($833) + 2)|0;
              $$pre56$i$i = (3220 + ($$pre$i22$i<<2)|0);
              $$pre$phi$i23$iZ2D = $$pre56$i$i;$F4$0$i$i = $834;
             } else {
              $$sum29$i$i = (($833) + 2)|0;
              $840 = (3220 + ($$sum29$i$i<<2)|0);
              $841 = HEAP32[$840>>2]|0;
              $842 = HEAP32[(3196)>>2]|0;
              $843 = ($841>>>0)<($842>>>0);
              if (!($843)) {
               $$pre$phi$i23$iZ2D = $840;$F4$0$i$i = $841;
               break;
              }
              _abort();
              // unreachable;
             }
            } while(0);
            HEAP32[$$pre$phi$i23$iZ2D>>2] = $717;
            $844 = ((($F4$0$i$i)) + 12|0);
            HEAP32[$844>>2] = $717;
            $$sum27$i$i = (($$sum$i19$i) + 8)|0;
            $845 = (($tbase$255$i) + ($$sum27$i$i)|0);
            HEAP32[$845>>2] = $F4$0$i$i;
            $$sum28$i$i = (($$sum$i19$i) + 12)|0;
            $846 = (($tbase$255$i) + ($$sum28$i$i)|0);
            HEAP32[$846>>2] = $834;
            break;
           }
           $847 = $qsize$0$i$i >>> 8;
           $848 = ($847|0)==(0);
           do {
            if ($848) {
             $I7$0$i$i = 0;
            } else {
             $849 = ($qsize$0$i$i>>>0)>(16777215);
             if ($849) {
              $I7$0$i$i = 31;
              break;
             }
             $850 = (($847) + 1048320)|0;
             $851 = $850 >>> 16;
             $852 = $851 & 8;
             $853 = $847 << $852;
             $854 = (($853) + 520192)|0;
             $855 = $854 >>> 16;
             $856 = $855 & 4;
             $857 = $856 | $852;
             $858 = $853 << $856;
             $859 = (($858) + 245760)|0;
             $860 = $859 >>> 16;
             $861 = $860 & 2;
             $862 = $857 | $861;
             $863 = (14 - ($862))|0;
             $864 = $858 << $861;
             $865 = $864 >>> 15;
             $866 = (($863) + ($865))|0;
             $867 = $866 << 1;
             $868 = (($866) + 7)|0;
             $869 = $qsize$0$i$i >>> $868;
             $870 = $869 & 1;
             $871 = $870 | $867;
             $I7$0$i$i = $871;
            }
           } while(0);
           $872 = (3484 + ($I7$0$i$i<<2)|0);
           $$sum12$i$i = (($$sum$i19$i) + 28)|0;
           $873 = (($tbase$255$i) + ($$sum12$i$i)|0);
           HEAP32[$873>>2] = $I7$0$i$i;
           $$sum13$i$i = (($$sum$i19$i) + 16)|0;
           $874 = (($tbase$255$i) + ($$sum13$i$i)|0);
           $$sum14$i$i = (($$sum$i19$i) + 20)|0;
           $875 = (($tbase$255$i) + ($$sum14$i$i)|0);
           HEAP32[$875>>2] = 0;
           HEAP32[$874>>2] = 0;
           $876 = HEAP32[(3184)>>2]|0;
           $877 = 1 << $I7$0$i$i;
           $878 = $876 & $877;
           $879 = ($878|0)==(0);
           if ($879) {
            $880 = $876 | $877;
            HEAP32[(3184)>>2] = $880;
            HEAP32[$872>>2] = $717;
            $$sum15$i$i = (($$sum$i19$i) + 24)|0;
            $881 = (($tbase$255$i) + ($$sum15$i$i)|0);
            HEAP32[$881>>2] = $872;
            $$sum16$i$i = (($$sum$i19$i) + 12)|0;
            $882 = (($tbase$255$i) + ($$sum16$i$i)|0);
            HEAP32[$882>>2] = $717;
            $$sum17$i$i = (($$sum$i19$i) + 8)|0;
            $883 = (($tbase$255$i) + ($$sum17$i$i)|0);
            HEAP32[$883>>2] = $717;
            break;
           }
           $884 = HEAP32[$872>>2]|0;
           $885 = ((($884)) + 4|0);
           $886 = HEAP32[$885>>2]|0;
           $887 = $886 & -8;
           $888 = ($887|0)==($qsize$0$i$i|0);
           L385: do {
            if ($888) {
             $T$0$lcssa$i25$i = $884;
            } else {
             $889 = ($I7$0$i$i|0)==(31);
             $890 = $I7$0$i$i >>> 1;
             $891 = (25 - ($890))|0;
             $892 = $889 ? 0 : $891;
             $893 = $qsize$0$i$i << $892;
             $K8$051$i$i = $893;$T$050$i$i = $884;
             while(1) {
              $900 = $K8$051$i$i >>> 31;
              $901 = (((($T$050$i$i)) + 16|0) + ($900<<2)|0);
              $896 = HEAP32[$901>>2]|0;
              $902 = ($896|0)==(0|0);
              if ($902) {
               $$lcssa = $901;$T$050$i$i$lcssa = $T$050$i$i;
               break;
              }
              $894 = $K8$051$i$i << 1;
              $895 = ((($896)) + 4|0);
              $897 = HEAP32[$895>>2]|0;
              $898 = $897 & -8;
              $899 = ($898|0)==($qsize$0$i$i|0);
              if ($899) {
               $T$0$lcssa$i25$i = $896;
               break L385;
              } else {
               $K8$051$i$i = $894;$T$050$i$i = $896;
              }
             }
             $903 = HEAP32[(3196)>>2]|0;
             $904 = ($$lcssa>>>0)<($903>>>0);
             if ($904) {
              _abort();
              // unreachable;
             } else {
              HEAP32[$$lcssa>>2] = $717;
              $$sum23$i$i = (($$sum$i19$i) + 24)|0;
              $905 = (($tbase$255$i) + ($$sum23$i$i)|0);
              HEAP32[$905>>2] = $T$050$i$i$lcssa;
              $$sum24$i$i = (($$sum$i19$i) + 12)|0;
              $906 = (($tbase$255$i) + ($$sum24$i$i)|0);
              HEAP32[$906>>2] = $717;
              $$sum25$i$i = (($$sum$i19$i) + 8)|0;
              $907 = (($tbase$255$i) + ($$sum25$i$i)|0);
              HEAP32[$907>>2] = $717;
              break L297;
             }
            }
           } while(0);
           $908 = ((($T$0$lcssa$i25$i)) + 8|0);
           $909 = HEAP32[$908>>2]|0;
           $910 = HEAP32[(3196)>>2]|0;
           $911 = ($909>>>0)>=($910>>>0);
           $not$$i26$i = ($T$0$lcssa$i25$i>>>0)>=($910>>>0);
           $912 = $911 & $not$$i26$i;
           if ($912) {
            $913 = ((($909)) + 12|0);
            HEAP32[$913>>2] = $717;
            HEAP32[$908>>2] = $717;
            $$sum20$i$i = (($$sum$i19$i) + 8)|0;
            $914 = (($tbase$255$i) + ($$sum20$i$i)|0);
            HEAP32[$914>>2] = $909;
            $$sum21$i$i = (($$sum$i19$i) + 12)|0;
            $915 = (($tbase$255$i) + ($$sum21$i$i)|0);
            HEAP32[$915>>2] = $T$0$lcssa$i25$i;
            $$sum22$i$i = (($$sum$i19$i) + 24)|0;
            $916 = (($tbase$255$i) + ($$sum22$i$i)|0);
            HEAP32[$916>>2] = 0;
            break;
           } else {
            _abort();
            // unreachable;
           }
          }
         } while(0);
         $$sum1819$i$i = $704 | 8;
         $917 = (($tbase$255$i) + ($$sum1819$i$i)|0);
         $mem$0 = $917;
         break L212;
        } else {
         $sp$0$i$i$i = (3628);
        }
       }
       while(1) {
        $918 = HEAP32[$sp$0$i$i$i>>2]|0;
        $919 = ($918>>>0)>($628>>>0);
        if (!($919)) {
         $920 = ((($sp$0$i$i$i)) + 4|0);
         $921 = HEAP32[$920>>2]|0;
         $922 = (($918) + ($921)|0);
         $923 = ($922>>>0)>($628>>>0);
         if ($923) {
          $$lcssa215 = $918;$$lcssa216 = $921;$$lcssa217 = $922;
          break;
         }
        }
        $924 = ((($sp$0$i$i$i)) + 8|0);
        $925 = HEAP32[$924>>2]|0;
        $sp$0$i$i$i = $925;
       }
       $$sum$i$i = (($$lcssa216) + -47)|0;
       $$sum1$i$i = (($$lcssa216) + -39)|0;
       $926 = (($$lcssa215) + ($$sum1$i$i)|0);
       $927 = $926;
       $928 = $927 & 7;
       $929 = ($928|0)==(0);
       $930 = (0 - ($927))|0;
       $931 = $930 & 7;
       $932 = $929 ? 0 : $931;
       $$sum2$i$i = (($$sum$i$i) + ($932))|0;
       $933 = (($$lcssa215) + ($$sum2$i$i)|0);
       $934 = ((($628)) + 16|0);
       $935 = ($933>>>0)<($934>>>0);
       $936 = $935 ? $628 : $933;
       $937 = ((($936)) + 8|0);
       $938 = (($tsize$254$i) + -40)|0;
       $939 = ((($tbase$255$i)) + 8|0);
       $940 = $939;
       $941 = $940 & 7;
       $942 = ($941|0)==(0);
       $943 = (0 - ($940))|0;
       $944 = $943 & 7;
       $945 = $942 ? 0 : $944;
       $946 = (($tbase$255$i) + ($945)|0);
       $947 = (($938) - ($945))|0;
       HEAP32[(3204)>>2] = $946;
       HEAP32[(3192)>>2] = $947;
       $948 = $947 | 1;
       $$sum$i$i$i = (($945) + 4)|0;
       $949 = (($tbase$255$i) + ($$sum$i$i$i)|0);
       HEAP32[$949>>2] = $948;
       $$sum2$i$i$i = (($tsize$254$i) + -36)|0;
       $950 = (($tbase$255$i) + ($$sum2$i$i$i)|0);
       HEAP32[$950>>2] = 40;
       $951 = HEAP32[(3668)>>2]|0;
       HEAP32[(3208)>>2] = $951;
       $952 = ((($936)) + 4|0);
       HEAP32[$952>>2] = 27;
       ;HEAP32[$937>>2]=HEAP32[(3628)>>2]|0;HEAP32[$937+4>>2]=HEAP32[(3628)+4>>2]|0;HEAP32[$937+8>>2]=HEAP32[(3628)+8>>2]|0;HEAP32[$937+12>>2]=HEAP32[(3628)+12>>2]|0;
       HEAP32[(3628)>>2] = $tbase$255$i;
       HEAP32[(3632)>>2] = $tsize$254$i;
       HEAP32[(3640)>>2] = 0;
       HEAP32[(3636)>>2] = $937;
       $953 = ((($936)) + 28|0);
       HEAP32[$953>>2] = 7;
       $954 = ((($936)) + 32|0);
       $955 = ($954>>>0)<($$lcssa217>>>0);
       if ($955) {
        $957 = $953;
        while(1) {
         $956 = ((($957)) + 4|0);
         HEAP32[$956>>2] = 7;
         $958 = ((($957)) + 8|0);
         $959 = ($958>>>0)<($$lcssa217>>>0);
         if ($959) {
          $957 = $956;
         } else {
          break;
         }
        }
       }
       $960 = ($936|0)==($628|0);
       if (!($960)) {
        $961 = $936;
        $962 = $628;
        $963 = (($961) - ($962))|0;
        $964 = HEAP32[$952>>2]|0;
        $965 = $964 & -2;
        HEAP32[$952>>2] = $965;
        $966 = $963 | 1;
        $967 = ((($628)) + 4|0);
        HEAP32[$967>>2] = $966;
        HEAP32[$936>>2] = $963;
        $968 = $963 >>> 3;
        $969 = ($963>>>0)<(256);
        if ($969) {
         $970 = $968 << 1;
         $971 = (3220 + ($970<<2)|0);
         $972 = HEAP32[3180>>2]|0;
         $973 = 1 << $968;
         $974 = $972 & $973;
         $975 = ($974|0)==(0);
         if ($975) {
          $976 = $972 | $973;
          HEAP32[3180>>2] = $976;
          $$pre$i$i = (($970) + 2)|0;
          $$pre14$i$i = (3220 + ($$pre$i$i<<2)|0);
          $$pre$phi$i$iZ2D = $$pre14$i$i;$F$0$i$i = $971;
         } else {
          $$sum4$i$i = (($970) + 2)|0;
          $977 = (3220 + ($$sum4$i$i<<2)|0);
          $978 = HEAP32[$977>>2]|0;
          $979 = HEAP32[(3196)>>2]|0;
          $980 = ($978>>>0)<($979>>>0);
          if ($980) {
           _abort();
           // unreachable;
          } else {
           $$pre$phi$i$iZ2D = $977;$F$0$i$i = $978;
          }
         }
         HEAP32[$$pre$phi$i$iZ2D>>2] = $628;
         $981 = ((($F$0$i$i)) + 12|0);
         HEAP32[$981>>2] = $628;
         $982 = ((($628)) + 8|0);
         HEAP32[$982>>2] = $F$0$i$i;
         $983 = ((($628)) + 12|0);
         HEAP32[$983>>2] = $971;
         break;
        }
        $984 = $963 >>> 8;
        $985 = ($984|0)==(0);
        if ($985) {
         $I1$0$i$i = 0;
        } else {
         $986 = ($963>>>0)>(16777215);
         if ($986) {
          $I1$0$i$i = 31;
         } else {
          $987 = (($984) + 1048320)|0;
          $988 = $987 >>> 16;
          $989 = $988 & 8;
          $990 = $984 << $989;
          $991 = (($990) + 520192)|0;
          $992 = $991 >>> 16;
          $993 = $992 & 4;
          $994 = $993 | $989;
          $995 = $990 << $993;
          $996 = (($995) + 245760)|0;
          $997 = $996 >>> 16;
          $998 = $997 & 2;
          $999 = $994 | $998;
          $1000 = (14 - ($999))|0;
          $1001 = $995 << $998;
          $1002 = $1001 >>> 15;
          $1003 = (($1000) + ($1002))|0;
          $1004 = $1003 << 1;
          $1005 = (($1003) + 7)|0;
          $1006 = $963 >>> $1005;
          $1007 = $1006 & 1;
          $1008 = $1007 | $1004;
          $I1$0$i$i = $1008;
         }
        }
        $1009 = (3484 + ($I1$0$i$i<<2)|0);
        $1010 = ((($628)) + 28|0);
        HEAP32[$1010>>2] = $I1$0$i$i;
        $1011 = ((($628)) + 20|0);
        HEAP32[$1011>>2] = 0;
        HEAP32[$934>>2] = 0;
        $1012 = HEAP32[(3184)>>2]|0;
        $1013 = 1 << $I1$0$i$i;
        $1014 = $1012 & $1013;
        $1015 = ($1014|0)==(0);
        if ($1015) {
         $1016 = $1012 | $1013;
         HEAP32[(3184)>>2] = $1016;
         HEAP32[$1009>>2] = $628;
         $1017 = ((($628)) + 24|0);
         HEAP32[$1017>>2] = $1009;
         $1018 = ((($628)) + 12|0);
         HEAP32[$1018>>2] = $628;
         $1019 = ((($628)) + 8|0);
         HEAP32[$1019>>2] = $628;
         break;
        }
        $1020 = HEAP32[$1009>>2]|0;
        $1021 = ((($1020)) + 4|0);
        $1022 = HEAP32[$1021>>2]|0;
        $1023 = $1022 & -8;
        $1024 = ($1023|0)==($963|0);
        L425: do {
         if ($1024) {
          $T$0$lcssa$i$i = $1020;
         } else {
          $1025 = ($I1$0$i$i|0)==(31);
          $1026 = $I1$0$i$i >>> 1;
          $1027 = (25 - ($1026))|0;
          $1028 = $1025 ? 0 : $1027;
          $1029 = $963 << $1028;
          $K2$07$i$i = $1029;$T$06$i$i = $1020;
          while(1) {
           $1036 = $K2$07$i$i >>> 31;
           $1037 = (((($T$06$i$i)) + 16|0) + ($1036<<2)|0);
           $1032 = HEAP32[$1037>>2]|0;
           $1038 = ($1032|0)==(0|0);
           if ($1038) {
            $$lcssa211 = $1037;$T$06$i$i$lcssa = $T$06$i$i;
            break;
           }
           $1030 = $K2$07$i$i << 1;
           $1031 = ((($1032)) + 4|0);
           $1033 = HEAP32[$1031>>2]|0;
           $1034 = $1033 & -8;
           $1035 = ($1034|0)==($963|0);
           if ($1035) {
            $T$0$lcssa$i$i = $1032;
            break L425;
           } else {
            $K2$07$i$i = $1030;$T$06$i$i = $1032;
           }
          }
          $1039 = HEAP32[(3196)>>2]|0;
          $1040 = ($$lcssa211>>>0)<($1039>>>0);
          if ($1040) {
           _abort();
           // unreachable;
          } else {
           HEAP32[$$lcssa211>>2] = $628;
           $1041 = ((($628)) + 24|0);
           HEAP32[$1041>>2] = $T$06$i$i$lcssa;
           $1042 = ((($628)) + 12|0);
           HEAP32[$1042>>2] = $628;
           $1043 = ((($628)) + 8|0);
           HEAP32[$1043>>2] = $628;
           break L272;
          }
         }
        } while(0);
        $1044 = ((($T$0$lcssa$i$i)) + 8|0);
        $1045 = HEAP32[$1044>>2]|0;
        $1046 = HEAP32[(3196)>>2]|0;
        $1047 = ($1045>>>0)>=($1046>>>0);
        $not$$i$i = ($T$0$lcssa$i$i>>>0)>=($1046>>>0);
        $1048 = $1047 & $not$$i$i;
        if ($1048) {
         $1049 = ((($1045)) + 12|0);
         HEAP32[$1049>>2] = $628;
         HEAP32[$1044>>2] = $628;
         $1050 = ((($628)) + 8|0);
         HEAP32[$1050>>2] = $1045;
         $1051 = ((($628)) + 12|0);
         HEAP32[$1051>>2] = $T$0$lcssa$i$i;
         $1052 = ((($628)) + 24|0);
         HEAP32[$1052>>2] = 0;
         break;
        } else {
         _abort();
         // unreachable;
        }
       }
      }
     } while(0);
     $1053 = HEAP32[(3192)>>2]|0;
     $1054 = ($1053>>>0)>($nb$0>>>0);
     if ($1054) {
      $1055 = (($1053) - ($nb$0))|0;
      HEAP32[(3192)>>2] = $1055;
      $1056 = HEAP32[(3204)>>2]|0;
      $1057 = (($1056) + ($nb$0)|0);
      HEAP32[(3204)>>2] = $1057;
      $1058 = $1055 | 1;
      $$sum$i32 = (($nb$0) + 4)|0;
      $1059 = (($1056) + ($$sum$i32)|0);
      HEAP32[$1059>>2] = $1058;
      $1060 = $nb$0 | 3;
      $1061 = ((($1056)) + 4|0);
      HEAP32[$1061>>2] = $1060;
      $1062 = ((($1056)) + 8|0);
      $mem$0 = $1062;
      break;
     }
    }
    $1063 = (___errno_location()|0);
    HEAP32[$1063>>2] = 12;
    $mem$0 = 0;
   } else {
    $mem$0 = 0;
   }
  }
 } while(0);
 return ($mem$0|0);
}
function _free($mem) {
 $mem = $mem|0;
 var $$lcssa = 0, $$pre = 0, $$pre$phi59Z2D = 0, $$pre$phi61Z2D = 0, $$pre$phiZ2D = 0, $$pre57 = 0, $$pre58 = 0, $$pre60 = 0, $$sum = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum1718 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum22 = 0, $$sum23 = 0, $$sum24 = 0;
 var $$sum25 = 0, $$sum26 = 0, $$sum27 = 0, $$sum28 = 0, $$sum29 = 0, $$sum3 = 0, $$sum30 = 0, $$sum31 = 0, $$sum5 = 0, $$sum67 = 0, $$sum8 = 0, $$sum9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $F16$0 = 0, $I18$0 = 0, $K19$052 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0;
 var $R7$0 = 0, $R7$0$lcssa = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $RP9$0 = 0, $RP9$0$lcssa = 0, $T$0$lcssa = 0, $T$051 = 0, $T$051$lcssa = 0, $cond = 0, $cond47 = 0, $not$ = 0, $p$0 = 0, $psize$0 = 0, $psize$1 = 0, $sp$0$i = 0, $sp$0$in$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($mem|0)==(0|0);
 L1: do {
  if (!($0)) {
   $1 = ((($mem)) + -8|0);
   $2 = HEAP32[(3196)>>2]|0;
   $3 = ($1>>>0)<($2>>>0);
   L3: do {
    if (!($3)) {
     $4 = ((($mem)) + -4|0);
     $5 = HEAP32[$4>>2]|0;
     $6 = $5 & 3;
     $7 = ($6|0)==(1);
     if (!($7)) {
      $8 = $5 & -8;
      $$sum = (($8) + -8)|0;
      $9 = (($mem) + ($$sum)|0);
      $10 = $5 & 1;
      $11 = ($10|0)==(0);
      do {
       if ($11) {
        $12 = HEAP32[$1>>2]|0;
        $13 = ($6|0)==(0);
        if ($13) {
         break L1;
        }
        $$sum2 = (-8 - ($12))|0;
        $14 = (($mem) + ($$sum2)|0);
        $15 = (($12) + ($8))|0;
        $16 = ($14>>>0)<($2>>>0);
        if ($16) {
         break L3;
        }
        $17 = HEAP32[(3200)>>2]|0;
        $18 = ($14|0)==($17|0);
        if ($18) {
         $$sum3 = (($8) + -4)|0;
         $103 = (($mem) + ($$sum3)|0);
         $104 = HEAP32[$103>>2]|0;
         $105 = $104 & 3;
         $106 = ($105|0)==(3);
         if (!($106)) {
          $p$0 = $14;$psize$0 = $15;
          break;
         }
         HEAP32[(3188)>>2] = $15;
         $107 = $104 & -2;
         HEAP32[$103>>2] = $107;
         $108 = $15 | 1;
         $$sum20 = (($$sum2) + 4)|0;
         $109 = (($mem) + ($$sum20)|0);
         HEAP32[$109>>2] = $108;
         HEAP32[$9>>2] = $15;
         break L1;
        }
        $19 = $12 >>> 3;
        $20 = ($12>>>0)<(256);
        if ($20) {
         $$sum30 = (($$sum2) + 8)|0;
         $21 = (($mem) + ($$sum30)|0);
         $22 = HEAP32[$21>>2]|0;
         $$sum31 = (($$sum2) + 12)|0;
         $23 = (($mem) + ($$sum31)|0);
         $24 = HEAP32[$23>>2]|0;
         $25 = $19 << 1;
         $26 = (3220 + ($25<<2)|0);
         $27 = ($22|0)==($26|0);
         do {
          if (!($27)) {
           $28 = ($22>>>0)<($2>>>0);
           if (!($28)) {
            $29 = ((($22)) + 12|0);
            $30 = HEAP32[$29>>2]|0;
            $31 = ($30|0)==($14|0);
            if ($31) {
             break;
            }
           }
           _abort();
           // unreachable;
          }
         } while(0);
         $32 = ($24|0)==($22|0);
         if ($32) {
          $33 = 1 << $19;
          $34 = $33 ^ -1;
          $35 = HEAP32[3180>>2]|0;
          $36 = $35 & $34;
          HEAP32[3180>>2] = $36;
          $p$0 = $14;$psize$0 = $15;
          break;
         }
         $37 = ($24|0)==($26|0);
         do {
          if ($37) {
           $$pre60 = ((($24)) + 8|0);
           $$pre$phi61Z2D = $$pre60;
          } else {
           $38 = ($24>>>0)<($2>>>0);
           if (!($38)) {
            $39 = ((($24)) + 8|0);
            $40 = HEAP32[$39>>2]|0;
            $41 = ($40|0)==($14|0);
            if ($41) {
             $$pre$phi61Z2D = $39;
             break;
            }
           }
           _abort();
           // unreachable;
          }
         } while(0);
         $42 = ((($22)) + 12|0);
         HEAP32[$42>>2] = $24;
         HEAP32[$$pre$phi61Z2D>>2] = $22;
         $p$0 = $14;$psize$0 = $15;
         break;
        }
        $$sum22 = (($$sum2) + 24)|0;
        $43 = (($mem) + ($$sum22)|0);
        $44 = HEAP32[$43>>2]|0;
        $$sum23 = (($$sum2) + 12)|0;
        $45 = (($mem) + ($$sum23)|0);
        $46 = HEAP32[$45>>2]|0;
        $47 = ($46|0)==($14|0);
        do {
         if ($47) {
          $$sum25 = (($$sum2) + 20)|0;
          $57 = (($mem) + ($$sum25)|0);
          $58 = HEAP32[$57>>2]|0;
          $59 = ($58|0)==(0|0);
          if ($59) {
           $$sum24 = (($$sum2) + 16)|0;
           $60 = (($mem) + ($$sum24)|0);
           $61 = HEAP32[$60>>2]|0;
           $62 = ($61|0)==(0|0);
           if ($62) {
            $R$1 = 0;
            break;
           } else {
            $R$0 = $61;$RP$0 = $60;
           }
          } else {
           $R$0 = $58;$RP$0 = $57;
          }
          while(1) {
           $63 = ((($R$0)) + 20|0);
           $64 = HEAP32[$63>>2]|0;
           $65 = ($64|0)==(0|0);
           if (!($65)) {
            $R$0 = $64;$RP$0 = $63;
            continue;
           }
           $66 = ((($R$0)) + 16|0);
           $67 = HEAP32[$66>>2]|0;
           $68 = ($67|0)==(0|0);
           if ($68) {
            $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
            break;
           } else {
            $R$0 = $67;$RP$0 = $66;
           }
          }
          $69 = ($RP$0$lcssa>>>0)<($2>>>0);
          if ($69) {
           _abort();
           // unreachable;
          } else {
           HEAP32[$RP$0$lcssa>>2] = 0;
           $R$1 = $R$0$lcssa;
           break;
          }
         } else {
          $$sum29 = (($$sum2) + 8)|0;
          $48 = (($mem) + ($$sum29)|0);
          $49 = HEAP32[$48>>2]|0;
          $50 = ($49>>>0)<($2>>>0);
          if (!($50)) {
           $51 = ((($49)) + 12|0);
           $52 = HEAP32[$51>>2]|0;
           $53 = ($52|0)==($14|0);
           if ($53) {
            $54 = ((($46)) + 8|0);
            $55 = HEAP32[$54>>2]|0;
            $56 = ($55|0)==($14|0);
            if ($56) {
             HEAP32[$51>>2] = $46;
             HEAP32[$54>>2] = $49;
             $R$1 = $46;
             break;
            }
           }
          }
          _abort();
          // unreachable;
         }
        } while(0);
        $70 = ($44|0)==(0|0);
        if ($70) {
         $p$0 = $14;$psize$0 = $15;
        } else {
         $$sum26 = (($$sum2) + 28)|0;
         $71 = (($mem) + ($$sum26)|0);
         $72 = HEAP32[$71>>2]|0;
         $73 = (3484 + ($72<<2)|0);
         $74 = HEAP32[$73>>2]|0;
         $75 = ($14|0)==($74|0);
         if ($75) {
          HEAP32[$73>>2] = $R$1;
          $cond = ($R$1|0)==(0|0);
          if ($cond) {
           $76 = 1 << $72;
           $77 = $76 ^ -1;
           $78 = HEAP32[(3184)>>2]|0;
           $79 = $78 & $77;
           HEAP32[(3184)>>2] = $79;
           $p$0 = $14;$psize$0 = $15;
           break;
          }
         } else {
          $80 = HEAP32[(3196)>>2]|0;
          $81 = ($44>>>0)<($80>>>0);
          if ($81) {
           _abort();
           // unreachable;
          }
          $82 = ((($44)) + 16|0);
          $83 = HEAP32[$82>>2]|0;
          $84 = ($83|0)==($14|0);
          if ($84) {
           HEAP32[$82>>2] = $R$1;
          } else {
           $85 = ((($44)) + 20|0);
           HEAP32[$85>>2] = $R$1;
          }
          $86 = ($R$1|0)==(0|0);
          if ($86) {
           $p$0 = $14;$psize$0 = $15;
           break;
          }
         }
         $87 = HEAP32[(3196)>>2]|0;
         $88 = ($R$1>>>0)<($87>>>0);
         if ($88) {
          _abort();
          // unreachable;
         }
         $89 = ((($R$1)) + 24|0);
         HEAP32[$89>>2] = $44;
         $$sum27 = (($$sum2) + 16)|0;
         $90 = (($mem) + ($$sum27)|0);
         $91 = HEAP32[$90>>2]|0;
         $92 = ($91|0)==(0|0);
         do {
          if (!($92)) {
           $93 = ($91>>>0)<($87>>>0);
           if ($93) {
            _abort();
            // unreachable;
           } else {
            $94 = ((($R$1)) + 16|0);
            HEAP32[$94>>2] = $91;
            $95 = ((($91)) + 24|0);
            HEAP32[$95>>2] = $R$1;
            break;
           }
          }
         } while(0);
         $$sum28 = (($$sum2) + 20)|0;
         $96 = (($mem) + ($$sum28)|0);
         $97 = HEAP32[$96>>2]|0;
         $98 = ($97|0)==(0|0);
         if ($98) {
          $p$0 = $14;$psize$0 = $15;
         } else {
          $99 = HEAP32[(3196)>>2]|0;
          $100 = ($97>>>0)<($99>>>0);
          if ($100) {
           _abort();
           // unreachable;
          } else {
           $101 = ((($R$1)) + 20|0);
           HEAP32[$101>>2] = $97;
           $102 = ((($97)) + 24|0);
           HEAP32[$102>>2] = $R$1;
           $p$0 = $14;$psize$0 = $15;
           break;
          }
         }
        }
       } else {
        $p$0 = $1;$psize$0 = $8;
       }
      } while(0);
      $110 = ($p$0>>>0)<($9>>>0);
      if ($110) {
       $$sum19 = (($8) + -4)|0;
       $111 = (($mem) + ($$sum19)|0);
       $112 = HEAP32[$111>>2]|0;
       $113 = $112 & 1;
       $114 = ($113|0)==(0);
       if (!($114)) {
        $115 = $112 & 2;
        $116 = ($115|0)==(0);
        if ($116) {
         $117 = HEAP32[(3204)>>2]|0;
         $118 = ($9|0)==($117|0);
         if ($118) {
          $119 = HEAP32[(3192)>>2]|0;
          $120 = (($119) + ($psize$0))|0;
          HEAP32[(3192)>>2] = $120;
          HEAP32[(3204)>>2] = $p$0;
          $121 = $120 | 1;
          $122 = ((($p$0)) + 4|0);
          HEAP32[$122>>2] = $121;
          $123 = HEAP32[(3200)>>2]|0;
          $124 = ($p$0|0)==($123|0);
          if (!($124)) {
           break L1;
          }
          HEAP32[(3200)>>2] = 0;
          HEAP32[(3188)>>2] = 0;
          break L1;
         }
         $125 = HEAP32[(3200)>>2]|0;
         $126 = ($9|0)==($125|0);
         if ($126) {
          $127 = HEAP32[(3188)>>2]|0;
          $128 = (($127) + ($psize$0))|0;
          HEAP32[(3188)>>2] = $128;
          HEAP32[(3200)>>2] = $p$0;
          $129 = $128 | 1;
          $130 = ((($p$0)) + 4|0);
          HEAP32[$130>>2] = $129;
          $131 = (($p$0) + ($128)|0);
          HEAP32[$131>>2] = $128;
          break L1;
         }
         $132 = $112 & -8;
         $133 = (($132) + ($psize$0))|0;
         $134 = $112 >>> 3;
         $135 = ($112>>>0)<(256);
         do {
          if ($135) {
           $136 = (($mem) + ($8)|0);
           $137 = HEAP32[$136>>2]|0;
           $$sum1718 = $8 | 4;
           $138 = (($mem) + ($$sum1718)|0);
           $139 = HEAP32[$138>>2]|0;
           $140 = $134 << 1;
           $141 = (3220 + ($140<<2)|0);
           $142 = ($137|0)==($141|0);
           do {
            if (!($142)) {
             $143 = HEAP32[(3196)>>2]|0;
             $144 = ($137>>>0)<($143>>>0);
             if (!($144)) {
              $145 = ((($137)) + 12|0);
              $146 = HEAP32[$145>>2]|0;
              $147 = ($146|0)==($9|0);
              if ($147) {
               break;
              }
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $148 = ($139|0)==($137|0);
           if ($148) {
            $149 = 1 << $134;
            $150 = $149 ^ -1;
            $151 = HEAP32[3180>>2]|0;
            $152 = $151 & $150;
            HEAP32[3180>>2] = $152;
            break;
           }
           $153 = ($139|0)==($141|0);
           do {
            if ($153) {
             $$pre58 = ((($139)) + 8|0);
             $$pre$phi59Z2D = $$pre58;
            } else {
             $154 = HEAP32[(3196)>>2]|0;
             $155 = ($139>>>0)<($154>>>0);
             if (!($155)) {
              $156 = ((($139)) + 8|0);
              $157 = HEAP32[$156>>2]|0;
              $158 = ($157|0)==($9|0);
              if ($158) {
               $$pre$phi59Z2D = $156;
               break;
              }
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $159 = ((($137)) + 12|0);
           HEAP32[$159>>2] = $139;
           HEAP32[$$pre$phi59Z2D>>2] = $137;
          } else {
           $$sum5 = (($8) + 16)|0;
           $160 = (($mem) + ($$sum5)|0);
           $161 = HEAP32[$160>>2]|0;
           $$sum67 = $8 | 4;
           $162 = (($mem) + ($$sum67)|0);
           $163 = HEAP32[$162>>2]|0;
           $164 = ($163|0)==($9|0);
           do {
            if ($164) {
             $$sum9 = (($8) + 12)|0;
             $175 = (($mem) + ($$sum9)|0);
             $176 = HEAP32[$175>>2]|0;
             $177 = ($176|0)==(0|0);
             if ($177) {
              $$sum8 = (($8) + 8)|0;
              $178 = (($mem) + ($$sum8)|0);
              $179 = HEAP32[$178>>2]|0;
              $180 = ($179|0)==(0|0);
              if ($180) {
               $R7$1 = 0;
               break;
              } else {
               $R7$0 = $179;$RP9$0 = $178;
              }
             } else {
              $R7$0 = $176;$RP9$0 = $175;
             }
             while(1) {
              $181 = ((($R7$0)) + 20|0);
              $182 = HEAP32[$181>>2]|0;
              $183 = ($182|0)==(0|0);
              if (!($183)) {
               $R7$0 = $182;$RP9$0 = $181;
               continue;
              }
              $184 = ((($R7$0)) + 16|0);
              $185 = HEAP32[$184>>2]|0;
              $186 = ($185|0)==(0|0);
              if ($186) {
               $R7$0$lcssa = $R7$0;$RP9$0$lcssa = $RP9$0;
               break;
              } else {
               $R7$0 = $185;$RP9$0 = $184;
              }
             }
             $187 = HEAP32[(3196)>>2]|0;
             $188 = ($RP9$0$lcssa>>>0)<($187>>>0);
             if ($188) {
              _abort();
              // unreachable;
             } else {
              HEAP32[$RP9$0$lcssa>>2] = 0;
              $R7$1 = $R7$0$lcssa;
              break;
             }
            } else {
             $165 = (($mem) + ($8)|0);
             $166 = HEAP32[$165>>2]|0;
             $167 = HEAP32[(3196)>>2]|0;
             $168 = ($166>>>0)<($167>>>0);
             if (!($168)) {
              $169 = ((($166)) + 12|0);
              $170 = HEAP32[$169>>2]|0;
              $171 = ($170|0)==($9|0);
              if ($171) {
               $172 = ((($163)) + 8|0);
               $173 = HEAP32[$172>>2]|0;
               $174 = ($173|0)==($9|0);
               if ($174) {
                HEAP32[$169>>2] = $163;
                HEAP32[$172>>2] = $166;
                $R7$1 = $163;
                break;
               }
              }
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $189 = ($161|0)==(0|0);
           if (!($189)) {
            $$sum12 = (($8) + 20)|0;
            $190 = (($mem) + ($$sum12)|0);
            $191 = HEAP32[$190>>2]|0;
            $192 = (3484 + ($191<<2)|0);
            $193 = HEAP32[$192>>2]|0;
            $194 = ($9|0)==($193|0);
            if ($194) {
             HEAP32[$192>>2] = $R7$1;
             $cond47 = ($R7$1|0)==(0|0);
             if ($cond47) {
              $195 = 1 << $191;
              $196 = $195 ^ -1;
              $197 = HEAP32[(3184)>>2]|0;
              $198 = $197 & $196;
              HEAP32[(3184)>>2] = $198;
              break;
             }
            } else {
             $199 = HEAP32[(3196)>>2]|0;
             $200 = ($161>>>0)<($199>>>0);
             if ($200) {
              _abort();
              // unreachable;
             }
             $201 = ((($161)) + 16|0);
             $202 = HEAP32[$201>>2]|0;
             $203 = ($202|0)==($9|0);
             if ($203) {
              HEAP32[$201>>2] = $R7$1;
             } else {
              $204 = ((($161)) + 20|0);
              HEAP32[$204>>2] = $R7$1;
             }
             $205 = ($R7$1|0)==(0|0);
             if ($205) {
              break;
             }
            }
            $206 = HEAP32[(3196)>>2]|0;
            $207 = ($R7$1>>>0)<($206>>>0);
            if ($207) {
             _abort();
             // unreachable;
            }
            $208 = ((($R7$1)) + 24|0);
            HEAP32[$208>>2] = $161;
            $$sum13 = (($8) + 8)|0;
            $209 = (($mem) + ($$sum13)|0);
            $210 = HEAP32[$209>>2]|0;
            $211 = ($210|0)==(0|0);
            do {
             if (!($211)) {
              $212 = ($210>>>0)<($206>>>0);
              if ($212) {
               _abort();
               // unreachable;
              } else {
               $213 = ((($R7$1)) + 16|0);
               HEAP32[$213>>2] = $210;
               $214 = ((($210)) + 24|0);
               HEAP32[$214>>2] = $R7$1;
               break;
              }
             }
            } while(0);
            $$sum14 = (($8) + 12)|0;
            $215 = (($mem) + ($$sum14)|0);
            $216 = HEAP32[$215>>2]|0;
            $217 = ($216|0)==(0|0);
            if (!($217)) {
             $218 = HEAP32[(3196)>>2]|0;
             $219 = ($216>>>0)<($218>>>0);
             if ($219) {
              _abort();
              // unreachable;
             } else {
              $220 = ((($R7$1)) + 20|0);
              HEAP32[$220>>2] = $216;
              $221 = ((($216)) + 24|0);
              HEAP32[$221>>2] = $R7$1;
              break;
             }
            }
           }
          }
         } while(0);
         $222 = $133 | 1;
         $223 = ((($p$0)) + 4|0);
         HEAP32[$223>>2] = $222;
         $224 = (($p$0) + ($133)|0);
         HEAP32[$224>>2] = $133;
         $225 = HEAP32[(3200)>>2]|0;
         $226 = ($p$0|0)==($225|0);
         if ($226) {
          HEAP32[(3188)>>2] = $133;
          break L1;
         } else {
          $psize$1 = $133;
         }
        } else {
         $227 = $112 & -2;
         HEAP32[$111>>2] = $227;
         $228 = $psize$0 | 1;
         $229 = ((($p$0)) + 4|0);
         HEAP32[$229>>2] = $228;
         $230 = (($p$0) + ($psize$0)|0);
         HEAP32[$230>>2] = $psize$0;
         $psize$1 = $psize$0;
        }
        $231 = $psize$1 >>> 3;
        $232 = ($psize$1>>>0)<(256);
        if ($232) {
         $233 = $231 << 1;
         $234 = (3220 + ($233<<2)|0);
         $235 = HEAP32[3180>>2]|0;
         $236 = 1 << $231;
         $237 = $235 & $236;
         $238 = ($237|0)==(0);
         if ($238) {
          $239 = $235 | $236;
          HEAP32[3180>>2] = $239;
          $$pre = (($233) + 2)|0;
          $$pre57 = (3220 + ($$pre<<2)|0);
          $$pre$phiZ2D = $$pre57;$F16$0 = $234;
         } else {
          $$sum11 = (($233) + 2)|0;
          $240 = (3220 + ($$sum11<<2)|0);
          $241 = HEAP32[$240>>2]|0;
          $242 = HEAP32[(3196)>>2]|0;
          $243 = ($241>>>0)<($242>>>0);
          if ($243) {
           _abort();
           // unreachable;
          } else {
           $$pre$phiZ2D = $240;$F16$0 = $241;
          }
         }
         HEAP32[$$pre$phiZ2D>>2] = $p$0;
         $244 = ((($F16$0)) + 12|0);
         HEAP32[$244>>2] = $p$0;
         $245 = ((($p$0)) + 8|0);
         HEAP32[$245>>2] = $F16$0;
         $246 = ((($p$0)) + 12|0);
         HEAP32[$246>>2] = $234;
         break L1;
        }
        $247 = $psize$1 >>> 8;
        $248 = ($247|0)==(0);
        if ($248) {
         $I18$0 = 0;
        } else {
         $249 = ($psize$1>>>0)>(16777215);
         if ($249) {
          $I18$0 = 31;
         } else {
          $250 = (($247) + 1048320)|0;
          $251 = $250 >>> 16;
          $252 = $251 & 8;
          $253 = $247 << $252;
          $254 = (($253) + 520192)|0;
          $255 = $254 >>> 16;
          $256 = $255 & 4;
          $257 = $256 | $252;
          $258 = $253 << $256;
          $259 = (($258) + 245760)|0;
          $260 = $259 >>> 16;
          $261 = $260 & 2;
          $262 = $257 | $261;
          $263 = (14 - ($262))|0;
          $264 = $258 << $261;
          $265 = $264 >>> 15;
          $266 = (($263) + ($265))|0;
          $267 = $266 << 1;
          $268 = (($266) + 7)|0;
          $269 = $psize$1 >>> $268;
          $270 = $269 & 1;
          $271 = $270 | $267;
          $I18$0 = $271;
         }
        }
        $272 = (3484 + ($I18$0<<2)|0);
        $273 = ((($p$0)) + 28|0);
        HEAP32[$273>>2] = $I18$0;
        $274 = ((($p$0)) + 16|0);
        $275 = ((($p$0)) + 20|0);
        HEAP32[$275>>2] = 0;
        HEAP32[$274>>2] = 0;
        $276 = HEAP32[(3184)>>2]|0;
        $277 = 1 << $I18$0;
        $278 = $276 & $277;
        $279 = ($278|0)==(0);
        L168: do {
         if ($279) {
          $280 = $276 | $277;
          HEAP32[(3184)>>2] = $280;
          HEAP32[$272>>2] = $p$0;
          $281 = ((($p$0)) + 24|0);
          HEAP32[$281>>2] = $272;
          $282 = ((($p$0)) + 12|0);
          HEAP32[$282>>2] = $p$0;
          $283 = ((($p$0)) + 8|0);
          HEAP32[$283>>2] = $p$0;
         } else {
          $284 = HEAP32[$272>>2]|0;
          $285 = ((($284)) + 4|0);
          $286 = HEAP32[$285>>2]|0;
          $287 = $286 & -8;
          $288 = ($287|0)==($psize$1|0);
          L171: do {
           if ($288) {
            $T$0$lcssa = $284;
           } else {
            $289 = ($I18$0|0)==(31);
            $290 = $I18$0 >>> 1;
            $291 = (25 - ($290))|0;
            $292 = $289 ? 0 : $291;
            $293 = $psize$1 << $292;
            $K19$052 = $293;$T$051 = $284;
            while(1) {
             $300 = $K19$052 >>> 31;
             $301 = (((($T$051)) + 16|0) + ($300<<2)|0);
             $296 = HEAP32[$301>>2]|0;
             $302 = ($296|0)==(0|0);
             if ($302) {
              $$lcssa = $301;$T$051$lcssa = $T$051;
              break;
             }
             $294 = $K19$052 << 1;
             $295 = ((($296)) + 4|0);
             $297 = HEAP32[$295>>2]|0;
             $298 = $297 & -8;
             $299 = ($298|0)==($psize$1|0);
             if ($299) {
              $T$0$lcssa = $296;
              break L171;
             } else {
              $K19$052 = $294;$T$051 = $296;
             }
            }
            $303 = HEAP32[(3196)>>2]|0;
            $304 = ($$lcssa>>>0)<($303>>>0);
            if ($304) {
             _abort();
             // unreachable;
            } else {
             HEAP32[$$lcssa>>2] = $p$0;
             $305 = ((($p$0)) + 24|0);
             HEAP32[$305>>2] = $T$051$lcssa;
             $306 = ((($p$0)) + 12|0);
             HEAP32[$306>>2] = $p$0;
             $307 = ((($p$0)) + 8|0);
             HEAP32[$307>>2] = $p$0;
             break L168;
            }
           }
          } while(0);
          $308 = ((($T$0$lcssa)) + 8|0);
          $309 = HEAP32[$308>>2]|0;
          $310 = HEAP32[(3196)>>2]|0;
          $311 = ($309>>>0)>=($310>>>0);
          $not$ = ($T$0$lcssa>>>0)>=($310>>>0);
          $312 = $311 & $not$;
          if ($312) {
           $313 = ((($309)) + 12|0);
           HEAP32[$313>>2] = $p$0;
           HEAP32[$308>>2] = $p$0;
           $314 = ((($p$0)) + 8|0);
           HEAP32[$314>>2] = $309;
           $315 = ((($p$0)) + 12|0);
           HEAP32[$315>>2] = $T$0$lcssa;
           $316 = ((($p$0)) + 24|0);
           HEAP32[$316>>2] = 0;
           break;
          } else {
           _abort();
           // unreachable;
          }
         }
        } while(0);
        $317 = HEAP32[(3212)>>2]|0;
        $318 = (($317) + -1)|0;
        HEAP32[(3212)>>2] = $318;
        $319 = ($318|0)==(0);
        if ($319) {
         $sp$0$in$i = (3636);
        } else {
         break L1;
        }
        while(1) {
         $sp$0$i = HEAP32[$sp$0$in$i>>2]|0;
         $320 = ($sp$0$i|0)==(0|0);
         $321 = ((($sp$0$i)) + 8|0);
         if ($320) {
          break;
         } else {
          $sp$0$in$i = $321;
         }
        }
        HEAP32[(3212)>>2] = -1;
        break L1;
       }
      }
     }
    }
   } while(0);
   _abort();
   // unreachable;
  }
 } while(0);
 return;
}
function _calloc($n_elements,$elem_size) {
 $n_elements = $n_elements|0;
 $elem_size = $elem_size|0;
 var $$ = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $req$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n_elements|0)==(0);
 if ($0) {
  $req$0 = 0;
 } else {
  $1 = Math_imul($elem_size, $n_elements)|0;
  $2 = $elem_size | $n_elements;
  $3 = ($2>>>0)>(65535);
  if ($3) {
   $4 = (($1>>>0) / ($n_elements>>>0))&-1;
   $5 = ($4|0)==($elem_size|0);
   $$ = $5 ? $1 : -1;
   $req$0 = $$;
  } else {
   $req$0 = $1;
  }
 }
 $6 = (_malloc($req$0)|0);
 $7 = ($6|0)==(0|0);
 if (!($7)) {
  $8 = ((($6)) + -4|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = $9 & 3;
  $11 = ($10|0)==(0);
  if (!($11)) {
   _memset(($6|0),0,($req$0|0))|0;
  }
 }
 return ($6|0);
}
function _realloc($oldmem,$bytes) {
 $oldmem = $oldmem|0;
 $bytes = $bytes|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $mem$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($oldmem|0)==(0|0);
 do {
  if ($0) {
   $1 = (_malloc($bytes)|0);
   $mem$0 = $1;
  } else {
   $2 = ($bytes>>>0)>(4294967231);
   if ($2) {
    $3 = (___errno_location()|0);
    HEAP32[$3>>2] = 12;
    $mem$0 = 0;
    break;
   }
   $4 = ($bytes>>>0)<(11);
   $5 = (($bytes) + 11)|0;
   $6 = $5 & -8;
   $7 = $4 ? 16 : $6;
   $8 = ((($oldmem)) + -8|0);
   $9 = (_try_realloc_chunk($8,$7)|0);
   $10 = ($9|0)==(0|0);
   if (!($10)) {
    $11 = ((($9)) + 8|0);
    $mem$0 = $11;
    break;
   }
   $12 = (_malloc($bytes)|0);
   $13 = ($12|0)==(0|0);
   if ($13) {
    $mem$0 = 0;
   } else {
    $14 = ((($oldmem)) + -4|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = $15 & -8;
    $17 = $15 & 3;
    $18 = ($17|0)==(0);
    $19 = $18 ? 8 : 4;
    $20 = (($16) - ($19))|0;
    $21 = ($20>>>0)<($bytes>>>0);
    $22 = $21 ? $20 : $bytes;
    _memcpy(($12|0),($oldmem|0),($22|0))|0;
    _free($oldmem);
    $mem$0 = $12;
   }
  }
 } while(0);
 return ($mem$0|0);
}
function _strtoull_l($s,$p,$base,$loc) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strtoull($s,$p,$base)|0);
 $1 = tempRet0;
 tempRet0 = ($1);
 return ($0|0);
}
function _strtoll_l($s,$p,$base,$loc) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strtoll($s,$p,$base)|0);
 $1 = tempRet0;
 tempRet0 = ($1);
 return ($0|0);
}
function ___ctype_b_loc() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (3676|0);
}
function ___ctype_tolower_loc() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (3680|0);
}
function ___ctype_toupper_loc() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (3684|0);
}
function _isspace($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($c|0)==(32);
 $1 = (($c) + -9)|0;
 $2 = ($1>>>0)<(5);
 $3 = $0 | $2;
 $4 = $3&1;
 return ($4|0);
}
function _isupper($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($c) + -65)|0;
 $1 = ($0>>>0)<(26);
 $2 = $1&1;
 return ($2|0);
}
function _isxdigit($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $isdigit = 0, $isdigittmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isdigittmp = (($c) + -48)|0;
 $isdigit = ($isdigittmp>>>0)<(10);
 if ($isdigit) {
  $4 = 1;
 } else {
  $0 = $c | 32;
  $1 = (($0) + -97)|0;
  $2 = ($1>>>0)<(6);
  $4 = $2;
 }
 $3 = $4&1;
 return ($3|0);
}
function ___errno_location() {
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[2916>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$0 = 3688;
 } else {
  $2 = (_pthread_self()|0);
  $3 = ((($2)) + 60|0);
  $4 = HEAP32[$3>>2]|0;
  $$0 = $4;
 }
 return ($$0|0);
}
function _strerror($e) {
 $e = $e|0;
 var $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$03 = 0, $i$03$lcssa = 0, $i$12 = 0, $s$0$lcssa = 0, $s$01 = 0, $s$1 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $i$03 = 0;
 while(1) {
  $1 = (19172 + ($i$03)|0);
  $2 = HEAP8[$1>>0]|0;
  $3 = $2&255;
  $4 = ($3|0)==($e|0);
  if ($4) {
   $i$03$lcssa = $i$03;
   label = 2;
   break;
  }
  $5 = (($i$03) + 1)|0;
  $6 = ($5|0)==(87);
  if ($6) {
   $i$12 = 87;$s$01 = 19260;
   label = 5;
   break;
  } else {
   $i$03 = $5;
  }
 }
 if ((label|0) == 2) {
  $0 = ($i$03$lcssa|0)==(0);
  if ($0) {
   $s$0$lcssa = 19260;
  } else {
   $i$12 = $i$03$lcssa;$s$01 = 19260;
   label = 5;
  }
 }
 if ((label|0) == 5) {
  while(1) {
   label = 0;
   $s$1 = $s$01;
   while(1) {
    $7 = HEAP8[$s$1>>0]|0;
    $8 = ($7<<24>>24)==(0);
    $9 = ((($s$1)) + 1|0);
    if ($8) {
     $$lcssa = $9;
     break;
    } else {
     $s$1 = $9;
    }
   }
   $10 = (($i$12) + -1)|0;
   $11 = ($10|0)==(0);
   if ($11) {
    $s$0$lcssa = $$lcssa;
    break;
   } else {
    $i$12 = $10;$s$01 = $$lcssa;
    label = 5;
   }
  }
 }
 return ($s$0$lcssa|0);
}
function ___floatscan($f,$prec,$pok) {
 $f = $f|0;
 $prec = $prec|0;
 $pok = $pok|0;
 var $$$i = 0, $$0 = 0.0, $$0$i27 = 0.0, $$010$i = 0, $$07$i = 0, $$0710$i = 0, $$0711$i = 0, $$09$i = 0, $$1$be$i = 0, $$1$ph$i = 0, $$11$i = 0, $$18$i = 0, $$2$i = 0, $$3$be$i = 0, $$3$lcssa$i = 0, $$3105$i = 0, $$in = 0, $$k$0$i = 0, $$lcssa = 0, $$lcssa256 = 0;
 var $$lcssa256$lcssa = 0, $$lcssa257 = 0, $$lcssa257$lcssa = 0, $$lcssa263 = 0, $$lcssa264 = 0, $$lcssa265 = 0, $$lcssa275 = 0, $$lnz$0$i = 0, $$neg32$i = 0, $$not$i = 0, $$old8 = 0, $$pn$i = 0.0, $$pre$i = 0, $$pre$i17 = 0, $$pre$phi42$iZ2D = 0.0, $$pre41$i = 0.0, $$promoted$i = 0, $$sink$off0$i = 0, $0 = 0, $1 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0.0, $183 = 0.0, $184 = 0.0, $185 = 0.0, $186 = 0, $187 = 0, $188 = 0.0, $189 = 0.0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0.0, $21 = 0, $210 = 0.0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0.0, $259 = 0.0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0.0, $268 = 0.0, $269 = 0.0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0.0, $281 = 0.0, $282 = 0.0, $283 = 0, $284 = 0, $285 = 0.0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0.0, $31 = 0, $310 = 0.0, $311 = 0.0, $312 = 0, $313 = 0, $314 = 0, $315 = 0;
 var $316 = 0, $317 = 0.0, $318 = 0.0, $319 = 0.0, $32 = 0, $320 = 0.0, $321 = 0.0, $322 = 0.0, $323 = 0, $324 = 0, $325 = 0.0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0;
 var $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0;
 var $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0;
 var $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0;
 var $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0;
 var $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0;
 var $424 = 0.0, $425 = 0.0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0.0;
 var $442 = 0.0, $443 = 0.0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0.0, $454 = 0.0, $455 = 0.0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0;
 var $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0.0, $466 = 0.0, $467 = 0.0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0;
 var $479 = 0.0, $48 = 0, $480 = 0, $481 = 0.0, $482 = 0.0, $483 = 0, $484 = 0.0, $485 = 0, $486 = 0.0, $487 = 0.0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0.0, $492 = 0.0, $493 = 0, $494 = 0, $495 = 0, $496 = 0;
 var $497 = 0, $498 = 0.0, $499 = 0.0, $5 = 0, $50 = 0.0, $500 = 0.0, $501 = 0, $502 = 0, $503 = 0, $504 = 0.0, $505 = 0.0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0.0, $510 = 0, $511 = 0, $512 = 0, $513 = 0;
 var $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0.0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0;
 var $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0;
 var $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0;
 var $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0;
 var $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0;
 var $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0.0, $62 = 0, $620 = 0, $621 = 0;
 var $622 = 0, $623 = 0, $624 = 0.0, $625 = 0.0, $626 = 0.0, $627 = 0, $628 = 0.0, $629 = 0.0, $63 = 0, $630 = 0.0, $631 = 0.0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0;
 var $640 = 0, $641 = 0, $642 = 0.0, $643 = 0.0, $644 = 0.0, $645 = 0, $646 = 0.0, $647 = 0.0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0.0, $652 = 0.0, $653 = 0.0, $654 = 0.0, $655 = 0, $656 = 0, $657 = 0.0, $658 = 0;
 var $659 = 0.0, $66 = 0, $660 = 0.0, $661 = 0.0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0.0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0.0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0;
 var $677 = 0, $678 = 0.0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0.0, $684 = 0, $685 = 0, $686 = 0.0, $687 = 0.0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0;
 var $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0;
 var $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $a$0$lcssa151$i = 0, $a$085$i = 0, $a$1$i = 0, $a$1$i$lcssa = 0, $a$2$ph38$i = 0, $a$3$i = 0, $a$3$i$lcssa248 = 0, $a$3$i249 = 0, $a$3$ph$i = 0, $a$3$ph157$i = 0, $a$478$i = 0, $a$5$i = 0, $a$5$i$lcssa = 0, $a$5$i$lcssa$lcssa = 0, $bias$0$i = 0.0, $bias$0$i25 = 0.0, $bits$0$ph = 0, $brmerge$i28 = 0;
 var $c$0 = 0, $c$0$i = 0, $c$1$lcssa = 0, $c$1$ph$i = 0, $c$179 = 0, $c$2 = 0, $c$2$i = 0, $c$2$lcssa$i = 0, $c$377 = 0, $c$4 = 0, $c$5 = 0, $c$6 = 0, $carry$087$i = 0, $carry1$0$i = 0, $carry1$1$i = 0, $carry1$1$i$lcssa = 0, $carry1$1$i$lcssa$lcssa = 0, $carry3$081$i = 0, $cond$i = 0, $d$0$i = 0;
 var $denormal$0$i = 0, $denormal$1$i = 0, $denormal$2$i = 0, $e2$0$i19 = 0, $e2$0$ph$i = 0, $e2$1$i = 0, $e2$1$i246 = 0, $e2$1$ph$i = 0, $e2$1$ph156$i = 0, $e2$2$i = 0, $e2$3$i = 0, $emin$0$ph = 0, $exitcond$i = 0, $frac$0$i = 0.0, $frac$1$i = 0.0, $frac$2$i = 0.0, $gotdig$0$i = 0, $gotdig$0$i$lcssa242 = 0, $gotdig$0$i12 = 0, $gotdig$0$i12$lcssa273 = 0;
 var $gotdig$2$i = 0, $gotdig$2$i$lcssa = 0, $gotdig$2$i13 = 0, $gotdig$3$i = 0, $gotdig$3$lcssa$i = 0, $gotdig$3101$i = 0, $gotdig$3101$i$lcssa = 0, $gotdig$4$i = 0, $gotrad$0$i = 0, $gotrad$0$i$lcssa = 0, $gotrad$0$i14 = 0, $gotrad$1$i = 0, $gotrad$1$lcssa$i = 0, $gotrad$1102$i = 0, $gotrad$2$i = 0, $gottail$0$i = 0, $gottail$1$i = 0, $gottail$2$i = 0, $i$0$lcssa = 0, $i$078 = 0;
 var $i$1 = 0, $i$276 = 0, $i$3 = 0, $i$4 = 0, $i$4$lcssa = 0, $j$0$lcssa$i = 0, $j$0104$i = 0, $j$0104$i$lcssa = 0, $j$067$i = 0, $j$068$i = 0, $j$069$i = 0, $j$2$i = 0, $j$394$i = 0, $k$0$lcssa$i = 0, $k$0103$i = 0, $k$0103$i$lcssa = 0, $k$063$i = 0, $k$064$i = 0, $k$065$i = 0, $k$2$i = 0;
 var $k$3$i = 0, $k$486$i = 0, $k$5$i = 0, $k$5$in$i = 0, $k$5$z$2$i = 0, $k$679$i = 0, $lnz$0$lcssa$i = 0, $lnz$0100$i = 0, $lnz$0100$i$lcssa = 0, $lnz$057$i = 0, $lnz$058$i = 0, $lnz$059$i = 0, $lnz$2$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i16 = 0, $or$cond13$i = 0, $or$cond15$i = 0, $or$cond16$i = 0, $or$cond17$i = 0;
 var $or$cond182$i = 0, $or$cond19$i = 0, $or$cond20$i = 0, $or$cond3$i = 0, $or$cond4$i = 0, $or$cond5 = 0, $or$cond6$i = 0, $or$cond7 = 0, $or$cond8$i = 0, $or$cond9 = 0, $or$cond9$i = 0, $rp$0$lcssa152$i = 0, $rp$084$i = 0, $rp$1$i18 = 0, $rp$1$i18$lcssa = 0, $rp$2$ph36$i = 0, $rp$3$ph$i = 0, $rp$3$ph34$i = 0, $rp$477$i = 0, $rp$5$i = 0;
 var $rp$5$i$lcssa = 0, $rp$5$i$lcssa$lcssa = 0, $scale$0$i = 0.0, $scale$1$i = 0.0, $scale$2$i = 0.0, $sign$0 = 0, $storemerge$i = 0, $sum$i = 0, $x$0$i = 0, $x$0$i$lcssa = 0, $x$1$i = 0, $x$2$i = 0, $x$3$lcssa$i = 0, $x$324$i = 0, $x$4$lcssa$i = 0, $x$419$i = 0, $x$5$i = 0, $x$6$i = 0, $x$i = 0, $y$0$i = 0.0;
 var $y$0$i$lcssa = 0.0, $y$1$i = 0.0, $y$1$i24 = 0.0, $y$2$i = 0.0, $y$2$i26 = 0.0, $y$3$i = 0.0, $y$3$lcssa$i = 0.0, $y$320$i = 0.0, $y$4$i = 0.0, $y$5$i = 0.0, $z$0$i = 0, $z$1$i = 0, $z$1$ph37$i = 0, $z$2$i = 0, $z$3$i = 0, $z$3$i$lcssa = 0, $z$3$i$lcssa$lcssa = 0, $z$4$i = 0, $z$5$ph$i = 0, $z$7$1$i = 0;
 var $z$7$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $x$i = sp;
 switch ($prec|0) {
 case 0:  {
  $bits$0$ph = 24;$emin$0$ph = -149;
  label = 4;
  break;
 }
 case 1:  {
  $bits$0$ph = 53;$emin$0$ph = -1074;
  label = 4;
  break;
 }
 case 2:  {
  $bits$0$ph = 53;$emin$0$ph = -1074;
  label = 4;
  break;
 }
 default: {
  $$0 = 0.0;
 }
 }
 L4: do {
  if ((label|0) == 4) {
   $0 = ((($f)) + 4|0);
   $1 = ((($f)) + 100|0);
   while(1) {
    $2 = HEAP32[$0>>2]|0;
    $3 = HEAP32[$1>>2]|0;
    $4 = ($2>>>0)<($3>>>0);
    if ($4) {
     $5 = ((($2)) + 1|0);
     HEAP32[$0>>2] = $5;
     $6 = HEAP8[$2>>0]|0;
     $7 = $6&255;
     $9 = $7;
    } else {
     $8 = (___shgetc($f)|0);
     $9 = $8;
    }
    $10 = (_isspace($9)|0);
    $11 = ($10|0)==(0);
    if ($11) {
     $$lcssa275 = $9;
     break;
    }
   }
   $12 = ($$lcssa275|0)==(45);
   L13: do {
    switch ($$lcssa275|0) {
    case 43: case 45:  {
     $13 = $12&1;
     $14 = $13 << 1;
     $15 = (1 - ($14))|0;
     $16 = HEAP32[$0>>2]|0;
     $17 = HEAP32[$1>>2]|0;
     $18 = ($16>>>0)<($17>>>0);
     if ($18) {
      $19 = ((($16)) + 1|0);
      HEAP32[$0>>2] = $19;
      $20 = HEAP8[$16>>0]|0;
      $21 = $20&255;
      $c$0 = $21;$sign$0 = $15;
      break L13;
     } else {
      $22 = (___shgetc($f)|0);
      $c$0 = $22;$sign$0 = $15;
      break L13;
     }
     break;
    }
    default: {
     $c$0 = $$lcssa275;$sign$0 = 1;
    }
    }
   } while(0);
   $c$179 = $c$0;$i$078 = 0;
   while(1) {
    $23 = $c$179 | 32;
    $24 = (21064 + ($i$078)|0);
    $25 = HEAP8[$24>>0]|0;
    $26 = $25 << 24 >> 24;
    $27 = ($23|0)==($26|0);
    if (!($27)) {
     $c$1$lcssa = $c$179;$i$0$lcssa = $i$078;
     break;
    }
    $28 = ($i$078>>>0)<(7);
    do {
     if ($28) {
      $29 = HEAP32[$0>>2]|0;
      $30 = HEAP32[$1>>2]|0;
      $31 = ($29>>>0)<($30>>>0);
      if ($31) {
       $32 = ((($29)) + 1|0);
       HEAP32[$0>>2] = $32;
       $33 = HEAP8[$29>>0]|0;
       $34 = $33&255;
       $c$2 = $34;
       break;
      } else {
       $35 = (___shgetc($f)|0);
       $c$2 = $35;
       break;
      }
     } else {
      $c$2 = $c$179;
     }
    } while(0);
    $36 = (($i$078) + 1)|0;
    $37 = ($36>>>0)<(8);
    if ($37) {
     $c$179 = $c$2;$i$078 = $36;
    } else {
     $c$1$lcssa = $c$2;$i$0$lcssa = $36;
     break;
    }
   }
   L29: do {
    switch ($i$0$lcssa|0) {
    case 8:  {
     break;
    }
    case 3:  {
     label = 23;
     break;
    }
    default: {
     $38 = ($i$0$lcssa>>>0)>(3);
     $39 = ($pok|0)!=(0);
     $or$cond5 = $39 & $38;
     if ($or$cond5) {
      $40 = ($i$0$lcssa|0)==(8);
      if ($40) {
       break L29;
      } else {
       label = 23;
       break L29;
      }
     }
     $53 = ($i$0$lcssa|0)==(0);
     L34: do {
      if ($53) {
       $c$377 = $c$1$lcssa;$i$276 = 0;
       while(1) {
        $54 = $c$377 | 32;
        $55 = (23945 + ($i$276)|0);
        $56 = HEAP8[$55>>0]|0;
        $57 = $56 << 24 >> 24;
        $58 = ($54|0)==($57|0);
        if (!($58)) {
         $c$5 = $c$377;$i$3 = $i$276;
         break L34;
        }
        $59 = ($i$276>>>0)<(2);
        do {
         if ($59) {
          $60 = HEAP32[$0>>2]|0;
          $61 = HEAP32[$1>>2]|0;
          $62 = ($60>>>0)<($61>>>0);
          if ($62) {
           $63 = ((($60)) + 1|0);
           HEAP32[$0>>2] = $63;
           $64 = HEAP8[$60>>0]|0;
           $65 = $64&255;
           $c$4 = $65;
           break;
          } else {
           $66 = (___shgetc($f)|0);
           $c$4 = $66;
           break;
          }
         } else {
          $c$4 = $c$377;
         }
        } while(0);
        $67 = (($i$276) + 1)|0;
        $68 = ($67>>>0)<(3);
        if ($68) {
         $c$377 = $c$4;$i$276 = $67;
        } else {
         $c$5 = $c$4;$i$3 = $67;
         break;
        }
       }
      } else {
       $c$5 = $c$1$lcssa;$i$3 = $i$0$lcssa;
      }
     } while(0);
     switch ($i$3|0) {
     case 3:  {
      $69 = HEAP32[$0>>2]|0;
      $70 = HEAP32[$1>>2]|0;
      $71 = ($69>>>0)<($70>>>0);
      if ($71) {
       $72 = ((($69)) + 1|0);
       HEAP32[$0>>2] = $72;
       $73 = HEAP8[$69>>0]|0;
       $74 = $73&255;
       $77 = $74;
      } else {
       $75 = (___shgetc($f)|0);
       $77 = $75;
      }
      $76 = ($77|0)==(40);
      if ($76) {
       $i$4 = 1;
      } else {
       $78 = HEAP32[$1>>2]|0;
       $79 = ($78|0)==(0|0);
       if ($79) {
        $$0 = nan;
        break L4;
       }
       $80 = HEAP32[$0>>2]|0;
       $81 = ((($80)) + -1|0);
       HEAP32[$0>>2] = $81;
       $$0 = nan;
       break L4;
      }
      while(1) {
       $82 = HEAP32[$0>>2]|0;
       $83 = HEAP32[$1>>2]|0;
       $84 = ($82>>>0)<($83>>>0);
       if ($84) {
        $85 = ((($82)) + 1|0);
        HEAP32[$0>>2] = $85;
        $86 = HEAP8[$82>>0]|0;
        $87 = $86&255;
        $90 = $87;
       } else {
        $88 = (___shgetc($f)|0);
        $90 = $88;
       }
       $89 = (($90) + -48)|0;
       $91 = ($89>>>0)<(10);
       $92 = (($90) + -65)|0;
       $93 = ($92>>>0)<(26);
       $or$cond = $91 | $93;
       if (!($or$cond)) {
        $94 = (($90) + -97)|0;
        $95 = ($94>>>0)<(26);
        $96 = ($90|0)==(95);
        $or$cond7 = $96 | $95;
        if (!($or$cond7)) {
         $$lcssa = $90;$i$4$lcssa = $i$4;
         break;
        }
       }
       $108 = (($i$4) + 1)|0;
       $i$4 = $108;
      }
      $97 = ($$lcssa|0)==(41);
      if ($97) {
       $$0 = nan;
       break L4;
      }
      $98 = HEAP32[$1>>2]|0;
      $99 = ($98|0)==(0|0);
      if (!($99)) {
       $100 = HEAP32[$0>>2]|0;
       $101 = ((($100)) + -1|0);
       HEAP32[$0>>2] = $101;
      }
      if (!($39)) {
       $103 = (___errno_location()|0);
       HEAP32[$103>>2] = 22;
       ___shlim($f,0);
       $$0 = 0.0;
       break L4;
      }
      $102 = ($i$4$lcssa|0)==(0);
      if ($102) {
       $$0 = nan;
       break L4;
      } else {
       $$in = $i$4$lcssa;
      }
      while(1) {
       $104 = (($$in) + -1)|0;
       if (!($99)) {
        $105 = HEAP32[$0>>2]|0;
        $106 = ((($105)) + -1|0);
        HEAP32[$0>>2] = $106;
       }
       $107 = ($104|0)==(0);
       if ($107) {
        $$0 = nan;
        break L4;
       } else {
        $$in = $104;
       }
      }
      break;
     }
     case 0:  {
      $114 = ($c$5|0)==(48);
      do {
       if ($114) {
        $115 = HEAP32[$0>>2]|0;
        $116 = HEAP32[$1>>2]|0;
        $117 = ($115>>>0)<($116>>>0);
        if ($117) {
         $118 = ((($115)) + 1|0);
         HEAP32[$0>>2] = $118;
         $119 = HEAP8[$115>>0]|0;
         $120 = $119&255;
         $123 = $120;
        } else {
         $121 = (___shgetc($f)|0);
         $123 = $121;
        }
        $122 = $123 | 32;
        $124 = ($122|0)==(120);
        if (!($124)) {
         $326 = HEAP32[$1>>2]|0;
         $327 = ($326|0)==(0|0);
         if ($327) {
          $c$6 = 48;
          break;
         }
         $328 = HEAP32[$0>>2]|0;
         $329 = ((($328)) + -1|0);
         HEAP32[$0>>2] = $329;
         $c$6 = 48;
         break;
        }
        $125 = HEAP32[$0>>2]|0;
        $126 = HEAP32[$1>>2]|0;
        $127 = ($125>>>0)<($126>>>0);
        if ($127) {
         $128 = ((($125)) + 1|0);
         HEAP32[$0>>2] = $128;
         $129 = HEAP8[$125>>0]|0;
         $130 = $129&255;
         $c$0$i = $130;$gotdig$0$i = 0;
        } else {
         $131 = (___shgetc($f)|0);
         $c$0$i = $131;$gotdig$0$i = 0;
        }
        L94: while(1) {
         switch ($c$0$i|0) {
         case 46:  {
          $gotdig$0$i$lcssa242 = $gotdig$0$i;
          label = 74;
          break L94;
          break;
         }
         case 48:  {
          break;
         }
         default: {
          $169 = 0;$171 = 0;$694 = 0;$695 = 0;$c$2$i = $c$0$i;$gotdig$2$i = $gotdig$0$i;$gotrad$0$i = 0;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
          break L94;
         }
         }
         $132 = HEAP32[$0>>2]|0;
         $133 = HEAP32[$1>>2]|0;
         $134 = ($132>>>0)<($133>>>0);
         if ($134) {
          $135 = ((($132)) + 1|0);
          HEAP32[$0>>2] = $135;
          $136 = HEAP8[$132>>0]|0;
          $137 = $136&255;
          $c$0$i = $137;$gotdig$0$i = 1;
          continue;
         } else {
          $138 = (___shgetc($f)|0);
          $c$0$i = $138;$gotdig$0$i = 1;
          continue;
         }
        }
        if ((label|0) == 74) {
         $139 = HEAP32[$0>>2]|0;
         $140 = HEAP32[$1>>2]|0;
         $141 = ($139>>>0)<($140>>>0);
         if ($141) {
          $142 = ((($139)) + 1|0);
          HEAP32[$0>>2] = $142;
          $143 = HEAP8[$139>>0]|0;
          $144 = $143&255;
          $c$1$ph$i = $144;
         } else {
          $145 = (___shgetc($f)|0);
          $c$1$ph$i = $145;
         }
         $146 = ($c$1$ph$i|0)==(48);
         if ($146) {
          $154 = 0;$155 = 0;
          while(1) {
           $147 = HEAP32[$0>>2]|0;
           $148 = HEAP32[$1>>2]|0;
           $149 = ($147>>>0)<($148>>>0);
           if ($149) {
            $150 = ((($147)) + 1|0);
            HEAP32[$0>>2] = $150;
            $151 = HEAP8[$147>>0]|0;
            $152 = $151&255;
            $159 = $152;
           } else {
            $153 = (___shgetc($f)|0);
            $159 = $153;
           }
           $156 = (_i64Add(($154|0),($155|0),-1,-1)|0);
           $157 = tempRet0;
           $158 = ($159|0)==(48);
           if ($158) {
            $154 = $156;$155 = $157;
           } else {
            $169 = 0;$171 = 0;$694 = $156;$695 = $157;$c$2$i = $159;$gotdig$2$i = 1;$gotrad$0$i = 1;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
            break;
           }
          }
         } else {
          $169 = 0;$171 = 0;$694 = 0;$695 = 0;$c$2$i = $c$1$ph$i;$gotdig$2$i = $gotdig$0$i$lcssa242;$gotrad$0$i = 1;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
         }
        }
        while(1) {
         $160 = (($c$2$i) + -48)|0;
         $161 = ($160>>>0)<(10);
         $$pre$i = $c$2$i | 32;
         if ($161) {
          label = 86;
         } else {
          $162 = (($$pre$i) + -97)|0;
          $163 = ($162>>>0)<(6);
          $164 = ($c$2$i|0)==(46);
          $or$cond6$i = $164 | $163;
          if (!($or$cond6$i)) {
           $213 = $171;$214 = $694;$216 = $169;$217 = $695;$c$2$lcssa$i = $c$2$i;$gotdig$2$i$lcssa = $gotdig$2$i;$gotrad$0$i$lcssa = $gotrad$0$i;$x$0$i$lcssa = $x$0$i;$y$0$i$lcssa = $y$0$i;
           break;
          }
          if ($164) {
           $165 = ($gotrad$0$i|0)==(0);
           if ($165) {
            $696 = $171;$697 = $169;$698 = $171;$699 = $169;$gotdig$3$i = $gotdig$2$i;$gotrad$1$i = 1;$gottail$2$i = $gottail$0$i;$scale$2$i = $scale$0$i;$x$2$i = $x$0$i;$y$2$i = $y$0$i;
           } else {
            $213 = $171;$214 = $694;$216 = $169;$217 = $695;$c$2$lcssa$i = 46;$gotdig$2$i$lcssa = $gotdig$2$i;$gotrad$0$i$lcssa = $gotrad$0$i;$x$0$i$lcssa = $x$0$i;$y$0$i$lcssa = $y$0$i;
            break;
           }
          } else {
           label = 86;
          }
         }
         if ((label|0) == 86) {
          label = 0;
          $166 = ($c$2$i|0)>(57);
          $167 = (($$pre$i) + -87)|0;
          $d$0$i = $166 ? $167 : $160;
          $168 = ($169|0)<(0);
          $170 = ($171>>>0)<(8);
          $172 = ($169|0)==(0);
          $173 = $172 & $170;
          $174 = $168 | $173;
          do {
           if ($174) {
            $175 = $x$0$i << 4;
            $176 = (($d$0$i) + ($175))|0;
            $gottail$1$i = $gottail$0$i;$scale$1$i = $scale$0$i;$x$1$i = $176;$y$1$i = $y$0$i;
           } else {
            $177 = ($169|0)<(0);
            $178 = ($171>>>0)<(14);
            $179 = ($169|0)==(0);
            $180 = $179 & $178;
            $181 = $177 | $180;
            if ($181) {
             $182 = (+($d$0$i|0));
             $183 = $scale$0$i * 0.0625;
             $184 = $183 * $182;
             $185 = $y$0$i + $184;
             $gottail$1$i = $gottail$0$i;$scale$1$i = $183;$x$1$i = $x$0$i;$y$1$i = $185;
             break;
            }
            $186 = ($d$0$i|0)==(0);
            $187 = ($gottail$0$i|0)!=(0);
            $or$cond$i = $187 | $186;
            if ($or$cond$i) {
             $gottail$1$i = $gottail$0$i;$scale$1$i = $scale$0$i;$x$1$i = $x$0$i;$y$1$i = $y$0$i;
            } else {
             $188 = $scale$0$i * 0.5;
             $189 = $y$0$i + $188;
             $gottail$1$i = 1;$scale$1$i = $scale$0$i;$x$1$i = $x$0$i;$y$1$i = $189;
            }
           }
          } while(0);
          $190 = (_i64Add(($171|0),($169|0),1,0)|0);
          $191 = tempRet0;
          $696 = $694;$697 = $695;$698 = $190;$699 = $191;$gotdig$3$i = 1;$gotrad$1$i = $gotrad$0$i;$gottail$2$i = $gottail$1$i;$scale$2$i = $scale$1$i;$x$2$i = $x$1$i;$y$2$i = $y$1$i;
         }
         $192 = HEAP32[$0>>2]|0;
         $193 = HEAP32[$1>>2]|0;
         $194 = ($192>>>0)<($193>>>0);
         if ($194) {
          $195 = ((($192)) + 1|0);
          HEAP32[$0>>2] = $195;
          $196 = HEAP8[$192>>0]|0;
          $197 = $196&255;
          $169 = $699;$171 = $698;$694 = $696;$695 = $697;$c$2$i = $197;$gotdig$2$i = $gotdig$3$i;$gotrad$0$i = $gotrad$1$i;$gottail$0$i = $gottail$2$i;$scale$0$i = $scale$2$i;$x$0$i = $x$2$i;$y$0$i = $y$2$i;
          continue;
         } else {
          $198 = (___shgetc($f)|0);
          $169 = $699;$171 = $698;$694 = $696;$695 = $697;$c$2$i = $198;$gotdig$2$i = $gotdig$3$i;$gotrad$0$i = $gotrad$1$i;$gottail$0$i = $gottail$2$i;$scale$0$i = $scale$2$i;$x$0$i = $x$2$i;$y$0$i = $y$2$i;
          continue;
         }
        }
        $199 = ($gotdig$2$i$lcssa|0)==(0);
        if ($199) {
         $200 = HEAP32[$1>>2]|0;
         $201 = ($200|0)==(0|0);
         if (!($201)) {
          $202 = HEAP32[$0>>2]|0;
          $203 = ((($202)) + -1|0);
          HEAP32[$0>>2] = $203;
         }
         $204 = ($pok|0)==(0);
         if ($204) {
          ___shlim($f,0);
         } else {
          if (!($201)) {
           $205 = HEAP32[$0>>2]|0;
           $206 = ((($205)) + -1|0);
           HEAP32[$0>>2] = $206;
           $207 = ($gotrad$0$i$lcssa|0)==(0);
           if (!($207)) {
            $208 = ((($205)) + -2|0);
            HEAP32[$0>>2] = $208;
           }
          }
         }
         $209 = (+($sign$0|0));
         $210 = $209 * 0.0;
         $$0 = $210;
         break L4;
        }
        $211 = ($gotrad$0$i$lcssa|0)==(0);
        $212 = $211 ? $213 : $214;
        $215 = $211 ? $216 : $217;
        $218 = ($216|0)<(0);
        $219 = ($213>>>0)<(8);
        $220 = ($216|0)==(0);
        $221 = $220 & $219;
        $222 = $218 | $221;
        if ($222) {
         $224 = $213;$225 = $216;$x$324$i = $x$0$i$lcssa;
         while(1) {
          $223 = $x$324$i << 4;
          $226 = (_i64Add(($224|0),($225|0),1,0)|0);
          $227 = tempRet0;
          $228 = ($227|0)<(0);
          $229 = ($226>>>0)<(8);
          $230 = ($227|0)==(0);
          $231 = $230 & $229;
          $232 = $228 | $231;
          if ($232) {
           $224 = $226;$225 = $227;$x$324$i = $223;
          } else {
           $x$3$lcssa$i = $223;
           break;
          }
         }
        } else {
         $x$3$lcssa$i = $x$0$i$lcssa;
        }
        $233 = $c$2$lcssa$i | 32;
        $234 = ($233|0)==(112);
        if ($234) {
         $235 = (_scanexp($f,$pok)|0);
         $236 = tempRet0;
         $237 = ($235|0)==(0);
         $238 = ($236|0)==(-2147483648);
         $239 = $237 & $238;
         if ($239) {
          $240 = ($pok|0)==(0);
          if ($240) {
           ___shlim($f,0);
           $$0 = 0.0;
           break L4;
          }
          $241 = HEAP32[$1>>2]|0;
          $242 = ($241|0)==(0|0);
          if ($242) {
           $253 = 0;$254 = 0;
          } else {
           $243 = HEAP32[$0>>2]|0;
           $244 = ((($243)) + -1|0);
           HEAP32[$0>>2] = $244;
           $253 = 0;$254 = 0;
          }
         } else {
          $253 = $235;$254 = $236;
         }
        } else {
         $245 = HEAP32[$1>>2]|0;
         $246 = ($245|0)==(0|0);
         if ($246) {
          $253 = 0;$254 = 0;
         } else {
          $247 = HEAP32[$0>>2]|0;
          $248 = ((($247)) + -1|0);
          HEAP32[$0>>2] = $248;
          $253 = 0;$254 = 0;
         }
        }
        $249 = (_bitshift64Shl(($212|0),($215|0),2)|0);
        $250 = tempRet0;
        $251 = (_i64Add(($249|0),($250|0),-32,-1)|0);
        $252 = tempRet0;
        $255 = (_i64Add(($251|0),($252|0),($253|0),($254|0))|0);
        $256 = tempRet0;
        $257 = ($x$3$lcssa$i|0)==(0);
        if ($257) {
         $258 = (+($sign$0|0));
         $259 = $258 * 0.0;
         $$0 = $259;
         break L4;
        }
        $260 = (0 - ($emin$0$ph))|0;
        $261 = ($256|0)>(0);
        $262 = ($255>>>0)>($260>>>0);
        $263 = ($256|0)==(0);
        $264 = $263 & $262;
        $265 = $261 | $264;
        if ($265) {
         $266 = (___errno_location()|0);
         HEAP32[$266>>2] = 34;
         $267 = (+($sign$0|0));
         $268 = $267 * 1.7976931348623157E+308;
         $269 = $268 * 1.7976931348623157E+308;
         $$0 = $269;
         break L4;
        }
        $270 = (($emin$0$ph) + -106)|0;
        $271 = ($270|0)<(0);
        $272 = $271 << 31 >> 31;
        $273 = ($256|0)<($272|0);
        $274 = ($255>>>0)<($270>>>0);
        $275 = ($256|0)==($272|0);
        $276 = $275 & $274;
        $277 = $273 | $276;
        if ($277) {
         $279 = (___errno_location()|0);
         HEAP32[$279>>2] = 34;
         $280 = (+($sign$0|0));
         $281 = $280 * 2.2250738585072014E-308;
         $282 = $281 * 2.2250738585072014E-308;
         $$0 = $282;
         break L4;
        }
        $278 = ($x$3$lcssa$i|0)>(-1);
        if ($278) {
         $288 = $255;$289 = $256;$x$419$i = $x$3$lcssa$i;$y$320$i = $y$0$i$lcssa;
         while(1) {
          $283 = !($y$320$i >= 0.5);
          $284 = $x$419$i << 1;
          $285 = $y$320$i + -1.0;
          $286 = $283&1;
          $287 = $286 | $284;
          $x$5$i = $287 ^ 1;
          $$pn$i = $283 ? $y$320$i : $285;
          $y$4$i = $y$320$i + $$pn$i;
          $290 = (_i64Add(($288|0),($289|0),-1,-1)|0);
          $291 = tempRet0;
          $292 = ($287|0)>(-1);
          if ($292) {
           $288 = $290;$289 = $291;$x$419$i = $x$5$i;$y$320$i = $y$4$i;
          } else {
           $297 = $290;$298 = $291;$x$4$lcssa$i = $x$5$i;$y$3$lcssa$i = $y$4$i;
           break;
          }
         }
        } else {
         $297 = $255;$298 = $256;$x$4$lcssa$i = $x$3$lcssa$i;$y$3$lcssa$i = $y$0$i$lcssa;
        }
        $293 = ($emin$0$ph|0)<(0);
        $294 = $293 << 31 >> 31;
        $295 = (_i64Subtract(32,0,($emin$0$ph|0),($294|0))|0);
        $296 = tempRet0;
        $299 = (_i64Add(($297|0),($298|0),($295|0),($296|0))|0);
        $300 = tempRet0;
        $301 = (0)>($300|0);
        $302 = ($bits$0$ph>>>0)>($299>>>0);
        $303 = (0)==($300|0);
        $304 = $303 & $302;
        $305 = $301 | $304;
        if ($305) {
         $306 = ($299|0)<(0);
         if ($306) {
          $$0710$i = 0;
          label = 127;
         } else {
          $$07$i = $299;
          label = 125;
         }
        } else {
         $$07$i = $bits$0$ph;
         label = 125;
        }
        if ((label|0) == 125) {
         $307 = ($$07$i|0)<(53);
         if ($307) {
          $$0710$i = $$07$i;
          label = 127;
         } else {
          $$pre41$i = (+($sign$0|0));
          $$0711$i = $$07$i;$$pre$phi42$iZ2D = $$pre41$i;$bias$0$i = 0.0;
         }
        }
        if ((label|0) == 127) {
         $308 = (84 - ($$0710$i))|0;
         $309 = (+_scalbn(1.0,$308));
         $310 = (+($sign$0|0));
         $311 = (+_copysignl($309,$310));
         $$0711$i = $$0710$i;$$pre$phi42$iZ2D = $310;$bias$0$i = $311;
        }
        $312 = ($$0711$i|0)<(32);
        $313 = $y$3$lcssa$i != 0.0;
        $or$cond4$i = $313 & $312;
        $314 = $x$4$lcssa$i & 1;
        $315 = ($314|0)==(0);
        $or$cond9$i = $315 & $or$cond4$i;
        $316 = $or$cond9$i&1;
        $x$6$i = (($316) + ($x$4$lcssa$i))|0;
        $y$5$i = $or$cond9$i ? 0.0 : $y$3$lcssa$i;
        $317 = (+($x$6$i>>>0));
        $318 = $$pre$phi42$iZ2D * $317;
        $319 = $bias$0$i + $318;
        $320 = $$pre$phi42$iZ2D * $y$5$i;
        $321 = $320 + $319;
        $322 = $321 - $bias$0$i;
        $323 = $322 != 0.0;
        if (!($323)) {
         $324 = (___errno_location()|0);
         HEAP32[$324>>2] = 34;
        }
        $325 = (+_scalbnl($322,$297));
        $$0 = $325;
        break L4;
       } else {
        $c$6 = $c$5;
       }
      } while(0);
      $sum$i = (($emin$0$ph) + ($bits$0$ph))|0;
      $330 = (0 - ($sum$i))|0;
      $$09$i = $c$6;$gotdig$0$i12 = 0;
      L184: while(1) {
       switch ($$09$i|0) {
       case 46:  {
        $gotdig$0$i12$lcssa273 = $gotdig$0$i12;
        label = 138;
        break L184;
        break;
       }
       case 48:  {
        break;
       }
       default: {
        $$2$i = $$09$i;$700 = 0;$701 = 0;$gotdig$2$i13 = $gotdig$0$i12;$gotrad$0$i14 = 0;
        break L184;
       }
       }
       $331 = HEAP32[$0>>2]|0;
       $332 = HEAP32[$1>>2]|0;
       $333 = ($331>>>0)<($332>>>0);
       if ($333) {
        $334 = ((($331)) + 1|0);
        HEAP32[$0>>2] = $334;
        $335 = HEAP8[$331>>0]|0;
        $336 = $335&255;
        $$09$i = $336;$gotdig$0$i12 = 1;
        continue;
       } else {
        $337 = (___shgetc($f)|0);
        $$09$i = $337;$gotdig$0$i12 = 1;
        continue;
       }
      }
      if ((label|0) == 138) {
       $338 = HEAP32[$0>>2]|0;
       $339 = HEAP32[$1>>2]|0;
       $340 = ($338>>>0)<($339>>>0);
       if ($340) {
        $341 = ((($338)) + 1|0);
        HEAP32[$0>>2] = $341;
        $342 = HEAP8[$338>>0]|0;
        $343 = $342&255;
        $$1$ph$i = $343;
       } else {
        $344 = (___shgetc($f)|0);
        $$1$ph$i = $344;
       }
       $345 = ($$1$ph$i|0)==(48);
       if ($345) {
        $346 = 0;$347 = 0;
        while(1) {
         $348 = (_i64Add(($346|0),($347|0),-1,-1)|0);
         $349 = tempRet0;
         $350 = HEAP32[$0>>2]|0;
         $351 = HEAP32[$1>>2]|0;
         $352 = ($350>>>0)<($351>>>0);
         if ($352) {
          $353 = ((($350)) + 1|0);
          HEAP32[$0>>2] = $353;
          $354 = HEAP8[$350>>0]|0;
          $355 = $354&255;
          $$1$be$i = $355;
         } else {
          $356 = (___shgetc($f)|0);
          $$1$be$i = $356;
         }
         $357 = ($$1$be$i|0)==(48);
         if ($357) {
          $346 = $348;$347 = $349;
         } else {
          $$2$i = $$1$be$i;$700 = $348;$701 = $349;$gotdig$2$i13 = 1;$gotrad$0$i14 = 1;
          break;
         }
        }
       } else {
        $$2$i = $$1$ph$i;$700 = 0;$701 = 0;$gotdig$2$i13 = $gotdig$0$i12$lcssa273;$gotrad$0$i14 = 1;
       }
      }
      HEAP32[$x$i>>2] = 0;
      $358 = (($$2$i) + -48)|0;
      $359 = ($358>>>0)<(10);
      $360 = ($$2$i|0)==(46);
      $361 = $360 | $359;
      L203: do {
       if ($361) {
        $362 = ((($x$i)) + 496|0);
        $$3105$i = $$2$i;$365 = 0;$366 = 0;$702 = $360;$703 = $358;$704 = $700;$705 = $701;$gotdig$3101$i = $gotdig$2$i13;$gotrad$1102$i = $gotrad$0$i14;$j$0104$i = 0;$k$0103$i = 0;$lnz$0100$i = 0;
        L205: while(1) {
         do {
          if ($702) {
           $cond$i = ($gotrad$1102$i|0)==(0);
           if ($cond$i) {
            $706 = $365;$707 = $366;$708 = $365;$709 = $366;$gotdig$4$i = $gotdig$3101$i;$gotrad$2$i = 1;$j$2$i = $j$0104$i;$k$2$i = $k$0103$i;$lnz$2$i = $lnz$0100$i;
           } else {
            $710 = $704;$711 = $705;$712 = $365;$713 = $366;$gotdig$3101$i$lcssa = $gotdig$3101$i;$j$0104$i$lcssa = $j$0104$i;$k$0103$i$lcssa = $k$0103$i;$lnz$0100$i$lcssa = $lnz$0100$i;
            break L205;
           }
          } else {
           $364 = ($k$0103$i|0)<(125);
           $367 = (_i64Add(($365|0),($366|0),1,0)|0);
           $368 = tempRet0;
           $369 = ($$3105$i|0)!=(48);
           if (!($364)) {
            if (!($369)) {
             $706 = $704;$707 = $705;$708 = $367;$709 = $368;$gotdig$4$i = $gotdig$3101$i;$gotrad$2$i = $gotrad$1102$i;$j$2$i = $j$0104$i;$k$2$i = $k$0103$i;$lnz$2$i = $lnz$0100$i;
             break;
            }
            $379 = HEAP32[$362>>2]|0;
            $380 = $379 | 1;
            HEAP32[$362>>2] = $380;
            $706 = $704;$707 = $705;$708 = $367;$709 = $368;$gotdig$4$i = $gotdig$3101$i;$gotrad$2$i = $gotrad$1102$i;$j$2$i = $j$0104$i;$k$2$i = $k$0103$i;$lnz$2$i = $lnz$0100$i;
            break;
           }
           $$lnz$0$i = $369 ? $367 : $lnz$0100$i;
           $370 = ($j$0104$i|0)==(0);
           $371 = (($x$i) + ($k$0103$i<<2)|0);
           if ($370) {
            $storemerge$i = $703;
           } else {
            $372 = HEAP32[$371>>2]|0;
            $373 = ($372*10)|0;
            $374 = (($$3105$i) + -48)|0;
            $375 = (($374) + ($373))|0;
            $storemerge$i = $375;
           }
           HEAP32[$371>>2] = $storemerge$i;
           $376 = (($j$0104$i) + 1)|0;
           $377 = ($376|0)==(9);
           $378 = $377&1;
           $$k$0$i = (($378) + ($k$0103$i))|0;
           $$11$i = $377 ? 0 : $376;
           $706 = $704;$707 = $705;$708 = $367;$709 = $368;$gotdig$4$i = 1;$gotrad$2$i = $gotrad$1102$i;$j$2$i = $$11$i;$k$2$i = $$k$0$i;$lnz$2$i = $$lnz$0$i;
          }
         } while(0);
         $381 = HEAP32[$0>>2]|0;
         $382 = HEAP32[$1>>2]|0;
         $383 = ($381>>>0)<($382>>>0);
         if ($383) {
          $384 = ((($381)) + 1|0);
          HEAP32[$0>>2] = $384;
          $385 = HEAP8[$381>>0]|0;
          $386 = $385&255;
          $$3$be$i = $386;
         } else {
          $387 = (___shgetc($f)|0);
          $$3$be$i = $387;
         }
         $388 = (($$3$be$i) + -48)|0;
         $389 = ($388>>>0)<(10);
         $390 = ($$3$be$i|0)==(46);
         $391 = $390 | $389;
         if ($391) {
          $$3105$i = $$3$be$i;$365 = $708;$366 = $709;$702 = $390;$703 = $388;$704 = $706;$705 = $707;$gotdig$3101$i = $gotdig$4$i;$gotrad$1102$i = $gotrad$2$i;$j$0104$i = $j$2$i;$k$0103$i = $k$2$i;$lnz$0100$i = $lnz$2$i;
         } else {
          $$3$lcssa$i = $$3$be$i;$394 = $708;$395 = $706;$397 = $709;$398 = $707;$gotdig$3$lcssa$i = $gotdig$4$i;$gotrad$1$lcssa$i = $gotrad$2$i;$j$0$lcssa$i = $j$2$i;$k$0$lcssa$i = $k$2$i;$lnz$0$lcssa$i = $lnz$2$i;
          label = 161;
          break L203;
         }
        }
        $363 = ($gotdig$3101$i$lcssa|0)!=(0);
        $714 = $712;$715 = $713;$716 = $710;$717 = $711;$718 = $363;$j$069$i = $j$0104$i$lcssa;$k$065$i = $k$0103$i$lcssa;$lnz$059$i = $lnz$0100$i$lcssa;
        label = 169;
       } else {
        $$3$lcssa$i = $$2$i;$394 = 0;$395 = $700;$397 = 0;$398 = $701;$gotdig$3$lcssa$i = $gotdig$2$i13;$gotrad$1$lcssa$i = $gotrad$0$i14;$j$0$lcssa$i = 0;$k$0$lcssa$i = 0;$lnz$0$lcssa$i = 0;
        label = 161;
       }
      } while(0);
      do {
       if ((label|0) == 161) {
        $392 = ($gotrad$1$lcssa$i|0)==(0);
        $393 = $392 ? $394 : $395;
        $396 = $392 ? $397 : $398;
        $399 = ($gotdig$3$lcssa$i|0)!=(0);
        $400 = $$3$lcssa$i | 32;
        $401 = ($400|0)==(101);
        $or$cond13$i = $401 & $399;
        if (!($or$cond13$i)) {
         $416 = ($$3$lcssa$i|0)>(-1);
         if ($416) {
          $714 = $394;$715 = $397;$716 = $393;$717 = $396;$718 = $399;$j$069$i = $j$0$lcssa$i;$k$065$i = $k$0$lcssa$i;$lnz$059$i = $lnz$0$lcssa$i;
          label = 169;
          break;
         } else {
          $719 = $394;$720 = $397;$721 = $399;$722 = $393;$723 = $396;$j$068$i = $j$0$lcssa$i;$k$064$i = $k$0$lcssa$i;$lnz$058$i = $lnz$0$lcssa$i;
          label = 171;
          break;
         }
        }
        $402 = (_scanexp($f,$pok)|0);
        $403 = tempRet0;
        $404 = ($402|0)==(0);
        $405 = ($403|0)==(-2147483648);
        $406 = $404 & $405;
        if ($406) {
         $407 = ($pok|0)==(0);
         if ($407) {
          ___shlim($f,0);
          $$0$i27 = 0.0;
          break;
         }
         $408 = HEAP32[$1>>2]|0;
         $409 = ($408|0)==(0|0);
         if ($409) {
          $412 = 0;$413 = 0;
         } else {
          $410 = HEAP32[$0>>2]|0;
          $411 = ((($410)) + -1|0);
          HEAP32[$0>>2] = $411;
          $412 = 0;$413 = 0;
         }
        } else {
         $412 = $402;$413 = $403;
        }
        $414 = (_i64Add(($412|0),($413|0),($393|0),($396|0))|0);
        $415 = tempRet0;
        $427 = $414;$428 = $394;$430 = $415;$431 = $397;$j$067$i = $j$0$lcssa$i;$k$063$i = $k$0$lcssa$i;$lnz$057$i = $lnz$0$lcssa$i;
        label = 173;
       }
      } while(0);
      if ((label|0) == 169) {
       $417 = HEAP32[$1>>2]|0;
       $418 = ($417|0)==(0|0);
       if ($418) {
        $719 = $714;$720 = $715;$721 = $718;$722 = $716;$723 = $717;$j$068$i = $j$069$i;$k$064$i = $k$065$i;$lnz$058$i = $lnz$059$i;
        label = 171;
       } else {
        $419 = HEAP32[$0>>2]|0;
        $420 = ((($419)) + -1|0);
        HEAP32[$0>>2] = $420;
        if ($718) {
         $427 = $716;$428 = $714;$430 = $717;$431 = $715;$j$067$i = $j$069$i;$k$063$i = $k$065$i;$lnz$057$i = $lnz$059$i;
         label = 173;
        } else {
         label = 172;
        }
       }
      }
      if ((label|0) == 171) {
       if ($721) {
        $427 = $722;$428 = $719;$430 = $723;$431 = $720;$j$067$i = $j$068$i;$k$063$i = $k$064$i;$lnz$057$i = $lnz$058$i;
        label = 173;
       } else {
        label = 172;
       }
      }
      do {
       if ((label|0) == 172) {
        $421 = (___errno_location()|0);
        HEAP32[$421>>2] = 22;
        ___shlim($f,0);
        $$0$i27 = 0.0;
       }
       else if ((label|0) == 173) {
        $422 = HEAP32[$x$i>>2]|0;
        $423 = ($422|0)==(0);
        if ($423) {
         $424 = (+($sign$0|0));
         $425 = $424 * 0.0;
         $$0$i27 = $425;
         break;
        }
        $426 = ($427|0)==($428|0);
        $429 = ($430|0)==($431|0);
        $432 = $426 & $429;
        $433 = ($431|0)<(0);
        $434 = ($428>>>0)<(10);
        $435 = ($431|0)==(0);
        $436 = $435 & $434;
        $437 = $433 | $436;
        $or$cond$i16 = $437 & $432;
        if ($or$cond$i16) {
         $438 = ($bits$0$ph>>>0)>(30);
         $439 = $422 >>> $bits$0$ph;
         $440 = ($439|0)==(0);
         $or$cond15$i = $438 | $440;
         if ($or$cond15$i) {
          $441 = (+($sign$0|0));
          $442 = (+($422>>>0));
          $443 = $441 * $442;
          $$0$i27 = $443;
          break;
         }
        }
        $444 = (($emin$0$ph|0) / -2)&-1;
        $445 = ($444|0)<(0);
        $446 = $445 << 31 >> 31;
        $447 = ($430|0)>($446|0);
        $448 = ($427>>>0)>($444>>>0);
        $449 = ($430|0)==($446|0);
        $450 = $449 & $448;
        $451 = $447 | $450;
        if ($451) {
         $452 = (___errno_location()|0);
         HEAP32[$452>>2] = 34;
         $453 = (+($sign$0|0));
         $454 = $453 * 1.7976931348623157E+308;
         $455 = $454 * 1.7976931348623157E+308;
         $$0$i27 = $455;
         break;
        }
        $456 = (($emin$0$ph) + -106)|0;
        $457 = ($456|0)<(0);
        $458 = $457 << 31 >> 31;
        $459 = ($430|0)<($458|0);
        $460 = ($427>>>0)<($456>>>0);
        $461 = ($430|0)==($458|0);
        $462 = $461 & $460;
        $463 = $459 | $462;
        if ($463) {
         $464 = (___errno_location()|0);
         HEAP32[$464>>2] = 34;
         $465 = (+($sign$0|0));
         $466 = $465 * 2.2250738585072014E-308;
         $467 = $466 * 2.2250738585072014E-308;
         $$0$i27 = $467;
         break;
        }
        $468 = ($j$067$i|0)==(0);
        if ($468) {
         $k$3$i = $k$063$i;
        } else {
         $469 = ($j$067$i|0)<(9);
         if ($469) {
          $470 = (($x$i) + ($k$063$i<<2)|0);
          $$promoted$i = HEAP32[$470>>2]|0;
          $472 = $$promoted$i;$j$394$i = $j$067$i;
          while(1) {
           $471 = ($472*10)|0;
           $473 = (($j$394$i) + 1)|0;
           $exitcond$i = ($473|0)==(9);
           if ($exitcond$i) {
            $$lcssa265 = $471;
            break;
           } else {
            $472 = $471;$j$394$i = $473;
           }
          }
          HEAP32[$470>>2] = $$lcssa265;
         }
         $474 = (($k$063$i) + 1)|0;
         $k$3$i = $474;
        }
        $475 = ($lnz$057$i|0)<(9);
        if ($475) {
         $476 = ($lnz$057$i|0)<=($427|0);
         $477 = ($427|0)<(18);
         $or$cond3$i = $476 & $477;
         if ($or$cond3$i) {
          $478 = ($427|0)==(9);
          if ($478) {
           $479 = (+($sign$0|0));
           $480 = HEAP32[$x$i>>2]|0;
           $481 = (+($480>>>0));
           $482 = $479 * $481;
           $$0$i27 = $482;
           break;
          }
          $483 = ($427|0)<(9);
          if ($483) {
           $484 = (+($sign$0|0));
           $485 = HEAP32[$x$i>>2]|0;
           $486 = (+($485>>>0));
           $487 = $484 * $486;
           $488 = (8 - ($427))|0;
           $489 = (3692 + ($488<<2)|0);
           $490 = HEAP32[$489>>2]|0;
           $491 = (+($490|0));
           $492 = $487 / $491;
           $$0$i27 = $492;
           break;
          }
          $$neg32$i = (($bits$0$ph) + 27)|0;
          $493 = Math_imul($427, -3)|0;
          $494 = (($$neg32$i) + ($493))|0;
          $495 = ($494|0)>(30);
          $$pre$i17 = HEAP32[$x$i>>2]|0;
          $496 = $$pre$i17 >>> $494;
          $497 = ($496|0)==(0);
          $or$cond182$i = $495 | $497;
          if ($or$cond182$i) {
           $498 = (+($sign$0|0));
           $499 = (+($$pre$i17>>>0));
           $500 = $498 * $499;
           $501 = (($427) + -10)|0;
           $502 = (3692 + ($501<<2)|0);
           $503 = HEAP32[$502>>2]|0;
           $504 = (+($503|0));
           $505 = $500 * $504;
           $$0$i27 = $505;
           break;
          }
         }
        }
        $506 = (($427|0) % 9)&-1;
        $507 = ($506|0)==(0);
        if ($507) {
         $a$2$ph38$i = 0;$e2$0$ph$i = 0;$rp$2$ph36$i = $427;$z$1$ph37$i = $k$3$i;
        } else {
         $508 = ($427|0)>(-1);
         $509 = (($506) + 9)|0;
         $510 = $508 ? $506 : $509;
         $511 = (8 - ($510))|0;
         $512 = (3692 + ($511<<2)|0);
         $513 = HEAP32[$512>>2]|0;
         $514 = ($k$3$i|0)==(0);
         if ($514) {
          $a$0$lcssa151$i = 0;$rp$0$lcssa152$i = $427;$z$0$i = 0;
         } else {
          $515 = (1000000000 / ($513|0))&-1;
          $a$085$i = 0;$carry$087$i = 0;$k$486$i = 0;$rp$084$i = $427;
          while(1) {
           $516 = (($x$i) + ($k$486$i<<2)|0);
           $517 = HEAP32[$516>>2]|0;
           $518 = (($517>>>0) % ($513>>>0))&-1;
           $519 = (($517>>>0) / ($513>>>0))&-1;
           $520 = (($519) + ($carry$087$i))|0;
           HEAP32[$516>>2] = $520;
           $521 = Math_imul($518, $515)|0;
           $522 = ($k$486$i|0)==($a$085$i|0);
           $523 = ($520|0)==(0);
           $or$cond16$i = $522 & $523;
           $524 = (($k$486$i) + 1)|0;
           $525 = $524 & 127;
           $526 = (($rp$084$i) + -9)|0;
           $rp$1$i18 = $or$cond16$i ? $526 : $rp$084$i;
           $a$1$i = $or$cond16$i ? $525 : $a$085$i;
           $527 = ($524|0)==($k$3$i|0);
           if ($527) {
            $$lcssa264 = $521;$a$1$i$lcssa = $a$1$i;$rp$1$i18$lcssa = $rp$1$i18;
            break;
           } else {
            $a$085$i = $a$1$i;$carry$087$i = $521;$k$486$i = $524;$rp$084$i = $rp$1$i18;
           }
          }
          $528 = ($$lcssa264|0)==(0);
          if ($528) {
           $a$0$lcssa151$i = $a$1$i$lcssa;$rp$0$lcssa152$i = $rp$1$i18$lcssa;$z$0$i = $k$3$i;
          } else {
           $529 = (($k$3$i) + 1)|0;
           $530 = (($x$i) + ($k$3$i<<2)|0);
           HEAP32[$530>>2] = $$lcssa264;
           $a$0$lcssa151$i = $a$1$i$lcssa;$rp$0$lcssa152$i = $rp$1$i18$lcssa;$z$0$i = $529;
          }
         }
         $531 = (9 - ($510))|0;
         $532 = (($531) + ($rp$0$lcssa152$i))|0;
         $a$2$ph38$i = $a$0$lcssa151$i;$e2$0$ph$i = 0;$rp$2$ph36$i = $532;$z$1$ph37$i = $z$0$i;
        }
        L284: while(1) {
         $533 = ($rp$2$ph36$i|0)<(18);
         $534 = ($rp$2$ph36$i|0)==(18);
         $535 = (($x$i) + ($a$2$ph38$i<<2)|0);
         $e2$0$i19 = $e2$0$ph$i;$z$1$i = $z$1$ph37$i;
         while(1) {
          if (!($533)) {
           if (!($534)) {
            $a$3$ph$i = $a$2$ph38$i;$e2$1$ph$i = $e2$0$i19;$rp$3$ph34$i = $rp$2$ph36$i;$z$5$ph$i = $z$1$i;
            break L284;
           }
           $536 = HEAP32[$535>>2]|0;
           $537 = ($536>>>0)<(9007199);
           if (!($537)) {
            $a$3$ph$i = $a$2$ph38$i;$e2$1$ph$i = $e2$0$i19;$rp$3$ph34$i = 18;$z$5$ph$i = $z$1$i;
            break L284;
           }
          }
          $538 = (($z$1$i) + 127)|0;
          $carry1$0$i = 0;$k$5$in$i = $538;$z$2$i = $z$1$i;
          while(1) {
           $k$5$i = $k$5$in$i & 127;
           $539 = (($x$i) + ($k$5$i<<2)|0);
           $540 = HEAP32[$539>>2]|0;
           $541 = (_bitshift64Shl(($540|0),0,29)|0);
           $542 = tempRet0;
           $543 = (_i64Add(($541|0),($542|0),($carry1$0$i|0),0)|0);
           $544 = tempRet0;
           $545 = ($544>>>0)>(0);
           $546 = ($543>>>0)>(1000000000);
           $547 = ($544|0)==(0);
           $548 = $547 & $546;
           $549 = $545 | $548;
           if ($549) {
            $550 = (___udivdi3(($543|0),($544|0),1000000000,0)|0);
            $551 = tempRet0;
            $552 = (___uremdi3(($543|0),($544|0),1000000000,0)|0);
            $553 = tempRet0;
            $$sink$off0$i = $552;$carry1$1$i = $550;
           } else {
            $$sink$off0$i = $543;$carry1$1$i = 0;
           }
           HEAP32[$539>>2] = $$sink$off0$i;
           $554 = (($z$2$i) + 127)|0;
           $555 = $554 & 127;
           $556 = ($k$5$i|0)!=($555|0);
           $557 = ($k$5$i|0)==($a$2$ph38$i|0);
           $or$cond17$i = $556 | $557;
           $558 = ($$sink$off0$i|0)==(0);
           $k$5$z$2$i = $558 ? $k$5$i : $z$2$i;
           $z$3$i = $or$cond17$i ? $z$2$i : $k$5$z$2$i;
           $559 = (($k$5$i) + -1)|0;
           if ($557) {
            $carry1$1$i$lcssa = $carry1$1$i;$z$3$i$lcssa = $z$3$i;
            break;
           } else {
            $carry1$0$i = $carry1$1$i;$k$5$in$i = $559;$z$2$i = $z$3$i;
           }
          }
          $560 = (($e2$0$i19) + -29)|0;
          $561 = ($carry1$1$i$lcssa|0)==(0);
          if ($561) {
           $e2$0$i19 = $560;$z$1$i = $z$3$i$lcssa;
          } else {
           $$lcssa263 = $560;$carry1$1$i$lcssa$lcssa = $carry1$1$i$lcssa;$z$3$i$lcssa$lcssa = $z$3$i$lcssa;
           break;
          }
         }
         $562 = (($rp$2$ph36$i) + 9)|0;
         $563 = (($a$2$ph38$i) + 127)|0;
         $564 = $563 & 127;
         $565 = ($564|0)==($z$3$i$lcssa$lcssa|0);
         if ($565) {
          $566 = (($z$3$i$lcssa$lcssa) + 127)|0;
          $567 = $566 & 127;
          $568 = (($x$i) + ($567<<2)|0);
          $569 = HEAP32[$568>>2]|0;
          $570 = (($z$3$i$lcssa$lcssa) + 126)|0;
          $571 = $570 & 127;
          $572 = (($x$i) + ($571<<2)|0);
          $573 = HEAP32[$572>>2]|0;
          $574 = $573 | $569;
          HEAP32[$572>>2] = $574;
          $z$4$i = $567;
         } else {
          $z$4$i = $z$3$i$lcssa$lcssa;
         }
         $575 = (($x$i) + ($564<<2)|0);
         HEAP32[$575>>2] = $carry1$1$i$lcssa$lcssa;
         $a$2$ph38$i = $564;$e2$0$ph$i = $$lcssa263;$rp$2$ph36$i = $562;$z$1$ph37$i = $z$4$i;
        }
        L302: while(1) {
         $606 = (($z$5$ph$i) + 1)|0;
         $604 = $606 & 127;
         $607 = (($z$5$ph$i) + 127)|0;
         $608 = $607 & 127;
         $609 = (($x$i) + ($608<<2)|0);
         $a$3$ph157$i = $a$3$ph$i;$e2$1$ph156$i = $e2$1$ph$i;$rp$3$ph$i = $rp$3$ph34$i;
         while(1) {
          $610 = ($rp$3$ph$i|0)==(18);
          $611 = ($rp$3$ph$i|0)>(27);
          $$18$i = $611 ? 9 : 1;
          $$not$i = $610 ^ 1;
          $a$3$i = $a$3$ph157$i;$e2$1$i = $e2$1$ph156$i;
          while(1) {
           $576 = $a$3$i & 127;
           $577 = ($576|0)==($z$5$ph$i|0);
           do {
            if ($577) {
             label = 219;
            } else {
             $578 = (($x$i) + ($576<<2)|0);
             $579 = HEAP32[$578>>2]|0;
             $580 = ($579>>>0)<(9007199);
             if ($580) {
              label = 219;
              break;
             }
             $581 = ($579>>>0)>(9007199);
             if ($581) {
              break;
             }
             $582 = (($a$3$i) + 1)|0;
             $583 = $582 & 127;
             $584 = ($583|0)==($z$5$ph$i|0);
             if ($584) {
              label = 219;
              break;
             }
             $690 = (($x$i) + ($583<<2)|0);
             $691 = HEAP32[$690>>2]|0;
             $692 = ($691>>>0)<(254740991);
             if ($692) {
              label = 219;
              break;
             }
             $693 = ($691>>>0)>(254740991);
             $brmerge$i28 = $693 | $$not$i;
             if (!($brmerge$i28)) {
              $617 = $576;$a$3$i249 = $a$3$i;$e2$1$i246 = $e2$1$i;$z$7$i = $z$5$ph$i;
              break L302;
             }
            }
           } while(0);
           if ((label|0) == 219) {
            label = 0;
            if ($610) {
             label = 220;
             break L302;
            }
           }
           $585 = (($e2$1$i) + ($$18$i))|0;
           $586 = ($a$3$i|0)==($z$5$ph$i|0);
           if ($586) {
            $a$3$i = $z$5$ph$i;$e2$1$i = $585;
           } else {
            $$lcssa256 = $585;$a$3$i$lcssa248 = $a$3$i;
            break;
           }
          }
          $587 = 1 << $$18$i;
          $588 = (($587) + -1)|0;
          $589 = 1000000000 >>> $$18$i;
          $a$478$i = $a$3$i$lcssa248;$carry3$081$i = 0;$k$679$i = $a$3$i$lcssa248;$rp$477$i = $rp$3$ph$i;
          while(1) {
           $590 = (($x$i) + ($k$679$i<<2)|0);
           $591 = HEAP32[$590>>2]|0;
           $592 = $591 & $588;
           $593 = $591 >>> $$18$i;
           $594 = (($593) + ($carry3$081$i))|0;
           HEAP32[$590>>2] = $594;
           $595 = Math_imul($592, $589)|0;
           $596 = ($k$679$i|0)==($a$478$i|0);
           $597 = ($594|0)==(0);
           $or$cond19$i = $596 & $597;
           $598 = (($k$679$i) + 1)|0;
           $599 = $598 & 127;
           $600 = (($rp$477$i) + -9)|0;
           $rp$5$i = $or$cond19$i ? $600 : $rp$477$i;
           $a$5$i = $or$cond19$i ? $599 : $a$478$i;
           $601 = ($599|0)==($z$5$ph$i|0);
           if ($601) {
            $$lcssa257 = $595;$a$5$i$lcssa = $a$5$i;$rp$5$i$lcssa = $rp$5$i;
            break;
           } else {
            $a$478$i = $a$5$i;$carry3$081$i = $595;$k$679$i = $599;$rp$477$i = $rp$5$i;
           }
          }
          $602 = ($$lcssa257|0)==(0);
          if ($602) {
           $a$3$ph157$i = $a$5$i$lcssa;$e2$1$ph156$i = $$lcssa256;$rp$3$ph$i = $rp$5$i$lcssa;
           continue;
          }
          $603 = ($604|0)==($a$5$i$lcssa|0);
          if (!($603)) {
           $$lcssa256$lcssa = $$lcssa256;$$lcssa257$lcssa = $$lcssa257;$a$5$i$lcssa$lcssa = $a$5$i$lcssa;$rp$5$i$lcssa$lcssa = $rp$5$i$lcssa;
           break;
          }
          $612 = HEAP32[$609>>2]|0;
          $613 = $612 | 1;
          HEAP32[$609>>2] = $613;
          $a$3$ph157$i = $a$5$i$lcssa;$e2$1$ph156$i = $$lcssa256;$rp$3$ph$i = $rp$5$i$lcssa;
         }
         $605 = (($x$i) + ($z$5$ph$i<<2)|0);
         HEAP32[$605>>2] = $$lcssa257$lcssa;
         $a$3$ph$i = $a$5$i$lcssa$lcssa;$e2$1$ph$i = $$lcssa256$lcssa;$rp$3$ph34$i = $rp$5$i$lcssa$lcssa;$z$5$ph$i = $604;
        }
        if ((label|0) == 220) {
         if ($577) {
          $614 = (($604) + -1)|0;
          $615 = (($x$i) + ($614<<2)|0);
          HEAP32[$615>>2] = 0;
          $617 = $z$5$ph$i;$a$3$i249 = $a$3$i;$e2$1$i246 = $e2$1$i;$z$7$i = $604;
         } else {
          $617 = $576;$a$3$i249 = $a$3$i;$e2$1$i246 = $e2$1$i;$z$7$i = $z$5$ph$i;
         }
        }
        $616 = (($x$i) + ($617<<2)|0);
        $618 = HEAP32[$616>>2]|0;
        $619 = (+($618>>>0));
        $620 = (($a$3$i249) + 1)|0;
        $621 = $620 & 127;
        $622 = ($621|0)==($z$7$i|0);
        if ($622) {
         $679 = (($a$3$i249) + 2)|0;
         $680 = $679 & 127;
         $681 = (($680) + -1)|0;
         $682 = (($x$i) + ($681<<2)|0);
         HEAP32[$682>>2] = 0;
         $z$7$1$i = $680;
        } else {
         $z$7$1$i = $z$7$i;
        }
        $683 = $619 * 1.0E+9;
        $684 = (($x$i) + ($621<<2)|0);
        $685 = HEAP32[$684>>2]|0;
        $686 = (+($685>>>0));
        $687 = $683 + $686;
        $643 = (+($sign$0|0));
        $625 = $643 * $687;
        $663 = (($e2$1$i246) + 53)|0;
        $669 = (($663) - ($emin$0$ph))|0;
        $670 = ($669|0)<($bits$0$ph|0);
        $688 = ($669|0)<(0);
        $$$i = $688 ? 0 : $669;
        $denormal$0$i = $670&1;
        $$010$i = $670 ? $$$i : $bits$0$ph;
        $689 = ($$010$i|0)<(53);
        if ($689) {
         $623 = (105 - ($$010$i))|0;
         $624 = (+_scalbn(1.0,$623));
         $626 = (+_copysignl($624,$625));
         $627 = (53 - ($$010$i))|0;
         $628 = (+_scalbn(1.0,$627));
         $629 = (+_fmodl($625,$628));
         $630 = $625 - $629;
         $631 = $626 + $630;
         $bias$0$i25 = $626;$frac$0$i = $629;$y$1$i24 = $631;
        } else {
         $bias$0$i25 = 0.0;$frac$0$i = 0.0;$y$1$i24 = $625;
        }
        $632 = (($a$3$i249) + 2)|0;
        $633 = $632 & 127;
        $634 = ($633|0)==($z$7$1$i|0);
        do {
         if ($634) {
          $frac$2$i = $frac$0$i;
         } else {
          $635 = (($x$i) + ($633<<2)|0);
          $636 = HEAP32[$635>>2]|0;
          $637 = ($636>>>0)<(500000000);
          do {
           if ($637) {
            $638 = ($636|0)==(0);
            if ($638) {
             $639 = (($a$3$i249) + 3)|0;
             $640 = $639 & 127;
             $641 = ($640|0)==($z$7$1$i|0);
             if ($641) {
              $frac$1$i = $frac$0$i;
              break;
             }
            }
            $642 = $643 * 0.25;
            $644 = $642 + $frac$0$i;
            $frac$1$i = $644;
           } else {
            $645 = ($636>>>0)>(500000000);
            if ($645) {
             $646 = $643 * 0.75;
             $647 = $646 + $frac$0$i;
             $frac$1$i = $647;
             break;
            }
            $648 = (($a$3$i249) + 3)|0;
            $649 = $648 & 127;
            $650 = ($649|0)==($z$7$1$i|0);
            if ($650) {
             $651 = $643 * 0.5;
             $652 = $651 + $frac$0$i;
             $frac$1$i = $652;
             break;
            } else {
             $653 = $643 * 0.75;
             $654 = $653 + $frac$0$i;
             $frac$1$i = $654;
             break;
            }
           }
          } while(0);
          $655 = (53 - ($$010$i))|0;
          $656 = ($655|0)>(1);
          if (!($656)) {
           $frac$2$i = $frac$1$i;
           break;
          }
          $657 = (+_fmodl($frac$1$i,1.0));
          $658 = $657 != 0.0;
          if ($658) {
           $frac$2$i = $frac$1$i;
           break;
          }
          $659 = $frac$1$i + 1.0;
          $frac$2$i = $659;
         }
        } while(0);
        $660 = $y$1$i24 + $frac$2$i;
        $661 = $660 - $bias$0$i25;
        $662 = $663 & 2147483647;
        $664 = (-2 - ($sum$i))|0;
        $665 = ($662|0)>($664|0);
        do {
         if ($665) {
          $666 = (+Math_abs((+$661)));
          $667 = !($666 >= 9007199254740992.0);
          if ($667) {
           $denormal$2$i = $denormal$0$i;$e2$2$i = $e2$1$i246;$y$2$i26 = $661;
          } else {
           $668 = ($$010$i|0)==($669|0);
           $or$cond20$i = $670 & $668;
           $denormal$1$i = $or$cond20$i ? 0 : $denormal$0$i;
           $671 = $661 * 0.5;
           $672 = (($e2$1$i246) + 1)|0;
           $denormal$2$i = $denormal$1$i;$e2$2$i = $672;$y$2$i26 = $671;
          }
          $673 = (($e2$2$i) + 50)|0;
          $674 = ($673|0)>($330|0);
          if (!($674)) {
           $675 = ($denormal$2$i|0)!=(0);
           $676 = $frac$2$i != 0.0;
           $or$cond8$i = $676 & $675;
           if (!($or$cond8$i)) {
            $e2$3$i = $e2$2$i;$y$3$i = $y$2$i26;
            break;
           }
          }
          $677 = (___errno_location()|0);
          HEAP32[$677>>2] = 34;
          $e2$3$i = $e2$2$i;$y$3$i = $y$2$i26;
         } else {
          $e2$3$i = $e2$1$i246;$y$3$i = $661;
         }
        } while(0);
        $678 = (+_scalbnl($y$3$i,$e2$3$i));
        $$0$i27 = $678;
       }
      } while(0);
      $$0 = $$0$i27;
      break L4;
      break;
     }
     default: {
      $109 = HEAP32[$1>>2]|0;
      $110 = ($109|0)==(0|0);
      if (!($110)) {
       $111 = HEAP32[$0>>2]|0;
       $112 = ((($111)) + -1|0);
       HEAP32[$0>>2] = $112;
      }
      $113 = (___errno_location()|0);
      HEAP32[$113>>2] = 22;
      ___shlim($f,0);
      $$0 = 0.0;
      break L4;
     }
     }
    }
    }
   } while(0);
   if ((label|0) == 23) {
    $41 = HEAP32[$1>>2]|0;
    $42 = ($41|0)==(0|0);
    if (!($42)) {
     $43 = HEAP32[$0>>2]|0;
     $44 = ((($43)) + -1|0);
     HEAP32[$0>>2] = $44;
    }
    $45 = ($pok|0)!=(0);
    $46 = ($i$0$lcssa>>>0)>(3);
    $or$cond9 = $45 & $46;
    if ($or$cond9) {
     $i$1 = $i$0$lcssa;
     while(1) {
      if (!($42)) {
       $47 = HEAP32[$0>>2]|0;
       $48 = ((($47)) + -1|0);
       HEAP32[$0>>2] = $48;
      }
      $49 = (($i$1) + -1)|0;
      $$old8 = ($49>>>0)>(3);
      if ($$old8) {
       $i$1 = $49;
      } else {
       break;
      }
     }
    }
   }
   $50 = (+($sign$0|0));
   $51 = $50 * inf;
   $52 = $51;
   $$0 = $52;
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function ___intscan($f,$base,$pok,$0,$1) {
 $f = $f|0;
 $base = $base|0;
 $pok = $pok|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $$122 = 0, $$123 = 0, $$base21 = 0, $$lcssa = 0, $$lcssa130 = 0, $$lcssa131 = 0, $$lcssa132 = 0, $$lcssa133 = 0, $$lcssa134 = 0, $$lcssa135 = 0, $$sum = 0, $$sum14 = 0, $$sum1445 = 0, $$sum15 = 0, $$sum16 = 0, $$sum17 = 0, $$sum18 = 0, $$sum1865 = 0, $$sum19 = 0;
 var $$sum20 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;
 var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $c$0 = 0, $c$1 = 0, $c$124 = 0, $c$2$be = 0, $c$2$be$lcssa = 0;
 var $c$2$lcssa = 0, $c$3$be = 0, $c$3$lcssa = 0, $c$371 = 0, $c$4$be = 0, $c$4$be$lcssa = 0, $c$4$lcssa = 0, $c$5$be = 0, $c$6$be = 0, $c$6$be$lcssa = 0, $c$6$lcssa = 0, $c$7$be = 0, $c$753 = 0, $c$8 = 0, $c$9$be = 0, $neg$0 = 0, $neg$0$ = 0, $neg$1 = 0, $or$cond = 0, $or$cond12 = 0;
 var $or$cond40 = 0, $or$cond5 = 0, $or$cond7 = 0, $x$082 = 0, $x$146 = 0, $x$266 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($base>>>0)>(36);
 L1: do {
  if ($2) {
   $5 = (___errno_location()|0);
   HEAP32[$5>>2] = 22;
   $286 = 0;$287 = 0;
  } else {
   $3 = ((($f)) + 4|0);
   $4 = ((($f)) + 100|0);
   while(1) {
    $6 = HEAP32[$3>>2]|0;
    $7 = HEAP32[$4>>2]|0;
    $8 = ($6>>>0)<($7>>>0);
    if ($8) {
     $9 = ((($6)) + 1|0);
     HEAP32[$3>>2] = $9;
     $10 = HEAP8[$6>>0]|0;
     $11 = $10&255;
     $13 = $11;
    } else {
     $12 = (___shgetc($f)|0);
     $13 = $12;
    }
    $14 = (_isspace($13)|0);
    $15 = ($14|0)==(0);
    if ($15) {
     $$lcssa135 = $13;
     break;
    }
   }
   $16 = ($$lcssa135|0)==(45);
   L11: do {
    switch ($$lcssa135|0) {
    case 43: case 45:  {
     $17 = $16 << 31 >> 31;
     $18 = HEAP32[$3>>2]|0;
     $19 = HEAP32[$4>>2]|0;
     $20 = ($18>>>0)<($19>>>0);
     if ($20) {
      $21 = ((($18)) + 1|0);
      HEAP32[$3>>2] = $21;
      $22 = HEAP8[$18>>0]|0;
      $23 = $22&255;
      $c$0 = $23;$neg$0 = $17;
      break L11;
     } else {
      $24 = (___shgetc($f)|0);
      $c$0 = $24;$neg$0 = $17;
      break L11;
     }
     break;
    }
    default: {
     $c$0 = $$lcssa135;$neg$0 = 0;
    }
    }
   } while(0);
   $25 = ($base|0)==(0);
   $26 = $base & -17;
   $27 = ($26|0)==(0);
   $28 = ($c$0|0)==(48);
   $or$cond5 = $27 & $28;
   do {
    if ($or$cond5) {
     $29 = HEAP32[$3>>2]|0;
     $30 = HEAP32[$4>>2]|0;
     $31 = ($29>>>0)<($30>>>0);
     if ($31) {
      $32 = ((($29)) + 1|0);
      HEAP32[$3>>2] = $32;
      $33 = HEAP8[$29>>0]|0;
      $34 = $33&255;
      $37 = $34;
     } else {
      $35 = (___shgetc($f)|0);
      $37 = $35;
     }
     $36 = $37 | 32;
     $38 = ($36|0)==(120);
     if (!($38)) {
      if ($25) {
       $$123 = 8;$c$124 = $37;
       label = 46;
       break;
      } else {
       $$1 = $base;$c$1 = $37;
       label = 32;
       break;
      }
     }
     $39 = HEAP32[$3>>2]|0;
     $40 = HEAP32[$4>>2]|0;
     $41 = ($39>>>0)<($40>>>0);
     if ($41) {
      $42 = ((($39)) + 1|0);
      HEAP32[$3>>2] = $42;
      $43 = HEAP8[$39>>0]|0;
      $44 = $43&255;
      $46 = $44;
     } else {
      $45 = (___shgetc($f)|0);
      $46 = $45;
     }
     $$sum20 = (($46) + 1)|0;
     $47 = (21073 + ($$sum20)|0);
     $48 = HEAP8[$47>>0]|0;
     $49 = ($48&255)>(15);
     if ($49) {
      $50 = HEAP32[$4>>2]|0;
      $51 = ($50|0)==(0|0);
      if (!($51)) {
       $52 = HEAP32[$3>>2]|0;
       $53 = ((($52)) + -1|0);
       HEAP32[$3>>2] = $53;
      }
      $54 = ($pok|0)==(0);
      if ($54) {
       ___shlim($f,0);
       $286 = 0;$287 = 0;
       break L1;
      }
      if ($51) {
       $286 = 0;$287 = 0;
       break L1;
      }
      $55 = HEAP32[$3>>2]|0;
      $56 = ((($55)) + -1|0);
      HEAP32[$3>>2] = $56;
      $286 = 0;$287 = 0;
      break L1;
     } else {
      $$123 = 16;$c$124 = $46;
      label = 46;
     }
    } else {
     $$base21 = $25 ? 10 : $base;
     $$sum = (($c$0) + 1)|0;
     $57 = (21073 + ($$sum)|0);
     $58 = HEAP8[$57>>0]|0;
     $59 = $58&255;
     $60 = ($59>>>0)<($$base21>>>0);
     if ($60) {
      $$1 = $$base21;$c$1 = $c$0;
      label = 32;
     } else {
      $61 = HEAP32[$4>>2]|0;
      $62 = ($61|0)==(0|0);
      if (!($62)) {
       $63 = HEAP32[$3>>2]|0;
       $64 = ((($63)) + -1|0);
       HEAP32[$3>>2] = $64;
      }
      ___shlim($f,0);
      $65 = (___errno_location()|0);
      HEAP32[$65>>2] = 22;
      $286 = 0;$287 = 0;
      break L1;
     }
    }
   } while(0);
   if ((label|0) == 32) {
    $66 = ($$1|0)==(10);
    if ($66) {
     $67 = (($c$1) + -48)|0;
     $68 = ($67>>>0)<(10);
     if ($68) {
      $71 = $67;$x$082 = 0;
      while(1) {
       $69 = ($x$082*10)|0;
       $70 = (($69) + ($71))|0;
       $72 = HEAP32[$3>>2]|0;
       $73 = HEAP32[$4>>2]|0;
       $74 = ($72>>>0)<($73>>>0);
       if ($74) {
        $75 = ((($72)) + 1|0);
        HEAP32[$3>>2] = $75;
        $76 = HEAP8[$72>>0]|0;
        $77 = $76&255;
        $c$2$be = $77;
       } else {
        $78 = (___shgetc($f)|0);
        $c$2$be = $78;
       }
       $79 = (($c$2$be) + -48)|0;
       $80 = ($79>>>0)<(10);
       $81 = ($70>>>0)<(429496729);
       $82 = $80 & $81;
       if ($82) {
        $71 = $79;$x$082 = $70;
       } else {
        $$lcssa134 = $70;$c$2$be$lcssa = $c$2$be;
        break;
       }
      }
      $288 = $$lcssa134;$289 = 0;$c$2$lcssa = $c$2$be$lcssa;
     } else {
      $288 = 0;$289 = 0;$c$2$lcssa = $c$1;
     }
     $83 = (($c$2$lcssa) + -48)|0;
     $84 = ($83>>>0)<(10);
     if ($84) {
      $85 = $288;$86 = $289;$90 = $83;$c$371 = $c$2$lcssa;
      while(1) {
       $87 = (___muldi3(($85|0),($86|0),10,0)|0);
       $88 = tempRet0;
       $89 = ($90|0)<(0);
       $91 = $89 << 31 >> 31;
       $92 = $90 ^ -1;
       $93 = $91 ^ -1;
       $94 = ($88>>>0)>($93>>>0);
       $95 = ($87>>>0)>($92>>>0);
       $96 = ($88|0)==($93|0);
       $97 = $96 & $95;
       $98 = $94 | $97;
       if ($98) {
        $$lcssa = $90;$290 = $85;$291 = $86;$c$3$lcssa = $c$371;
        break;
       }
       $99 = (_i64Add(($87|0),($88|0),($90|0),($91|0))|0);
       $100 = tempRet0;
       $101 = HEAP32[$3>>2]|0;
       $102 = HEAP32[$4>>2]|0;
       $103 = ($101>>>0)<($102>>>0);
       if ($103) {
        $104 = ((($101)) + 1|0);
        HEAP32[$3>>2] = $104;
        $105 = HEAP8[$101>>0]|0;
        $106 = $105&255;
        $c$3$be = $106;
       } else {
        $107 = (___shgetc($f)|0);
        $c$3$be = $107;
       }
       $108 = (($c$3$be) + -48)|0;
       $109 = ($108>>>0)<(10);
       $110 = ($100>>>0)<(429496729);
       $111 = ($99>>>0)<(2576980378);
       $112 = ($100|0)==(429496729);
       $113 = $112 & $111;
       $114 = $110 | $113;
       $or$cond7 = $109 & $114;
       if ($or$cond7) {
        $85 = $99;$86 = $100;$90 = $108;$c$371 = $c$3$be;
       } else {
        $$lcssa = $108;$290 = $99;$291 = $100;$c$3$lcssa = $c$3$be;
        break;
       }
      }
      $115 = ($$lcssa>>>0)>(9);
      if ($115) {
       $260 = $291;$262 = $290;$neg$1 = $neg$0;
      } else {
       $$122 = 10;$292 = $290;$293 = $291;$c$8 = $c$3$lcssa;
       label = 72;
      }
     } else {
      $260 = $289;$262 = $288;$neg$1 = $neg$0;
     }
    } else {
     $$123 = $$1;$c$124 = $c$1;
     label = 46;
    }
   }
   L63: do {
    if ((label|0) == 46) {
     $116 = (($$123) + -1)|0;
     $117 = $116 & $$123;
     $118 = ($117|0)==(0);
     if ($118) {
      $123 = ($$123*23)|0;
      $124 = $123 >>> 5;
      $125 = $124 & 7;
      $126 = (21330 + ($125)|0);
      $127 = HEAP8[$126>>0]|0;
      $128 = $127 << 24 >> 24;
      $$sum1445 = (($c$124) + 1)|0;
      $129 = (21073 + ($$sum1445)|0);
      $130 = HEAP8[$129>>0]|0;
      $131 = $130&255;
      $132 = ($131>>>0)<($$123>>>0);
      if ($132) {
       $135 = $131;$x$146 = 0;
       while(1) {
        $133 = $x$146 << $128;
        $134 = $135 | $133;
        $136 = HEAP32[$3>>2]|0;
        $137 = HEAP32[$4>>2]|0;
        $138 = ($136>>>0)<($137>>>0);
        if ($138) {
         $139 = ((($136)) + 1|0);
         HEAP32[$3>>2] = $139;
         $140 = HEAP8[$136>>0]|0;
         $141 = $140&255;
         $c$4$be = $141;
        } else {
         $142 = (___shgetc($f)|0);
         $c$4$be = $142;
        }
        $$sum14 = (($c$4$be) + 1)|0;
        $143 = (21073 + ($$sum14)|0);
        $144 = HEAP8[$143>>0]|0;
        $145 = $144&255;
        $146 = ($145>>>0)<($$123>>>0);
        $147 = ($134>>>0)<(134217728);
        $148 = $147 & $146;
        if ($148) {
         $135 = $145;$x$146 = $134;
        } else {
         $$lcssa130 = $134;$$lcssa131 = $144;$c$4$be$lcssa = $c$4$be;
         break;
        }
       }
       $152 = $$lcssa131;$155 = 0;$157 = $$lcssa130;$c$4$lcssa = $c$4$be$lcssa;
      } else {
       $152 = $130;$155 = 0;$157 = 0;$c$4$lcssa = $c$124;
      }
      $149 = (_bitshift64Lshr(-1,-1,($128|0))|0);
      $150 = tempRet0;
      $151 = $152&255;
      $153 = ($151>>>0)>=($$123>>>0);
      $154 = ($155>>>0)>($150>>>0);
      $156 = ($157>>>0)>($149>>>0);
      $158 = ($155|0)==($150|0);
      $159 = $158 & $156;
      $160 = $154 | $159;
      $or$cond40 = $153 | $160;
      if ($or$cond40) {
       $$122 = $$123;$292 = $157;$293 = $155;$c$8 = $c$4$lcssa;
       label = 72;
       break;
      } else {
       $161 = $157;$162 = $155;$166 = $152;
      }
      while(1) {
       $163 = (_bitshift64Shl(($161|0),($162|0),($128|0))|0);
       $164 = tempRet0;
       $165 = $166&255;
       $167 = $165 | $163;
       $168 = HEAP32[$3>>2]|0;
       $169 = HEAP32[$4>>2]|0;
       $170 = ($168>>>0)<($169>>>0);
       if ($170) {
        $171 = ((($168)) + 1|0);
        HEAP32[$3>>2] = $171;
        $172 = HEAP8[$168>>0]|0;
        $173 = $172&255;
        $c$5$be = $173;
       } else {
        $174 = (___shgetc($f)|0);
        $c$5$be = $174;
       }
       $$sum15 = (($c$5$be) + 1)|0;
       $175 = (21073 + ($$sum15)|0);
       $176 = HEAP8[$175>>0]|0;
       $177 = $176&255;
       $178 = ($177>>>0)>=($$123>>>0);
       $179 = ($164>>>0)>($150>>>0);
       $180 = ($167>>>0)>($149>>>0);
       $181 = ($164|0)==($150|0);
       $182 = $181 & $180;
       $183 = $179 | $182;
       $or$cond = $178 | $183;
       if ($or$cond) {
        $$122 = $$123;$292 = $167;$293 = $164;$c$8 = $c$5$be;
        label = 72;
        break L63;
       } else {
        $161 = $167;$162 = $164;$166 = $176;
       }
      }
     }
     $$sum1865 = (($c$124) + 1)|0;
     $119 = (21073 + ($$sum1865)|0);
     $120 = HEAP8[$119>>0]|0;
     $121 = $120&255;
     $122 = ($121>>>0)<($$123>>>0);
     if ($122) {
      $186 = $121;$x$266 = 0;
      while(1) {
       $184 = Math_imul($x$266, $$123)|0;
       $185 = (($186) + ($184))|0;
       $187 = HEAP32[$3>>2]|0;
       $188 = HEAP32[$4>>2]|0;
       $189 = ($187>>>0)<($188>>>0);
       if ($189) {
        $190 = ((($187)) + 1|0);
        HEAP32[$3>>2] = $190;
        $191 = HEAP8[$187>>0]|0;
        $192 = $191&255;
        $c$6$be = $192;
       } else {
        $193 = (___shgetc($f)|0);
        $c$6$be = $193;
       }
       $$sum18 = (($c$6$be) + 1)|0;
       $194 = (21073 + ($$sum18)|0);
       $195 = HEAP8[$194>>0]|0;
       $196 = $195&255;
       $197 = ($196>>>0)<($$123>>>0);
       $198 = ($185>>>0)<(119304647);
       $199 = $198 & $197;
       if ($199) {
        $186 = $196;$x$266 = $185;
       } else {
        $$lcssa132 = $185;$$lcssa133 = $195;$c$6$be$lcssa = $c$6$be;
        break;
       }
      }
      $201 = $$lcssa133;$294 = $$lcssa132;$295 = 0;$c$6$lcssa = $c$6$be$lcssa;
     } else {
      $201 = $120;$294 = 0;$295 = 0;$c$6$lcssa = $c$124;
     }
     $200 = $201&255;
     $202 = ($200>>>0)<($$123>>>0);
     if ($202) {
      $203 = (___udivdi3(-1,-1,($$123|0),0)|0);
      $204 = tempRet0;
      $206 = $295;$208 = $294;$215 = $201;$c$753 = $c$6$lcssa;
      while(1) {
       $205 = ($206>>>0)>($204>>>0);
       $207 = ($208>>>0)>($203>>>0);
       $209 = ($206|0)==($204|0);
       $210 = $209 & $207;
       $211 = $205 | $210;
       if ($211) {
        $$122 = $$123;$292 = $208;$293 = $206;$c$8 = $c$753;
        label = 72;
        break L63;
       }
       $212 = (___muldi3(($208|0),($206|0),($$123|0),0)|0);
       $213 = tempRet0;
       $214 = $215&255;
       $216 = $214 ^ -1;
       $217 = ($213>>>0)>(4294967295);
       $218 = ($212>>>0)>($216>>>0);
       $219 = ($213|0)==(-1);
       $220 = $219 & $218;
       $221 = $217 | $220;
       if ($221) {
        $$122 = $$123;$292 = $208;$293 = $206;$c$8 = $c$753;
        label = 72;
        break L63;
       }
       $222 = (_i64Add(($214|0),0,($212|0),($213|0))|0);
       $223 = tempRet0;
       $224 = HEAP32[$3>>2]|0;
       $225 = HEAP32[$4>>2]|0;
       $226 = ($224>>>0)<($225>>>0);
       if ($226) {
        $227 = ((($224)) + 1|0);
        HEAP32[$3>>2] = $227;
        $228 = HEAP8[$224>>0]|0;
        $229 = $228&255;
        $c$7$be = $229;
       } else {
        $230 = (___shgetc($f)|0);
        $c$7$be = $230;
       }
       $$sum19 = (($c$7$be) + 1)|0;
       $231 = (21073 + ($$sum19)|0);
       $232 = HEAP8[$231>>0]|0;
       $233 = $232&255;
       $234 = ($233>>>0)<($$123>>>0);
       if ($234) {
        $206 = $223;$208 = $222;$215 = $232;$c$753 = $c$7$be;
       } else {
        $$122 = $$123;$292 = $222;$293 = $223;$c$8 = $c$7$be;
        label = 72;
        break;
       }
      }
     } else {
      $$122 = $$123;$292 = $294;$293 = $295;$c$8 = $c$6$lcssa;
      label = 72;
     }
    }
   } while(0);
   if ((label|0) == 72) {
    $$sum16 = (($c$8) + 1)|0;
    $235 = (21073 + ($$sum16)|0);
    $236 = HEAP8[$235>>0]|0;
    $237 = $236&255;
    $238 = ($237>>>0)<($$122>>>0);
    if ($238) {
     while(1) {
      $239 = HEAP32[$3>>2]|0;
      $240 = HEAP32[$4>>2]|0;
      $241 = ($239>>>0)<($240>>>0);
      if ($241) {
       $242 = ((($239)) + 1|0);
       HEAP32[$3>>2] = $242;
       $243 = HEAP8[$239>>0]|0;
       $244 = $243&255;
       $c$9$be = $244;
      } else {
       $245 = (___shgetc($f)|0);
       $c$9$be = $245;
      }
      $$sum17 = (($c$9$be) + 1)|0;
      $246 = (21073 + ($$sum17)|0);
      $247 = HEAP8[$246>>0]|0;
      $248 = $247&255;
      $249 = ($248>>>0)<($$122>>>0);
      if (!($249)) {
       break;
      }
     }
     $250 = (___errno_location()|0);
     HEAP32[$250>>2] = 34;
     $251 = $0 & 1;
     $252 = ($251|0)==(0);
     $253 = (0)==(0);
     $254 = $252 & $253;
     $neg$0$ = $254 ? $neg$0 : 0;
     $260 = $1;$262 = $0;$neg$1 = $neg$0$;
    } else {
     $260 = $293;$262 = $292;$neg$1 = $neg$0;
    }
   }
   $255 = HEAP32[$4>>2]|0;
   $256 = ($255|0)==(0|0);
   if (!($256)) {
    $257 = HEAP32[$3>>2]|0;
    $258 = ((($257)) + -1|0);
    HEAP32[$3>>2] = $258;
   }
   $259 = ($260>>>0)<($1>>>0);
   $261 = ($262>>>0)<($0>>>0);
   $263 = ($260|0)==($1|0);
   $264 = $263 & $261;
   $265 = $259 | $264;
   if (!($265)) {
    $266 = $0 & 1;
    $267 = ($266|0)!=(0);
    $268 = (0)!=(0);
    $269 = $267 | $268;
    $270 = ($neg$1|0)!=(0);
    $or$cond12 = $269 | $270;
    if (!($or$cond12)) {
     $271 = (___errno_location()|0);
     HEAP32[$271>>2] = 34;
     $272 = (_i64Add(($0|0),($1|0),-1,-1)|0);
     $273 = tempRet0;
     $286 = $273;$287 = $272;
     break;
    }
    $274 = ($260>>>0)>($1>>>0);
    $275 = ($262>>>0)>($0>>>0);
    $276 = ($260|0)==($1|0);
    $277 = $276 & $275;
    $278 = $274 | $277;
    if ($278) {
     $279 = (___errno_location()|0);
     HEAP32[$279>>2] = 34;
     $286 = $1;$287 = $0;
     break;
    }
   }
   $280 = ($neg$1|0)<(0);
   $281 = $280 << 31 >> 31;
   $282 = $262 ^ $neg$1;
   $283 = $260 ^ $281;
   $284 = (_i64Subtract(($282|0),($283|0),($neg$1|0),($281|0))|0);
   $285 = tempRet0;
   $286 = $285;$287 = $284;
  }
 } while(0);
 tempRet0 = ($286);
 return ($287|0);
}
function ___shlim($f,$lim) {
 $f = $f|0;
 $lim = $lim|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 104|0);
 HEAP32[$0>>2] = $lim;
 $1 = ((($f)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($f)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $2;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ((($f)) + 108|0);
 HEAP32[$8>>2] = $7;
 $9 = ($lim|0)!=(0);
 $10 = ($7|0)>($lim|0);
 $or$cond = $9 & $10;
 if ($or$cond) {
  $11 = (($4) + ($lim)|0);
  $12 = ((($f)) + 100|0);
  HEAP32[$12>>2] = $11;
 } else {
  $13 = ((($f)) + 100|0);
  HEAP32[$13>>2] = $5;
 }
 return;
}
function ___shgetc($f) {
 $f = $f|0;
 var $$0 = 0, $$phi$trans$insert = 0, $$phi$trans$insert3 = 0, $$pre = 0, $$pre4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 104|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if ($2) {
  label = 3;
 } else {
  $3 = ((($f)) + 108|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ($4|0)<($1|0);
  if ($5) {
   label = 3;
  } else {
   label = 4;
  }
 }
 if ((label|0) == 3) {
  $6 = (___uflow($f)|0);
  $7 = ($6|0)<(0);
  if ($7) {
   label = 4;
  } else {
   $9 = HEAP32[$0>>2]|0;
   $10 = ($9|0)==(0);
   $$phi$trans$insert = ((($f)) + 8|0);
   if ($10) {
    $$pre = HEAP32[$$phi$trans$insert>>2]|0;
    $11 = $$pre;
    $26 = $$pre;$41 = $11;
    label = 9;
   } else {
    $12 = HEAP32[$$phi$trans$insert>>2]|0;
    $13 = ((($f)) + 4|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = $12;
    $16 = $14;
    $17 = (($15) - ($16))|0;
    $18 = ((($f)) + 108|0);
    $19 = HEAP32[$18>>2]|0;
    $20 = (($9) - ($19))|0;
    $21 = (($20) + -1)|0;
    $22 = ($17|0)>($21|0);
    if ($22) {
     $23 = (($14) + ($21)|0);
     $24 = ((($f)) + 100|0);
     HEAP32[$24>>2] = $23;
     $28 = $12;
    } else {
     $26 = $15;$41 = $12;
     label = 9;
    }
   }
   if ((label|0) == 9) {
    $25 = ((($f)) + 100|0);
    HEAP32[$25>>2] = $26;
    $28 = $41;
   }
   $27 = ($28|0)==(0|0);
   $$phi$trans$insert3 = ((($f)) + 4|0);
   $$pre4 = HEAP32[$$phi$trans$insert3>>2]|0;
   if (!($27)) {
    $29 = $28;
    $30 = $$pre4;
    $31 = ((($f)) + 108|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (($29) + 1)|0;
    $34 = (($33) - ($30))|0;
    $35 = (($34) + ($32))|0;
    HEAP32[$31>>2] = $35;
   }
   $36 = ((($$pre4)) + -1|0);
   $37 = HEAP8[$36>>0]|0;
   $38 = $37&255;
   $39 = ($38|0)==($6|0);
   if ($39) {
    $$0 = $6;
   } else {
    $40 = $6&255;
    HEAP8[$36>>0] = $40;
    $$0 = $6;
   }
  }
 }
 if ((label|0) == 4) {
  $8 = ((($f)) + 100|0);
  HEAP32[$8>>2] = 0;
  $$0 = -1;
 }
 return ($$0|0);
}
function ___syscall_ret($r) {
 $r = $r|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($r>>>0)>(4294963200);
 if ($0) {
  $1 = (0 - ($r))|0;
  $2 = (___errno_location()|0);
  HEAP32[$2>>2] = $1;
  $$0 = -1;
 } else {
  $$0 = $r;
 }
 return ($$0|0);
}
function _catclose($catd) {
 $catd = $catd|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _catgets($catd,$set_id,$msg_id,$s) {
 $catd = $catd|0;
 $set_id = $set_id|0;
 $msg_id = $msg_id|0;
 $s = $s|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($s|0);
}
function _catopen($name,$oflag) {
 $name = $name|0;
 $oflag = $oflag|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ((-1)|0);
}
function _freelocale($l) {
 $l = $l|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($l);
 return;
}
function _isdigit_l($c,$l) {
 $c = $c|0;
 $l = $l|0;
 var $0 = 0, $isdigit = 0, $isdigittmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isdigittmp = (($c) + -48)|0;
 $isdigit = ($isdigittmp>>>0)<(10);
 $0 = $isdigit&1;
 return ($0|0);
}
function _isxdigit_l($c,$l) {
 $c = $c|0;
 $l = $l|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_isxdigit($c)|0);
 return ($0|0);
}
function _newlocale($mask,$name,$base) {
 $mask = $mask|0;
 $name = $name|0;
 $base = $base|0;
 var $$01 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$name>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  label = 4;
 } else {
  $2 = (_strcmp($name,26006)|0);
  $3 = ($2|0)==(0);
  if ($3) {
   label = 4;
  } else {
   $4 = (_strcmp($name,21339)|0);
   $5 = ($4|0)==(0);
   if ($5) {
    label = 4;
   } else {
    $$01 = 0;
   }
  }
 }
 if ((label|0) == 4) {
  $6 = ($base|0)==(0|0);
  if ($6) {
   $7 = (_calloc(1,4)|0);
   $$01 = $7;
  } else {
   $$01 = $base;
  }
 }
 return ($$01|0);
}
function _uselocale($l) {
 $l = $l|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 $1 = ((($0)) + 176|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($l|0)==(0|0);
 if (!($3)) {
  HEAP32[$1>>2] = $l;
 }
 return ($2|0);
}
function _copysign($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $y;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = $1 & 2147483647;
 $5 = $3 & -2147483648;
 $6 = $5 | $4;
 HEAP32[tempDoublePtr>>2] = $0;HEAP32[tempDoublePtr+4>>2] = $6;$7 = +HEAPF64[tempDoublePtr>>3];
 return (+$7);
}
function _copysignl($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_copysign($x,$y));
 return (+$0);
}
function _fmod($x,$y) {
 $x = +$x;
 $y = +$y;
 var $$0 = 0.0, $$lcssa7 = 0, $$x = 0.0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0.0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0.0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0, $24 = 0.0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0.0;
 var $ex$0$lcssa = 0, $ex$026 = 0, $ex$1 = 0, $ex$2$lcssa = 0, $ex$212 = 0, $ex$3$lcssa = 0, $ex$39 = 0, $ey$0$lcssa = 0, $ey$020 = 0, $ey$1$ph = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $y;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $5 = tempRet0;
 $6 = $4 & 2047;
 $7 = (_bitshift64Lshr(($2|0),($3|0),52)|0);
 $8 = tempRet0;
 $9 = $7 & 2047;
 $10 = $1 & -2147483648;
 $11 = (_bitshift64Shl(($2|0),($3|0),1)|0);
 $12 = tempRet0;
 $13 = ($11|0)==(0);
 $14 = ($12|0)==(0);
 $15 = $13 & $14;
 L1: do {
  if ($15) {
   label = 3;
  } else {
   $16 = $3 & 2147483647;
   $17 = ($16>>>0)>(2146435072);
   $18 = ($2>>>0)>(0);
   $19 = ($16|0)==(2146435072);
   $20 = $19 & $18;
   $21 = $17 | $20;
   $22 = ($6|0)==(2047);
   $or$cond = $21 | $22;
   if ($or$cond) {
    label = 3;
   } else {
    $25 = (_bitshift64Shl(($0|0),($1|0),1)|0);
    $26 = tempRet0;
    $27 = ($26>>>0)>($12>>>0);
    $28 = ($25>>>0)>($11>>>0);
    $29 = ($26|0)==($12|0);
    $30 = $29 & $28;
    $31 = $27 | $30;
    if (!($31)) {
     $32 = ($25|0)==($11|0);
     $33 = ($26|0)==($12|0);
     $34 = $32 & $33;
     $35 = $x * 0.0;
     $$x = $34 ? $35 : $x;
     return (+$$x);
    }
    $36 = ($6|0)==(0);
    if ($36) {
     $37 = (_bitshift64Shl(($0|0),($1|0),12)|0);
     $38 = tempRet0;
     $39 = ($38|0)>(-1);
     $40 = ($37>>>0)>(4294967295);
     $41 = ($38|0)==(-1);
     $42 = $41 & $40;
     $43 = $39 | $42;
     if ($43) {
      $45 = $37;$46 = $38;$ex$026 = 0;
      while(1) {
       $44 = (($ex$026) + -1)|0;
       $47 = (_bitshift64Shl(($45|0),($46|0),1)|0);
       $48 = tempRet0;
       $49 = ($48|0)>(-1);
       $50 = ($47>>>0)>(4294967295);
       $51 = ($48|0)==(-1);
       $52 = $51 & $50;
       $53 = $49 | $52;
       if ($53) {
        $45 = $47;$46 = $48;$ex$026 = $44;
       } else {
        $ex$0$lcssa = $44;
        break;
       }
      }
     } else {
      $ex$0$lcssa = 0;
     }
     $54 = (1 - ($ex$0$lcssa))|0;
     $55 = (_bitshift64Shl(($0|0),($1|0),($54|0))|0);
     $56 = tempRet0;
     $83 = $55;$84 = $56;$ex$1 = $ex$0$lcssa;
    } else {
     $57 = $1 & 1048575;
     $58 = $57 | 1048576;
     $83 = $0;$84 = $58;$ex$1 = $6;
    }
    $59 = ($9|0)==(0);
    if ($59) {
     $60 = (_bitshift64Shl(($2|0),($3|0),12)|0);
     $61 = tempRet0;
     $62 = ($61|0)>(-1);
     $63 = ($60>>>0)>(4294967295);
     $64 = ($61|0)==(-1);
     $65 = $64 & $63;
     $66 = $62 | $65;
     if ($66) {
      $68 = $60;$69 = $61;$ey$020 = 0;
      while(1) {
       $67 = (($ey$020) + -1)|0;
       $70 = (_bitshift64Shl(($68|0),($69|0),1)|0);
       $71 = tempRet0;
       $72 = ($71|0)>(-1);
       $73 = ($70>>>0)>(4294967295);
       $74 = ($71|0)==(-1);
       $75 = $74 & $73;
       $76 = $72 | $75;
       if ($76) {
        $68 = $70;$69 = $71;$ey$020 = $67;
       } else {
        $ey$0$lcssa = $67;
        break;
       }
      }
     } else {
      $ey$0$lcssa = 0;
     }
     $77 = (1 - ($ey$0$lcssa))|0;
     $78 = (_bitshift64Shl(($2|0),($3|0),($77|0))|0);
     $79 = tempRet0;
     $85 = $78;$86 = $79;$ey$1$ph = $ey$0$lcssa;
    } else {
     $80 = $3 & 1048575;
     $81 = $80 | 1048576;
     $85 = $2;$86 = $81;$ey$1$ph = $9;
    }
    $82 = ($ex$1|0)>($ey$1$ph|0);
    $87 = (_i64Subtract(($83|0),($84|0),($85|0),($86|0))|0);
    $88 = tempRet0;
    $89 = ($88|0)>(-1);
    $90 = ($87>>>0)>(4294967295);
    $91 = ($88|0)==(-1);
    $92 = $91 & $90;
    $93 = $89 | $92;
    L23: do {
     if ($82) {
      $152 = $93;$153 = $87;$154 = $88;$95 = $83;$97 = $84;$ex$212 = $ex$1;
      while(1) {
       if ($152) {
        $94 = ($95|0)==($85|0);
        $96 = ($97|0)==($86|0);
        $98 = $94 & $96;
        if ($98) {
         break;
        } else {
         $100 = $153;$101 = $154;
        }
       } else {
        $100 = $95;$101 = $97;
       }
       $102 = (_bitshift64Shl(($100|0),($101|0),1)|0);
       $103 = tempRet0;
       $104 = (($ex$212) + -1)|0;
       $105 = ($104|0)>($ey$1$ph|0);
       $106 = (_i64Subtract(($102|0),($103|0),($85|0),($86|0))|0);
       $107 = tempRet0;
       $108 = ($107|0)>(-1);
       $109 = ($106>>>0)>(4294967295);
       $110 = ($107|0)==(-1);
       $111 = $110 & $109;
       $112 = $108 | $111;
       if ($105) {
        $152 = $112;$153 = $106;$154 = $107;$95 = $102;$97 = $103;$ex$212 = $104;
       } else {
        $$lcssa7 = $112;$114 = $102;$116 = $103;$155 = $106;$156 = $107;$ex$2$lcssa = $104;
        break L23;
       }
      }
      $99 = $x * 0.0;
      $$0 = $99;
      break L1;
     } else {
      $$lcssa7 = $93;$114 = $83;$116 = $84;$155 = $87;$156 = $88;$ex$2$lcssa = $ex$1;
     }
    } while(0);
    if ($$lcssa7) {
     $113 = ($114|0)==($85|0);
     $115 = ($116|0)==($86|0);
     $117 = $113 & $115;
     if ($117) {
      $125 = $x * 0.0;
      $$0 = $125;
      break;
     } else {
      $119 = $156;$121 = $155;
     }
    } else {
     $119 = $116;$121 = $114;
    }
    $118 = ($119>>>0)<(1048576);
    $120 = ($121>>>0)<(0);
    $122 = ($119|0)==(1048576);
    $123 = $122 & $120;
    $124 = $118 | $123;
    if ($124) {
     $126 = $121;$127 = $119;$ex$39 = $ex$2$lcssa;
     while(1) {
      $128 = (_bitshift64Shl(($126|0),($127|0),1)|0);
      $129 = tempRet0;
      $130 = (($ex$39) + -1)|0;
      $131 = ($129>>>0)<(1048576);
      $132 = ($128>>>0)<(0);
      $133 = ($129|0)==(1048576);
      $134 = $133 & $132;
      $135 = $131 | $134;
      if ($135) {
       $126 = $128;$127 = $129;$ex$39 = $130;
      } else {
       $137 = $128;$138 = $129;$ex$3$lcssa = $130;
       break;
      }
     }
    } else {
     $137 = $121;$138 = $119;$ex$3$lcssa = $ex$2$lcssa;
    }
    $136 = ($ex$3$lcssa|0)>(0);
    if ($136) {
     $139 = (_i64Add(($137|0),($138|0),0,-1048576)|0);
     $140 = tempRet0;
     $141 = (_bitshift64Shl(($ex$3$lcssa|0),0,52)|0);
     $142 = tempRet0;
     $143 = $139 | $141;
     $144 = $140 | $142;
     $149 = $144;$150 = $143;
    } else {
     $145 = (1 - ($ex$3$lcssa))|0;
     $146 = (_bitshift64Lshr(($137|0),($138|0),($145|0))|0);
     $147 = tempRet0;
     $149 = $147;$150 = $146;
    }
    $148 = $149 | $10;
    HEAP32[tempDoublePtr>>2] = $150;HEAP32[tempDoublePtr+4>>2] = $148;$151 = +HEAPF64[tempDoublePtr>>3];
    $$0 = $151;
   }
  }
 } while(0);
 if ((label|0) == 3) {
  $23 = $x * $y;
  $24 = $23 / $23;
  $$0 = $24;
 }
 return (+$$0);
}
function _fmodl($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_fmod($x,$y));
 return (+$0);
}
function _frexp($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $$0 = 0.0, $$01 = 0.0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0.0, $8 = 0, $9 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 $2 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $3 = tempRet0;
 $4 = $2 & 2047;
 switch ($4|0) {
 case 0:  {
  $5 = $x != 0.0;
  if ($5) {
   $6 = $x * 1.8446744073709552E+19;
   $7 = (+_frexp($6,$e));
   $8 = HEAP32[$e>>2]|0;
   $9 = (($8) + -64)|0;
   $$01 = $7;$storemerge = $9;
  } else {
   $$01 = $x;$storemerge = 0;
  }
  HEAP32[$e>>2] = $storemerge;
  $$0 = $$01;
  break;
 }
 case 2047:  {
  $$0 = $x;
  break;
 }
 default: {
  $10 = (($4) + -1022)|0;
  HEAP32[$e>>2] = $10;
  $11 = $1 & -2146435073;
  $12 = $11 | 1071644672;
  HEAP32[tempDoublePtr>>2] = $0;HEAP32[tempDoublePtr+4>>2] = $12;$13 = +HEAPF64[tempDoublePtr>>3];
  $$0 = $13;
 }
 }
 return (+$$0);
}
function _frexpl($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_frexp($x,$e));
 return (+$0);
}
function _scalbn($x,$n) {
 $x = +$x;
 $n = $n|0;
 var $$ = 0, $$0 = 0, $$1 = 0, $0 = 0, $1 = 0.0, $10 = 0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0.0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0.0, $9 = 0, $y$0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)>(1023);
 if ($0) {
  $1 = $x * 8.9884656743115795E+307;
  $2 = (($n) + -1023)|0;
  $3 = ($2|0)>(1023);
  if ($3) {
   $4 = $1 * 8.9884656743115795E+307;
   $5 = (($n) + -2046)|0;
   $6 = ($5|0)>(1023);
   $$ = $6 ? 1023 : $5;
   $$0 = $$;$y$0 = $4;
  } else {
   $$0 = $2;$y$0 = $1;
  }
 } else {
  $7 = ($n|0)<(-1022);
  if ($7) {
   $8 = $x * 2.2250738585072014E-308;
   $9 = (($n) + 1022)|0;
   $10 = ($9|0)<(-1022);
   if ($10) {
    $11 = $8 * 2.2250738585072014E-308;
    $12 = (($n) + 2044)|0;
    $13 = ($12|0)<(-1022);
    $$1 = $13 ? -1022 : $12;
    $$0 = $$1;$y$0 = $11;
   } else {
    $$0 = $9;$y$0 = $8;
   }
  } else {
   $$0 = $n;$y$0 = $x;
  }
 }
 $14 = (($$0) + 1023)|0;
 $15 = (_bitshift64Shl(($14|0),0,52)|0);
 $16 = tempRet0;
 HEAP32[tempDoublePtr>>2] = $15;HEAP32[tempDoublePtr+4>>2] = $16;$17 = +HEAPF64[tempDoublePtr>>3];
 $18 = $y$0 * $17;
 return (+$18);
}
function _scalbnl($x,$n) {
 $x = +$x;
 $n = $n|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_scalbn($x,$n));
 return (+$0);
}
function _mbrlen($s,$n,$st) {
 $s = $s|0;
 $n = $n|0;
 $st = $st|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($st|0)!=(0|0);
 $1 = $0 ? $st : 3724;
 $2 = (_mbrtowc(0,$s,$n,$1)|0);
 return ($2|0);
}
function _mbrtowc($wc,$src,$n,$st) {
 $wc = $wc|0;
 $src = $src|0;
 $n = $n|0;
 $st = $st|0;
 var $$0 = 0, $$024 = 0, $$1 = 0, $$lcssa = 0, $$lcssa35 = 0, $$st = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c$05 = 0, $c$1 = 0, $c$2 = 0, $dummy = 0, $dummy$wc = 0, $s$06 = 0, $s$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $dummy = sp;
 $0 = ($st|0)==(0|0);
 $$st = $0 ? 3728 : $st;
 $1 = HEAP32[$$st>>2]|0;
 $2 = ($src|0)==(0|0);
 L1: do {
  if ($2) {
   $3 = ($1|0)==(0);
   if ($3) {
    $$0 = 0;
   } else {
    label = 15;
   }
  } else {
   $4 = ($wc|0)==(0|0);
   $dummy$wc = $4 ? $dummy : $wc;
   $5 = ($n|0)==(0);
   if ($5) {
    $$0 = -2;
   } else {
    $6 = ($1|0)==(0);
    if ($6) {
     $7 = HEAP8[$src>>0]|0;
     $8 = $7&255;
     $9 = ($7<<24>>24)>(-1);
     if ($9) {
      HEAP32[$dummy$wc>>2] = $8;
      $10 = ($7<<24>>24)!=(0);
      $11 = $10&1;
      $$0 = $11;
      break;
     }
     $12 = (($8) + -194)|0;
     $13 = ($12>>>0)>(50);
     if ($13) {
      label = 15;
      break;
     }
     $14 = ((($src)) + 1|0);
     $15 = (2960 + ($12<<2)|0);
     $16 = HEAP32[$15>>2]|0;
     $17 = (($n) + -1)|0;
     $18 = ($17|0)==(0);
     if ($18) {
      $c$2 = $16;
     } else {
      $$024 = $17;$c$05 = $16;$s$06 = $14;
      label = 9;
     }
    } else {
     $$024 = $n;$c$05 = $1;$s$06 = $src;
     label = 9;
    }
    L11: do {
     if ((label|0) == 9) {
      $19 = HEAP8[$s$06>>0]|0;
      $20 = $19&255;
      $21 = $20 >>> 3;
      $22 = (($21) + -16)|0;
      $23 = $c$05 >> 26;
      $24 = (($21) + ($23))|0;
      $25 = $22 | $24;
      $26 = ($25>>>0)>(7);
      if ($26) {
       label = 15;
       break L1;
      } else {
       $$1 = $$024;$30 = $19;$c$1 = $c$05;$s$1 = $s$06;
      }
      while(1) {
       $27 = $c$1 << 6;
       $28 = ((($s$1)) + 1|0);
       $29 = $30&255;
       $31 = (($29) + -128)|0;
       $32 = $31 | $27;
       $33 = (($$1) + -1)|0;
       $34 = ($32|0)<(0);
       if (!($34)) {
        $$lcssa = $32;$$lcssa35 = $33;
        break;
       }
       $36 = ($33|0)==(0);
       if ($36) {
        $c$2 = $32;
        break L11;
       }
       $37 = HEAP8[$28>>0]|0;
       $38 = $37 & -64;
       $39 = ($38<<24>>24)==(-128);
       if ($39) {
        $$1 = $33;$30 = $37;$c$1 = $32;$s$1 = $28;
       } else {
        label = 15;
        break L1;
       }
      }
      HEAP32[$$st>>2] = 0;
      HEAP32[$dummy$wc>>2] = $$lcssa;
      $35 = (($n) - ($$lcssa35))|0;
      $$0 = $35;
      break L1;
     }
    } while(0);
    HEAP32[$$st>>2] = $c$2;
    $$0 = -2;
   }
  }
 } while(0);
 if ((label|0) == 15) {
  HEAP32[$$st>>2] = 0;
  $40 = (___errno_location()|0);
  HEAP32[$40>>2] = 84;
  $$0 = -1;
 }
 STACKTOP = sp;return ($$0|0);
}
function _mbsinit($st) {
 $st = $st|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($st|0)==(0|0);
 if ($0) {
  $4 = 1;
 } else {
  $1 = HEAP32[$st>>2]|0;
  $2 = ($1|0)==(0);
  $4 = $2;
 }
 $3 = $4&1;
 return ($3|0);
}
function _mbsnrtowcs($wcs,$src,$n,$wn,$st) {
 $wcs = $wcs|0;
 $src = $src|0;
 $n = $n|0;
 $wn = $wn|0;
 $st = $st|0;
 var $$02$ = 0, $$021 = 0, $$0218 = 0, $$1 = 0, $$13 = 0, $$216 = 0, $$24 = 0, $$313 = 0, $$cast = 0, $$lcssa = 0, $$lcssa57 = 0, $$pr$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cnt$019 = 0, $cnt$1 = 0, $cnt$214 = 0, $cnt$214$lcssa = 0, $cnt$3 = 0, $or$cond = 0, $or$cond17 = 0, $s = 0, $wbuf = 0, $wcs$ = 0;
 var $wn$ = 0, $ws$020 = 0, $ws$020$lcssa56 = 0, $ws$09 = 0, $ws$1 = 0, $ws$215 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $wbuf = sp + 8|0;
 $s = sp;
 $0 = HEAP32[$src>>2]|0;
 HEAP32[$s>>2] = $0;
 $1 = ($wcs|0)!=(0|0);
 $wn$ = $1 ? $wn : 256;
 $wcs$ = $1 ? $wcs : $wbuf;
 $$cast = $0;
 $2 = ($0|0)!=(0);
 $3 = ($wn$|0)!=(0);
 $or$cond17 = $3 & $2;
 L1: do {
  if ($or$cond17) {
   $$021 = $n;$$0218 = $wn$;$37 = $$cast;$cnt$019 = 0;$ws$020 = $wcs$;
   while(1) {
    $4 = $$021 >>> 2;
    $5 = ($4>>>0)>=($$0218>>>0);
    $6 = ($$021>>>0)>(131);
    $7 = $6 | $5;
    if (!($7)) {
     $$1 = $$021;$$24 = $$0218;$19 = $37;$cnt$1 = $cnt$019;$ws$09 = $ws$020;
     break L1;
    }
    $$02$ = $5 ? $$0218 : $4;
    $8 = (($$021) - ($$02$))|0;
    $9 = (_mbsrtowcs($ws$020,$s,$$02$,$st)|0);
    $10 = ($9|0)==(-1);
    if ($10) {
     $$lcssa57 = $8;$ws$020$lcssa56 = $ws$020;
     break;
    }
    $11 = ($ws$020|0)==($wbuf|0);
    $12 = (($ws$020) + ($9<<2)|0);
    $13 = $11 ? 0 : $9;
    $$13 = (($$0218) - ($13))|0;
    $ws$1 = $11 ? $ws$020 : $12;
    $14 = (($9) + ($cnt$019))|0;
    $15 = HEAP32[$s>>2]|0;
    $16 = ($15|0)!=(0|0);
    $17 = ($$0218|0)!=($13|0);
    $or$cond = $17 & $16;
    if ($or$cond) {
     $$021 = $8;$$0218 = $$13;$37 = $15;$cnt$019 = $14;$ws$020 = $ws$1;
    } else {
     $$1 = $8;$$24 = $$13;$19 = $15;$cnt$1 = $14;$ws$09 = $ws$1;
     break L1;
    }
   }
   $$pr$pre = HEAP32[$s>>2]|0;
   $$1 = $$lcssa57;$$24 = 0;$19 = $$pr$pre;$cnt$1 = -1;$ws$09 = $ws$020$lcssa56;
  } else {
   $$1 = $n;$$24 = $wn$;$19 = $$cast;$cnt$1 = 0;$ws$09 = $wcs$;
  }
 } while(0);
 $18 = ($19|0)==(0|0);
 L8: do {
  if ($18) {
   $cnt$3 = $cnt$1;
  } else {
   $20 = ($$24|0)!=(0);
   $21 = ($$1|0)!=(0);
   $22 = $20 & $21;
   if ($22) {
    $$216 = $$1;$$313 = $$24;$23 = $19;$cnt$214 = $cnt$1;$ws$215 = $ws$09;
    while(1) {
     $24 = (_mbrtowc($ws$215,$23,$$216,$st)|0);
     $25 = (($24) + 2)|0;
     $26 = ($25>>>0)<(3);
     if ($26) {
      $$lcssa = $24;$cnt$214$lcssa = $cnt$214;
      break;
     }
     $27 = HEAP32[$s>>2]|0;
     $28 = (($27) + ($24)|0);
     HEAP32[$s>>2] = $28;
     $29 = (($$216) - ($24))|0;
     $30 = ((($ws$215)) + 4|0);
     $31 = (($$313) + -1)|0;
     $32 = (($cnt$214) + 1)|0;
     $33 = ($31|0)!=(0);
     $34 = ($$216|0)!=($24|0);
     $35 = $33 & $34;
     if ($35) {
      $$216 = $29;$$313 = $31;$23 = $28;$cnt$214 = $32;$ws$215 = $30;
     } else {
      $cnt$3 = $32;
      break L8;
     }
    }
    switch ($$lcssa|0) {
    case -1:  {
     $cnt$3 = -1;
     break L8;
     break;
    }
    case 0:  {
     HEAP32[$s>>2] = 0;
     $cnt$3 = $cnt$214$lcssa;
     break L8;
     break;
    }
    default: {
     HEAP32[$st>>2] = 0;
     $cnt$3 = $cnt$214$lcssa;
     break L8;
    }
    }
   } else {
    $cnt$3 = $cnt$1;
   }
  }
 } while(0);
 if ($1) {
  $36 = HEAP32[$s>>2]|0;
  HEAP32[$src>>2] = $36;
 }
 STACKTOP = sp;return ($cnt$3|0);
}
function _mbsrtowcs($ws,$src,$wn,$st) {
 $ws = $ws|0;
 $src = $src|0;
 $wn = $wn|0;
 $st = $st|0;
 var $$0 = 0, $$02$ph = 0, $$0219 = 0, $$03 = 0, $$1 = 0, $$1$lcssa = 0, $$14$lcssa = 0, $$1415 = 0, $$2 = 0, $$2$lcssa = 0, $$25 = 0, $$25$lcssa = 0, $$3 = 0, $$36 = 0, $$4 = 0, $$434 = 0, $$47$ph = 0, $$4718 = 0, $$48 = 0, $$5 = 0;
 var $$5$lcssa = 0, $$6 = 0, $$6$lcssa = 0, $$7 = 0, $$8 = 0, $$833 = 0, $$in = 0, $$lcssa102 = 0, $$lcssa90 = 0, $$lcssa94 = 0, $$lcssa96 = 0, $$lcssa97 = 0, $$lcssa98 = 0, $$old1 = 0, $$pre$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $c$2 = 0, $c$4 = 0, $c$5 = 0, $c$6 = 0, $or$cond = 0, $s$0 = 0, $s$1$lcssa = 0, $s$10 = 0, $s$1035 = 0, $s$109 = 0, $s$116 = 0, $s$2 = 0, $s$2$lcssa = 0, $s$3 = 0, $s$4 = 0, $s$5$lcssa = 0, $s$5$ph = 0;
 var $s$520 = 0, $s$6 = 0, $s$6$lcssa = 0, $s$7 = 0, $s$7$lcssa = 0, $s$8 = 0, $s$9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$src>>2]|0;
 $1 = ($st|0)==(0|0);
 if ($1) {
  label = 5;
 } else {
  $2 = HEAP32[$st>>2]|0;
  $3 = ($2|0)==(0);
  if ($3) {
   label = 5;
  } else {
   $4 = ($ws|0)==(0|0);
   if ($4) {
    $$36 = $wn;$c$2 = $2;$s$3 = $0;
    label = 16;
   } else {
    HEAP32[$st>>2] = 0;
    $$3 = $ws;$$7 = $wn;$c$4 = $2;$s$8 = $0;
    label = 37;
   }
  }
 }
 if ((label|0) == 5) {
  $5 = ($ws|0)==(0|0);
  if ($5) {
   $$03 = $wn;$s$0 = $0;
   label = 7;
  } else {
   $$02$ph = $ws;$$47$ph = $wn;$s$5$ph = $0;
   label = 6;
  }
 }
 L7: while(1) {
  if ((label|0) == 6) {
   label = 0;
   $6 = ($$47$ph|0)==(0);
   if ($6) {
    $s$5$lcssa = $s$5$ph;
    label = 26;
    break;
   } else {
    $$0219 = $$02$ph;$$4718 = $$47$ph;$s$520 = $s$5$ph;
   }
   while(1) {
    $63 = HEAP8[$s$520>>0]|0;
    $64 = $63&255;
    $65 = (($64) + -1)|0;
    $66 = ($65>>>0)<(127);
    do {
     if ($66) {
      $67 = $s$520;
      $68 = $67 & 3;
      $69 = ($68|0)==(0);
      $70 = ($$4718>>>0)>(4);
      $or$cond = $70 & $69;
      if ($or$cond) {
       $$1 = $$0219;$$5 = $$4718;$s$6 = $s$520;
       while(1) {
        $71 = HEAP32[$s$6>>2]|0;
        $72 = (($71) + -16843009)|0;
        $73 = $72 | $71;
        $74 = $73 & -2139062144;
        $75 = ($74|0)==(0);
        if (!($75)) {
         $$1$lcssa = $$1;$$5$lcssa = $$5;$$lcssa94 = $71;$s$6$lcssa = $s$6;
         label = 32;
         break;
        }
        $76 = ((($s$6)) + 1|0);
        $77 = $71 & 255;
        $78 = ((($$1)) + 4|0);
        HEAP32[$$1>>2] = $77;
        $79 = ((($s$6)) + 2|0);
        $80 = HEAP8[$76>>0]|0;
        $81 = $80&255;
        $82 = ((($$1)) + 8|0);
        HEAP32[$78>>2] = $81;
        $83 = ((($s$6)) + 3|0);
        $84 = HEAP8[$79>>0]|0;
        $85 = $84&255;
        $86 = ((($$1)) + 12|0);
        HEAP32[$82>>2] = $85;
        $87 = ((($s$6)) + 4|0);
        $88 = HEAP8[$83>>0]|0;
        $89 = $88&255;
        $90 = ((($$1)) + 16|0);
        HEAP32[$86>>2] = $89;
        $91 = (($$5) + -4)|0;
        $$old1 = ($91>>>0)>(4);
        if ($$old1) {
         $$1 = $90;$$5 = $91;$s$6 = $87;
        } else {
         $$lcssa96 = $87;$$lcssa97 = $90;$$lcssa98 = $91;
         label = 31;
         break;
        }
       }
       if ((label|0) == 31) {
        label = 0;
        $$pre$pre = HEAP8[$$lcssa96>>0]|0;
        $$2 = $$lcssa97;$$6 = $$lcssa98;$94 = $$pre$pre;$s$7 = $$lcssa96;
        break;
       }
       else if ((label|0) == 32) {
        label = 0;
        $92 = $$lcssa94&255;
        $$2 = $$1$lcssa;$$6 = $$5$lcssa;$94 = $92;$s$7 = $s$6$lcssa;
        break;
       }
      } else {
       $$2 = $$0219;$$6 = $$4718;$94 = $63;$s$7 = $s$520;
      }
     } else {
      $$2 = $$0219;$$6 = $$4718;$94 = $63;$s$7 = $s$520;
     }
    } while(0);
    $93 = $94&255;
    $95 = (($93) + -1)|0;
    $96 = ($95>>>0)<(127);
    if (!($96)) {
     $$2$lcssa = $$2;$$6$lcssa = $$6;$$lcssa102 = $93;$s$7$lcssa = $s$7;
     break;
    }
    $97 = ((($s$7)) + 1|0);
    $98 = ((($$2)) + 4|0);
    HEAP32[$$2>>2] = $93;
    $99 = (($$6) + -1)|0;
    $100 = ($99|0)==(0);
    if ($100) {
     $s$5$lcssa = $97;
     label = 26;
     break L7;
    } else {
     $$0219 = $98;$$4718 = $99;$s$520 = $97;
    }
   }
   $101 = (($$lcssa102) + -194)|0;
   $102 = ($101>>>0)>(50);
   if ($102) {
    $$434 = $$2$lcssa;$$833 = $$6$lcssa;$s$1035 = $s$7$lcssa;
    label = 48;
    break;
   }
   $103 = ((($s$7$lcssa)) + 1|0);
   $104 = (2960 + ($101<<2)|0);
   $105 = HEAP32[$104>>2]|0;
   $$3 = $$2$lcssa;$$7 = $$6$lcssa;$c$4 = $105;$s$8 = $103;
   label = 37;
   continue;
  }
  else if ((label|0) == 7) {
   label = 0;
   $7 = HEAP8[$s$0>>0]|0;
   $8 = $7&255;
   $9 = (($8) + -1)|0;
   $10 = ($9>>>0)<(127);
   if ($10) {
    $11 = $s$0;
    $12 = $11 & 3;
    $13 = ($12|0)==(0);
    if ($13) {
     $14 = HEAP32[$s$0>>2]|0;
     $15 = (($14) + -16843009)|0;
     $16 = $15 | $14;
     $17 = $16 & -2139062144;
     $18 = ($17|0)==(0);
     if ($18) {
      $$1415 = $$03;$s$116 = $s$0;
      while(1) {
       $19 = ((($s$116)) + 4|0);
       $20 = (($$1415) + -4)|0;
       $21 = HEAP32[$19>>2]|0;
       $22 = (($21) + -16843009)|0;
       $23 = $22 | $21;
       $24 = $23 & -2139062144;
       $25 = ($24|0)==(0);
       if ($25) {
        $$1415 = $20;$s$116 = $19;
       } else {
        $$14$lcssa = $20;$$in = $21;$s$1$lcssa = $19;
        break;
       }
      }
     } else {
      $$14$lcssa = $$03;$$in = $14;$s$1$lcssa = $s$0;
     }
     $26 = $$in&255;
     $$25 = $$14$lcssa;$28 = $26;$s$2 = $s$1$lcssa;
    } else {
     $$25 = $$03;$28 = $7;$s$2 = $s$0;
    }
   } else {
    $$25 = $$03;$28 = $7;$s$2 = $s$0;
   }
   $27 = $28&255;
   $29 = (($27) + -1)|0;
   $30 = ($29>>>0)<(127);
   if ($30) {
    $31 = ((($s$2)) + 1|0);
    $32 = (($$25) + -1)|0;
    $$03 = $32;$s$0 = $31;
    label = 7;
    continue;
   } else {
    $$25$lcssa = $$25;$$lcssa90 = $27;$s$2$lcssa = $s$2;
   }
   $33 = (($$lcssa90) + -194)|0;
   $34 = ($33>>>0)>(50);
   if ($34) {
    $$434 = $ws;$$833 = $$25$lcssa;$s$1035 = $s$2$lcssa;
    label = 48;
    break;
   }
   $35 = ((($s$2$lcssa)) + 1|0);
   $36 = (2960 + ($33<<2)|0);
   $37 = HEAP32[$36>>2]|0;
   $$36 = $$25$lcssa;$c$2 = $37;$s$3 = $35;
   label = 16;
   continue;
  }
  else if ((label|0) == 16) {
   label = 0;
   $38 = HEAP8[$s$3>>0]|0;
   $39 = $38&255;
   $40 = $39 >>> 3;
   $41 = (($40) + -16)|0;
   $42 = $c$2 >> 26;
   $43 = (($40) + ($42))|0;
   $44 = $41 | $43;
   $45 = ($44>>>0)>(7);
   if ($45) {
    label = 17;
    break;
   }
   $47 = ((($s$3)) + 1|0);
   $48 = $c$2 & 33554432;
   $49 = ($48|0)==(0);
   if ($49) {
    $s$4 = $47;
   } else {
    $50 = HEAP8[$47>>0]|0;
    $51 = $50 & -64;
    $52 = ($51<<24>>24)==(-128);
    if (!($52)) {
     label = 20;
     break;
    }
    $54 = ((($s$3)) + 2|0);
    $55 = $c$2 & 524288;
    $56 = ($55|0)==(0);
    if ($56) {
     $s$4 = $54;
    } else {
     $57 = HEAP8[$54>>0]|0;
     $58 = $57 & -64;
     $59 = ($58<<24>>24)==(-128);
     if (!($59)) {
      label = 23;
      break;
     }
     $61 = ((($s$3)) + 3|0);
     $s$4 = $61;
    }
   }
   $62 = (($$36) + -1)|0;
   $$03 = $62;$s$0 = $s$4;
   label = 7;
   continue;
  }
  else if ((label|0) == 37) {
   label = 0;
   $106 = HEAP8[$s$8>>0]|0;
   $107 = $106&255;
   $108 = $107 >>> 3;
   $109 = (($108) + -16)|0;
   $110 = $c$4 >> 26;
   $111 = (($108) + ($110))|0;
   $112 = $109 | $111;
   $113 = ($112>>>0)>(7);
   if ($113) {
    label = 38;
    break;
   }
   $115 = $c$4 << 6;
   $116 = ((($s$8)) + 1|0);
   $117 = (($107) + -128)|0;
   $118 = $117 | $115;
   $119 = ($118|0)<(0);
   if ($119) {
    $120 = HEAP8[$116>>0]|0;
    $121 = $120&255;
    $122 = $121 & 192;
    $123 = ($122|0)==(128);
    if (!($123)) {
     label = 41;
     break;
    }
    $125 = $118 << 6;
    $126 = ((($s$8)) + 2|0);
    $127 = (($121) + -128)|0;
    $128 = $127 | $125;
    $129 = ($128|0)<(0);
    if ($129) {
     $130 = HEAP8[$126>>0]|0;
     $131 = $130&255;
     $132 = $131 & 192;
     $133 = ($132|0)==(128);
     if (!($133)) {
      label = 44;
      break;
     }
     $135 = $128 << 6;
     $136 = ((($s$8)) + 3|0);
     $137 = (($131) + -128)|0;
     $138 = $137 | $135;
     $c$5 = $138;$s$9 = $136;
    } else {
     $c$5 = $128;$s$9 = $126;
    }
   } else {
    $c$5 = $118;$s$9 = $116;
   }
   $139 = ((($$3)) + 4|0);
   HEAP32[$$3>>2] = $c$5;
   $140 = (($$7) + -1)|0;
   $$02$ph = $139;$$47$ph = $140;$s$5$ph = $s$9;
   label = 6;
   continue;
  }
 }
 if ((label|0) == 17) {
  $46 = ((($s$3)) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $46;
  label = 47;
 }
 else if ((label|0) == 20) {
  $53 = ((($s$3)) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $53;
  label = 47;
 }
 else if ((label|0) == 23) {
  $60 = ((($s$3)) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $60;
  label = 47;
 }
 else if ((label|0) == 26) {
  HEAP32[$src>>2] = $s$5$lcssa;
  $$0 = $wn;
 }
 else if ((label|0) == 38) {
  $114 = ((($s$8)) + -1|0);
  $$4 = $$3;$$8 = $$7;$c$6 = $c$4;$s$10 = $114;
  label = 47;
 }
 else if ((label|0) == 41) {
  $124 = ((($s$8)) + -1|0);
  $$48 = $$3;$s$109 = $124;
  label = 52;
 }
 else if ((label|0) == 44) {
  $134 = ((($s$8)) + -1|0);
  $$48 = $$3;$s$109 = $134;
  label = 52;
 }
 if ((label|0) == 47) {
  $141 = ($c$6|0)==(0);
  if ($141) {
   $$434 = $$4;$$833 = $$8;$s$1035 = $s$10;
   label = 48;
  } else {
   $$48 = $$4;$s$109 = $s$10;
   label = 52;
  }
 }
 if ((label|0) == 48) {
  $142 = HEAP8[$s$1035>>0]|0;
  $143 = ($142<<24>>24)==(0);
  if ($143) {
   $144 = ($$434|0)==(0|0);
   if (!($144)) {
    HEAP32[$$434>>2] = 0;
    HEAP32[$src>>2] = 0;
   }
   $145 = (($wn) - ($$833))|0;
   $$0 = $145;
  } else {
   $$48 = $$434;$s$109 = $s$1035;
   label = 52;
  }
 }
 if ((label|0) == 52) {
  $146 = (___errno_location()|0);
  HEAP32[$146>>2] = 84;
  $147 = ($$48|0)==(0|0);
  if ($147) {
   $$0 = -1;
  } else {
   HEAP32[$src>>2] = $s$109;
   $$0 = -1;
  }
 }
 return ($$0|0);
}
function _mbtowc($wc,$src,$n) {
 $wc = $wc|0;
 $src = $src|0;
 $n = $n|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $dummy = 0, $dummy$wc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $dummy = sp;
 $0 = ($src|0)==(0|0);
 L1: do {
  if ($0) {
   $$0 = 0;
  } else {
   $1 = ($n|0)==(0);
   do {
    if (!($1)) {
     $2 = ($wc|0)==(0|0);
     $dummy$wc = $2 ? $dummy : $wc;
     $3 = HEAP8[$src>>0]|0;
     $4 = $3&255;
     $5 = ($3<<24>>24)>(-1);
     if ($5) {
      HEAP32[$dummy$wc>>2] = $4;
      $6 = ($3<<24>>24)!=(0);
      $7 = $6&1;
      $$0 = $7;
      break L1;
     }
     $8 = (($4) + -194)|0;
     $9 = ($8>>>0)>(50);
     if (!($9)) {
      $10 = ((($src)) + 1|0);
      $11 = (2960 + ($8<<2)|0);
      $12 = HEAP32[$11>>2]|0;
      $13 = ($n>>>0)<(4);
      if ($13) {
       $14 = ($n*6)|0;
       $15 = (($14) + -6)|0;
       $16 = -2147483648 >>> $15;
       $17 = $12 & $16;
       $18 = ($17|0)==(0);
       if (!($18)) {
        break;
       }
      }
      $19 = HEAP8[$10>>0]|0;
      $20 = $19&255;
      $21 = $20 >>> 3;
      $22 = (($21) + -16)|0;
      $23 = $12 >> 26;
      $24 = (($21) + ($23))|0;
      $25 = $22 | $24;
      $26 = ($25>>>0)>(7);
      if (!($26)) {
       $27 = $12 << 6;
       $28 = (($20) + -128)|0;
       $29 = $28 | $27;
       $30 = ($29|0)<(0);
       if (!($30)) {
        HEAP32[$dummy$wc>>2] = $29;
        $$0 = 2;
        break L1;
       }
       $31 = ((($src)) + 2|0);
       $32 = HEAP8[$31>>0]|0;
       $33 = $32&255;
       $34 = $33 & 192;
       $35 = ($34|0)==(128);
       if ($35) {
        $36 = $29 << 6;
        $37 = (($33) + -128)|0;
        $38 = $37 | $36;
        $39 = ($38|0)<(0);
        if (!($39)) {
         HEAP32[$dummy$wc>>2] = $38;
         $$0 = 3;
         break L1;
        }
        $40 = ((($src)) + 3|0);
        $41 = HEAP8[$40>>0]|0;
        $42 = $41&255;
        $43 = $42 & 192;
        $44 = ($43|0)==(128);
        if ($44) {
         $45 = $38 << 6;
         $46 = (($42) + -128)|0;
         $47 = $46 | $45;
         HEAP32[$dummy$wc>>2] = $47;
         $$0 = 4;
         break L1;
        }
       }
      }
     }
    }
   } while(0);
   $48 = (___errno_location()|0);
   HEAP32[$48>>2] = 84;
   $$0 = -1;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _wcrtomb($s,$wc,$st) {
 $s = $s|0;
 $wc = $wc|0;
 $st = $st|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($s|0)==(0|0);
 do {
  if ($0) {
   $$0 = 1;
  } else {
   $1 = ($wc>>>0)<(128);
   if ($1) {
    $2 = $wc&255;
    HEAP8[$s>>0] = $2;
    $$0 = 1;
    break;
   }
   $3 = ($wc>>>0)<(2048);
   if ($3) {
    $4 = $wc >>> 6;
    $5 = $4 | 192;
    $6 = $5&255;
    $7 = ((($s)) + 1|0);
    HEAP8[$s>>0] = $6;
    $8 = $wc & 63;
    $9 = $8 | 128;
    $10 = $9&255;
    HEAP8[$7>>0] = $10;
    $$0 = 2;
    break;
   }
   $11 = ($wc>>>0)<(55296);
   $12 = $wc & -8192;
   $13 = ($12|0)==(57344);
   $or$cond = $11 | $13;
   if ($or$cond) {
    $14 = $wc >>> 12;
    $15 = $14 | 224;
    $16 = $15&255;
    $17 = ((($s)) + 1|0);
    HEAP8[$s>>0] = $16;
    $18 = $wc >>> 6;
    $19 = $18 & 63;
    $20 = $19 | 128;
    $21 = $20&255;
    $22 = ((($s)) + 2|0);
    HEAP8[$17>>0] = $21;
    $23 = $wc & 63;
    $24 = $23 | 128;
    $25 = $24&255;
    HEAP8[$22>>0] = $25;
    $$0 = 3;
    break;
   }
   $26 = (($wc) + -65536)|0;
   $27 = ($26>>>0)<(1048576);
   if ($27) {
    $28 = $wc >>> 18;
    $29 = $28 | 240;
    $30 = $29&255;
    $31 = ((($s)) + 1|0);
    HEAP8[$s>>0] = $30;
    $32 = $wc >>> 12;
    $33 = $32 & 63;
    $34 = $33 | 128;
    $35 = $34&255;
    $36 = ((($s)) + 2|0);
    HEAP8[$31>>0] = $35;
    $37 = $wc >>> 6;
    $38 = $37 & 63;
    $39 = $38 | 128;
    $40 = $39&255;
    $41 = ((($s)) + 3|0);
    HEAP8[$36>>0] = $40;
    $42 = $wc & 63;
    $43 = $42 | 128;
    $44 = $43&255;
    HEAP8[$41>>0] = $44;
    $$0 = 4;
    break;
   } else {
    $45 = (___errno_location()|0);
    HEAP32[$45>>2] = 84;
    $$0 = -1;
    break;
   }
  }
 } while(0);
 return ($$0|0);
}
function _wcsnrtombs($dst,$wcs,$wn,$n,$st) {
 $dst = $dst|0;
 $wcs = $wcs|0;
 $wn = $wn|0;
 $n = $n|0;
 $st = $st|0;
 var $$02$$0 = 0, $$021 = 0, $$0218 = 0, $$1 = 0, $$13 = 0, $$216 = 0, $$24 = 0, $$313 = 0, $$cast = 0, $$lcssa = 0, $$lcssa57 = 0, $$pr$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $buf = 0, $cnt$019 = 0, $cnt$1 = 0, $cnt$214 = 0, $cnt$214$lcssa = 0, $cnt$3 = 0, $dst$ = 0, $n$ = 0, $or$cond = 0;
 var $or$cond17 = 0, $s$020 = 0, $s$020$lcssa56 = 0, $s$09 = 0, $s$1 = 0, $s$215 = 0, $ws = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $buf = sp + 8|0;
 $ws = sp;
 $0 = HEAP32[$wcs>>2]|0;
 HEAP32[$ws>>2] = $0;
 $1 = ($dst|0)!=(0|0);
 $n$ = $1 ? $n : 256;
 $dst$ = $1 ? $dst : $buf;
 $$cast = $0;
 $2 = ($0|0)!=(0);
 $3 = ($n$|0)!=(0);
 $or$cond17 = $3 & $2;
 L1: do {
  if ($or$cond17) {
   $$021 = $wn;$$0218 = $n$;$38 = $$cast;$cnt$019 = 0;$s$020 = $dst$;
   while(1) {
    $4 = ($$021>>>0)>=($$0218>>>0);
    $5 = ($$021>>>0)>(32);
    $6 = $4 | $5;
    if (!($6)) {
     $$1 = $$021;$$24 = $$0218;$18 = $38;$cnt$1 = $cnt$019;$s$09 = $s$020;
     break L1;
    }
    $$02$$0 = $4 ? $$0218 : $$021;
    $7 = (($$021) - ($$02$$0))|0;
    $8 = (_wcsrtombs($s$020,$ws,$$02$$0,0)|0);
    $9 = ($8|0)==(-1);
    if ($9) {
     $$lcssa57 = $7;$s$020$lcssa56 = $s$020;
     break;
    }
    $10 = ($s$020|0)==($buf|0);
    $11 = (($s$020) + ($8)|0);
    $12 = $10 ? 0 : $8;
    $$13 = (($$0218) - ($12))|0;
    $s$1 = $10 ? $s$020 : $11;
    $13 = (($8) + ($cnt$019))|0;
    $14 = HEAP32[$ws>>2]|0;
    $15 = ($14|0)!=(0|0);
    $16 = ($$0218|0)!=($12|0);
    $or$cond = $16 & $15;
    if ($or$cond) {
     $$021 = $7;$$0218 = $$13;$38 = $14;$cnt$019 = $13;$s$020 = $s$1;
    } else {
     $$1 = $7;$$24 = $$13;$18 = $14;$cnt$1 = $13;$s$09 = $s$1;
     break L1;
    }
   }
   $$pr$pre = HEAP32[$ws>>2]|0;
   $$1 = $$lcssa57;$$24 = 0;$18 = $$pr$pre;$cnt$1 = -1;$s$09 = $s$020$lcssa56;
  } else {
   $$1 = $wn;$$24 = $n$;$18 = $$cast;$cnt$1 = 0;$s$09 = $dst$;
  }
 } while(0);
 $17 = ($18|0)==(0|0);
 L8: do {
  if ($17) {
   $cnt$3 = $cnt$1;
  } else {
   $19 = ($$24|0)!=(0);
   $20 = ($$1|0)!=(0);
   $21 = $19 & $20;
   if ($21) {
    $$216 = $$1;$$313 = $$24;$23 = $18;$cnt$214 = $cnt$1;$s$215 = $s$09;
    while(1) {
     $22 = HEAP32[$23>>2]|0;
     $24 = (_wcrtomb($s$215,$22,0)|0);
     $25 = (($24) + 1)|0;
     $26 = ($25>>>0)<(2);
     if ($26) {
      $$lcssa = $24;$cnt$214$lcssa = $cnt$214;
      break;
     }
     $28 = HEAP32[$ws>>2]|0;
     $29 = ((($28)) + 4|0);
     HEAP32[$ws>>2] = $29;
     $30 = (($$216) + -1)|0;
     $31 = (($s$215) + ($24)|0);
     $32 = (($$313) - ($24))|0;
     $33 = (($cnt$214) + 1)|0;
     $34 = ($$313|0)!=($24|0);
     $35 = ($30|0)!=(0);
     $36 = $34 & $35;
     if ($36) {
      $$216 = $30;$$313 = $32;$23 = $29;$cnt$214 = $33;$s$215 = $31;
     } else {
      $cnt$3 = $33;
      break L8;
     }
    }
    $27 = ($$lcssa|0)==(0);
    if ($27) {
     HEAP32[$ws>>2] = 0;
     $cnt$3 = $cnt$214$lcssa;
    } else {
     $cnt$3 = -1;
    }
   } else {
    $cnt$3 = $cnt$1;
   }
  }
 } while(0);
 if ($1) {
  $37 = HEAP32[$ws>>2]|0;
  HEAP32[$wcs>>2] = $37;
 }
 STACKTOP = sp;return ($cnt$3|0);
}
function _wcsrtombs($s,$ws,$n,$st) {
 $s = $s|0;
 $ws = $ws|0;
 $n = $n|0;
 $st = $st|0;
 var $$0 = 0, $$01$lcssa = 0, $$0129 = 0, $$0129$lcssa = 0, $$0218 = 0, $$1 = 0, $$13 = 0, $$223 = 0, $$223$lcssa = 0, $$24$lcssa = 0, $$2428 = 0, $$2428$lcssa = 0, $$3 = 0, $$35 = 0, $$422 = 0, $$422$lcssa = 0, $$422$lcssa82 = 0, $$5 = 0, $$pn = 0, $$pre = 0;
 var $$pre43 = 0, $$pre44 = 0, $$pre45 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $buf = 0, $ws2$019 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $buf = sp;
 $0 = ($s|0)==(0|0);
 L1: do {
  if ($0) {
   $2 = HEAP32[$ws>>2]|0;
   $3 = HEAP32[$2>>2]|0;
   $4 = ($3|0)==(0);
   if ($4) {
    $$0 = 0;
   } else {
    $$0218 = 0;$6 = $3;$ws2$019 = $2;
    while(1) {
     $5 = ($6>>>0)>(127);
     if ($5) {
      $7 = (_wcrtomb($buf,$6,0)|0);
      $8 = ($7|0)==(-1);
      if ($8) {
       $$0 = -1;
       break L1;
      } else {
       $$pn = $7;
      }
     } else {
      $$pn = 1;
     }
     $$13 = (($$pn) + ($$0218))|0;
     $9 = ((($ws2$019)) + 4|0);
     $10 = HEAP32[$9>>2]|0;
     $11 = ($10|0)==(0);
     if ($11) {
      $$0 = $$13;
      break;
     } else {
      $$0218 = $$13;$6 = $10;$ws2$019 = $9;
     }
    }
   }
  } else {
   $1 = ($n>>>0)>(3);
   L9: do {
    if ($1) {
     $$pre = HEAP32[$ws>>2]|0;
     $$0129 = $s;$$2428 = $n;$14 = $$pre;
     while(1) {
      $13 = HEAP32[$14>>2]|0;
      $15 = (($13) + -1)|0;
      $16 = ($15>>>0)>(126);
      if ($16) {
       $17 = ($13|0)==(0);
       if ($17) {
        $$0129$lcssa = $$0129;$$2428$lcssa = $$2428;
        break;
       }
       $19 = (_wcrtomb($$0129,$13,0)|0);
       $20 = ($19|0)==(-1);
       if ($20) {
        $$0 = -1;
        break L1;
       }
       $21 = (($$0129) + ($19)|0);
       $22 = (($$2428) - ($19))|0;
       $$1 = $21;$$35 = $22;$27 = $14;
      } else {
       $23 = $13&255;
       $24 = ((($$0129)) + 1|0);
       HEAP8[$$0129>>0] = $23;
       $25 = (($$2428) + -1)|0;
       $$pre43 = HEAP32[$ws>>2]|0;
       $$1 = $24;$$35 = $25;$27 = $$pre43;
      }
      $26 = ((($27)) + 4|0);
      HEAP32[$ws>>2] = $26;
      $28 = ($$35>>>0)>(3);
      if ($28) {
       $$0129 = $$1;$$2428 = $$35;$14 = $26;
      } else {
       $$01$lcssa = $$1;$$24$lcssa = $$35;
       break L9;
      }
     }
     HEAP8[$$0129$lcssa>>0] = 0;
     HEAP32[$ws>>2] = 0;
     $18 = (($n) - ($$2428$lcssa))|0;
     $$0 = $18;
     break L1;
    } else {
     $$01$lcssa = $s;$$24$lcssa = $n;
    }
   } while(0);
   $12 = ($$24$lcssa|0)==(0);
   if ($12) {
    $$0 = $n;
   } else {
    $$pre44 = HEAP32[$ws>>2]|0;
    $$223 = $$01$lcssa;$$422 = $$24$lcssa;$30 = $$pre44;
    while(1) {
     $29 = HEAP32[$30>>2]|0;
     $31 = (($29) + -1)|0;
     $32 = ($31>>>0)>(126);
     if ($32) {
      $33 = ($29|0)==(0);
      if ($33) {
       $$223$lcssa = $$223;$$422$lcssa = $$422;
       label = 19;
       break;
      }
      $35 = (_wcrtomb($buf,$29,0)|0);
      $36 = ($35|0)==(-1);
      if ($36) {
       $$0 = -1;
       break L1;
      }
      $37 = ($$422>>>0)<($35>>>0);
      if ($37) {
       $$422$lcssa82 = $$422;
       label = 22;
       break;
      }
      $39 = HEAP32[$30>>2]|0;
      (_wcrtomb($$223,$39,0)|0);
      $40 = (($$223) + ($35)|0);
      $41 = (($$422) - ($35))|0;
      $$3 = $40;$$5 = $41;$46 = $30;
     } else {
      $42 = $29&255;
      $43 = ((($$223)) + 1|0);
      HEAP8[$$223>>0] = $42;
      $44 = (($$422) + -1)|0;
      $$pre45 = HEAP32[$ws>>2]|0;
      $$3 = $43;$$5 = $44;$46 = $$pre45;
     }
     $45 = ((($46)) + 4|0);
     HEAP32[$ws>>2] = $45;
     $47 = ($$5|0)==(0);
     if ($47) {
      $$0 = $n;
      break L1;
     } else {
      $$223 = $$3;$$422 = $$5;$30 = $45;
     }
    }
    if ((label|0) == 19) {
     HEAP8[$$223$lcssa>>0] = 0;
     HEAP32[$ws>>2] = 0;
     $34 = (($n) - ($$422$lcssa))|0;
     $$0 = $34;
     break;
    }
    else if ((label|0) == 22) {
     $38 = (($n) - ($$422$lcssa82))|0;
     $$0 = $38;
     break;
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _wctomb($s,$wc) {
 $s = $s|0;
 $wc = $wc|0;
 var $$0 = 0, $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $$0 = 0;
 } else {
  $1 = (_wcrtomb($s,$wc,0)|0);
  $$0 = $1;
 }
 return ($$0|0);
}
function ___fdopen($fd,$mode) {
 $fd = $fd|0;
 $mode = $mode|0;
 var $$0 = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $memchr = 0, $tio = 0, $vararg_buffer = 0, $vararg_buffer12 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr11 = 0, $vararg_ptr15 = 0, $vararg_ptr16 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, dest = 0, label = 0;
 var sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer12 = sp + 40|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $tio = sp + 52|0;
 $0 = HEAP8[$mode>>0]|0;
 $1 = $0 << 24 >> 24;
 $memchr = (_memchr(21345,$1,4)|0);
 $2 = ($memchr|0)==(0|0);
 if ($2) {
  $3 = (___errno_location()|0);
  HEAP32[$3>>2] = 22;
  $$0 = 0;
 } else {
  $4 = (_malloc(1144)|0);
  $5 = ($4|0)==(0|0);
  if ($5) {
   $$0 = 0;
  } else {
   dest=$4; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
   $6 = (_strchr($mode,43)|0);
   $7 = ($6|0)==(0|0);
   if ($7) {
    $8 = ($0<<24>>24)==(114);
    $9 = $8 ? 8 : 4;
    HEAP32[$4>>2] = $9;
   }
   $10 = (_strchr($mode,101)|0);
   $11 = ($10|0)==(0|0);
   if ($11) {
    $13 = $0;
   } else {
    HEAP32[$vararg_buffer>>2] = $fd;
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    HEAP32[$vararg_ptr1>>2] = 2;
    $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
    HEAP32[$vararg_ptr2>>2] = 1;
    (___syscall221(221,($vararg_buffer|0))|0);
    $$pre = HEAP8[$mode>>0]|0;
    $13 = $$pre;
   }
   $12 = ($13<<24>>24)==(97);
   if ($12) {
    HEAP32[$vararg_buffer3>>2] = $fd;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = 3;
    $14 = (___syscall221(221,($vararg_buffer3|0))|0);
    $15 = $14 & 1024;
    $16 = ($15|0)==(0);
    if ($16) {
     $17 = $14 | 1024;
     HEAP32[$vararg_buffer7>>2] = $fd;
     $vararg_ptr10 = ((($vararg_buffer7)) + 4|0);
     HEAP32[$vararg_ptr10>>2] = 4;
     $vararg_ptr11 = ((($vararg_buffer7)) + 8|0);
     HEAP32[$vararg_ptr11>>2] = $17;
     (___syscall221(221,($vararg_buffer7|0))|0);
    }
    $18 = HEAP32[$4>>2]|0;
    $19 = $18 | 128;
    HEAP32[$4>>2] = $19;
    $26 = $19;
   } else {
    $$pre1 = HEAP32[$4>>2]|0;
    $26 = $$pre1;
   }
   $20 = ((($4)) + 60|0);
   HEAP32[$20>>2] = $fd;
   $21 = ((($4)) + 120|0);
   $22 = ((($4)) + 44|0);
   HEAP32[$22>>2] = $21;
   $23 = ((($4)) + 48|0);
   HEAP32[$23>>2] = 1024;
   $24 = ((($4)) + 75|0);
   HEAP8[$24>>0] = -1;
   $25 = $26 & 8;
   $27 = ($25|0)==(0);
   if ($27) {
    HEAP32[$vararg_buffer12>>2] = $fd;
    $vararg_ptr15 = ((($vararg_buffer12)) + 4|0);
    HEAP32[$vararg_ptr15>>2] = 21505;
    $vararg_ptr16 = ((($vararg_buffer12)) + 8|0);
    HEAP32[$vararg_ptr16>>2] = $tio;
    $28 = (___syscall54(54,($vararg_buffer12|0))|0);
    $29 = ($28|0)==(0);
    if ($29) {
     HEAP8[$24>>0] = 10;
    }
   }
   $30 = ((($4)) + 32|0);
   HEAP32[$30>>2] = 34;
   $31 = ((($4)) + 36|0);
   HEAP32[$31>>2] = 32;
   $32 = ((($4)) + 40|0);
   HEAP32[$32>>2] = 33;
   $33 = ((($4)) + 12|0);
   HEAP32[$33>>2] = 31;
   $34 = HEAP32[(2920)>>2]|0;
   $35 = ($34|0)==(0);
   if ($35) {
    $36 = ((($4)) + 76|0);
    HEAP32[$36>>2] = -1;
   }
   ___lock(((2944)|0));
   $37 = HEAP32[(2940)>>2]|0;
   $38 = ((($4)) + 56|0);
   HEAP32[$38>>2] = $37;
   $39 = ($37|0)==(0);
   if (!($39)) {
    $40 = $37;
    $41 = ((($40)) + 52|0);
    HEAP32[$41>>2] = $4;
   }
   HEAP32[(2940)>>2] = $4;
   ___unlock(((2944)|0));
   $$0 = $4;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function ___fmodeflags($mode) {
 $mode = $mode|0;
 var $$ = 0, $$flags$4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $flags$0 = 0, $flags$0$ = 0, $flags$2 = 0;
 var $flags$2$ = 0, $flags$4 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strchr($mode,43)|0);
 $1 = ($0|0)==(0|0);
 $2 = HEAP8[$mode>>0]|0;
 $not$ = ($2<<24>>24)!=(114);
 $$ = $not$&1;
 $flags$0 = $1 ? $$ : 2;
 $3 = (_strchr($mode,120)|0);
 $4 = ($3|0)==(0|0);
 $5 = $flags$0 | 128;
 $flags$0$ = $4 ? $flags$0 : $5;
 $6 = (_strchr($mode,101)|0);
 $7 = ($6|0)==(0|0);
 $8 = $flags$0$ | 524288;
 $flags$2 = $7 ? $flags$0$ : $8;
 $9 = ($2<<24>>24)==(114);
 $10 = $flags$2 | 64;
 $flags$2$ = $9 ? $flags$2 : $10;
 $11 = ($2<<24>>24)==(119);
 $12 = $flags$2$ | 512;
 $flags$4 = $11 ? $12 : $flags$2$;
 $13 = ($2<<24>>24)==(97);
 $14 = $flags$4 | 1024;
 $$flags$4 = $13 ? $14 : $flags$4;
 return ($$flags$4|0);
}
function ___lockfile($f) {
 $f = $f|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function ___unlockfile($f) {
 $f = $f|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function ___overflow($f,$_c) {
 $f = $f|0;
 $_c = $_c|0;
 var $$0 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $c = sp;
 $0 = $_c&255;
 HEAP8[$c>>0] = $0;
 $1 = ((($f)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  $4 = (___towrite($f)|0);
  $5 = ($4|0)==(0);
  if ($5) {
   $$pre = HEAP32[$1>>2]|0;
   $9 = $$pre;
   label = 4;
  } else {
   $$0 = -1;
  }
 } else {
  $9 = $2;
  label = 4;
 }
 do {
  if ((label|0) == 4) {
   $6 = ((($f)) + 20|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ($7>>>0)<($9>>>0);
   if ($8) {
    $10 = $_c & 255;
    $11 = ((($f)) + 75|0);
    $12 = HEAP8[$11>>0]|0;
    $13 = $12 << 24 >> 24;
    $14 = ($10|0)==($13|0);
    if (!($14)) {
     $15 = ((($7)) + 1|0);
     HEAP32[$6>>2] = $15;
     HEAP8[$7>>0] = $0;
     $$0 = $10;
     break;
    }
   }
   $16 = ((($f)) + 36|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = (FUNCTION_TABLE_iiii[$17 & 1023]($f,$c,1)|0);
   $19 = ($18|0)==(1);
   if ($19) {
    $20 = HEAP8[$c>>0]|0;
    $21 = $20&255;
    $$0 = $21;
   } else {
    $$0 = -1;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function ___stdio_close($f) {
 $f = $f|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = ((($f)) + 60|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[$vararg_buffer>>2] = $1;
 $2 = (___syscall6(6,($vararg_buffer|0))|0);
 $3 = (___syscall_ret($2)|0);
 STACKTOP = sp;return ($3|0);
}
function ___stdio_read($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $cnt$0 = 0, $iov = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $iov = sp + 32|0;
 HEAP32[$iov>>2] = $buf;
 $0 = ((($iov)) + 4|0);
 $1 = ((($f)) + 48|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)!=(0);
 $4 = $3&1;
 $5 = (($len) - ($4))|0;
 HEAP32[$0>>2] = $5;
 $6 = ((($iov)) + 8|0);
 $7 = ((($f)) + 44|0);
 $8 = HEAP32[$7>>2]|0;
 HEAP32[$6>>2] = $8;
 $9 = ((($iov)) + 12|0);
 HEAP32[$9>>2] = $2;
 $10 = HEAP32[2916>>2]|0;
 $11 = ($10|0)==(0|0);
 if ($11) {
  $16 = ((($f)) + 60|0);
  $17 = HEAP32[$16>>2]|0;
  HEAP32[$vararg_buffer3>>2] = $17;
  $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
  HEAP32[$vararg_ptr6>>2] = $iov;
  $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
  HEAP32[$vararg_ptr7>>2] = 2;
  $18 = (___syscall145(145,($vararg_buffer3|0))|0);
  $19 = (___syscall_ret($18)|0);
  $cnt$0 = $19;
 } else {
  _pthread_cleanup_push((415|0),($f|0));
  $12 = ((($f)) + 60|0);
  $13 = HEAP32[$12>>2]|0;
  HEAP32[$vararg_buffer>>2] = $13;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $iov;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 2;
  $14 = (___syscall145(145,($vararg_buffer|0))|0);
  $15 = (___syscall_ret($14)|0);
  _pthread_cleanup_pop(0);
  $cnt$0 = $15;
 }
 $20 = ($cnt$0|0)<(1);
 if ($20) {
  $21 = $cnt$0 & 48;
  $22 = $21 ^ 16;
  $23 = HEAP32[$f>>2]|0;
  $24 = $23 | $22;
  HEAP32[$f>>2] = $24;
  $25 = ((($f)) + 8|0);
  HEAP32[$25>>2] = 0;
  $26 = ((($f)) + 4|0);
  HEAP32[$26>>2] = 0;
  $$0 = $cnt$0;
 } else {
  $27 = HEAP32[$0>>2]|0;
  $28 = ($cnt$0>>>0)>($27>>>0);
  if ($28) {
   $29 = (($cnt$0) - ($27))|0;
   $30 = HEAP32[$7>>2]|0;
   $31 = ((($f)) + 4|0);
   HEAP32[$31>>2] = $30;
   $32 = $30;
   $33 = (($32) + ($29)|0);
   $34 = ((($f)) + 8|0);
   HEAP32[$34>>2] = $33;
   $35 = HEAP32[$1>>2]|0;
   $36 = ($35|0)==(0);
   if ($36) {
    $$0 = $len;
   } else {
    $37 = ((($32)) + 1|0);
    HEAP32[$31>>2] = $37;
    $38 = HEAP8[$32>>0]|0;
    $39 = (($len) + -1)|0;
    $40 = (($buf) + ($39)|0);
    HEAP8[$40>>0] = $38;
    $$0 = $len;
   }
  } else {
   $$0 = $cnt$0;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function ___stdio_seek($f,$off,$whence) {
 $f = $f|0;
 $off = $off|0;
 $whence = $whence|0;
 var $$pre = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $ret = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $ret = sp + 20|0;
 $0 = ((($f)) + 60|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[$vararg_buffer>>2] = $1;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 0;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = $off;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $ret;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $whence;
 $2 = (___syscall140(140,($vararg_buffer|0))|0);
 $3 = (___syscall_ret($2)|0);
 $4 = ($3|0)<(0);
 if ($4) {
  HEAP32[$ret>>2] = -1;
  $5 = -1;
 } else {
  $$pre = HEAP32[$ret>>2]|0;
  $5 = $$pre;
 }
 STACKTOP = sp;return ($5|0);
}
function ___stdio_write($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $$0 = 0, $$phi$trans$insert = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cnt$0 = 0, $cnt$1 = 0, $iov$0 = 0, $iov$0$lcssa11 = 0, $iov$1 = 0, $iovcnt$0 = 0;
 var $iovcnt$0$lcssa12 = 0, $iovcnt$1 = 0, $iovs = 0, $rem$0 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $iovs = sp + 32|0;
 $0 = ((($f)) + 28|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[$iovs>>2] = $1;
 $2 = ((($iovs)) + 4|0);
 $3 = ((($f)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $4;
 $6 = (($5) - ($1))|0;
 HEAP32[$2>>2] = $6;
 $7 = ((($iovs)) + 8|0);
 HEAP32[$7>>2] = $buf;
 $8 = ((($iovs)) + 12|0);
 HEAP32[$8>>2] = $len;
 $9 = (($6) + ($len))|0;
 $10 = ((($f)) + 60|0);
 $11 = ((($f)) + 44|0);
 $iov$0 = $iovs;$iovcnt$0 = 2;$rem$0 = $9;
 while(1) {
  $12 = HEAP32[2916>>2]|0;
  $13 = ($12|0)==(0|0);
  if ($13) {
   $17 = HEAP32[$10>>2]|0;
   HEAP32[$vararg_buffer3>>2] = $17;
   $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
   HEAP32[$vararg_ptr6>>2] = $iov$0;
   $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
   HEAP32[$vararg_ptr7>>2] = $iovcnt$0;
   $18 = (___syscall146(146,($vararg_buffer3|0))|0);
   $19 = (___syscall_ret($18)|0);
   $cnt$0 = $19;
  } else {
   _pthread_cleanup_push((416|0),($f|0));
   $14 = HEAP32[$10>>2]|0;
   HEAP32[$vararg_buffer>>2] = $14;
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr1>>2] = $iov$0;
   $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
   HEAP32[$vararg_ptr2>>2] = $iovcnt$0;
   $15 = (___syscall146(146,($vararg_buffer|0))|0);
   $16 = (___syscall_ret($15)|0);
   _pthread_cleanup_pop(0);
   $cnt$0 = $16;
  }
  $20 = ($rem$0|0)==($cnt$0|0);
  if ($20) {
   label = 6;
   break;
  }
  $27 = ($cnt$0|0)<(0);
  if ($27) {
   $iov$0$lcssa11 = $iov$0;$iovcnt$0$lcssa12 = $iovcnt$0;
   label = 8;
   break;
  }
  $35 = (($rem$0) - ($cnt$0))|0;
  $36 = ((($iov$0)) + 4|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = ($cnt$0>>>0)>($37>>>0);
  if ($38) {
   $39 = HEAP32[$11>>2]|0;
   HEAP32[$0>>2] = $39;
   HEAP32[$3>>2] = $39;
   $40 = (($cnt$0) - ($37))|0;
   $41 = ((($iov$0)) + 8|0);
   $42 = (($iovcnt$0) + -1)|0;
   $$phi$trans$insert = ((($iov$0)) + 12|0);
   $$pre = HEAP32[$$phi$trans$insert>>2]|0;
   $50 = $$pre;$cnt$1 = $40;$iov$1 = $41;$iovcnt$1 = $42;
  } else {
   $43 = ($iovcnt$0|0)==(2);
   if ($43) {
    $44 = HEAP32[$0>>2]|0;
    $45 = (($44) + ($cnt$0)|0);
    HEAP32[$0>>2] = $45;
    $50 = $37;$cnt$1 = $cnt$0;$iov$1 = $iov$0;$iovcnt$1 = 2;
   } else {
    $50 = $37;$cnt$1 = $cnt$0;$iov$1 = $iov$0;$iovcnt$1 = $iovcnt$0;
   }
  }
  $46 = HEAP32[$iov$1>>2]|0;
  $47 = (($46) + ($cnt$1)|0);
  HEAP32[$iov$1>>2] = $47;
  $48 = ((($iov$1)) + 4|0);
  $49 = (($50) - ($cnt$1))|0;
  HEAP32[$48>>2] = $49;
  $iov$0 = $iov$1;$iovcnt$0 = $iovcnt$1;$rem$0 = $35;
 }
 if ((label|0) == 6) {
  $21 = HEAP32[$11>>2]|0;
  $22 = ((($f)) + 48|0);
  $23 = HEAP32[$22>>2]|0;
  $24 = (($21) + ($23)|0);
  $25 = ((($f)) + 16|0);
  HEAP32[$25>>2] = $24;
  $26 = $21;
  HEAP32[$0>>2] = $26;
  HEAP32[$3>>2] = $26;
  $$0 = $len;
 }
 else if ((label|0) == 8) {
  $28 = ((($f)) + 16|0);
  HEAP32[$28>>2] = 0;
  HEAP32[$0>>2] = 0;
  HEAP32[$3>>2] = 0;
  $29 = HEAP32[$f>>2]|0;
  $30 = $29 | 32;
  HEAP32[$f>>2] = $30;
  $31 = ($iovcnt$0$lcssa12|0)==(2);
  if ($31) {
   $$0 = 0;
  } else {
   $32 = ((($iov$0$lcssa11)) + 4|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = (($len) - ($33))|0;
   $$0 = $34;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function ___stdout_write($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tio = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $tio = sp + 12|0;
 $0 = ((($f)) + 36|0);
 HEAP32[$0>>2] = 32;
 $1 = HEAP32[$f>>2]|0;
 $2 = $1 & 64;
 $3 = ($2|0)==(0);
 if ($3) {
  $4 = ((($f)) + 60|0);
  $5 = HEAP32[$4>>2]|0;
  HEAP32[$vararg_buffer>>2] = $5;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 21505;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $tio;
  $6 = (___syscall54(54,($vararg_buffer|0))|0);
  $7 = ($6|0)==(0);
  if (!($7)) {
   $8 = ((($f)) + 75|0);
   HEAP8[$8>>0] = -1;
  }
 }
 $9 = (___stdio_write($f,$buf,$len)|0);
 STACKTOP = sp;return ($9|0);
}
function ___string_read($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $k$0 = 0, $k$0$len = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 84|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($len) + 256)|0;
 $3 = (_memchr($1,0,$2)|0);
 $4 = ($3|0)==(0|0);
 $5 = $3;
 $6 = $1;
 $7 = (($5) - ($6))|0;
 $k$0 = $4 ? $2 : $7;
 $8 = ($k$0>>>0)<($len>>>0);
 $k$0$len = $8 ? $k$0 : $len;
 _memcpy(($buf|0),($1|0),($k$0$len|0))|0;
 $9 = (($1) + ($k$0$len)|0);
 $10 = ((($f)) + 4|0);
 HEAP32[$10>>2] = $9;
 $11 = (($1) + ($k$0)|0);
 $12 = ((($f)) + 8|0);
 HEAP32[$12>>2] = $11;
 HEAP32[$0>>2] = $11;
 return ($k$0$len|0);
}
function ___toread($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 74|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 << 24 >> 24;
 $3 = (($2) + 255)|0;
 $4 = $3 | $2;
 $5 = $4&255;
 HEAP8[$0>>0] = $5;
 $6 = ((($f)) + 20|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($f)) + 44|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($7>>>0)>($9>>>0);
 if ($10) {
  $11 = ((($f)) + 36|0);
  $12 = HEAP32[$11>>2]|0;
  (FUNCTION_TABLE_iiii[$12 & 1023]($f,0,0)|0);
 }
 $13 = ((($f)) + 16|0);
 HEAP32[$13>>2] = 0;
 $14 = ((($f)) + 28|0);
 HEAP32[$14>>2] = 0;
 HEAP32[$6>>2] = 0;
 $15 = HEAP32[$f>>2]|0;
 $16 = $15 & 20;
 $17 = ($16|0)==(0);
 if ($17) {
  $21 = HEAP32[$8>>2]|0;
  $22 = ((($f)) + 8|0);
  HEAP32[$22>>2] = $21;
  $23 = ((($f)) + 4|0);
  HEAP32[$23>>2] = $21;
  $$0 = 0;
 } else {
  $18 = $15 & 4;
  $19 = ($18|0)==(0);
  if ($19) {
   $$0 = -1;
  } else {
   $20 = $15 | 32;
   HEAP32[$f>>2] = $20;
   $$0 = -1;
  }
 }
 return ($$0|0);
}
function ___towrite($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 74|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 << 24 >> 24;
 $3 = (($2) + 255)|0;
 $4 = $3 | $2;
 $5 = $4&255;
 HEAP8[$0>>0] = $5;
 $6 = HEAP32[$f>>2]|0;
 $7 = $6 & 8;
 $8 = ($7|0)==(0);
 if ($8) {
  $10 = ((($f)) + 8|0);
  HEAP32[$10>>2] = 0;
  $11 = ((($f)) + 4|0);
  HEAP32[$11>>2] = 0;
  $12 = ((($f)) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($f)) + 28|0);
  HEAP32[$14>>2] = $13;
  $15 = ((($f)) + 20|0);
  HEAP32[$15>>2] = $13;
  $16 = $13;
  $17 = ((($f)) + 48|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = (($16) + ($18)|0);
  $20 = ((($f)) + 16|0);
  HEAP32[$20>>2] = $19;
  $$0 = 0;
 } else {
  $9 = $6 | 32;
  HEAP32[$f>>2] = $9;
  $$0 = -1;
 }
 return ($$0|0);
}
function ___uflow($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $c = sp;
 $0 = ((($f)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $3 = (___toread($f)|0);
  $4 = ($3|0)==(0);
  if ($4) {
   label = 3;
  } else {
   $$0 = -1;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $5 = ((($f)) + 32|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (FUNCTION_TABLE_iiii[$6 & 1023]($f,$c,1)|0);
  $8 = ($7|0)==(1);
  if ($8) {
   $9 = HEAP8[$c>>0]|0;
   $10 = $9&255;
   $$0 = $10;
  } else {
   $$0 = -1;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function _fflush($f) {
 $f = $f|0;
 var $$0 = 0, $$01 = 0, $$012 = 0, $$014 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, $r$0$lcssa = 0, $r$03 = 0, $r$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($f|0)==(0|0);
 do {
  if ($0) {
   $7 = HEAP32[3176>>2]|0;
   $8 = ($7|0)==(0|0);
   if ($8) {
    $27 = 0;
   } else {
    $9 = HEAP32[3176>>2]|0;
    $10 = (_fflush($9)|0);
    $27 = $10;
   }
   ___lock(((2944)|0));
   $$012 = HEAP32[(2940)>>2]|0;
   $11 = ($$012|0)==(0|0);
   if ($11) {
    $r$0$lcssa = $27;
   } else {
    $$014 = $$012;$r$03 = $27;
    while(1) {
     $12 = ((($$014)) + 76|0);
     $13 = HEAP32[$12>>2]|0;
     $14 = ($13|0)>(-1);
     if ($14) {
      $15 = (___lockfile($$014)|0);
      $24 = $15;
     } else {
      $24 = 0;
     }
     $16 = ((($$014)) + 20|0);
     $17 = HEAP32[$16>>2]|0;
     $18 = ((($$014)) + 28|0);
     $19 = HEAP32[$18>>2]|0;
     $20 = ($17>>>0)>($19>>>0);
     if ($20) {
      $21 = (___fflush_unlocked($$014)|0);
      $22 = $21 | $r$03;
      $r$1 = $22;
     } else {
      $r$1 = $r$03;
     }
     $23 = ($24|0)==(0);
     if (!($23)) {
      ___unlockfile($$014);
     }
     $25 = ((($$014)) + 56|0);
     $$01 = HEAP32[$25>>2]|0;
     $26 = ($$01|0)==(0|0);
     if ($26) {
      $r$0$lcssa = $r$1;
      break;
     } else {
      $$014 = $$01;$r$03 = $r$1;
     }
    }
   }
   ___unlock(((2944)|0));
   $$0 = $r$0$lcssa;
  } else {
   $1 = ((($f)) + 76|0);
   $2 = HEAP32[$1>>2]|0;
   $3 = ($2|0)>(-1);
   if (!($3)) {
    $4 = (___fflush_unlocked($f)|0);
    $$0 = $4;
    break;
   }
   $5 = (___lockfile($f)|0);
   $phitmp = ($5|0)==(0);
   $6 = (___fflush_unlocked($f)|0);
   if ($phitmp) {
    $$0 = $6;
   } else {
    ___unlockfile($f);
    $$0 = $6;
   }
  }
 } while(0);
 return ($$0|0);
}
function _fopen($filename,$mode) {
 $filename = $filename|0;
 $mode = $mode|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $memchr = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $0 = HEAP8[$mode>>0]|0;
 $1 = $0 << 24 >> 24;
 $memchr = (_memchr(21345,$1,4)|0);
 $2 = ($memchr|0)==(0|0);
 if ($2) {
  $3 = (___errno_location()|0);
  HEAP32[$3>>2] = 22;
  $$0 = 0;
 } else {
  $4 = (___fmodeflags($mode)|0);
  $5 = $4 | 32768;
  HEAP32[$vararg_buffer>>2] = $filename;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $5;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 438;
  $6 = (___syscall5(5,($vararg_buffer|0))|0);
  $7 = (___syscall_ret($6)|0);
  $8 = ($7|0)<(0);
  if ($8) {
   $$0 = 0;
  } else {
   $9 = (___fdopen($7,$mode)|0);
   $10 = ($9|0)==(0|0);
   if ($10) {
    HEAP32[$vararg_buffer3>>2] = $7;
    (___syscall6(6,($vararg_buffer3|0))|0);
    $$0 = 0;
   } else {
    $$0 = $9;
   }
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function _fputc($c,$f) {
 $c = $c|0;
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 76|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)<(0);
 if ($2) {
  label = 3;
 } else {
  $3 = (___lockfile($f)|0);
  $4 = ($3|0)==(0);
  if ($4) {
   label = 3;
  } else {
   $18 = ((($f)) + 75|0);
   $19 = HEAP8[$18>>0]|0;
   $20 = $19 << 24 >> 24;
   $21 = ($20|0)==($c|0);
   if ($21) {
    label = 10;
   } else {
    $22 = ((($f)) + 20|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = ((($f)) + 16|0);
    $25 = HEAP32[$24>>2]|0;
    $26 = ($23>>>0)<($25>>>0);
    if ($26) {
     $27 = $c&255;
     $28 = ((($23)) + 1|0);
     HEAP32[$22>>2] = $28;
     HEAP8[$23>>0] = $27;
     $29 = $c & 255;
     $31 = $29;
    } else {
     label = 10;
    }
   }
   if ((label|0) == 10) {
    $30 = (___overflow($f,$c)|0);
    $31 = $30;
   }
   ___unlockfile($f);
   $$0 = $31;
  }
 }
 do {
  if ((label|0) == 3) {
   $5 = ((($f)) + 75|0);
   $6 = HEAP8[$5>>0]|0;
   $7 = $6 << 24 >> 24;
   $8 = ($7|0)==($c|0);
   if (!($8)) {
    $9 = ((($f)) + 20|0);
    $10 = HEAP32[$9>>2]|0;
    $11 = ((($f)) + 16|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($10>>>0)<($12>>>0);
    if ($13) {
     $14 = $c&255;
     $15 = ((($10)) + 1|0);
     HEAP32[$9>>2] = $15;
     HEAP8[$10>>0] = $14;
     $16 = $c & 255;
     $$0 = $16;
     break;
    }
   }
   $17 = (___overflow($f,$c)|0);
   $$0 = $17;
  }
 } while(0);
 return ($$0|0);
}
function _fread($destv,$size,$nmemb,$f) {
 $destv = $destv|0;
 $size = $size|0;
 $nmemb = $nmemb|0;
 $f = $f|0;
 var $$ = 0, $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $dest$0$ph = 0, $dest$02 = 0, $l$0$ph = 0, $l$03 = 0, $l$03$lcssa = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = Math_imul($nmemb, $size)|0;
 $1 = ((($f)) + 76|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)>(-1);
 if ($3) {
  $4 = (___lockfile($f)|0);
  $32 = $4;
 } else {
  $32 = 0;
 }
 $5 = ((($f)) + 74|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6 << 24 >> 24;
 $8 = (($7) + 255)|0;
 $9 = $8 | $7;
 $10 = $9&255;
 HEAP8[$5>>0] = $10;
 $11 = ((($f)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($f)) + 4|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = $12;
 $16 = $14;
 $17 = (($15) - ($16))|0;
 $18 = ($17|0)>(0);
 if ($18) {
  $19 = ($17>>>0)<($0>>>0);
  $$ = $19 ? $17 : $0;
  _memcpy(($destv|0),($14|0),($$|0))|0;
  $20 = (($14) + ($$)|0);
  HEAP32[$13>>2] = $20;
  $21 = (($destv) + ($$)|0);
  $22 = (($0) - ($$))|0;
  $dest$0$ph = $21;$l$0$ph = $22;
 } else {
  $dest$0$ph = $destv;$l$0$ph = $0;
 }
 $23 = ($l$0$ph|0)==(0);
 L7: do {
  if ($23) {
   label = 13;
  } else {
   $24 = ((($f)) + 32|0);
   $dest$02 = $dest$0$ph;$l$03 = $l$0$ph;
   while(1) {
    $25 = (___toread($f)|0);
    $26 = ($25|0)==(0);
    if (!($26)) {
     $l$03$lcssa = $l$03;
     break;
    }
    $27 = HEAP32[$24>>2]|0;
    $28 = (FUNCTION_TABLE_iiii[$27 & 1023]($f,$dest$02,$l$03)|0);
    $29 = (($28) + 1)|0;
    $30 = ($29>>>0)<(2);
    if ($30) {
     $l$03$lcssa = $l$03;
     break;
    }
    $35 = (($l$03) - ($28))|0;
    $36 = (($dest$02) + ($28)|0);
    $37 = ($l$03|0)==($28|0);
    if ($37) {
     label = 13;
     break L7;
    } else {
     $dest$02 = $36;$l$03 = $35;
    }
   }
   $31 = ($32|0)==(0);
   if (!($31)) {
    ___unlockfile($f);
   }
   $33 = (($0) - ($l$03$lcssa))|0;
   $34 = (($33>>>0) / ($size>>>0))&-1;
   $$0 = $34;
  }
 } while(0);
 if ((label|0) == 13) {
  $38 = ($32|0)==(0);
  if ($38) {
   $$0 = $nmemb;
  } else {
   ___unlockfile($f);
   $$0 = $nmemb;
  }
 }
 return ($$0|0);
}
function ___fwritex($s,$l,$f) {
 $s = $s|0;
 $l = $l|0;
 $f = $f|0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$pre = 0, $$pre6 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$0 = 0, $i$0$lcssa10 = 0;
 var $i$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $3 = (___towrite($f)|0);
  $4 = ($3|0)==(0);
  if ($4) {
   $$pre = HEAP32[$0>>2]|0;
   $8 = $$pre;
   label = 4;
  } else {
   $$0 = 0;
  }
 } else {
  $8 = $1;
  label = 4;
 }
 L4: do {
  if ((label|0) == 4) {
   $5 = ((($f)) + 20|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = $8;
   $9 = $6;
   $10 = (($7) - ($9))|0;
   $11 = ($10>>>0)<($l>>>0);
   if ($11) {
    $12 = ((($f)) + 36|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = (FUNCTION_TABLE_iiii[$13 & 1023]($f,$s,$l)|0);
    $$0 = $14;
    break;
   }
   $15 = ((($f)) + 75|0);
   $16 = HEAP8[$15>>0]|0;
   $17 = ($16<<24>>24)>(-1);
   L9: do {
    if ($17) {
     $i$0 = $l;
     while(1) {
      $18 = ($i$0|0)==(0);
      if ($18) {
       $$01 = $l;$$02 = $s;$29 = $6;$i$1 = 0;
       break L9;
      }
      $19 = (($i$0) + -1)|0;
      $20 = (($s) + ($19)|0);
      $21 = HEAP8[$20>>0]|0;
      $22 = ($21<<24>>24)==(10);
      if ($22) {
       $i$0$lcssa10 = $i$0;
       break;
      } else {
       $i$0 = $19;
      }
     }
     $23 = ((($f)) + 36|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = (FUNCTION_TABLE_iiii[$24 & 1023]($f,$s,$i$0$lcssa10)|0);
     $26 = ($25>>>0)<($i$0$lcssa10>>>0);
     if ($26) {
      $$0 = $i$0$lcssa10;
      break L4;
     }
     $27 = (($s) + ($i$0$lcssa10)|0);
     $28 = (($l) - ($i$0$lcssa10))|0;
     $$pre6 = HEAP32[$5>>2]|0;
     $$01 = $28;$$02 = $27;$29 = $$pre6;$i$1 = $i$0$lcssa10;
    } else {
     $$01 = $l;$$02 = $s;$29 = $6;$i$1 = 0;
    }
   } while(0);
   _memcpy(($29|0),($$02|0),($$01|0))|0;
   $30 = HEAP32[$5>>2]|0;
   $31 = (($30) + ($$01)|0);
   HEAP32[$5>>2] = $31;
   $32 = (($i$1) + ($$01))|0;
   $$0 = $32;
  }
 } while(0);
 return ($$0|0);
}
function _fwrite($src,$size,$nmemb,$f) {
 $src = $src|0;
 $size = $size|0;
 $nmemb = $nmemb|0;
 $f = $f|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = Math_imul($nmemb, $size)|0;
 $1 = ((($f)) + 76|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)>(-1);
 if ($3) {
  $5 = (___lockfile($f)|0);
  $phitmp = ($5|0)==(0);
  $6 = (___fwritex($src,$0,$f)|0);
  if ($phitmp) {
   $8 = $6;
  } else {
   ___unlockfile($f);
   $8 = $6;
  }
 } else {
  $4 = (___fwritex($src,$0,$f)|0);
  $8 = $4;
 }
 $7 = ($8|0)==($0|0);
 if ($7) {
  $10 = $nmemb;
 } else {
  $9 = (($8>>>0) / ($size>>>0))&-1;
  $10 = $9;
 }
 return ($10|0);
}
function _getc($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 76|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)<(0);
 if ($2) {
  label = 3;
 } else {
  $3 = (___lockfile($f)|0);
  $4 = ($3|0)==(0);
  if ($4) {
   label = 3;
  } else {
   $14 = ((($f)) + 4|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($f)) + 8|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ($15>>>0)<($17>>>0);
   if ($18) {
    $19 = ((($15)) + 1|0);
    HEAP32[$14>>2] = $19;
    $20 = HEAP8[$15>>0]|0;
    $21 = $20&255;
    $23 = $21;
   } else {
    $22 = (___uflow($f)|0);
    $23 = $22;
   }
   $$0 = $23;
  }
 }
 do {
  if ((label|0) == 3) {
   $5 = ((($f)) + 4|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = ((($f)) + 8|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = ($6>>>0)<($8>>>0);
   if ($9) {
    $10 = ((($6)) + 1|0);
    HEAP32[$5>>2] = $10;
    $11 = HEAP8[$6>>0]|0;
    $12 = $11&255;
    $$0 = $12;
    break;
   } else {
    $13 = (___uflow($f)|0);
    $$0 = $13;
    break;
   }
  }
 } while(0);
 return ($$0|0);
}
function _snprintf($s,$n,$fmt,$varargs) {
 $s = $s|0;
 $n = $n|0;
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $0 = 0, $ap = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $0 = (_vsnprintf($s,$n,$fmt,$ap)|0);
 STACKTOP = sp;return ($0|0);
}
function _sscanf($s,$fmt,$varargs) {
 $s = $s|0;
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $0 = 0, $ap = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $0 = (_vsscanf($s,$fmt,$ap)|0);
 STACKTOP = sp;return ($0|0);
}
function _ungetc($c,$f) {
 $c = $c|0;
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($c|0)==(-1);
 do {
  if ($0) {
   $$0 = -1;
  } else {
   $1 = ((($f)) + 76|0);
   $2 = HEAP32[$1>>2]|0;
   $3 = ($2|0)>(-1);
   if ($3) {
    $4 = (___lockfile($f)|0);
    $17 = $4;
   } else {
    $17 = 0;
   }
   $5 = ((($f)) + 8|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = ($6|0)==(0|0);
   if ($7) {
    $8 = (___toread($f)|0);
    $9 = ($8|0)==(0);
    if ($9) {
     label = 6;
    }
   } else {
    label = 6;
   }
   if ((label|0) == 6) {
    $10 = ((($f)) + 4|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = ((($f)) + 44|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = ((($13)) + -8|0);
    $15 = ($11>>>0)>($14>>>0);
    if ($15) {
     $18 = $c&255;
     $19 = ((($11)) + -1|0);
     HEAP32[$10>>2] = $19;
     HEAP8[$19>>0] = $18;
     $20 = HEAP32[$f>>2]|0;
     $21 = $20 & -17;
     HEAP32[$f>>2] = $21;
     $22 = ($17|0)==(0);
     if ($22) {
      $$0 = $c;
      break;
     }
     ___unlockfile($f);
     $$0 = $c;
     break;
    }
   }
   $16 = ($17|0)==(0);
   if ($16) {
    $$0 = -1;
   } else {
    ___unlockfile($f);
    $$0 = -1;
   }
  }
 } while(0);
 return ($$0|0);
}
function _vasprintf($s,$fmt,$ap) {
 $s = $s|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ap2 = 0, $vacopy_currentptr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap2 = sp;
 $0 = (_malloc(240)|0);
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $$0 = -1;
  } else {
   $vacopy_currentptr = HEAP32[$ap>>2]|0;
   HEAP32[$ap2>>2] = $vacopy_currentptr;
   $2 = (_vsnprintf($0,240,$fmt,$ap2)|0);
   $3 = ($2>>>0)<(240);
   if ($3) {
    $4 = (($2) + 1)|0;
    $5 = (_realloc($0,$4)|0);
    $6 = ($5|0)!=(0|0);
    $7 = $6 ? $5 : $0;
    HEAP32[$s>>2] = $7;
    $$0 = $2;
    break;
   }
   _free($0);
   $8 = ($2|0)<(0);
   if ($8) {
    $$0 = -1;
   } else {
    $9 = (($2) + 1)|0;
    $10 = (_malloc($9)|0);
    HEAP32[$s>>2] = $10;
    $11 = ($10|0)==(0|0);
    if ($11) {
     $$0 = -1;
    } else {
     $12 = (_vsnprintf($10,$9,$fmt,$ap)|0);
     $$0 = $12;
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _vfprintf($f,$fmt,$ap) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$ = 0, $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ap2 = 0, $internal_buf = 0, $nl_arg = 0, $nl_type = 0;
 var $ret$1 = 0, $ret$1$ = 0, $vacopy_currentptr = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap2 = sp + 120|0;
 $nl_type = sp + 80|0;
 $nl_arg = sp;
 $internal_buf = sp + 136|0;
 dest=$nl_type; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $vacopy_currentptr = HEAP32[$ap>>2]|0;
 HEAP32[$ap2>>2] = $vacopy_currentptr;
 $0 = (_printf_core(0,$fmt,$ap2,$nl_arg,$nl_type)|0);
 $1 = ($0|0)<(0);
 if ($1) {
  $$0 = -1;
 } else {
  $2 = ((($f)) + 76|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = ($3|0)>(-1);
  if ($4) {
   $5 = (___lockfile($f)|0);
   $33 = $5;
  } else {
   $33 = 0;
  }
  $6 = HEAP32[$f>>2]|0;
  $7 = $6 & 32;
  $8 = ((($f)) + 74|0);
  $9 = HEAP8[$8>>0]|0;
  $10 = ($9<<24>>24)<(1);
  if ($10) {
   $11 = $6 & -33;
   HEAP32[$f>>2] = $11;
  }
  $12 = ((($f)) + 48|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ($13|0)==(0);
  if ($14) {
   $16 = ((($f)) + 44|0);
   $17 = HEAP32[$16>>2]|0;
   HEAP32[$16>>2] = $internal_buf;
   $18 = ((($f)) + 28|0);
   HEAP32[$18>>2] = $internal_buf;
   $19 = ((($f)) + 20|0);
   HEAP32[$19>>2] = $internal_buf;
   HEAP32[$12>>2] = 80;
   $20 = ((($internal_buf)) + 80|0);
   $21 = ((($f)) + 16|0);
   HEAP32[$21>>2] = $20;
   $22 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
   $23 = ($17|0)==(0|0);
   if ($23) {
    $ret$1 = $22;
   } else {
    $24 = ((($f)) + 36|0);
    $25 = HEAP32[$24>>2]|0;
    (FUNCTION_TABLE_iiii[$25 & 1023]($f,0,0)|0);
    $26 = HEAP32[$19>>2]|0;
    $27 = ($26|0)==(0|0);
    $$ = $27 ? -1 : $22;
    HEAP32[$16>>2] = $17;
    HEAP32[$12>>2] = 0;
    HEAP32[$21>>2] = 0;
    HEAP32[$18>>2] = 0;
    HEAP32[$19>>2] = 0;
    $ret$1 = $$;
   }
  } else {
   $15 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
   $ret$1 = $15;
  }
  $28 = HEAP32[$f>>2]|0;
  $29 = $28 & 32;
  $30 = ($29|0)==(0);
  $ret$1$ = $30 ? $ret$1 : -1;
  $31 = $28 | $7;
  HEAP32[$f>>2] = $31;
  $32 = ($33|0)==(0);
  if (!($32)) {
   ___unlockfile($f);
  }
  $$0 = $ret$1$;
 }
 STACKTOP = sp;return ($$0|0);
}
function _vfscanf($f,$fmt,$ap) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$ = 0, $$10 = 0, $$11 = 0, $$12 = 0, $$9 = 0, $$lcssa = 0, $$lcssa38 = 0, $$lcssa384 = 0, $$not = 0, $$old4 = 0, $$pre = 0, $$pre$phi182Z2D = 0, $$pre168 = 0, $$pre170 = 0, $$pre172 = 0, $$pre174 = 0, $$pre176 = 0, $$pre178 = 0, $$pre180 = 0, $$pre181 = 0;
 var $$size$0 = 0, $$width$0 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;
 var $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0.0, $311 = 0;
 var $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0.0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0;
 var $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $alloc$0 = 0, $alloc$0400 = 0, $alloc$1 = 0;
 var $alloc$2 = 0, $ap2$i = 0, $arglist_current = 0, $arglist_current2 = 0, $arglist_next = 0, $arglist_next3 = 0, $base$0 = 0, $c$0100 = 0, $dest$0 = 0, $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0, $expanded15 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0, $expanded8 = 0, $factor = 0;
 var $factor16 = 0, $i$0$i = 0, $i$0$ph = 0, $i$0$ph$phi = 0, $i$0$ph20 = 0, $i$0$ph20$lcssa = 0, $i$1 = 0, $i$2 = 0, $i$2$ph = 0, $i$2$ph$phi = 0, $i$3 = 0, $i$4 = 0, $invert$0 = 0, $isdigit = 0, $isdigit7 = 0, $isdigit795 = 0, $isdigittmp = 0, $isdigittmp6 = 0, $isdigittmp694 = 0, $k$0$ph = 0;
 var $k$1$ph = 0, $matches$0$ = 0, $matches$0104 = 0, $matches$0104$lcssa = 0, $matches$0104376 = 0, $matches$1 = 0, $matches$2 = 0, $matches$3 = 0, $not$ = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond8 = 0, $p$0109 = 0, $p$1 = 0, $p$1$lcssa = 0, $p$10 = 0, $p$11 = 0, $p$2 = 0, $p$3$lcssa = 0;
 var $p$396 = 0, $p$4 = 0, $p$5 = 0, $p$6 = 0, $p$7 = 0, $p$7$ph = 0, $p$8 = 0, $p$9 = 0, $pos$0108 = 0, $pos$1 = 0, $pos$2 = 0, $s$0107 = 0, $s$0107$lcssa = 0, $s$1 = 0, $s$2$ph = 0, $s$3 = 0, $s$4 = 0, $s$5 = 0, $s$6 = 0, $s$7 = 0;
 var $s$8 = 0, $scanset = 0, $size$0 = 0, $st = 0, $vacopy_currentptr = 0, $wc = 0, $wcs$0103 = 0, $wcs$0103$lcssa = 0, $wcs$1 = 0, $wcs$2 = 0, $wcs$3$ph = 0, $wcs$3$ph$lcssa = 0, $wcs$4 = 0, $wcs$5 = 0, $wcs$6 = 0, $wcs$7 = 0, $wcs$8 = 0, $wcs$9 = 0, $width$0$lcssa = 0, $width$097 = 0;
 var $width$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap2$i = sp + 16|0;
 $st = sp + 8|0;
 $scanset = sp + 33|0;
 $wc = sp;
 $0 = sp + 32|0;
 $1 = ((($f)) + 76|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)>(-1);
 if ($3) {
  $4 = (___lockfile($f)|0);
  $334 = $4;
 } else {
  $334 = 0;
 }
 $5 = HEAP8[$fmt>>0]|0;
 $6 = ($5<<24>>24)==(0);
 L4: do {
  if ($6) {
   $matches$3 = 0;
  } else {
   $7 = ((($f)) + 4|0);
   $8 = ((($f)) + 100|0);
   $9 = ((($f)) + 108|0);
   $10 = ((($f)) + 8|0);
   $11 = ((($scanset)) + 10|0);
   $12 = ((($scanset)) + 33|0);
   $13 = ((($st)) + 4|0);
   $14 = ((($scanset)) + 46|0);
   $15 = ((($scanset)) + 94|0);
   $17 = $5;$matches$0104 = 0;$p$0109 = $fmt;$pos$0108 = 0;$s$0107 = 0;$wcs$0103 = 0;
   L6: while(1) {
    $16 = $17&255;
    $18 = (_isspace($16)|0);
    $19 = ($18|0)==(0);
    L8: do {
     if ($19) {
      $46 = HEAP8[$p$0109>>0]|0;
      $47 = ($46<<24>>24)==(37);
      L10: do {
       if ($47) {
        $48 = ((($p$0109)) + 1|0);
        $49 = HEAP8[$48>>0]|0;
        L12: do {
         switch ($49<<24>>24) {
         case 37:  {
          break L10;
          break;
         }
         case 42:  {
          $70 = ((($p$0109)) + 2|0);
          $dest$0 = 0;$p$2 = $70;
          break;
         }
         default: {
          $71 = $49&255;
          $isdigittmp = (($71) + -48)|0;
          $isdigit = ($isdigittmp>>>0)<(10);
          if ($isdigit) {
           $72 = ((($p$0109)) + 2|0);
           $73 = HEAP8[$72>>0]|0;
           $74 = ($73<<24>>24)==(36);
           if ($74) {
            $vacopy_currentptr = HEAP32[$ap>>2]|0;
            HEAP32[$ap2$i>>2] = $vacopy_currentptr;
            $i$0$i = $isdigittmp;
            while(1) {
             $75 = ($i$0$i>>>0)>(1);
             $arglist_current = HEAP32[$ap2$i>>2]|0;
             $76 = $arglist_current;
             $77 = ((0) + 4|0);
             $expanded4 = $77;
             $expanded = (($expanded4) - 1)|0;
             $78 = (($76) + ($expanded))|0;
             $79 = ((0) + 4|0);
             $expanded8 = $79;
             $expanded7 = (($expanded8) - 1)|0;
             $expanded6 = $expanded7 ^ -1;
             $80 = $78 & $expanded6;
             $81 = $80;
             $82 = HEAP32[$81>>2]|0;
             $arglist_next = ((($81)) + 4|0);
             HEAP32[$ap2$i>>2] = $arglist_next;
             $83 = (($i$0$i) + -1)|0;
             if ($75) {
              $i$0$i = $83;
             } else {
              $$lcssa = $82;
              break;
             }
            }
            $84 = ((($p$0109)) + 3|0);
            $dest$0 = $$lcssa;$p$2 = $84;
            break L12;
           }
          }
          $arglist_current2 = HEAP32[$ap>>2]|0;
          $85 = $arglist_current2;
          $86 = ((0) + 4|0);
          $expanded11 = $86;
          $expanded10 = (($expanded11) - 1)|0;
          $87 = (($85) + ($expanded10))|0;
          $88 = ((0) + 4|0);
          $expanded15 = $88;
          $expanded14 = (($expanded15) - 1)|0;
          $expanded13 = $expanded14 ^ -1;
          $89 = $87 & $expanded13;
          $90 = $89;
          $91 = HEAP32[$90>>2]|0;
          $arglist_next3 = ((($90)) + 4|0);
          HEAP32[$ap>>2] = $arglist_next3;
          $dest$0 = $91;$p$2 = $48;
         }
         }
        } while(0);
        $92 = HEAP8[$p$2>>0]|0;
        $93 = $92&255;
        $isdigittmp694 = (($93) + -48)|0;
        $isdigit795 = ($isdigittmp694>>>0)<(10);
        if ($isdigit795) {
         $97 = $93;$p$396 = $p$2;$width$097 = 0;
         while(1) {
          $94 = ($width$097*10)|0;
          $95 = (($94) + -48)|0;
          $96 = (($95) + ($97))|0;
          $98 = ((($p$396)) + 1|0);
          $99 = HEAP8[$98>>0]|0;
          $100 = $99&255;
          $isdigittmp6 = (($100) + -48)|0;
          $isdigit7 = ($isdigittmp6>>>0)<(10);
          if ($isdigit7) {
           $97 = $100;$p$396 = $98;$width$097 = $96;
          } else {
           $$lcssa38 = $99;$p$3$lcssa = $98;$width$0$lcssa = $96;
           break;
          }
         }
        } else {
         $$lcssa38 = $92;$p$3$lcssa = $p$2;$width$0$lcssa = 0;
        }
        $101 = ($$lcssa38<<24>>24)==(109);
        if ($101) {
         $102 = ($dest$0|0)!=(0|0);
         $103 = $102&1;
         $104 = ((($p$3$lcssa)) + 1|0);
         $$pre168 = HEAP8[$104>>0]|0;
         $107 = $$pre168;$alloc$0 = $103;$p$4 = $104;$s$1 = 0;$wcs$1 = 0;
        } else {
         $107 = $$lcssa38;$alloc$0 = 0;$p$4 = $p$3$lcssa;$s$1 = $s$0107;$wcs$1 = $wcs$0103;
        }
        $105 = ((($p$4)) + 1|0);
        $106 = $107&255;
        switch ($106|0) {
        case 104:  {
         $108 = HEAP8[$105>>0]|0;
         $109 = ($108<<24>>24)==(104);
         $110 = ((($p$4)) + 2|0);
         $$9 = $109 ? $110 : $105;
         $$10 = $109 ? -2 : -1;
         $p$5 = $$9;$size$0 = $$10;
         break;
        }
        case 108:  {
         $111 = HEAP8[$105>>0]|0;
         $112 = ($111<<24>>24)==(108);
         $113 = ((($p$4)) + 2|0);
         $$11 = $112 ? $113 : $105;
         $$12 = $112 ? 3 : 1;
         $p$5 = $$11;$size$0 = $$12;
         break;
        }
        case 106:  {
         $p$5 = $105;$size$0 = 3;
         break;
        }
        case 116: case 122:  {
         $p$5 = $105;$size$0 = 1;
         break;
        }
        case 76:  {
         $p$5 = $105;$size$0 = 2;
         break;
        }
        case 110: case 112: case 67: case 83: case 91: case 99: case 115: case 88: case 71: case 70: case 69: case 65: case 103: case 102: case 101: case 97: case 120: case 117: case 111: case 105: case 100:  {
         $p$5 = $p$4;$size$0 = 0;
         break;
        }
        default: {
         $alloc$0400 = $alloc$0;$matches$0104376 = $matches$0104;$s$6 = $s$1;$wcs$7 = $wcs$1;
         label = 152;
         break L6;
        }
        }
        $114 = HEAP8[$p$5>>0]|0;
        $115 = $114&255;
        $116 = $115 & 47;
        $117 = ($116|0)==(3);
        $118 = $115 | 32;
        $$ = $117 ? $118 : $115;
        $$size$0 = $117 ? 1 : $size$0;
        switch ($$|0) {
        case 99:  {
         $119 = ($width$0$lcssa|0)<(1);
         $$width$0 = $119 ? 1 : $width$0$lcssa;
         $pos$1 = $pos$0108;$width$1 = $$width$0;
         break;
        }
        case 91:  {
         $pos$1 = $pos$0108;$width$1 = $width$0$lcssa;
         break;
        }
        case 110:  {
         $120 = ($pos$0108|0)<(0);
         $121 = $120 << 31 >> 31;
         $122 = ($dest$0|0)==(0|0);
         if ($122) {
          $matches$1 = $matches$0104;$p$11 = $p$5;$pos$2 = $pos$0108;$s$5 = $s$1;$wcs$6 = $wcs$1;
          break L8;
         }
         switch ($$size$0|0) {
         case -2:  {
          $123 = $pos$0108&255;
          HEAP8[$dest$0>>0] = $123;
          $matches$1 = $matches$0104;$p$11 = $p$5;$pos$2 = $pos$0108;$s$5 = $s$1;$wcs$6 = $wcs$1;
          break L8;
          break;
         }
         case -1:  {
          $124 = $pos$0108&65535;
          HEAP16[$dest$0>>1] = $124;
          $matches$1 = $matches$0104;$p$11 = $p$5;$pos$2 = $pos$0108;$s$5 = $s$1;$wcs$6 = $wcs$1;
          break L8;
          break;
         }
         case 0:  {
          HEAP32[$dest$0>>2] = $pos$0108;
          $matches$1 = $matches$0104;$p$11 = $p$5;$pos$2 = $pos$0108;$s$5 = $s$1;$wcs$6 = $wcs$1;
          break L8;
          break;
         }
         case 1:  {
          HEAP32[$dest$0>>2] = $pos$0108;
          $matches$1 = $matches$0104;$p$11 = $p$5;$pos$2 = $pos$0108;$s$5 = $s$1;$wcs$6 = $wcs$1;
          break L8;
          break;
         }
         case 3:  {
          $125 = $dest$0;
          $126 = $125;
          HEAP32[$126>>2] = $pos$0108;
          $127 = (($125) + 4)|0;
          $128 = $127;
          HEAP32[$128>>2] = $121;
          $matches$1 = $matches$0104;$p$11 = $p$5;$pos$2 = $pos$0108;$s$5 = $s$1;$wcs$6 = $wcs$1;
          break L8;
          break;
         }
         default: {
          $matches$1 = $matches$0104;$p$11 = $p$5;$pos$2 = $pos$0108;$s$5 = $s$1;$wcs$6 = $wcs$1;
          break L8;
         }
         }
         break;
        }
        default: {
         ___shlim($f,0);
         while(1) {
          $129 = HEAP32[$7>>2]|0;
          $130 = HEAP32[$8>>2]|0;
          $131 = ($129>>>0)<($130>>>0);
          if ($131) {
           $132 = ((($129)) + 1|0);
           HEAP32[$7>>2] = $132;
           $133 = HEAP8[$129>>0]|0;
           $134 = $133&255;
           $136 = $134;
          } else {
           $135 = (___shgetc($f)|0);
           $136 = $135;
          }
          $137 = (_isspace($136)|0);
          $138 = ($137|0)==(0);
          if ($138) {
           break;
          }
         }
         $139 = HEAP32[$8>>2]|0;
         $140 = ($139|0)==(0|0);
         $$pre170 = HEAP32[$7>>2]|0;
         if ($140) {
          $145 = $$pre170;
         } else {
          $141 = ((($$pre170)) + -1|0);
          HEAP32[$7>>2] = $141;
          $145 = $141;
         }
         $142 = HEAP32[$9>>2]|0;
         $143 = HEAP32[$10>>2]|0;
         $144 = $145;
         $146 = $143;
         $147 = (($142) + ($pos$0108))|0;
         $148 = (($147) + ($144))|0;
         $149 = (($148) - ($146))|0;
         $pos$1 = $149;$width$1 = $width$0$lcssa;
        }
        }
        ___shlim($f,$width$1);
        $150 = HEAP32[$7>>2]|0;
        $151 = HEAP32[$8>>2]|0;
        $152 = ($150>>>0)<($151>>>0);
        if ($152) {
         $153 = ((($150)) + 1|0);
         HEAP32[$7>>2] = $153;
         $157 = $151;
        } else {
         $154 = (___shgetc($f)|0);
         $155 = ($154|0)<(0);
         if ($155) {
          $alloc$0400 = $alloc$0;$matches$0104376 = $matches$0104;$s$6 = $s$1;$wcs$7 = $wcs$1;
          label = 152;
          break L6;
         }
         $$pre172 = HEAP32[$8>>2]|0;
         $157 = $$pre172;
        }
        $156 = ($157|0)==(0|0);
        if (!($156)) {
         $158 = HEAP32[$7>>2]|0;
         $159 = ((($158)) + -1|0);
         HEAP32[$7>>2] = $159;
        }
        L67: do {
         switch ($$|0) {
         case 91: case 99: case 115:  {
          $160 = ($$|0)==(99);
          $161 = $$ & 239;
          $162 = ($161|0)==(99);
          L69: do {
           if ($162) {
            $163 = ($$|0)==(115);
            _memset(($scanset|0),-1,257)|0;
            HEAP8[$scanset>>0] = 0;
            if ($163) {
             HEAP8[$12>>0] = 0;
             ;HEAP8[$11>>0]=0|0;HEAP8[$11+1>>0]=0|0;HEAP8[$11+2>>0]=0|0;HEAP8[$11+3>>0]=0|0;HEAP8[$11+4>>0]=0|0;
             $p$9 = $p$5;
            } else {
             $p$9 = $p$5;
            }
           } else {
            $164 = ((($p$5)) + 1|0);
            $165 = HEAP8[$164>>0]|0;
            $166 = ($165<<24>>24)==(94);
            $167 = ((($p$5)) + 2|0);
            $invert$0 = $166&1;
            $168 = $166 ? $164 : $p$5;
            $p$6 = $166 ? $167 : $164;
            $169 = $166&1;
            _memset(($scanset|0),($169|0),257)|0;
            HEAP8[$scanset>>0] = 0;
            $170 = HEAP8[$p$6>>0]|0;
            switch ($170<<24>>24) {
            case 45:  {
             $171 = ((($168)) + 2|0);
             $172 = $invert$0 ^ 1;
             $173 = $172&255;
             HEAP8[$14>>0] = $173;
             $$pre$phi182Z2D = $173;$p$7$ph = $171;
             break;
            }
            case 93:  {
             $174 = ((($168)) + 2|0);
             $175 = $invert$0 ^ 1;
             $176 = $175&255;
             HEAP8[$15>>0] = $176;
             $$pre$phi182Z2D = $176;$p$7$ph = $174;
             break;
            }
            default: {
             $$pre180 = $invert$0 ^ 1;
             $$pre181 = $$pre180&255;
             $$pre$phi182Z2D = $$pre181;$p$7$ph = $p$6;
            }
            }
            $p$7 = $p$7$ph;
            while(1) {
             $177 = HEAP8[$p$7>>0]|0;
             L80: do {
              switch ($177<<24>>24) {
              case 0:  {
               $alloc$0400 = $alloc$0;$matches$0104376 = $matches$0104;$s$6 = $s$1;$wcs$7 = $wcs$1;
               label = 152;
               break L6;
               break;
              }
              case 93:  {
               $p$9 = $p$7;
               break L69;
               break;
              }
              case 45:  {
               $178 = ((($p$7)) + 1|0);
               $179 = HEAP8[$178>>0]|0;
               switch ($179<<24>>24) {
               case 93: case 0:  {
                $190 = 45;$p$8 = $p$7;
                break L80;
                break;
               }
               default: {
               }
               }
               $180 = ((($p$7)) + -1|0);
               $181 = HEAP8[$180>>0]|0;
               $182 = ($181&255)<($179&255);
               if ($182) {
                $183 = $181&255;
                $c$0100 = $183;
                while(1) {
                 $184 = (($c$0100) + 1)|0;
                 $185 = (($scanset) + ($184)|0);
                 HEAP8[$185>>0] = $$pre$phi182Z2D;
                 $186 = HEAP8[$178>>0]|0;
                 $187 = $186&255;
                 $188 = ($184|0)<($187|0);
                 if ($188) {
                  $c$0100 = $184;
                 } else {
                  $190 = $186;$p$8 = $178;
                  break;
                 }
                }
               } else {
                $190 = $179;$p$8 = $178;
               }
               break;
              }
              default: {
               $190 = $177;$p$8 = $p$7;
              }
              }
             } while(0);
             $189 = $190&255;
             $191 = (($189) + 1)|0;
             $192 = (($scanset) + ($191)|0);
             HEAP8[$192>>0] = $$pre$phi182Z2D;
             $193 = ((($p$8)) + 1|0);
             $p$7 = $193;
            }
           }
          } while(0);
          $194 = (($width$1) + 1)|0;
          $195 = $160 ? $194 : 31;
          $196 = ($$size$0|0)==(1);
          $197 = ($alloc$0|0)!=(0);
          L88: do {
           if ($196) {
            if ($197) {
             $198 = $195 << 2;
             $199 = (_malloc($198)|0);
             $200 = ($199|0)==(0|0);
             if ($200) {
              $alloc$0400 = $alloc$0;$matches$0104376 = $matches$0104;$s$6 = 0;$wcs$7 = $199;
              label = 152;
              break L6;
             } else {
              $wcs$2 = $199;
             }
            } else {
             $wcs$2 = $dest$0;
            }
            HEAP32[$st>>2] = 0;
            HEAP32[$13>>2] = 0;
            $i$0$ph = 0;$k$0$ph = $195;$wcs$3$ph = $wcs$2;
            L94: while(1) {
             $201 = ($wcs$3$ph|0)==(0|0);
             $i$0$ph20 = $i$0$ph;
             while(1) {
              L98: while(1) {
               $202 = HEAP32[$7>>2]|0;
               $203 = HEAP32[$8>>2]|0;
               $204 = ($202>>>0)<($203>>>0);
               if ($204) {
                $205 = ((($202)) + 1|0);
                HEAP32[$7>>2] = $205;
                $206 = HEAP8[$202>>0]|0;
                $207 = $206&255;
                $210 = $207;
               } else {
                $208 = (___shgetc($f)|0);
                $210 = $208;
               }
               $209 = (($210) + 1)|0;
               $211 = (($scanset) + ($209)|0);
               $212 = HEAP8[$211>>0]|0;
               $213 = ($212<<24>>24)==(0);
               if ($213) {
                $i$0$ph20$lcssa = $i$0$ph20;$wcs$3$ph$lcssa = $wcs$3$ph;
                break L94;
               }
               $214 = $210&255;
               HEAP8[$0>>0] = $214;
               $215 = (_mbrtowc($wc,$0,1,$st)|0);
               switch ($215|0) {
               case -1:  {
                $alloc$0400 = $alloc$0;$matches$0104376 = $matches$0104;$s$6 = 0;$wcs$7 = $wcs$3$ph;
                label = 152;
                break L6;
                break;
               }
               case -2:  {
                break;
               }
               default: {
                break L98;
               }
               }
              }
              if ($201) {
               $i$1 = $i$0$ph20;
              } else {
               $216 = HEAP32[$wc>>2]|0;
               $217 = (($i$0$ph20) + 1)|0;
               $218 = (($wcs$3$ph) + ($i$0$ph20<<2)|0);
               HEAP32[$218>>2] = $216;
               $i$1 = $217;
              }
              $219 = ($i$1|0)==($k$0$ph|0);
              $or$cond = $197 & $219;
              if ($or$cond) {
               break;
              } else {
               $i$0$ph20 = $i$1;
              }
             }
             $factor = $k$0$ph << 1;
             $220 = $factor | 1;
             $221 = $220 << 2;
             $222 = (_realloc($wcs$3$ph,$221)|0);
             $223 = ($222|0)==(0|0);
             if ($223) {
              $alloc$0400 = $alloc$0;$matches$0104376 = $matches$0104;$s$6 = 0;$wcs$7 = $wcs$3$ph;
              label = 152;
              break L6;
             }
             $i$0$ph$phi = $k$0$ph;$k$0$ph = $220;$wcs$3$ph = $222;$i$0$ph = $i$0$ph$phi;
            }
            $224 = (_mbsinit($st)|0);
            $225 = ($224|0)==(0);
            if ($225) {
             $alloc$0400 = $alloc$0;$matches$0104376 = $matches$0104;$s$6 = 0;$wcs$7 = $wcs$3$ph$lcssa;
             label = 152;
             break L6;
            } else {
             $i$4 = $i$0$ph20$lcssa;$s$3 = 0;$wcs$4 = $wcs$3$ph$lcssa;
            }
           } else {
            if ($197) {
             $226 = (_malloc($195)|0);
             $227 = ($226|0)==(0|0);
             if ($227) {
              $alloc$0400 = $alloc$0;$matches$0104376 = $matches$0104;$s$6 = 0;$wcs$7 = 0;
              label = 152;
              break L6;
             } else {
              $i$2$ph = 0;$k$1$ph = $195;$s$2$ph = $226;
             }
             while(1) {
              $i$2 = $i$2$ph;
              while(1) {
               $228 = HEAP32[$7>>2]|0;
               $229 = HEAP32[$8>>2]|0;
               $230 = ($228>>>0)<($229>>>0);
               if ($230) {
                $231 = ((($228)) + 1|0);
                HEAP32[$7>>2] = $231;
                $232 = HEAP8[$228>>0]|0;
                $233 = $232&255;
                $236 = $233;
               } else {
                $234 = (___shgetc($f)|0);
                $236 = $234;
               }
               $235 = (($236) + 1)|0;
               $237 = (($scanset) + ($235)|0);
               $238 = HEAP8[$237>>0]|0;
               $239 = ($238<<24>>24)==(0);
               if ($239) {
                $i$4 = $i$2;$s$3 = $s$2$ph;$wcs$4 = 0;
                break L88;
               }
               $240 = $236&255;
               $241 = (($i$2) + 1)|0;
               $242 = (($s$2$ph) + ($i$2)|0);
               HEAP8[$242>>0] = $240;
               $243 = ($241|0)==($k$1$ph|0);
               if ($243) {
                break;
               } else {
                $i$2 = $241;
               }
              }
              $factor16 = $k$1$ph << 1;
              $244 = $factor16 | 1;
              $245 = (_realloc($s$2$ph,$244)|0);
              $246 = ($245|0)==(0|0);
              if ($246) {
               $alloc$0400 = $alloc$0;$matches$0104376 = $matches$0104;$s$6 = $s$2$ph;$wcs$7 = 0;
               label = 152;
               break L6;
              } else {
               $i$2$ph$phi = $k$1$ph;$k$1$ph = $244;$s$2$ph = $245;$i$2$ph = $i$2$ph$phi;
              }
             }
            }
            $247 = ($dest$0|0)==(0|0);
            if ($247) {
             $265 = $157;
             while(1) {
              $263 = HEAP32[$7>>2]|0;
              $264 = ($263>>>0)<($265>>>0);
              if ($264) {
               $266 = ((($263)) + 1|0);
               HEAP32[$7>>2] = $266;
               $267 = HEAP8[$263>>0]|0;
               $268 = $267&255;
               $271 = $268;
              } else {
               $269 = (___shgetc($f)|0);
               $271 = $269;
              }
              $270 = (($271) + 1)|0;
              $272 = (($scanset) + ($270)|0);
              $273 = HEAP8[$272>>0]|0;
              $274 = ($273<<24>>24)==(0);
              if ($274) {
               $i$4 = 0;$s$3 = 0;$wcs$4 = 0;
               break L88;
              }
              $$pre176 = HEAP32[$8>>2]|0;
              $265 = $$pre176;
             }
            } else {
             $250 = $157;$i$3 = 0;
             while(1) {
              $248 = HEAP32[$7>>2]|0;
              $249 = ($248>>>0)<($250>>>0);
              if ($249) {
               $251 = ((($248)) + 1|0);
               HEAP32[$7>>2] = $251;
               $252 = HEAP8[$248>>0]|0;
               $253 = $252&255;
               $256 = $253;
              } else {
               $254 = (___shgetc($f)|0);
               $256 = $254;
              }
              $255 = (($256) + 1)|0;
              $257 = (($scanset) + ($255)|0);
              $258 = HEAP8[$257>>0]|0;
              $259 = ($258<<24>>24)==(0);
              if ($259) {
               $i$4 = $i$3;$s$3 = $dest$0;$wcs$4 = 0;
               break L88;
              }
              $260 = $256&255;
              $261 = (($i$3) + 1)|0;
              $262 = (($dest$0) + ($i$3)|0);
              HEAP8[$262>>0] = $260;
              $$pre174 = HEAP32[$8>>2]|0;
              $250 = $$pre174;$i$3 = $261;
             }
            }
           }
          } while(0);
          $275 = HEAP32[$8>>2]|0;
          $276 = ($275|0)==(0|0);
          $$pre178 = HEAP32[$7>>2]|0;
          if ($276) {
           $281 = $$pre178;
          } else {
           $277 = ((($$pre178)) + -1|0);
           HEAP32[$7>>2] = $277;
           $281 = $277;
          }
          $278 = HEAP32[$9>>2]|0;
          $279 = HEAP32[$10>>2]|0;
          $280 = $281;
          $282 = $279;
          $283 = (($280) - ($282))|0;
          $284 = (($283) + ($278))|0;
          $285 = ($284|0)==(0);
          if ($285) {
           $alloc$2 = $alloc$0;$matches$2 = $matches$0104;$s$8 = $s$3;$wcs$9 = $wcs$4;
           break L6;
          }
          $$not = $160 ^ 1;
          $286 = ($284|0)==($width$1|0);
          $or$cond8 = $286 | $$not;
          if (!($or$cond8)) {
           $alloc$2 = $alloc$0;$matches$2 = $matches$0104;$s$8 = $s$3;$wcs$9 = $wcs$4;
           break L6;
          }
          do {
           if ($197) {
            if ($196) {
             HEAP32[$dest$0>>2] = $wcs$4;
             break;
            } else {
             HEAP32[$dest$0>>2] = $s$3;
             break;
            }
           }
          } while(0);
          if ($160) {
           $p$10 = $p$9;$s$4 = $s$3;$wcs$5 = $wcs$4;
          } else {
           $287 = ($wcs$4|0)==(0|0);
           if (!($287)) {
            $288 = (($wcs$4) + ($i$4<<2)|0);
            HEAP32[$288>>2] = 0;
           }
           $289 = ($s$3|0)==(0|0);
           if ($289) {
            $p$10 = $p$9;$s$4 = 0;$wcs$5 = $wcs$4;
            break L67;
           }
           $290 = (($s$3) + ($i$4)|0);
           HEAP8[$290>>0] = 0;
           $p$10 = $p$9;$s$4 = $s$3;$wcs$5 = $wcs$4;
          }
          break;
         }
         case 120: case 88: case 112:  {
          $base$0 = 16;
          label = 134;
          break;
         }
         case 111:  {
          $base$0 = 8;
          label = 134;
          break;
         }
         case 117: case 100:  {
          $base$0 = 10;
          label = 134;
          break;
         }
         case 105:  {
          $base$0 = 0;
          label = 134;
          break;
         }
         case 71: case 103: case 70: case 102: case 69: case 101: case 65: case 97:  {
          $310 = (+___floatscan($f,$$size$0,0));
          $311 = HEAP32[$9>>2]|0;
          $312 = HEAP32[$7>>2]|0;
          $313 = HEAP32[$10>>2]|0;
          $314 = $312;
          $315 = $313;
          $316 = (($315) - ($314))|0;
          $317 = ($311|0)==($316|0);
          if ($317) {
           $alloc$2 = $alloc$0;$matches$2 = $matches$0104;$s$8 = $s$1;$wcs$9 = $wcs$1;
           break L6;
          }
          $318 = ($dest$0|0)==(0|0);
          if ($318) {
           $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          } else {
           switch ($$size$0|0) {
           case 0:  {
            $319 = $310;
            HEAPF32[$dest$0>>2] = $319;
            $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
            break L67;
            break;
           }
           case 1:  {
            HEAPF64[$dest$0>>3] = $310;
            $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
            break L67;
            break;
           }
           case 2:  {
            HEAPF64[$dest$0>>3] = $310;
            $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
            break L67;
            break;
           }
           default: {
            $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
            break L67;
           }
           }
          }
          break;
         }
         default: {
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
         }
         }
        } while(0);
        L168: do {
         if ((label|0) == 134) {
          label = 0;
          $291 = (___intscan($f,$base$0,0,-1,-1)|0);
          $292 = tempRet0;
          $293 = HEAP32[$9>>2]|0;
          $294 = HEAP32[$7>>2]|0;
          $295 = HEAP32[$10>>2]|0;
          $296 = $294;
          $297 = $295;
          $298 = (($297) - ($296))|0;
          $299 = ($293|0)==($298|0);
          if ($299) {
           $alloc$2 = $alloc$0;$matches$2 = $matches$0104;$s$8 = $s$1;$wcs$9 = $wcs$1;
           break L6;
          }
          $300 = ($$|0)==(112);
          $301 = ($dest$0|0)!=(0|0);
          $or$cond3 = $301 & $300;
          if ($or$cond3) {
           $302 = $291;
           HEAP32[$dest$0>>2] = $302;
           $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
           break;
          }
          $303 = ($dest$0|0)==(0|0);
          if ($303) {
           $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          } else {
           switch ($$size$0|0) {
           case -2:  {
            $304 = $291&255;
            HEAP8[$dest$0>>0] = $304;
            $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
            break L168;
            break;
           }
           case -1:  {
            $305 = $291&65535;
            HEAP16[$dest$0>>1] = $305;
            $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
            break L168;
            break;
           }
           case 0:  {
            HEAP32[$dest$0>>2] = $291;
            $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
            break L168;
            break;
           }
           case 1:  {
            HEAP32[$dest$0>>2] = $291;
            $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
            break L168;
            break;
           }
           case 3:  {
            $306 = $dest$0;
            $307 = $306;
            HEAP32[$307>>2] = $291;
            $308 = (($306) + 4)|0;
            $309 = $308;
            HEAP32[$309>>2] = $292;
            $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
            break L168;
            break;
           }
           default: {
            $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
            break L168;
           }
           }
          }
         }
        } while(0);
        $320 = HEAP32[$9>>2]|0;
        $321 = HEAP32[$7>>2]|0;
        $322 = HEAP32[$10>>2]|0;
        $323 = $321;
        $324 = $322;
        $325 = (($320) + ($pos$1))|0;
        $326 = (($325) + ($323))|0;
        $327 = (($326) - ($324))|0;
        $not$ = ($dest$0|0)!=(0|0);
        $328 = $not$&1;
        $matches$0$ = (($328) + ($matches$0104))|0;
        $matches$1 = $matches$0$;$p$11 = $p$10;$pos$2 = $327;$s$5 = $s$4;$wcs$6 = $wcs$5;
        break L8;
       }
      } while(0);
      $50 = $47&1;
      $51 = (($p$0109) + ($50)|0);
      ___shlim($f,0);
      $52 = HEAP32[$7>>2]|0;
      $53 = HEAP32[$8>>2]|0;
      $54 = ($52>>>0)<($53>>>0);
      if ($54) {
       $55 = ((($52)) + 1|0);
       HEAP32[$7>>2] = $55;
       $56 = HEAP8[$52>>0]|0;
       $57 = $56&255;
       $62 = $57;
      } else {
       $58 = (___shgetc($f)|0);
       $62 = $58;
      }
      $59 = HEAP8[$51>>0]|0;
      $60 = $59&255;
      $61 = ($62|0)==($60|0);
      if (!($61)) {
       $$lcssa384 = $62;$matches$0104$lcssa = $matches$0104;$s$0107$lcssa = $s$0107;$wcs$0103$lcssa = $wcs$0103;
       label = 21;
       break L6;
      }
      $69 = (($pos$0108) + 1)|0;
      $matches$1 = $matches$0104;$p$11 = $51;$pos$2 = $69;$s$5 = $s$0107;$wcs$6 = $wcs$0103;
     } else {
      $p$1 = $p$0109;
      while(1) {
       $20 = ((($p$1)) + 1|0);
       $21 = HEAP8[$20>>0]|0;
       $22 = $21&255;
       $23 = (_isspace($22)|0);
       $24 = ($23|0)==(0);
       if ($24) {
        $p$1$lcssa = $p$1;
        break;
       } else {
        $p$1 = $20;
       }
      }
      ___shlim($f,0);
      while(1) {
       $25 = HEAP32[$7>>2]|0;
       $26 = HEAP32[$8>>2]|0;
       $27 = ($25>>>0)<($26>>>0);
       if ($27) {
        $28 = ((($25)) + 1|0);
        HEAP32[$7>>2] = $28;
        $29 = HEAP8[$25>>0]|0;
        $30 = $29&255;
        $32 = $30;
       } else {
        $31 = (___shgetc($f)|0);
        $32 = $31;
       }
       $33 = (_isspace($32)|0);
       $34 = ($33|0)==(0);
       if ($34) {
        break;
       }
      }
      $35 = HEAP32[$8>>2]|0;
      $36 = ($35|0)==(0|0);
      $$pre = HEAP32[$7>>2]|0;
      if ($36) {
       $41 = $$pre;
      } else {
       $37 = ((($$pre)) + -1|0);
       HEAP32[$7>>2] = $37;
       $41 = $37;
      }
      $38 = HEAP32[$9>>2]|0;
      $39 = HEAP32[$10>>2]|0;
      $40 = $41;
      $42 = $39;
      $43 = (($38) + ($pos$0108))|0;
      $44 = (($43) + ($40))|0;
      $45 = (($44) - ($42))|0;
      $matches$1 = $matches$0104;$p$11 = $p$1$lcssa;$pos$2 = $45;$s$5 = $s$0107;$wcs$6 = $wcs$0103;
     }
    } while(0);
    $329 = ((($p$11)) + 1|0);
    $330 = HEAP8[$329>>0]|0;
    $331 = ($330<<24>>24)==(0);
    if ($331) {
     $matches$3 = $matches$1;
     break L4;
    } else {
     $17 = $330;$matches$0104 = $matches$1;$p$0109 = $329;$pos$0108 = $pos$2;$s$0107 = $s$5;$wcs$0103 = $wcs$6;
    }
   }
   if ((label|0) == 21) {
    $63 = HEAP32[$8>>2]|0;
    $64 = ($63|0)==(0|0);
    if (!($64)) {
     $65 = HEAP32[$7>>2]|0;
     $66 = ((($65)) + -1|0);
     HEAP32[$7>>2] = $66;
    }
    $67 = ($$lcssa384|0)>(-1);
    $68 = ($matches$0104$lcssa|0)!=(0);
    $or$cond5 = $68 | $67;
    if ($or$cond5) {
     $matches$3 = $matches$0104$lcssa;
     break;
    } else {
     $alloc$1 = 0;$s$7 = $s$0107$lcssa;$wcs$8 = $wcs$0103$lcssa;
     label = 153;
    }
   }
   else if ((label|0) == 152) {
    $$old4 = ($matches$0104376|0)==(0);
    if ($$old4) {
     $alloc$1 = $alloc$0400;$s$7 = $s$6;$wcs$8 = $wcs$7;
     label = 153;
    } else {
     $alloc$2 = $alloc$0400;$matches$2 = $matches$0104376;$s$8 = $s$6;$wcs$9 = $wcs$7;
    }
   }
   if ((label|0) == 153) {
    $alloc$2 = $alloc$1;$matches$2 = -1;$s$8 = $s$7;$wcs$9 = $wcs$8;
   }
   $332 = ($alloc$2|0)==(0);
   if ($332) {
    $matches$3 = $matches$2;
   } else {
    _free($s$8);
    _free($wcs$9);
    $matches$3 = $matches$2;
   }
  }
 } while(0);
 $333 = ($334|0)==(0);
 if (!($333)) {
  ___unlockfile($f);
 }
 STACKTOP = sp;return ($matches$3|0);
}
function _vsnprintf($s,$n,$fmt,$ap) {
 $s = $s|0;
 $n = $n|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$$02 = 0, $$0 = 0, $$01 = 0, $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $b = 0, $f = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $b = sp + 112|0;
 $f = sp;
 dest=$f; src=3732; stop=dest+112|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $0 = (($n) + -1)|0;
 $1 = ($0>>>0)>(2147483646);
 if ($1) {
  $2 = ($n|0)==(0);
  if ($2) {
   $$01 = $b;$$02 = 1;
   label = 4;
  } else {
   $3 = (___errno_location()|0);
   HEAP32[$3>>2] = 75;
   $$0 = -1;
  }
 } else {
  $$01 = $s;$$02 = $n;
  label = 4;
 }
 if ((label|0) == 4) {
  $4 = $$01;
  $5 = (-2 - ($4))|0;
  $6 = ($$02>>>0)>($5>>>0);
  $$$02 = $6 ? $5 : $$02;
  $7 = ((($f)) + 48|0);
  HEAP32[$7>>2] = $$$02;
  $8 = ((($f)) + 20|0);
  HEAP32[$8>>2] = $$01;
  $9 = ((($f)) + 44|0);
  HEAP32[$9>>2] = $$01;
  $10 = (($$01) + ($$$02)|0);
  $11 = ((($f)) + 16|0);
  HEAP32[$11>>2] = $10;
  $12 = ((($f)) + 28|0);
  HEAP32[$12>>2] = $10;
  $13 = (_vfprintf($f,$fmt,$ap)|0);
  $14 = ($$$02|0)==(0);
  if ($14) {
   $$0 = $13;
  } else {
   $15 = HEAP32[$8>>2]|0;
   $16 = HEAP32[$11>>2]|0;
   $17 = ($15|0)==($16|0);
   $18 = $17 << 31 >> 31;
   $19 = (($15) + ($18)|0);
   HEAP8[$19>>0] = 0;
   $$0 = $13;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function _vsscanf($s,$fmt,$ap) {
 $s = $s|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $f = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $f = sp;
 dest=$f; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = ((($f)) + 32|0);
 HEAP32[$0>>2] = 417;
 $1 = ((($f)) + 44|0);
 HEAP32[$1>>2] = $s;
 $2 = ((($f)) + 76|0);
 HEAP32[$2>>2] = -1;
 $3 = ((($f)) + 84|0);
 HEAP32[$3>>2] = $s;
 $4 = (_vfscanf($f,$fmt,$ap)|0);
 STACKTOP = sp;return ($4|0);
}
function _strtold($s,$p) {
 $s = $s|0;
 $p = $p|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_strtox($s,$p,2));
 return (+$0);
}
function _strtoull($s,$p,$base) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strtox535($s,$p,$base,-1,-1)|0);
 $1 = tempRet0;
 tempRet0 = ($1);
 return ($0|0);
}
function _strtoll($s,$p,$base) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strtox535($s,$p,$base,0,-2147483648)|0);
 $1 = tempRet0;
 tempRet0 = ($1);
 return ($0|0);
}
function _memchr($src,$c,$n) {
 $src = $src|0;
 $c = $c|0;
 $n = $n|0;
 var $$0$lcssa = 0, $$0$lcssa44 = 0, $$019 = 0, $$1$lcssa = 0, $$110 = 0, $$110$lcssa = 0, $$24 = 0, $$3 = 0, $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond18 = 0, $s$0$lcssa = 0, $s$0$lcssa43 = 0, $s$020 = 0, $s$15 = 0, $s$2 = 0, $w$0$lcssa = 0, $w$011 = 0, $w$011$lcssa = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $c & 255;
 $1 = $src;
 $2 = $1 & 3;
 $3 = ($2|0)!=(0);
 $4 = ($n|0)!=(0);
 $or$cond18 = $4 & $3;
 L1: do {
  if ($or$cond18) {
   $5 = $c&255;
   $$019 = $n;$s$020 = $src;
   while(1) {
    $6 = HEAP8[$s$020>>0]|0;
    $7 = ($6<<24>>24)==($5<<24>>24);
    if ($7) {
     $$0$lcssa44 = $$019;$s$0$lcssa43 = $s$020;
     label = 6;
     break L1;
    }
    $8 = ((($s$020)) + 1|0);
    $9 = (($$019) + -1)|0;
    $10 = $8;
    $11 = $10 & 3;
    $12 = ($11|0)!=(0);
    $13 = ($9|0)!=(0);
    $or$cond = $13 & $12;
    if ($or$cond) {
     $$019 = $9;$s$020 = $8;
    } else {
     $$0$lcssa = $9;$$lcssa = $13;$s$0$lcssa = $8;
     label = 5;
     break;
    }
   }
  } else {
   $$0$lcssa = $n;$$lcssa = $4;$s$0$lcssa = $src;
   label = 5;
  }
 } while(0);
 if ((label|0) == 5) {
  if ($$lcssa) {
   $$0$lcssa44 = $$0$lcssa;$s$0$lcssa43 = $s$0$lcssa;
   label = 6;
  } else {
   $$3 = 0;$s$2 = $s$0$lcssa;
  }
 }
 L8: do {
  if ((label|0) == 6) {
   $14 = HEAP8[$s$0$lcssa43>>0]|0;
   $15 = $c&255;
   $16 = ($14<<24>>24)==($15<<24>>24);
   if ($16) {
    $$3 = $$0$lcssa44;$s$2 = $s$0$lcssa43;
   } else {
    $17 = Math_imul($0, 16843009)|0;
    $18 = ($$0$lcssa44>>>0)>(3);
    L11: do {
     if ($18) {
      $$110 = $$0$lcssa44;$w$011 = $s$0$lcssa43;
      while(1) {
       $19 = HEAP32[$w$011>>2]|0;
       $20 = $19 ^ $17;
       $21 = (($20) + -16843009)|0;
       $22 = $20 & -2139062144;
       $23 = $22 ^ -2139062144;
       $24 = $23 & $21;
       $25 = ($24|0)==(0);
       if (!($25)) {
        $$110$lcssa = $$110;$w$011$lcssa = $w$011;
        break;
       }
       $26 = ((($w$011)) + 4|0);
       $27 = (($$110) + -4)|0;
       $28 = ($27>>>0)>(3);
       if ($28) {
        $$110 = $27;$w$011 = $26;
       } else {
        $$1$lcssa = $27;$w$0$lcssa = $26;
        label = 11;
        break L11;
       }
      }
      $$24 = $$110$lcssa;$s$15 = $w$011$lcssa;
     } else {
      $$1$lcssa = $$0$lcssa44;$w$0$lcssa = $s$0$lcssa43;
      label = 11;
     }
    } while(0);
    if ((label|0) == 11) {
     $29 = ($$1$lcssa|0)==(0);
     if ($29) {
      $$3 = 0;$s$2 = $w$0$lcssa;
      break;
     } else {
      $$24 = $$1$lcssa;$s$15 = $w$0$lcssa;
     }
    }
    while(1) {
     $30 = HEAP8[$s$15>>0]|0;
     $31 = ($30<<24>>24)==($15<<24>>24);
     if ($31) {
      $$3 = $$24;$s$2 = $s$15;
      break L8;
     }
     $32 = ((($s$15)) + 1|0);
     $33 = (($$24) + -1)|0;
     $34 = ($33|0)==(0);
     if ($34) {
      $$3 = 0;$s$2 = $32;
      break;
     } else {
      $$24 = $33;$s$15 = $32;
     }
    }
   }
  }
 } while(0);
 $35 = ($$3|0)!=(0);
 $36 = $35 ? $s$2 : 0;
 return ($36|0);
}
function _memcmp($vl,$vr,$n) {
 $vl = $vl|0;
 $vr = $vr|0;
 $n = $n|0;
 var $$03 = 0, $$lcssa = 0, $$lcssa19 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $l$04 = 0, $r$05 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)==(0);
 L1: do {
  if ($0) {
   $11 = 0;
  } else {
   $$03 = $n;$l$04 = $vl;$r$05 = $vr;
   while(1) {
    $1 = HEAP8[$l$04>>0]|0;
    $2 = HEAP8[$r$05>>0]|0;
    $3 = ($1<<24>>24)==($2<<24>>24);
    if (!($3)) {
     $$lcssa = $1;$$lcssa19 = $2;
     break;
    }
    $4 = (($$03) + -1)|0;
    $5 = ((($l$04)) + 1|0);
    $6 = ((($r$05)) + 1|0);
    $7 = ($4|0)==(0);
    if ($7) {
     $11 = 0;
     break L1;
    } else {
     $$03 = $4;$l$04 = $5;$r$05 = $6;
    }
   }
   $8 = $$lcssa&255;
   $9 = $$lcssa19&255;
   $10 = (($8) - ($9))|0;
   $11 = $10;
  }
 } while(0);
 return ($11|0);
}
function _strchr($s,$c) {
 $s = $s|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___strchrnul($s,$c)|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $c&255;
 $3 = ($1<<24>>24)==($2<<24>>24);
 $4 = $3 ? $0 : 0;
 return ($4|0);
}
function ___strchrnul($s,$c) {
 $s = $s|0;
 $c = $c|0;
 var $$0 = 0, $$02$lcssa = 0, $$0211 = 0, $$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond5 = 0, $w$0$lcssa = 0, $w$08 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $c & 255;
 $1 = ($0|0)==(0);
 L1: do {
  if ($1) {
   $6 = (_strlen($s)|0);
   $7 = (($s) + ($6)|0);
   $$0 = $7;
  } else {
   $2 = $s;
   $3 = $2 & 3;
   $4 = ($3|0)==(0);
   if ($4) {
    $$02$lcssa = $s;
   } else {
    $5 = $c&255;
    $$0211 = $s;
    while(1) {
     $8 = HEAP8[$$0211>>0]|0;
     $9 = ($8<<24>>24)==(0);
     $10 = ($8<<24>>24)==($5<<24>>24);
     $or$cond = $9 | $10;
     if ($or$cond) {
      $$0 = $$0211;
      break L1;
     }
     $11 = ((($$0211)) + 1|0);
     $12 = $11;
     $13 = $12 & 3;
     $14 = ($13|0)==(0);
     if ($14) {
      $$02$lcssa = $11;
      break;
     } else {
      $$0211 = $11;
     }
    }
   }
   $15 = Math_imul($0, 16843009)|0;
   $16 = HEAP32[$$02$lcssa>>2]|0;
   $17 = (($16) + -16843009)|0;
   $18 = $16 & -2139062144;
   $19 = $18 ^ -2139062144;
   $20 = $19 & $17;
   $21 = ($20|0)==(0);
   L10: do {
    if ($21) {
     $23 = $16;$w$08 = $$02$lcssa;
     while(1) {
      $22 = $23 ^ $15;
      $24 = (($22) + -16843009)|0;
      $25 = $22 & -2139062144;
      $26 = $25 ^ -2139062144;
      $27 = $26 & $24;
      $28 = ($27|0)==(0);
      if (!($28)) {
       $w$0$lcssa = $w$08;
       break L10;
      }
      $29 = ((($w$08)) + 4|0);
      $30 = HEAP32[$29>>2]|0;
      $31 = (($30) + -16843009)|0;
      $32 = $30 & -2139062144;
      $33 = $32 ^ -2139062144;
      $34 = $33 & $31;
      $35 = ($34|0)==(0);
      if ($35) {
       $23 = $30;$w$08 = $29;
      } else {
       $w$0$lcssa = $29;
       break;
      }
     }
    } else {
     $w$0$lcssa = $$02$lcssa;
    }
   } while(0);
   $36 = $c&255;
   $$1 = $w$0$lcssa;
   while(1) {
    $37 = HEAP8[$$1>>0]|0;
    $38 = ($37<<24>>24)==(0);
    $39 = ($37<<24>>24)==($36<<24>>24);
    $or$cond5 = $38 | $39;
    $40 = ((($$1)) + 1|0);
    if ($or$cond5) {
     $$0 = $$1;
     break;
    } else {
     $$1 = $40;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function _strcmp($l,$r) {
 $l = $l|0;
 $r = $r|0;
 var $$014 = 0, $$05 = 0, $$lcssa = 0, $$lcssa2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$l>>0]|0;
 $1 = HEAP8[$r>>0]|0;
 $2 = ($0<<24>>24)!=($1<<24>>24);
 $3 = ($0<<24>>24)==(0);
 $or$cond3 = $3 | $2;
 if ($or$cond3) {
  $$lcssa = $0;$$lcssa2 = $1;
 } else {
  $$014 = $l;$$05 = $r;
  while(1) {
   $4 = ((($$014)) + 1|0);
   $5 = ((($$05)) + 1|0);
   $6 = HEAP8[$4>>0]|0;
   $7 = HEAP8[$5>>0]|0;
   $8 = ($6<<24>>24)!=($7<<24>>24);
   $9 = ($6<<24>>24)==(0);
   $or$cond = $9 | $8;
   if ($or$cond) {
    $$lcssa = $6;$$lcssa2 = $7;
    break;
   } else {
    $$014 = $4;$$05 = $5;
   }
  }
 }
 $10 = $$lcssa&255;
 $11 = $$lcssa2&255;
 $12 = (($10) - ($11))|0;
 return ($12|0);
}
function ___strdup($s) {
 $s = $s|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen($s)|0);
 $1 = (($0) + 1)|0;
 $2 = (_malloc($1)|0);
 $3 = ($2|0)==(0|0);
 if ($3) {
  $$0 = 0;
 } else {
  _memcpy(($2|0),($s|0),($1|0))|0;
  $$0 = $2;
 }
 return ($$0|0);
}
function _strlen($s) {
 $s = $s|0;
 var $$0 = 0, $$01$lcssa = 0, $$014 = 0, $$1$lcssa = 0, $$lcssa20 = 0, $$pn = 0, $$pn15 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $w$0 = 0, $w$0$lcssa = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $s;
 $1 = $0 & 3;
 $2 = ($1|0)==(0);
 L1: do {
  if ($2) {
   $$01$lcssa = $s;
   label = 4;
  } else {
   $$014 = $s;$21 = $0;
   while(1) {
    $3 = HEAP8[$$014>>0]|0;
    $4 = ($3<<24>>24)==(0);
    if ($4) {
     $$pn = $21;
     break L1;
    }
    $5 = ((($$014)) + 1|0);
    $6 = $5;
    $7 = $6 & 3;
    $8 = ($7|0)==(0);
    if ($8) {
     $$01$lcssa = $5;
     label = 4;
     break;
    } else {
     $$014 = $5;$21 = $6;
    }
   }
  }
 } while(0);
 if ((label|0) == 4) {
  $w$0 = $$01$lcssa;
  while(1) {
   $9 = HEAP32[$w$0>>2]|0;
   $10 = (($9) + -16843009)|0;
   $11 = $9 & -2139062144;
   $12 = $11 ^ -2139062144;
   $13 = $12 & $10;
   $14 = ($13|0)==(0);
   $15 = ((($w$0)) + 4|0);
   if ($14) {
    $w$0 = $15;
   } else {
    $$lcssa20 = $9;$w$0$lcssa = $w$0;
    break;
   }
  }
  $16 = $$lcssa20&255;
  $17 = ($16<<24>>24)==(0);
  if ($17) {
   $$1$lcssa = $w$0$lcssa;
  } else {
   $$pn15 = $w$0$lcssa;
   while(1) {
    $18 = ((($$pn15)) + 1|0);
    $$pre = HEAP8[$18>>0]|0;
    $19 = ($$pre<<24>>24)==(0);
    if ($19) {
     $$1$lcssa = $18;
     break;
    } else {
     $$pn15 = $18;
    }
   }
  }
  $20 = $$1$lcssa;
  $$pn = $20;
 }
 $$0 = (($$pn) - ($0))|0;
 return ($$0|0);
}
function _wcslen($s) {
 $s = $s|0;
 var $$0 = 0, $$0$lcssa = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $s;
 while(1) {
  $0 = HEAP32[$$0>>2]|0;
  $1 = ($0|0)==(0);
  $2 = ((($$0)) + 4|0);
  if ($1) {
   $$0$lcssa = $$0;
   break;
  } else {
   $$0 = $2;
  }
 }
 $3 = $$0$lcssa;
 $4 = $s;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 2;
 return ($6|0);
}
function _wmemcpy($d,$s,$n) {
 $d = $d|0;
 $s = $s|0;
 $n = $n|0;
 var $$014 = 0, $$023 = 0, $$05 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)==(0);
 if (!($0)) {
  $$014 = $n;$$023 = $s;$$05 = $d;
  while(1) {
   $1 = (($$014) + -1)|0;
   $2 = ((($$023)) + 4|0);
   $3 = HEAP32[$$023>>2]|0;
   $4 = ((($$05)) + 4|0);
   HEAP32[$$05>>2] = $3;
   $5 = ($1|0)==(0);
   if ($5) {
    break;
   } else {
    $$014 = $1;$$023 = $2;$$05 = $4;
   }
  }
 }
 return ($d|0);
}
function _wmemmove($d,$s,$n) {
 $d = $d|0;
 $s = $s|0;
 $n = $n|0;
 var $$025 = 0, $$07 = 0, $$16 = 0, $$in = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $d;
 $1 = $s;
 $2 = (($0) - ($1))|0;
 $3 = $2 >> 2;
 $4 = ($3>>>0)<($n>>>0);
 $5 = ($n|0)==(0);
 if ($4) {
  if (!($5)) {
   $$in = $n;
   while(1) {
    $6 = (($$in) + -1)|0;
    $7 = (($s) + ($6<<2)|0);
    $8 = HEAP32[$7>>2]|0;
    $9 = (($d) + ($6<<2)|0);
    HEAP32[$9>>2] = $8;
    $10 = ($6|0)==(0);
    if ($10) {
     break;
    } else {
     $$in = $6;
    }
   }
  }
 } else {
  if (!($5)) {
   $$025 = $s;$$07 = $d;$$16 = $n;
   while(1) {
    $11 = (($$16) + -1)|0;
    $12 = ((($$025)) + 4|0);
    $13 = HEAP32[$$025>>2]|0;
    $14 = ((($$07)) + 4|0);
    HEAP32[$$07>>2] = $13;
    $15 = ($11|0)==(0);
    if ($15) {
     break;
    } else {
     $$025 = $12;$$07 = $14;$$16 = $11;
    }
   }
  }
 }
 return ($d|0);
}
function _wmemset($d,$c,$n) {
 $d = $d|0;
 $c = $c|0;
 $n = $n|0;
 var $$012 = 0, $$03 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)==(0);
 if (!($0)) {
  $$012 = $n;$$03 = $d;
  while(1) {
   $1 = (($$012) + -1)|0;
   $2 = ((($$03)) + 4|0);
   HEAP32[$$03>>2] = $c;
   $3 = ($1|0)==(0);
   if ($3) {
    break;
   } else {
    $$012 = $1;$$03 = $2;
   }
  }
 }
 return ($d|0);
}
function _init_mparams() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[3652>>2]|0;
 $1 = ($0|0)==(0);
 do {
  if ($1) {
   $2 = (_sysconf(30)|0);
   $3 = (($2) + -1)|0;
   $4 = $3 & $2;
   $5 = ($4|0)==(0);
   if ($5) {
    HEAP32[(3660)>>2] = $2;
    HEAP32[(3656)>>2] = $2;
    HEAP32[(3664)>>2] = -1;
    HEAP32[(3668)>>2] = -1;
    HEAP32[(3672)>>2] = 0;
    HEAP32[(3624)>>2] = 0;
    $6 = (_time((0|0))|0);
    $7 = $6 & -16;
    $8 = $7 ^ 1431655768;
    HEAP32[3652>>2] = $8;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 return;
}
function _try_realloc_chunk($p,$nb) {
 $p = $p|0;
 $nb = $nb|0;
 var $$pre = 0, $$pre$phiZ2D = 0, $$sum = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum15 = 0, $$sum16 = 0, $$sum17 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum22 = 0, $$sum23 = 0, $$sum2728 = 0, $$sum3 = 0, $$sum4 = 0, $$sum5 = 0, $$sum78 = 0;
 var $$sum910 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $cond = 0, $newp$0 = 0, $notlhs = 0;
 var $notrhs = 0, $or$cond$not = 0, $or$cond30 = 0, $storemerge = 0, $storemerge21 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($p)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & -8;
 $3 = (($p) + ($2)|0);
 $4 = HEAP32[(3196)>>2]|0;
 $5 = $1 & 3;
 $notlhs = ($p>>>0)>=($4>>>0);
 $notrhs = ($5|0)!=(1);
 $or$cond$not = $notrhs & $notlhs;
 $6 = ($p>>>0)<($3>>>0);
 $or$cond30 = $or$cond$not & $6;
 if ($or$cond30) {
  $$sum2728 = $2 | 4;
  $7 = (($p) + ($$sum2728)|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = $8 & 1;
  $10 = ($9|0)==(0);
  if (!($10)) {
   $11 = ($5|0)==(0);
   do {
    if ($11) {
     $12 = ($nb>>>0)<(256);
     if ($12) {
      $newp$0 = 0;
     } else {
      $13 = (($nb) + 4)|0;
      $14 = ($2>>>0)<($13>>>0);
      if (!($14)) {
       $15 = (($2) - ($nb))|0;
       $16 = HEAP32[(3660)>>2]|0;
       $17 = $16 << 1;
       $18 = ($15>>>0)>($17>>>0);
       if (!($18)) {
        $newp$0 = $p;
        break;
       }
      }
      $newp$0 = 0;
     }
    } else {
     $19 = ($2>>>0)<($nb>>>0);
     if (!($19)) {
      $20 = (($2) - ($nb))|0;
      $21 = ($20>>>0)>(15);
      if (!($21)) {
       $newp$0 = $p;
       break;
      }
      $22 = (($p) + ($nb)|0);
      $23 = $1 & 1;
      $24 = $23 | $nb;
      $25 = $24 | 2;
      HEAP32[$0>>2] = $25;
      $$sum23 = (($nb) + 4)|0;
      $26 = (($p) + ($$sum23)|0);
      $27 = $20 | 3;
      HEAP32[$26>>2] = $27;
      $28 = HEAP32[$7>>2]|0;
      $29 = $28 | 1;
      HEAP32[$7>>2] = $29;
      _dispose_chunk($22,$20);
      $newp$0 = $p;
      break;
     }
     $30 = HEAP32[(3204)>>2]|0;
     $31 = ($3|0)==($30|0);
     if ($31) {
      $32 = HEAP32[(3192)>>2]|0;
      $33 = (($32) + ($2))|0;
      $34 = ($33>>>0)>($nb>>>0);
      if (!($34)) {
       $newp$0 = 0;
       break;
      }
      $35 = (($33) - ($nb))|0;
      $36 = (($p) + ($nb)|0);
      $37 = $1 & 1;
      $38 = $37 | $nb;
      $39 = $38 | 2;
      HEAP32[$0>>2] = $39;
      $$sum22 = (($nb) + 4)|0;
      $40 = (($p) + ($$sum22)|0);
      $41 = $35 | 1;
      HEAP32[$40>>2] = $41;
      HEAP32[(3204)>>2] = $36;
      HEAP32[(3192)>>2] = $35;
      $newp$0 = $p;
      break;
     }
     $42 = HEAP32[(3200)>>2]|0;
     $43 = ($3|0)==($42|0);
     if ($43) {
      $44 = HEAP32[(3188)>>2]|0;
      $45 = (($44) + ($2))|0;
      $46 = ($45>>>0)<($nb>>>0);
      if ($46) {
       $newp$0 = 0;
       break;
      }
      $47 = (($45) - ($nb))|0;
      $48 = ($47>>>0)>(15);
      if ($48) {
       $49 = (($p) + ($nb)|0);
       $50 = (($p) + ($45)|0);
       $51 = $1 & 1;
       $52 = $51 | $nb;
       $53 = $52 | 2;
       HEAP32[$0>>2] = $53;
       $$sum19 = (($nb) + 4)|0;
       $54 = (($p) + ($$sum19)|0);
       $55 = $47 | 1;
       HEAP32[$54>>2] = $55;
       HEAP32[$50>>2] = $47;
       $$sum20 = (($45) + 4)|0;
       $56 = (($p) + ($$sum20)|0);
       $57 = HEAP32[$56>>2]|0;
       $58 = $57 & -2;
       HEAP32[$56>>2] = $58;
       $storemerge = $49;$storemerge21 = $47;
      } else {
       $59 = $1 & 1;
       $60 = $59 | $45;
       $61 = $60 | 2;
       HEAP32[$0>>2] = $61;
       $$sum17 = (($45) + 4)|0;
       $62 = (($p) + ($$sum17)|0);
       $63 = HEAP32[$62>>2]|0;
       $64 = $63 | 1;
       HEAP32[$62>>2] = $64;
       $storemerge = 0;$storemerge21 = 0;
      }
      HEAP32[(3188)>>2] = $storemerge21;
      HEAP32[(3200)>>2] = $storemerge;
      $newp$0 = $p;
      break;
     }
     $65 = $8 & 2;
     $66 = ($65|0)==(0);
     if ($66) {
      $67 = $8 & -8;
      $68 = (($67) + ($2))|0;
      $69 = ($68>>>0)<($nb>>>0);
      if ($69) {
       $newp$0 = 0;
      } else {
       $70 = (($68) - ($nb))|0;
       $71 = $8 >>> 3;
       $72 = ($8>>>0)<(256);
       do {
        if ($72) {
         $$sum15 = (($2) + 8)|0;
         $73 = (($p) + ($$sum15)|0);
         $74 = HEAP32[$73>>2]|0;
         $$sum16 = (($2) + 12)|0;
         $75 = (($p) + ($$sum16)|0);
         $76 = HEAP32[$75>>2]|0;
         $77 = $71 << 1;
         $78 = (3220 + ($77<<2)|0);
         $79 = ($74|0)==($78|0);
         do {
          if (!($79)) {
           $80 = ($74>>>0)<($4>>>0);
           if (!($80)) {
            $81 = ((($74)) + 12|0);
            $82 = HEAP32[$81>>2]|0;
            $83 = ($82|0)==($3|0);
            if ($83) {
             break;
            }
           }
           _abort();
           // unreachable;
          }
         } while(0);
         $84 = ($76|0)==($74|0);
         if ($84) {
          $85 = 1 << $71;
          $86 = $85 ^ -1;
          $87 = HEAP32[3180>>2]|0;
          $88 = $87 & $86;
          HEAP32[3180>>2] = $88;
          break;
         }
         $89 = ($76|0)==($78|0);
         do {
          if ($89) {
           $$pre = ((($76)) + 8|0);
           $$pre$phiZ2D = $$pre;
          } else {
           $90 = ($76>>>0)<($4>>>0);
           if (!($90)) {
            $91 = ((($76)) + 8|0);
            $92 = HEAP32[$91>>2]|0;
            $93 = ($92|0)==($3|0);
            if ($93) {
             $$pre$phiZ2D = $91;
             break;
            }
           }
           _abort();
           // unreachable;
          }
         } while(0);
         $94 = ((($74)) + 12|0);
         HEAP32[$94>>2] = $76;
         HEAP32[$$pre$phiZ2D>>2] = $74;
        } else {
         $$sum = (($2) + 24)|0;
         $95 = (($p) + ($$sum)|0);
         $96 = HEAP32[$95>>2]|0;
         $$sum2 = (($2) + 12)|0;
         $97 = (($p) + ($$sum2)|0);
         $98 = HEAP32[$97>>2]|0;
         $99 = ($98|0)==($3|0);
         do {
          if ($99) {
           $$sum4 = (($2) + 20)|0;
           $109 = (($p) + ($$sum4)|0);
           $110 = HEAP32[$109>>2]|0;
           $111 = ($110|0)==(0|0);
           if ($111) {
            $$sum3 = (($2) + 16)|0;
            $112 = (($p) + ($$sum3)|0);
            $113 = HEAP32[$112>>2]|0;
            $114 = ($113|0)==(0|0);
            if ($114) {
             $R$1 = 0;
             break;
            } else {
             $R$0 = $113;$RP$0 = $112;
            }
           } else {
            $R$0 = $110;$RP$0 = $109;
           }
           while(1) {
            $115 = ((($R$0)) + 20|0);
            $116 = HEAP32[$115>>2]|0;
            $117 = ($116|0)==(0|0);
            if (!($117)) {
             $R$0 = $116;$RP$0 = $115;
             continue;
            }
            $118 = ((($R$0)) + 16|0);
            $119 = HEAP32[$118>>2]|0;
            $120 = ($119|0)==(0|0);
            if ($120) {
             $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
             break;
            } else {
             $R$0 = $119;$RP$0 = $118;
            }
           }
           $121 = ($RP$0$lcssa>>>0)<($4>>>0);
           if ($121) {
            _abort();
            // unreachable;
           } else {
            HEAP32[$RP$0$lcssa>>2] = 0;
            $R$1 = $R$0$lcssa;
            break;
           }
          } else {
           $$sum14 = (($2) + 8)|0;
           $100 = (($p) + ($$sum14)|0);
           $101 = HEAP32[$100>>2]|0;
           $102 = ($101>>>0)<($4>>>0);
           if (!($102)) {
            $103 = ((($101)) + 12|0);
            $104 = HEAP32[$103>>2]|0;
            $105 = ($104|0)==($3|0);
            if ($105) {
             $106 = ((($98)) + 8|0);
             $107 = HEAP32[$106>>2]|0;
             $108 = ($107|0)==($3|0);
             if ($108) {
              HEAP32[$103>>2] = $98;
              HEAP32[$106>>2] = $101;
              $R$1 = $98;
              break;
             }
            }
           }
           _abort();
           // unreachable;
          }
         } while(0);
         $122 = ($96|0)==(0|0);
         if (!($122)) {
          $$sum11 = (($2) + 28)|0;
          $123 = (($p) + ($$sum11)|0);
          $124 = HEAP32[$123>>2]|0;
          $125 = (3484 + ($124<<2)|0);
          $126 = HEAP32[$125>>2]|0;
          $127 = ($3|0)==($126|0);
          if ($127) {
           HEAP32[$125>>2] = $R$1;
           $cond = ($R$1|0)==(0|0);
           if ($cond) {
            $128 = 1 << $124;
            $129 = $128 ^ -1;
            $130 = HEAP32[(3184)>>2]|0;
            $131 = $130 & $129;
            HEAP32[(3184)>>2] = $131;
            break;
           }
          } else {
           $132 = HEAP32[(3196)>>2]|0;
           $133 = ($96>>>0)<($132>>>0);
           if ($133) {
            _abort();
            // unreachable;
           }
           $134 = ((($96)) + 16|0);
           $135 = HEAP32[$134>>2]|0;
           $136 = ($135|0)==($3|0);
           if ($136) {
            HEAP32[$134>>2] = $R$1;
           } else {
            $137 = ((($96)) + 20|0);
            HEAP32[$137>>2] = $R$1;
           }
           $138 = ($R$1|0)==(0|0);
           if ($138) {
            break;
           }
          }
          $139 = HEAP32[(3196)>>2]|0;
          $140 = ($R$1>>>0)<($139>>>0);
          if ($140) {
           _abort();
           // unreachable;
          }
          $141 = ((($R$1)) + 24|0);
          HEAP32[$141>>2] = $96;
          $$sum12 = (($2) + 16)|0;
          $142 = (($p) + ($$sum12)|0);
          $143 = HEAP32[$142>>2]|0;
          $144 = ($143|0)==(0|0);
          do {
           if (!($144)) {
            $145 = ($143>>>0)<($139>>>0);
            if ($145) {
             _abort();
             // unreachable;
            } else {
             $146 = ((($R$1)) + 16|0);
             HEAP32[$146>>2] = $143;
             $147 = ((($143)) + 24|0);
             HEAP32[$147>>2] = $R$1;
             break;
            }
           }
          } while(0);
          $$sum13 = (($2) + 20)|0;
          $148 = (($p) + ($$sum13)|0);
          $149 = HEAP32[$148>>2]|0;
          $150 = ($149|0)==(0|0);
          if (!($150)) {
           $151 = HEAP32[(3196)>>2]|0;
           $152 = ($149>>>0)<($151>>>0);
           if ($152) {
            _abort();
            // unreachable;
           } else {
            $153 = ((($R$1)) + 20|0);
            HEAP32[$153>>2] = $149;
            $154 = ((($149)) + 24|0);
            HEAP32[$154>>2] = $R$1;
            break;
           }
          }
         }
        }
       } while(0);
       $155 = ($70>>>0)<(16);
       if ($155) {
        $156 = $1 & 1;
        $157 = $68 | $156;
        $158 = $157 | 2;
        HEAP32[$0>>2] = $158;
        $$sum910 = $68 | 4;
        $159 = (($p) + ($$sum910)|0);
        $160 = HEAP32[$159>>2]|0;
        $161 = $160 | 1;
        HEAP32[$159>>2] = $161;
        $newp$0 = $p;
        break;
       } else {
        $162 = (($p) + ($nb)|0);
        $163 = $1 & 1;
        $164 = $163 | $nb;
        $165 = $164 | 2;
        HEAP32[$0>>2] = $165;
        $$sum5 = (($nb) + 4)|0;
        $166 = (($p) + ($$sum5)|0);
        $167 = $70 | 3;
        HEAP32[$166>>2] = $167;
        $$sum78 = $68 | 4;
        $168 = (($p) + ($$sum78)|0);
        $169 = HEAP32[$168>>2]|0;
        $170 = $169 | 1;
        HEAP32[$168>>2] = $170;
        _dispose_chunk($162,$70);
        $newp$0 = $p;
        break;
       }
      }
     } else {
      $newp$0 = 0;
     }
    }
   } while(0);
   return ($newp$0|0);
  }
 }
 _abort();
 // unreachable;
 return (0)|0;
}
function _dispose_chunk($p,$psize) {
 $p = $p|0;
 $psize = $psize|0;
 var $$0 = 0, $$02 = 0, $$1 = 0, $$lcssa = 0, $$pre = 0, $$pre$phi50Z2D = 0, $$pre$phi52Z2D = 0, $$pre$phiZ2D = 0, $$pre48 = 0, $$pre49 = 0, $$pre51 = 0, $$sum = 0, $$sum1 = 0, $$sum10 = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum16 = 0, $$sum17 = 0;
 var $$sum18 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum21 = 0, $$sum22 = 0, $$sum23 = 0, $$sum24 = 0, $$sum25 = 0, $$sum3 = 0, $$sum4 = 0, $$sum5 = 0, $$sum7 = 0, $$sum8 = 0, $$sum9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0;
 var $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;
 var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0;
 var $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $F16$0 = 0, $I19$0 = 0, $K20$043 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0, $R7$0 = 0, $R7$0$lcssa = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $RP9$0 = 0, $RP9$0$lcssa = 0, $T$0$lcssa = 0, $T$042 = 0, $T$042$lcssa = 0, $cond = 0;
 var $cond39 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($p) + ($psize)|0);
 $1 = ((($p)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2 & 1;
 $4 = ($3|0)==(0);
 do {
  if ($4) {
   $5 = HEAP32[$p>>2]|0;
   $6 = $2 & 3;
   $7 = ($6|0)==(0);
   if (!($7)) {
    $8 = (0 - ($5))|0;
    $9 = (($p) + ($8)|0);
    $10 = (($5) + ($psize))|0;
    $11 = HEAP32[(3196)>>2]|0;
    $12 = ($9>>>0)<($11>>>0);
    if ($12) {
     _abort();
     // unreachable;
    }
    $13 = HEAP32[(3200)>>2]|0;
    $14 = ($9|0)==($13|0);
    if ($14) {
     $$sum = (($psize) + 4)|0;
     $99 = (($p) + ($$sum)|0);
     $100 = HEAP32[$99>>2]|0;
     $101 = $100 & 3;
     $102 = ($101|0)==(3);
     if (!($102)) {
      $$0 = $9;$$02 = $10;
      label = 54;
      break;
     }
     HEAP32[(3188)>>2] = $10;
     $103 = $100 & -2;
     HEAP32[$99>>2] = $103;
     $104 = $10 | 1;
     $$sum14 = (4 - ($5))|0;
     $105 = (($p) + ($$sum14)|0);
     HEAP32[$105>>2] = $104;
     HEAP32[$0>>2] = $10;
     break;
    }
    $15 = $5 >>> 3;
    $16 = ($5>>>0)<(256);
    if ($16) {
     $$sum24 = (8 - ($5))|0;
     $17 = (($p) + ($$sum24)|0);
     $18 = HEAP32[$17>>2]|0;
     $$sum25 = (12 - ($5))|0;
     $19 = (($p) + ($$sum25)|0);
     $20 = HEAP32[$19>>2]|0;
     $21 = $15 << 1;
     $22 = (3220 + ($21<<2)|0);
     $23 = ($18|0)==($22|0);
     do {
      if (!($23)) {
       $24 = ($18>>>0)<($11>>>0);
       if (!($24)) {
        $25 = ((($18)) + 12|0);
        $26 = HEAP32[$25>>2]|0;
        $27 = ($26|0)==($9|0);
        if ($27) {
         break;
        }
       }
       _abort();
       // unreachable;
      }
     } while(0);
     $28 = ($20|0)==($18|0);
     if ($28) {
      $29 = 1 << $15;
      $30 = $29 ^ -1;
      $31 = HEAP32[3180>>2]|0;
      $32 = $31 & $30;
      HEAP32[3180>>2] = $32;
      $$0 = $9;$$02 = $10;
      label = 54;
      break;
     }
     $33 = ($20|0)==($22|0);
     do {
      if ($33) {
       $$pre51 = ((($20)) + 8|0);
       $$pre$phi52Z2D = $$pre51;
      } else {
       $34 = ($20>>>0)<($11>>>0);
       if (!($34)) {
        $35 = ((($20)) + 8|0);
        $36 = HEAP32[$35>>2]|0;
        $37 = ($36|0)==($9|0);
        if ($37) {
         $$pre$phi52Z2D = $35;
         break;
        }
       }
       _abort();
       // unreachable;
      }
     } while(0);
     $38 = ((($18)) + 12|0);
     HEAP32[$38>>2] = $20;
     HEAP32[$$pre$phi52Z2D>>2] = $18;
     $$0 = $9;$$02 = $10;
     label = 54;
     break;
    }
    $$sum16 = (24 - ($5))|0;
    $39 = (($p) + ($$sum16)|0);
    $40 = HEAP32[$39>>2]|0;
    $$sum17 = (12 - ($5))|0;
    $41 = (($p) + ($$sum17)|0);
    $42 = HEAP32[$41>>2]|0;
    $43 = ($42|0)==($9|0);
    do {
     if ($43) {
      $$sum18 = (16 - ($5))|0;
      $$sum19 = (($$sum18) + 4)|0;
      $53 = (($p) + ($$sum19)|0);
      $54 = HEAP32[$53>>2]|0;
      $55 = ($54|0)==(0|0);
      if ($55) {
       $56 = (($p) + ($$sum18)|0);
       $57 = HEAP32[$56>>2]|0;
       $58 = ($57|0)==(0|0);
       if ($58) {
        $R$1 = 0;
        break;
       } else {
        $R$0 = $57;$RP$0 = $56;
       }
      } else {
       $R$0 = $54;$RP$0 = $53;
      }
      while(1) {
       $59 = ((($R$0)) + 20|0);
       $60 = HEAP32[$59>>2]|0;
       $61 = ($60|0)==(0|0);
       if (!($61)) {
        $R$0 = $60;$RP$0 = $59;
        continue;
       }
       $62 = ((($R$0)) + 16|0);
       $63 = HEAP32[$62>>2]|0;
       $64 = ($63|0)==(0|0);
       if ($64) {
        $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
        break;
       } else {
        $R$0 = $63;$RP$0 = $62;
       }
      }
      $65 = ($RP$0$lcssa>>>0)<($11>>>0);
      if ($65) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP$0$lcssa>>2] = 0;
       $R$1 = $R$0$lcssa;
       break;
      }
     } else {
      $$sum23 = (8 - ($5))|0;
      $44 = (($p) + ($$sum23)|0);
      $45 = HEAP32[$44>>2]|0;
      $46 = ($45>>>0)<($11>>>0);
      if (!($46)) {
       $47 = ((($45)) + 12|0);
       $48 = HEAP32[$47>>2]|0;
       $49 = ($48|0)==($9|0);
       if ($49) {
        $50 = ((($42)) + 8|0);
        $51 = HEAP32[$50>>2]|0;
        $52 = ($51|0)==($9|0);
        if ($52) {
         HEAP32[$47>>2] = $42;
         HEAP32[$50>>2] = $45;
         $R$1 = $42;
         break;
        }
       }
      }
      _abort();
      // unreachable;
     }
    } while(0);
    $66 = ($40|0)==(0|0);
    if ($66) {
     $$0 = $9;$$02 = $10;
     label = 54;
    } else {
     $$sum20 = (28 - ($5))|0;
     $67 = (($p) + ($$sum20)|0);
     $68 = HEAP32[$67>>2]|0;
     $69 = (3484 + ($68<<2)|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = ($9|0)==($70|0);
     if ($71) {
      HEAP32[$69>>2] = $R$1;
      $cond = ($R$1|0)==(0|0);
      if ($cond) {
       $72 = 1 << $68;
       $73 = $72 ^ -1;
       $74 = HEAP32[(3184)>>2]|0;
       $75 = $74 & $73;
       HEAP32[(3184)>>2] = $75;
       $$0 = $9;$$02 = $10;
       label = 54;
       break;
      }
     } else {
      $76 = HEAP32[(3196)>>2]|0;
      $77 = ($40>>>0)<($76>>>0);
      if ($77) {
       _abort();
       // unreachable;
      }
      $78 = ((($40)) + 16|0);
      $79 = HEAP32[$78>>2]|0;
      $80 = ($79|0)==($9|0);
      if ($80) {
       HEAP32[$78>>2] = $R$1;
      } else {
       $81 = ((($40)) + 20|0);
       HEAP32[$81>>2] = $R$1;
      }
      $82 = ($R$1|0)==(0|0);
      if ($82) {
       $$0 = $9;$$02 = $10;
       label = 54;
       break;
      }
     }
     $83 = HEAP32[(3196)>>2]|0;
     $84 = ($R$1>>>0)<($83>>>0);
     if ($84) {
      _abort();
      // unreachable;
     }
     $85 = ((($R$1)) + 24|0);
     HEAP32[$85>>2] = $40;
     $$sum21 = (16 - ($5))|0;
     $86 = (($p) + ($$sum21)|0);
     $87 = HEAP32[$86>>2]|0;
     $88 = ($87|0)==(0|0);
     do {
      if (!($88)) {
       $89 = ($87>>>0)<($83>>>0);
       if ($89) {
        _abort();
        // unreachable;
       } else {
        $90 = ((($R$1)) + 16|0);
        HEAP32[$90>>2] = $87;
        $91 = ((($87)) + 24|0);
        HEAP32[$91>>2] = $R$1;
        break;
       }
      }
     } while(0);
     $$sum22 = (($$sum21) + 4)|0;
     $92 = (($p) + ($$sum22)|0);
     $93 = HEAP32[$92>>2]|0;
     $94 = ($93|0)==(0|0);
     if ($94) {
      $$0 = $9;$$02 = $10;
      label = 54;
     } else {
      $95 = HEAP32[(3196)>>2]|0;
      $96 = ($93>>>0)<($95>>>0);
      if ($96) {
       _abort();
       // unreachable;
      } else {
       $97 = ((($R$1)) + 20|0);
       HEAP32[$97>>2] = $93;
       $98 = ((($93)) + 24|0);
       HEAP32[$98>>2] = $R$1;
       $$0 = $9;$$02 = $10;
       label = 54;
       break;
      }
     }
    }
   }
  } else {
   $$0 = $p;$$02 = $psize;
   label = 54;
  }
 } while(0);
 L74: do {
  if ((label|0) == 54) {
   $106 = HEAP32[(3196)>>2]|0;
   $107 = ($0>>>0)<($106>>>0);
   if ($107) {
    _abort();
    // unreachable;
   }
   $$sum1 = (($psize) + 4)|0;
   $108 = (($p) + ($$sum1)|0);
   $109 = HEAP32[$108>>2]|0;
   $110 = $109 & 2;
   $111 = ($110|0)==(0);
   if ($111) {
    $112 = HEAP32[(3204)>>2]|0;
    $113 = ($0|0)==($112|0);
    if ($113) {
     $114 = HEAP32[(3192)>>2]|0;
     $115 = (($114) + ($$02))|0;
     HEAP32[(3192)>>2] = $115;
     HEAP32[(3204)>>2] = $$0;
     $116 = $115 | 1;
     $117 = ((($$0)) + 4|0);
     HEAP32[$117>>2] = $116;
     $118 = HEAP32[(3200)>>2]|0;
     $119 = ($$0|0)==($118|0);
     if (!($119)) {
      break;
     }
     HEAP32[(3200)>>2] = 0;
     HEAP32[(3188)>>2] = 0;
     break;
    }
    $120 = HEAP32[(3200)>>2]|0;
    $121 = ($0|0)==($120|0);
    if ($121) {
     $122 = HEAP32[(3188)>>2]|0;
     $123 = (($122) + ($$02))|0;
     HEAP32[(3188)>>2] = $123;
     HEAP32[(3200)>>2] = $$0;
     $124 = $123 | 1;
     $125 = ((($$0)) + 4|0);
     HEAP32[$125>>2] = $124;
     $126 = (($$0) + ($123)|0);
     HEAP32[$126>>2] = $123;
     break;
    }
    $127 = $109 & -8;
    $128 = (($127) + ($$02))|0;
    $129 = $109 >>> 3;
    $130 = ($109>>>0)<(256);
    do {
     if ($130) {
      $$sum12 = (($psize) + 8)|0;
      $131 = (($p) + ($$sum12)|0);
      $132 = HEAP32[$131>>2]|0;
      $$sum13 = (($psize) + 12)|0;
      $133 = (($p) + ($$sum13)|0);
      $134 = HEAP32[$133>>2]|0;
      $135 = $129 << 1;
      $136 = (3220 + ($135<<2)|0);
      $137 = ($132|0)==($136|0);
      do {
       if (!($137)) {
        $138 = ($132>>>0)<($106>>>0);
        if (!($138)) {
         $139 = ((($132)) + 12|0);
         $140 = HEAP32[$139>>2]|0;
         $141 = ($140|0)==($0|0);
         if ($141) {
          break;
         }
        }
        _abort();
        // unreachable;
       }
      } while(0);
      $142 = ($134|0)==($132|0);
      if ($142) {
       $143 = 1 << $129;
       $144 = $143 ^ -1;
       $145 = HEAP32[3180>>2]|0;
       $146 = $145 & $144;
       HEAP32[3180>>2] = $146;
       break;
      }
      $147 = ($134|0)==($136|0);
      do {
       if ($147) {
        $$pre49 = ((($134)) + 8|0);
        $$pre$phi50Z2D = $$pre49;
       } else {
        $148 = ($134>>>0)<($106>>>0);
        if (!($148)) {
         $149 = ((($134)) + 8|0);
         $150 = HEAP32[$149>>2]|0;
         $151 = ($150|0)==($0|0);
         if ($151) {
          $$pre$phi50Z2D = $149;
          break;
         }
        }
        _abort();
        // unreachable;
       }
      } while(0);
      $152 = ((($132)) + 12|0);
      HEAP32[$152>>2] = $134;
      HEAP32[$$pre$phi50Z2D>>2] = $132;
     } else {
      $$sum2 = (($psize) + 24)|0;
      $153 = (($p) + ($$sum2)|0);
      $154 = HEAP32[$153>>2]|0;
      $$sum3 = (($psize) + 12)|0;
      $155 = (($p) + ($$sum3)|0);
      $156 = HEAP32[$155>>2]|0;
      $157 = ($156|0)==($0|0);
      do {
       if ($157) {
        $$sum5 = (($psize) + 20)|0;
        $167 = (($p) + ($$sum5)|0);
        $168 = HEAP32[$167>>2]|0;
        $169 = ($168|0)==(0|0);
        if ($169) {
         $$sum4 = (($psize) + 16)|0;
         $170 = (($p) + ($$sum4)|0);
         $171 = HEAP32[$170>>2]|0;
         $172 = ($171|0)==(0|0);
         if ($172) {
          $R7$1 = 0;
          break;
         } else {
          $R7$0 = $171;$RP9$0 = $170;
         }
        } else {
         $R7$0 = $168;$RP9$0 = $167;
        }
        while(1) {
         $173 = ((($R7$0)) + 20|0);
         $174 = HEAP32[$173>>2]|0;
         $175 = ($174|0)==(0|0);
         if (!($175)) {
          $R7$0 = $174;$RP9$0 = $173;
          continue;
         }
         $176 = ((($R7$0)) + 16|0);
         $177 = HEAP32[$176>>2]|0;
         $178 = ($177|0)==(0|0);
         if ($178) {
          $R7$0$lcssa = $R7$0;$RP9$0$lcssa = $RP9$0;
          break;
         } else {
          $R7$0 = $177;$RP9$0 = $176;
         }
        }
        $179 = ($RP9$0$lcssa>>>0)<($106>>>0);
        if ($179) {
         _abort();
         // unreachable;
        } else {
         HEAP32[$RP9$0$lcssa>>2] = 0;
         $R7$1 = $R7$0$lcssa;
         break;
        }
       } else {
        $$sum11 = (($psize) + 8)|0;
        $158 = (($p) + ($$sum11)|0);
        $159 = HEAP32[$158>>2]|0;
        $160 = ($159>>>0)<($106>>>0);
        if (!($160)) {
         $161 = ((($159)) + 12|0);
         $162 = HEAP32[$161>>2]|0;
         $163 = ($162|0)==($0|0);
         if ($163) {
          $164 = ((($156)) + 8|0);
          $165 = HEAP32[$164>>2]|0;
          $166 = ($165|0)==($0|0);
          if ($166) {
           HEAP32[$161>>2] = $156;
           HEAP32[$164>>2] = $159;
           $R7$1 = $156;
           break;
          }
         }
        }
        _abort();
        // unreachable;
       }
      } while(0);
      $180 = ($154|0)==(0|0);
      if (!($180)) {
       $$sum8 = (($psize) + 28)|0;
       $181 = (($p) + ($$sum8)|0);
       $182 = HEAP32[$181>>2]|0;
       $183 = (3484 + ($182<<2)|0);
       $184 = HEAP32[$183>>2]|0;
       $185 = ($0|0)==($184|0);
       if ($185) {
        HEAP32[$183>>2] = $R7$1;
        $cond39 = ($R7$1|0)==(0|0);
        if ($cond39) {
         $186 = 1 << $182;
         $187 = $186 ^ -1;
         $188 = HEAP32[(3184)>>2]|0;
         $189 = $188 & $187;
         HEAP32[(3184)>>2] = $189;
         break;
        }
       } else {
        $190 = HEAP32[(3196)>>2]|0;
        $191 = ($154>>>0)<($190>>>0);
        if ($191) {
         _abort();
         // unreachable;
        }
        $192 = ((($154)) + 16|0);
        $193 = HEAP32[$192>>2]|0;
        $194 = ($193|0)==($0|0);
        if ($194) {
         HEAP32[$192>>2] = $R7$1;
        } else {
         $195 = ((($154)) + 20|0);
         HEAP32[$195>>2] = $R7$1;
        }
        $196 = ($R7$1|0)==(0|0);
        if ($196) {
         break;
        }
       }
       $197 = HEAP32[(3196)>>2]|0;
       $198 = ($R7$1>>>0)<($197>>>0);
       if ($198) {
        _abort();
        // unreachable;
       }
       $199 = ((($R7$1)) + 24|0);
       HEAP32[$199>>2] = $154;
       $$sum9 = (($psize) + 16)|0;
       $200 = (($p) + ($$sum9)|0);
       $201 = HEAP32[$200>>2]|0;
       $202 = ($201|0)==(0|0);
       do {
        if (!($202)) {
         $203 = ($201>>>0)<($197>>>0);
         if ($203) {
          _abort();
          // unreachable;
         } else {
          $204 = ((($R7$1)) + 16|0);
          HEAP32[$204>>2] = $201;
          $205 = ((($201)) + 24|0);
          HEAP32[$205>>2] = $R7$1;
          break;
         }
        }
       } while(0);
       $$sum10 = (($psize) + 20)|0;
       $206 = (($p) + ($$sum10)|0);
       $207 = HEAP32[$206>>2]|0;
       $208 = ($207|0)==(0|0);
       if (!($208)) {
        $209 = HEAP32[(3196)>>2]|0;
        $210 = ($207>>>0)<($209>>>0);
        if ($210) {
         _abort();
         // unreachable;
        } else {
         $211 = ((($R7$1)) + 20|0);
         HEAP32[$211>>2] = $207;
         $212 = ((($207)) + 24|0);
         HEAP32[$212>>2] = $R7$1;
         break;
        }
       }
      }
     }
    } while(0);
    $213 = $128 | 1;
    $214 = ((($$0)) + 4|0);
    HEAP32[$214>>2] = $213;
    $215 = (($$0) + ($128)|0);
    HEAP32[$215>>2] = $128;
    $216 = HEAP32[(3200)>>2]|0;
    $217 = ($$0|0)==($216|0);
    if ($217) {
     HEAP32[(3188)>>2] = $128;
     break;
    } else {
     $$1 = $128;
    }
   } else {
    $218 = $109 & -2;
    HEAP32[$108>>2] = $218;
    $219 = $$02 | 1;
    $220 = ((($$0)) + 4|0);
    HEAP32[$220>>2] = $219;
    $221 = (($$0) + ($$02)|0);
    HEAP32[$221>>2] = $$02;
    $$1 = $$02;
   }
   $222 = $$1 >>> 3;
   $223 = ($$1>>>0)<(256);
   if ($223) {
    $224 = $222 << 1;
    $225 = (3220 + ($224<<2)|0);
    $226 = HEAP32[3180>>2]|0;
    $227 = 1 << $222;
    $228 = $226 & $227;
    $229 = ($228|0)==(0);
    if ($229) {
     $230 = $226 | $227;
     HEAP32[3180>>2] = $230;
     $$pre = (($224) + 2)|0;
     $$pre48 = (3220 + ($$pre<<2)|0);
     $$pre$phiZ2D = $$pre48;$F16$0 = $225;
    } else {
     $$sum7 = (($224) + 2)|0;
     $231 = (3220 + ($$sum7<<2)|0);
     $232 = HEAP32[$231>>2]|0;
     $233 = HEAP32[(3196)>>2]|0;
     $234 = ($232>>>0)<($233>>>0);
     if ($234) {
      _abort();
      // unreachable;
     } else {
      $$pre$phiZ2D = $231;$F16$0 = $232;
     }
    }
    HEAP32[$$pre$phiZ2D>>2] = $$0;
    $235 = ((($F16$0)) + 12|0);
    HEAP32[$235>>2] = $$0;
    $236 = ((($$0)) + 8|0);
    HEAP32[$236>>2] = $F16$0;
    $237 = ((($$0)) + 12|0);
    HEAP32[$237>>2] = $225;
    break;
   }
   $238 = $$1 >>> 8;
   $239 = ($238|0)==(0);
   if ($239) {
    $I19$0 = 0;
   } else {
    $240 = ($$1>>>0)>(16777215);
    if ($240) {
     $I19$0 = 31;
    } else {
     $241 = (($238) + 1048320)|0;
     $242 = $241 >>> 16;
     $243 = $242 & 8;
     $244 = $238 << $243;
     $245 = (($244) + 520192)|0;
     $246 = $245 >>> 16;
     $247 = $246 & 4;
     $248 = $247 | $243;
     $249 = $244 << $247;
     $250 = (($249) + 245760)|0;
     $251 = $250 >>> 16;
     $252 = $251 & 2;
     $253 = $248 | $252;
     $254 = (14 - ($253))|0;
     $255 = $249 << $252;
     $256 = $255 >>> 15;
     $257 = (($254) + ($256))|0;
     $258 = $257 << 1;
     $259 = (($257) + 7)|0;
     $260 = $$1 >>> $259;
     $261 = $260 & 1;
     $262 = $261 | $258;
     $I19$0 = $262;
    }
   }
   $263 = (3484 + ($I19$0<<2)|0);
   $264 = ((($$0)) + 28|0);
   HEAP32[$264>>2] = $I19$0;
   $265 = ((($$0)) + 16|0);
   $266 = ((($$0)) + 20|0);
   HEAP32[$266>>2] = 0;
   HEAP32[$265>>2] = 0;
   $267 = HEAP32[(3184)>>2]|0;
   $268 = 1 << $I19$0;
   $269 = $267 & $268;
   $270 = ($269|0)==(0);
   if ($270) {
    $271 = $267 | $268;
    HEAP32[(3184)>>2] = $271;
    HEAP32[$263>>2] = $$0;
    $272 = ((($$0)) + 24|0);
    HEAP32[$272>>2] = $263;
    $273 = ((($$0)) + 12|0);
    HEAP32[$273>>2] = $$0;
    $274 = ((($$0)) + 8|0);
    HEAP32[$274>>2] = $$0;
    break;
   }
   $275 = HEAP32[$263>>2]|0;
   $276 = ((($275)) + 4|0);
   $277 = HEAP32[$276>>2]|0;
   $278 = $277 & -8;
   $279 = ($278|0)==($$1|0);
   L170: do {
    if ($279) {
     $T$0$lcssa = $275;
    } else {
     $280 = ($I19$0|0)==(31);
     $281 = $I19$0 >>> 1;
     $282 = (25 - ($281))|0;
     $283 = $280 ? 0 : $282;
     $284 = $$1 << $283;
     $K20$043 = $284;$T$042 = $275;
     while(1) {
      $291 = $K20$043 >>> 31;
      $292 = (((($T$042)) + 16|0) + ($291<<2)|0);
      $287 = HEAP32[$292>>2]|0;
      $293 = ($287|0)==(0|0);
      if ($293) {
       $$lcssa = $292;$T$042$lcssa = $T$042;
       break;
      }
      $285 = $K20$043 << 1;
      $286 = ((($287)) + 4|0);
      $288 = HEAP32[$286>>2]|0;
      $289 = $288 & -8;
      $290 = ($289|0)==($$1|0);
      if ($290) {
       $T$0$lcssa = $287;
       break L170;
      } else {
       $K20$043 = $285;$T$042 = $287;
      }
     }
     $294 = HEAP32[(3196)>>2]|0;
     $295 = ($$lcssa>>>0)<($294>>>0);
     if ($295) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$$lcssa>>2] = $$0;
      $296 = ((($$0)) + 24|0);
      HEAP32[$296>>2] = $T$042$lcssa;
      $297 = ((($$0)) + 12|0);
      HEAP32[$297>>2] = $$0;
      $298 = ((($$0)) + 8|0);
      HEAP32[$298>>2] = $$0;
      break L74;
     }
    }
   } while(0);
   $299 = ((($T$0$lcssa)) + 8|0);
   $300 = HEAP32[$299>>2]|0;
   $301 = HEAP32[(3196)>>2]|0;
   $302 = ($300>>>0)>=($301>>>0);
   $not$ = ($T$0$lcssa>>>0)>=($301>>>0);
   $303 = $302 & $not$;
   if ($303) {
    $304 = ((($300)) + 12|0);
    HEAP32[$304>>2] = $$0;
    HEAP32[$299>>2] = $$0;
    $305 = ((($$0)) + 8|0);
    HEAP32[$305>>2] = $300;
    $306 = ((($$0)) + 12|0);
    HEAP32[$306>>2] = $T$0$lcssa;
    $307 = ((($$0)) + 24|0);
    HEAP32[$307>>2] = 0;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 return;
}
function _scanexp($f,$pok) {
 $f = $f|0;
 $pok = $pok|0;
 var $$lcssa22 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $c$0 = 0, $c$1$be = 0, $c$1$be$lcssa = 0, $c$112 = 0, $c$2$be = 0, $c$2$lcssa = 0, $c$27 = 0, $c$3$be = 0, $neg$0 = 0, $or$cond3 = 0, $x$013 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($f)) + 100|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1>>>0)<($3>>>0);
 if ($4) {
  $5 = ((($1)) + 1|0);
  HEAP32[$0>>2] = $5;
  $6 = HEAP8[$1>>0]|0;
  $7 = $6&255;
  $10 = $7;
 } else {
  $8 = (___shgetc($f)|0);
  $10 = $8;
 }
 $9 = ($10|0)==(45);
 switch ($10|0) {
 case 43: case 45:  {
  $11 = $9&1;
  $12 = HEAP32[$0>>2]|0;
  $13 = HEAP32[$2>>2]|0;
  $14 = ($12>>>0)<($13>>>0);
  if ($14) {
   $15 = ((($12)) + 1|0);
   HEAP32[$0>>2] = $15;
   $16 = HEAP8[$12>>0]|0;
   $17 = $16&255;
   $20 = $17;
  } else {
   $18 = (___shgetc($f)|0);
   $20 = $18;
  }
  $19 = (($20) + -48)|0;
  $21 = ($19>>>0)>(9);
  $22 = ($pok|0)!=(0);
  $or$cond3 = $22 & $21;
  if ($or$cond3) {
   $23 = HEAP32[$2>>2]|0;
   $24 = ($23|0)==(0|0);
   if ($24) {
    $c$0 = $20;$neg$0 = $11;
   } else {
    $25 = HEAP32[$0>>2]|0;
    $26 = ((($25)) + -1|0);
    HEAP32[$0>>2] = $26;
    $c$0 = $20;$neg$0 = $11;
   }
  } else {
   $c$0 = $20;$neg$0 = $11;
  }
  break;
 }
 default: {
  $c$0 = $10;$neg$0 = 0;
 }
 }
 $27 = (($c$0) + -48)|0;
 $28 = ($27>>>0)>(9);
 if ($28) {
  $29 = HEAP32[$2>>2]|0;
  $30 = ($29|0)==(0|0);
  if ($30) {
   $98 = -2147483648;$99 = 0;
  } else {
   $31 = HEAP32[$0>>2]|0;
   $32 = ((($31)) + -1|0);
   HEAP32[$0>>2] = $32;
   $98 = -2147483648;$99 = 0;
  }
 } else {
  $c$112 = $c$0;$x$013 = 0;
  while(1) {
   $33 = ($x$013*10)|0;
   $34 = (($c$112) + -48)|0;
   $35 = (($34) + ($33))|0;
   $36 = HEAP32[$0>>2]|0;
   $37 = HEAP32[$2>>2]|0;
   $38 = ($36>>>0)<($37>>>0);
   if ($38) {
    $39 = ((($36)) + 1|0);
    HEAP32[$0>>2] = $39;
    $40 = HEAP8[$36>>0]|0;
    $41 = $40&255;
    $c$1$be = $41;
   } else {
    $42 = (___shgetc($f)|0);
    $c$1$be = $42;
   }
   $43 = (($c$1$be) + -48)|0;
   $44 = ($43>>>0)<(10);
   $45 = ($35|0)<(214748364);
   $46 = $44 & $45;
   if ($46) {
    $c$112 = $c$1$be;$x$013 = $35;
   } else {
    $$lcssa22 = $35;$c$1$be$lcssa = $c$1$be;
    break;
   }
  }
  $47 = ($$lcssa22|0)<(0);
  $48 = $47 << 31 >> 31;
  $49 = (($c$1$be$lcssa) + -48)|0;
  $50 = ($49>>>0)<(10);
  if ($50) {
   $53 = $$lcssa22;$54 = $48;$c$27 = $c$1$be$lcssa;
   while(1) {
    $55 = (___muldi3(($53|0),($54|0),10,0)|0);
    $56 = tempRet0;
    $57 = ($c$27|0)<(0);
    $58 = $57 << 31 >> 31;
    $59 = (_i64Add(($c$27|0),($58|0),-48,-1)|0);
    $60 = tempRet0;
    $61 = (_i64Add(($59|0),($60|0),($55|0),($56|0))|0);
    $62 = tempRet0;
    $63 = HEAP32[$0>>2]|0;
    $64 = HEAP32[$2>>2]|0;
    $65 = ($63>>>0)<($64>>>0);
    if ($65) {
     $66 = ((($63)) + 1|0);
     HEAP32[$0>>2] = $66;
     $67 = HEAP8[$63>>0]|0;
     $68 = $67&255;
     $c$2$be = $68;
    } else {
     $69 = (___shgetc($f)|0);
     $c$2$be = $69;
    }
    $70 = (($c$2$be) + -48)|0;
    $71 = ($70>>>0)<(10);
    $72 = ($62|0)<(21474836);
    $73 = ($61>>>0)<(2061584302);
    $74 = ($62|0)==(21474836);
    $75 = $74 & $73;
    $76 = $72 | $75;
    $77 = $71 & $76;
    if ($77) {
     $53 = $61;$54 = $62;$c$27 = $c$2$be;
    } else {
     $92 = $61;$93 = $62;$c$2$lcssa = $c$2$be;
     break;
    }
   }
  } else {
   $92 = $$lcssa22;$93 = $48;$c$2$lcssa = $c$1$be$lcssa;
  }
  $51 = (($c$2$lcssa) + -48)|0;
  $52 = ($51>>>0)<(10);
  if ($52) {
   while(1) {
    $78 = HEAP32[$0>>2]|0;
    $79 = HEAP32[$2>>2]|0;
    $80 = ($78>>>0)<($79>>>0);
    if ($80) {
     $81 = ((($78)) + 1|0);
     HEAP32[$0>>2] = $81;
     $82 = HEAP8[$78>>0]|0;
     $83 = $82&255;
     $c$3$be = $83;
    } else {
     $84 = (___shgetc($f)|0);
     $c$3$be = $84;
    }
    $85 = (($c$3$be) + -48)|0;
    $86 = ($85>>>0)<(10);
    if (!($86)) {
     break;
    }
   }
  }
  $87 = HEAP32[$2>>2]|0;
  $88 = ($87|0)==(0|0);
  if (!($88)) {
   $89 = HEAP32[$0>>2]|0;
   $90 = ((($89)) + -1|0);
   HEAP32[$0>>2] = $90;
  }
  $91 = ($neg$0|0)!=(0);
  $94 = (_i64Subtract(0,0,($92|0),($93|0))|0);
  $95 = tempRet0;
  $96 = $91 ? $94 : $92;
  $97 = $91 ? $95 : $93;
  $98 = $97;$99 = $96;
 }
 tempRet0 = ($98);
 return ($99|0);
}
function _cleanup392($p) {
 $p = $p|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($p)) + 68|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if ($2) {
  ___unlockfile($p);
 }
 return;
}
function _cleanup397($p) {
 $p = $p|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($p)) + 68|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if ($2) {
  ___unlockfile($p);
 }
 return;
}
function ___fflush_unlocked($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 20|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($f)) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1>>>0)>($3>>>0);
 if ($4) {
  $5 = ((($f)) + 36|0);
  $6 = HEAP32[$5>>2]|0;
  (FUNCTION_TABLE_iiii[$6 & 1023]($f,0,0)|0);
  $7 = HEAP32[$0>>2]|0;
  $8 = ($7|0)==(0|0);
  if ($8) {
   $$0 = -1;
  } else {
   label = 3;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $9 = ((($f)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ((($f)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = ($10>>>0)<($12>>>0);
  if ($13) {
   $14 = ((($f)) + 40|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = $10;
   $17 = $12;
   $18 = (($16) - ($17))|0;
   (FUNCTION_TABLE_iiii[$15 & 1023]($f,$18,1)|0);
  }
  $19 = ((($f)) + 16|0);
  HEAP32[$19>>2] = 0;
  HEAP32[$2>>2] = 0;
  HEAP32[$0>>2] = 0;
  HEAP32[$11>>2] = 0;
  HEAP32[$9>>2] = 0;
  $$0 = 0;
 }
 return ($$0|0);
}
function _printf_core($f,$fmt,$ap,$nl_arg,$nl_type) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 $nl_arg = $nl_arg|0;
 $nl_type = $nl_type|0;
 var $$ = 0, $$$i = 0, $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $$012$i = 0, $$013$i = 0, $$03$i33 = 0, $$07$i = 0.0, $$1$i = 0.0, $$114$i = 0, $$2$i = 0.0, $$20$i = 0.0, $$21$i = 0, $$210$$22$i = 0, $$210$$24$i = 0, $$210$i = 0, $$23$i = 0, $$3$i = 0.0, $$31$i = 0;
 var $$311$i = 0, $$4$i = 0.0, $$412$lcssa$i = 0, $$41276$i = 0, $$5$lcssa$i = 0, $$51 = 0, $$587$i = 0, $$a$3$i = 0, $$a$3185$i = 0, $$a$3186$i = 0, $$fl$4 = 0, $$l10n$0 = 0, $$lcssa = 0, $$lcssa159$i = 0, $$lcssa318 = 0, $$lcssa323 = 0, $$lcssa324 = 0, $$lcssa325 = 0, $$lcssa326 = 0, $$lcssa327 = 0;
 var $$lcssa329 = 0, $$lcssa339 = 0, $$lcssa342 = 0.0, $$lcssa344 = 0, $$neg52$i = 0, $$neg53$i = 0, $$p$$i = 0, $$p$0 = 0, $$p$5 = 0, $$p$i = 0, $$pn$i = 0, $$pr$i = 0, $$pr47$i = 0, $$pre = 0, $$pre$i = 0, $$pre$phi184$iZ2D = 0, $$pre179$i = 0, $$pre182$i = 0, $$pre183$i = 0, $$pre193 = 0;
 var $$sum$i = 0, $$sum15$i = 0, $$sum16$i = 0, $$z$3$i = 0, $$z$4$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0;
 var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0;
 var $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0;
 var $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0;
 var $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0;
 var $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0;
 var $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0;
 var $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0;
 var $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0;
 var $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0.0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0.0;
 var $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0;
 var $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0.0, $392 = 0.0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0;
 var $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0.0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0.0, $412 = 0.0, $413 = 0.0, $414 = 0.0, $415 = 0.0, $416 = 0.0, $417 = 0;
 var $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0;
 var $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0.0, $443 = 0.0, $444 = 0.0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0;
 var $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0;
 var $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0.0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0.0, $486 = 0.0, $487 = 0.0, $488 = 0, $489 = 0, $49 = 0;
 var $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0;
 var $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0;
 var $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0;
 var $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0;
 var $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0;
 var $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0.0, $597 = 0.0, $598 = 0;
 var $599 = 0.0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0;
 var $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0;
 var $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0;
 var $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0;
 var $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0;
 var $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0;
 var $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0;
 var $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0;
 var $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0;
 var $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0;
 var $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $a$0 = 0, $a$1 = 0, $a$1$lcssa$i = 0, $a$1147$i = 0, $a$2 = 0, $a$2$ph$i = 0, $a$3$lcssa$i = 0, $a$3134$i = 0, $a$5$lcssa$i = 0, $a$5109$i = 0, $a$6$i = 0, $a$7$i = 0, $a$8$ph$i = 0, $arg = 0, $arglist_current = 0, $arglist_current2 = 0, $arglist_next = 0, $arglist_next3 = 0;
 var $argpos$0 = 0, $big$i = 0, $buf = 0, $buf$i = 0, $carry$0140$i = 0, $carry3$0128$i = 0, $cnt$0 = 0, $cnt$1 = 0, $cnt$1$lcssa = 0, $d$0$i = 0, $d$0139$i = 0, $d$0141$i = 0, $d$1127$i = 0, $d$2$lcssa$i = 0, $d$2108$i = 0, $d$3$i = 0, $d$482$i = 0, $d$575$i = 0, $d$686$i = 0, $e$0123$i = 0;
 var $e$1$i = 0, $e$2104$i = 0, $e$3$i = 0, $e$4$ph$i = 0, $e2$i = 0, $ebuf0$i = 0, $estr$0$i = 0, $estr$1$lcssa$i = 0, $estr$193$i = 0, $estr$2$i = 0, $exitcond$i = 0, $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0, $expanded15 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0;
 var $expanded8 = 0, $fl$0109 = 0, $fl$062 = 0, $fl$1 = 0, $fl$1$ = 0, $fl$3 = 0, $fl$4 = 0, $fl$6 = 0, $fmt39$lcssa = 0, $fmt39101 = 0, $fmt40 = 0, $fmt41 = 0, $fmt42 = 0, $fmt44 = 0, $fmt44$lcssa321 = 0, $fmt45 = 0, $i$0$lcssa = 0, $i$0$lcssa200 = 0, $i$0114 = 0, $i$0122$i = 0;
 var $i$03$i = 0, $i$03$i25 = 0, $i$1$lcssa$i = 0, $i$1116$i = 0, $i$1125 = 0, $i$2100 = 0, $i$2100$lcssa = 0, $i$2103$i = 0, $i$398 = 0, $i$399$i = 0, $isdigit = 0, $isdigit$i = 0, $isdigit$i27 = 0, $isdigit10 = 0, $isdigit12 = 0, $isdigit2$i = 0, $isdigit2$i23 = 0, $isdigittmp = 0, $isdigittmp$ = 0, $isdigittmp$i = 0;
 var $isdigittmp$i26 = 0, $isdigittmp1$i = 0, $isdigittmp1$i22 = 0, $isdigittmp11 = 0, $isdigittmp4$i = 0, $isdigittmp4$i24 = 0, $isdigittmp9 = 0, $j$0$i = 0, $j$0115$i = 0, $j$0117$i = 0, $j$1100$i = 0, $j$2$i = 0, $l$0 = 0, $l$0$i = 0, $l$1$i = 0, $l$1113 = 0, $l$2 = 0, $l10n$0 = 0, $l10n$0$lcssa = 0, $l10n$0$phi = 0;
 var $l10n$1 = 0, $l10n$2 = 0, $l10n$3 = 0, $mb = 0, $notlhs$i = 0, $notrhs$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond15 = 0, $or$cond17 = 0, $or$cond20 = 0, $or$cond240 = 0, $or$cond29$i = 0, $or$cond3$not$i = 0, $or$cond6$i = 0, $p$0 = 0, $p$1 = 0, $p$2 = 0, $p$2$ = 0, $p$3 = 0;
 var $p$4198 = 0, $p$5 = 0, $pl$0 = 0, $pl$0$i = 0, $pl$1 = 0, $pl$1$i = 0, $pl$2 = 0, $prefix$0 = 0, $prefix$0$$i = 0, $prefix$0$i = 0, $prefix$1 = 0, $prefix$2 = 0, $r$0$a$8$i = 0, $re$169$i = 0, $round$068$i = 0.0, $round6$1$i = 0.0, $s$0$i = 0, $s$1$i = 0, $s$1$i$lcssa = 0, $s1$0$i = 0;
 var $s7$079$i = 0, $s7$1$i = 0, $s8$0$lcssa$i = 0, $s8$070$i = 0, $s9$0$i = 0, $s9$183$i = 0, $s9$2$i = 0, $small$0$i = 0.0, $small$1$i = 0.0, $st$0 = 0, $st$0$lcssa322 = 0, $storemerge = 0, $storemerge13 = 0, $storemerge8108 = 0, $storemerge860 = 0, $sum = 0, $t$0 = 0, $t$1 = 0, $w$$i = 0, $w$0 = 0;
 var $w$1 = 0, $w$2 = 0, $w$30$i = 0, $wc = 0, $ws$0115 = 0, $ws$1126 = 0, $z$0$i = 0, $z$0$lcssa = 0, $z$0102 = 0, $z$1 = 0, $z$1$lcssa$i = 0, $z$1146$i = 0, $z$2 = 0, $z$2$i = 0, $z$2$i$lcssa = 0, $z$3$lcssa$i = 0, $z$3133$i = 0, $z$4$i = 0, $z$6$$i = 0, $z$6$i = 0;
 var $z$6$i$lcssa = 0, $z$6$ph$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 624|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $big$i = sp + 24|0;
 $e2$i = sp + 16|0;
 $buf$i = sp + 588|0;
 $ebuf0$i = sp + 576|0;
 $arg = sp;
 $buf = sp + 536|0;
 $wc = sp + 8|0;
 $mb = sp + 528|0;
 $0 = ($f|0)!=(0|0);
 $1 = ((($buf)) + 40|0);
 $2 = $1;
 $3 = ((($buf)) + 39|0);
 $4 = ((($wc)) + 4|0);
 $5 = ((($ebuf0$i)) + 12|0);
 $6 = ((($ebuf0$i)) + 11|0);
 $7 = $buf$i;
 $8 = $5;
 $9 = (($8) - ($7))|0;
 $10 = (-2 - ($7))|0;
 $11 = (($8) + 2)|0;
 $12 = ((($big$i)) + 288|0);
 $13 = ((($buf$i)) + 9|0);
 $14 = $13;
 $15 = ((($buf$i)) + 8|0);
 $cnt$0 = 0;$fmt41 = $fmt;$l$0 = 0;$l10n$0 = 0;
 L1: while(1) {
  $16 = ($cnt$0|0)>(-1);
  do {
   if ($16) {
    $17 = (2147483647 - ($cnt$0))|0;
    $18 = ($l$0|0)>($17|0);
    if ($18) {
     $19 = (___errno_location()|0);
     HEAP32[$19>>2] = 75;
     $cnt$1 = -1;
     break;
    } else {
     $20 = (($l$0) + ($cnt$0))|0;
     $cnt$1 = $20;
     break;
    }
   } else {
    $cnt$1 = $cnt$0;
   }
  } while(0);
  $21 = HEAP8[$fmt41>>0]|0;
  $22 = ($21<<24>>24)==(0);
  if ($22) {
   $cnt$1$lcssa = $cnt$1;$l10n$0$lcssa = $l10n$0;
   label = 245;
   break;
  } else {
   $23 = $21;$fmt40 = $fmt41;
  }
  L9: while(1) {
   switch ($23<<24>>24) {
   case 37:  {
    $fmt39101 = $fmt40;$z$0102 = $fmt40;
    label = 9;
    break L9;
    break;
   }
   case 0:  {
    $fmt39$lcssa = $fmt40;$z$0$lcssa = $fmt40;
    break L9;
    break;
   }
   default: {
   }
   }
   $24 = ((($fmt40)) + 1|0);
   $$pre = HEAP8[$24>>0]|0;
   $23 = $$pre;$fmt40 = $24;
  }
  L12: do {
   if ((label|0) == 9) {
    while(1) {
     label = 0;
     $25 = ((($fmt39101)) + 1|0);
     $26 = HEAP8[$25>>0]|0;
     $27 = ($26<<24>>24)==(37);
     if (!($27)) {
      $fmt39$lcssa = $fmt39101;$z$0$lcssa = $z$0102;
      break L12;
     }
     $28 = ((($z$0102)) + 1|0);
     $29 = ((($fmt39101)) + 2|0);
     $30 = HEAP8[$29>>0]|0;
     $31 = ($30<<24>>24)==(37);
     if ($31) {
      $fmt39101 = $29;$z$0102 = $28;
      label = 9;
     } else {
      $fmt39$lcssa = $29;$z$0$lcssa = $28;
      break;
     }
    }
   }
  } while(0);
  $32 = $z$0$lcssa;
  $33 = $fmt41;
  $34 = (($32) - ($33))|0;
  if ($0) {
   $35 = HEAP32[$f>>2]|0;
   $36 = $35 & 32;
   $37 = ($36|0)==(0);
   if ($37) {
    (___fwritex($fmt41,$34,$f)|0);
   }
  }
  $38 = ($z$0$lcssa|0)==($fmt41|0);
  if (!($38)) {
   $l10n$0$phi = $l10n$0;$cnt$0 = $cnt$1;$fmt41 = $fmt39$lcssa;$l$0 = $34;$l10n$0 = $l10n$0$phi;
   continue;
  }
  $39 = ((($fmt39$lcssa)) + 1|0);
  $40 = HEAP8[$39>>0]|0;
  $41 = $40 << 24 >> 24;
  $isdigittmp = (($41) + -48)|0;
  $isdigit = ($isdigittmp>>>0)<(10);
  if ($isdigit) {
   $42 = ((($fmt39$lcssa)) + 2|0);
   $43 = HEAP8[$42>>0]|0;
   $44 = ($43<<24>>24)==(36);
   $45 = ((($fmt39$lcssa)) + 3|0);
   $$51 = $44 ? $45 : $39;
   $$l10n$0 = $44 ? 1 : $l10n$0;
   $isdigittmp$ = $44 ? $isdigittmp : -1;
   $$pre193 = HEAP8[$$51>>0]|0;
   $47 = $$pre193;$argpos$0 = $isdigittmp$;$l10n$1 = $$l10n$0;$storemerge = $$51;
  } else {
   $47 = $40;$argpos$0 = -1;$l10n$1 = $l10n$0;$storemerge = $39;
  }
  $46 = $47 << 24 >> 24;
  $48 = $46 & -32;
  $49 = ($48|0)==(32);
  L25: do {
   if ($49) {
    $51 = $46;$56 = $47;$fl$0109 = 0;$storemerge8108 = $storemerge;
    while(1) {
     $50 = (($51) + -32)|0;
     $52 = 1 << $50;
     $53 = $52 & 75913;
     $54 = ($53|0)==(0);
     if ($54) {
      $66 = $56;$fl$062 = $fl$0109;$storemerge860 = $storemerge8108;
      break L25;
     }
     $55 = $56 << 24 >> 24;
     $57 = (($55) + -32)|0;
     $58 = 1 << $57;
     $59 = $58 | $fl$0109;
     $60 = ((($storemerge8108)) + 1|0);
     $61 = HEAP8[$60>>0]|0;
     $62 = $61 << 24 >> 24;
     $63 = $62 & -32;
     $64 = ($63|0)==(32);
     if ($64) {
      $51 = $62;$56 = $61;$fl$0109 = $59;$storemerge8108 = $60;
     } else {
      $66 = $61;$fl$062 = $59;$storemerge860 = $60;
      break;
     }
    }
   } else {
    $66 = $47;$fl$062 = 0;$storemerge860 = $storemerge;
   }
  } while(0);
  $65 = ($66<<24>>24)==(42);
  do {
   if ($65) {
    $67 = ((($storemerge860)) + 1|0);
    $68 = HEAP8[$67>>0]|0;
    $69 = $68 << 24 >> 24;
    $isdigittmp11 = (($69) + -48)|0;
    $isdigit12 = ($isdigittmp11>>>0)<(10);
    if ($isdigit12) {
     $70 = ((($storemerge860)) + 2|0);
     $71 = HEAP8[$70>>0]|0;
     $72 = ($71<<24>>24)==(36);
     if ($72) {
      $73 = (($nl_type) + ($isdigittmp11<<2)|0);
      HEAP32[$73>>2] = 10;
      $74 = HEAP8[$67>>0]|0;
      $75 = $74 << 24 >> 24;
      $76 = (($75) + -48)|0;
      $77 = (($nl_arg) + ($76<<3)|0);
      $78 = $77;
      $79 = $78;
      $80 = HEAP32[$79>>2]|0;
      $81 = (($78) + 4)|0;
      $82 = $81;
      $83 = HEAP32[$82>>2]|0;
      $84 = ((($storemerge860)) + 3|0);
      $l10n$2 = 1;$storemerge13 = $84;$w$0 = $80;
     } else {
      label = 24;
     }
    } else {
     label = 24;
    }
    if ((label|0) == 24) {
     label = 0;
     $85 = ($l10n$1|0)==(0);
     if (!($85)) {
      $$0 = -1;
      break L1;
     }
     if (!($0)) {
      $fl$1 = $fl$062;$fmt42 = $67;$l10n$3 = 0;$w$1 = 0;
      break;
     }
     $arglist_current = HEAP32[$ap>>2]|0;
     $86 = $arglist_current;
     $87 = ((0) + 4|0);
     $expanded4 = $87;
     $expanded = (($expanded4) - 1)|0;
     $88 = (($86) + ($expanded))|0;
     $89 = ((0) + 4|0);
     $expanded8 = $89;
     $expanded7 = (($expanded8) - 1)|0;
     $expanded6 = $expanded7 ^ -1;
     $90 = $88 & $expanded6;
     $91 = $90;
     $92 = HEAP32[$91>>2]|0;
     $arglist_next = ((($91)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next;
     $l10n$2 = 0;$storemerge13 = $67;$w$0 = $92;
    }
    $93 = ($w$0|0)<(0);
    if ($93) {
     $94 = $fl$062 | 8192;
     $95 = (0 - ($w$0))|0;
     $fl$1 = $94;$fmt42 = $storemerge13;$l10n$3 = $l10n$2;$w$1 = $95;
    } else {
     $fl$1 = $fl$062;$fmt42 = $storemerge13;$l10n$3 = $l10n$2;$w$1 = $w$0;
    }
   } else {
    $96 = $66 << 24 >> 24;
    $isdigittmp1$i = (($96) + -48)|0;
    $isdigit2$i = ($isdigittmp1$i>>>0)<(10);
    if ($isdigit2$i) {
     $100 = $storemerge860;$i$03$i = 0;$isdigittmp4$i = $isdigittmp1$i;
     while(1) {
      $97 = ($i$03$i*10)|0;
      $98 = (($97) + ($isdigittmp4$i))|0;
      $99 = ((($100)) + 1|0);
      $101 = HEAP8[$99>>0]|0;
      $102 = $101 << 24 >> 24;
      $isdigittmp$i = (($102) + -48)|0;
      $isdigit$i = ($isdigittmp$i>>>0)<(10);
      if ($isdigit$i) {
       $100 = $99;$i$03$i = $98;$isdigittmp4$i = $isdigittmp$i;
      } else {
       $$lcssa = $98;$$lcssa318 = $99;
       break;
      }
     }
     $103 = ($$lcssa|0)<(0);
     if ($103) {
      $$0 = -1;
      break L1;
     } else {
      $fl$1 = $fl$062;$fmt42 = $$lcssa318;$l10n$3 = $l10n$1;$w$1 = $$lcssa;
     }
    } else {
     $fl$1 = $fl$062;$fmt42 = $storemerge860;$l10n$3 = $l10n$1;$w$1 = 0;
    }
   }
  } while(0);
  $104 = HEAP8[$fmt42>>0]|0;
  $105 = ($104<<24>>24)==(46);
  L46: do {
   if ($105) {
    $106 = ((($fmt42)) + 1|0);
    $107 = HEAP8[$106>>0]|0;
    $108 = ($107<<24>>24)==(42);
    if (!($108)) {
     $135 = $107 << 24 >> 24;
     $isdigittmp1$i22 = (($135) + -48)|0;
     $isdigit2$i23 = ($isdigittmp1$i22>>>0)<(10);
     if ($isdigit2$i23) {
      $139 = $106;$i$03$i25 = 0;$isdigittmp4$i24 = $isdigittmp1$i22;
     } else {
      $fmt45 = $106;$p$0 = 0;
      break;
     }
     while(1) {
      $136 = ($i$03$i25*10)|0;
      $137 = (($136) + ($isdigittmp4$i24))|0;
      $138 = ((($139)) + 1|0);
      $140 = HEAP8[$138>>0]|0;
      $141 = $140 << 24 >> 24;
      $isdigittmp$i26 = (($141) + -48)|0;
      $isdigit$i27 = ($isdigittmp$i26>>>0)<(10);
      if ($isdigit$i27) {
       $139 = $138;$i$03$i25 = $137;$isdigittmp4$i24 = $isdigittmp$i26;
      } else {
       $fmt45 = $138;$p$0 = $137;
       break L46;
      }
     }
    }
    $109 = ((($fmt42)) + 2|0);
    $110 = HEAP8[$109>>0]|0;
    $111 = $110 << 24 >> 24;
    $isdigittmp9 = (($111) + -48)|0;
    $isdigit10 = ($isdigittmp9>>>0)<(10);
    if ($isdigit10) {
     $112 = ((($fmt42)) + 3|0);
     $113 = HEAP8[$112>>0]|0;
     $114 = ($113<<24>>24)==(36);
     if ($114) {
      $115 = (($nl_type) + ($isdigittmp9<<2)|0);
      HEAP32[$115>>2] = 10;
      $116 = HEAP8[$109>>0]|0;
      $117 = $116 << 24 >> 24;
      $118 = (($117) + -48)|0;
      $119 = (($nl_arg) + ($118<<3)|0);
      $120 = $119;
      $121 = $120;
      $122 = HEAP32[$121>>2]|0;
      $123 = (($120) + 4)|0;
      $124 = $123;
      $125 = HEAP32[$124>>2]|0;
      $126 = ((($fmt42)) + 4|0);
      $fmt45 = $126;$p$0 = $122;
      break;
     }
    }
    $127 = ($l10n$3|0)==(0);
    if (!($127)) {
     $$0 = -1;
     break L1;
    }
    if ($0) {
     $arglist_current2 = HEAP32[$ap>>2]|0;
     $128 = $arglist_current2;
     $129 = ((0) + 4|0);
     $expanded11 = $129;
     $expanded10 = (($expanded11) - 1)|0;
     $130 = (($128) + ($expanded10))|0;
     $131 = ((0) + 4|0);
     $expanded15 = $131;
     $expanded14 = (($expanded15) - 1)|0;
     $expanded13 = $expanded14 ^ -1;
     $132 = $130 & $expanded13;
     $133 = $132;
     $134 = HEAP32[$133>>2]|0;
     $arglist_next3 = ((($133)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next3;
     $fmt45 = $109;$p$0 = $134;
    } else {
     $fmt45 = $109;$p$0 = 0;
    }
   } else {
    $fmt45 = $fmt42;$p$0 = -1;
   }
  } while(0);
  $fmt44 = $fmt45;$st$0 = 0;
  while(1) {
   $142 = HEAP8[$fmt44>>0]|0;
   $143 = $142 << 24 >> 24;
   $144 = (($143) + -65)|0;
   $145 = ($144>>>0)>(57);
   if ($145) {
    $$0 = -1;
    break L1;
   }
   $146 = ((($fmt44)) + 1|0);
   $147 = ((23421 + (($st$0*58)|0)|0) + ($144)|0);
   $148 = HEAP8[$147>>0]|0;
   $149 = $148&255;
   $150 = (($149) + -1)|0;
   $151 = ($150>>>0)<(8);
   if ($151) {
    $fmt44 = $146;$st$0 = $149;
   } else {
    $$lcssa323 = $146;$$lcssa324 = $148;$$lcssa325 = $149;$fmt44$lcssa321 = $fmt44;$st$0$lcssa322 = $st$0;
    break;
   }
  }
  $152 = ($$lcssa324<<24>>24)==(0);
  if ($152) {
   $$0 = -1;
   break;
  }
  $153 = ($$lcssa324<<24>>24)==(19);
  $154 = ($argpos$0|0)>(-1);
  do {
   if ($153) {
    if ($154) {
     $$0 = -1;
     break L1;
    } else {
     label = 52;
    }
   } else {
    if ($154) {
     $155 = (($nl_type) + ($argpos$0<<2)|0);
     HEAP32[$155>>2] = $$lcssa325;
     $156 = (($nl_arg) + ($argpos$0<<3)|0);
     $157 = $156;
     $158 = $157;
     $159 = HEAP32[$158>>2]|0;
     $160 = (($157) + 4)|0;
     $161 = $160;
     $162 = HEAP32[$161>>2]|0;
     $163 = $arg;
     $164 = $163;
     HEAP32[$164>>2] = $159;
     $165 = (($163) + 4)|0;
     $166 = $165;
     HEAP32[$166>>2] = $162;
     label = 52;
     break;
    }
    if (!($0)) {
     $$0 = 0;
     break L1;
    }
    _pop_arg($arg,$$lcssa325,$ap);
   }
  } while(0);
  if ((label|0) == 52) {
   label = 0;
   if (!($0)) {
    $cnt$0 = $cnt$1;$fmt41 = $$lcssa323;$l$0 = $34;$l10n$0 = $l10n$3;
    continue;
   }
  }
  $167 = HEAP8[$fmt44$lcssa321>>0]|0;
  $168 = $167 << 24 >> 24;
  $169 = ($st$0$lcssa322|0)!=(0);
  $170 = $168 & 15;
  $171 = ($170|0)==(3);
  $or$cond15 = $169 & $171;
  $172 = $168 & -33;
  $t$0 = $or$cond15 ? $172 : $168;
  $173 = $fl$1 & 8192;
  $174 = ($173|0)==(0);
  $175 = $fl$1 & -65537;
  $fl$1$ = $174 ? $fl$1 : $175;
  L75: do {
   switch ($t$0|0) {
   case 110:  {
    switch ($st$0$lcssa322|0) {
    case 0:  {
     $182 = HEAP32[$arg>>2]|0;
     HEAP32[$182>>2] = $cnt$1;
     $cnt$0 = $cnt$1;$fmt41 = $$lcssa323;$l$0 = $34;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 1:  {
     $183 = HEAP32[$arg>>2]|0;
     HEAP32[$183>>2] = $cnt$1;
     $cnt$0 = $cnt$1;$fmt41 = $$lcssa323;$l$0 = $34;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 2:  {
     $184 = ($cnt$1|0)<(0);
     $185 = $184 << 31 >> 31;
     $186 = HEAP32[$arg>>2]|0;
     $187 = $186;
     $188 = $187;
     HEAP32[$188>>2] = $cnt$1;
     $189 = (($187) + 4)|0;
     $190 = $189;
     HEAP32[$190>>2] = $185;
     $cnt$0 = $cnt$1;$fmt41 = $$lcssa323;$l$0 = $34;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 3:  {
     $191 = $cnt$1&65535;
     $192 = HEAP32[$arg>>2]|0;
     HEAP16[$192>>1] = $191;
     $cnt$0 = $cnt$1;$fmt41 = $$lcssa323;$l$0 = $34;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 4:  {
     $193 = $cnt$1&255;
     $194 = HEAP32[$arg>>2]|0;
     HEAP8[$194>>0] = $193;
     $cnt$0 = $cnt$1;$fmt41 = $$lcssa323;$l$0 = $34;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 6:  {
     $195 = HEAP32[$arg>>2]|0;
     HEAP32[$195>>2] = $cnt$1;
     $cnt$0 = $cnt$1;$fmt41 = $$lcssa323;$l$0 = $34;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 7:  {
     $196 = ($cnt$1|0)<(0);
     $197 = $196 << 31 >> 31;
     $198 = HEAP32[$arg>>2]|0;
     $199 = $198;
     $200 = $199;
     HEAP32[$200>>2] = $cnt$1;
     $201 = (($199) + 4)|0;
     $202 = $201;
     HEAP32[$202>>2] = $197;
     $cnt$0 = $cnt$1;$fmt41 = $$lcssa323;$l$0 = $34;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    default: {
     $cnt$0 = $cnt$1;$fmt41 = $$lcssa323;$l$0 = $34;$l10n$0 = $l10n$3;
     continue L1;
    }
    }
    break;
   }
   case 112:  {
    $203 = ($p$0>>>0)>(8);
    $204 = $203 ? $p$0 : 8;
    $205 = $fl$1$ | 8;
    $fl$3 = $205;$p$1 = $204;$t$1 = 120;
    label = 64;
    break;
   }
   case 88: case 120:  {
    $fl$3 = $fl$1$;$p$1 = $p$0;$t$1 = $t$0;
    label = 64;
    break;
   }
   case 111:  {
    $243 = $arg;
    $244 = $243;
    $245 = HEAP32[$244>>2]|0;
    $246 = (($243) + 4)|0;
    $247 = $246;
    $248 = HEAP32[$247>>2]|0;
    $249 = ($245|0)==(0);
    $250 = ($248|0)==(0);
    $251 = $249 & $250;
    if ($251) {
     $$0$lcssa$i = $1;
    } else {
     $$03$i33 = $1;$253 = $245;$257 = $248;
     while(1) {
      $252 = $253 & 7;
      $254 = $252 | 48;
      $255 = $254&255;
      $256 = ((($$03$i33)) + -1|0);
      HEAP8[$256>>0] = $255;
      $258 = (_bitshift64Lshr(($253|0),($257|0),3)|0);
      $259 = tempRet0;
      $260 = ($258|0)==(0);
      $261 = ($259|0)==(0);
      $262 = $260 & $261;
      if ($262) {
       $$0$lcssa$i = $256;
       break;
      } else {
       $$03$i33 = $256;$253 = $258;$257 = $259;
      }
     }
    }
    $263 = $fl$1$ & 8;
    $264 = ($263|0)==(0);
    if ($264) {
     $a$0 = $$0$lcssa$i;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = 0;$prefix$1 = 23901;
     label = 77;
    } else {
     $265 = $$0$lcssa$i;
     $266 = (($2) - ($265))|0;
     $267 = (($266) + 1)|0;
     $268 = ($p$0|0)<($267|0);
     $$p$0 = $268 ? $267 : $p$0;
     $a$0 = $$0$lcssa$i;$fl$4 = $fl$1$;$p$2 = $$p$0;$pl$1 = 0;$prefix$1 = 23901;
     label = 77;
    }
    break;
   }
   case 105: case 100:  {
    $269 = $arg;
    $270 = $269;
    $271 = HEAP32[$270>>2]|0;
    $272 = (($269) + 4)|0;
    $273 = $272;
    $274 = HEAP32[$273>>2]|0;
    $275 = ($274|0)<(0);
    if ($275) {
     $276 = (_i64Subtract(0,0,($271|0),($274|0))|0);
     $277 = tempRet0;
     $278 = $arg;
     $279 = $278;
     HEAP32[$279>>2] = $276;
     $280 = (($278) + 4)|0;
     $281 = $280;
     HEAP32[$281>>2] = $277;
     $286 = $276;$287 = $277;$pl$0 = 1;$prefix$0 = 23901;
     label = 76;
     break L75;
    }
    $282 = $fl$1$ & 2048;
    $283 = ($282|0)==(0);
    if ($283) {
     $284 = $fl$1$ & 1;
     $285 = ($284|0)==(0);
     $$ = $285 ? 23901 : (23903);
     $286 = $271;$287 = $274;$pl$0 = $284;$prefix$0 = $$;
     label = 76;
    } else {
     $286 = $271;$287 = $274;$pl$0 = 1;$prefix$0 = (23902);
     label = 76;
    }
    break;
   }
   case 117:  {
    $176 = $arg;
    $177 = $176;
    $178 = HEAP32[$177>>2]|0;
    $179 = (($176) + 4)|0;
    $180 = $179;
    $181 = HEAP32[$180>>2]|0;
    $286 = $178;$287 = $181;$pl$0 = 0;$prefix$0 = 23901;
    label = 76;
    break;
   }
   case 99:  {
    $307 = $arg;
    $308 = $307;
    $309 = HEAP32[$308>>2]|0;
    $310 = (($307) + 4)|0;
    $311 = $310;
    $312 = HEAP32[$311>>2]|0;
    $313 = $309&255;
    HEAP8[$3>>0] = $313;
    $a$2 = $3;$fl$6 = $175;$p$5 = 1;$pl$2 = 0;$prefix$2 = 23901;$z$2 = $1;
    break;
   }
   case 109:  {
    $314 = (___errno_location()|0);
    $315 = HEAP32[$314>>2]|0;
    $316 = (_strerror($315)|0);
    $a$1 = $316;
    label = 82;
    break;
   }
   case 115:  {
    $317 = HEAP32[$arg>>2]|0;
    $318 = ($317|0)!=(0|0);
    $319 = $318 ? $317 : 23911;
    $a$1 = $319;
    label = 82;
    break;
   }
   case 67:  {
    $326 = $arg;
    $327 = $326;
    $328 = HEAP32[$327>>2]|0;
    $329 = (($326) + 4)|0;
    $330 = $329;
    $331 = HEAP32[$330>>2]|0;
    HEAP32[$wc>>2] = $328;
    HEAP32[$4>>2] = 0;
    HEAP32[$arg>>2] = $wc;
    $p$4198 = -1;
    label = 86;
    break;
   }
   case 83:  {
    $332 = ($p$0|0)==(0);
    if ($332) {
     _pad($f,32,$w$1,0,$fl$1$);
     $i$0$lcssa200 = 0;
     label = 98;
    } else {
     $p$4198 = $p$0;
     label = 86;
    }
    break;
   }
   case 65: case 71: case 70: case 69: case 97: case 103: case 102: case 101:  {
    $359 = +HEAPF64[$arg>>3];
    HEAP32[$e2$i>>2] = 0;
    HEAPF64[tempDoublePtr>>3] = $359;$360 = HEAP32[tempDoublePtr>>2]|0;
    $361 = HEAP32[tempDoublePtr+4>>2]|0;
    $362 = ($361|0)<(0);
    if ($362) {
     $363 = -$359;
     $$07$i = $363;$pl$0$i = 1;$prefix$0$i = 23918;
    } else {
     $364 = $fl$1$ & 2048;
     $365 = ($364|0)==(0);
     if ($365) {
      $366 = $fl$1$ & 1;
      $367 = ($366|0)==(0);
      $$$i = $367 ? (23919) : (23924);
      $$07$i = $359;$pl$0$i = $366;$prefix$0$i = $$$i;
     } else {
      $$07$i = $359;$pl$0$i = 1;$prefix$0$i = (23921);
     }
    }
    HEAPF64[tempDoublePtr>>3] = $$07$i;$368 = HEAP32[tempDoublePtr>>2]|0;
    $369 = HEAP32[tempDoublePtr+4>>2]|0;
    $370 = $369 & 2146435072;
    $371 = ($370>>>0)<(2146435072);
    $372 = (0)<(0);
    $373 = ($370|0)==(2146435072);
    $374 = $373 & $372;
    $375 = $371 | $374;
    do {
     if ($375) {
      $391 = (+_frexpl($$07$i,$e2$i));
      $392 = $391 * 2.0;
      $393 = $392 != 0.0;
      if ($393) {
       $394 = HEAP32[$e2$i>>2]|0;
       $395 = (($394) + -1)|0;
       HEAP32[$e2$i>>2] = $395;
      }
      $396 = $t$0 | 32;
      $397 = ($396|0)==(97);
      if ($397) {
       $398 = $t$0 & 32;
       $399 = ($398|0)==(0);
       $400 = ((($prefix$0$i)) + 9|0);
       $prefix$0$$i = $399 ? $prefix$0$i : $400;
       $401 = $pl$0$i | 2;
       $402 = ($p$0>>>0)>(11);
       $403 = (12 - ($p$0))|0;
       $404 = ($403|0)==(0);
       $405 = $402 | $404;
       do {
        if ($405) {
         $$1$i = $392;
        } else {
         $re$169$i = $403;$round$068$i = 8.0;
         while(1) {
          $406 = (($re$169$i) + -1)|0;
          $407 = $round$068$i * 16.0;
          $408 = ($406|0)==(0);
          if ($408) {
           $$lcssa342 = $407;
           break;
          } else {
           $re$169$i = $406;$round$068$i = $407;
          }
         }
         $409 = HEAP8[$prefix$0$$i>>0]|0;
         $410 = ($409<<24>>24)==(45);
         if ($410) {
          $411 = -$392;
          $412 = $411 - $$lcssa342;
          $413 = $$lcssa342 + $412;
          $414 = -$413;
          $$1$i = $414;
          break;
         } else {
          $415 = $392 + $$lcssa342;
          $416 = $415 - $$lcssa342;
          $$1$i = $416;
          break;
         }
        }
       } while(0);
       $417 = HEAP32[$e2$i>>2]|0;
       $418 = ($417|0)<(0);
       $419 = (0 - ($417))|0;
       $420 = $418 ? $419 : $417;
       $421 = ($420|0)<(0);
       $422 = $421 << 31 >> 31;
       $423 = (_fmt_u($420,$422,$5)|0);
       $424 = ($423|0)==($5|0);
       if ($424) {
        HEAP8[$6>>0] = 48;
        $estr$0$i = $6;
       } else {
        $estr$0$i = $423;
       }
       $425 = $417 >> 31;
       $426 = $425 & 2;
       $427 = (($426) + 43)|0;
       $428 = $427&255;
       $429 = ((($estr$0$i)) + -1|0);
       HEAP8[$429>>0] = $428;
       $430 = (($t$0) + 15)|0;
       $431 = $430&255;
       $432 = ((($estr$0$i)) + -2|0);
       HEAP8[$432>>0] = $431;
       $notrhs$i = ($p$0|0)<(1);
       $433 = $fl$1$ & 8;
       $434 = ($433|0)==(0);
       $$2$i = $$1$i;$s$0$i = $buf$i;
       while(1) {
        $435 = (~~(($$2$i)));
        $436 = (23885 + ($435)|0);
        $437 = HEAP8[$436>>0]|0;
        $438 = $437&255;
        $439 = $438 | $398;
        $440 = $439&255;
        $441 = ((($s$0$i)) + 1|0);
        HEAP8[$s$0$i>>0] = $440;
        $442 = (+($435|0));
        $443 = $$2$i - $442;
        $444 = $443 * 16.0;
        $445 = $441;
        $446 = (($445) - ($7))|0;
        $447 = ($446|0)==(1);
        do {
         if ($447) {
          $notlhs$i = $444 == 0.0;
          $or$cond3$not$i = $notrhs$i & $notlhs$i;
          $or$cond$i = $434 & $or$cond3$not$i;
          if ($or$cond$i) {
           $s$1$i = $441;
           break;
          }
          $448 = ((($s$0$i)) + 2|0);
          HEAP8[$441>>0] = 46;
          $s$1$i = $448;
         } else {
          $s$1$i = $441;
         }
        } while(0);
        $449 = $444 != 0.0;
        if ($449) {
         $$2$i = $444;$s$0$i = $s$1$i;
        } else {
         $s$1$i$lcssa = $s$1$i;
         break;
        }
       }
       $450 = ($p$0|0)!=(0);
       $$pre182$i = $s$1$i$lcssa;
       $451 = (($10) + ($$pre182$i))|0;
       $452 = ($451|0)<($p$0|0);
       $or$cond240 = $450 & $452;
       $453 = $432;
       $454 = (($11) + ($p$0))|0;
       $455 = (($454) - ($453))|0;
       $456 = $432;
       $457 = (($9) - ($456))|0;
       $458 = (($457) + ($$pre182$i))|0;
       $l$0$i = $or$cond240 ? $455 : $458;
       $459 = (($l$0$i) + ($401))|0;
       _pad($f,32,$w$1,$459,$fl$1$);
       $460 = HEAP32[$f>>2]|0;
       $461 = $460 & 32;
       $462 = ($461|0)==(0);
       if ($462) {
        (___fwritex($prefix$0$$i,$401,$f)|0);
       }
       $463 = $fl$1$ ^ 65536;
       _pad($f,48,$w$1,$459,$463);
       $464 = (($$pre182$i) - ($7))|0;
       $465 = HEAP32[$f>>2]|0;
       $466 = $465 & 32;
       $467 = ($466|0)==(0);
       if ($467) {
        (___fwritex($buf$i,$464,$f)|0);
       }
       $468 = $432;
       $469 = (($8) - ($468))|0;
       $sum = (($464) + ($469))|0;
       $470 = (($l$0$i) - ($sum))|0;
       _pad($f,48,$470,0,0);
       $471 = HEAP32[$f>>2]|0;
       $472 = $471 & 32;
       $473 = ($472|0)==(0);
       if ($473) {
        (___fwritex($432,$469,$f)|0);
       }
       $474 = $fl$1$ ^ 8192;
       _pad($f,32,$w$1,$459,$474);
       $475 = ($459|0)<($w$1|0);
       $w$$i = $475 ? $w$1 : $459;
       $$0$i = $w$$i;
       break;
      }
      $476 = ($p$0|0)<(0);
      $$p$i = $476 ? 6 : $p$0;
      if ($393) {
       $477 = $392 * 268435456.0;
       $478 = HEAP32[$e2$i>>2]|0;
       $479 = (($478) + -28)|0;
       HEAP32[$e2$i>>2] = $479;
       $$3$i = $477;$481 = $479;
      } else {
       $$pre179$i = HEAP32[$e2$i>>2]|0;
       $$3$i = $392;$481 = $$pre179$i;
      }
      $480 = ($481|0)<(0);
      $$31$i = $480 ? $big$i : $12;
      $482 = $$31$i;
      $$4$i = $$3$i;$z$0$i = $$31$i;
      while(1) {
       $483 = (~~(($$4$i))>>>0);
       HEAP32[$z$0$i>>2] = $483;
       $484 = ((($z$0$i)) + 4|0);
       $485 = (+($483>>>0));
       $486 = $$4$i - $485;
       $487 = $486 * 1.0E+9;
       $488 = $487 != 0.0;
       if ($488) {
        $$4$i = $487;$z$0$i = $484;
       } else {
        $$lcssa326 = $484;
        break;
       }
      }
      $$pr$i = HEAP32[$e2$i>>2]|0;
      $489 = ($$pr$i|0)>(0);
      if ($489) {
       $491 = $$pr$i;$a$1147$i = $$31$i;$z$1146$i = $$lcssa326;
       while(1) {
        $490 = ($491|0)>(29);
        $492 = $490 ? 29 : $491;
        $d$0139$i = ((($z$1146$i)) + -4|0);
        $493 = ($d$0139$i>>>0)<($a$1147$i>>>0);
        do {
         if ($493) {
          $a$2$ph$i = $a$1147$i;
         } else {
          $carry$0140$i = 0;$d$0141$i = $d$0139$i;
          while(1) {
           $494 = HEAP32[$d$0141$i>>2]|0;
           $495 = (_bitshift64Shl(($494|0),0,($492|0))|0);
           $496 = tempRet0;
           $497 = (_i64Add(($495|0),($496|0),($carry$0140$i|0),0)|0);
           $498 = tempRet0;
           $499 = (___uremdi3(($497|0),($498|0),1000000000,0)|0);
           $500 = tempRet0;
           HEAP32[$d$0141$i>>2] = $499;
           $501 = (___udivdi3(($497|0),($498|0),1000000000,0)|0);
           $502 = tempRet0;
           $d$0$i = ((($d$0141$i)) + -4|0);
           $503 = ($d$0$i>>>0)<($a$1147$i>>>0);
           if ($503) {
            $$lcssa327 = $501;
            break;
           } else {
            $carry$0140$i = $501;$d$0141$i = $d$0$i;
           }
          }
          $504 = ($$lcssa327|0)==(0);
          if ($504) {
           $a$2$ph$i = $a$1147$i;
           break;
          }
          $505 = ((($a$1147$i)) + -4|0);
          HEAP32[$505>>2] = $$lcssa327;
          $a$2$ph$i = $505;
         }
        } while(0);
        $z$2$i = $z$1146$i;
        while(1) {
         $506 = ($z$2$i>>>0)>($a$2$ph$i>>>0);
         if (!($506)) {
          $z$2$i$lcssa = $z$2$i;
          break;
         }
         $507 = ((($z$2$i)) + -4|0);
         $508 = HEAP32[$507>>2]|0;
         $509 = ($508|0)==(0);
         if ($509) {
          $z$2$i = $507;
         } else {
          $z$2$i$lcssa = $z$2$i;
          break;
         }
        }
        $510 = HEAP32[$e2$i>>2]|0;
        $511 = (($510) - ($492))|0;
        HEAP32[$e2$i>>2] = $511;
        $512 = ($511|0)>(0);
        if ($512) {
         $491 = $511;$a$1147$i = $a$2$ph$i;$z$1146$i = $z$2$i$lcssa;
        } else {
         $$pr47$i = $511;$a$1$lcssa$i = $a$2$ph$i;$z$1$lcssa$i = $z$2$i$lcssa;
         break;
        }
       }
      } else {
       $$pr47$i = $$pr$i;$a$1$lcssa$i = $$31$i;$z$1$lcssa$i = $$lcssa326;
      }
      $513 = ($$pr47$i|0)<(0);
      if ($513) {
       $514 = (($$p$i) + 25)|0;
       $515 = (($514|0) / 9)&-1;
       $516 = (($515) + 1)|0;
       $517 = ($396|0)==(102);
       $519 = $$pr47$i;$a$3134$i = $a$1$lcssa$i;$z$3133$i = $z$1$lcssa$i;
       while(1) {
        $518 = (0 - ($519))|0;
        $520 = ($518|0)>(9);
        $521 = $520 ? 9 : $518;
        $522 = ($a$3134$i>>>0)<($z$3133$i>>>0);
        do {
         if ($522) {
          $526 = 1 << $521;
          $527 = (($526) + -1)|0;
          $528 = 1000000000 >>> $521;
          $carry3$0128$i = 0;$d$1127$i = $a$3134$i;
          while(1) {
           $529 = HEAP32[$d$1127$i>>2]|0;
           $530 = $529 & $527;
           $531 = $529 >>> $521;
           $532 = (($531) + ($carry3$0128$i))|0;
           HEAP32[$d$1127$i>>2] = $532;
           $533 = Math_imul($530, $528)|0;
           $534 = ((($d$1127$i)) + 4|0);
           $535 = ($534>>>0)<($z$3133$i>>>0);
           if ($535) {
            $carry3$0128$i = $533;$d$1127$i = $534;
           } else {
            $$lcssa329 = $533;
            break;
           }
          }
          $536 = HEAP32[$a$3134$i>>2]|0;
          $537 = ($536|0)==(0);
          $538 = ((($a$3134$i)) + 4|0);
          $$a$3$i = $537 ? $538 : $a$3134$i;
          $539 = ($$lcssa329|0)==(0);
          if ($539) {
           $$a$3186$i = $$a$3$i;$z$4$i = $z$3133$i;
           break;
          }
          $540 = ((($z$3133$i)) + 4|0);
          HEAP32[$z$3133$i>>2] = $$lcssa329;
          $$a$3186$i = $$a$3$i;$z$4$i = $540;
         } else {
          $523 = HEAP32[$a$3134$i>>2]|0;
          $524 = ($523|0)==(0);
          $525 = ((($a$3134$i)) + 4|0);
          $$a$3185$i = $524 ? $525 : $a$3134$i;
          $$a$3186$i = $$a$3185$i;$z$4$i = $z$3133$i;
         }
        } while(0);
        $541 = $517 ? $$31$i : $$a$3186$i;
        $542 = $z$4$i;
        $543 = $541;
        $544 = (($542) - ($543))|0;
        $545 = $544 >> 2;
        $546 = ($545|0)>($516|0);
        $547 = (($541) + ($516<<2)|0);
        $$z$4$i = $546 ? $547 : $z$4$i;
        $548 = HEAP32[$e2$i>>2]|0;
        $549 = (($548) + ($521))|0;
        HEAP32[$e2$i>>2] = $549;
        $550 = ($549|0)<(0);
        if ($550) {
         $519 = $549;$a$3134$i = $$a$3186$i;$z$3133$i = $$z$4$i;
        } else {
         $a$3$lcssa$i = $$a$3186$i;$z$3$lcssa$i = $$z$4$i;
         break;
        }
       }
      } else {
       $a$3$lcssa$i = $a$1$lcssa$i;$z$3$lcssa$i = $z$1$lcssa$i;
      }
      $551 = ($a$3$lcssa$i>>>0)<($z$3$lcssa$i>>>0);
      do {
       if ($551) {
        $552 = $a$3$lcssa$i;
        $553 = (($482) - ($552))|0;
        $554 = $553 >> 2;
        $555 = ($554*9)|0;
        $556 = HEAP32[$a$3$lcssa$i>>2]|0;
        $557 = ($556>>>0)<(10);
        if ($557) {
         $e$1$i = $555;
         break;
        } else {
         $e$0123$i = $555;$i$0122$i = 10;
        }
        while(1) {
         $558 = ($i$0122$i*10)|0;
         $559 = (($e$0123$i) + 1)|0;
         $560 = ($556>>>0)<($558>>>0);
         if ($560) {
          $e$1$i = $559;
          break;
         } else {
          $e$0123$i = $559;$i$0122$i = $558;
         }
        }
       } else {
        $e$1$i = 0;
       }
      } while(0);
      $561 = ($396|0)!=(102);
      $562 = $561 ? $e$1$i : 0;
      $563 = (($$p$i) - ($562))|0;
      $564 = ($396|0)==(103);
      $565 = ($$p$i|0)!=(0);
      $566 = $565 & $564;
      $$neg52$i = $566 << 31 >> 31;
      $567 = (($563) + ($$neg52$i))|0;
      $568 = $z$3$lcssa$i;
      $569 = (($568) - ($482))|0;
      $570 = $569 >> 2;
      $571 = ($570*9)|0;
      $572 = (($571) + -9)|0;
      $573 = ($567|0)<($572|0);
      if ($573) {
       $574 = (($567) + 9216)|0;
       $575 = (($574|0) / 9)&-1;
       $$sum$i = (($575) + -1023)|0;
       $576 = (($$31$i) + ($$sum$i<<2)|0);
       $577 = (($574|0) % 9)&-1;
       $j$0115$i = (($577) + 1)|0;
       $578 = ($j$0115$i|0)<(9);
       if ($578) {
        $i$1116$i = 10;$j$0117$i = $j$0115$i;
        while(1) {
         $579 = ($i$1116$i*10)|0;
         $j$0$i = (($j$0117$i) + 1)|0;
         $exitcond$i = ($j$0$i|0)==(9);
         if ($exitcond$i) {
          $i$1$lcssa$i = $579;
          break;
         } else {
          $i$1116$i = $579;$j$0117$i = $j$0$i;
         }
        }
       } else {
        $i$1$lcssa$i = 10;
       }
       $580 = HEAP32[$576>>2]|0;
       $581 = (($580>>>0) % ($i$1$lcssa$i>>>0))&-1;
       $582 = ($581|0)==(0);
       if ($582) {
        $$sum15$i = (($575) + -1022)|0;
        $583 = (($$31$i) + ($$sum15$i<<2)|0);
        $584 = ($583|0)==($z$3$lcssa$i|0);
        if ($584) {
         $a$7$i = $a$3$lcssa$i;$d$3$i = $576;$e$3$i = $e$1$i;
        } else {
         label = 163;
        }
       } else {
        label = 163;
       }
       do {
        if ((label|0) == 163) {
         label = 0;
         $585 = (($580>>>0) / ($i$1$lcssa$i>>>0))&-1;
         $586 = $585 & 1;
         $587 = ($586|0)==(0);
         $$20$i = $587 ? 9007199254740992.0 : 9007199254740994.0;
         $588 = (($i$1$lcssa$i|0) / 2)&-1;
         $589 = ($581>>>0)<($588>>>0);
         do {
          if ($589) {
           $small$0$i = 0.5;
          } else {
           $590 = ($581|0)==($588|0);
           if ($590) {
            $$sum16$i = (($575) + -1022)|0;
            $591 = (($$31$i) + ($$sum16$i<<2)|0);
            $592 = ($591|0)==($z$3$lcssa$i|0);
            if ($592) {
             $small$0$i = 1.0;
             break;
            }
           }
           $small$0$i = 1.5;
          }
         } while(0);
         $593 = ($pl$0$i|0)==(0);
         do {
          if ($593) {
           $round6$1$i = $$20$i;$small$1$i = $small$0$i;
          } else {
           $594 = HEAP8[$prefix$0$i>>0]|0;
           $595 = ($594<<24>>24)==(45);
           if (!($595)) {
            $round6$1$i = $$20$i;$small$1$i = $small$0$i;
            break;
           }
           $596 = -$$20$i;
           $597 = -$small$0$i;
           $round6$1$i = $596;$small$1$i = $597;
          }
         } while(0);
         $598 = (($580) - ($581))|0;
         HEAP32[$576>>2] = $598;
         $599 = $round6$1$i + $small$1$i;
         $600 = $599 != $round6$1$i;
         if (!($600)) {
          $a$7$i = $a$3$lcssa$i;$d$3$i = $576;$e$3$i = $e$1$i;
          break;
         }
         $601 = (($598) + ($i$1$lcssa$i))|0;
         HEAP32[$576>>2] = $601;
         $602 = ($601>>>0)>(999999999);
         if ($602) {
          $a$5109$i = $a$3$lcssa$i;$d$2108$i = $576;
          while(1) {
           $603 = ((($d$2108$i)) + -4|0);
           HEAP32[$d$2108$i>>2] = 0;
           $604 = ($603>>>0)<($a$5109$i>>>0);
           if ($604) {
            $605 = ((($a$5109$i)) + -4|0);
            HEAP32[$605>>2] = 0;
            $a$6$i = $605;
           } else {
            $a$6$i = $a$5109$i;
           }
           $606 = HEAP32[$603>>2]|0;
           $607 = (($606) + 1)|0;
           HEAP32[$603>>2] = $607;
           $608 = ($607>>>0)>(999999999);
           if ($608) {
            $a$5109$i = $a$6$i;$d$2108$i = $603;
           } else {
            $a$5$lcssa$i = $a$6$i;$d$2$lcssa$i = $603;
            break;
           }
          }
         } else {
          $a$5$lcssa$i = $a$3$lcssa$i;$d$2$lcssa$i = $576;
         }
         $609 = $a$5$lcssa$i;
         $610 = (($482) - ($609))|0;
         $611 = $610 >> 2;
         $612 = ($611*9)|0;
         $613 = HEAP32[$a$5$lcssa$i>>2]|0;
         $614 = ($613>>>0)<(10);
         if ($614) {
          $a$7$i = $a$5$lcssa$i;$d$3$i = $d$2$lcssa$i;$e$3$i = $612;
          break;
         } else {
          $e$2104$i = $612;$i$2103$i = 10;
         }
         while(1) {
          $615 = ($i$2103$i*10)|0;
          $616 = (($e$2104$i) + 1)|0;
          $617 = ($613>>>0)<($615>>>0);
          if ($617) {
           $a$7$i = $a$5$lcssa$i;$d$3$i = $d$2$lcssa$i;$e$3$i = $616;
           break;
          } else {
           $e$2104$i = $616;$i$2103$i = $615;
          }
         }
        }
       } while(0);
       $618 = ((($d$3$i)) + 4|0);
       $619 = ($z$3$lcssa$i>>>0)>($618>>>0);
       $$z$3$i = $619 ? $618 : $z$3$lcssa$i;
       $a$8$ph$i = $a$7$i;$e$4$ph$i = $e$3$i;$z$6$ph$i = $$z$3$i;
      } else {
       $a$8$ph$i = $a$3$lcssa$i;$e$4$ph$i = $e$1$i;$z$6$ph$i = $z$3$lcssa$i;
      }
      $620 = (0 - ($e$4$ph$i))|0;
      $z$6$i = $z$6$ph$i;
      while(1) {
       $621 = ($z$6$i>>>0)>($a$8$ph$i>>>0);
       if (!($621)) {
        $$lcssa159$i = 0;$z$6$i$lcssa = $z$6$i;
        break;
       }
       $622 = ((($z$6$i)) + -4|0);
       $623 = HEAP32[$622>>2]|0;
       $624 = ($623|0)==(0);
       if ($624) {
        $z$6$i = $622;
       } else {
        $$lcssa159$i = 1;$z$6$i$lcssa = $z$6$i;
        break;
       }
      }
      do {
       if ($564) {
        $625 = $565&1;
        $626 = $625 ^ 1;
        $$p$$i = (($626) + ($$p$i))|0;
        $627 = ($$p$$i|0)>($e$4$ph$i|0);
        $628 = ($e$4$ph$i|0)>(-5);
        $or$cond6$i = $627 & $628;
        if ($or$cond6$i) {
         $629 = (($t$0) + -1)|0;
         $$neg53$i = (($$p$$i) + -1)|0;
         $630 = (($$neg53$i) - ($e$4$ph$i))|0;
         $$013$i = $629;$$210$i = $630;
        } else {
         $631 = (($t$0) + -2)|0;
         $632 = (($$p$$i) + -1)|0;
         $$013$i = $631;$$210$i = $632;
        }
        $633 = $fl$1$ & 8;
        $634 = ($633|0)==(0);
        if (!($634)) {
         $$114$i = $$013$i;$$311$i = $$210$i;$$pre$phi184$iZ2D = $633;
         break;
        }
        do {
         if ($$lcssa159$i) {
          $635 = ((($z$6$i$lcssa)) + -4|0);
          $636 = HEAP32[$635>>2]|0;
          $637 = ($636|0)==(0);
          if ($637) {
           $j$2$i = 9;
           break;
          }
          $638 = (($636>>>0) % 10)&-1;
          $639 = ($638|0)==(0);
          if ($639) {
           $i$399$i = 10;$j$1100$i = 0;
          } else {
           $j$2$i = 0;
           break;
          }
          while(1) {
           $640 = ($i$399$i*10)|0;
           $641 = (($j$1100$i) + 1)|0;
           $642 = (($636>>>0) % ($640>>>0))&-1;
           $643 = ($642|0)==(0);
           if ($643) {
            $i$399$i = $640;$j$1100$i = $641;
           } else {
            $j$2$i = $641;
            break;
           }
          }
         } else {
          $j$2$i = 9;
         }
        } while(0);
        $644 = $$013$i | 32;
        $645 = ($644|0)==(102);
        $646 = $z$6$i$lcssa;
        $647 = (($646) - ($482))|0;
        $648 = $647 >> 2;
        $649 = ($648*9)|0;
        $650 = (($649) + -9)|0;
        if ($645) {
         $651 = (($650) - ($j$2$i))|0;
         $652 = ($651|0)<(0);
         $$21$i = $652 ? 0 : $651;
         $653 = ($$210$i|0)<($$21$i|0);
         $$210$$22$i = $653 ? $$210$i : $$21$i;
         $$114$i = $$013$i;$$311$i = $$210$$22$i;$$pre$phi184$iZ2D = 0;
         break;
        } else {
         $654 = (($650) + ($e$4$ph$i))|0;
         $655 = (($654) - ($j$2$i))|0;
         $656 = ($655|0)<(0);
         $$23$i = $656 ? 0 : $655;
         $657 = ($$210$i|0)<($$23$i|0);
         $$210$$24$i = $657 ? $$210$i : $$23$i;
         $$114$i = $$013$i;$$311$i = $$210$$24$i;$$pre$phi184$iZ2D = 0;
         break;
        }
       } else {
        $$pre183$i = $fl$1$ & 8;
        $$114$i = $t$0;$$311$i = $$p$i;$$pre$phi184$iZ2D = $$pre183$i;
       }
      } while(0);
      $658 = $$311$i | $$pre$phi184$iZ2D;
      $659 = ($658|0)!=(0);
      $660 = $659&1;
      $661 = $$114$i | 32;
      $662 = ($661|0)==(102);
      if ($662) {
       $663 = ($e$4$ph$i|0)>(0);
       $664 = $663 ? $e$4$ph$i : 0;
       $$pn$i = $664;$estr$2$i = 0;
      } else {
       $665 = ($e$4$ph$i|0)<(0);
       $666 = $665 ? $620 : $e$4$ph$i;
       $667 = ($666|0)<(0);
       $668 = $667 << 31 >> 31;
       $669 = (_fmt_u($666,$668,$5)|0);
       $670 = $669;
       $671 = (($8) - ($670))|0;
       $672 = ($671|0)<(2);
       if ($672) {
        $estr$193$i = $669;
        while(1) {
         $673 = ((($estr$193$i)) + -1|0);
         HEAP8[$673>>0] = 48;
         $674 = $673;
         $675 = (($8) - ($674))|0;
         $676 = ($675|0)<(2);
         if ($676) {
          $estr$193$i = $673;
         } else {
          $estr$1$lcssa$i = $673;
          break;
         }
        }
       } else {
        $estr$1$lcssa$i = $669;
       }
       $677 = $e$4$ph$i >> 31;
       $678 = $677 & 2;
       $679 = (($678) + 43)|0;
       $680 = $679&255;
       $681 = ((($estr$1$lcssa$i)) + -1|0);
       HEAP8[$681>>0] = $680;
       $682 = $$114$i&255;
       $683 = ((($estr$1$lcssa$i)) + -2|0);
       HEAP8[$683>>0] = $682;
       $684 = $683;
       $685 = (($8) - ($684))|0;
       $$pn$i = $685;$estr$2$i = $683;
      }
      $686 = (($pl$0$i) + 1)|0;
      $687 = (($686) + ($$311$i))|0;
      $l$1$i = (($687) + ($660))|0;
      $688 = (($l$1$i) + ($$pn$i))|0;
      _pad($f,32,$w$1,$688,$fl$1$);
      $689 = HEAP32[$f>>2]|0;
      $690 = $689 & 32;
      $691 = ($690|0)==(0);
      if ($691) {
       (___fwritex($prefix$0$i,$pl$0$i,$f)|0);
      }
      $692 = $fl$1$ ^ 65536;
      _pad($f,48,$w$1,$688,$692);
      do {
       if ($662) {
        $693 = ($a$8$ph$i>>>0)>($$31$i>>>0);
        $r$0$a$8$i = $693 ? $$31$i : $a$8$ph$i;
        $d$482$i = $r$0$a$8$i;
        while(1) {
         $694 = HEAP32[$d$482$i>>2]|0;
         $695 = (_fmt_u($694,0,$13)|0);
         $696 = ($d$482$i|0)==($r$0$a$8$i|0);
         do {
          if ($696) {
           $700 = ($695|0)==($13|0);
           if (!($700)) {
            $s7$1$i = $695;
            break;
           }
           HEAP8[$15>>0] = 48;
           $s7$1$i = $15;
          } else {
           $697 = ($695>>>0)>($buf$i>>>0);
           if ($697) {
            $s7$079$i = $695;
           } else {
            $s7$1$i = $695;
            break;
           }
           while(1) {
            $698 = ((($s7$079$i)) + -1|0);
            HEAP8[$698>>0] = 48;
            $699 = ($698>>>0)>($buf$i>>>0);
            if ($699) {
             $s7$079$i = $698;
            } else {
             $s7$1$i = $698;
             break;
            }
           }
          }
         } while(0);
         $701 = HEAP32[$f>>2]|0;
         $702 = $701 & 32;
         $703 = ($702|0)==(0);
         if ($703) {
          $704 = $s7$1$i;
          $705 = (($14) - ($704))|0;
          (___fwritex($s7$1$i,$705,$f)|0);
         }
         $706 = ((($d$482$i)) + 4|0);
         $707 = ($706>>>0)>($$31$i>>>0);
         if ($707) {
          $$lcssa339 = $706;
          break;
         } else {
          $d$482$i = $706;
         }
        }
        $708 = ($658|0)==(0);
        do {
         if (!($708)) {
          $709 = HEAP32[$f>>2]|0;
          $710 = $709 & 32;
          $711 = ($710|0)==(0);
          if (!($711)) {
           break;
          }
          (___fwritex(23953,1,$f)|0);
         }
        } while(0);
        $712 = ($$lcssa339>>>0)<($z$6$i$lcssa>>>0);
        $713 = ($$311$i|0)>(0);
        $714 = $713 & $712;
        if ($714) {
         $$41276$i = $$311$i;$d$575$i = $$lcssa339;
         while(1) {
          $715 = HEAP32[$d$575$i>>2]|0;
          $716 = (_fmt_u($715,0,$13)|0);
          $717 = ($716>>>0)>($buf$i>>>0);
          if ($717) {
           $s8$070$i = $716;
           while(1) {
            $718 = ((($s8$070$i)) + -1|0);
            HEAP8[$718>>0] = 48;
            $719 = ($718>>>0)>($buf$i>>>0);
            if ($719) {
             $s8$070$i = $718;
            } else {
             $s8$0$lcssa$i = $718;
             break;
            }
           }
          } else {
           $s8$0$lcssa$i = $716;
          }
          $720 = HEAP32[$f>>2]|0;
          $721 = $720 & 32;
          $722 = ($721|0)==(0);
          if ($722) {
           $723 = ($$41276$i|0)>(9);
           $724 = $723 ? 9 : $$41276$i;
           (___fwritex($s8$0$lcssa$i,$724,$f)|0);
          }
          $725 = ((($d$575$i)) + 4|0);
          $726 = (($$41276$i) + -9)|0;
          $727 = ($725>>>0)<($z$6$i$lcssa>>>0);
          $728 = ($$41276$i|0)>(9);
          $729 = $728 & $727;
          if ($729) {
           $$41276$i = $726;$d$575$i = $725;
          } else {
           $$412$lcssa$i = $726;
           break;
          }
         }
        } else {
         $$412$lcssa$i = $$311$i;
        }
        $730 = (($$412$lcssa$i) + 9)|0;
        _pad($f,48,$730,9,0);
       } else {
        $731 = ((($a$8$ph$i)) + 4|0);
        $z$6$$i = $$lcssa159$i ? $z$6$i$lcssa : $731;
        $732 = ($$311$i|0)>(-1);
        if ($732) {
         $733 = ($$pre$phi184$iZ2D|0)==(0);
         $$587$i = $$311$i;$d$686$i = $a$8$ph$i;
         while(1) {
          $734 = HEAP32[$d$686$i>>2]|0;
          $735 = (_fmt_u($734,0,$13)|0);
          $736 = ($735|0)==($13|0);
          if ($736) {
           HEAP8[$15>>0] = 48;
           $s9$0$i = $15;
          } else {
           $s9$0$i = $735;
          }
          $737 = ($d$686$i|0)==($a$8$ph$i|0);
          do {
           if ($737) {
            $741 = ((($s9$0$i)) + 1|0);
            $742 = HEAP32[$f>>2]|0;
            $743 = $742 & 32;
            $744 = ($743|0)==(0);
            if ($744) {
             (___fwritex($s9$0$i,1,$f)|0);
            }
            $745 = ($$587$i|0)<(1);
            $or$cond29$i = $733 & $745;
            if ($or$cond29$i) {
             $s9$2$i = $741;
             break;
            }
            $746 = HEAP32[$f>>2]|0;
            $747 = $746 & 32;
            $748 = ($747|0)==(0);
            if (!($748)) {
             $s9$2$i = $741;
             break;
            }
            (___fwritex(23953,1,$f)|0);
            $s9$2$i = $741;
           } else {
            $738 = ($s9$0$i>>>0)>($buf$i>>>0);
            if ($738) {
             $s9$183$i = $s9$0$i;
            } else {
             $s9$2$i = $s9$0$i;
             break;
            }
            while(1) {
             $739 = ((($s9$183$i)) + -1|0);
             HEAP8[$739>>0] = 48;
             $740 = ($739>>>0)>($buf$i>>>0);
             if ($740) {
              $s9$183$i = $739;
             } else {
              $s9$2$i = $739;
              break;
             }
            }
           }
          } while(0);
          $749 = $s9$2$i;
          $750 = (($14) - ($749))|0;
          $751 = HEAP32[$f>>2]|0;
          $752 = $751 & 32;
          $753 = ($752|0)==(0);
          if ($753) {
           $754 = ($$587$i|0)>($750|0);
           $755 = $754 ? $750 : $$587$i;
           (___fwritex($s9$2$i,$755,$f)|0);
          }
          $756 = (($$587$i) - ($750))|0;
          $757 = ((($d$686$i)) + 4|0);
          $758 = ($757>>>0)<($z$6$$i>>>0);
          $759 = ($756|0)>(-1);
          $760 = $758 & $759;
          if ($760) {
           $$587$i = $756;$d$686$i = $757;
          } else {
           $$5$lcssa$i = $756;
           break;
          }
         }
        } else {
         $$5$lcssa$i = $$311$i;
        }
        $761 = (($$5$lcssa$i) + 18)|0;
        _pad($f,48,$761,18,0);
        $762 = HEAP32[$f>>2]|0;
        $763 = $762 & 32;
        $764 = ($763|0)==(0);
        if (!($764)) {
         break;
        }
        $765 = $estr$2$i;
        $766 = (($8) - ($765))|0;
        (___fwritex($estr$2$i,$766,$f)|0);
       }
      } while(0);
      $767 = $fl$1$ ^ 8192;
      _pad($f,32,$w$1,$688,$767);
      $768 = ($688|0)<($w$1|0);
      $w$30$i = $768 ? $w$1 : $688;
      $$0$i = $w$30$i;
     } else {
      $376 = $t$0 & 32;
      $377 = ($376|0)!=(0);
      $378 = $377 ? 23937 : 23941;
      $379 = ($$07$i != $$07$i) | (0.0 != 0.0);
      $380 = $377 ? 23945 : 23949;
      $pl$1$i = $379 ? 0 : $pl$0$i;
      $s1$0$i = $379 ? $380 : $378;
      $381 = (($pl$1$i) + 3)|0;
      _pad($f,32,$w$1,$381,$175);
      $382 = HEAP32[$f>>2]|0;
      $383 = $382 & 32;
      $384 = ($383|0)==(0);
      if ($384) {
       (___fwritex($prefix$0$i,$pl$1$i,$f)|0);
       $$pre$i = HEAP32[$f>>2]|0;
       $386 = $$pre$i;
      } else {
       $386 = $382;
      }
      $385 = $386 & 32;
      $387 = ($385|0)==(0);
      if ($387) {
       (___fwritex($s1$0$i,3,$f)|0);
      }
      $388 = $fl$1$ ^ 8192;
      _pad($f,32,$w$1,$381,$388);
      $389 = ($381|0)<($w$1|0);
      $390 = $389 ? $w$1 : $381;
      $$0$i = $390;
     }
    } while(0);
    $cnt$0 = $cnt$1;$fmt41 = $$lcssa323;$l$0 = $$0$i;$l10n$0 = $l10n$3;
    continue L1;
    break;
   }
   default: {
    $a$2 = $fmt41;$fl$6 = $fl$1$;$p$5 = $p$0;$pl$2 = 0;$prefix$2 = 23901;$z$2 = $1;
   }
   }
  } while(0);
  L313: do {
   if ((label|0) == 64) {
    label = 0;
    $206 = $arg;
    $207 = $206;
    $208 = HEAP32[$207>>2]|0;
    $209 = (($206) + 4)|0;
    $210 = $209;
    $211 = HEAP32[$210>>2]|0;
    $212 = $t$1 & 32;
    $213 = ($208|0)==(0);
    $214 = ($211|0)==(0);
    $215 = $213 & $214;
    if ($215) {
     $a$0 = $1;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 0;$prefix$1 = 23901;
     label = 77;
    } else {
     $$012$i = $1;$217 = $208;$224 = $211;
     while(1) {
      $216 = $217 & 15;
      $218 = (23885 + ($216)|0);
      $219 = HEAP8[$218>>0]|0;
      $220 = $219&255;
      $221 = $220 | $212;
      $222 = $221&255;
      $223 = ((($$012$i)) + -1|0);
      HEAP8[$223>>0] = $222;
      $225 = (_bitshift64Lshr(($217|0),($224|0),4)|0);
      $226 = tempRet0;
      $227 = ($225|0)==(0);
      $228 = ($226|0)==(0);
      $229 = $227 & $228;
      if ($229) {
       $$lcssa344 = $223;
       break;
      } else {
       $$012$i = $223;$217 = $225;$224 = $226;
      }
     }
     $230 = $arg;
     $231 = $230;
     $232 = HEAP32[$231>>2]|0;
     $233 = (($230) + 4)|0;
     $234 = $233;
     $235 = HEAP32[$234>>2]|0;
     $236 = ($232|0)==(0);
     $237 = ($235|0)==(0);
     $238 = $236 & $237;
     $239 = $fl$3 & 8;
     $240 = ($239|0)==(0);
     $or$cond17 = $240 | $238;
     if ($or$cond17) {
      $a$0 = $$lcssa344;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 0;$prefix$1 = 23901;
      label = 77;
     } else {
      $241 = $t$1 >> 4;
      $242 = (23901 + ($241)|0);
      $a$0 = $$lcssa344;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 2;$prefix$1 = $242;
      label = 77;
     }
    }
   }
   else if ((label|0) == 76) {
    label = 0;
    $288 = (_fmt_u($286,$287,$1)|0);
    $a$0 = $288;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $pl$0;$prefix$1 = $prefix$0;
    label = 77;
   }
   else if ((label|0) == 82) {
    label = 0;
    $320 = (_memchr($a$1,0,$p$0)|0);
    $321 = ($320|0)==(0|0);
    $322 = $320;
    $323 = $a$1;
    $324 = (($322) - ($323))|0;
    $325 = (($a$1) + ($p$0)|0);
    $z$1 = $321 ? $325 : $320;
    $p$3 = $321 ? $p$0 : $324;
    $a$2 = $a$1;$fl$6 = $175;$p$5 = $p$3;$pl$2 = 0;$prefix$2 = 23901;$z$2 = $z$1;
   }
   else if ((label|0) == 86) {
    label = 0;
    $333 = HEAP32[$arg>>2]|0;
    $i$0114 = 0;$l$1113 = 0;$ws$0115 = $333;
    while(1) {
     $334 = HEAP32[$ws$0115>>2]|0;
     $335 = ($334|0)==(0);
     if ($335) {
      $i$0$lcssa = $i$0114;$l$2 = $l$1113;
      break;
     }
     $336 = (_wctomb($mb,$334)|0);
     $337 = ($336|0)<(0);
     $338 = (($p$4198) - ($i$0114))|0;
     $339 = ($336>>>0)>($338>>>0);
     $or$cond20 = $337 | $339;
     if ($or$cond20) {
      $i$0$lcssa = $i$0114;$l$2 = $336;
      break;
     }
     $340 = ((($ws$0115)) + 4|0);
     $341 = (($336) + ($i$0114))|0;
     $342 = ($p$4198>>>0)>($341>>>0);
     if ($342) {
      $i$0114 = $341;$l$1113 = $336;$ws$0115 = $340;
     } else {
      $i$0$lcssa = $341;$l$2 = $336;
      break;
     }
    }
    $343 = ($l$2|0)<(0);
    if ($343) {
     $$0 = -1;
     break L1;
    }
    _pad($f,32,$w$1,$i$0$lcssa,$fl$1$);
    $344 = ($i$0$lcssa|0)==(0);
    if ($344) {
     $i$0$lcssa200 = 0;
     label = 98;
    } else {
     $345 = HEAP32[$arg>>2]|0;
     $i$1125 = 0;$ws$1126 = $345;
     while(1) {
      $346 = HEAP32[$ws$1126>>2]|0;
      $347 = ($346|0)==(0);
      if ($347) {
       $i$0$lcssa200 = $i$0$lcssa;
       label = 98;
       break L313;
      }
      $348 = ((($ws$1126)) + 4|0);
      $349 = (_wctomb($mb,$346)|0);
      $350 = (($349) + ($i$1125))|0;
      $351 = ($350|0)>($i$0$lcssa|0);
      if ($351) {
       $i$0$lcssa200 = $i$0$lcssa;
       label = 98;
       break L313;
      }
      $352 = HEAP32[$f>>2]|0;
      $353 = $352 & 32;
      $354 = ($353|0)==(0);
      if ($354) {
       (___fwritex($mb,$349,$f)|0);
      }
      $355 = ($350>>>0)<($i$0$lcssa>>>0);
      if ($355) {
       $i$1125 = $350;$ws$1126 = $348;
      } else {
       $i$0$lcssa200 = $i$0$lcssa;
       label = 98;
       break;
      }
     }
    }
   }
  } while(0);
  if ((label|0) == 98) {
   label = 0;
   $356 = $fl$1$ ^ 8192;
   _pad($f,32,$w$1,$i$0$lcssa200,$356);
   $357 = ($w$1|0)>($i$0$lcssa200|0);
   $358 = $357 ? $w$1 : $i$0$lcssa200;
   $cnt$0 = $cnt$1;$fmt41 = $$lcssa323;$l$0 = $358;$l10n$0 = $l10n$3;
   continue;
  }
  if ((label|0) == 77) {
   label = 0;
   $289 = ($p$2|0)>(-1);
   $290 = $fl$4 & -65537;
   $$fl$4 = $289 ? $290 : $fl$4;
   $291 = $arg;
   $292 = $291;
   $293 = HEAP32[$292>>2]|0;
   $294 = (($291) + 4)|0;
   $295 = $294;
   $296 = HEAP32[$295>>2]|0;
   $297 = ($293|0)!=(0);
   $298 = ($296|0)!=(0);
   $299 = $297 | $298;
   $300 = ($p$2|0)!=(0);
   $or$cond = $300 | $299;
   if ($or$cond) {
    $301 = $a$0;
    $302 = (($2) - ($301))|0;
    $303 = $299&1;
    $304 = $303 ^ 1;
    $305 = (($304) + ($302))|0;
    $306 = ($p$2|0)>($305|0);
    $p$2$ = $306 ? $p$2 : $305;
    $a$2 = $a$0;$fl$6 = $$fl$4;$p$5 = $p$2$;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $1;
   } else {
    $a$2 = $1;$fl$6 = $$fl$4;$p$5 = 0;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $1;
   }
  }
  $769 = $z$2;
  $770 = $a$2;
  $771 = (($769) - ($770))|0;
  $772 = ($p$5|0)<($771|0);
  $$p$5 = $772 ? $771 : $p$5;
  $773 = (($pl$2) + ($$p$5))|0;
  $774 = ($w$1|0)<($773|0);
  $w$2 = $774 ? $773 : $w$1;
  _pad($f,32,$w$2,$773,$fl$6);
  $775 = HEAP32[$f>>2]|0;
  $776 = $775 & 32;
  $777 = ($776|0)==(0);
  if ($777) {
   (___fwritex($prefix$2,$pl$2,$f)|0);
  }
  $778 = $fl$6 ^ 65536;
  _pad($f,48,$w$2,$773,$778);
  _pad($f,48,$$p$5,$771,0);
  $779 = HEAP32[$f>>2]|0;
  $780 = $779 & 32;
  $781 = ($780|0)==(0);
  if ($781) {
   (___fwritex($a$2,$771,$f)|0);
  }
  $782 = $fl$6 ^ 8192;
  _pad($f,32,$w$2,$773,$782);
  $cnt$0 = $cnt$1;$fmt41 = $$lcssa323;$l$0 = $w$2;$l10n$0 = $l10n$3;
 }
 L348: do {
  if ((label|0) == 245) {
   $783 = ($f|0)==(0|0);
   if ($783) {
    $784 = ($l10n$0$lcssa|0)==(0);
    if ($784) {
     $$0 = 0;
    } else {
     $i$2100 = 1;
     while(1) {
      $785 = (($nl_type) + ($i$2100<<2)|0);
      $786 = HEAP32[$785>>2]|0;
      $787 = ($786|0)==(0);
      if ($787) {
       $i$2100$lcssa = $i$2100;
       break;
      }
      $789 = (($nl_arg) + ($i$2100<<3)|0);
      _pop_arg($789,$786,$ap);
      $790 = (($i$2100) + 1)|0;
      $791 = ($790|0)<(10);
      if ($791) {
       $i$2100 = $790;
      } else {
       $$0 = 1;
       break L348;
      }
     }
     $788 = ($i$2100$lcssa|0)<(10);
     if ($788) {
      $i$398 = $i$2100$lcssa;
      while(1) {
       $794 = (($nl_type) + ($i$398<<2)|0);
       $795 = HEAP32[$794>>2]|0;
       $796 = ($795|0)==(0);
       $793 = (($i$398) + 1)|0;
       if (!($796)) {
        $$0 = -1;
        break L348;
       }
       $792 = ($793|0)<(10);
       if ($792) {
        $i$398 = $793;
       } else {
        $$0 = 1;
        break;
       }
      }
     } else {
      $$0 = 1;
     }
    }
   } else {
    $$0 = $cnt$1$lcssa;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _do_read($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___string_read($f,$buf,$len)|0);
 return ($0|0);
}
function _strtox($s,$p,$prec) {
 $s = $s|0;
 $p = $p|0;
 $prec = $prec|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f = 0, dest = 0, label = 0;
 var sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $f = sp;
 dest=$f; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = ((($f)) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = ((($f)) + 8|0);
 HEAP32[$1>>2] = (-1);
 $2 = ((($f)) + 44|0);
 HEAP32[$2>>2] = $s;
 $3 = ((($f)) + 76|0);
 HEAP32[$3>>2] = -1;
 ___shlim($f,0);
 $4 = (+___floatscan($f,$prec,1));
 $5 = ((($f)) + 108|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$0>>2]|0;
 $8 = HEAP32[$1>>2]|0;
 $9 = $7;
 $10 = $8;
 $11 = (($9) - ($10))|0;
 $12 = (($11) + ($6))|0;
 $13 = ($p|0)==(0|0);
 if (!($13)) {
  $14 = ($12|0)!=(0);
  $15 = (($s) + ($12)|0);
  $16 = $14 ? $15 : $s;
  HEAP32[$p>>2] = $16;
 }
 STACKTOP = sp;return (+$4);
}
function _strtox535($s,$p,$base,$0,$1) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $f = sp;
 HEAP32[$f>>2] = 0;
 $2 = ((($f)) + 4|0);
 HEAP32[$2>>2] = $s;
 $3 = ((($f)) + 44|0);
 HEAP32[$3>>2] = $s;
 $4 = ($s|0)<(0|0);
 $5 = ((($s)) + 2147483647|0);
 $$sink = $4 ? (-1) : $5;
 $6 = ((($f)) + 8|0);
 HEAP32[$6>>2] = $$sink;
 $7 = ((($f)) + 76|0);
 HEAP32[$7>>2] = -1;
 ___shlim($f,0);
 $8 = (___intscan($f,$base,1,$0,$1)|0);
 $9 = tempRet0;
 $10 = ($p|0)==(0|0);
 if (!($10)) {
  $11 = ((($f)) + 108|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = HEAP32[$2>>2]|0;
  $14 = HEAP32[$6>>2]|0;
  $15 = $13;
  $16 = $14;
  $17 = (($15) + ($12))|0;
  $18 = (($17) - ($16))|0;
  $19 = (($s) + ($18)|0);
  HEAP32[$p>>2] = $19;
 }
 tempRet0 = ($9);
 STACKTOP = sp;return ($8|0);
}
function _sn_write($f,$s,$l) {
 $f = $f|0;
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $l$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($f)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = ($6>>>0)>($l>>>0);
 $l$ = $7 ? $l : $6;
 _memcpy(($3|0),($s|0),($l$|0))|0;
 $8 = HEAP32[$2>>2]|0;
 $9 = (($8) + ($l$)|0);
 HEAP32[$2>>2] = $9;
 return ($l|0);
}
function _pop_arg($arg,$type,$ap) {
 $arg = $arg|0;
 $type = $type|0;
 $ap = $ap|0;
 var $$mask = 0, $$mask1 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0.0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0.0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0;
 var $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current5 = 0, $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next6 = 0, $arglist_next9 = 0, $expanded = 0, $expanded28 = 0, $expanded30 = 0, $expanded31 = 0;
 var $expanded32 = 0, $expanded34 = 0, $expanded35 = 0, $expanded37 = 0, $expanded38 = 0, $expanded39 = 0, $expanded41 = 0, $expanded42 = 0, $expanded44 = 0, $expanded45 = 0, $expanded46 = 0, $expanded48 = 0, $expanded49 = 0, $expanded51 = 0, $expanded52 = 0, $expanded53 = 0, $expanded55 = 0, $expanded56 = 0, $expanded58 = 0, $expanded59 = 0;
 var $expanded60 = 0, $expanded62 = 0, $expanded63 = 0, $expanded65 = 0, $expanded66 = 0, $expanded67 = 0, $expanded69 = 0, $expanded70 = 0, $expanded72 = 0, $expanded73 = 0, $expanded74 = 0, $expanded76 = 0, $expanded77 = 0, $expanded79 = 0, $expanded80 = 0, $expanded81 = 0, $expanded83 = 0, $expanded84 = 0, $expanded86 = 0, $expanded87 = 0;
 var $expanded88 = 0, $expanded90 = 0, $expanded91 = 0, $expanded93 = 0, $expanded94 = 0, $expanded95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($type>>>0)>(20);
 L1: do {
  if (!($0)) {
   do {
    switch ($type|0) {
    case 9:  {
     $arglist_current = HEAP32[$ap>>2]|0;
     $1 = $arglist_current;
     $2 = ((0) + 4|0);
     $expanded28 = $2;
     $expanded = (($expanded28) - 1)|0;
     $3 = (($1) + ($expanded))|0;
     $4 = ((0) + 4|0);
     $expanded32 = $4;
     $expanded31 = (($expanded32) - 1)|0;
     $expanded30 = $expanded31 ^ -1;
     $5 = $3 & $expanded30;
     $6 = $5;
     $7 = HEAP32[$6>>2]|0;
     $arglist_next = ((($6)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next;
     HEAP32[$arg>>2] = $7;
     break L1;
     break;
    }
    case 10:  {
     $arglist_current2 = HEAP32[$ap>>2]|0;
     $8 = $arglist_current2;
     $9 = ((0) + 4|0);
     $expanded35 = $9;
     $expanded34 = (($expanded35) - 1)|0;
     $10 = (($8) + ($expanded34))|0;
     $11 = ((0) + 4|0);
     $expanded39 = $11;
     $expanded38 = (($expanded39) - 1)|0;
     $expanded37 = $expanded38 ^ -1;
     $12 = $10 & $expanded37;
     $13 = $12;
     $14 = HEAP32[$13>>2]|0;
     $arglist_next3 = ((($13)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next3;
     $15 = ($14|0)<(0);
     $16 = $15 << 31 >> 31;
     $17 = $arg;
     $18 = $17;
     HEAP32[$18>>2] = $14;
     $19 = (($17) + 4)|0;
     $20 = $19;
     HEAP32[$20>>2] = $16;
     break L1;
     break;
    }
    case 11:  {
     $arglist_current5 = HEAP32[$ap>>2]|0;
     $21 = $arglist_current5;
     $22 = ((0) + 4|0);
     $expanded42 = $22;
     $expanded41 = (($expanded42) - 1)|0;
     $23 = (($21) + ($expanded41))|0;
     $24 = ((0) + 4|0);
     $expanded46 = $24;
     $expanded45 = (($expanded46) - 1)|0;
     $expanded44 = $expanded45 ^ -1;
     $25 = $23 & $expanded44;
     $26 = $25;
     $27 = HEAP32[$26>>2]|0;
     $arglist_next6 = ((($26)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next6;
     $28 = $arg;
     $29 = $28;
     HEAP32[$29>>2] = $27;
     $30 = (($28) + 4)|0;
     $31 = $30;
     HEAP32[$31>>2] = 0;
     break L1;
     break;
    }
    case 12:  {
     $arglist_current8 = HEAP32[$ap>>2]|0;
     $32 = $arglist_current8;
     $33 = ((0) + 8|0);
     $expanded49 = $33;
     $expanded48 = (($expanded49) - 1)|0;
     $34 = (($32) + ($expanded48))|0;
     $35 = ((0) + 8|0);
     $expanded53 = $35;
     $expanded52 = (($expanded53) - 1)|0;
     $expanded51 = $expanded52 ^ -1;
     $36 = $34 & $expanded51;
     $37 = $36;
     $38 = $37;
     $39 = $38;
     $40 = HEAP32[$39>>2]|0;
     $41 = (($38) + 4)|0;
     $42 = $41;
     $43 = HEAP32[$42>>2]|0;
     $arglist_next9 = ((($37)) + 8|0);
     HEAP32[$ap>>2] = $arglist_next9;
     $44 = $arg;
     $45 = $44;
     HEAP32[$45>>2] = $40;
     $46 = (($44) + 4)|0;
     $47 = $46;
     HEAP32[$47>>2] = $43;
     break L1;
     break;
    }
    case 13:  {
     $arglist_current11 = HEAP32[$ap>>2]|0;
     $48 = $arglist_current11;
     $49 = ((0) + 4|0);
     $expanded56 = $49;
     $expanded55 = (($expanded56) - 1)|0;
     $50 = (($48) + ($expanded55))|0;
     $51 = ((0) + 4|0);
     $expanded60 = $51;
     $expanded59 = (($expanded60) - 1)|0;
     $expanded58 = $expanded59 ^ -1;
     $52 = $50 & $expanded58;
     $53 = $52;
     $54 = HEAP32[$53>>2]|0;
     $arglist_next12 = ((($53)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next12;
     $55 = $54&65535;
     $56 = $55 << 16 >> 16;
     $57 = ($56|0)<(0);
     $58 = $57 << 31 >> 31;
     $59 = $arg;
     $60 = $59;
     HEAP32[$60>>2] = $56;
     $61 = (($59) + 4)|0;
     $62 = $61;
     HEAP32[$62>>2] = $58;
     break L1;
     break;
    }
    case 14:  {
     $arglist_current14 = HEAP32[$ap>>2]|0;
     $63 = $arglist_current14;
     $64 = ((0) + 4|0);
     $expanded63 = $64;
     $expanded62 = (($expanded63) - 1)|0;
     $65 = (($63) + ($expanded62))|0;
     $66 = ((0) + 4|0);
     $expanded67 = $66;
     $expanded66 = (($expanded67) - 1)|0;
     $expanded65 = $expanded66 ^ -1;
     $67 = $65 & $expanded65;
     $68 = $67;
     $69 = HEAP32[$68>>2]|0;
     $arglist_next15 = ((($68)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next15;
     $$mask1 = $69 & 65535;
     $70 = $arg;
     $71 = $70;
     HEAP32[$71>>2] = $$mask1;
     $72 = (($70) + 4)|0;
     $73 = $72;
     HEAP32[$73>>2] = 0;
     break L1;
     break;
    }
    case 15:  {
     $arglist_current17 = HEAP32[$ap>>2]|0;
     $74 = $arglist_current17;
     $75 = ((0) + 4|0);
     $expanded70 = $75;
     $expanded69 = (($expanded70) - 1)|0;
     $76 = (($74) + ($expanded69))|0;
     $77 = ((0) + 4|0);
     $expanded74 = $77;
     $expanded73 = (($expanded74) - 1)|0;
     $expanded72 = $expanded73 ^ -1;
     $78 = $76 & $expanded72;
     $79 = $78;
     $80 = HEAP32[$79>>2]|0;
     $arglist_next18 = ((($79)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next18;
     $81 = $80&255;
     $82 = $81 << 24 >> 24;
     $83 = ($82|0)<(0);
     $84 = $83 << 31 >> 31;
     $85 = $arg;
     $86 = $85;
     HEAP32[$86>>2] = $82;
     $87 = (($85) + 4)|0;
     $88 = $87;
     HEAP32[$88>>2] = $84;
     break L1;
     break;
    }
    case 16:  {
     $arglist_current20 = HEAP32[$ap>>2]|0;
     $89 = $arglist_current20;
     $90 = ((0) + 4|0);
     $expanded77 = $90;
     $expanded76 = (($expanded77) - 1)|0;
     $91 = (($89) + ($expanded76))|0;
     $92 = ((0) + 4|0);
     $expanded81 = $92;
     $expanded80 = (($expanded81) - 1)|0;
     $expanded79 = $expanded80 ^ -1;
     $93 = $91 & $expanded79;
     $94 = $93;
     $95 = HEAP32[$94>>2]|0;
     $arglist_next21 = ((($94)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next21;
     $$mask = $95 & 255;
     $96 = $arg;
     $97 = $96;
     HEAP32[$97>>2] = $$mask;
     $98 = (($96) + 4)|0;
     $99 = $98;
     HEAP32[$99>>2] = 0;
     break L1;
     break;
    }
    case 17:  {
     $arglist_current23 = HEAP32[$ap>>2]|0;
     $100 = $arglist_current23;
     $101 = ((0) + 8|0);
     $expanded84 = $101;
     $expanded83 = (($expanded84) - 1)|0;
     $102 = (($100) + ($expanded83))|0;
     $103 = ((0) + 8|0);
     $expanded88 = $103;
     $expanded87 = (($expanded88) - 1)|0;
     $expanded86 = $expanded87 ^ -1;
     $104 = $102 & $expanded86;
     $105 = $104;
     $106 = +HEAPF64[$105>>3];
     $arglist_next24 = ((($105)) + 8|0);
     HEAP32[$ap>>2] = $arglist_next24;
     HEAPF64[$arg>>3] = $106;
     break L1;
     break;
    }
    case 18:  {
     $arglist_current26 = HEAP32[$ap>>2]|0;
     $107 = $arglist_current26;
     $108 = ((0) + 8|0);
     $expanded91 = $108;
     $expanded90 = (($expanded91) - 1)|0;
     $109 = (($107) + ($expanded90))|0;
     $110 = ((0) + 8|0);
     $expanded95 = $110;
     $expanded94 = (($expanded95) - 1)|0;
     $expanded93 = $expanded94 ^ -1;
     $111 = $109 & $expanded93;
     $112 = $111;
     $113 = +HEAPF64[$112>>3];
     $arglist_next27 = ((($112)) + 8|0);
     HEAP32[$ap>>2] = $arglist_next27;
     HEAPF64[$arg>>3] = $113;
     break L1;
     break;
    }
    default: {
     break L1;
    }
    }
   } while(0);
  }
 } while(0);
 return;
}
function _fmt_u($0,$1,$s) {
 $0 = $0|0;
 $1 = $1|0;
 $s = $s|0;
 var $$0$lcssa = 0, $$01$lcssa$off0 = 0, $$05 = 0, $$1$lcssa = 0, $$12 = 0, $$lcssa20 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $y$03 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1>>>0)>(0);
 $3 = ($0>>>0)>(4294967295);
 $4 = ($1|0)==(0);
 $5 = $4 & $3;
 $6 = $2 | $5;
 if ($6) {
  $$05 = $s;$7 = $0;$8 = $1;
  while(1) {
   $9 = (___uremdi3(($7|0),($8|0),10,0)|0);
   $10 = tempRet0;
   $11 = $9 | 48;
   $12 = $11&255;
   $13 = ((($$05)) + -1|0);
   HEAP8[$13>>0] = $12;
   $14 = (___udivdi3(($7|0),($8|0),10,0)|0);
   $15 = tempRet0;
   $16 = ($8>>>0)>(9);
   $17 = ($7>>>0)>(4294967295);
   $18 = ($8|0)==(9);
   $19 = $18 & $17;
   $20 = $16 | $19;
   if ($20) {
    $$05 = $13;$7 = $14;$8 = $15;
   } else {
    $$lcssa20 = $13;$28 = $14;$29 = $15;
    break;
   }
  }
  $$0$lcssa = $$lcssa20;$$01$lcssa$off0 = $28;
 } else {
  $$0$lcssa = $s;$$01$lcssa$off0 = $0;
 }
 $21 = ($$01$lcssa$off0|0)==(0);
 if ($21) {
  $$1$lcssa = $$0$lcssa;
 } else {
  $$12 = $$0$lcssa;$y$03 = $$01$lcssa$off0;
  while(1) {
   $22 = (($y$03>>>0) % 10)&-1;
   $23 = $22 | 48;
   $24 = $23&255;
   $25 = ((($$12)) + -1|0);
   HEAP8[$25>>0] = $24;
   $26 = (($y$03>>>0) / 10)&-1;
   $27 = ($y$03>>>0)<(10);
   if ($27) {
    $$1$lcssa = $25;
    break;
   } else {
    $$12 = $25;$y$03 = $26;
   }
  }
 }
 return ($$1$lcssa|0);
}
function _pad($f,$c,$w,$l,$fl) {
 $f = $f|0;
 $c = $c|0;
 $w = $w|0;
 $l = $l|0;
 $fl = $fl|0;
 var $$0$lcssa6 = 0, $$02 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $or$cond = 0, $pad = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $pad = sp;
 $0 = $fl & 73728;
 $1 = ($0|0)==(0);
 $2 = ($w|0)>($l|0);
 $or$cond = $2 & $1;
 do {
  if ($or$cond) {
   $3 = (($w) - ($l))|0;
   $4 = ($3>>>0)>(256);
   $5 = $4 ? 256 : $3;
   _memset(($pad|0),($c|0),($5|0))|0;
   $6 = ($3>>>0)>(255);
   $7 = HEAP32[$f>>2]|0;
   $8 = $7 & 32;
   $9 = ($8|0)==(0);
   if ($6) {
    $10 = (($w) - ($l))|0;
    $$02 = $3;$17 = $7;$18 = $9;
    while(1) {
     if ($18) {
      (___fwritex($pad,256,$f)|0);
      $$pre = HEAP32[$f>>2]|0;
      $14 = $$pre;
     } else {
      $14 = $17;
     }
     $11 = (($$02) + -256)|0;
     $12 = ($11>>>0)>(255);
     $13 = $14 & 32;
     $15 = ($13|0)==(0);
     if ($12) {
      $$02 = $11;$17 = $14;$18 = $15;
     } else {
      break;
     }
    }
    $16 = $10 & 255;
    if ($15) {
     $$0$lcssa6 = $16;
    } else {
     break;
    }
   } else {
    if ($9) {
     $$0$lcssa6 = $3;
    } else {
     break;
    }
   }
   (___fwritex($pad,$$0$lcssa6,$f)|0);
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNSt3__18ios_base4InitC2Ev($this) {
 $this = $this|0;
 var $$sum = 0, $$sum$i = 0, $$sum$i1 = 0, $$sum$i11 = 0, $$sum$i9 = 0, $$sum1$i = 0, $$sum1$i10 = 0, $$sum1$i12 = 0, $$sum1$i2 = 0, $$sum19 = 0, $$sum20 = 0, $$sum21 = 0, $$sum22 = 0, $$sum23 = 0, $$sum24 = 0, $$sum25 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0;
 var $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[3168>>2]|0;
 __ZNSt3__110__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t(7932,$0,7988);
 HEAP32[7252>>2] = (9064);
 HEAP32[(7260)>>2] = (9084);
 HEAP32[(7256)>>2] = 0;
 $1 = HEAP32[9052>>2]|0;
 $2 = (7252 + ($1)|0);
 __THREW__ = 0;
 invoke_vii(418,($2|0),(7932|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $5 = ___cxa_find_matching_catch()|0;
  $6 = tempRet0;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev((7260));
  ___resumeException($5|0);
  // unreachable;
 }
 $$sum$i = (($1) + 72)|0;
 $7 = (7252 + ($$sum$i)|0);
 HEAP32[$7>>2] = 0;
 $$sum1$i = (($1) + 76)|0;
 $8 = (7252 + ($$sum1$i)|0);
 HEAP32[$8>>2] = -1;
 $9 = HEAP32[3172>>2]|0;
 __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(8036,$9,(7996));
 HEAP32[7340>>2] = (9144);
 HEAP32[(7344)>>2] = (9164);
 $10 = HEAP32[9132>>2]|0;
 $11 = (7340 + ($10)|0);
 __THREW__ = 0;
 invoke_vii(418,($11|0),(8036|0));
 $12 = __THREW__; __THREW__ = 0;
 $13 = $12&1;
 if ($13) {
  $14 = ___cxa_find_matching_catch()|0;
  $15 = tempRet0;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev((7344));
  ___resumeException($14|0);
  // unreachable;
 }
 $$sum$i1 = (($10) + 72)|0;
 $16 = (7340 + ($$sum$i1)|0);
 HEAP32[$16>>2] = 0;
 $$sum1$i2 = (($10) + 76)|0;
 $17 = (7340 + ($$sum1$i2)|0);
 HEAP32[$17>>2] = -1;
 $18 = HEAP32[3164>>2]|0;
 __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(8084,$18,(8004));
 HEAP32[7424>>2] = (9144);
 HEAP32[(7428)>>2] = (9164);
 $19 = (7424 + ($10)|0);
 __THREW__ = 0;
 invoke_vii(418,($19|0),(8084|0));
 $20 = __THREW__; __THREW__ = 0;
 $21 = $20&1;
 if ($21) {
  $22 = ___cxa_find_matching_catch()|0;
  $23 = tempRet0;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev((7428));
  ___resumeException($22|0);
  // unreachable;
 }
 $24 = (7424 + ($$sum$i1)|0);
 HEAP32[$24>>2] = 0;
 $25 = (7424 + ($$sum1$i2)|0);
 HEAP32[$25>>2] = -1;
 $26 = HEAP32[7424>>2]|0;
 $27 = ((($26)) + -12|0);
 $28 = HEAP32[$27>>2]|0;
 $$sum = (($28) + 24)|0;
 $29 = (7424 + ($$sum)|0);
 $30 = HEAP32[$29>>2]|0;
 HEAP32[7508>>2] = (9144);
 HEAP32[(7512)>>2] = (9164);
 $31 = (7508 + ($10)|0);
 __THREW__ = 0;
 invoke_vii(418,($31|0),($30|0));
 $32 = __THREW__; __THREW__ = 0;
 $33 = $32&1;
 if ($33) {
  $34 = ___cxa_find_matching_catch()|0;
  $35 = tempRet0;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev((7512));
  ___resumeException($34|0);
  // unreachable;
 }
 $36 = (7508 + ($$sum$i1)|0);
 HEAP32[$36>>2] = 0;
 $37 = (7508 + ($$sum1$i2)|0);
 HEAP32[$37>>2] = -1;
 $38 = HEAP32[7252>>2]|0;
 $39 = ((($38)) + -12|0);
 $40 = HEAP32[$39>>2]|0;
 $$sum19 = (($40) + 72)|0;
 $41 = (7252 + ($$sum19)|0);
 HEAP32[$41>>2] = 7340;
 $42 = HEAP32[7424>>2]|0;
 $43 = ((($42)) + -12|0);
 $44 = HEAP32[$43>>2]|0;
 $$sum20 = (($44) + 4)|0;
 $45 = (7424 + ($$sum20)|0);
 $46 = HEAP32[$45>>2]|0;
 $47 = $46 | 8192;
 HEAP32[$45>>2] = $47;
 $48 = HEAP32[7424>>2]|0;
 $49 = ((($48)) + -12|0);
 $50 = HEAP32[$49>>2]|0;
 $$sum21 = (($50) + 72)|0;
 $51 = (7424 + ($$sum21)|0);
 HEAP32[$51>>2] = 7340;
 __ZNSt3__110__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t(8132,$0,(8012));
 HEAP32[7592>>2] = (9104);
 HEAP32[(7600)>>2] = (9124);
 HEAP32[(7596)>>2] = 0;
 $52 = HEAP32[9092>>2]|0;
 $53 = (7592 + ($52)|0);
 __THREW__ = 0;
 invoke_vii(418,($53|0),(8132|0));
 $54 = __THREW__; __THREW__ = 0;
 $55 = $54&1;
 if ($55) {
  $56 = ___cxa_find_matching_catch()|0;
  $57 = tempRet0;
  __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev((7600));
  ___resumeException($56|0);
  // unreachable;
 }
 $$sum$i9 = (($52) + 72)|0;
 $58 = (7592 + ($$sum$i9)|0);
 HEAP32[$58>>2] = 0;
 $$sum1$i10 = (($52) + 76)|0;
 $59 = (7592 + ($$sum1$i10)|0);
 HEAP32[$59>>2] = -1;
 __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(8188,$9,(8020));
 HEAP32[7680>>2] = (9184);
 HEAP32[(7684)>>2] = (9204);
 $60 = HEAP32[9172>>2]|0;
 $61 = (7680 + ($60)|0);
 __THREW__ = 0;
 invoke_vii(418,($61|0),(8188|0));
 $62 = __THREW__; __THREW__ = 0;
 $63 = $62&1;
 if ($63) {
  $64 = ___cxa_find_matching_catch()|0;
  $65 = tempRet0;
  __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev((7684));
  ___resumeException($64|0);
  // unreachable;
 }
 $$sum$i11 = (($60) + 72)|0;
 $66 = (7680 + ($$sum$i11)|0);
 HEAP32[$66>>2] = 0;
 $$sum1$i12 = (($60) + 76)|0;
 $67 = (7680 + ($$sum1$i12)|0);
 HEAP32[$67>>2] = -1;
 __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(8236,$18,(8028));
 HEAP32[7764>>2] = (9184);
 HEAP32[(7768)>>2] = (9204);
 $68 = (7764 + ($60)|0);
 __THREW__ = 0;
 invoke_vii(418,($68|0),(8236|0));
 $69 = __THREW__; __THREW__ = 0;
 $70 = $69&1;
 if ($70) {
  $71 = ___cxa_find_matching_catch()|0;
  $72 = tempRet0;
  __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev((7768));
  ___resumeException($71|0);
  // unreachable;
 }
 $73 = (7764 + ($$sum$i11)|0);
 HEAP32[$73>>2] = 0;
 $74 = (7764 + ($$sum1$i12)|0);
 HEAP32[$74>>2] = -1;
 $75 = HEAP32[7764>>2]|0;
 $76 = ((($75)) + -12|0);
 $77 = HEAP32[$76>>2]|0;
 $$sum22 = (($77) + 24)|0;
 $78 = (7764 + ($$sum22)|0);
 $79 = HEAP32[$78>>2]|0;
 HEAP32[7848>>2] = (9184);
 HEAP32[(7852)>>2] = (9204);
 $80 = (7848 + ($60)|0);
 __THREW__ = 0;
 invoke_vii(418,($80|0),($79|0));
 $81 = __THREW__; __THREW__ = 0;
 $82 = $81&1;
 if ($82) {
  $83 = ___cxa_find_matching_catch()|0;
  $84 = tempRet0;
  __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev((7852));
  ___resumeException($83|0);
  // unreachable;
 } else {
  $85 = (7848 + ($$sum$i11)|0);
  HEAP32[$85>>2] = 0;
  $86 = (7848 + ($$sum1$i12)|0);
  HEAP32[$86>>2] = -1;
  $87 = HEAP32[7592>>2]|0;
  $88 = ((($87)) + -12|0);
  $89 = HEAP32[$88>>2]|0;
  $$sum23 = (($89) + 72)|0;
  $90 = (7592 + ($$sum23)|0);
  HEAP32[$90>>2] = 7680;
  $91 = HEAP32[7764>>2]|0;
  $92 = ((($91)) + -12|0);
  $93 = HEAP32[$92>>2]|0;
  $$sum24 = (($93) + 4)|0;
  $94 = (7764 + ($$sum24)|0);
  $95 = HEAP32[$94>>2]|0;
  $96 = $95 | 8192;
  HEAP32[$94>>2] = $96;
  $97 = HEAP32[7764>>2]|0;
  $98 = ((($97)) + -12|0);
  $99 = HEAP32[$98>>2]|0;
  $$sum25 = (($99) + 72)|0;
  $100 = (7764 + ($$sum25)|0);
  HEAP32[$100>>2] = 7680;
  return;
 }
}
function __ZNSt3__18ios_base4InitD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 (invoke_ii(419,(7340|0))|0);
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if (!($1)) {
  __THREW__ = 0;
  (invoke_ii(419,(7508|0))|0);
  $2 = __THREW__; __THREW__ = 0;
  $3 = $2&1;
  if (!($3)) {
   __THREW__ = 0;
   (invoke_ii(420,(7680|0))|0);
   $4 = __THREW__; __THREW__ = 0;
   $5 = $4&1;
   if (!($5)) {
    __THREW__ = 0;
    (invoke_ii(420,(7848|0))|0);
    $6 = __THREW__; __THREW__ = 0;
    $7 = $6&1;
    if (!($7)) {
     return;
    }
   }
  }
 }
 $8 = ___cxa_find_matching_catch(0|0)|0;
 $9 = tempRet0;
 ___clang_call_terminate($8);
 // unreachable;
}
function __GLOBAL__sub_I_iostream_cpp() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_base4InitC2Ev(0);
 (___cxa_atexit((421|0),(23955|0),(___dso_handle|0))|0);
 return;
}
function __ZNSt3__110__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t($this,$__fp,$__st) {
 $this = $this|0;
 $__fp = $__fp|0;
 $__st = $__st|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 4|0;
 $1 = sp;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this);
 HEAP32[$this>>2] = (8484);
 $2 = ((($this)) + 32|0);
 HEAP32[$2>>2] = $__fp;
 $3 = ((($this)) + 40|0);
 HEAP32[$3>>2] = $__st;
 $4 = ((($this)) + 48|0);
 HEAP32[$4>>2] = -1;
 $5 = ((($this)) + 52|0);
 HEAP8[$5>>0] = 0;
 $6 = ((($this)) + 4|0);
 __ZNSt3__16localeC2ERKS0_($0,$6);
 $7 = HEAP32[$0>>2]|0;
 HEAP32[$1>>2] = $7;
 __THREW__ = 0;
 invoke_vii(73,($this|0),($1|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if ($9) {
  $10 = ___cxa_find_matching_catch()|0;
  $11 = tempRet0;
  __ZNSt3__16localeD2Ev($1);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
  ___resumeException($10|0);
  // unreachable;
 } else {
  __ZNSt3__16localeD2Ev($1);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t($this,$__fp,$__st) {
 $this = $this|0;
 $__fp = $__fp|0;
 $__st = $__st|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 4|0;
 $1 = sp;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this);
 HEAP32[$this>>2] = (8420);
 $2 = ((($this)) + 32|0);
 HEAP32[$2>>2] = $__fp;
 $3 = ((($this)) + 4|0);
 __ZNSt3__16localeC2ERKS0_($0,$3);
 $4 = HEAP32[$0>>2]|0;
 HEAP32[$1>>2] = $4;
 __THREW__ = 0;
 $5 = (invoke_iii(355,($1|0),(10452|0))|0);
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if ($7) {
  $16 = ___cxa_find_matching_catch()|0;
  $17 = tempRet0;
  __ZNSt3__16localeD2Ev($1);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
  ___resumeException($16|0);
  // unreachable;
 } else {
  $8 = ((($this)) + 36|0);
  __ZNSt3__16localeD2Ev($1);
  HEAP32[$8>>2] = $5;
  $9 = ((($this)) + 40|0);
  HEAP32[$9>>2] = $__st;
  $10 = ((($this)) + 44|0);
  $11 = HEAP32[$5>>2]|0;
  $12 = ((($11)) + 28|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (FUNCTION_TABLE_ii[$13 & 1023]($5)|0);
  $15 = $14&1;
  HEAP8[$10>>0] = $15;
  STACKTOP = sp;return;
 }
}
function __ZNSt3__110__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t($this,$__fp,$__st) {
 $this = $this|0;
 $__fp = $__fp|0;
 $__st = $__st|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 4|0;
 $1 = sp;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev($this);
 HEAP32[$this>>2] = (8356);
 $2 = ((($this)) + 32|0);
 HEAP32[$2>>2] = $__fp;
 $3 = ((($this)) + 40|0);
 HEAP32[$3>>2] = $__st;
 $4 = ((($this)) + 48|0);
 HEAP32[$4>>2] = -1;
 $5 = ((($this)) + 52|0);
 HEAP8[$5>>0] = 0;
 $6 = ((($this)) + 4|0);
 __ZNSt3__16localeC2ERKS0_($0,$6);
 $7 = HEAP32[$0>>2]|0;
 HEAP32[$1>>2] = $7;
 __THREW__ = 0;
 invoke_vii(51,($this|0),($1|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if ($9) {
  $10 = ___cxa_find_matching_catch()|0;
  $11 = tempRet0;
  __ZNSt3__16localeD2Ev($1);
  __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this);
  ___resumeException($10|0);
  // unreachable;
 } else {
  __ZNSt3__16localeD2Ev($1);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t($this,$__fp,$__st) {
 $this = $this|0;
 $__fp = $__fp|0;
 $__st = $__st|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 4|0;
 $1 = sp;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev($this);
 HEAP32[$this>>2] = (8292);
 $2 = ((($this)) + 32|0);
 HEAP32[$2>>2] = $__fp;
 $3 = ((($this)) + 4|0);
 __ZNSt3__16localeC2ERKS0_($0,$3);
 $4 = HEAP32[$0>>2]|0;
 HEAP32[$1>>2] = $4;
 __THREW__ = 0;
 $5 = (invoke_iii(355,($1|0),(10460|0))|0);
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if ($7) {
  $16 = ___cxa_find_matching_catch()|0;
  $17 = tempRet0;
  __ZNSt3__16localeD2Ev($1);
  __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this);
  ___resumeException($16|0);
  // unreachable;
 } else {
  $8 = ((($this)) + 36|0);
  __ZNSt3__16localeD2Ev($1);
  HEAP32[$8>>2] = $5;
  $9 = ((($this)) + 40|0);
  HEAP32[$9>>2] = $__st;
  $10 = ((($this)) + 44|0);
  $11 = HEAP32[$5>>2]|0;
  $12 = ((($11)) + 28|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (FUNCTION_TABLE_ii[$13 & 1023]($5)|0);
  $15 = $14&1;
  HEAP8[$10>>0] = $15;
  STACKTOP = sp;return;
 }
}
function __ZNSt3__111__stdoutbufIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__111__stdoutbufIwE5imbueERKNS_6localeE($this,$__loc) {
 $this = $this|0;
 $__loc = $__loc|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + 24|0);
 $2 = HEAP32[$1>>2]|0;
 (FUNCTION_TABLE_ii[$2 & 1023]($this)|0);
 $3 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,10460)|0);
 $4 = ((($this)) + 36|0);
 HEAP32[$4>>2] = $3;
 $5 = HEAP32[$3>>2]|0;
 $6 = ((($5)) + 28|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_ii[$7 & 1023]($3)|0);
 $9 = ((($this)) + 44|0);
 $10 = $8&1;
 HEAP8[$9>>0] = $10;
 return;
}
function __ZNSt3__111__stdoutbufIwE4syncEv($this) {
 $this = $this|0;
 var $$ = 0, $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__extbe = 0, $__extbuf = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__extbuf = sp + 8|0;
 $__extbe = sp;
 $0 = ((($this)) + 36|0);
 $1 = ((($this)) + 40|0);
 $2 = ((($__extbuf)) + 8|0);
 $3 = $__extbuf;
 $4 = ((($this)) + 32|0);
 L1: while(1) {
  $5 = HEAP32[$0>>2]|0;
  $6 = HEAP32[$1>>2]|0;
  $7 = HEAP32[$5>>2]|0;
  $8 = ((($7)) + 20|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (FUNCTION_TABLE_iiiiii[$9 & 511]($5,$6,$__extbuf,$2,$__extbe)|0);
  $11 = HEAP32[$__extbe>>2]|0;
  $12 = $11;
  $13 = (($12) - ($3))|0;
  $14 = HEAP32[$4>>2]|0;
  $15 = (_fwrite($__extbuf,1,$13,$14)|0);
  $16 = ($15|0)==($13|0);
  if (!($16)) {
   $$0 = -1;
   break;
  }
  switch ($10|0) {
  case 1:  {
   break;
  }
  case 2:  {
   $$0 = -1;
   break L1;
   break;
  }
  default: {
   label = 4;
   break L1;
  }
  }
 }
 if ((label|0) == 4) {
  $17 = HEAP32[$4>>2]|0;
  $18 = (_fflush($17)|0);
  $not$ = ($18|0)!=(0);
  $$ = $not$ << 31 >> 31;
  $$0 = $$;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__111__stdoutbufIwE6xsputnEPKwi($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$0 = 0, $$012 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$03 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 44|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = ($1<<24>>24)==(0);
 L1: do {
  if ($2) {
   $3 = ($__n|0)>(0);
   if ($3) {
    $$012 = $__s;$__i$03 = 0;
    while(1) {
     $7 = HEAP32[$this>>2]|0;
     $8 = ((($7)) + 52|0);
     $9 = HEAP32[$8>>2]|0;
     $10 = HEAP32[$$012>>2]|0;
     $11 = (FUNCTION_TABLE_iii[$9 & 1023]($this,$10)|0);
     $12 = ($11|0)==(-1);
     if ($12) {
      $$0 = $__i$03;
      break L1;
     }
     $13 = (($__i$03) + 1)|0;
     $14 = ((($$012)) + 4|0);
     $15 = ($13|0)<($__n|0);
     if ($15) {
      $$012 = $14;$__i$03 = $13;
     } else {
      $$0 = $13;
      break;
     }
    }
   } else {
    $$0 = 0;
   }
  } else {
   $4 = ((($this)) + 32|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = (_fwrite($__s,4,$__n,$5)|0);
   $$0 = $6;
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__111__stdoutbufIwE8overflowEj($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$0 = 0, $$__c$i = 0, $$pbase$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__1buf = 0, $__e = 0;
 var $__extbe = 0, $__extbuf = 0, $pbase$0 = 0, $pbase$0$lcssa12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__extbuf = sp + 16|0;
 $__1buf = sp + 8|0;
 $__extbe = sp + 4|0;
 $__e = sp;
 $0 = ($__c|0)==(-1);
 L1: do {
  if ($0) {
   label = 11;
  } else {
   HEAP32[$__1buf>>2] = $__c;
   $1 = ((($this)) + 44|0);
   $2 = HEAP8[$1>>0]|0;
   $3 = ($2<<24>>24)==(0);
   if (!($3)) {
    $4 = ((($this)) + 32|0);
    $5 = HEAP32[$4>>2]|0;
    $6 = (_fwrite($__1buf,4,1,$5)|0);
    $7 = ($6|0)==(1);
    if ($7) {
     label = 11;
     break;
    } else {
     $$0 = -1;
     break;
    }
   }
   HEAP32[$__extbe>>2] = $__extbuf;
   $8 = ((($__1buf)) + 4|0);
   $9 = ((($this)) + 36|0);
   $10 = ((($this)) + 40|0);
   $11 = ((($__extbuf)) + 8|0);
   $12 = $__extbuf;
   $13 = ((($this)) + 32|0);
   $pbase$0 = $__1buf;
   while(1) {
    $14 = HEAP32[$9>>2]|0;
    $15 = HEAP32[$10>>2]|0;
    $16 = HEAP32[$14>>2]|0;
    $17 = ((($16)) + 12|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = (FUNCTION_TABLE_iiiiiiiii[$18 & 511]($14,$15,$pbase$0,$8,$__e,$__extbuf,$11,$__extbe)|0);
    $20 = HEAP32[$__e>>2]|0;
    $21 = ($20|0)==($pbase$0|0);
    if ($21) {
     $$0 = -1;
     break L1;
    }
    $22 = ($19|0)==(3);
    if ($22) {
     $pbase$0$lcssa12 = $pbase$0;
     break;
    }
    $26 = ($19|0)==(1);
    $27 = ($19>>>0)<(2);
    if (!($27)) {
     $$0 = -1;
     break L1;
    }
    $28 = HEAP32[$__extbe>>2]|0;
    $29 = $28;
    $30 = (($29) - ($12))|0;
    $31 = HEAP32[$13>>2]|0;
    $32 = (_fwrite($__extbuf,1,$30,$31)|0);
    $33 = ($32|0)==($30|0);
    if (!($33)) {
     $$0 = -1;
     break L1;
    }
    $34 = HEAP32[$__e>>2]|0;
    $$pbase$0 = $26 ? $34 : $pbase$0;
    if ($26) {
     $pbase$0 = $$pbase$0;
    } else {
     label = 11;
     break L1;
    }
   }
   $23 = HEAP32[$13>>2]|0;
   $24 = (_fwrite($pbase$0$lcssa12,1,1,$23)|0);
   $25 = ($24|0)==(1);
   if ($25) {
    label = 11;
   } else {
    $$0 = -1;
   }
  }
 } while(0);
 if ((label|0) == 11) {
  $$__c$i = $0 ? 0 : $__c;
  $$0 = $$__c$i;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE($this,$__loc) {
 $this = $this|0;
 $__loc = $__loc|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,10460)|0);
 $1 = ((($this)) + 36|0);
 HEAP32[$1>>2] = $0;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 1023]($0)|0);
 $6 = ((($this)) + 44|0);
 HEAP32[$6>>2] = $5;
 $7 = HEAP32[$1>>2]|0;
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 28|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (FUNCTION_TABLE_ii[$10 & 1023]($7)|0);
 $12 = ((($this)) + 53|0);
 $13 = $11&1;
 HEAP8[$12>>0] = $13;
 $14 = HEAP32[$6>>2]|0;
 $15 = ($14|0)>(8);
 if ($15) {
  __ZNSt3__121__throw_runtime_errorEPKc(23981);
 }
 return;
}
function __ZNSt3__110__stdinbufIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__110__stdinbufIwE9underflowEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__110__stdinbufIwE9__getcharEb($this,0)|0);
 return ($0|0);
}
function __ZNSt3__110__stdinbufIwE5uflowEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__110__stdinbufIwE9__getcharEb($this,1)|0);
 return ($0|0);
}
function __ZNSt3__110__stdinbufIwE9pbackfailEj($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__ci = 0, $__enxt = 0, $__extbuf = 0, $__inxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__extbuf = sp + 16|0;
 $__enxt = sp + 8|0;
 $__ci = sp + 4|0;
 $__inxt = sp;
 $0 = ($__c|0)==(-1);
 $1 = ((($this)) + 52|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = ($2<<24>>24)!=(0);
 L1: do {
  if ($0) {
   if ($3) {
    $$01 = -1;
   } else {
    $4 = ((($this)) + 48|0);
    $5 = HEAP32[$4>>2]|0;
    $6 = ($5|0)!=(-1);
    $7 = $6&1;
    HEAP8[$1>>0] = $7;
    $$01 = $5;
   }
  } else {
   $8 = ((($this)) + 48|0);
   L5: do {
    if ($3) {
     $9 = HEAP32[$8>>2]|0;
     HEAP32[$__ci>>2] = $9;
     $10 = ((($this)) + 36|0);
     $11 = HEAP32[$10>>2]|0;
     $12 = ((($this)) + 40|0);
     $13 = HEAP32[$12>>2]|0;
     $14 = ((($__ci)) + 4|0);
     $15 = ((($__extbuf)) + 8|0);
     $16 = HEAP32[$11>>2]|0;
     $17 = ((($16)) + 12|0);
     $18 = HEAP32[$17>>2]|0;
     $19 = (FUNCTION_TABLE_iiiiiiiii[$18 & 511]($11,$13,$__ci,$14,$__inxt,$__extbuf,$15,$__enxt)|0);
     switch ($19|0) {
     case 1: case 2:  {
      $$01 = -1;
      break L1;
      break;
     }
     case 3:  {
      $20 = HEAP32[$8>>2]|0;
      $21 = $20&255;
      HEAP8[$__extbuf>>0] = $21;
      $22 = ((($__extbuf)) + 1|0);
      HEAP32[$__enxt>>2] = $22;
      break;
     }
     default: {
     }
     }
     $23 = ((($this)) + 32|0);
     while(1) {
      $24 = HEAP32[$__enxt>>2]|0;
      $25 = ($24>>>0)>($__extbuf>>>0);
      if (!($25)) {
       break L5;
      }
      $26 = ((($24)) + -1|0);
      HEAP32[$__enxt>>2] = $26;
      $27 = HEAP8[$26>>0]|0;
      $28 = $27 << 24 >> 24;
      $29 = HEAP32[$23>>2]|0;
      $30 = (_ungetc($28,$29)|0);
      $31 = ($30|0)==(-1);
      if ($31) {
       $$01 = -1;
       break L1;
      }
     }
    }
   } while(0);
   HEAP32[$8>>2] = $__c;
   HEAP8[$1>>0] = 1;
   $$01 = $__c;
  }
 } while(0);
 STACKTOP = sp;return ($$01|0);
}
function __ZNSt3__110__stdinbufIwE9__getcharEb($this,$__consume) {
 $this = $this|0;
 $__consume = $__consume|0;
 var $$0 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $7 = 0, $8 = 0, $9 = 0, $__1buf = 0, $__enxt = 0, $__extbuf = 0, $__i$019 = 0, $__i2$0 = 0, $__inxt = 0, $__nread$0 = 0, $__nread$0$lcssa24 = 0, $__nread$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__extbuf = sp + 16|0;
 $__1buf = sp + 8|0;
 $__enxt = sp + 4|0;
 $__inxt = sp;
 $0 = ((($this)) + 52|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = ($1<<24>>24)==(0);
 L1: do {
  if ($2) {
   $5 = ((($this)) + 44|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = ($6|0)>(1);
   $8 = $7 ? $6 : 1;
   $9 = ((($this)) + 32|0);
   $10 = ($8|0)>(0);
   if ($10) {
    $__i$019 = 0;
    while(1) {
     $11 = HEAP32[$9>>2]|0;
     $12 = (_getc($11)|0);
     $13 = ($12|0)==(-1);
     if ($13) {
      $$0 = -1;
      break L1;
     }
     $14 = $12&255;
     $15 = (($__extbuf) + ($__i$019)|0);
     HEAP8[$15>>0] = $14;
     $16 = (($__i$019) + 1)|0;
     $17 = ($16|0)<($8|0);
     if ($17) {
      $__i$019 = $16;
     } else {
      break;
     }
    }
   }
   $18 = ((($this)) + 53|0);
   $19 = HEAP8[$18>>0]|0;
   $20 = ($19<<24>>24)==(0);
   L8: do {
    if ($20) {
     $21 = ((($this)) + 40|0);
     $22 = ((($this)) + 36|0);
     $23 = ((($__1buf)) + 4|0);
     $__nread$0 = $8;
     L10: while(1) {
      $26 = HEAP32[$21>>2]|0;
      $27 = $26;
      $28 = $27;
      $29 = HEAP32[$28>>2]|0;
      $30 = (($27) + 4)|0;
      $31 = $30;
      $32 = HEAP32[$31>>2]|0;
      $33 = HEAP32[$22>>2]|0;
      $34 = (($__extbuf) + ($__nread$0)|0);
      $35 = HEAP32[$33>>2]|0;
      $36 = ((($35)) + 16|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (FUNCTION_TABLE_iiiiiiiii[$37 & 511]($33,$26,$__extbuf,$34,$__enxt,$__1buf,$23,$__inxt)|0);
      switch ($38|0) {
      case 2:  {
       $$0 = -1;
       break L1;
       break;
      }
      case 3:  {
       $__nread$0$lcssa24 = $__nread$0;
       break L10;
       break;
      }
      case 1:  {
       break;
      }
      default: {
       $__nread$2 = $__nread$0;
       break L8;
      }
      }
      $39 = HEAP32[$21>>2]|0;
      $40 = $39;
      $41 = $40;
      HEAP32[$41>>2] = $29;
      $42 = (($40) + 4)|0;
      $43 = $42;
      HEAP32[$43>>2] = $32;
      $44 = ($__nread$0|0)==(8);
      if ($44) {
       $$0 = -1;
       break L1;
      }
      $45 = HEAP32[$9>>2]|0;
      $46 = (_getc($45)|0);
      $47 = ($46|0)==(-1);
      if ($47) {
       $$0 = -1;
       break L1;
      }
      $50 = $46&255;
      HEAP8[$34>>0] = $50;
      $51 = (($__nread$0) + 1)|0;
      $__nread$0 = $51;
     }
     $48 = HEAP8[$__extbuf>>0]|0;
     $49 = $48 << 24 >> 24;
     HEAP32[$__1buf>>2] = $49;
     $__nread$2 = $__nread$0$lcssa24;
    } else {
     $24 = HEAP8[$__extbuf>>0]|0;
     $25 = $24 << 24 >> 24;
     HEAP32[$__1buf>>2] = $25;
     $__nread$2 = $8;
    }
   } while(0);
   if ($__consume) {
    $60 = HEAP32[$__1buf>>2]|0;
    $61 = ((($this)) + 48|0);
    HEAP32[$61>>2] = $60;
    $$0 = $60;
    break;
   } else {
    $__i2$0 = $__nread$2;
   }
   while(1) {
    $52 = ($__i2$0|0)>(0);
    if (!($52)) {
     break;
    }
    $53 = (($__i2$0) + -1)|0;
    $54 = (($__extbuf) + ($53)|0);
    $55 = HEAP8[$54>>0]|0;
    $56 = $55 << 24 >> 24;
    $57 = HEAP32[$9>>2]|0;
    $58 = (_ungetc($56,$57)|0);
    $59 = ($58|0)==(-1);
    if ($59) {
     $$0 = -1;
     break L1;
    } else {
     $__i2$0 = $53;
    }
   }
   $$pre = HEAP32[$__1buf>>2]|0;
   $$0 = $$pre;
  } else {
   $3 = ((($this)) + 48|0);
   $4 = HEAP32[$3>>2]|0;
   if ($__consume) {
    HEAP32[$3>>2] = -1;
    HEAP8[$0>>0] = 0;
    $$0 = $4;
   } else {
    $$0 = $4;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__111__stdoutbufIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__111__stdoutbufIcE5imbueERKNS_6localeE($this,$__loc) {
 $this = $this|0;
 $__loc = $__loc|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + 24|0);
 $2 = HEAP32[$1>>2]|0;
 (FUNCTION_TABLE_ii[$2 & 1023]($this)|0);
 $3 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,10452)|0);
 $4 = ((($this)) + 36|0);
 HEAP32[$4>>2] = $3;
 $5 = HEAP32[$3>>2]|0;
 $6 = ((($5)) + 28|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_ii[$7 & 1023]($3)|0);
 $9 = ((($this)) + 44|0);
 $10 = $8&1;
 HEAP8[$9>>0] = $10;
 return;
}
function __ZNSt3__111__stdoutbufIcE4syncEv($this) {
 $this = $this|0;
 var $$ = 0, $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__extbe = 0, $__extbuf = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__extbuf = sp + 8|0;
 $__extbe = sp;
 $0 = ((($this)) + 36|0);
 $1 = ((($this)) + 40|0);
 $2 = ((($__extbuf)) + 8|0);
 $3 = $__extbuf;
 $4 = ((($this)) + 32|0);
 L1: while(1) {
  $5 = HEAP32[$0>>2]|0;
  $6 = HEAP32[$1>>2]|0;
  $7 = HEAP32[$5>>2]|0;
  $8 = ((($7)) + 20|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (FUNCTION_TABLE_iiiiii[$9 & 511]($5,$6,$__extbuf,$2,$__extbe)|0);
  $11 = HEAP32[$__extbe>>2]|0;
  $12 = $11;
  $13 = (($12) - ($3))|0;
  $14 = HEAP32[$4>>2]|0;
  $15 = (_fwrite($__extbuf,1,$13,$14)|0);
  $16 = ($15|0)==($13|0);
  if (!($16)) {
   $$0 = -1;
   break;
  }
  switch ($10|0) {
  case 1:  {
   break;
  }
  case 2:  {
   $$0 = -1;
   break L1;
   break;
  }
  default: {
   label = 4;
   break L1;
  }
  }
 }
 if ((label|0) == 4) {
  $17 = HEAP32[$4>>2]|0;
  $18 = (_fflush($17)|0);
  $not$ = ($18|0)!=(0);
  $$ = $not$ << 31 >> 31;
  $$0 = $$;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__111__stdoutbufIcE6xsputnEPKci($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$0 = 0, $$012 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$03 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 44|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = ($1<<24>>24)==(0);
 L1: do {
  if ($2) {
   $3 = ($__n|0)>(0);
   if ($3) {
    $$012 = $__s;$__i$03 = 0;
    while(1) {
     $7 = HEAP32[$this>>2]|0;
     $8 = ((($7)) + 52|0);
     $9 = HEAP32[$8>>2]|0;
     $10 = HEAP8[$$012>>0]|0;
     $11 = $10&255;
     $12 = (FUNCTION_TABLE_iii[$9 & 1023]($this,$11)|0);
     $13 = ($12|0)==(-1);
     if ($13) {
      $$0 = $__i$03;
      break L1;
     }
     $14 = (($__i$03) + 1)|0;
     $15 = ((($$012)) + 1|0);
     $16 = ($14|0)<($__n|0);
     if ($16) {
      $$012 = $15;$__i$03 = $14;
     } else {
      $$0 = $14;
      break;
     }
    }
   } else {
    $$0 = 0;
   }
  } else {
   $4 = ((($this)) + 32|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = (_fwrite($__s,1,$__n,$5)|0);
   $$0 = $6;
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__111__stdoutbufIcE8overflowEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$0 = 0, $$__c$i = 0, $$pbase$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__1buf = 0;
 var $__e = 0, $__extbe = 0, $__extbuf = 0, $pbase$0 = 0, $pbase$0$lcssa12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__extbuf = sp + 16|0;
 $__1buf = sp + 8|0;
 $__extbe = sp + 4|0;
 $__e = sp;
 $0 = ($__c|0)==(-1);
 L1: do {
  if ($0) {
   label = 11;
  } else {
   $1 = $__c&255;
   HEAP8[$__1buf>>0] = $1;
   $2 = ((($this)) + 44|0);
   $3 = HEAP8[$2>>0]|0;
   $4 = ($3<<24>>24)==(0);
   if (!($4)) {
    $5 = ((($this)) + 32|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = (_fwrite($__1buf,1,1,$6)|0);
    $8 = ($7|0)==(1);
    if ($8) {
     label = 11;
     break;
    } else {
     $$0 = -1;
     break;
    }
   }
   HEAP32[$__extbe>>2] = $__extbuf;
   $9 = ((($__1buf)) + 1|0);
   $10 = ((($this)) + 36|0);
   $11 = ((($this)) + 40|0);
   $12 = ((($__extbuf)) + 8|0);
   $13 = $__extbuf;
   $14 = ((($this)) + 32|0);
   $pbase$0 = $__1buf;
   while(1) {
    $15 = HEAP32[$10>>2]|0;
    $16 = HEAP32[$11>>2]|0;
    $17 = HEAP32[$15>>2]|0;
    $18 = ((($17)) + 12|0);
    $19 = HEAP32[$18>>2]|0;
    $20 = (FUNCTION_TABLE_iiiiiiiii[$19 & 511]($15,$16,$pbase$0,$9,$__e,$__extbuf,$12,$__extbe)|0);
    $21 = HEAP32[$__e>>2]|0;
    $22 = ($21|0)==($pbase$0|0);
    if ($22) {
     $$0 = -1;
     break L1;
    }
    $23 = ($20|0)==(3);
    if ($23) {
     $pbase$0$lcssa12 = $pbase$0;
     break;
    }
    $27 = ($20|0)==(1);
    $28 = ($20>>>0)<(2);
    if (!($28)) {
     $$0 = -1;
     break L1;
    }
    $29 = HEAP32[$__extbe>>2]|0;
    $30 = $29;
    $31 = (($30) - ($13))|0;
    $32 = HEAP32[$14>>2]|0;
    $33 = (_fwrite($__extbuf,1,$31,$32)|0);
    $34 = ($33|0)==($31|0);
    if (!($34)) {
     $$0 = -1;
     break L1;
    }
    $35 = HEAP32[$__e>>2]|0;
    $$pbase$0 = $27 ? $35 : $pbase$0;
    if ($27) {
     $pbase$0 = $$pbase$0;
    } else {
     label = 11;
     break L1;
    }
   }
   $24 = HEAP32[$14>>2]|0;
   $25 = (_fwrite($pbase$0$lcssa12,1,1,$24)|0);
   $26 = ($25|0)==(1);
   if ($26) {
    label = 11;
   } else {
    $$0 = -1;
   }
  }
 } while(0);
 if ((label|0) == 11) {
  $$__c$i = $0 ? 0 : $__c;
  $$0 = $$__c$i;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE($this,$__loc) {
 $this = $this|0;
 $__loc = $__loc|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,10452)|0);
 $1 = ((($this)) + 36|0);
 HEAP32[$1>>2] = $0;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 1023]($0)|0);
 $6 = ((($this)) + 44|0);
 HEAP32[$6>>2] = $5;
 $7 = HEAP32[$1>>2]|0;
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 28|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (FUNCTION_TABLE_ii[$10 & 1023]($7)|0);
 $12 = ((($this)) + 53|0);
 $13 = $11&1;
 HEAP8[$12>>0] = $13;
 $14 = HEAP32[$6>>2]|0;
 $15 = ($14|0)>(8);
 if ($15) {
  __ZNSt3__121__throw_runtime_errorEPKc(23981);
 }
 return;
}
function __ZNSt3__110__stdinbufIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__110__stdinbufIcE9underflowEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__110__stdinbufIcE9__getcharEb($this,0)|0);
 return ($0|0);
}
function __ZNSt3__110__stdinbufIcE5uflowEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__110__stdinbufIcE9__getcharEb($this,1)|0);
 return ($0|0);
}
function __ZNSt3__110__stdinbufIcE9pbackfailEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__ci = 0, $__enxt = 0, $__extbuf = 0, $__inxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__extbuf = sp + 16|0;
 $__enxt = sp + 4|0;
 $__ci = sp + 8|0;
 $__inxt = sp;
 $0 = ($__c|0)==(-1);
 $1 = ((($this)) + 52|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = ($2<<24>>24)!=(0);
 L1: do {
  if ($0) {
   if ($3) {
    $$01 = -1;
   } else {
    $4 = ((($this)) + 48|0);
    $5 = HEAP32[$4>>2]|0;
    $6 = ($5|0)!=(-1);
    $7 = $6&1;
    HEAP8[$1>>0] = $7;
    $$01 = $5;
   }
  } else {
   $8 = ((($this)) + 48|0);
   L5: do {
    if ($3) {
     $9 = HEAP32[$8>>2]|0;
     $10 = $9&255;
     HEAP8[$__ci>>0] = $10;
     $11 = ((($this)) + 36|0);
     $12 = HEAP32[$11>>2]|0;
     $13 = ((($this)) + 40|0);
     $14 = HEAP32[$13>>2]|0;
     $15 = ((($__ci)) + 1|0);
     $16 = ((($__extbuf)) + 8|0);
     $17 = HEAP32[$12>>2]|0;
     $18 = ((($17)) + 12|0);
     $19 = HEAP32[$18>>2]|0;
     $20 = (FUNCTION_TABLE_iiiiiiiii[$19 & 511]($12,$14,$__ci,$15,$__inxt,$__extbuf,$16,$__enxt)|0);
     switch ($20|0) {
     case 1: case 2:  {
      $$01 = -1;
      break L1;
      break;
     }
     case 3:  {
      $21 = HEAP32[$8>>2]|0;
      $22 = $21&255;
      HEAP8[$__extbuf>>0] = $22;
      $23 = ((($__extbuf)) + 1|0);
      HEAP32[$__enxt>>2] = $23;
      break;
     }
     default: {
     }
     }
     $24 = ((($this)) + 32|0);
     while(1) {
      $25 = HEAP32[$__enxt>>2]|0;
      $26 = ($25>>>0)>($__extbuf>>>0);
      if (!($26)) {
       break L5;
      }
      $27 = ((($25)) + -1|0);
      HEAP32[$__enxt>>2] = $27;
      $28 = HEAP8[$27>>0]|0;
      $29 = $28 << 24 >> 24;
      $30 = HEAP32[$24>>2]|0;
      $31 = (_ungetc($29,$30)|0);
      $32 = ($31|0)==(-1);
      if ($32) {
       $$01 = -1;
       break L1;
      }
     }
    }
   } while(0);
   HEAP32[$8>>2] = $__c;
   HEAP8[$1>>0] = 1;
   $$01 = $__c;
  }
 } while(0);
 STACKTOP = sp;return ($$01|0);
}
function __ZNSt3__110__stdinbufIcE9__getcharEb($this,$__consume) {
 $this = $this|0;
 $__consume = $__consume|0;
 var $$0 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $7 = 0, $8 = 0, $9 = 0, $__1buf = 0, $__enxt = 0, $__extbuf = 0, $__i$019 = 0, $__i2$0 = 0, $__inxt = 0, $__nread$0 = 0, $__nread$0$lcssa24 = 0, $__nread$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__extbuf = sp + 16|0;
 $__1buf = sp + 8|0;
 $__enxt = sp + 4|0;
 $__inxt = sp;
 $0 = ((($this)) + 52|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = ($1<<24>>24)==(0);
 L1: do {
  if ($2) {
   $5 = ((($this)) + 44|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = ($6|0)>(1);
   $8 = $7 ? $6 : 1;
   $9 = ((($this)) + 32|0);
   $10 = ($8|0)>(0);
   if ($10) {
    $__i$019 = 0;
    while(1) {
     $11 = HEAP32[$9>>2]|0;
     $12 = (_getc($11)|0);
     $13 = ($12|0)==(-1);
     if ($13) {
      $$0 = -1;
      break L1;
     }
     $14 = $12&255;
     $15 = (($__extbuf) + ($__i$019)|0);
     HEAP8[$15>>0] = $14;
     $16 = (($__i$019) + 1)|0;
     $17 = ($16|0)<($8|0);
     if ($17) {
      $__i$019 = $16;
     } else {
      break;
     }
    }
   }
   $18 = ((($this)) + 53|0);
   $19 = HEAP8[$18>>0]|0;
   $20 = ($19<<24>>24)==(0);
   L8: do {
    if ($20) {
     $21 = ((($this)) + 40|0);
     $22 = ((($this)) + 36|0);
     $23 = ((($__1buf)) + 1|0);
     $__nread$0 = $8;
     L10: while(1) {
      $25 = HEAP32[$21>>2]|0;
      $26 = $25;
      $27 = $26;
      $28 = HEAP32[$27>>2]|0;
      $29 = (($26) + 4)|0;
      $30 = $29;
      $31 = HEAP32[$30>>2]|0;
      $32 = HEAP32[$22>>2]|0;
      $33 = (($__extbuf) + ($__nread$0)|0);
      $34 = HEAP32[$32>>2]|0;
      $35 = ((($34)) + 16|0);
      $36 = HEAP32[$35>>2]|0;
      $37 = (FUNCTION_TABLE_iiiiiiiii[$36 & 511]($32,$25,$__extbuf,$33,$__enxt,$__1buf,$23,$__inxt)|0);
      switch ($37|0) {
      case 2:  {
       $$0 = -1;
       break L1;
       break;
      }
      case 3:  {
       $__nread$0$lcssa24 = $__nread$0;
       break L10;
       break;
      }
      case 1:  {
       break;
      }
      default: {
       $__nread$2 = $__nread$0;
       break L8;
      }
      }
      $38 = HEAP32[$21>>2]|0;
      $39 = $38;
      $40 = $39;
      HEAP32[$40>>2] = $28;
      $41 = (($39) + 4)|0;
      $42 = $41;
      HEAP32[$42>>2] = $31;
      $43 = ($__nread$0|0)==(8);
      if ($43) {
       $$0 = -1;
       break L1;
      }
      $44 = HEAP32[$9>>2]|0;
      $45 = (_getc($44)|0);
      $46 = ($45|0)==(-1);
      if ($46) {
       $$0 = -1;
       break L1;
      }
      $48 = $45&255;
      HEAP8[$33>>0] = $48;
      $49 = (($__nread$0) + 1)|0;
      $__nread$0 = $49;
     }
     $47 = HEAP8[$__extbuf>>0]|0;
     HEAP8[$__1buf>>0] = $47;
     $__nread$2 = $__nread$0$lcssa24;
    } else {
     $24 = HEAP8[$__extbuf>>0]|0;
     HEAP8[$__1buf>>0] = $24;
     $__nread$2 = $8;
    }
   } while(0);
   if ($__consume) {
    $58 = HEAP8[$__1buf>>0]|0;
    $59 = $58&255;
    $60 = ((($this)) + 48|0);
    HEAP32[$60>>2] = $59;
    $62 = $58;
   } else {
    $__i2$0 = $__nread$2;
    while(1) {
     $50 = ($__i2$0|0)>(0);
     if (!($50)) {
      break;
     }
     $51 = (($__i2$0) + -1)|0;
     $52 = (($__extbuf) + ($51)|0);
     $53 = HEAP8[$52>>0]|0;
     $54 = $53&255;
     $55 = HEAP32[$9>>2]|0;
     $56 = (_ungetc($54,$55)|0);
     $57 = ($56|0)==(-1);
     if ($57) {
      $$0 = -1;
      break L1;
     } else {
      $__i2$0 = $51;
     }
    }
    $$pre = HEAP8[$__1buf>>0]|0;
    $62 = $$pre;
   }
   $61 = $62&255;
   $$0 = $61;
  } else {
   $3 = ((($this)) + 48|0);
   $4 = HEAP32[$3>>2]|0;
   if ($__consume) {
    HEAP32[$3>>2] = -1;
    HEAP8[$0>>0] = 0;
    $$0 = $4;
   } else {
    $$0 = $4;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__112__next_primeEj($n) {
 $n = $n|0;
 var $$ = 0, $$0 = 0, $$k0$0 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0;
 var $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0;
 var $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0;
 var $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0;
 var $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0;
 var $276 = 0, $277 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $i$0 = 0, $in$0 = 0, $j$0 = 0, $k0$0 = 0, $storemerge = 0, $storemerge$lcssa = 0, $storemerge$lcssa15 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 9|0;
 $1 = sp + 8|0;
 $2 = sp + 4|0;
 $3 = sp;
 HEAP32[$2>>2] = $n;
 $4 = ($n>>>0)<(212);
 do {
  if ($4) {
   $5 = (__ZNSt3__113__lower_boundIRNS_6__lessIjjEEPKjjEET0_S6_S6_RKT1_T_(8540,(8732),$2,$1)|0);
   $6 = HEAP32[$5>>2]|0;
   $$0 = $6;
  } else {
   $7 = ($n>>>0)>(4294967291);
   if ($7) {
    $8 = (___cxa_allocate_exception(8)|0);
    __THREW__ = 0;
    invoke_vii(422,($8|0),(24092|0));
    $9 = __THREW__; __THREW__ = 0;
    $10 = $9&1;
    if ($10) {
     $11 = ___cxa_find_matching_catch()|0;
     $12 = tempRet0;
     ___cxa_free_exception(($8|0));
     ___resumeException($11|0);
     // unreachable;
    } else {
     HEAP32[$8>>2] = (2724);
     ___cxa_throw(($8|0),(328|0),(5|0));
     // unreachable;
    }
   }
   $13 = (($n>>>0) / 210)&-1;
   $14 = ($13*210)|0;
   $15 = (($n) - ($14))|0;
   HEAP32[$3>>2] = $15;
   $16 = (__ZNSt3__113__lower_boundIRNS_6__lessIjjEEPKjjEET0_S6_S6_RKT1_T_(8732,(8924),$3,$0)|0);
   $17 = $16;
   $18 = (($17) - (8732))|0;
   $19 = $18 >> 2;
   $20 = (8732 + ($19<<2)|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = (($21) + ($14))|0;
   $in$0 = $19;$k0$0 = $13;$storemerge = $22;
   L10: while(1) {
    $j$0 = 5;
    while(1) {
     $23 = ($j$0>>>0)<(47);
     if (!($23)) {
      $i$0 = 211;
      label = 12;
      break;
     }
     $24 = (8540 + ($j$0<<2)|0);
     $25 = HEAP32[$24>>2]|0;
     $26 = (($storemerge>>>0) / ($25>>>0))&-1;
     $27 = ($26>>>0)<($25>>>0);
     if ($27) {
      $storemerge$lcssa15 = $storemerge;
      label = 110;
      break L10;
     }
     $28 = Math_imul($26, $25)|0;
     $29 = ($storemerge|0)==($28|0);
     $30 = (($j$0) + 1)|0;
     if ($29) {
      break;
     } else {
      $j$0 = $30;
     }
    }
    L16: do {
     if ((label|0) == 12) {
      while(1) {
       label = 0;
       $31 = (($storemerge>>>0) / ($i$0>>>0))&-1;
       $32 = ($31>>>0)<($i$0>>>0);
       if ($32) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $33 = Math_imul($31, $i$0)|0;
       $34 = ($storemerge|0)==($33|0);
       if ($34) {
        break L16;
       }
       $35 = (($i$0) + 10)|0;
       $36 = (($storemerge>>>0) / ($35>>>0))&-1;
       $37 = ($36>>>0)<($35>>>0);
       if ($37) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $38 = Math_imul($36, $35)|0;
       $39 = ($storemerge|0)==($38|0);
       if ($39) {
        break L16;
       }
       $40 = (($i$0) + 12)|0;
       $41 = (($storemerge>>>0) / ($40>>>0))&-1;
       $42 = ($41>>>0)<($40>>>0);
       if ($42) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $43 = Math_imul($41, $40)|0;
       $44 = ($storemerge|0)==($43|0);
       if ($44) {
        break L16;
       }
       $45 = (($i$0) + 16)|0;
       $46 = (($storemerge>>>0) / ($45>>>0))&-1;
       $47 = ($46>>>0)<($45>>>0);
       if ($47) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $48 = Math_imul($46, $45)|0;
       $49 = ($storemerge|0)==($48|0);
       if ($49) {
        break L16;
       }
       $50 = (($i$0) + 18)|0;
       $51 = (($storemerge>>>0) / ($50>>>0))&-1;
       $52 = ($51>>>0)<($50>>>0);
       if ($52) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $53 = Math_imul($51, $50)|0;
       $54 = ($storemerge|0)==($53|0);
       if ($54) {
        break L16;
       }
       $55 = (($i$0) + 22)|0;
       $56 = (($storemerge>>>0) / ($55>>>0))&-1;
       $57 = ($56>>>0)<($55>>>0);
       if ($57) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $58 = Math_imul($56, $55)|0;
       $59 = ($storemerge|0)==($58|0);
       if ($59) {
        break L16;
       }
       $60 = (($i$0) + 28)|0;
       $61 = (($storemerge>>>0) / ($60>>>0))&-1;
       $62 = ($61>>>0)<($60>>>0);
       if ($62) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $63 = Math_imul($61, $60)|0;
       $64 = ($storemerge|0)==($63|0);
       if ($64) {
        break L16;
       }
       $65 = (($i$0) + 30)|0;
       $66 = (($storemerge>>>0) / ($65>>>0))&-1;
       $67 = ($66>>>0)<($65>>>0);
       if ($67) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $68 = Math_imul($66, $65)|0;
       $69 = ($storemerge|0)==($68|0);
       if ($69) {
        break L16;
       }
       $70 = (($i$0) + 36)|0;
       $71 = (($storemerge>>>0) / ($70>>>0))&-1;
       $72 = ($71>>>0)<($70>>>0);
       if ($72) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $73 = Math_imul($71, $70)|0;
       $74 = ($storemerge|0)==($73|0);
       if ($74) {
        break L16;
       }
       $75 = (($i$0) + 40)|0;
       $76 = (($storemerge>>>0) / ($75>>>0))&-1;
       $77 = ($76>>>0)<($75>>>0);
       if ($77) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $78 = Math_imul($76, $75)|0;
       $79 = ($storemerge|0)==($78|0);
       if ($79) {
        break L16;
       }
       $80 = (($i$0) + 42)|0;
       $81 = (($storemerge>>>0) / ($80>>>0))&-1;
       $82 = ($81>>>0)<($80>>>0);
       if ($82) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $83 = Math_imul($81, $80)|0;
       $84 = ($storemerge|0)==($83|0);
       if ($84) {
        break L16;
       }
       $85 = (($i$0) + 46)|0;
       $86 = (($storemerge>>>0) / ($85>>>0))&-1;
       $87 = ($86>>>0)<($85>>>0);
       if ($87) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $88 = Math_imul($86, $85)|0;
       $89 = ($storemerge|0)==($88|0);
       if ($89) {
        break L16;
       }
       $90 = (($i$0) + 52)|0;
       $91 = (($storemerge>>>0) / ($90>>>0))&-1;
       $92 = ($91>>>0)<($90>>>0);
       if ($92) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $93 = Math_imul($91, $90)|0;
       $94 = ($storemerge|0)==($93|0);
       if ($94) {
        break L16;
       }
       $95 = (($i$0) + 58)|0;
       $96 = (($storemerge>>>0) / ($95>>>0))&-1;
       $97 = ($96>>>0)<($95>>>0);
       if ($97) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $98 = Math_imul($96, $95)|0;
       $99 = ($storemerge|0)==($98|0);
       if ($99) {
        break L16;
       }
       $100 = (($i$0) + 60)|0;
       $101 = (($storemerge>>>0) / ($100>>>0))&-1;
       $102 = ($101>>>0)<($100>>>0);
       if ($102) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $103 = Math_imul($101, $100)|0;
       $104 = ($storemerge|0)==($103|0);
       if ($104) {
        break L16;
       }
       $105 = (($i$0) + 66)|0;
       $106 = (($storemerge>>>0) / ($105>>>0))&-1;
       $107 = ($106>>>0)<($105>>>0);
       if ($107) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $108 = Math_imul($106, $105)|0;
       $109 = ($storemerge|0)==($108|0);
       if ($109) {
        break L16;
       }
       $110 = (($i$0) + 70)|0;
       $111 = (($storemerge>>>0) / ($110>>>0))&-1;
       $112 = ($111>>>0)<($110>>>0);
       if ($112) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $113 = Math_imul($111, $110)|0;
       $114 = ($storemerge|0)==($113|0);
       if ($114) {
        break L16;
       }
       $115 = (($i$0) + 72)|0;
       $116 = (($storemerge>>>0) / ($115>>>0))&-1;
       $117 = ($116>>>0)<($115>>>0);
       if ($117) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $118 = Math_imul($116, $115)|0;
       $119 = ($storemerge|0)==($118|0);
       if ($119) {
        break L16;
       }
       $120 = (($i$0) + 78)|0;
       $121 = (($storemerge>>>0) / ($120>>>0))&-1;
       $122 = ($121>>>0)<($120>>>0);
       if ($122) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $123 = Math_imul($121, $120)|0;
       $124 = ($storemerge|0)==($123|0);
       if ($124) {
        break L16;
       }
       $125 = (($i$0) + 82)|0;
       $126 = (($storemerge>>>0) / ($125>>>0))&-1;
       $127 = ($126>>>0)<($125>>>0);
       if ($127) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $128 = Math_imul($126, $125)|0;
       $129 = ($storemerge|0)==($128|0);
       if ($129) {
        break L16;
       }
       $130 = (($i$0) + 88)|0;
       $131 = (($storemerge>>>0) / ($130>>>0))&-1;
       $132 = ($131>>>0)<($130>>>0);
       if ($132) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $133 = Math_imul($131, $130)|0;
       $134 = ($storemerge|0)==($133|0);
       if ($134) {
        break L16;
       }
       $135 = (($i$0) + 96)|0;
       $136 = (($storemerge>>>0) / ($135>>>0))&-1;
       $137 = ($136>>>0)<($135>>>0);
       if ($137) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $138 = Math_imul($136, $135)|0;
       $139 = ($storemerge|0)==($138|0);
       if ($139) {
        break L16;
       }
       $140 = (($i$0) + 100)|0;
       $141 = (($storemerge>>>0) / ($140>>>0))&-1;
       $142 = ($141>>>0)<($140>>>0);
       if ($142) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $143 = Math_imul($141, $140)|0;
       $144 = ($storemerge|0)==($143|0);
       if ($144) {
        break L16;
       }
       $145 = (($i$0) + 102)|0;
       $146 = (($storemerge>>>0) / ($145>>>0))&-1;
       $147 = ($146>>>0)<($145>>>0);
       if ($147) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $148 = Math_imul($146, $145)|0;
       $149 = ($storemerge|0)==($148|0);
       if ($149) {
        break L16;
       }
       $150 = (($i$0) + 106)|0;
       $151 = (($storemerge>>>0) / ($150>>>0))&-1;
       $152 = ($151>>>0)<($150>>>0);
       if ($152) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $153 = Math_imul($151, $150)|0;
       $154 = ($storemerge|0)==($153|0);
       if ($154) {
        break L16;
       }
       $155 = (($i$0) + 108)|0;
       $156 = (($storemerge>>>0) / ($155>>>0))&-1;
       $157 = ($156>>>0)<($155>>>0);
       if ($157) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $158 = Math_imul($156, $155)|0;
       $159 = ($storemerge|0)==($158|0);
       if ($159) {
        break L16;
       }
       $160 = (($i$0) + 112)|0;
       $161 = (($storemerge>>>0) / ($160>>>0))&-1;
       $162 = ($161>>>0)<($160>>>0);
       if ($162) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $163 = Math_imul($161, $160)|0;
       $164 = ($storemerge|0)==($163|0);
       if ($164) {
        break L16;
       }
       $165 = (($i$0) + 120)|0;
       $166 = (($storemerge>>>0) / ($165>>>0))&-1;
       $167 = ($166>>>0)<($165>>>0);
       if ($167) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $168 = Math_imul($166, $165)|0;
       $169 = ($storemerge|0)==($168|0);
       if ($169) {
        break L16;
       }
       $170 = (($i$0) + 126)|0;
       $171 = (($storemerge>>>0) / ($170>>>0))&-1;
       $172 = ($171>>>0)<($170>>>0);
       if ($172) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $173 = Math_imul($171, $170)|0;
       $174 = ($storemerge|0)==($173|0);
       if ($174) {
        break L16;
       }
       $175 = (($i$0) + 130)|0;
       $176 = (($storemerge>>>0) / ($175>>>0))&-1;
       $177 = ($176>>>0)<($175>>>0);
       if ($177) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $178 = Math_imul($176, $175)|0;
       $179 = ($storemerge|0)==($178|0);
       if ($179) {
        break L16;
       }
       $180 = (($i$0) + 136)|0;
       $181 = (($storemerge>>>0) / ($180>>>0))&-1;
       $182 = ($181>>>0)<($180>>>0);
       if ($182) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $183 = Math_imul($181, $180)|0;
       $184 = ($storemerge|0)==($183|0);
       if ($184) {
        break L16;
       }
       $185 = (($i$0) + 138)|0;
       $186 = (($storemerge>>>0) / ($185>>>0))&-1;
       $187 = ($186>>>0)<($185>>>0);
       if ($187) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $188 = Math_imul($186, $185)|0;
       $189 = ($storemerge|0)==($188|0);
       if ($189) {
        break L16;
       }
       $190 = (($i$0) + 142)|0;
       $191 = (($storemerge>>>0) / ($190>>>0))&-1;
       $192 = ($191>>>0)<($190>>>0);
       if ($192) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $193 = Math_imul($191, $190)|0;
       $194 = ($storemerge|0)==($193|0);
       if ($194) {
        break L16;
       }
       $195 = (($i$0) + 148)|0;
       $196 = (($storemerge>>>0) / ($195>>>0))&-1;
       $197 = ($196>>>0)<($195>>>0);
       if ($197) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $198 = Math_imul($196, $195)|0;
       $199 = ($storemerge|0)==($198|0);
       if ($199) {
        break L16;
       }
       $200 = (($i$0) + 150)|0;
       $201 = (($storemerge>>>0) / ($200>>>0))&-1;
       $202 = ($201>>>0)<($200>>>0);
       if ($202) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $203 = Math_imul($201, $200)|0;
       $204 = ($storemerge|0)==($203|0);
       if ($204) {
        break L16;
       }
       $205 = (($i$0) + 156)|0;
       $206 = (($storemerge>>>0) / ($205>>>0))&-1;
       $207 = ($206>>>0)<($205>>>0);
       if ($207) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $208 = Math_imul($206, $205)|0;
       $209 = ($storemerge|0)==($208|0);
       if ($209) {
        break L16;
       }
       $210 = (($i$0) + 162)|0;
       $211 = (($storemerge>>>0) / ($210>>>0))&-1;
       $212 = ($211>>>0)<($210>>>0);
       if ($212) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $213 = Math_imul($211, $210)|0;
       $214 = ($storemerge|0)==($213|0);
       if ($214) {
        break L16;
       }
       $215 = (($i$0) + 166)|0;
       $216 = (($storemerge>>>0) / ($215>>>0))&-1;
       $217 = ($216>>>0)<($215>>>0);
       if ($217) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $218 = Math_imul($216, $215)|0;
       $219 = ($storemerge|0)==($218|0);
       if ($219) {
        break L16;
       }
       $220 = (($i$0) + 168)|0;
       $221 = (($storemerge>>>0) / ($220>>>0))&-1;
       $222 = ($221>>>0)<($220>>>0);
       if ($222) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $223 = Math_imul($221, $220)|0;
       $224 = ($storemerge|0)==($223|0);
       if ($224) {
        break L16;
       }
       $225 = (($i$0) + 172)|0;
       $226 = (($storemerge>>>0) / ($225>>>0))&-1;
       $227 = ($226>>>0)<($225>>>0);
       if ($227) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $228 = Math_imul($226, $225)|0;
       $229 = ($storemerge|0)==($228|0);
       if ($229) {
        break L16;
       }
       $230 = (($i$0) + 178)|0;
       $231 = (($storemerge>>>0) / ($230>>>0))&-1;
       $232 = ($231>>>0)<($230>>>0);
       if ($232) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $233 = Math_imul($231, $230)|0;
       $234 = ($storemerge|0)==($233|0);
       if ($234) {
        break L16;
       }
       $235 = (($i$0) + 180)|0;
       $236 = (($storemerge>>>0) / ($235>>>0))&-1;
       $237 = ($236>>>0)<($235>>>0);
       if ($237) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $238 = Math_imul($236, $235)|0;
       $239 = ($storemerge|0)==($238|0);
       if ($239) {
        break L16;
       }
       $240 = (($i$0) + 186)|0;
       $241 = (($storemerge>>>0) / ($240>>>0))&-1;
       $242 = ($241>>>0)<($240>>>0);
       if ($242) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $243 = Math_imul($241, $240)|0;
       $244 = ($storemerge|0)==($243|0);
       if ($244) {
        break L16;
       }
       $245 = (($i$0) + 190)|0;
       $246 = (($storemerge>>>0) / ($245>>>0))&-1;
       $247 = ($246>>>0)<($245>>>0);
       if ($247) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $248 = Math_imul($246, $245)|0;
       $249 = ($storemerge|0)==($248|0);
       if ($249) {
        break L16;
       }
       $250 = (($i$0) + 192)|0;
       $251 = (($storemerge>>>0) / ($250>>>0))&-1;
       $252 = ($251>>>0)<($250>>>0);
       if ($252) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $253 = Math_imul($251, $250)|0;
       $254 = ($storemerge|0)==($253|0);
       if ($254) {
        break L16;
       }
       $255 = (($i$0) + 196)|0;
       $256 = (($storemerge>>>0) / ($255>>>0))&-1;
       $257 = ($256>>>0)<($255>>>0);
       if ($257) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $258 = Math_imul($256, $255)|0;
       $259 = ($storemerge|0)==($258|0);
       if ($259) {
        break L16;
       }
       $260 = (($i$0) + 198)|0;
       $261 = (($storemerge>>>0) / ($260>>>0))&-1;
       $262 = ($261>>>0)<($260>>>0);
       if ($262) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $263 = Math_imul($261, $260)|0;
       $264 = ($storemerge|0)==($263|0);
       if ($264) {
        break L16;
       }
       $265 = (($i$0) + 208)|0;
       $266 = (($storemerge>>>0) / ($265>>>0))&-1;
       $267 = ($266>>>0)<($265>>>0);
       if ($267) {
        $storemerge$lcssa = $storemerge;
        label = 109;
        break L10;
       }
       $268 = Math_imul($266, $265)|0;
       $269 = ($storemerge|0)==($268|0);
       $270 = (($i$0) + 210)|0;
       if ($269) {
        break;
       } else {
        $i$0 = $270;
        label = 12;
       }
      }
     }
    } while(0);
    $271 = (($in$0) + 1)|0;
    $272 = ($271|0)==(48);
    $$ = $272 ? 0 : $271;
    $273 = $272&1;
    $$k0$0 = (($273) + ($k0$0))|0;
    $274 = ($$k0$0*210)|0;
    $275 = (8732 + ($$<<2)|0);
    $276 = HEAP32[$275>>2]|0;
    $277 = (($276) + ($274))|0;
    $in$0 = $$;$k0$0 = $$k0$0;$storemerge = $277;
   }
   if ((label|0) == 109) {
    HEAP32[$2>>2] = $storemerge$lcssa;
    $$0 = $storemerge$lcssa;
    break;
   }
   else if ((label|0) == 110) {
    HEAP32[$2>>2] = $storemerge$lcssa15;
    $$0 = $storemerge$lcssa15;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__113__lower_boundIRNS_6__lessIjjEEPKjjEET0_S6_S6_RKT1_T_($__first,$__last,$__value_,$__comp) {
 $__first = $__first|0;
 $__last = $__last|0;
 $__value_ = $__value_|0;
 $__comp = $__comp|0;
 var $$0$ph = 0, $$0$ph$lcssa = 0, $$lcssa = 0, $$neg1 = 0, $$sum = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__len$0 = 0, $__len$0$lcssa7 = 0, $__len$0$ph = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__last;
 $1 = $__first;
 $2 = (($0) - ($1))|0;
 $3 = $2 >> 2;
 $4 = HEAP32[$__value_>>2]|0;
 $$0$ph = $__first;$__len$0$ph = $3;
 L1: while(1) {
  $__len$0 = $__len$0$ph;
  while(1) {
   $5 = ($__len$0|0)==(0);
   if ($5) {
    $$0$ph$lcssa = $$0$ph;
    break L1;
   }
   $6 = (($__len$0|0) / 2)&-1;
   $7 = (($$0$ph) + ($6<<2)|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = ($8>>>0)<($4>>>0);
   if ($9) {
    $$lcssa = $6;$__len$0$lcssa7 = $__len$0;
    break;
   } else {
    $__len$0 = $6;
   }
  }
  $$sum = (($$lcssa) + 1)|0;
  $10 = (($$0$ph) + ($$sum<<2)|0);
  $$neg1 = (($__len$0$lcssa7) + -1)|0;
  $11 = (($$neg1) - ($$lcssa))|0;
  $$0$ph = $10;$__len$0$ph = $11;
 }
 return ($$0$ph$lcssa|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($this,$__str) {
 $this = $this|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__str>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  ;HEAP32[$this>>2]=HEAP32[$__str>>2]|0;HEAP32[$this+4>>2]=HEAP32[$__str+4>>2]|0;HEAP32[$this+8>>2]=HEAP32[$__str+8>>2]|0;
 } else {
  $3 = ((($__str)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ((($__str)) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this,$4,$6);
 }
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this,$__s,$__sz) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__sz>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__sz>>>0)<(11);
 if ($1) {
  $2 = $__sz << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 1|0);
  $__p$0 = $4;
 } else {
  $5 = (($__sz) + 16)|0;
  $6 = $5 & -16;
  $7 = (__Znwj($6)|0);
  $8 = ((($this)) + 8|0);
  HEAP32[$8>>2] = $7;
  $9 = $6 | 1;
  HEAP32[$this>>2] = $9;
  $10 = ((($this)) + 4|0);
  HEAP32[$10>>2] = $__sz;
  $__p$0 = $7;
 }
 _memcpy(($__p$0|0),($__s|0),($__sz|0))|0;
 $11 = (($__p$0) + ($__sz)|0);
 HEAP8[$11>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__n>>>0)<(11);
 if ($1) {
  $2 = $__n << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 1|0);
  $__p$0 = $4;
 } else {
  $5 = (($__n) + 16)|0;
  $6 = $5 & -16;
  $7 = (__Znwj($6)|0);
  $8 = ((($this)) + 8|0);
  HEAP32[$8>>2] = $7;
  $9 = $6 | 1;
  HEAP32[$this>>2] = $9;
  $10 = ((($this)) + 4|0);
  HEAP32[$10>>2] = $__n;
  $__p$0 = $7;
 }
 _memset(($__p$0|0),($__c|0),($__n|0))|0;
 $11 = (($__p$0) + ($__n)|0);
 HEAP8[$11>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if (!($2)) {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  __ZdlPv($4);
 }
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen($__s)|0);
 $1 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this,$__s,$0)|0);
 return ($1|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $7 = 10;$9 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $7 = $phitmp$i;$9 = $5;
 }
 $6 = ($7>>>0)<($__n>>>0);
 $8 = $9 & 1;
 $10 = ($8<<24>>24)==(0);
 do {
  if ($6) {
   if ($10) {
    $24 = $9&255;
    $25 = $24 >>> 1;
    $27 = $25;
   } else {
    $22 = ((($this)) + 4|0);
    $23 = HEAP32[$22>>2]|0;
    $27 = $23;
   }
   $26 = (($__n) - ($7))|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$7,$26,$27,0,$27,$__n,$__s);
  } else {
   if ($10) {
    $13 = ((($this)) + 1|0);
    $14 = $13;
   } else {
    $11 = ((($this)) + 8|0);
    $12 = HEAP32[$11>>2]|0;
    $14 = $12;
   }
   _memmove(($14|0),($__s|0),($__n|0))|0;
   $15 = (($14) + ($__n)|0);
   HEAP8[$15>>0] = 0;
   $16 = HEAP8[$this>>0]|0;
   $17 = $16 & 1;
   $18 = ($17<<24>>24)==(0);
   if ($18) {
    $20 = $__n << 1;
    $21 = $20&255;
    HEAP8[$this>>0] = $21;
    break;
   } else {
    $19 = ((($this)) + 4|0);
    HEAP32[$19>>2] = $__n;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = $0&255;
  $6 = $5 >>> 1;
  $8 = $6;
 } else {
  $3 = ((($this)) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $8 = $4;
 }
 $7 = ($8>>>0)<($__n>>>0);
 do {
  if ($7) {
   $9 = (($__n) - ($8))|0;
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this,$9,$__c)|0);
  } else {
   if ($2) {
    $14 = (((($this)) + 1|0) + ($__n)|0);
    HEAP8[$14>>0] = 0;
    $15 = $__n << 1;
    $16 = $15&255;
    HEAP8[$this>>0] = $16;
    break;
   } else {
    $10 = ((($this)) + 8|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = (($11) + ($__n)|0);
    HEAP8[$12>>0] = 0;
    $13 = ((($this)) + 4|0);
    HEAP32[$13>>2] = $__n;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n|0)==(0);
 if (!($0)) {
  $1 = HEAP8[$this>>0]|0;
  $2 = $1 & 1;
  $3 = ($2<<24>>24)==(0);
  if ($3) {
   $15 = 10;$8 = $1;
  } else {
   $4 = HEAP32[$this>>2]|0;
   $5 = $4 & -2;
   $phitmp$i = (($5) + -1)|0;
   $6 = $4&255;
   $15 = $phitmp$i;$8 = $6;
  }
  $7 = $8 & 1;
  $9 = ($7<<24>>24)==(0);
  if ($9) {
   $12 = $8&255;
   $13 = $12 >>> 1;
   $16 = $13;
  } else {
   $10 = ((($this)) + 4|0);
   $11 = HEAP32[$10>>2]|0;
   $16 = $11;
  }
  $14 = (($15) - ($16))|0;
  $17 = ($14>>>0)<($__n>>>0);
  if ($17) {
   $18 = (($__n) - ($15))|0;
   $19 = (($18) + ($16))|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$15,$19,$16,$16,0,0);
   $$pre = HEAP8[$this>>0]|0;
   $21 = $$pre;
  } else {
   $21 = $8;
  }
  $20 = $21 & 1;
  $22 = ($20<<24>>24)==(0);
  if ($22) {
   $25 = ((($this)) + 1|0);
   $27 = $25;
  } else {
   $23 = ((($this)) + 8|0);
   $24 = HEAP32[$23>>2]|0;
   $27 = $24;
  }
  $26 = (($27) + ($16)|0);
  _memset(($26|0),($__c|0),($__n|0))|0;
  $28 = (($16) + ($__n))|0;
  $29 = HEAP8[$this>>0]|0;
  $30 = $29 & 1;
  $31 = ($30<<24>>24)==(0);
  if ($31) {
   $33 = $28 << 1;
   $34 = $33&255;
   HEAP8[$this>>0] = $34;
  } else {
   $32 = ((($this)) + 4|0);
   HEAP32[$32>>2] = $28;
  }
  $35 = (($27) + ($28)|0);
  HEAP8[$35>>0] = 0;
 }
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($this,$__res_arg) {
 $this = $this|0;
 $__res_arg = $__res_arg|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_data$0 = 0, $__new_data$1 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0, $phitmp$i = 0;
 var $phitmp$i2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__res_arg>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $22 = 10;$8 = $1;
 } else {
  $4 = HEAP32[$this>>2]|0;
  $5 = $4 & -2;
  $phitmp$i = (($5) + -1)|0;
  $6 = $4&255;
  $22 = $phitmp$i;$8 = $6;
 }
 $7 = $8 & 1;
 $9 = ($7<<24>>24)==(0);
 if ($9) {
  $12 = $8&255;
  $13 = $12 >>> 1;
  $15 = $13;
 } else {
  $10 = ((($this)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $15 = $11;
 }
 $14 = ($15>>>0)>($__res_arg>>>0);
 $16 = $14 ? $15 : $__res_arg;
 $17 = ($16>>>0)<(11);
 if ($17) {
  $21 = 10;
 } else {
  $18 = (($16) + 16)|0;
  $19 = $18 & -16;
  $phitmp$i2 = (($19) + -1)|0;
  $21 = $phitmp$i2;
 }
 $20 = ($21|0)==($22|0);
 L14: do {
  if (!($20)) {
   $23 = ($21|0)==(10);
   do {
    if ($23) {
     $24 = ((($this)) + 1|0);
     $25 = ((($this)) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $__new_data$1 = $24;$__now_long$0$off0 = 0;$__p$0 = $26;$__was_long$0$off0 = 1;
    } else {
     $27 = ($21>>>0)>($22>>>0);
     $28 = (($21) + 1)|0;
     if ($27) {
      $29 = (__Znwj($28)|0);
      $__new_data$0 = $29;
     } else {
      __THREW__ = 0;
      $30 = (invoke_ii(423,($28|0))|0);
      $31 = __THREW__; __THREW__ = 0;
      $32 = $31&1;
      if ($32) {
       $33 = ___cxa_find_matching_catch(0|0)|0;
       $34 = tempRet0;
       (___cxa_begin_catch(($33|0))|0);
       ___cxa_end_catch();
       break L14;
      } else {
       $__new_data$0 = $30;
      }
     }
     $35 = $8 & 1;
     $36 = ($35<<24>>24)==(0);
     if ($36) {
      $39 = ((($this)) + 1|0);
      $__new_data$1 = $__new_data$0;$__now_long$0$off0 = 1;$__p$0 = $39;$__was_long$0$off0 = 0;
      break;
     } else {
      $37 = ((($this)) + 8|0);
      $38 = HEAP32[$37>>2]|0;
      $__new_data$1 = $__new_data$0;$__now_long$0$off0 = 1;$__p$0 = $38;$__was_long$0$off0 = 1;
      break;
     }
    }
   } while(0);
   $40 = $8 & 1;
   $41 = ($40<<24>>24)==(0);
   if ($41) {
    $44 = $8&255;
    $45 = $44 >>> 1;
    $47 = $45;
   } else {
    $42 = ((($this)) + 4|0);
    $43 = HEAP32[$42>>2]|0;
    $47 = $43;
   }
   $46 = (($47) + 1)|0;
   _memcpy(($__new_data$1|0),($__p$0|0),($46|0))|0;
   if ($__was_long$0$off0) {
    __ZdlPv($__p$0);
   }
   if ($__now_long$0$off0) {
    $48 = (($21) + 1)|0;
    $49 = $48 | 1;
    HEAP32[$this>>2] = $49;
    $50 = ((($this)) + 4|0);
    HEAP32[$50>>2] = $15;
    $51 = ((($this)) + 8|0);
    HEAP32[$51>>2] = $__new_data$1;
    break;
   } else {
    $52 = $15 << 1;
    $53 = $52&255;
    HEAP8[$this>>0] = $53;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen($__s)|0);
 $1 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($this,$__s,$0)|0);
 return ($1|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cap$0 = 0, $__p$0 = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)!=(0);
 if ($2) {
  $5 = HEAP32[$this>>2]|0;
  $6 = $5 & -2;
  $7 = (($6) + -1)|0;
  $8 = ((($this)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $__cap$0 = $7;$__sz$0 = $9;
 } else {
  $3 = $0&255;
  $4 = $3 >>> 1;
  $__cap$0 = 10;$__sz$0 = $4;
 }
 $10 = ($__sz$0|0)==($__cap$0|0);
 if ($10) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$__cap$0,1,$__cap$0,$__cap$0,0,0);
  $11 = HEAP8[$this>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   label = 7;
  } else {
   label = 8;
  }
 } else {
  if ($2) {
   label = 8;
  } else {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $14 = ((($this)) + 1|0);
  $15 = $__sz$0 << 1;
  $16 = (($15) + 2)|0;
  $17 = $16&255;
  HEAP8[$this>>0] = $17;
  $$pre = (($__sz$0) + 1)|0;
  $$pn = $14;$__p$0$sum$pre$phiZZZ2D = $$pre;
 }
 else if ((label|0) == 8) {
  $18 = ((($this)) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($__sz$0) + 1)|0;
  $21 = ((($this)) + 4|0);
  HEAP32[$21>>2] = $20;
  $$pn = $19;$__p$0$sum$pre$phiZZZ2D = $20;
 }
 $__p$0 = (($$pn) + ($__sz$0)|0);
 HEAP8[$__p$0>>0] = $__c;
 $22 = (($$pn) + ($__p$0$sum$pre$phiZZZ2D)|0);
 HEAP8[$22>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $14 = 10;$7 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $14 = $phitmp$i;$7 = $5;
 }
 $6 = $7 & 1;
 $8 = ($6<<24>>24)==(0);
 if ($8) {
  $11 = $7&255;
  $12 = $11 >>> 1;
  $15 = $12;
 } else {
  $9 = ((($this)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $15 = $10;
 }
 $13 = (($14) - ($15))|0;
 $16 = ($13>>>0)<($__n>>>0);
 if ($16) {
  $33 = (($__n) - ($14))|0;
  $34 = (($33) + ($15))|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$14,$34,$15,$15,0,$__n,$__s);
 } else {
  $17 = ($__n|0)==(0);
  if (!($17)) {
   $18 = $7 & 1;
   $19 = ($18<<24>>24)==(0);
   if ($19) {
    $22 = ((($this)) + 1|0);
    $24 = $22;
   } else {
    $20 = ((($this)) + 8|0);
    $21 = HEAP32[$20>>2]|0;
    $24 = $21;
   }
   $23 = (($24) + ($15)|0);
   _memcpy(($23|0),($__s|0),($__n|0))|0;
   $25 = (($15) + ($__n))|0;
   $26 = HEAP8[$this>>0]|0;
   $27 = $26 & 1;
   $28 = ($27<<24>>24)==(0);
   if ($28) {
    $30 = $25 << 1;
    $31 = $30&255;
    HEAP8[$this>>0] = $31;
   } else {
    $29 = ((($this)) + 4|0);
    HEAP32[$29>>2] = $25;
   }
   $32 = (($24) + ($25)|0);
   HEAP8[$32>>0] = 0;
  }
 }
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add,$__p_new_stuff) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 $__p_new_stuff = $__p_new_stuff|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (-18 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 1|0);
  $20 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $20 = $6;
 }
 $8 = ($__old_cap>>>0)<(2147483623);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(11);
  $14 = (($12) + 16)|0;
  $15 = $14 & -16;
  $16 = $13 ? 11 : $15;
  $17 = $16;
 } else {
  $17 = -17;
 }
 $18 = (__Znwj($17)|0);
 $19 = ($__n_copy|0)==(0);
 if (!($19)) {
  _memcpy(($18|0),($20|0),($__n_copy|0))|0;
 }
 $21 = ($__n_add|0)==(0);
 if (!($21)) {
  $22 = (($18) + ($__n_copy)|0);
  _memcpy(($22|0),($__p_new_stuff|0),($__n_add|0))|0;
 }
 $23 = (($__old_sz) - ($__n_del))|0;
 $24 = ($23|0)==($__n_copy|0);
 if (!($24)) {
  $25 = (($23) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $26 = (($18) + ($$sum)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $27 = (($20) + ($$sum1)|0);
  _memcpy(($26|0),($27|0),($25|0))|0;
 }
 $28 = ($__old_cap|0)==(10);
 if (!($28)) {
  __ZdlPv($20);
 }
 $29 = ((($this)) + 8|0);
 HEAP32[$29>>2] = $18;
 $30 = $17 | 1;
 HEAP32[$this>>2] = $30;
 $31 = (($23) + ($__n_add))|0;
 $32 = ((($this)) + 4|0);
 HEAP32[$32>>2] = $31;
 $33 = (($18) + ($31)|0);
 HEAP8[$33>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (-17 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 1|0);
  $20 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $20 = $6;
 }
 $8 = ($__old_cap>>>0)<(2147483623);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(11);
  $14 = (($12) + 16)|0;
  $15 = $14 & -16;
  $16 = $13 ? 11 : $15;
  $17 = $16;
 } else {
  $17 = -17;
 }
 $18 = (__Znwj($17)|0);
 $19 = ($__n_copy|0)==(0);
 if (!($19)) {
  _memcpy(($18|0),($20|0),($__n_copy|0))|0;
 }
 $21 = (($__old_sz) - ($__n_del))|0;
 $22 = ($21|0)==($__n_copy|0);
 if (!($22)) {
  $23 = (($21) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $24 = (($18) + ($$sum)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $25 = (($20) + ($$sum1)|0);
  _memcpy(($24|0),($25|0),($23|0))|0;
 }
 $26 = ($__old_cap|0)==(10);
 if (!($26)) {
  __ZdlPv($20);
 }
 $27 = ((($this)) + 8|0);
 HEAP32[$27>>2] = $18;
 $28 = $17 | 1;
 HEAP32[$this>>2] = $28;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($this,$__s,$__sz) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__sz>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__sz>>>0)<(2);
 if ($1) {
  $2 = $__sz << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 4|0);
  $__p$0 = $4;
 } else {
  $5 = (($__sz) + 4)|0;
  $6 = $5 & -4;
  $7 = $6 << 2;
  $8 = (__Znwj($7)|0);
  $9 = ((($this)) + 8|0);
  HEAP32[$9>>2] = $8;
  $10 = $6 | 1;
  HEAP32[$this>>2] = $10;
  $11 = ((($this)) + 4|0);
  HEAP32[$11>>2] = $__sz;
  $__p$0 = $8;
 }
 (_wmemcpy($__p$0,$__s,$__sz)|0);
 $12 = (($__p$0) + ($__sz<<2)|0);
 HEAP32[$12>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__n>>>0)<(2);
 if ($1) {
  $2 = $__n << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 4|0);
  $__p$0 = $4;
 } else {
  $5 = (($__n) + 4)|0;
  $6 = $5 & -4;
  $7 = $6 << 2;
  $8 = (__Znwj($7)|0);
  $9 = ((($this)) + 8|0);
  HEAP32[$9>>2] = $8;
  $10 = $6 | 1;
  HEAP32[$this>>2] = $10;
  $11 = ((($this)) + 4|0);
  HEAP32[$11>>2] = $__n;
  $__p$0 = $8;
 }
 (_wmemset($__p$0,$__c,$__n)|0);
 $12 = (($__p$0) + ($__n<<2)|0);
 HEAP32[$12>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if (!($2)) {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  __ZdlPv($4);
 }
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen($__s)|0);
 $1 = (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this,$__s,$0)|0);
 return ($1|0);
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $7 = 1;$9 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $7 = $phitmp$i;$9 = $5;
 }
 $6 = ($7>>>0)<($__n>>>0);
 $8 = $9 & 1;
 $10 = ($8<<24>>24)==(0);
 do {
  if ($6) {
   if ($10) {
    $24 = $9&255;
    $25 = $24 >>> 1;
    $27 = $25;
   } else {
    $22 = ((($this)) + 4|0);
    $23 = HEAP32[$22>>2]|0;
    $27 = $23;
   }
   $26 = (($__n) - ($7))|0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this,$7,$26,$27,0,$27,$__n,$__s);
  } else {
   if ($10) {
    $13 = ((($this)) + 4|0);
    $14 = $13;
   } else {
    $11 = ((($this)) + 8|0);
    $12 = HEAP32[$11>>2]|0;
    $14 = $12;
   }
   (_wmemmove($14,$__s,$__n)|0);
   $15 = (($14) + ($__n<<2)|0);
   HEAP32[$15>>2] = 0;
   $16 = HEAP8[$this>>0]|0;
   $17 = $16 & 1;
   $18 = ($17<<24>>24)==(0);
   if ($18) {
    $20 = $__n << 1;
    $21 = $20&255;
    HEAP8[$this>>0] = $21;
    break;
   } else {
    $19 = ((($this)) + 4|0);
    HEAP32[$19>>2] = $__n;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($this,$__res_arg) {
 $this = $this|0;
 $__res_arg = $__res_arg|0;
 var $$sink = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_data$1 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0;
 var $phitmp$i = 0, $phitmp$i2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__res_arg>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $22 = 1;$8 = $1;
 } else {
  $4 = HEAP32[$this>>2]|0;
  $5 = $4 & -2;
  $phitmp$i = (($5) + -1)|0;
  $6 = $4&255;
  $22 = $phitmp$i;$8 = $6;
 }
 $7 = $8 & 1;
 $9 = ($7<<24>>24)==(0);
 if ($9) {
  $12 = $8&255;
  $13 = $12 >>> 1;
  $15 = $13;
 } else {
  $10 = ((($this)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $15 = $11;
 }
 $14 = ($15>>>0)>($__res_arg>>>0);
 $16 = $14 ? $15 : $__res_arg;
 $17 = ($16>>>0)<(2);
 if ($17) {
  $21 = 1;
 } else {
  $18 = (($16) + 4)|0;
  $19 = $18 & -4;
  $phitmp$i2 = (($19) + -1)|0;
  $21 = $phitmp$i2;
 }
 $20 = ($21|0)==($22|0);
 L14: do {
  if (!($20)) {
   $23 = ($21|0)==(1);
   do {
    if ($23) {
     $24 = ((($this)) + 4|0);
     $25 = ((($this)) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $__new_data$1 = $24;$__now_long$0$off0 = 0;$__p$0 = $26;$__was_long$0$off0 = 1;
    } else {
     $27 = ($21>>>0)>($22>>>0);
     $28 = $21 << 2;
     $29 = (($28) + 4)|0;
     if ($27) {
      $30 = (__Znwj($29)|0);
      $$sink = $30;
     } else {
      __THREW__ = 0;
      $31 = (invoke_ii(423,($29|0))|0);
      $32 = __THREW__; __THREW__ = 0;
      $33 = $32&1;
      if ($33) {
       $34 = ___cxa_find_matching_catch(0|0)|0;
       $35 = tempRet0;
       (___cxa_begin_catch(($34|0))|0);
       ___cxa_end_catch();
       break L14;
      } else {
       $$sink = $31;
      }
     }
     $36 = $8 & 1;
     $37 = ($36<<24>>24)==(0);
     if ($37) {
      $40 = ((($this)) + 4|0);
      $__new_data$1 = $$sink;$__now_long$0$off0 = 1;$__p$0 = $40;$__was_long$0$off0 = 0;
      break;
     } else {
      $38 = ((($this)) + 8|0);
      $39 = HEAP32[$38>>2]|0;
      $__new_data$1 = $$sink;$__now_long$0$off0 = 1;$__p$0 = $39;$__was_long$0$off0 = 1;
      break;
     }
    }
   } while(0);
   $41 = $8 & 1;
   $42 = ($41<<24>>24)==(0);
   if ($42) {
    $45 = $8&255;
    $46 = $45 >>> 1;
    $48 = $46;
   } else {
    $43 = ((($this)) + 4|0);
    $44 = HEAP32[$43>>2]|0;
    $48 = $44;
   }
   $47 = (($48) + 1)|0;
   (_wmemcpy($__new_data$1,$__p$0,$47)|0);
   if ($__was_long$0$off0) {
    __ZdlPv($__p$0);
   }
   if ($__now_long$0$off0) {
    $49 = (($21) + 1)|0;
    $50 = $49 | 1;
    HEAP32[$this>>2] = $50;
    $51 = ((($this)) + 4|0);
    HEAP32[$51>>2] = $15;
    $52 = ((($this)) + 8|0);
    HEAP32[$52>>2] = $__new_data$1;
    break;
   } else {
    $53 = $15 << 1;
    $54 = $53&255;
    HEAP8[$this>>0] = $54;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cap$0 = 0, $__p$0 = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)!=(0);
 if ($2) {
  $5 = HEAP32[$this>>2]|0;
  $6 = $5 & -2;
  $7 = (($6) + -1)|0;
  $8 = ((($this)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $__cap$0 = $7;$__sz$0 = $9;
 } else {
  $3 = $0&255;
  $4 = $3 >>> 1;
  $__cap$0 = 1;$__sz$0 = $4;
 }
 $10 = ($__sz$0|0)==($__cap$0|0);
 if ($10) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$__cap$0,1,$__cap$0,$__cap$0,0,0);
  $11 = HEAP8[$this>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   label = 7;
  } else {
   label = 8;
  }
 } else {
  if ($2) {
   label = 8;
  } else {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $14 = ((($this)) + 4|0);
  $15 = $__sz$0 << 1;
  $16 = (($15) + 2)|0;
  $17 = $16&255;
  HEAP8[$this>>0] = $17;
  $$pre = (($__sz$0) + 1)|0;
  $$pn = $14;$__p$0$sum$pre$phiZZZ2D = $$pre;
 }
 else if ((label|0) == 8) {
  $18 = ((($this)) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($__sz$0) + 1)|0;
  $21 = ((($this)) + 4|0);
  HEAP32[$21>>2] = $20;
  $$pn = $19;$__p$0$sum$pre$phiZZZ2D = $20;
 }
 $__p$0 = (($$pn) + ($__sz$0<<2)|0);
 HEAP32[$__p$0>>2] = $__c;
 $22 = (($$pn) + ($__p$0$sum$pre$phiZZZ2D<<2)|0);
 HEAP32[$22>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add,$__p_new_stuff) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 $__p_new_stuff = $__p_new_stuff|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (1073741806 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 4|0);
  $21 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $21 = $6;
 }
 $8 = ($__old_cap>>>0)<(536870887);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(2);
  $14 = (($12) + 4)|0;
  $15 = $14 & -4;
  $16 = $13 ? 2 : $15;
  $18 = $16;
 } else {
  $18 = 1073741807;
 }
 $17 = $18 << 2;
 $19 = (__Znwj($17)|0);
 $20 = ($__n_copy|0)==(0);
 if (!($20)) {
  (_wmemcpy($19,$21,$__n_copy)|0);
 }
 $22 = ($__n_add|0)==(0);
 if (!($22)) {
  $23 = (($19) + ($__n_copy<<2)|0);
  (_wmemcpy($23,$__p_new_stuff,$__n_add)|0);
 }
 $24 = (($__old_sz) - ($__n_del))|0;
 $25 = ($24|0)==($__n_copy|0);
 if (!($25)) {
  $26 = (($24) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $27 = (($19) + ($$sum<<2)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $28 = (($21) + ($$sum1<<2)|0);
  (_wmemcpy($27,$28,$26)|0);
 }
 $29 = ($__old_cap|0)==(1);
 if (!($29)) {
  __ZdlPv($21);
 }
 $30 = ((($this)) + 8|0);
 HEAP32[$30>>2] = $19;
 $31 = $18 | 1;
 HEAP32[$this>>2] = $31;
 $32 = (($24) + ($__n_add))|0;
 $33 = ((($this)) + 4|0);
 HEAP32[$33>>2] = $32;
 $34 = (($19) + ($32<<2)|0);
 HEAP32[$34>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (1073741807 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 4|0);
  $21 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $21 = $6;
 }
 $8 = ($__old_cap>>>0)<(536870887);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(2);
  $14 = (($12) + 4)|0;
  $15 = $14 & -4;
  $16 = $13 ? 2 : $15;
  $18 = $16;
 } else {
  $18 = 1073741807;
 }
 $17 = $18 << 2;
 $19 = (__Znwj($17)|0);
 $20 = ($__n_copy|0)==(0);
 if (!($20)) {
  (_wmemcpy($19,$21,$__n_copy)|0);
 }
 $22 = (($__old_sz) - ($__n_del))|0;
 $23 = ($22|0)==($__n_copy|0);
 if (!($23)) {
  $24 = (($22) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $25 = (($19) + ($$sum<<2)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $26 = (($21) + ($$sum1<<2)|0);
  (_wmemcpy($25,$26,$24)|0);
 }
 $27 = ($__old_cap|0)==(1);
 if (!($27)) {
  __ZdlPv($21);
 }
 $28 = ((($this)) + 8|0);
 HEAP32[$28>>2] = $19;
 $29 = $18 | 1;
 HEAP32[$this>>2] = $29;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$04 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $__p$0$ph = 0, $__p$03 = 0, $scevgep2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = $__last;
 $2 = (($1) - ($0))|0;
 $3 = ($2>>>0)>(4294967279);
 if ($3) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $4 = ($2>>>0)<(11);
 if ($4) {
  $5 = $2 << 1;
  $6 = $5&255;
  HEAP8[$this>>0] = $6;
  $7 = ((($this)) + 1|0);
  $__p$0$ph = $7;
 } else {
  $8 = (($2) + 16)|0;
  $9 = $8 & -16;
  $10 = (__Znwj($9)|0);
  $11 = ((($this)) + 8|0);
  HEAP32[$11>>2] = $10;
  $12 = $9 | 1;
  HEAP32[$this>>2] = $12;
  $13 = ((($this)) + 4|0);
  HEAP32[$13>>2] = $2;
  $__p$0$ph = $10;
 }
 $14 = $__last;
 $15 = (($14) - ($0))|0;
 $16 = ($__first|0)==($__last|0);
 if (!($16)) {
  $$04 = $__first;$__p$03 = $__p$0$ph;
  while(1) {
   $17 = HEAP8[$$04>>0]|0;
   HEAP8[$__p$03>>0] = $17;
   $18 = ((($$04)) + 1|0);
   $19 = ((($__p$03)) + 1|0);
   $20 = ($18|0)==($__last|0);
   if ($20) {
    break;
   } else {
    $$04 = $18;$__p$03 = $19;
   }
  }
 }
 $scevgep2 = (($__p$0$ph) + ($15)|0);
 HEAP8[$scevgep2>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$04 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0$ph = 0, $__p$03 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = $__last;
 $2 = (($1) - ($0))|0;
 $3 = $2 >> 2;
 $4 = ($3>>>0)>(1073741807);
 if ($4) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $5 = ($3>>>0)<(2);
 if ($5) {
  $6 = $2 >>> 1;
  $7 = $6&255;
  HEAP8[$this>>0] = $7;
  $8 = ((($this)) + 4|0);
  $__p$0$ph = $8;
 } else {
  $9 = (($3) + 4)|0;
  $10 = $9 & -4;
  $11 = $10 << 2;
  $12 = (__Znwj($11)|0);
  $13 = ((($this)) + 8|0);
  HEAP32[$13>>2] = $12;
  $14 = $10 | 1;
  HEAP32[$this>>2] = $14;
  $15 = ((($this)) + 4|0);
  HEAP32[$15>>2] = $3;
  $__p$0$ph = $12;
 }
 $16 = $__last;
 $17 = (($16) - ($0))|0;
 $18 = $17 >>> 2;
 $19 = ($__first|0)==($__last|0);
 if (!($19)) {
  $$04 = $__first;$__p$03 = $__p$0$ph;
  while(1) {
   $20 = HEAP32[$$04>>2]|0;
   HEAP32[$__p$03>>2] = $20;
   $21 = ((($$04)) + 4|0);
   $22 = ((($__p$03)) + 4|0);
   $23 = ($21|0)==($__last|0);
   if ($23) {
    break;
   } else {
    $$04 = $21;$__p$03 = $22;
   }
  }
 }
 $scevgep = (($__p$0$ph) + ($18<<2)|0);
 HEAP32[$scevgep>>2] = 0;
 return;
}
function __ZNSt3__18ios_base5clearEj($this,$state) {
 $this = $this|0;
 $state = $state|0;
 var $$state = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $1 = ((($this)) + 24|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 $4 = $3&1;
 $$state = $4 | $state;
 $5 = ((($this)) + 16|0);
 HEAP32[$5>>2] = $$state;
 $6 = $3&1;
 $7 = $6 | $state;
 $8 = ((($this)) + 20|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $7 & $9;
 $11 = ($10|0)==(0);
 if ($11) {
  STACKTOP = sp;return;
 }
 $12 = (___cxa_allocate_exception(16)|0);
 (__ZNSt3__117iostream_categoryEv()|0);
 HEAP32[$0>>2] = 1;
 $13 = ((($0)) + 4|0);
 HEAP32[$13>>2] = (9284);
 __THREW__ = 0;
 invoke_viii(424,($12|0),(24558|0),($0|0));
 $14 = __THREW__; __THREW__ = 0;
 $15 = $14&1;
 if ($15) {
  $16 = ___cxa_find_matching_catch()|0;
  $17 = tempRet0;
  ___cxa_free_exception(($12|0));
  ___resumeException($16|0);
  // unreachable;
 } else {
  ___cxa_throw(($12|0),(648|0),(100|0));
  // unreachable;
 }
}
function __ZNSt3__18ios_baseD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (9240);
 __THREW__ = 0;
 invoke_vii(425,($this|0),0);
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if ($1) {
  $11 = ___cxa_find_matching_catch(0|0)|0;
  $12 = tempRet0;
  ___clang_call_terminate($11);
  // unreachable;
 } else {
  $2 = ((($this)) + 28|0);
  __ZNSt3__16localeD2Ev($2);
  $3 = ((($this)) + 32|0);
  $4 = HEAP32[$3>>2]|0;
  _free($4);
  $5 = ((($this)) + 36|0);
  $6 = HEAP32[$5>>2]|0;
  _free($6);
  $7 = ((($this)) + 48|0);
  $8 = HEAP32[$7>>2]|0;
  _free($8);
  $9 = ((($this)) + 60|0);
  $10 = HEAP32[$9>>2]|0;
  _free($10);
  return;
 }
}
function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 return;
}
function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__18ios_base16__call_callbacksENS0_5eventE($this,$ev) {
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 40|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 32|0);
 $3 = ((($this)) + 36|0);
 $4 = ($1|0)==(0);
 if (!($4)) {
  $i$01 = $1;
  while(1) {
   $5 = (($i$01) + -1)|0;
   $6 = HEAP32[$2>>2]|0;
   $7 = (($6) + ($5<<2)|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = HEAP32[$3>>2]|0;
   $10 = (($9) + ($5<<2)|0);
   $11 = HEAP32[$10>>2]|0;
   FUNCTION_TABLE_viii[$8 & 1023]($ev,$this,$11);
   $12 = ($5|0)==(0);
   if ($12) {
    break;
   } else {
    $i$01 = $5;
   }
  }
 }
 return;
}
function __ZNKSt3__18ios_base6getlocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $1 = ((($this)) + 28|0);
 __ZNSt3__16localeC2ERKS0_($0,$1);
 $2 = HEAP32[$0>>2]|0;
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__18ios_base4initEPv($this,$sb) {
 $this = $this|0;
 $sb = $sb|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $not$ = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 24|0);
 HEAP32[$0>>2] = $sb;
 $not$ = ($sb|0)==(0|0);
 $1 = $not$&1;
 $2 = ((($this)) + 16|0);
 HEAP32[$2>>2] = $1;
 $3 = ((($this)) + 20|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($this)) + 4|0);
 HEAP32[$4>>2] = 4098;
 $5 = ((($this)) + 12|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($this)) + 8|0);
 HEAP32[$6>>2] = 6;
 $7 = ((($this)) + 32|0);
 $8 = ((($this)) + 28|0);
 dest=$7; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 __ZNSt3__16localeC2Ev($8);
 return;
}
function __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 return;
}
function __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (8932);
 $0 = ((($this)) + 4|0);
 __ZNSt3__16localeD2Ev($0);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (8932);
 $0 = ((($this)) + 4|0);
 __ZNSt3__16localeD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (8932);
 $0 = ((($this)) + 4|0);
 __ZNSt3__16localeC2Ev($0);
 $1 = ((($this)) + 8|0);
 ;HEAP32[$1>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;HEAP32[$1+12>>2]=0|0;HEAP32[$1+16>>2]=0|0;HEAP32[$1+20>>2]=0|0;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci($this,$0,$1) {
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($this|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result,$this,$0,$1,$2,$3) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $agg$result;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($agg$result)) + 8|0);
 $9 = $8;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = -1;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result,$this,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $agg$result;
 $3 = $2;
 HEAP32[$3>>2] = 0;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($agg$result)) + 8|0);
 $7 = $6;
 $8 = $7;
 HEAP32[$8>>2] = -1;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$lcssa = 0, $__i$02 = 0;
 var $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 $1 = ((($this)) + 16|0);
 $2 = ($__n|0)>(0);
 L1: do {
  if ($2) {
   $$01 = $__s;$__i$02 = 0;
   while(1) {
    $3 = HEAP32[$0>>2]|0;
    $4 = HEAP32[$1>>2]|0;
    $5 = ($3>>>0)<($4>>>0);
    if ($5) {
     $6 = ((($3)) + 1|0);
     HEAP32[$0>>2] = $6;
     $7 = HEAP8[$3>>0]|0;
     $storemerge = $7;
    } else {
     $8 = HEAP32[$this>>2]|0;
     $9 = ((($8)) + 40|0);
     $10 = HEAP32[$9>>2]|0;
     $11 = (FUNCTION_TABLE_ii[$10 & 1023]($this)|0);
     $12 = ($11|0)==(-1);
     if ($12) {
      $__i$0$lcssa = $__i$02;
      break L1;
     }
     $13 = $11&255;
     $storemerge = $13;
    }
    HEAP8[$$01>>0] = $storemerge;
    $14 = (($__i$02) + 1)|0;
    $15 = ((($$01)) + 1|0);
    $16 = ($14|0)<($__n|0);
    if ($16) {
     $$01 = $15;$__i$02 = $14;
    } else {
     $__i$0$lcssa = $14;
     break;
    }
   }
  } else {
   $__i$0$lcssa = 0;
  }
 } while(0);
 return ($__i$0$lcssa|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + 36|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_ii[$2 & 1023]($this)|0);
 $4 = ($3|0)==(-1);
 if ($4) {
  $$0 = -1;
 } else {
  $5 = ((($this)) + 12|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ((($6)) + 1|0);
  HEAP32[$5>>2] = $7;
  $8 = HEAP8[$6>>0]|0;
  $9 = $8&255;
  $$0 = $9;
 }
 return ($$0|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$lcssa = 0;
 var $__i$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 24|0);
 $1 = ((($this)) + 28|0);
 $2 = ($__n|0)>(0);
 L1: do {
  if ($2) {
   $$02 = $__s;$__i$01 = 0;
   while(1) {
    $3 = HEAP32[$0>>2]|0;
    $4 = HEAP32[$1>>2]|0;
    $5 = ($3>>>0)<($4>>>0);
    if ($5) {
     $6 = HEAP8[$$02>>0]|0;
     $7 = ((($3)) + 1|0);
     HEAP32[$0>>2] = $7;
     HEAP8[$3>>0] = $6;
    } else {
     $8 = HEAP32[$this>>2]|0;
     $9 = ((($8)) + 52|0);
     $10 = HEAP32[$9>>2]|0;
     $11 = HEAP8[$$02>>0]|0;
     $12 = $11&255;
     $13 = (FUNCTION_TABLE_iii[$10 & 1023]($this,$12)|0);
     $14 = ($13|0)==(-1);
     if ($14) {
      $__i$0$lcssa = $__i$01;
      break L1;
     }
    }
    $15 = ((($$02)) + 1|0);
    $16 = (($__i$01) + 1)|0;
    $17 = ($16|0)<($__n|0);
    if ($17) {
     $$02 = $15;$__i$01 = $16;
    } else {
     $__i$0$lcssa = $16;
     break;
    }
   }
  } else {
   $__i$0$lcssa = 0;
  }
 } while(0);
 return ($__i$0$lcssa|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (8996);
 $0 = ((($this)) + 4|0);
 __ZNSt3__16localeD2Ev($0);
 return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (8996);
 $0 = ((($this)) + 4|0);
 __ZNSt3__16localeD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (8996);
 $0 = ((($this)) + 4|0);
 __ZNSt3__16localeC2Ev($0);
 $1 = ((($this)) + 8|0);
 ;HEAP32[$1>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;HEAP32[$1+12>>2]=0|0;HEAP32[$1+16>>2]=0|0;HEAP32[$1+20>>2]=0|0;
 return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi($this,$0,$1) {
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($this|0);
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj($agg$result,$this,$0,$1,$2,$3) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $agg$result;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($agg$result)) + 8|0);
 $9 = $8;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = -1;
 return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result,$this,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $agg$result;
 $3 = $2;
 HEAP32[$3>>2] = 0;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($agg$result)) + 8|0);
 $7 = $6;
 $8 = $7;
 HEAP32[$8>>2] = -1;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE4syncEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9showmanycEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$lcssa = 0, $__i$02 = 0, $storemerge = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 $1 = ((($this)) + 16|0);
 $2 = ($__n|0)>(0);
 L1: do {
  if ($2) {
   $$01 = $__s;$__i$02 = 0;
   while(1) {
    $3 = HEAP32[$0>>2]|0;
    $4 = HEAP32[$1>>2]|0;
    $5 = ($3>>>0)<($4>>>0);
    if ($5) {
     $6 = ((($3)) + 4|0);
     HEAP32[$0>>2] = $6;
     $7 = HEAP32[$3>>2]|0;
     $storemerge = $7;
    } else {
     $8 = HEAP32[$this>>2]|0;
     $9 = ((($8)) + 40|0);
     $10 = HEAP32[$9>>2]|0;
     $11 = (FUNCTION_TABLE_ii[$10 & 1023]($this)|0);
     $12 = ($11|0)==(-1);
     if ($12) {
      $__i$0$lcssa = $__i$02;
      break L1;
     } else {
      $storemerge = $11;
     }
    }
    HEAP32[$$01>>2] = $storemerge;
    $13 = (($__i$02) + 1)|0;
    $14 = ((($$01)) + 4|0);
    $15 = ($13|0)<($__n|0);
    if ($15) {
     $$01 = $14;$__i$02 = $13;
    } else {
     $__i$0$lcssa = $13;
     break;
    }
   }
  } else {
   $__i$0$lcssa = 0;
  }
 } while(0);
 return ($__i$0$lcssa|0);
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9underflowEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5uflowEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + 36|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_ii[$2 & 1023]($this)|0);
 $4 = ($3|0)==(-1);
 if ($4) {
  $$0 = -1;
 } else {
  $5 = ((($this)) + 12|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ((($6)) + 4|0);
  HEAP32[$5>>2] = $7;
  $8 = HEAP32[$6>>2]|0;
  $$0 = $8;
 }
 return ($$0|0);
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$lcssa = 0, $__i$01 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 24|0);
 $1 = ((($this)) + 28|0);
 $2 = ($__n|0)>(0);
 L1: do {
  if ($2) {
   $$02 = $__s;$__i$01 = 0;
   while(1) {
    $3 = HEAP32[$0>>2]|0;
    $4 = HEAP32[$1>>2]|0;
    $5 = ($3>>>0)<($4>>>0);
    if ($5) {
     $6 = HEAP32[$$02>>2]|0;
     $7 = ((($3)) + 4|0);
     HEAP32[$0>>2] = $7;
     HEAP32[$3>>2] = $6;
    } else {
     $8 = HEAP32[$this>>2]|0;
     $9 = ((($8)) + 52|0);
     $10 = HEAP32[$9>>2]|0;
     $11 = HEAP32[$$02>>2]|0;
     $12 = (FUNCTION_TABLE_iii[$10 & 1023]($this,$11)|0);
     $13 = ($12|0)==(-1);
     if ($13) {
      $__i$0$lcssa = $__i$01;
      break L1;
     }
    }
    $14 = ((($$02)) + 4|0);
    $15 = (($__i$01) + 1)|0;
    $16 = ($15|0)<($__n|0);
    if ($16) {
     $$02 = $14;$__i$01 = $15;
    } else {
     $__i$0$lcssa = $15;
     break;
    }
   }
  } else {
   $__i$0$lcssa = 0;
  }
 } while(0);
 return ($__i$0$lcssa|0);
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE8overflowEj($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 8)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 return;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($this) {
 $this = $this|0;
 var $$0 = 0, $$sum = 0, $$sum1 = 0, $$sum2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__s = sp;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 24)|0;
 $3 = (($this) + ($$sum)|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 L1: do {
  if (!($5)) {
   __THREW__ = 0;
   invoke_vii(356,($__s|0),($this|0));
   $6 = __THREW__; __THREW__ = 0;
   $7 = $6&1;
   L3: do {
    if ($7) {
     $31 = ___cxa_find_matching_catch(0|0)|0;
     $32 = tempRet0;
     $$0 = $31;
    } else {
     $8 = HEAP8[$__s>>0]|0;
     $9 = ($8<<24>>24)==(0);
     do {
      if (!($9)) {
       $10 = HEAP32[$this>>2]|0;
       $11 = ((($10)) + -12|0);
       $12 = HEAP32[$11>>2]|0;
       $$sum1 = (($12) + 24)|0;
       $13 = (($this) + ($$sum1)|0);
       $14 = HEAP32[$13>>2]|0;
       $15 = HEAP32[$14>>2]|0;
       $16 = ((($15)) + 24|0);
       $17 = HEAP32[$16>>2]|0;
       __THREW__ = 0;
       $18 = (invoke_ii($17|0,($14|0))|0);
       $19 = __THREW__; __THREW__ = 0;
       $20 = $19&1;
       if (!($20)) {
        $21 = ($18|0)==(-1);
        if (!($21)) {
         break;
        }
        $22 = HEAP32[$this>>2]|0;
        $23 = ((($22)) + -12|0);
        $24 = HEAP32[$23>>2]|0;
        $25 = (($this) + ($24)|0);
        $$sum2 = (($24) + 16)|0;
        $26 = (($this) + ($$sum2)|0);
        $27 = HEAP32[$26>>2]|0;
        $28 = $27 | 1;
        __THREW__ = 0;
        invoke_vii(359,($25|0),($28|0));
        $29 = __THREW__; __THREW__ = 0;
        $30 = $29&1;
        if (!($30)) {
         break;
        }
       }
       $33 = ___cxa_find_matching_catch(0|0)|0;
       $34 = tempRet0;
       __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
       $$0 = $33;
       break L3;
      }
     } while(0);
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
     break L1;
    }
   } while(0);
   (___cxa_begin_catch(($$0|0))|0);
   $35 = HEAP32[$this>>2]|0;
   $36 = ((($35)) + -12|0);
   $37 = HEAP32[$36>>2]|0;
   $38 = (($this) + ($37)|0);
   __THREW__ = 0;
   invoke_vi(360,($38|0));
   $39 = __THREW__; __THREW__ = 0;
   $40 = $39&1;
   if (!($40)) {
    ___cxa_end_catch();
    break;
   }
   $41 = ___cxa_find_matching_catch()|0;
   $42 = tempRet0;
   __THREW__ = 0;
   invoke_v(361);
   $43 = __THREW__; __THREW__ = 0;
   $44 = $43&1;
   if ($44) {
    $45 = ___cxa_find_matching_catch(0|0)|0;
    $46 = tempRet0;
    ___clang_call_terminate($45);
    // unreachable;
   } else {
    ___resumeException($41|0);
    // unreachable;
   }
  }
 } while(0);
 STACKTOP = sp;return ($this|0);
}
function __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 | 1;
 HEAP32[$0>>2] = $2;
 $3 = ((($this)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $4 & 1;
 $6 = ($5|0)==(0);
 if ($6) {
  return;
 } else {
  ___cxa_rethrow();
  // unreachable;
 }
}
function __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 8)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 return;
}
function __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv($this) {
 $this = $this|0;
 var $$0 = 0, $$sum = 0, $$sum1 = 0, $$sum2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__s = sp;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 24)|0;
 $3 = (($this) + ($$sum)|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 L1: do {
  if (!($5)) {
   __THREW__ = 0;
   invoke_vii(426,($__s|0),($this|0));
   $6 = __THREW__; __THREW__ = 0;
   $7 = $6&1;
   L3: do {
    if ($7) {
     $31 = ___cxa_find_matching_catch(0|0)|0;
     $32 = tempRet0;
     $$0 = $31;
    } else {
     $8 = HEAP8[$__s>>0]|0;
     $9 = ($8<<24>>24)==(0);
     do {
      if (!($9)) {
       $10 = HEAP32[$this>>2]|0;
       $11 = ((($10)) + -12|0);
       $12 = HEAP32[$11>>2]|0;
       $$sum1 = (($12) + 24)|0;
       $13 = (($this) + ($$sum1)|0);
       $14 = HEAP32[$13>>2]|0;
       $15 = HEAP32[$14>>2]|0;
       $16 = ((($15)) + 24|0);
       $17 = HEAP32[$16>>2]|0;
       __THREW__ = 0;
       $18 = (invoke_ii($17|0,($14|0))|0);
       $19 = __THREW__; __THREW__ = 0;
       $20 = $19&1;
       if (!($20)) {
        $21 = ($18|0)==(-1);
        if (!($21)) {
         break;
        }
        $22 = HEAP32[$this>>2]|0;
        $23 = ((($22)) + -12|0);
        $24 = HEAP32[$23>>2]|0;
        $25 = (($this) + ($24)|0);
        $$sum2 = (($24) + 16)|0;
        $26 = (($this) + ($$sum2)|0);
        $27 = HEAP32[$26>>2]|0;
        $28 = $27 | 1;
        __THREW__ = 0;
        invoke_vii(359,($25|0),($28|0));
        $29 = __THREW__; __THREW__ = 0;
        $30 = $29&1;
        if (!($30)) {
         break;
        }
       }
       $33 = ___cxa_find_matching_catch(0|0)|0;
       $34 = tempRet0;
       __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($__s);
       $$0 = $33;
       break L3;
      }
     } while(0);
     __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($__s);
     break L1;
    }
   } while(0);
   (___cxa_begin_catch(($$0|0))|0);
   $35 = HEAP32[$this>>2]|0;
   $36 = ((($35)) + -12|0);
   $37 = HEAP32[$36>>2]|0;
   $38 = (($this) + ($37)|0);
   __THREW__ = 0;
   invoke_vi(360,($38|0));
   $39 = __THREW__; __THREW__ = 0;
   $40 = $39&1;
   if (!($40)) {
    ___cxa_end_catch();
    break;
   }
   $41 = ___cxa_find_matching_catch()|0;
   $42 = tempRet0;
   __THREW__ = 0;
   invoke_v(361);
   $43 = __THREW__; __THREW__ = 0;
   $44 = $43&1;
   if ($44) {
    $45 = ___cxa_find_matching_catch(0|0)|0;
    $46 = tempRet0;
    ___clang_call_terminate($45);
    // unreachable;
   } else {
    ___resumeException($41|0);
    // unreachable;
   }
  }
 } while(0);
 STACKTOP = sp;return ($this|0);
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 4)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($this,$__os) {
 $this = $this|0;
 $__os = $__os|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$this>>0] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = $__os;
 $1 = HEAP32[$__os>>2]|0;
 $2 = ((($1)) + -12|0);
 $3 = HEAP32[$2>>2]|0;
 $$sum = (($3) + 16)|0;
 $4 = (($__os) + ($$sum)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0);
 if ($6) {
  $$sum1 = (($3) + 72)|0;
  $7 = (($__os) + ($$sum1)|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($8|0)==(0|0);
  if (!($9)) {
   (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($8)|0);
  }
  HEAP8[$this>>0] = 1;
 }
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($this) {
 $this = $this|0;
 var $$sum = 0, $$sum1 = 0, $$sum2 = 0, $$sum3 = 0, $$sum4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + -12|0);
 $4 = HEAP32[$3>>2]|0;
 $$sum = (($4) + 24)|0;
 $5 = (($1) + ($$sum)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0|0);
 do {
  if (!($7)) {
   $$sum1 = (($4) + 16)|0;
   $8 = (($1) + ($$sum1)|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = ($9|0)==(0);
   if ($10) {
    $$sum2 = (($4) + 4)|0;
    $11 = (($1) + ($$sum2)|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = $12 & 8192;
    $14 = ($13|0)==(0);
    if (!($14)) {
     $15 = (__ZSt18uncaught_exceptionv()|0);
     if (!($15)) {
      $16 = HEAP32[$0>>2]|0;
      $17 = HEAP32[$16>>2]|0;
      $18 = ((($17)) + -12|0);
      $19 = HEAP32[$18>>2]|0;
      $$sum3 = (($19) + 24)|0;
      $20 = (($16) + ($$sum3)|0);
      $21 = HEAP32[$20>>2]|0;
      $22 = HEAP32[$21>>2]|0;
      $23 = ((($22)) + 24|0);
      $24 = HEAP32[$23>>2]|0;
      __THREW__ = 0;
      $25 = (invoke_ii($24|0,($21|0))|0);
      $26 = __THREW__; __THREW__ = 0;
      $27 = $26&1;
      if (!($27)) {
       $28 = ($25|0)==(-1);
       if (!($28)) {
        break;
       }
       $29 = HEAP32[$0>>2]|0;
       $30 = HEAP32[$29>>2]|0;
       $31 = ((($30)) + -12|0);
       $32 = HEAP32[$31>>2]|0;
       $33 = (($29) + ($32)|0);
       $$sum4 = (($32) + 16)|0;
       $34 = (($29) + ($$sum4)|0);
       $35 = HEAP32[$34>>2]|0;
       $36 = $35 | 1;
       __THREW__ = 0;
       invoke_vii(359,($33|0),($36|0));
       $37 = __THREW__; __THREW__ = 0;
       $38 = $37&1;
       if (!($38)) {
        break;
       }
      }
      $39 = ___cxa_find_matching_catch(0|0)|0;
      $40 = tempRet0;
      (___cxa_begin_catch(($39|0))|0);
      __THREW__ = 0;
      invoke_v(361);
      $41 = __THREW__; __THREW__ = 0;
      $42 = $41&1;
      if ($42) {
       $43 = ___cxa_find_matching_catch(0|0)|0;
       $44 = tempRet0;
       ___clang_call_terminate($43);
       // unreachable;
      }
     }
    }
   }
  }
 } while(0);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi6Z2D = 0, $$pre$phi8Z2D = 0, $$pre$phiZ2D = 0, $$sum = 0, $$sum$i = 0, $$sum4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $8 = 0, $9 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 24|0;
 $0 = sp + 20|0;
 $1 = sp + 16|0;
 $__s = sp + 8|0;
 $2 = sp;
 __THREW__ = 0;
 invoke_vii(356,($__s|0),($this|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 L1: do {
  if ($4) {
   $55 = ___cxa_find_matching_catch(0|0)|0;
   $56 = tempRet0;
   $$1 = $55;$$pre$phi6Z2D = $this;$$pre$phiZ2D = $this;
   label = 19;
  } else {
   $5 = HEAP8[$__s>>0]|0;
   $6 = ($5<<24>>24)==(0);
   do {
    if (!($6)) {
     $7 = HEAP32[$this>>2]|0;
     $8 = ((($7)) + -12|0);
     $9 = HEAP32[$8>>2]|0;
     $10 = (($this) + ($9)|0);
     $11 = (__ZNKSt3__18ios_base6getlocEv($10)|0);
     HEAP32[$2>>2] = $11;
     __THREW__ = 0;
     $12 = (invoke_iii(355,($2|0),(9564|0))|0);
     $13 = __THREW__; __THREW__ = 0;
     $14 = $13&1;
     if ($14) {
      $59 = ___cxa_find_matching_catch(0|0)|0;
      $60 = tempRet0;
      __ZNSt3__16localeD2Ev($2);
      $$0 = $59;
     } else {
      __ZNSt3__16localeD2Ev($2);
      $15 = HEAP32[$this>>2]|0;
      $16 = ((($15)) + -12|0);
      $17 = HEAP32[$16>>2]|0;
      $$sum$i = (($17) + 24)|0;
      $18 = (($this) + ($$sum$i)|0);
      $19 = HEAP32[$18>>2]|0;
      $20 = (($this) + ($17)|0);
      $$sum = (($17) + 76)|0;
      $21 = (($this) + ($$sum)|0);
      $22 = HEAP32[$21>>2]|0;
      $23 = ($22|0)==(-1);
      do {
       if ($23) {
        $24 = (__ZNKSt3__18ios_base6getlocEv($20)|0);
        HEAP32[$1>>2] = $24;
        __THREW__ = 0;
        $25 = (invoke_iii(355,($1|0),(10392|0))|0);
        $26 = __THREW__; __THREW__ = 0;
        $27 = $26&1;
        if (!($27)) {
         $28 = HEAP32[$25>>2]|0;
         $29 = ((($28)) + 28|0);
         $30 = HEAP32[$29>>2]|0;
         __THREW__ = 0;
         $31 = (invoke_iii($30|0,($25|0),32)|0);
         $32 = __THREW__; __THREW__ = 0;
         $33 = $32&1;
         if (!($33)) {
          __ZNSt3__16localeD2Ev($1);
          $36 = $31 << 24 >> 24;
          HEAP32[$21>>2] = $36;
          $$pre$phi8Z2D = $20;$38 = $36;
          label = 10;
          break;
         }
        }
        $34 = ___cxa_find_matching_catch(0|0)|0;
        $35 = tempRet0;
        __ZNSt3__16localeD2Ev($1);
        $eh$lpad$body$indexZ2D = $34;
       } else {
        $$pre$phi8Z2D = $20;$38 = $22;
        label = 10;
       }
      } while(0);
      if ((label|0) == 10) {
       $37 = $38&255;
       $39 = HEAP32[$12>>2]|0;
       $40 = ((($39)) + 16|0);
       $41 = HEAP32[$40>>2]|0;
       HEAP32[$0>>2] = $19;
       __THREW__ = 0;
       ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
       $42 = (invoke_iiiiii($41|0,($12|0),($$byval_copy|0),($$pre$phi8Z2D|0),($37|0),($__n|0))|0);
       $43 = __THREW__; __THREW__ = 0;
       $44 = $43&1;
       if (!($44)) {
        $45 = ($42|0)==(0|0);
        if (!($45)) {
         break;
        }
        $46 = HEAP32[$this>>2]|0;
        $47 = ((($46)) + -12|0);
        $48 = HEAP32[$47>>2]|0;
        $49 = (($this) + ($48)|0);
        $$sum4 = (($48) + 16)|0;
        $50 = (($this) + ($$sum4)|0);
        $51 = HEAP32[$50>>2]|0;
        $52 = $51 | 5;
        __THREW__ = 0;
        invoke_vii(359,($49|0),($52|0));
        $53 = __THREW__; __THREW__ = 0;
        $54 = $53&1;
        if (!($54)) {
         break;
        }
       }
       $57 = ___cxa_find_matching_catch(0|0)|0;
       $58 = tempRet0;
       $eh$lpad$body$indexZ2D = $57;
      }
      $$0 = $eh$lpad$body$indexZ2D;
     }
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
     $$1 = $$0;$$pre$phi6Z2D = $this;$$pre$phiZ2D = $this;
     label = 19;
     break L1;
    }
   } while(0);
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
  }
 } while(0);
 do {
  if ((label|0) == 19) {
   (___cxa_begin_catch(($$1|0))|0);
   $61 = HEAP32[$$pre$phiZ2D>>2]|0;
   $62 = ((($61)) + -12|0);
   $63 = HEAP32[$62>>2]|0;
   $64 = (($$pre$phi6Z2D) + ($63)|0);
   __THREW__ = 0;
   invoke_vi(360,($64|0));
   $65 = __THREW__; __THREW__ = 0;
   $66 = $65&1;
   if (!($66)) {
    ___cxa_end_catch();
    break;
   }
   $67 = ___cxa_find_matching_catch()|0;
   $68 = tempRet0;
   __THREW__ = 0;
   invoke_v(361);
   $69 = __THREW__; __THREW__ = 0;
   $70 = $69&1;
   if ($70) {
    $71 = ___cxa_find_matching_catch(0|0)|0;
    $72 = tempRet0;
    ___clang_call_terminate($71);
    // unreachable;
   } else {
    ___resumeException($67|0);
    // unreachable;
   }
  }
 } while(0);
 STACKTOP = sp;return ($this|0);
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd($this,$__n) {
 $this = $this|0;
 $__n = +$__n;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi5Z2D = 0, $$pre$phi7Z2D = 0, $$pre$phiZ2D = 0, $$sum = 0, $$sum$i = 0, $$sum3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $8 = 0, $9 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 24|0;
 $0 = sp + 20|0;
 $1 = sp + 16|0;
 $__s = sp + 8|0;
 $2 = sp;
 __THREW__ = 0;
 invoke_vii(356,($__s|0),($this|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 L1: do {
  if ($4) {
   $55 = ___cxa_find_matching_catch(0|0)|0;
   $56 = tempRet0;
   $$1 = $55;$$pre$phi5Z2D = $this;$$pre$phiZ2D = $this;
   label = 19;
  } else {
   $5 = HEAP8[$__s>>0]|0;
   $6 = ($5<<24>>24)==(0);
   do {
    if (!($6)) {
     $7 = HEAP32[$this>>2]|0;
     $8 = ((($7)) + -12|0);
     $9 = HEAP32[$8>>2]|0;
     $10 = (($this) + ($9)|0);
     $11 = (__ZNKSt3__18ios_base6getlocEv($10)|0);
     HEAP32[$2>>2] = $11;
     __THREW__ = 0;
     $12 = (invoke_iii(355,($2|0),(9564|0))|0);
     $13 = __THREW__; __THREW__ = 0;
     $14 = $13&1;
     if ($14) {
      $59 = ___cxa_find_matching_catch(0|0)|0;
      $60 = tempRet0;
      __ZNSt3__16localeD2Ev($2);
      $$0 = $59;
     } else {
      __ZNSt3__16localeD2Ev($2);
      $15 = HEAP32[$this>>2]|0;
      $16 = ((($15)) + -12|0);
      $17 = HEAP32[$16>>2]|0;
      $$sum$i = (($17) + 24)|0;
      $18 = (($this) + ($$sum$i)|0);
      $19 = HEAP32[$18>>2]|0;
      $20 = (($this) + ($17)|0);
      $$sum = (($17) + 76)|0;
      $21 = (($this) + ($$sum)|0);
      $22 = HEAP32[$21>>2]|0;
      $23 = ($22|0)==(-1);
      do {
       if ($23) {
        $24 = (__ZNKSt3__18ios_base6getlocEv($20)|0);
        HEAP32[$1>>2] = $24;
        __THREW__ = 0;
        $25 = (invoke_iii(355,($1|0),(10392|0))|0);
        $26 = __THREW__; __THREW__ = 0;
        $27 = $26&1;
        if (!($27)) {
         $28 = HEAP32[$25>>2]|0;
         $29 = ((($28)) + 28|0);
         $30 = HEAP32[$29>>2]|0;
         __THREW__ = 0;
         $31 = (invoke_iii($30|0,($25|0),32)|0);
         $32 = __THREW__; __THREW__ = 0;
         $33 = $32&1;
         if (!($33)) {
          __ZNSt3__16localeD2Ev($1);
          $36 = $31 << 24 >> 24;
          HEAP32[$21>>2] = $36;
          $$pre$phi7Z2D = $20;$38 = $36;
          label = 10;
          break;
         }
        }
        $34 = ___cxa_find_matching_catch(0|0)|0;
        $35 = tempRet0;
        __ZNSt3__16localeD2Ev($1);
        $eh$lpad$body$indexZ2D = $34;
       } else {
        $$pre$phi7Z2D = $20;$38 = $22;
        label = 10;
       }
      } while(0);
      if ((label|0) == 10) {
       $37 = $38&255;
       $39 = HEAP32[$12>>2]|0;
       $40 = ((($39)) + 32|0);
       $41 = HEAP32[$40>>2]|0;
       HEAP32[$0>>2] = $19;
       __THREW__ = 0;
       ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
       $42 = (invoke_iiiiid($41|0,($12|0),($$byval_copy|0),($$pre$phi7Z2D|0),($37|0),(+$__n))|0);
       $43 = __THREW__; __THREW__ = 0;
       $44 = $43&1;
       if (!($44)) {
        $45 = ($42|0)==(0|0);
        if (!($45)) {
         break;
        }
        $46 = HEAP32[$this>>2]|0;
        $47 = ((($46)) + -12|0);
        $48 = HEAP32[$47>>2]|0;
        $49 = (($this) + ($48)|0);
        $$sum3 = (($48) + 16)|0;
        $50 = (($this) + ($$sum3)|0);
        $51 = HEAP32[$50>>2]|0;
        $52 = $51 | 5;
        __THREW__ = 0;
        invoke_vii(359,($49|0),($52|0));
        $53 = __THREW__; __THREW__ = 0;
        $54 = $53&1;
        if (!($54)) {
         break;
        }
       }
       $57 = ___cxa_find_matching_catch(0|0)|0;
       $58 = tempRet0;
       $eh$lpad$body$indexZ2D = $57;
      }
      $$0 = $eh$lpad$body$indexZ2D;
     }
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
     $$1 = $$0;$$pre$phi5Z2D = $this;$$pre$phiZ2D = $this;
     label = 19;
     break L1;
    }
   } while(0);
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
  }
 } while(0);
 do {
  if ((label|0) == 19) {
   (___cxa_begin_catch(($$1|0))|0);
   $61 = HEAP32[$$pre$phiZ2D>>2]|0;
   $62 = ((($61)) + -12|0);
   $63 = HEAP32[$62>>2]|0;
   $64 = (($$pre$phi5Z2D) + ($63)|0);
   __THREW__ = 0;
   invoke_vi(360,($64|0));
   $65 = __THREW__; __THREW__ = 0;
   $66 = $65&1;
   if (!($66)) {
    ___cxa_end_catch();
    break;
   }
   $67 = ___cxa_find_matching_catch()|0;
   $68 = tempRet0;
   __THREW__ = 0;
   invoke_v(361);
   $69 = __THREW__; __THREW__ = 0;
   $70 = $69&1;
   if ($70) {
    $71 = ___cxa_find_matching_catch(0|0)|0;
    $72 = tempRet0;
    ___clang_call_terminate($71);
    // unreachable;
   } else {
    ___resumeException($67|0);
    // unreachable;
   }
  }
 } while(0);
 STACKTOP = sp;return ($this|0);
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$0 = 0, $$pre$phi3Z2D = 0, $$pre$phiZ2D = 0, $$sum = 0, $$sum$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__s = sp;
 __THREW__ = 0;
 invoke_vii(356,($__s|0),($this|0));
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 L1: do {
  if ($1) {
   $35 = ___cxa_find_matching_catch(0|0)|0;
   $36 = tempRet0;
   $$0 = $35;$$pre$phi3Z2D = $this;$$pre$phiZ2D = $this;
   label = 11;
  } else {
   $2 = HEAP8[$__s>>0]|0;
   $3 = ($2<<24>>24)==(0);
   do {
    if (!($3)) {
     $4 = HEAP32[$this>>2]|0;
     $5 = ((($4)) + -12|0);
     $6 = HEAP32[$5>>2]|0;
     $$sum$i = (($6) + 24)|0;
     $7 = (($this) + ($$sum$i)|0);
     $8 = HEAP32[$7>>2]|0;
     $9 = $8;
     $10 = ($8|0)==(0);
     if ($10) {
      label = 8;
     } else {
      $11 = ((($9)) + 24|0);
      $12 = HEAP32[$11>>2]|0;
      $13 = ((($9)) + 28|0);
      $14 = HEAP32[$13>>2]|0;
      $15 = ($12|0)==($14|0);
      if (!($15)) {
       $16 = ((($12)) + 1|0);
       HEAP32[$11>>2] = $16;
       HEAP8[$12>>0] = $__c;
       break;
      }
      $17 = $8;
      $18 = HEAP32[$17>>2]|0;
      $19 = ((($18)) + 52|0);
      $20 = HEAP32[$19>>2]|0;
      $21 = $__c&255;
      __THREW__ = 0;
      $22 = (invoke_iii($20|0,($9|0),($21|0))|0);
      $23 = __THREW__; __THREW__ = 0;
      $24 = $23&1;
      if (!($24)) {
       $25 = ($22|0)==(-1);
       if ($25) {
        label = 8;
       } else {
        break;
       }
      }
     }
     if ((label|0) == 8) {
      $26 = HEAP32[$this>>2]|0;
      $27 = ((($26)) + -12|0);
      $28 = HEAP32[$27>>2]|0;
      $29 = (($this) + ($28)|0);
      $$sum = (($28) + 16)|0;
      $30 = (($this) + ($$sum)|0);
      $31 = HEAP32[$30>>2]|0;
      $32 = $31 | 1;
      __THREW__ = 0;
      invoke_vii(359,($29|0),($32|0));
      $33 = __THREW__; __THREW__ = 0;
      $34 = $33&1;
      if (!($34)) {
       break;
      }
     }
     $37 = ___cxa_find_matching_catch(0|0)|0;
     $38 = tempRet0;
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
     $$0 = $37;$$pre$phi3Z2D = $this;$$pre$phiZ2D = $this;
     label = 11;
     break L1;
    }
   } while(0);
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
  }
 } while(0);
 do {
  if ((label|0) == 11) {
   (___cxa_begin_catch(($$0|0))|0);
   $39 = HEAP32[$$pre$phiZ2D>>2]|0;
   $40 = ((($39)) + -12|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = (($$pre$phi3Z2D) + ($41)|0);
   __THREW__ = 0;
   invoke_vi(360,($42|0));
   $43 = __THREW__; __THREW__ = 0;
   $44 = $43&1;
   if (!($44)) {
    ___cxa_end_catch();
    break;
   }
   $45 = ___cxa_find_matching_catch()|0;
   $46 = tempRet0;
   __THREW__ = 0;
   invoke_v(361);
   $47 = __THREW__; __THREW__ = 0;
   $48 = $47&1;
   if ($48) {
    $49 = ___cxa_find_matching_catch(0|0)|0;
    $50 = tempRet0;
    ___clang_call_terminate($49);
    // unreachable;
   } else {
    ___resumeException($45|0);
    // unreachable;
   }
  }
 } while(0);
 STACKTOP = sp;return ($this|0);
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 4)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryC2ERS3_($this,$__os) {
 $this = $this|0;
 $__os = $__os|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$this>>0] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = $__os;
 $1 = HEAP32[$__os>>2]|0;
 $2 = ((($1)) + -12|0);
 $3 = HEAP32[$2>>2]|0;
 $$sum = (($3) + 16)|0;
 $4 = (($__os) + ($$sum)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0);
 if ($6) {
  $$sum1 = (($3) + 72)|0;
  $7 = (($__os) + ($$sum1)|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($8|0)==(0|0);
  if (!($9)) {
   (__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv($8)|0);
  }
  HEAP8[$this>>0] = 1;
 }
 return;
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($this) {
 $this = $this|0;
 var $$sum = 0, $$sum1 = 0, $$sum2 = 0, $$sum3 = 0, $$sum4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + -12|0);
 $4 = HEAP32[$3>>2]|0;
 $$sum = (($4) + 24)|0;
 $5 = (($1) + ($$sum)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0|0);
 do {
  if (!($7)) {
   $$sum1 = (($4) + 16)|0;
   $8 = (($1) + ($$sum1)|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = ($9|0)==(0);
   if ($10) {
    $$sum2 = (($4) + 4)|0;
    $11 = (($1) + ($$sum2)|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = $12 & 8192;
    $14 = ($13|0)==(0);
    if (!($14)) {
     $15 = (__ZSt18uncaught_exceptionv()|0);
     if (!($15)) {
      $16 = HEAP32[$0>>2]|0;
      $17 = HEAP32[$16>>2]|0;
      $18 = ((($17)) + -12|0);
      $19 = HEAP32[$18>>2]|0;
      $$sum3 = (($19) + 24)|0;
      $20 = (($16) + ($$sum3)|0);
      $21 = HEAP32[$20>>2]|0;
      $22 = HEAP32[$21>>2]|0;
      $23 = ((($22)) + 24|0);
      $24 = HEAP32[$23>>2]|0;
      __THREW__ = 0;
      $25 = (invoke_ii($24|0,($21|0))|0);
      $26 = __THREW__; __THREW__ = 0;
      $27 = $26&1;
      if (!($27)) {
       $28 = ($25|0)==(-1);
       if (!($28)) {
        break;
       }
       $29 = HEAP32[$0>>2]|0;
       $30 = HEAP32[$29>>2]|0;
       $31 = ((($30)) + -12|0);
       $32 = HEAP32[$31>>2]|0;
       $33 = (($29) + ($32)|0);
       $$sum4 = (($32) + 16)|0;
       $34 = (($29) + ($$sum4)|0);
       $35 = HEAP32[$34>>2]|0;
       $36 = $35 | 1;
       __THREW__ = 0;
       invoke_vii(359,($33|0),($36|0));
       $37 = __THREW__; __THREW__ = 0;
       $38 = $37&1;
       if (!($38)) {
        break;
       }
      }
      $39 = ___cxa_find_matching_catch(0|0)|0;
      $40 = tempRet0;
      (___cxa_begin_catch(($39|0))|0);
      __THREW__ = 0;
      invoke_v(361);
      $41 = __THREW__; __THREW__ = 0;
      $42 = $41&1;
      if ($42) {
       $43 = ___cxa_find_matching_catch(0|0)|0;
       $44 = tempRet0;
       ___clang_call_terminate($43);
       // unreachable;
      }
     }
    }
   }
  }
 } while(0);
 return;
}
function __ZNKSt3__119__iostream_category4nameEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (24574|0);
}
function __ZNKSt3__119__iostream_category7messageEi($agg$result,$this,$ev) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, $1 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($ev|0)!=(1);
 $1 = ($ev|0)<(257);
 $or$cond = $0 & $1;
 if ($or$cond) {
  __ZNKSt3__112__do_message7messageEi($agg$result,$this,$ev);
 } else {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,24583,35);
 }
 return;
}
function __ZNSt3__117iostream_categoryEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[832>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((832|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   HEAP32[9284>>2] = (9256);
   (___cxa_atexit((104|0),(9284|0),(___dso_handle|0))|0);
   ___cxa_guard_release((832|0));
  }
 }
 return (9284|0);
}
function __ZNSt3__18ios_base7failureC2EPKcRKNS_10error_codeE($this,$msg,$ec) {
 $this = $this|0;
 $msg = $msg|0;
 $ec = $ec|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $tmpcast$byval_copy = sp + 8|0;
 $0 = sp;
 $1 = $ec;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (($1) + 4)|0;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = $0;
 $8 = $7;
 HEAP32[$8>>2] = $3;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP32[$10>>2] = $6;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$0>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$0+4>>2]|0;
 __ZNSt3__112system_errorC2ENS_10error_codeEPKc($this,$tmpcast$byval_copy,$msg);
 HEAP32[$this>>2] = (9220);
 STACKTOP = sp;return;
}
function __ZNSt3__18ios_base7failureD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112system_errorD2Ev($this);
 return;
}
function __ZNSt3__18ios_base7failureD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112system_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__18ios_baseD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__119__iostream_categoryD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__17collateIcED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__16locale5facetD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17collateIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_($this,$__lo1,$__hi1,$__lo2,$__hi2) {
 $this = $this|0;
 $__lo1 = $__lo1|0;
 $__hi1 = $__hi1|0;
 $__lo2 = $__lo2|0;
 $__hi2 = $__hi2|0;
 var $$0 = 0, $$018 = 0, $$02$lcssa = 0, $$027 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__lo2|0)==($__hi2|0);
 L1: do {
  if ($0) {
   $$02$lcssa = $__lo1;
   label = 6;
  } else {
   $$018 = $__lo2;$$027 = $__lo1;
   while(1) {
    $1 = ($$027|0)==($__hi1|0);
    if ($1) {
     $$0 = -1;
     break L1;
    }
    $2 = HEAP8[$$027>>0]|0;
    $3 = HEAP8[$$018>>0]|0;
    $4 = ($2<<24>>24)<($3<<24>>24);
    if ($4) {
     $$0 = -1;
     break L1;
    }
    $5 = ($3<<24>>24)<($2<<24>>24);
    if ($5) {
     $$0 = 1;
     break L1;
    }
    $6 = ((($$027)) + 1|0);
    $7 = ((($$018)) + 1|0);
    $8 = ($7|0)==($__hi2|0);
    if ($8) {
     $$02$lcssa = $6;
     label = 6;
     break;
    } else {
     $$018 = $7;$$027 = $6;
    }
   }
  }
 } while(0);
 if ((label|0) == 6) {
  $9 = ($$02$lcssa|0)!=($__hi1|0);
  $10 = $9&1;
  $$0 = $10;
 }
 return ($$0|0);
}
function __ZNKSt3__17collateIcE12do_transformEPKcS3_($agg$result,$this,$__lo,$__hi) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result,$__lo,$__hi);
 return;
}
function __ZNKSt3__17collateIcE7do_hashEPKcS3_($this,$__lo,$__hi) {
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__h$0$lcssa = 0, $__h$02 = 0, $__p$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__lo|0)==($__hi|0);
 if ($0) {
  $__h$0$lcssa = 0;
 } else {
  $__h$02 = 0;$__p$01 = $__lo;
  while(1) {
   $1 = $__h$02 << 4;
   $2 = HEAP8[$__p$01>>0]|0;
   $3 = $2 << 24 >> 24;
   $4 = (($3) + ($1))|0;
   $5 = $4 & -268435456;
   $6 = $5 >>> 24;
   $7 = $6 | $5;
   $8 = $7 ^ $4;
   $9 = ((($__p$01)) + 1|0);
   $10 = ($9|0)==($__hi|0);
   if ($10) {
    $__h$0$lcssa = $8;
    break;
   } else {
    $__h$02 = $8;$__p$01 = $9;
   }
  }
 }
 return ($__h$0$lcssa|0);
}
function __ZNSt3__17collateIwED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17collateIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_($this,$__lo1,$__hi1,$__lo2,$__hi2) {
 $this = $this|0;
 $__lo1 = $__lo1|0;
 $__hi1 = $__hi1|0;
 $__lo2 = $__lo2|0;
 $__hi2 = $__hi2|0;
 var $$0 = 0, $$018 = 0, $$02$lcssa = 0, $$027 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__lo2|0)==($__hi2|0);
 L1: do {
  if ($0) {
   $$02$lcssa = $__lo1;
   label = 6;
  } else {
   $$018 = $__lo2;$$027 = $__lo1;
   while(1) {
    $1 = ($$027|0)==($__hi1|0);
    if ($1) {
     $$0 = -1;
     break L1;
    }
    $2 = HEAP32[$$027>>2]|0;
    $3 = HEAP32[$$018>>2]|0;
    $4 = ($2|0)<($3|0);
    if ($4) {
     $$0 = -1;
     break L1;
    }
    $5 = ($3|0)<($2|0);
    if ($5) {
     $$0 = 1;
     break L1;
    }
    $6 = ((($$027)) + 4|0);
    $7 = ((($$018)) + 4|0);
    $8 = ($7|0)==($__hi2|0);
    if ($8) {
     $$02$lcssa = $6;
     label = 6;
     break;
    } else {
     $$018 = $7;$$027 = $6;
    }
   }
  }
 } while(0);
 if ((label|0) == 6) {
  $9 = ($$02$lcssa|0)!=($__hi1|0);
  $10 = $9&1;
  $$0 = $10;
 }
 return ($$0|0);
}
function __ZNKSt3__17collateIwE12do_transformEPKwS3_($agg$result,$this,$__lo,$__hi) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result,$__lo,$__hi);
 return;
}
function __ZNKSt3__17collateIwE7do_hashEPKwS3_($this,$__lo,$__hi) {
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__h$0$lcssa = 0, $__h$02 = 0, $__p$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__lo|0)==($__hi|0);
 if ($0) {
  $__h$0$lcssa = 0;
 } else {
  $__h$02 = 0;$__p$01 = $__lo;
  while(1) {
   $1 = $__h$02 << 4;
   $2 = HEAP32[$__p$01>>2]|0;
   $3 = (($2) + ($1))|0;
   $4 = $3 & -268435456;
   $5 = $4 >>> 24;
   $6 = $5 | $4;
   $7 = $6 ^ $3;
   $8 = ((($__p$01)) + 4|0);
   $9 = ($8|0)==($__hi|0);
   if ($9) {
    $__h$0$lcssa = $7;
    break;
   } else {
    $__h$02 = $7;$__p$01 = $8;
   }
  }
 }
 return ($__h$0$lcssa|0);
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$02 = 0, $$03 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $$sroa$01$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__lv = 0, $__names = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy2 = sp + 60|0;
 $$byval_copy1 = sp + 56|0;
 $$byval_copy = sp + 52|0;
 $__lv = sp + 48|0;
 $0 = sp + 44|0;
 $1 = sp + 40|0;
 $2 = sp + 36|0;
 $3 = sp + 32|0;
 $__names = sp + 8|0;
 $4 = sp;
 $5 = ((($__iob)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 1;
 $8 = ($7|0)==(0);
 L1: do {
  if ($8) {
   HEAP32[$__lv>>2] = -1;
   $9 = HEAP32[$this>>2]|0;
   $10 = ((($9)) + 16|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = HEAP32[$__b>>2]|0;
   HEAP32[$0>>2] = $12;
   $13 = HEAP32[$__e>>2]|0;
   HEAP32[$1>>2] = $13;
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
   $14 = (FUNCTION_TABLE_iiiiiii[$11 & 511]($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__lv)|0);
   HEAP32[$__b>>2] = $14;
   $15 = HEAP32[$__lv>>2]|0;
   switch ($15|0) {
   case 0:  {
    HEAP8[$__v>>0] = 0;
    $$sroa$01$0 = $14;
    break L1;
    break;
   }
   case 1:  {
    HEAP8[$__v>>0] = 1;
    $$sroa$01$0 = $14;
    break L1;
    break;
   }
   default: {
    HEAP8[$__v>>0] = 1;
    HEAP32[$__err>>2] = 4;
    $$sroa$01$0 = $14;
    break L1;
   }
   }
  } else {
   $16 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
   HEAP32[$2>>2] = $16;
   __THREW__ = 0;
   $17 = (invoke_iii(355,($2|0),(10392|0))|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   do {
    if ($19) {
     $44 = ___cxa_find_matching_catch()|0;
     $45 = tempRet0;
     (__ZNSt3__114__shared_count16__release_sharedEv($16)|0);
     $$0 = $44;$$03 = $45;
    } else {
     (__ZNSt3__114__shared_count16__release_sharedEv($16)|0);
     $20 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
     HEAP32[$3>>2] = $20;
     __THREW__ = 0;
     $21 = (invoke_iii(355,($3|0),(10532|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if ($23) {
      $46 = ___cxa_find_matching_catch()|0;
      $47 = tempRet0;
      (__ZNSt3__114__shared_count16__release_sharedEv($20)|0);
      $$0 = $46;$$03 = $47;
      break;
     }
     (__ZNSt3__114__shared_count16__release_sharedEv($20)|0);
     $24 = HEAP32[$21>>2]|0;
     $25 = ((($24)) + 24|0);
     $26 = HEAP32[$25>>2]|0;
     __THREW__ = 0;
     invoke_vii($26|0,($__names|0),($21|0));
     $27 = __THREW__; __THREW__ = 0;
     $28 = $27&1;
     if ($28) {
      $$02 = $__names;
     } else {
      $29 = ((($__names)) + 12|0);
      $30 = HEAP32[$21>>2]|0;
      $31 = ((($30)) + 28|0);
      $32 = HEAP32[$31>>2]|0;
      __THREW__ = 0;
      invoke_vii($32|0,($29|0),($21|0));
      $33 = __THREW__; __THREW__ = 0;
      $34 = $33&1;
      if ($34) {
       $$02 = $29;
      } else {
       $35 = HEAP32[$__e>>2]|0;
       HEAP32[$4>>2] = $35;
       $36 = ((($__names)) + 24|0);
       __THREW__ = 0;
       ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;
       $37 = (invoke_iiiiiiii(427,($__b|0),($$byval_copy2|0),($__names|0),($36|0),($17|0),($__err|0),1)|0);
       $38 = __THREW__; __THREW__ = 0;
       $39 = $38&1;
       if ($39) {
        $54 = ___cxa_find_matching_catch()|0;
        $55 = tempRet0;
        $56 = ((($__names)) + 12|0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names);
        $$0 = $54;$$03 = $55;
        break;
       } else {
        $40 = ($37|0)==($__names|0);
        $41 = $40&1;
        HEAP8[$__v>>0] = $41;
        $42 = HEAP32[$__b>>2]|0;
        $43 = ((($__names)) + 12|0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names);
        $$sroa$01$0 = $42;
        break L1;
       }
      }
     }
     $48 = ___cxa_find_matching_catch()|0;
     $49 = tempRet0;
     $50 = ($__names|0)==($$02|0);
     if ($50) {
      $$0 = $48;$$03 = $49;
     } else {
      $52 = $$02;
      while(1) {
       $51 = ((($52)) + -12|0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($51);
       $53 = ($51|0)==($__names|0);
       if ($53) {
        $$0 = $48;$$03 = $49;
        break;
       } else {
        $52 = $51;
       }
      }
     }
    }
   } while(0);
   ___resumeException($$0|0);
   // unreachable;
  }
 } while(0);
 STACKTOP = sp;return ($$sroa$01$0|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$0$i$i = 0, $$01 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i10 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0;
 var $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i26 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $__atoms = sp + 208|0;
 $__grouping = sp + 196|0;
 $0 = sp + 192|0;
 $__buf = sp + 180|0;
 $__a_end = sp + 176|0;
 $__g = sp + 16|0;
 $__g_end = sp + 8|0;
 $__dc = sp + 4|0;
 HEAP32[$__grouping>>2] = 0;
 $1 = ((($__grouping)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__grouping)) + 8|0);
 HEAP32[$2>>2] = 0;
 __THREW__ = 0;
 $3 = (invoke_ii(357,($__iob|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 do {
  if ($5) {
   $87 = ___cxa_find_matching_catch()|0;
   $88 = tempRet0;
   $$0 = $87;$$01 = $88;
  } else {
   HEAP32[$0>>2] = $3;
   __THREW__ = 0;
   $6 = (invoke_iii(355,($0|0),(10392|0))|0);
   $7 = __THREW__; __THREW__ = 0;
   $8 = $7&1;
   if (!($8)) {
    $9 = HEAP32[$6>>2]|0;
    $10 = ((($9)) + 32|0);
    $11 = HEAP32[$10>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($11|0,($6|0),(24619|0),((24645)|0),($__atoms|0))|0);
    $12 = __THREW__; __THREW__ = 0;
    $13 = $12&1;
    if (!($13)) {
     (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
     HEAP32[$__buf>>2] = 0;
     $14 = ((($__buf)) + 4|0);
     HEAP32[$14>>2] = 0;
     $15 = ((($__buf)) + 8|0);
     HEAP32[$15>>2] = 0;
     $16 = HEAP8[$__buf>>0]|0;
     $17 = $16 & 1;
     $18 = ($17<<24>>24)==(0);
     if ($18) {
      $21 = 10;
     } else {
      $19 = HEAP32[$__buf>>2]|0;
      $20 = $19 & -2;
      $phitmp$i = (($20) + -1)|0;
      $21 = $phitmp$i;
     }
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($21|0),0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     L10: do {
      if ($23) {
       label = 30;
      } else {
       $24 = HEAP8[$__buf>>0]|0;
       $25 = $24 & 1;
       $26 = ($25<<24>>24)==(0);
       $27 = ((($__buf)) + 8|0);
       $28 = HEAP32[$27>>2]|0;
       $29 = ((($__buf)) + 1|0);
       $30 = $26 ? $29 : $28;
       HEAP32[$__a_end>>2] = $30;
       HEAP32[$__g_end>>2] = $__g;
       HEAP32[$__dc>>2] = 0;
       $31 = ((($__buf)) + 4|0);
       $$pre = HEAP32[$__b>>2]|0;
       $$pre$i$i$i10 = $$pre;$__a$0 = $30;
       L12: while(1) {
        $32 = ($$pre$i$i$i10|0)==(0|0);
        if ($32) {
         $$pre$i$i$i = 0;
        } else {
         $33 = ((($$pre$i$i$i10)) + 12|0);
         $34 = HEAP32[$33>>2]|0;
         $35 = ((($$pre$i$i$i10)) + 16|0);
         $36 = HEAP32[$35>>2]|0;
         $37 = ($34|0)==($36|0);
         if ($37) {
          $38 = HEAP32[$$pre$i$i$i10>>2]|0;
          $39 = ((($38)) + 36|0);
          $40 = HEAP32[$39>>2]|0;
          __THREW__ = 0;
          $41 = (invoke_ii($40|0,($$pre$i$i$i10|0))|0);
          $42 = __THREW__; __THREW__ = 0;
          $43 = $42&1;
          if ($43) {
           label = 29;
           break;
          }
          $44 = ($41|0)==(-1);
          if ($44) {
           HEAP32[$__b>>2] = 0;
           $$pre$i$i$i = 0;
          } else {
           $$pre$i$i$i = $$pre$i$i$i10;
          }
         } else {
          $$pre$i$i$i = $$pre$i$i$i10;
         }
        }
        $45 = ($$pre$i$i$i|0)==(0|0);
        $46 = HEAP32[$__e>>2]|0;
        $47 = ($46|0)==(0|0);
        do {
         if ($47) {
          label = 19;
         } else {
          $48 = ((($46)) + 12|0);
          $49 = HEAP32[$48>>2]|0;
          $50 = ((($46)) + 16|0);
          $51 = HEAP32[$50>>2]|0;
          $52 = ($49|0)==($51|0);
          if (!($52)) {
           if ($45) {
            $169 = $46;
            break;
           } else {
            $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $46;$__a$2 = $__a$0;
            break L12;
           }
          }
          $53 = HEAP32[$46>>2]|0;
          $54 = ((($53)) + 36|0);
          $55 = HEAP32[$54>>2]|0;
          __THREW__ = 0;
          $56 = (invoke_ii($55|0,($46|0))|0);
          $57 = __THREW__; __THREW__ = 0;
          $58 = $57&1;
          if ($58) {
           label = 29;
           break L12;
          }
          $59 = ($56|0)==(-1);
          if ($59) {
           HEAP32[$__e>>2] = 0;
           label = 19;
           break;
          } else {
           if ($45) {
            $169 = $46;
            break;
           } else {
            $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $46;$__a$2 = $__a$0;
            break L12;
           }
          }
         }
        } while(0);
        if ((label|0) == 19) {
         label = 0;
         if ($45) {
          $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
          break;
         } else {
          $169 = 0;
         }
        }
        $60 = HEAP32[$__a_end>>2]|0;
        $61 = HEAP8[$__buf>>0]|0;
        $62 = $61 & 1;
        $63 = ($62<<24>>24)==(0);
        $64 = HEAP32[$31>>2]|0;
        $65 = $61&255;
        $66 = $65 >>> 1;
        $67 = $63 ? $66 : $64;
        $68 = (($__a$0) + ($67)|0);
        $69 = ($60|0)==($68|0);
        if ($69) {
         $70 = $67 << 1;
         __THREW__ = 0;
         invoke_viii(428,($__buf|0),($70|0),0);
         $71 = __THREW__; __THREW__ = 0;
         $72 = $71&1;
         if ($72) {
          label = 29;
          break;
         }
         $73 = HEAP8[$__buf>>0]|0;
         $74 = $73 & 1;
         $75 = ($74<<24>>24)==(0);
         if ($75) {
          $78 = 10;
         } else {
          $76 = HEAP32[$__buf>>2]|0;
          $77 = $76 & -2;
          $phitmp$i26 = (($77) + -1)|0;
          $78 = $phitmp$i26;
         }
         __THREW__ = 0;
         invoke_viii(428,($__buf|0),($78|0),0);
         $79 = __THREW__; __THREW__ = 0;
         $80 = $79&1;
         if ($80) {
          label = 29;
          break;
         }
         $81 = HEAP8[$__buf>>0]|0;
         $82 = $81 & 1;
         $83 = ($82<<24>>24)==(0);
         $84 = HEAP32[$27>>2]|0;
         $85 = $83 ? $29 : $84;
         $86 = (($85) + ($67)|0);
         HEAP32[$__a_end>>2] = $86;
         $__a$1 = $85;
        } else {
         $__a$1 = $__a$0;
        }
        $95 = ((($$pre$i$i$i)) + 12|0);
        $96 = HEAP32[$95>>2]|0;
        $97 = ((($$pre$i$i$i)) + 16|0);
        $98 = HEAP32[$97>>2]|0;
        $99 = ($96|0)==($98|0);
        if ($99) {
         $100 = HEAP32[$$pre$i$i$i>>2]|0;
         $101 = ((($100)) + 36|0);
         $102 = HEAP32[$101>>2]|0;
         __THREW__ = 0;
         $103 = (invoke_ii($102|0,($$pre$i$i$i|0))|0);
         $104 = __THREW__; __THREW__ = 0;
         $105 = $104&1;
         if ($105) {
          label = 29;
          break;
         } else {
          $$0$i$i = $103;
         }
        } else {
         $106 = HEAP8[$96>>0]|0;
         $107 = $106&255;
         $$0$i$i = $107;
        }
        $108 = $$0$i$i&255;
        $109 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($108,16,$__a$1,$__a_end,$__dc,0,$__grouping,$__g,$__g_end,$__atoms)|0);
        $110 = ($109|0)==(0);
        if (!($110)) {
         $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $169;$__a$2 = $__a$1;
         break;
        }
        $111 = HEAP32[$95>>2]|0;
        $112 = HEAP32[$97>>2]|0;
        $113 = ($111|0)==($112|0);
        if ($113) {
         $114 = HEAP32[$$pre$i$i$i>>2]|0;
         $115 = ((($114)) + 40|0);
         $116 = HEAP32[$115>>2]|0;
         __THREW__ = 0;
         (invoke_ii($116|0,($$pre$i$i$i|0))|0);
         $117 = __THREW__; __THREW__ = 0;
         $118 = $117&1;
         if ($118) {
          label = 29;
          break;
         } else {
          $$pre$i$i$i10 = $$pre$i$i$i;$__a$0 = $__a$1;
          continue;
         }
        } else {
         $119 = ((($111)) + 1|0);
         HEAP32[$95>>2] = $119;
         $$pre$i$i$i10 = $$pre$i$i$i;$__a$0 = $__a$1;
         continue;
        }
       }
       if ((label|0) == 29) {
        $91 = ___cxa_find_matching_catch()|0;
        $92 = tempRet0;
        $lpad$phi$index = $91;$lpad$phi$index2 = $92;
        break;
       }
       $120 = HEAP32[$__a_end>>2]|0;
       $121 = $120;
       $122 = $__a$2;
       $123 = (($121) - ($122))|0;
       __THREW__ = 0;
       invoke_viii(428,($__buf|0),($123|0),0);
       $124 = __THREW__; __THREW__ = 0;
       $125 = $124&1;
       if ($125) {
        label = 30;
       } else {
        $126 = HEAP8[$__buf>>0]|0;
        $127 = HEAP32[$27>>2]|0;
        __THREW__ = 0;
        $128 = (invoke_i(429)|0);
        $129 = __THREW__; __THREW__ = 0;
        $130 = $129&1;
        if ($130) {
         label = 30;
        } else {
         $131 = $126 & 1;
         $132 = ($131<<24>>24)==(0);
         $133 = $132 ? $29 : $127;
         __THREW__ = 0;
         HEAP32[$vararg_buffer>>2] = $__v;
         $134 = (invoke_iiiii(430,($133|0),($128|0),(26003|0),($vararg_buffer|0))|0);
         $135 = __THREW__; __THREW__ = 0;
         $136 = $135&1;
         if ($136) {
          label = 30;
         } else {
          $137 = ($134|0)==(1);
          if (!($137)) {
           HEAP32[$__err>>2] = 4;
          }
          $138 = ($$pre$i$i$i$lcssa|0)==(0|0);
          if ($138) {
           $152 = 0;
          } else {
           $139 = ((($$pre$i$i$i$lcssa)) + 12|0);
           $140 = HEAP32[$139>>2]|0;
           $141 = ((($$pre$i$i$i$lcssa)) + 16|0);
           $142 = HEAP32[$141>>2]|0;
           $143 = ($140|0)==($142|0);
           if ($143) {
            $144 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
            $145 = ((($144)) + 36|0);
            $146 = HEAP32[$145>>2]|0;
            __THREW__ = 0;
            $147 = (invoke_ii($146|0,($$pre$i$i$i$lcssa|0))|0);
            $148 = __THREW__; __THREW__ = 0;
            $149 = $148&1;
            if ($149) {
             label = 30;
             break;
            }
            $150 = ($147|0)==(-1);
            if ($150) {
             HEAP32[$__b>>2] = 0;
             $152 = 0;
            } else {
             $152 = $$pre$i$i$i$lcssa;
            }
           } else {
            $152 = $$pre$i$i$i$lcssa;
           }
          }
          $151 = ($152|0)==(0|0);
          $153 = ($$pre$i2$i$i|0)==(0|0);
          do {
           if ($153) {
            label = 55;
           } else {
            $154 = ((($$pre$i2$i$i)) + 12|0);
            $155 = HEAP32[$154>>2]|0;
            $156 = ((($$pre$i2$i$i)) + 16|0);
            $157 = HEAP32[$156>>2]|0;
            $158 = ($155|0)==($157|0);
            if ($158) {
             $159 = HEAP32[$$pre$i2$i$i>>2]|0;
             $160 = ((($159)) + 36|0);
             $161 = HEAP32[$160>>2]|0;
             __THREW__ = 0;
             $162 = (invoke_ii($161|0,($$pre$i2$i$i|0))|0);
             $163 = __THREW__; __THREW__ = 0;
             $164 = $163&1;
             if ($164) {
              label = 30;
              break L10;
             }
             $165 = ($162|0)==(-1);
             if ($165) {
              HEAP32[$__e>>2] = 0;
              label = 55;
              break;
             }
            }
            if (!($151)) {
             label = 56;
            }
           }
          } while(0);
          if ((label|0) == 55) {
           if ($151) {
            label = 56;
           }
          }
          if ((label|0) == 56) {
           $166 = HEAP32[$__err>>2]|0;
           $167 = $166 | 2;
           HEAP32[$__err>>2] = $167;
          }
          $168 = HEAP32[$__b>>2]|0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
          STACKTOP = sp;return ($168|0);
         }
        }
       }
      }
     } while(0);
     if ((label|0) == 30) {
      $93 = ___cxa_find_matching_catch()|0;
      $94 = tempRet0;
      $lpad$phi$index = $93;$lpad$phi$index2 = $94;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
     $$0 = $lpad$phi$index;$$01 = $lpad$phi$index2;
     break;
    }
   }
   $89 = ___cxa_find_matching_catch()|0;
   $90 = tempRet0;
   (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
   $$0 = $89;$$01 = $90;
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($$0|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($__ct,$__base,$__a,$__a_end,$__dc,$__thousands_sep,$__grouping,$__g,$__g_end,$__atoms) {
 $__ct = $__ct|0;
 $__base = $__base|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__dc = $__dc|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i2 = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__a_end>>2]|0;
 $1 = ($0|0)==($__a|0);
 do {
  if ($1) {
   $2 = ((($__atoms)) + 24|0);
   $3 = HEAP8[$2>>0]|0;
   $4 = ($3<<24>>24)==($__ct<<24>>24);
   if (!($4)) {
    $5 = ((($__atoms)) + 25|0);
    $6 = HEAP8[$5>>0]|0;
    $7 = ($6<<24>>24)==($__ct<<24>>24);
    if (!($7)) {
     label = 5;
     break;
    }
   }
   $8 = $4 ? 43 : 45;
   $9 = ((($__a)) + 1|0);
   HEAP32[$__a_end>>2] = $9;
   HEAP8[$__a>>0] = $8;
   HEAP32[$__dc>>2] = 0;
   $$0 = 0;
  } else {
   label = 5;
  }
 } while(0);
 L6: do {
  if ((label|0) == 5) {
   $10 = HEAP8[$__grouping>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__grouping)) + 4|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = $10&255;
   $16 = $15 >>> 1;
   $17 = $12 ? $16 : $14;
   $18 = ($17|0)!=(0);
   $19 = ($__ct<<24>>24)==($__thousands_sep<<24>>24);
   $or$cond = $19 & $18;
   if ($or$cond) {
    $20 = HEAP32[$__g_end>>2]|0;
    $21 = $20;
    $22 = $__g;
    $23 = (($21) - ($22))|0;
    $24 = ($23|0)<(160);
    if (!($24)) {
     $$0 = 0;
     break;
    }
    $25 = HEAP32[$__dc>>2]|0;
    $26 = ((($20)) + 4|0);
    HEAP32[$__g_end>>2] = $26;
    HEAP32[$20>>2] = $25;
    HEAP32[$__dc>>2] = 0;
    $$0 = 0;
    break;
   }
   $27 = ((($__atoms)) + 26|0);
   $$0$i2 = $__atoms;
   while(1) {
    $28 = HEAP8[$$0$i2>>0]|0;
    $29 = ($28<<24>>24)==($__ct<<24>>24);
    if ($29) {
     $$0$lcssa$i = $$0$i2;
     break;
    }
    $30 = ((($$0$i2)) + 1|0);
    $31 = ($30|0)==($27|0);
    if ($31) {
     $$0$lcssa$i = $27;
     break;
    } else {
     $$0$i2 = $30;
    }
   }
   $32 = $$0$lcssa$i;
   $33 = $__atoms;
   $34 = (($32) - ($33))|0;
   $35 = ($34|0)>(23);
   if ($35) {
    $$0 = -1;
   } else {
    switch ($__base|0) {
    case 10: case 8:  {
     $36 = ($34|0)<($__base|0);
     if (!($36)) {
      $$0 = -1;
      break L6;
     }
     break;
    }
    case 16:  {
     $37 = ($34|0)<(22);
     if (!($37)) {
      if ($1) {
       $$0 = -1;
       break L6;
      }
      $38 = $0;
      $39 = $__a;
      $40 = (($38) - ($39))|0;
      $41 = ($40|0)<(3);
      if (!($41)) {
       $$0 = -1;
       break L6;
      }
      $42 = ((($0)) + -1|0);
      $43 = HEAP8[$42>>0]|0;
      $44 = ($43<<24>>24)==(48);
      if (!($44)) {
       $$0 = -1;
       break L6;
      }
      HEAP32[$__dc>>2] = 0;
      $45 = (24619 + ($34)|0);
      $46 = HEAP8[$45>>0]|0;
      $47 = ((($0)) + 1|0);
      HEAP32[$__a_end>>2] = $47;
      HEAP8[$0>>0] = $46;
      $$0 = 0;
      break L6;
     }
     break;
    }
    default: {
    }
    }
    $48 = (24619 + ($34)|0);
    $49 = HEAP8[$48>>0]|0;
    $50 = ((($0)) + 1|0);
    HEAP32[$__a_end>>2] = $50;
    HEAP8[$0>>0] = $49;
    $51 = HEAP32[$__dc>>2]|0;
    $52 = (($51) + 1)|0;
    HEAP32[$__dc>>2] = $52;
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__16__clocEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[1752>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((1752|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_iiii(431,2147483647,(26006|0),(0|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if ($6) {
     $8 = ___cxa_find_matching_catch()|0;
     $9 = tempRet0;
     ___cxa_guard_abort((1752|0));
     ___resumeException($8|0);
     // unreachable;
    } else {
     HEAP32[10956>>2] = $4;
     ___cxa_guard_release((1752|0));
     break;
    }
   }
  }
 } while(0);
 $7 = HEAP32[10956>>2]|0;
 return ($7|0);
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$02 = 0, $$03 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $$sroa$01$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__lv = 0, $__names = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy2 = sp + 60|0;
 $$byval_copy1 = sp + 56|0;
 $$byval_copy = sp + 52|0;
 $__lv = sp + 48|0;
 $0 = sp + 44|0;
 $1 = sp + 40|0;
 $2 = sp + 36|0;
 $3 = sp + 32|0;
 $__names = sp + 8|0;
 $4 = sp;
 $5 = ((($__iob)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 1;
 $8 = ($7|0)==(0);
 L1: do {
  if ($8) {
   HEAP32[$__lv>>2] = -1;
   $9 = HEAP32[$this>>2]|0;
   $10 = ((($9)) + 16|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = HEAP32[$__b>>2]|0;
   HEAP32[$0>>2] = $12;
   $13 = HEAP32[$__e>>2]|0;
   HEAP32[$1>>2] = $13;
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
   $14 = (FUNCTION_TABLE_iiiiiii[$11 & 511]($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__lv)|0);
   HEAP32[$__b>>2] = $14;
   $15 = HEAP32[$__lv>>2]|0;
   switch ($15|0) {
   case 0:  {
    HEAP8[$__v>>0] = 0;
    $$sroa$01$0 = $14;
    break L1;
    break;
   }
   case 1:  {
    HEAP8[$__v>>0] = 1;
    $$sroa$01$0 = $14;
    break L1;
    break;
   }
   default: {
    HEAP8[$__v>>0] = 1;
    HEAP32[$__err>>2] = 4;
    $$sroa$01$0 = $14;
    break L1;
   }
   }
  } else {
   $16 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
   HEAP32[$2>>2] = $16;
   __THREW__ = 0;
   $17 = (invoke_iii(355,($2|0),(10384|0))|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   do {
    if ($19) {
     $44 = ___cxa_find_matching_catch()|0;
     $45 = tempRet0;
     (__ZNSt3__114__shared_count16__release_sharedEv($16)|0);
     $$0 = $44;$$03 = $45;
    } else {
     (__ZNSt3__114__shared_count16__release_sharedEv($16)|0);
     $20 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
     HEAP32[$3>>2] = $20;
     __THREW__ = 0;
     $21 = (invoke_iii(355,($3|0),(10540|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if ($23) {
      $46 = ___cxa_find_matching_catch()|0;
      $47 = tempRet0;
      (__ZNSt3__114__shared_count16__release_sharedEv($20)|0);
      $$0 = $46;$$03 = $47;
      break;
     }
     (__ZNSt3__114__shared_count16__release_sharedEv($20)|0);
     $24 = HEAP32[$21>>2]|0;
     $25 = ((($24)) + 24|0);
     $26 = HEAP32[$25>>2]|0;
     __THREW__ = 0;
     invoke_vii($26|0,($__names|0),($21|0));
     $27 = __THREW__; __THREW__ = 0;
     $28 = $27&1;
     if ($28) {
      $$02 = $__names;
     } else {
      $29 = ((($__names)) + 12|0);
      $30 = HEAP32[$21>>2]|0;
      $31 = ((($30)) + 28|0);
      $32 = HEAP32[$31>>2]|0;
      __THREW__ = 0;
      invoke_vii($32|0,($29|0),($21|0));
      $33 = __THREW__; __THREW__ = 0;
      $34 = $33&1;
      if ($34) {
       $$02 = $29;
      } else {
       $35 = HEAP32[$__e>>2]|0;
       HEAP32[$4>>2] = $35;
       $36 = ((($__names)) + 24|0);
       __THREW__ = 0;
       ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;
       $37 = (invoke_iiiiiiii(432,($__b|0),($$byval_copy2|0),($__names|0),($36|0),($17|0),($__err|0),1)|0);
       $38 = __THREW__; __THREW__ = 0;
       $39 = $38&1;
       if ($39) {
        $54 = ___cxa_find_matching_catch()|0;
        $55 = tempRet0;
        $56 = ((($__names)) + 12|0);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($56);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names);
        $$0 = $54;$$03 = $55;
        break;
       } else {
        $40 = ($37|0)==($__names|0);
        $41 = $40&1;
        HEAP8[$__v>>0] = $41;
        $42 = HEAP32[$__b>>2]|0;
        $43 = ((($__names)) + 12|0);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($43);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names);
        $$sroa$01$0 = $42;
        break L1;
       }
      }
     }
     $48 = ___cxa_find_matching_catch()|0;
     $49 = tempRet0;
     $50 = ($__names|0)==($$02|0);
     if ($50) {
      $$0 = $48;$$03 = $49;
     } else {
      $52 = $$02;
      while(1) {
       $51 = ((($52)) + -12|0);
       __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($51);
       $53 = ($51|0)==($__names|0);
       if ($53) {
        $$0 = $48;$$03 = $49;
        break;
       } else {
        $52 = $51;
       }
      }
     }
    }
   } while(0);
   ___resumeException($$0|0);
   // unreachable;
  }
 } while(0);
 STACKTOP = sp;return ($$sroa$01$0|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i9 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i15 = 0, $$01 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i11 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i30 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $__atoms = sp + 208|0;
 $__grouping = sp + 196|0;
 $0 = sp + 192|0;
 $__buf = sp + 180|0;
 $__a_end = sp + 176|0;
 $__g = sp + 16|0;
 $__g_end = sp + 8|0;
 $__dc = sp + 4|0;
 HEAP32[$__grouping>>2] = 0;
 $1 = ((($__grouping)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__grouping)) + 8|0);
 HEAP32[$2>>2] = 0;
 __THREW__ = 0;
 $3 = (invoke_ii(357,($__iob|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 do {
  if ($5) {
   $88 = ___cxa_find_matching_catch()|0;
   $89 = tempRet0;
   $$0 = $88;$$01 = $89;
  } else {
   HEAP32[$0>>2] = $3;
   __THREW__ = 0;
   $6 = (invoke_iii(355,($0|0),(10384|0))|0);
   $7 = __THREW__; __THREW__ = 0;
   $8 = $7&1;
   if (!($8)) {
    $9 = HEAP32[$6>>2]|0;
    $10 = ((($9)) + 48|0);
    $11 = HEAP32[$10>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($11|0,($6|0),(24619|0),((24645)|0),($__atoms|0))|0);
    $12 = __THREW__; __THREW__ = 0;
    $13 = $12&1;
    if (!($13)) {
     (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
     HEAP32[$__buf>>2] = 0;
     $14 = ((($__buf)) + 4|0);
     HEAP32[$14>>2] = 0;
     $15 = ((($__buf)) + 8|0);
     HEAP32[$15>>2] = 0;
     $16 = HEAP8[$__buf>>0]|0;
     $17 = $16 & 1;
     $18 = ($17<<24>>24)==(0);
     if ($18) {
      $21 = 10;
     } else {
      $19 = HEAP32[$__buf>>2]|0;
      $20 = $19 & -2;
      $phitmp$i = (($20) + -1)|0;
      $21 = $phitmp$i;
     }
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($21|0),0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     L10: do {
      if ($23) {
       label = 31;
      } else {
       $24 = HEAP8[$__buf>>0]|0;
       $25 = $24 & 1;
       $26 = ($25<<24>>24)==(0);
       $27 = ((($__buf)) + 8|0);
       $28 = HEAP32[$27>>2]|0;
       $29 = ((($__buf)) + 1|0);
       $30 = $26 ? $29 : $28;
       HEAP32[$__a_end>>2] = $30;
       HEAP32[$__g_end>>2] = $__g;
       HEAP32[$__dc>>2] = 0;
       $31 = ((($__buf)) + 4|0);
       $$pre = HEAP32[$__b>>2]|0;
       $$pre$i$i$i11 = $$pre;$__a$0 = $30;
       L12: while(1) {
        $32 = ($$pre$i$i$i11|0)==(0|0);
        if ($32) {
         $$pre$i$i$i = 0;$168 = 1;
        } else {
         $33 = ((($$pre$i$i$i11)) + 12|0);
         $34 = HEAP32[$33>>2]|0;
         $35 = ((($$pre$i$i$i11)) + 16|0);
         $36 = HEAP32[$35>>2]|0;
         $37 = ($34|0)==($36|0);
         if ($37) {
          $38 = HEAP32[$$pre$i$i$i11>>2]|0;
          $39 = ((($38)) + 36|0);
          $40 = HEAP32[$39>>2]|0;
          __THREW__ = 0;
          $41 = (invoke_ii($40|0,($$pre$i$i$i11|0))|0);
          $42 = __THREW__; __THREW__ = 0;
          $43 = $42&1;
          if ($43) {
           label = 30;
           break;
          } else {
           $$0$i$i$i$i9 = $41;
          }
         } else {
          $44 = HEAP32[$34>>2]|0;
          $$0$i$i$i$i9 = $44;
         }
         $45 = ($$0$i$i$i$i9|0)==(-1);
         if ($45) {
          HEAP32[$__b>>2] = 0;
          $$pre$i$i$i = 0;$168 = 1;
         } else {
          $$pre$i$i$i = $$pre$i$i$i11;$168 = 0;
         }
        }
        $46 = HEAP32[$__e>>2]|0;
        $47 = ($46|0)==(0|0);
        do {
         if ($47) {
          label = 20;
         } else {
          $48 = ((($46)) + 12|0);
          $49 = HEAP32[$48>>2]|0;
          $50 = ((($46)) + 16|0);
          $51 = HEAP32[$50>>2]|0;
          $52 = ($49|0)==($51|0);
          if ($52) {
           $53 = HEAP32[$46>>2]|0;
           $54 = ((($53)) + 36|0);
           $55 = HEAP32[$54>>2]|0;
           __THREW__ = 0;
           $56 = (invoke_ii($55|0,($46|0))|0);
           $57 = __THREW__; __THREW__ = 0;
           $58 = $57&1;
           if ($58) {
            label = 30;
            break L12;
           } else {
            $$0$i$i1$i$i15 = $56;
           }
          } else {
           $59 = HEAP32[$49>>2]|0;
           $$0$i$i1$i$i15 = $59;
          }
          $60 = ($$0$i$i1$i$i15|0)==(-1);
          if ($60) {
           HEAP32[$__e>>2] = 0;
           label = 20;
           break;
          } else {
           if ($168) {
            $169 = $46;
            break;
           } else {
            $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $46;$__a$2 = $__a$0;
            break L12;
           }
          }
         }
        } while(0);
        if ((label|0) == 20) {
         label = 0;
         if ($168) {
          $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
          break;
         } else {
          $169 = 0;
         }
        }
        $61 = HEAP32[$__a_end>>2]|0;
        $62 = HEAP8[$__buf>>0]|0;
        $63 = $62 & 1;
        $64 = ($63<<24>>24)==(0);
        $65 = HEAP32[$31>>2]|0;
        $66 = $62&255;
        $67 = $66 >>> 1;
        $68 = $64 ? $67 : $65;
        $69 = (($__a$0) + ($68)|0);
        $70 = ($61|0)==($69|0);
        if ($70) {
         $71 = $68 << 1;
         __THREW__ = 0;
         invoke_viii(428,($__buf|0),($71|0),0);
         $72 = __THREW__; __THREW__ = 0;
         $73 = $72&1;
         if ($73) {
          label = 30;
          break;
         }
         $74 = HEAP8[$__buf>>0]|0;
         $75 = $74 & 1;
         $76 = ($75<<24>>24)==(0);
         if ($76) {
          $79 = 10;
         } else {
          $77 = HEAP32[$__buf>>2]|0;
          $78 = $77 & -2;
          $phitmp$i30 = (($78) + -1)|0;
          $79 = $phitmp$i30;
         }
         __THREW__ = 0;
         invoke_viii(428,($__buf|0),($79|0),0);
         $80 = __THREW__; __THREW__ = 0;
         $81 = $80&1;
         if ($81) {
          label = 30;
          break;
         }
         $82 = HEAP8[$__buf>>0]|0;
         $83 = $82 & 1;
         $84 = ($83<<24>>24)==(0);
         $85 = HEAP32[$27>>2]|0;
         $86 = $84 ? $29 : $85;
         $87 = (($86) + ($68)|0);
         HEAP32[$__a_end>>2] = $87;
         $__a$1 = $86;
        } else {
         $__a$1 = $__a$0;
        }
        $96 = ((($$pre$i$i$i)) + 12|0);
        $97 = HEAP32[$96>>2]|0;
        $98 = ((($$pre$i$i$i)) + 16|0);
        $99 = HEAP32[$98>>2]|0;
        $100 = ($97|0)==($99|0);
        if ($100) {
         $101 = HEAP32[$$pre$i$i$i>>2]|0;
         $102 = ((($101)) + 36|0);
         $103 = HEAP32[$102>>2]|0;
         __THREW__ = 0;
         $104 = (invoke_ii($103|0,($$pre$i$i$i|0))|0);
         $105 = __THREW__; __THREW__ = 0;
         $106 = $105&1;
         if ($106) {
          label = 30;
          break;
         } else {
          $$0$i$i = $104;
         }
        } else {
         $107 = HEAP32[$97>>2]|0;
         $$0$i$i = $107;
        }
        $108 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,16,$__a$1,$__a_end,$__dc,0,$__grouping,$__g,$__g_end,$__atoms)|0);
        $109 = ($108|0)==(0);
        if (!($109)) {
         $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $169;$__a$2 = $__a$1;
         break;
        }
        $110 = HEAP32[$96>>2]|0;
        $111 = HEAP32[$98>>2]|0;
        $112 = ($110|0)==($111|0);
        if ($112) {
         $113 = HEAP32[$$pre$i$i$i>>2]|0;
         $114 = ((($113)) + 40|0);
         $115 = HEAP32[$114>>2]|0;
         __THREW__ = 0;
         (invoke_ii($115|0,($$pre$i$i$i|0))|0);
         $116 = __THREW__; __THREW__ = 0;
         $117 = $116&1;
         if ($117) {
          label = 30;
          break;
         } else {
          $$pre$i$i$i11 = $$pre$i$i$i;$__a$0 = $__a$1;
          continue;
         }
        } else {
         $118 = ((($110)) + 4|0);
         HEAP32[$96>>2] = $118;
         $$pre$i$i$i11 = $$pre$i$i$i;$__a$0 = $__a$1;
         continue;
        }
       }
       if ((label|0) == 30) {
        $92 = ___cxa_find_matching_catch()|0;
        $93 = tempRet0;
        $lpad$phi$index = $92;$lpad$phi$index2 = $93;
        break;
       }
       $119 = HEAP32[$__a_end>>2]|0;
       $120 = $119;
       $121 = $__a$2;
       $122 = (($120) - ($121))|0;
       __THREW__ = 0;
       invoke_viii(428,($__buf|0),($122|0),0);
       $123 = __THREW__; __THREW__ = 0;
       $124 = $123&1;
       if ($124) {
        label = 31;
       } else {
        $125 = HEAP8[$__buf>>0]|0;
        $126 = HEAP32[$27>>2]|0;
        __THREW__ = 0;
        $127 = (invoke_i(429)|0);
        $128 = __THREW__; __THREW__ = 0;
        $129 = $128&1;
        if ($129) {
         label = 31;
        } else {
         $130 = $125 & 1;
         $131 = ($130<<24>>24)==(0);
         $132 = $131 ? $29 : $126;
         __THREW__ = 0;
         HEAP32[$vararg_buffer>>2] = $__v;
         $133 = (invoke_iiiii(430,($132|0),($127|0),(26003|0),($vararg_buffer|0))|0);
         $134 = __THREW__; __THREW__ = 0;
         $135 = $134&1;
         if ($135) {
          label = 31;
         } else {
          $136 = ($133|0)==(1);
          if (!($136)) {
           HEAP32[$__err>>2] = 4;
          }
          $137 = ($$pre$i$i$i$lcssa|0)==(0|0);
          if ($137) {
           $170 = 1;
          } else {
           $138 = ((($$pre$i$i$i$lcssa)) + 12|0);
           $139 = HEAP32[$138>>2]|0;
           $140 = ((($$pre$i$i$i$lcssa)) + 16|0);
           $141 = HEAP32[$140>>2]|0;
           $142 = ($139|0)==($141|0);
           if ($142) {
            $143 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
            $144 = ((($143)) + 36|0);
            $145 = HEAP32[$144>>2]|0;
            __THREW__ = 0;
            $146 = (invoke_ii($145|0,($$pre$i$i$i$lcssa|0))|0);
            $147 = __THREW__; __THREW__ = 0;
            $148 = $147&1;
            if ($148) {
             label = 31;
             break;
            } else {
             $$0$i$i$i$i = $146;
            }
           } else {
            $149 = HEAP32[$139>>2]|0;
            $$0$i$i$i$i = $149;
           }
           $150 = ($$0$i$i$i$i|0)==(-1);
           if ($150) {
            HEAP32[$__b>>2] = 0;
            $170 = 1;
           } else {
            $170 = 0;
           }
          }
          $151 = ($$pre$i3$i$i|0)==(0|0);
          do {
           if ($151) {
            label = 57;
           } else {
            $152 = ((($$pre$i3$i$i)) + 12|0);
            $153 = HEAP32[$152>>2]|0;
            $154 = ((($$pre$i3$i$i)) + 16|0);
            $155 = HEAP32[$154>>2]|0;
            $156 = ($153|0)==($155|0);
            if ($156) {
             $157 = HEAP32[$$pre$i3$i$i>>2]|0;
             $158 = ((($157)) + 36|0);
             $159 = HEAP32[$158>>2]|0;
             __THREW__ = 0;
             $160 = (invoke_ii($159|0,($$pre$i3$i$i|0))|0);
             $161 = __THREW__; __THREW__ = 0;
             $162 = $161&1;
             if ($162) {
              label = 31;
              break L10;
             } else {
              $$0$i$i1$i$i = $160;
             }
            } else {
             $163 = HEAP32[$153>>2]|0;
             $$0$i$i1$i$i = $163;
            }
            $164 = ($$0$i$i1$i$i|0)==(-1);
            if ($164) {
             HEAP32[$__e>>2] = 0;
             label = 57;
             break;
            } else {
             if ($170) {
              break;
             } else {
              label = 59;
              break;
             }
            }
           }
          } while(0);
          if ((label|0) == 57) {
           if ($170) {
            label = 59;
           }
          }
          if ((label|0) == 59) {
           $165 = HEAP32[$__err>>2]|0;
           $166 = $165 | 2;
           HEAP32[$__err>>2] = $166;
          }
          $167 = HEAP32[$__b>>2]|0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
          STACKTOP = sp;return ($167|0);
         }
        }
       }
      }
     } while(0);
     if ((label|0) == 31) {
      $94 = ___cxa_find_matching_catch()|0;
      $95 = tempRet0;
      $lpad$phi$index = $94;$lpad$phi$index2 = $95;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
     $$0 = $lpad$phi$index;$$01 = $lpad$phi$index2;
     break;
    }
   }
   $90 = ___cxa_find_matching_catch()|0;
   $91 = tempRet0;
   (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
   $$0 = $90;$$01 = $91;
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($$0|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($__ct,$__base,$__a,$__a_end,$__dc,$__thousands_sep,$__grouping,$__g,$__g_end,$__atoms) {
 $__ct = $__ct|0;
 $__base = $__base|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__dc = $__dc|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i2 = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__a_end>>2]|0;
 $1 = ($0|0)==($__a|0);
 do {
  if ($1) {
   $2 = ((($__atoms)) + 96|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ($3|0)==($__ct|0);
   if (!($4)) {
    $5 = ((($__atoms)) + 100|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = ($6|0)==($__ct|0);
    if (!($7)) {
     label = 5;
     break;
    }
   }
   $8 = $4 ? 43 : 45;
   $9 = ((($__a)) + 1|0);
   HEAP32[$__a_end>>2] = $9;
   HEAP8[$__a>>0] = $8;
   HEAP32[$__dc>>2] = 0;
   $$0 = 0;
  } else {
   label = 5;
  }
 } while(0);
 L6: do {
  if ((label|0) == 5) {
   $10 = HEAP8[$__grouping>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__grouping)) + 4|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = $10&255;
   $16 = $15 >>> 1;
   $17 = $12 ? $16 : $14;
   $18 = ($17|0)!=(0);
   $19 = ($__ct|0)==($__thousands_sep|0);
   $or$cond = $19 & $18;
   if ($or$cond) {
    $20 = HEAP32[$__g_end>>2]|0;
    $21 = $20;
    $22 = $__g;
    $23 = (($21) - ($22))|0;
    $24 = ($23|0)<(160);
    if (!($24)) {
     $$0 = 0;
     break;
    }
    $25 = HEAP32[$__dc>>2]|0;
    $26 = ((($20)) + 4|0);
    HEAP32[$__g_end>>2] = $26;
    HEAP32[$20>>2] = $25;
    HEAP32[$__dc>>2] = 0;
    $$0 = 0;
    break;
   }
   $27 = ((($__atoms)) + 104|0);
   $$0$i2 = $__atoms;
   while(1) {
    $28 = HEAP32[$$0$i2>>2]|0;
    $29 = ($28|0)==($__ct|0);
    if ($29) {
     $$0$lcssa$i = $$0$i2;
     break;
    }
    $30 = ((($$0$i2)) + 4|0);
    $31 = ($30|0)==($27|0);
    if ($31) {
     $$0$lcssa$i = $27;
     break;
    } else {
     $$0$i2 = $30;
    }
   }
   $32 = $$0$lcssa$i;
   $33 = $__atoms;
   $34 = (($32) - ($33))|0;
   $35 = $34 >> 2;
   $36 = ($34|0)>(92);
   if ($36) {
    $$0 = -1;
   } else {
    switch ($__base|0) {
    case 10: case 8:  {
     $37 = ($35|0)<($__base|0);
     if (!($37)) {
      $$0 = -1;
      break L6;
     }
     break;
    }
    case 16:  {
     $38 = ($34|0)<(88);
     if (!($38)) {
      if ($1) {
       $$0 = -1;
       break L6;
      }
      $39 = $0;
      $40 = $__a;
      $41 = (($39) - ($40))|0;
      $42 = ($41|0)<(3);
      if (!($42)) {
       $$0 = -1;
       break L6;
      }
      $43 = ((($0)) + -1|0);
      $44 = HEAP8[$43>>0]|0;
      $45 = ($44<<24>>24)==(48);
      if (!($45)) {
       $$0 = -1;
       break L6;
      }
      HEAP32[$__dc>>2] = 0;
      $46 = (24619 + ($35)|0);
      $47 = HEAP8[$46>>0]|0;
      $48 = ((($0)) + 1|0);
      HEAP32[$__a_end>>2] = $48;
      HEAP8[$0>>0] = $47;
      $$0 = 0;
      break L6;
     }
     break;
    }
    default: {
    }
    }
    $49 = (24619 + ($35)|0);
    $50 = HEAP8[$49>>0]|0;
    $51 = ((($0)) + 1|0);
    HEAP32[$__a_end>>2] = $51;
    HEAP8[$0>>0] = $50;
    $52 = HEAP32[$__dc>>2]|0;
    $53 = (($52) + 1)|0;
    HEAP32[$__dc>>2] = $53;
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($agg$result,$__iob,$__atoms,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__loc = sp;
 $0 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $0;
 __THREW__ = 0;
 $1 = (invoke_iii(355,($__loc|0),(10392|0))|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 if (!($3)) {
  $4 = HEAP32[$1>>2]|0;
  $5 = ((($4)) + 32|0);
  $6 = HEAP32[$5>>2]|0;
  __THREW__ = 0;
  (invoke_iiiii($6|0,($1|0),(24619|0),((24645)|0),($__atoms|0))|0);
  $7 = __THREW__; __THREW__ = 0;
  $8 = $7&1;
  if (!($8)) {
   __THREW__ = 0;
   $9 = (invoke_iii(355,($__loc|0),(10532|0))|0);
   $10 = __THREW__; __THREW__ = 0;
   $11 = $10&1;
   if (!($11)) {
    $12 = HEAP32[$9>>2]|0;
    $13 = ((($12)) + 16|0);
    $14 = HEAP32[$13>>2]|0;
    __THREW__ = 0;
    $15 = (invoke_ii($14|0,($9|0))|0);
    $16 = __THREW__; __THREW__ = 0;
    $17 = $16&1;
    if (!($17)) {
     HEAP8[$__thousands_sep>>0] = $15;
     $18 = HEAP32[$9>>2]|0;
     $19 = ((($18)) + 20|0);
     $20 = HEAP32[$19>>2]|0;
     __THREW__ = 0;
     invoke_vii($20|0,($agg$result|0),($9|0));
     $21 = __THREW__; __THREW__ = 0;
     $22 = $21&1;
     if (!($22)) {
      (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $23 = ___cxa_find_matching_catch()|0;
 $24 = tempRet0;
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 ___resumeException($23|0);
 // unreachable;
}
function __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($agg$result,$__iob,$__atoms,$__decimal_point,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__loc = sp;
 $0 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $0;
 __THREW__ = 0;
 $1 = (invoke_iii(355,($__loc|0),(10392|0))|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 if (!($3)) {
  $4 = HEAP32[$1>>2]|0;
  $5 = ((($4)) + 32|0);
  $6 = HEAP32[$5>>2]|0;
  __THREW__ = 0;
  (invoke_iiiii($6|0,($1|0),(24619|0),((24651)|0),($__atoms|0))|0);
  $7 = __THREW__; __THREW__ = 0;
  $8 = $7&1;
  if (!($8)) {
   __THREW__ = 0;
   $9 = (invoke_iii(355,($__loc|0),(10532|0))|0);
   $10 = __THREW__; __THREW__ = 0;
   $11 = $10&1;
   if (!($11)) {
    $12 = HEAP32[$9>>2]|0;
    $13 = ((($12)) + 12|0);
    $14 = HEAP32[$13>>2]|0;
    __THREW__ = 0;
    $15 = (invoke_ii($14|0,($9|0))|0);
    $16 = __THREW__; __THREW__ = 0;
    $17 = $16&1;
    if (!($17)) {
     HEAP8[$__decimal_point>>0] = $15;
     $18 = HEAP32[$9>>2]|0;
     $19 = ((($18)) + 16|0);
     $20 = HEAP32[$19>>2]|0;
     __THREW__ = 0;
     $21 = (invoke_ii($20|0,($9|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if (!($23)) {
      HEAP8[$__thousands_sep>>0] = $21;
      $24 = HEAP32[$9>>2]|0;
      $25 = ((($24)) + 20|0);
      $26 = HEAP32[$25>>2]|0;
      __THREW__ = 0;
      invoke_vii($26|0,($agg$result|0),($9|0));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if (!($28)) {
       (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
       STACKTOP = sp;return;
      }
     }
    }
   }
  }
 }
 $29 = ___cxa_find_matching_catch()|0;
 $30 = tempRet0;
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 ___resumeException($29|0);
 // unreachable;
}
function __ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($__ct,$__in_units,$__exp,$__a,$__a_end,$__decimal_point,$__thousands_sep,$__grouping,$__g,$__g_end,$__dc,$__atoms) {
 $__ct = $__ct|0;
 $__in_units = $__in_units|0;
 $__exp = $__exp|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__dc = $__dc|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i3 = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__ct<<24>>24)==($__decimal_point<<24>>24);
 L1: do {
  if ($0) {
   $1 = HEAP8[$__in_units>>0]|0;
   $2 = ($1<<24>>24)==(0);
   if ($2) {
    $$0 = -1;
   } else {
    HEAP8[$__in_units>>0] = 0;
    $3 = HEAP32[$__a_end>>2]|0;
    $4 = ((($3)) + 1|0);
    HEAP32[$__a_end>>2] = $4;
    HEAP8[$3>>0] = 46;
    $5 = HEAP8[$__grouping>>0]|0;
    $6 = $5 & 1;
    $7 = ($6<<24>>24)==(0);
    $8 = ((($__grouping)) + 4|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = $5&255;
    $11 = $10 >>> 1;
    $12 = $7 ? $11 : $9;
    $13 = ($12|0)==(0);
    if ($13) {
     $$0 = 0;
    } else {
     $14 = HEAP32[$__g_end>>2]|0;
     $15 = $14;
     $16 = $__g;
     $17 = (($15) - ($16))|0;
     $18 = ($17|0)<(160);
     if ($18) {
      $19 = HEAP32[$__dc>>2]|0;
      $20 = ((($14)) + 4|0);
      HEAP32[$__g_end>>2] = $20;
      HEAP32[$14>>2] = $19;
      $$0 = 0;
     } else {
      $$0 = 0;
     }
    }
   }
  } else {
   $21 = ($__ct<<24>>24)==($__thousands_sep<<24>>24);
   if ($21) {
    $22 = HEAP8[$__grouping>>0]|0;
    $23 = $22 & 1;
    $24 = ($23<<24>>24)==(0);
    $25 = ((($__grouping)) + 4|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = $22&255;
    $28 = $27 >>> 1;
    $29 = $24 ? $28 : $26;
    $30 = ($29|0)==(0);
    if (!($30)) {
     $31 = HEAP8[$__in_units>>0]|0;
     $32 = ($31<<24>>24)==(0);
     if ($32) {
      $$0 = -1;
      break;
     }
     $33 = HEAP32[$__g_end>>2]|0;
     $34 = $33;
     $35 = $__g;
     $36 = (($34) - ($35))|0;
     $37 = ($36|0)<(160);
     if (!($37)) {
      $$0 = 0;
      break;
     }
     $38 = HEAP32[$__dc>>2]|0;
     $39 = ((($33)) + 4|0);
     HEAP32[$__g_end>>2] = $39;
     HEAP32[$33>>2] = $38;
     HEAP32[$__dc>>2] = 0;
     $$0 = 0;
     break;
    }
   }
   $40 = ((($__atoms)) + 32|0);
   $$0$i3 = $__atoms;
   while(1) {
    $41 = HEAP8[$$0$i3>>0]|0;
    $42 = ($41<<24>>24)==($__ct<<24>>24);
    if ($42) {
     $$0$lcssa$i = $$0$i3;
     break;
    }
    $43 = ((($$0$i3)) + 1|0);
    $44 = ($43|0)==($40|0);
    if ($44) {
     $$0$lcssa$i = $40;
     break;
    } else {
     $$0$i3 = $43;
    }
   }
   $45 = $$0$lcssa$i;
   $46 = $__atoms;
   $47 = (($45) - ($46))|0;
   $48 = ($47|0)>(31);
   if ($48) {
    $$0 = -1;
   } else {
    $49 = (24619 + ($47)|0);
    $50 = HEAP8[$49>>0]|0;
    switch ($47|0) {
    case 24: case 25:  {
     $51 = HEAP32[$__a_end>>2]|0;
     $52 = ($51|0)==($__a|0);
     if (!($52)) {
      $53 = ((($51)) + -1|0);
      $54 = HEAP8[$53>>0]|0;
      $55 = $54&255;
      $56 = $55 & 95;
      $57 = HEAP8[$__exp>>0]|0;
      $58 = $57&255;
      $59 = $58 & 127;
      $60 = ($56|0)==($59|0);
      if (!($60)) {
       $$0 = -1;
       break L1;
      }
     }
     $61 = ((($51)) + 1|0);
     HEAP32[$__a_end>>2] = $61;
     HEAP8[$51>>0] = $50;
     $$0 = 0;
     break L1;
     break;
    }
    case 23: case 22:  {
     HEAP8[$__exp>>0] = 80;
     $62 = HEAP32[$__a_end>>2]|0;
     $63 = ((($62)) + 1|0);
     HEAP32[$__a_end>>2] = $63;
     HEAP8[$62>>0] = $50;
     $$0 = 0;
     break L1;
     break;
    }
    default: {
     $64 = $50&255;
     $65 = $64 & 95;
     $66 = HEAP8[$__exp>>0]|0;
     $67 = $66 << 24 >> 24;
     $68 = ($65|0)==($67|0);
     if ($68) {
      $69 = $65 | 128;
      $70 = $69&255;
      HEAP8[$__exp>>0] = $70;
      $71 = HEAP8[$__in_units>>0]|0;
      $72 = ($71<<24>>24)==(0);
      if (!($72)) {
       HEAP8[$__in_units>>0] = 0;
       $73 = HEAP8[$__grouping>>0]|0;
       $74 = $73 & 1;
       $75 = ($74<<24>>24)==(0);
       $76 = ((($__grouping)) + 4|0);
       $77 = HEAP32[$76>>2]|0;
       $78 = $73&255;
       $79 = $78 >>> 1;
       $80 = $75 ? $79 : $77;
       $81 = ($80|0)==(0);
       if (!($81)) {
        $82 = HEAP32[$__g_end>>2]|0;
        $83 = $82;
        $84 = $__g;
        $85 = (($83) - ($84))|0;
        $86 = ($85|0)<(160);
        if ($86) {
         $87 = HEAP32[$__dc>>2]|0;
         $88 = ((($82)) + 4|0);
         HEAP32[$__g_end>>2] = $88;
         HEAP32[$82>>2] = $87;
        }
       }
      }
     }
     $89 = HEAP32[$__a_end>>2]|0;
     $90 = ((($89)) + 1|0);
     HEAP32[$__a_end>>2] = $90;
     HEAP8[$89>>0] = $50;
     $91 = ($47|0)>(21);
     if ($91) {
      $$0 = 0;
      break L1;
     }
     $92 = HEAP32[$__dc>>2]|0;
     $93 = (($92) + 1)|0;
     HEAP32[$__dc>>2] = $93;
     $$0 = 0;
     break L1;
    }
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($agg$result,$__iob,$__atoms,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__loc = sp;
 $0 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $0;
 __THREW__ = 0;
 $1 = (invoke_iii(355,($__loc|0),(10384|0))|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 if (!($3)) {
  $4 = HEAP32[$1>>2]|0;
  $5 = ((($4)) + 48|0);
  $6 = HEAP32[$5>>2]|0;
  __THREW__ = 0;
  (invoke_iiiii($6|0,($1|0),(24619|0),((24645)|0),($__atoms|0))|0);
  $7 = __THREW__; __THREW__ = 0;
  $8 = $7&1;
  if (!($8)) {
   __THREW__ = 0;
   $9 = (invoke_iii(355,($__loc|0),(10540|0))|0);
   $10 = __THREW__; __THREW__ = 0;
   $11 = $10&1;
   if (!($11)) {
    $12 = HEAP32[$9>>2]|0;
    $13 = ((($12)) + 16|0);
    $14 = HEAP32[$13>>2]|0;
    __THREW__ = 0;
    $15 = (invoke_ii($14|0,($9|0))|0);
    $16 = __THREW__; __THREW__ = 0;
    $17 = $16&1;
    if (!($17)) {
     HEAP32[$__thousands_sep>>2] = $15;
     $18 = HEAP32[$9>>2]|0;
     $19 = ((($18)) + 20|0);
     $20 = HEAP32[$19>>2]|0;
     __THREW__ = 0;
     invoke_vii($20|0,($agg$result|0),($9|0));
     $21 = __THREW__; __THREW__ = 0;
     $22 = $21&1;
     if (!($22)) {
      (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $23 = ___cxa_find_matching_catch()|0;
 $24 = tempRet0;
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 ___resumeException($23|0);
 // unreachable;
}
function __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($agg$result,$__iob,$__atoms,$__decimal_point,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__loc = sp;
 $0 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $0;
 __THREW__ = 0;
 $1 = (invoke_iii(355,($__loc|0),(10384|0))|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 if (!($3)) {
  $4 = HEAP32[$1>>2]|0;
  $5 = ((($4)) + 48|0);
  $6 = HEAP32[$5>>2]|0;
  __THREW__ = 0;
  (invoke_iiiii($6|0,($1|0),(24619|0),((24651)|0),($__atoms|0))|0);
  $7 = __THREW__; __THREW__ = 0;
  $8 = $7&1;
  if (!($8)) {
   __THREW__ = 0;
   $9 = (invoke_iii(355,($__loc|0),(10540|0))|0);
   $10 = __THREW__; __THREW__ = 0;
   $11 = $10&1;
   if (!($11)) {
    $12 = HEAP32[$9>>2]|0;
    $13 = ((($12)) + 12|0);
    $14 = HEAP32[$13>>2]|0;
    __THREW__ = 0;
    $15 = (invoke_ii($14|0,($9|0))|0);
    $16 = __THREW__; __THREW__ = 0;
    $17 = $16&1;
    if (!($17)) {
     HEAP32[$__decimal_point>>2] = $15;
     $18 = HEAP32[$9>>2]|0;
     $19 = ((($18)) + 16|0);
     $20 = HEAP32[$19>>2]|0;
     __THREW__ = 0;
     $21 = (invoke_ii($20|0,($9|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if (!($23)) {
      HEAP32[$__thousands_sep>>2] = $21;
      $24 = HEAP32[$9>>2]|0;
      $25 = ((($24)) + 20|0);
      $26 = HEAP32[$25>>2]|0;
      __THREW__ = 0;
      invoke_vii($26|0,($agg$result|0),($9|0));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if (!($28)) {
       (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
       STACKTOP = sp;return;
      }
     }
    }
   }
  }
 }
 $29 = ___cxa_find_matching_catch()|0;
 $30 = tempRet0;
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 ___resumeException($29|0);
 // unreachable;
}
function __ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($__ct,$__in_units,$__exp,$__a,$__a_end,$__decimal_point,$__thousands_sep,$__grouping,$__g,$__g_end,$__dc,$__atoms) {
 $__ct = $__ct|0;
 $__in_units = $__in_units|0;
 $__exp = $__exp|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__dc = $__dc|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i3 = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__ct|0)==($__decimal_point|0);
 L1: do {
  if ($0) {
   $1 = HEAP8[$__in_units>>0]|0;
   $2 = ($1<<24>>24)==(0);
   if ($2) {
    $$0 = -1;
   } else {
    HEAP8[$__in_units>>0] = 0;
    $3 = HEAP32[$__a_end>>2]|0;
    $4 = ((($3)) + 1|0);
    HEAP32[$__a_end>>2] = $4;
    HEAP8[$3>>0] = 46;
    $5 = HEAP8[$__grouping>>0]|0;
    $6 = $5 & 1;
    $7 = ($6<<24>>24)==(0);
    $8 = ((($__grouping)) + 4|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = $5&255;
    $11 = $10 >>> 1;
    $12 = $7 ? $11 : $9;
    $13 = ($12|0)==(0);
    if ($13) {
     $$0 = 0;
    } else {
     $14 = HEAP32[$__g_end>>2]|0;
     $15 = $14;
     $16 = $__g;
     $17 = (($15) - ($16))|0;
     $18 = ($17|0)<(160);
     if ($18) {
      $19 = HEAP32[$__dc>>2]|0;
      $20 = ((($14)) + 4|0);
      HEAP32[$__g_end>>2] = $20;
      HEAP32[$14>>2] = $19;
      $$0 = 0;
     } else {
      $$0 = 0;
     }
    }
   }
  } else {
   $21 = ($__ct|0)==($__thousands_sep|0);
   if ($21) {
    $22 = HEAP8[$__grouping>>0]|0;
    $23 = $22 & 1;
    $24 = ($23<<24>>24)==(0);
    $25 = ((($__grouping)) + 4|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = $22&255;
    $28 = $27 >>> 1;
    $29 = $24 ? $28 : $26;
    $30 = ($29|0)==(0);
    if (!($30)) {
     $31 = HEAP8[$__in_units>>0]|0;
     $32 = ($31<<24>>24)==(0);
     if ($32) {
      $$0 = -1;
      break;
     }
     $33 = HEAP32[$__g_end>>2]|0;
     $34 = $33;
     $35 = $__g;
     $36 = (($34) - ($35))|0;
     $37 = ($36|0)<(160);
     if (!($37)) {
      $$0 = 0;
      break;
     }
     $38 = HEAP32[$__dc>>2]|0;
     $39 = ((($33)) + 4|0);
     HEAP32[$__g_end>>2] = $39;
     HEAP32[$33>>2] = $38;
     HEAP32[$__dc>>2] = 0;
     $$0 = 0;
     break;
    }
   }
   $40 = ((($__atoms)) + 128|0);
   $$0$i3 = $__atoms;
   while(1) {
    $41 = HEAP32[$$0$i3>>2]|0;
    $42 = ($41|0)==($__ct|0);
    if ($42) {
     $$0$lcssa$i = $$0$i3;
     break;
    }
    $43 = ((($$0$i3)) + 4|0);
    $44 = ($43|0)==($40|0);
    if ($44) {
     $$0$lcssa$i = $40;
     break;
    } else {
     $$0$i3 = $43;
    }
   }
   $45 = $$0$lcssa$i;
   $46 = $__atoms;
   $47 = (($45) - ($46))|0;
   $48 = $47 >> 2;
   $49 = ($47|0)>(124);
   if ($49) {
    $$0 = -1;
   } else {
    $50 = (24619 + ($48)|0);
    $51 = HEAP8[$50>>0]|0;
    switch ($48|0) {
    case 24: case 25:  {
     $52 = HEAP32[$__a_end>>2]|0;
     $53 = ($52|0)==($__a|0);
     if (!($53)) {
      $54 = ((($52)) + -1|0);
      $55 = HEAP8[$54>>0]|0;
      $56 = $55&255;
      $57 = $56 & 95;
      $58 = HEAP8[$__exp>>0]|0;
      $59 = $58&255;
      $60 = $59 & 127;
      $61 = ($57|0)==($60|0);
      if (!($61)) {
       $$0 = -1;
       break L1;
      }
     }
     $62 = ((($52)) + 1|0);
     HEAP32[$__a_end>>2] = $62;
     HEAP8[$52>>0] = $51;
     $$0 = 0;
     break L1;
     break;
    }
    case 23: case 22:  {
     HEAP8[$__exp>>0] = 80;
     break;
    }
    default: {
     $63 = $51&255;
     $64 = $63 & 95;
     $65 = HEAP8[$__exp>>0]|0;
     $66 = $65 << 24 >> 24;
     $67 = ($64|0)==($66|0);
     if ($67) {
      $68 = $64 | 128;
      $69 = $68&255;
      HEAP8[$__exp>>0] = $69;
      $70 = HEAP8[$__in_units>>0]|0;
      $71 = ($70<<24>>24)==(0);
      if (!($71)) {
       HEAP8[$__in_units>>0] = 0;
       $72 = HEAP8[$__grouping>>0]|0;
       $73 = $72 & 1;
       $74 = ($73<<24>>24)==(0);
       $75 = ((($__grouping)) + 4|0);
       $76 = HEAP32[$75>>2]|0;
       $77 = $72&255;
       $78 = $77 >>> 1;
       $79 = $74 ? $78 : $76;
       $80 = ($79|0)==(0);
       if (!($80)) {
        $81 = HEAP32[$__g_end>>2]|0;
        $82 = $81;
        $83 = $__g;
        $84 = (($82) - ($83))|0;
        $85 = ($84|0)<(160);
        if ($85) {
         $86 = HEAP32[$__dc>>2]|0;
         $87 = ((($81)) + 4|0);
         HEAP32[$__g_end>>2] = $87;
         HEAP32[$81>>2] = $86;
        }
       }
      }
     }
    }
    }
    $88 = HEAP32[$__a_end>>2]|0;
    $89 = ((($88)) + 1|0);
    HEAP32[$__a_end>>2] = $89;
    HEAP8[$88>>0] = $51;
    $90 = ($47|0)>(84);
    if ($90) {
     $$0 = 0;
    } else {
     $91 = HEAP32[$__dc>>2]|0;
     $92 = (($91) + 1)|0;
     HEAP32[$__dc>>2] = $92;
     $$0 = 0;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$0 = 0, $$01 = 0, $$byval_copy = 0, $$ph = 0, $$pre = 0, $$pre$phi6Z2D = 0, $$pre2 = 0, $$pre2$val = 0, $$pre2$val7 = 0, $$pre5 = 0, $$sroa$0$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__nm = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 20|0;
 $0 = sp + 16|0;
 $1 = sp + 12|0;
 $__nm = sp;
 $2 = ((($__iob)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 1;
 $5 = ($4|0)==(0);
 L1: do {
  if ($5) {
   $6 = HEAP32[$this>>2]|0;
   $7 = ((($6)) + 24|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = HEAP32[$__s>>2]|0;
   HEAP32[$0>>2] = $9;
   $10 = $__v&1;
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   $11 = (FUNCTION_TABLE_iiiiii[$8 & 511]($this,$$byval_copy,$__iob,$__fl,$10)|0);
   $$sroa$0$0 = $11;
  } else {
   $12 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
   HEAP32[$1>>2] = $12;
   __THREW__ = 0;
   $13 = (invoke_iii(355,($1|0),(10532|0))|0);
   $14 = __THREW__; __THREW__ = 0;
   $15 = $14&1;
   L4: do {
    if ($15) {
     $65 = ___cxa_find_matching_catch()|0;
     $66 = tempRet0;
     (__ZNSt3__114__shared_count16__release_sharedEv($12)|0);
     $$0 = $66;$$01 = $65;
    } else {
     (__ZNSt3__114__shared_count16__release_sharedEv($12)|0);
     $16 = HEAP32[$13>>2]|0;
     if ($__v) {
      $17 = ((($16)) + 24|0);
      $18 = HEAP32[$17>>2]|0;
      FUNCTION_TABLE_vii[$18 & 1023]($__nm,$13);
     } else {
      $19 = ((($16)) + 28|0);
      $20 = HEAP32[$19>>2]|0;
      FUNCTION_TABLE_vii[$20 & 1023]($__nm,$13);
     }
     $21 = HEAP8[$__nm>>0]|0;
     $22 = $21 & 1;
     $23 = ($22<<24>>24)==(0);
     $24 = ((($__nm)) + 8|0);
     $25 = HEAP32[$24>>2]|0;
     $$pre5 = ((($__nm)) + 1|0);
     $26 = ((($__nm)) + 1|0);
     $$pre2 = ((($__nm)) + 8|0);
     $$pre$phi6Z2D = $23 ? $26 : $$pre5;
     $$ph = $23 ? $26 : $25;
     $27 = ((($__nm)) + 4|0);
     $28 = $21 & 1;
     $29 = ($28<<24>>24)==(0);
     $$pre2$val7 = HEAP32[$$pre2>>2]|0;
     $30 = HEAP32[$27>>2]|0;
     $31 = $21&255;
     $32 = $31 >>> 1;
     $33 = $29 ? $$pre$phi6Z2D : $$pre2$val7;
     $34 = $29 ? $32 : $30;
     $35 = (($33) + ($34)|0);
     $36 = ($$ph|0)==($35|0);
     L11: do {
      if (!($36)) {
       $38 = $$ph;
       L12: while(1) {
        $37 = HEAP8[$38>>0]|0;
        $39 = HEAP32[$__s>>2]|0;
        $40 = ($39|0)==(0|0);
        do {
         if (!($40)) {
          $41 = ((($39)) + 24|0);
          $42 = HEAP32[$41>>2]|0;
          $43 = ((($39)) + 28|0);
          $44 = HEAP32[$43>>2]|0;
          $45 = ($42|0)==($44|0);
          if (!($45)) {
           $46 = ((($42)) + 1|0);
           HEAP32[$41>>2] = $46;
           HEAP8[$42>>0] = $37;
           break;
          }
          $47 = HEAP32[$39>>2]|0;
          $48 = ((($47)) + 52|0);
          $49 = HEAP32[$48>>2]|0;
          $50 = $37&255;
          __THREW__ = 0;
          $51 = (invoke_iii($49|0,($39|0),($50|0))|0);
          $52 = __THREW__; __THREW__ = 0;
          $53 = $52&1;
          if ($53) {
           break L12;
          }
          $54 = ($51|0)==(-1);
          if ($54) {
           HEAP32[$__s>>2] = 0;
          }
         }
        } while(0);
        $55 = ((($38)) + 1|0);
        $$pre = HEAP8[$__nm>>0]|0;
        $56 = $$pre & 1;
        $57 = ($56<<24>>24)==(0);
        $$pre2$val = HEAP32[$$pre2>>2]|0;
        $58 = HEAP32[$27>>2]|0;
        $59 = $$pre&255;
        $60 = $59 >>> 1;
        $61 = $57 ? $$pre$phi6Z2D : $$pre2$val;
        $62 = $57 ? $60 : $58;
        $63 = (($61) + ($62)|0);
        $64 = ($55|0)==($63|0);
        if ($64) {
         break L11;
        } else {
         $38 = $55;
        }
       }
       $67 = ___cxa_find_matching_catch()|0;
       $68 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nm);
       $$0 = $68;$$01 = $67;
       break L4;
      }
     } while(0);
     $69 = HEAP32[$__s>>2]|0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nm);
     $$sroa$0$0 = $69;
     break L1;
    }
   } while(0);
   ___resumeException($$01|0);
   // unreachable;
  }
 } while(0);
 STACKTOP = sp;return ($$sroa$0$0|0);
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 20|0;
 $vararg_buffer = sp;
 $__fmt = sp + 60|0;
 $__nar = sp + 48|0;
 $__o = sp + 24|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[26008>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[26008+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[26008+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[26008+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[26008+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[26008+5>>0]|0;
 $2 = ((($__fmt)) + 1|0);
 $3 = ((($__iob)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,26014,1,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$vararg_buffer)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 $9 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $9;
 __THREW__ = 0;
 invoke_viiiiiii(433,($__nar|0),($8|0),($7|0),($__o|0),($__op|0),($__oe|0),($0|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $16 = ___cxa_find_matching_catch()|0;
  $17 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
  ___resumeException($16|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
  $12 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $12;
  $13 = HEAP32[$__op>>2]|0;
  $14 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  $15 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$13,$14,$__iob,$__fl)|0);
  STACKTOP = sp;return ($15|0);
 }
 return (0)|0;
}
function __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmtp,$__len,$__signd,$__flags) {
 $__fmtp = $__fmtp|0;
 $__len = $__len|0;
 $__signd = $__signd|0;
 $__flags = $__flags|0;
 var $$0 = 0, $$012 = 0, $$1$lcssa = 0, $$1$ph = 0, $$13 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__flags & 2048;
 $1 = ($0|0)==(0);
 if ($1) {
  $$0 = $__fmtp;
 } else {
  $2 = ((($__fmtp)) + 1|0);
  HEAP8[$__fmtp>>0] = 43;
  $$0 = $2;
 }
 $3 = $__flags & 512;
 $4 = ($3|0)==(0);
 if ($4) {
  $$1$ph = $$0;
 } else {
  $5 = ((($$0)) + 1|0);
  HEAP8[$$0>>0] = 35;
  $$1$ph = $5;
 }
 $6 = HEAP8[$__len>>0]|0;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $$1$lcssa = $$1$ph;
 } else {
  $$012 = $__len;$$13 = $$1$ph;$10 = $6;
  while(1) {
   $8 = ((($$012)) + 1|0);
   $9 = ((($$13)) + 1|0);
   HEAP8[$$13>>0] = $10;
   $11 = HEAP8[$8>>0]|0;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $$1$lcssa = $9;
    break;
   } else {
    $$012 = $8;$$13 = $9;$10 = $11;
   }
  }
 }
 $13 = $__flags & 74;
 L11: do {
  switch ($13|0) {
  case 64:  {
   HEAP8[$$1$lcssa>>0] = 111;
   break;
  }
  case 8:  {
   $14 = $__flags & 16384;
   $15 = ($14|0)==(0);
   if ($15) {
    HEAP8[$$1$lcssa>>0] = 120;
    break L11;
   } else {
    HEAP8[$$1$lcssa>>0] = 88;
    break L11;
   }
   break;
  }
  default: {
   if ($__signd) {
    HEAP8[$$1$lcssa>>0] = 100;
    break L11;
   } else {
    HEAP8[$$1$lcssa>>0] = 117;
    break L11;
   }
  }
  }
 } while(0);
 return;
}
function __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nb,$__ne,$__iob) {
 $__nb = $__nb|0;
 $__ne = $__ne|0;
 $__iob = $__iob|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__iob)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 176;
 L1: do {
  switch ($2|0) {
  case 16:  {
   $3 = HEAP8[$__nb>>0]|0;
   switch ($3<<24>>24) {
   case 43: case 45:  {
    $4 = ((($__nb)) + 1|0);
    $$0 = $4;
    break L1;
    break;
   }
   default: {
   }
   }
   $5 = $__ne;
   $6 = $__nb;
   $7 = (($5) - ($6))|0;
   $8 = ($7|0)>(1);
   $9 = ($3<<24>>24)==(48);
   $or$cond = $8 & $9;
   if ($or$cond) {
    $10 = ((($__nb)) + 1|0);
    $11 = HEAP8[$10>>0]|0;
    switch ($11<<24>>24) {
    case 88: case 120:  {
     break;
    }
    default: {
     label = 7;
     break L1;
    }
    }
    $12 = ((($__nb)) + 2|0);
    $$0 = $12;
   } else {
    label = 7;
   }
   break;
  }
  case 32:  {
   $$0 = $__ne;
   break;
  }
  default: {
   label = 7;
  }
  }
 } while(0);
 if ((label|0) == 7) {
  $$0 = $__nb;
 }
 return ($$0|0);
}
function __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$01$i$i10 = 0, $$01$i$i414 = 0, $$__dg$0 = 0, $$pre = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dc$011 = 0;
 var $__dc$1 = 0, $__dg$012 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$013 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,10392)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,10532)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 1023]($__grouping,$1);
 $5 = HEAP8[$__grouping>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 $8 = ((($__grouping)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $5&255;
 $11 = $10 >>> 1;
 $12 = $7 ? $11 : $9;
 $13 = ($12|0)==(0);
 L1: do {
  if ($13) {
   $14 = HEAP32[$0>>2]|0;
   $15 = ((($14)) + 32|0);
   $16 = HEAP32[$15>>2]|0;
   __THREW__ = 0;
   (invoke_iiiii($16|0,($0|0),($__nb|0),($__ne|0),($__ob|0))|0);
   $17 = __THREW__; __THREW__ = 0;
   $18 = $17&1;
   if ($18) {
    label = 5;
   } else {
    $19 = $__ne;
    $20 = $__nb;
    $21 = (($19) - ($20))|0;
    $22 = (($__ob) + ($21)|0);
    HEAP32[$__oe>>2] = $22;
    $$pre$phiZ2D = $20;$133 = $22;
    label = 29;
   }
  } else {
   HEAP32[$__oe>>2] = $__ob;
   $27 = HEAP8[$__nb>>0]|0;
   switch ($27<<24>>24) {
   case 43: case 45:  {
    $28 = HEAP32[$0>>2]|0;
    $29 = ((($28)) + 28|0);
    $30 = HEAP32[$29>>2]|0;
    __THREW__ = 0;
    $31 = (invoke_iii($30|0,($0|0),($27|0))|0);
    $32 = __THREW__; __THREW__ = 0;
    $33 = $32&1;
    if ($33) {
     label = 5;
     break L1;
    }
    $34 = ((($__nb)) + 1|0);
    $35 = HEAP32[$__oe>>2]|0;
    $36 = ((($35)) + 1|0);
    HEAP32[$__oe>>2] = $36;
    HEAP8[$35>>0] = $31;
    $__nf$0 = $34;
    break;
   }
   default: {
    $__nf$0 = $__nb;
   }
   }
   $37 = $__ne;
   $38 = $__nf$0;
   $39 = (($37) - ($38))|0;
   $40 = ($39|0)>(1);
   L9: do {
    if ($40) {
     $41 = HEAP8[$__nf$0>>0]|0;
     $42 = ($41<<24>>24)==(48);
     if ($42) {
      $43 = ((($__nf$0)) + 1|0);
      $44 = HEAP8[$43>>0]|0;
      switch ($44<<24>>24) {
      case 88: case 120:  {
       break;
      }
      default: {
       $__nf$1 = $__nf$0;
       break L9;
      }
      }
      $45 = HEAP32[$0>>2]|0;
      $46 = ((($45)) + 28|0);
      $47 = HEAP32[$46>>2]|0;
      __THREW__ = 0;
      $48 = (invoke_iii($47|0,($0|0),48)|0);
      $49 = __THREW__; __THREW__ = 0;
      $50 = $49&1;
      if ($50) {
       label = 5;
       break L1;
      }
      $51 = HEAP32[$__oe>>2]|0;
      $52 = ((($51)) + 1|0);
      HEAP32[$__oe>>2] = $52;
      HEAP8[$51>>0] = $48;
      $53 = HEAP8[$43>>0]|0;
      $54 = HEAP32[$0>>2]|0;
      $55 = ((($54)) + 28|0);
      $56 = HEAP32[$55>>2]|0;
      __THREW__ = 0;
      $57 = (invoke_iii($56|0,($0|0),($53|0))|0);
      $58 = __THREW__; __THREW__ = 0;
      $59 = $58&1;
      if ($59) {
       label = 5;
       break L1;
      }
      $60 = ((($__nf$0)) + 2|0);
      $61 = HEAP32[$__oe>>2]|0;
      $62 = ((($61)) + 1|0);
      HEAP32[$__oe>>2] = $62;
      HEAP8[$61>>0] = $57;
      $__nf$1 = $60;
     } else {
      $__nf$1 = $__nf$0;
     }
    } else {
     $__nf$1 = $__nf$0;
    }
   } while(0);
   $63 = ($__nf$1|0)==($__ne|0);
   if (!($63)) {
    $64 = ((($__ne)) + -1|0);
    $65 = ($__nf$1>>>0)<($64>>>0);
    if ($65) {
     $$01$i$i414 = $__nf$1;$68 = $64;
     while(1) {
      $66 = HEAP8[$$01$i$i414>>0]|0;
      $67 = HEAP8[$68>>0]|0;
      HEAP8[$$01$i$i414>>0] = $67;
      HEAP8[$68>>0] = $66;
      $69 = ((($$01$i$i414)) + 1|0);
      $70 = ((($68)) + -1|0);
      $71 = ($69>>>0)<($70>>>0);
      if ($71) {
       $$01$i$i414 = $69;$68 = $70;
      } else {
       break;
      }
     }
    }
   }
   $72 = HEAP32[$1>>2]|0;
   $73 = ((($72)) + 16|0);
   $74 = HEAP32[$73>>2]|0;
   __THREW__ = 0;
   $75 = (invoke_ii($74|0,($1|0))|0);
   $76 = __THREW__; __THREW__ = 0;
   $77 = $76&1;
   if ($77) {
    label = 5;
   } else {
    $78 = ((($__grouping)) + 8|0);
    $79 = ((($__grouping)) + 1|0);
    $80 = ($__nf$1>>>0)<($__ne>>>0);
    L22: do {
     if ($80) {
      $__dc$011 = 0;$__dg$012 = 0;$__p$013 = $__nf$1;
      while(1) {
       $81 = HEAP8[$__grouping>>0]|0;
       $82 = $81 & 1;
       $83 = ($82<<24>>24)==(0);
       $84 = HEAP32[$78>>2]|0;
       $85 = $83 ? $79 : $84;
       $86 = (($85) + ($__dg$012)|0);
       $87 = HEAP8[$86>>0]|0;
       $88 = ($87<<24>>24)!=(0);
       $89 = $87 << 24 >> 24;
       $90 = ($__dc$011|0)==($89|0);
       $or$cond = $88 & $90;
       if ($or$cond) {
        $91 = HEAP32[$__oe>>2]|0;
        $92 = ((($91)) + 1|0);
        HEAP32[$__oe>>2] = $92;
        HEAP8[$91>>0] = $75;
        $93 = HEAP8[$__grouping>>0]|0;
        $94 = $93 & 1;
        $95 = ($94<<24>>24)==(0);
        $96 = HEAP32[$8>>2]|0;
        $97 = $93&255;
        $98 = $97 >>> 1;
        $99 = $95 ? $98 : $96;
        $100 = (($99) + -1)|0;
        $101 = ($__dg$012>>>0)<($100>>>0);
        $102 = $101&1;
        $$__dg$0 = (($102) + ($__dg$012))|0;
        $__dc$1 = 0;$__dg$1 = $$__dg$0;
       } else {
        $__dc$1 = $__dc$011;$__dg$1 = $__dg$012;
       }
       $103 = HEAP8[$__p$013>>0]|0;
       $104 = HEAP32[$0>>2]|0;
       $105 = ((($104)) + 28|0);
       $106 = HEAP32[$105>>2]|0;
       __THREW__ = 0;
       $107 = (invoke_iii($106|0,($0|0),($103|0))|0);
       $108 = __THREW__; __THREW__ = 0;
       $109 = $108&1;
       if ($109) {
        break;
       }
       $110 = HEAP32[$__oe>>2]|0;
       $111 = ((($110)) + 1|0);
       HEAP32[$__oe>>2] = $111;
       HEAP8[$110>>0] = $107;
       $112 = (($__dc$1) + 1)|0;
       $113 = ((($__p$013)) + 1|0);
       $114 = ($113>>>0)<($__ne>>>0);
       if ($114) {
        $__dc$011 = $112;$__dg$012 = $__dg$1;$__p$013 = $113;
       } else {
        break L22;
       }
      }
      $23 = ___cxa_find_matching_catch()|0;
      $24 = tempRet0;
      $lpad$phi$index = $23;$lpad$phi$index2 = $24;
      break L1;
     }
    } while(0);
    $115 = $__nf$1;
    $116 = $__nb;
    $117 = (($115) - ($116))|0;
    $118 = (($__ob) + ($117)|0);
    $119 = HEAP32[$__oe>>2]|0;
    $120 = ($118|0)==($119|0);
    if ($120) {
     $$pre$phiZ2D = $116;$133 = $118;
     label = 29;
    } else {
     $121 = ((($119)) + -1|0);
     $122 = ($118>>>0)<($121>>>0);
     if ($122) {
      $$01$i$i10 = $118;$125 = $121;
      while(1) {
       $123 = HEAP8[$$01$i$i10>>0]|0;
       $124 = HEAP8[$125>>0]|0;
       HEAP8[$$01$i$i10>>0] = $124;
       HEAP8[$125>>0] = $123;
       $126 = ((($$01$i$i10)) + 1|0);
       $127 = ((($125)) + -1|0);
       $128 = ($126>>>0)<($127>>>0);
       if ($128) {
        $$01$i$i10 = $126;$125 = $127;
       } else {
        break;
       }
      }
     }
     $$pre = HEAP32[$__oe>>2]|0;
     $$pre$phiZ2D = $116;$133 = $$pre;
     label = 29;
    }
   }
  }
 } while(0);
 if ((label|0) == 5) {
  $25 = ___cxa_find_matching_catch()|0;
  $26 = tempRet0;
  $lpad$phi$index = $25;$lpad$phi$index2 = $26;
 }
 else if ((label|0) == 29) {
  $129 = ($__np|0)==($__ne|0);
  $130 = $__np;
  $131 = (($130) - ($$pre$phiZ2D))|0;
  $132 = (($__ob) + ($131)|0);
  $storemerge = $129 ? $133 : $132;
  HEAP32[$__op>>2] = $storemerge;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
  STACKTOP = sp;return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx($this,$__s,$__iob,$__fl,$0,$1) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 32|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 78|0;
 $__o = sp + 36|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($__fmt)) + 1|0);
 $9 = ((($__iob)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,26016,1,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $vararg_buffer;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,22,$11,$__fmt,$vararg_buffer)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 $19 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$2>>2] = $19;
 __THREW__ = 0;
 invoke_viiiiiii(433,($__nar|0),($18|0),($17|0),($__o|0),($__op|0),($__oe|0),($2|0));
 $20 = __THREW__; __THREW__ = 0;
 $21 = $20&1;
 if ($21) {
  $26 = ___cxa_find_matching_catch()|0;
  $27 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
  ___resumeException($26|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
  $22 = HEAP32[$__s>>2]|0;
  HEAP32[$3>>2] = $22;
  $23 = HEAP32[$__op>>2]|0;
  $24 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;
  $25 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$23,$24,$__iob,$__fl)|0);
  STACKTOP = sp;return ($25|0);
 }
 return (0)|0;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 20|0;
 $vararg_buffer = sp;
 $__fmt = sp + 60|0;
 $__nar = sp + 48|0;
 $__o = sp + 24|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[26008>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[26008+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[26008+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[26008+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[26008+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[26008+5>>0]|0;
 $2 = ((($__fmt)) + 1|0);
 $3 = ((($__iob)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,26014,0,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$vararg_buffer)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 $9 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $9;
 __THREW__ = 0;
 invoke_viiiiiii(433,($__nar|0),($8|0),($7|0),($__o|0),($__op|0),($__oe|0),($0|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $16 = ___cxa_find_matching_catch()|0;
  $17 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
  ___resumeException($16|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
  $12 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $12;
  $13 = HEAP32[$__op>>2]|0;
  $14 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  $15 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$13,$14,$__iob,$__fl)|0);
  STACKTOP = sp;return ($15|0);
 }
 return (0)|0;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy($this,$__s,$__iob,$__fl,$0,$1) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 32|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 79|0;
 $__o = sp + 36|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($__fmt)) + 1|0);
 $9 = ((($__iob)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,26016,0,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $vararg_buffer;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,23,$11,$__fmt,$vararg_buffer)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 $19 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$2>>2] = $19;
 __THREW__ = 0;
 invoke_viiiiiii(433,($__nar|0),($18|0),($17|0),($__o|0),($__op|0),($__oe|0),($2|0));
 $20 = __THREW__; __THREW__ = 0;
 $21 = $20&1;
 if ($21) {
  $26 = ___cxa_find_matching_catch()|0;
  $27 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
  ___resumeException($26|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
  $22 = HEAP32[$__s>>2]|0;
  HEAP32[$3>>2] = $22;
  $23 = HEAP32[$__op>>2]|0;
  $24 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;
  $25 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$23,$24,$__iob,$__fl)|0);
  STACKTOP = sp;return ($25|0);
 }
 return (0)|0;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$0 = 0, $$02 = 0, $$112 = 0, $$1311 = 0, $$byval_copy = 0, $$pre = 0, $$pre8 = 0, $$pre9 = 0, $$pre9$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr12 = 0;
 var $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 84|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 146|0;
 $__nb = sp + 80|0;
 $__o = sp + 88|0;
 $__op = sp + 76|0;
 $__oe = sp + 72|0;
 $0 = sp + 68|0;
 $1 = sp + 64|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($__fmt)) + 1|0);
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,26019,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = ((($__iob)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $12;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 L5: do {
  if ($15) {
   __THREW__ = 0;
   $16 = (invoke_i(429)|0);
   $17 = __THREW__; __THREW__ = 0;
   $18 = $17&1;
   if ($9) {
    if (!($18)) {
     $19 = ((($__iob)) + 8|0);
     $20 = HEAP32[$19>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer5>>2] = $20;
     $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
     HEAPF64[$vararg_ptr8>>3] = $__v;
     $21 = (invoke_iiiii(434,($__nb|0),($16|0),($__fmt|0),($vararg_buffer5|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if (!($23)) {
      $__nc$1 = $21;
      label = 12;
     }
    }
   } else {
    if (!($18)) {
     $26 = ((($__iob)) + 8|0);
     $27 = HEAP32[$26>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer9>>2] = $27;
     $vararg_ptr12 = ((($vararg_buffer9)) + 8|0);
     HEAPF64[$vararg_ptr12>>3] = $__v;
     $28 = (invoke_iiiii(434,($__nb|0),($16|0),($__fmt|0),($vararg_buffer9|0))|0);
     $29 = __THREW__; __THREW__ = 0;
     $30 = $29&1;
     if (!($30)) {
      $__nc$1 = $28;
      label = 12;
     }
    }
   }
   do {
    if ((label|0) == 12) {
     $31 = HEAP32[$__nb>>2]|0;
     $32 = ($31|0)==(0|0);
     if ($32) {
      __THREW__ = 0;
      invoke_v(435);
      $33 = __THREW__; __THREW__ = 0;
      $34 = $33&1;
      if ($34) {
       break;
      }
      $$pre = HEAP32[$__nb>>2]|0;
      $36 = $$pre;
     } else {
      $36 = $31;
     }
     $35 = $36;
     $38 = $36;$65 = $35;$__nc$2 = $__nc$1;
     label = 16;
     break L5;
    }
   } while(0);
   $24 = ___cxa_find_matching_catch()|0;
   $25 = tempRet0;
   $$112 = $24;$$1311 = $25;
  } else {
   $$pre8 = HEAP32[$__nb>>2]|0;
   $38 = $$pre8;$65 = 0;$__nc$2 = $__nc$0;
   label = 16;
  }
 } while(0);
 if ((label|0) == 16) {
  $37 = (($38) + ($__nc$2)|0);
  $39 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($38,$37,$__iob)|0);
  $40 = ($38|0)==($__nar|0);
  do {
   if ($40) {
    $52 = $__nar;$62 = 0;$__ob$0 = $__o;
    label = 22;
   } else {
    $41 = $__nc$2 << 1;
    $42 = (_malloc($41)|0);
    $43 = ($42|0)==(0|0);
    if ($43) {
     __THREW__ = 0;
     invoke_v(435);
     $44 = __THREW__; __THREW__ = 0;
     $45 = $44&1;
     if ($45) {
      $74 = 0;
      label = 20;
      break;
     }
     $$pre9$pre = HEAP32[$__nb>>2]|0;
     $$pre9 = $$pre9$pre;
    } else {
     $$pre9 = $38;
    }
    $48 = $42;
    $52 = $$pre9;$62 = $48;$__ob$0 = $42;
    label = 22;
   }
  } while(0);
  do {
   if ((label|0) == 22) {
    __THREW__ = 0;
    $49 = (invoke_ii(357,($__iob|0))|0);
    $50 = __THREW__; __THREW__ = 0;
    $51 = $50&1;
    if ($51) {
     $74 = $62;
     label = 20;
    } else {
     HEAP32[$0>>2] = $49;
     __THREW__ = 0;
     invoke_viiiiiii(436,($52|0),($39|0),($37|0),($__ob$0|0),($__op|0),($__oe|0),($0|0));
     $53 = __THREW__; __THREW__ = 0;
     $54 = $53&1;
     if ($54) {
      $67 = ___cxa_find_matching_catch()|0;
      $68 = tempRet0;
      (__ZNSt3__114__shared_count16__release_sharedEv($49)|0);
      $$0 = $67;$$02 = $68;$70 = $62;
      break;
     }
     (__ZNSt3__114__shared_count16__release_sharedEv($49)|0);
     $55 = HEAP32[$__s>>2]|0;
     HEAP32[$1>>2] = $55;
     $56 = HEAP32[$__op>>2]|0;
     $57 = HEAP32[$__oe>>2]|0;
     __THREW__ = 0;
     ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
     $58 = (invoke_iiiiiii(358,($$byval_copy|0),($__ob$0|0),($56|0),($57|0),($__iob|0),($__fl|0))|0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      $74 = $62;
      label = 20;
     } else {
      HEAP32[$__s>>2] = $58;
      $61 = ($62|0)==(0);
      if (!($61)) {
       $63 = $62;
       _free($63);
      }
      $64 = ($65|0)==(0);
      if (!($64)) {
       $66 = $65;
       _free($66);
      }
      STACKTOP = sp;return ($58|0);
     }
    }
   }
  } while(0);
  if ((label|0) == 20) {
   $46 = ___cxa_find_matching_catch()|0;
   $47 = tempRet0;
   $$0 = $46;$$02 = $47;$70 = $74;
  }
  $69 = ($70|0)==(0);
  if (!($69)) {
   $71 = $70;
   _free($71);
  }
  $72 = ($65|0)==(0);
  if ($72) {
   $$112 = $$0;$$1311 = $$02;
  } else {
   $73 = $65;
   _free($73);
   $$112 = $$0;$$1311 = $$02;
  }
 }
 ___resumeException($$112|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmtp,$__len,$__flags) {
 $__fmtp = $__fmtp|0;
 $__len = $__len|0;
 $__flags = $__flags|0;
 var $$0 = 0, $$012 = 0, $$1 = 0, $$2$lcssa = 0, $$2$ph = 0, $$23 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $specify_precision$0$off0$ph = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__flags & 2048;
 $1 = ($0|0)==(0);
 if ($1) {
  $$0 = $__fmtp;
 } else {
  $2 = ((($__fmtp)) + 1|0);
  HEAP8[$__fmtp>>0] = 43;
  $$0 = $2;
 }
 $3 = $__flags & 1024;
 $4 = ($3|0)==(0);
 if ($4) {
  $$1 = $$0;
 } else {
  $5 = ((($$0)) + 1|0);
  HEAP8[$$0>>0] = 35;
  $$1 = $5;
 }
 $6 = $__flags & 260;
 $7 = $__flags >>> 14;
 $8 = ($6|0)==(260);
 if ($8) {
  $$2$ph = $$1;$specify_precision$0$off0$ph = 0;
 } else {
  $9 = ((($$1)) + 1|0);
  HEAP8[$$1>>0] = 46;
  $10 = ((($$1)) + 2|0);
  HEAP8[$9>>0] = 42;
  $$2$ph = $10;$specify_precision$0$off0$ph = 1;
 }
 $11 = HEAP8[$__len>>0]|0;
 $12 = ($11<<24>>24)==(0);
 if ($12) {
  $$2$lcssa = $$2$ph;
 } else {
  $$012 = $__len;$$23 = $$2$ph;$15 = $11;
  while(1) {
   $13 = ((($$012)) + 1|0);
   $14 = ((($$23)) + 1|0);
   HEAP8[$$23>>0] = $15;
   $16 = HEAP8[$13>>0]|0;
   $17 = ($16<<24>>24)==(0);
   if ($17) {
    $$2$lcssa = $14;
    break;
   } else {
    $$012 = $13;$$23 = $14;$15 = $16;
   }
  }
 }
 L14: do {
  switch ($6|0) {
  case 4:  {
   $18 = $7 & 1;
   $19 = ($18|0)==(0);
   if ($19) {
    HEAP8[$$2$lcssa>>0] = 102;
    break L14;
   } else {
    HEAP8[$$2$lcssa>>0] = 70;
    break L14;
   }
   break;
  }
  case 256:  {
   $20 = $7 & 1;
   $21 = ($20|0)==(0);
   if ($21) {
    HEAP8[$$2$lcssa>>0] = 101;
    break L14;
   } else {
    HEAP8[$$2$lcssa>>0] = 69;
    break L14;
   }
   break;
  }
  default: {
   $22 = $7 & 1;
   $23 = ($22|0)!=(0);
   if ($8) {
    if ($23) {
     HEAP8[$$2$lcssa>>0] = 65;
     break L14;
    } else {
     HEAP8[$$2$lcssa>>0] = 97;
     break L14;
    }
   } else {
    if ($23) {
     HEAP8[$$2$lcssa>>0] = 71;
     break L14;
    } else {
     HEAP8[$$2$lcssa>>0] = 103;
     break L14;
    }
   }
  }
  }
 } while(0);
 return ($specify_precision$0$off0$ph|0);
}
function __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$01$i$i46 = 0, $$01$i$i641 = 0, $$__dg$0 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $__dc$043 = 0, $__dc$1 = 0, $__dg$044 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$240 = 0, $__nf$240$lcssa = 0, $__nf$3 = 0, $__ns$052 = 0, $__ns$148 = 0, $__ns$2 = 0, $__p$045 = 0, $lpad$phi$index = 0, $lpad$phi$index5 = 0, $or$cond = 0, $storemerge = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,10392)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,10532)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 1023]($__grouping,$1);
 HEAP32[$__oe>>2] = $__ob;
 $5 = HEAP8[$__nb>>0]|0;
 switch ($5<<24>>24) {
 case 43: case 45:  {
  $6 = HEAP32[$0>>2]|0;
  $7 = ((($6)) + 28|0);
  $8 = HEAP32[$7>>2]|0;
  __THREW__ = 0;
  $9 = (invoke_iii($8|0,($0|0),($5|0))|0);
  $10 = __THREW__; __THREW__ = 0;
  $11 = $10&1;
  if ($11) {
   label = 8;
  } else {
   $12 = ((($__nb)) + 1|0);
   $13 = HEAP32[$__oe>>2]|0;
   $14 = ((($13)) + 1|0);
   HEAP32[$__oe>>2] = $14;
   HEAP8[$13>>0] = $9;
   $__nf$0 = $12;
   label = 10;
  }
  break;
 }
 default: {
  $__nf$0 = $__nb;
  label = 10;
 }
 }
 L4: do {
  if ((label|0) == 10) {
   $25 = $__ne;
   $26 = $__nf$0;
   $27 = (($25) - ($26))|0;
   $28 = ($27|0)>(1);
   L6: do {
    if ($28) {
     $30 = HEAP8[$__nf$0>>0]|0;
     $31 = ($30<<24>>24)==(48);
     if ($31) {
      $32 = ((($__nf$0)) + 1|0);
      $33 = HEAP8[$32>>0]|0;
      switch ($33<<24>>24) {
      case 88: case 120:  {
       break;
      }
      default: {
       label = 11;
       break L6;
      }
      }
      $34 = HEAP32[$0>>2]|0;
      $35 = ((($34)) + 28|0);
      $36 = HEAP32[$35>>2]|0;
      __THREW__ = 0;
      $37 = (invoke_iii($36|0,($0|0),48)|0);
      $38 = __THREW__; __THREW__ = 0;
      $39 = $38&1;
      if ($39) {
       label = 8;
       break L4;
      }
      $40 = HEAP32[$__oe>>2]|0;
      $41 = ((($40)) + 1|0);
      HEAP32[$__oe>>2] = $41;
      HEAP8[$40>>0] = $37;
      $42 = ((($__nf$0)) + 2|0);
      $43 = HEAP8[$32>>0]|0;
      $44 = HEAP32[$0>>2]|0;
      $45 = ((($44)) + 28|0);
      $46 = HEAP32[$45>>2]|0;
      __THREW__ = 0;
      $47 = (invoke_iii($46|0,($0|0),($43|0))|0);
      $48 = __THREW__; __THREW__ = 0;
      $49 = $48&1;
      if ($49) {
       label = 8;
       break L4;
      }
      $50 = HEAP32[$__oe>>2]|0;
      $51 = ((($50)) + 1|0);
      HEAP32[$__oe>>2] = $51;
      HEAP8[$50>>0] = $47;
      $52 = ($42>>>0)<($__ne>>>0);
      if ($52) {
       $__ns$052 = $42;
       while(1) {
        $53 = HEAP8[$__ns$052>>0]|0;
        __THREW__ = 0;
        $54 = (invoke_i(429)|0);
        $55 = __THREW__; __THREW__ = 0;
        $56 = $55&1;
        if ($56) {
         break;
        }
        $57 = $53 << 24 >> 24;
        __THREW__ = 0;
        $58 = (invoke_iii(437,($57|0),($54|0))|0);
        $59 = __THREW__; __THREW__ = 0;
        $60 = $59&1;
        if ($60) {
         break;
        }
        $61 = ($58|0)==(0);
        if ($61) {
         $__nf$1 = $42;$__ns$2 = $__ns$052;
         break L6;
        }
        $62 = ((($__ns$052)) + 1|0);
        $63 = ($62>>>0)<($__ne>>>0);
        if ($63) {
         $__ns$052 = $62;
        } else {
         $__nf$1 = $42;$__ns$2 = $62;
         break L6;
        }
       }
       $21 = ___cxa_find_matching_catch()|0;
       $22 = tempRet0;
       $lpad$phi$index = $21;$lpad$phi$index5 = $22;
       break L4;
      } else {
       $__nf$1 = $42;$__ns$2 = $42;
      }
     } else {
      label = 11;
     }
    } else {
     label = 11;
    }
   } while(0);
   L18: do {
    if ((label|0) == 11) {
     $29 = ($__nf$0>>>0)<($__ne>>>0);
     if ($29) {
      $__ns$148 = $__nf$0;
      while(1) {
       $64 = HEAP8[$__ns$148>>0]|0;
       __THREW__ = 0;
       $65 = (invoke_i(429)|0);
       $66 = __THREW__; __THREW__ = 0;
       $67 = $66&1;
       if ($67) {
        break;
       }
       $68 = $64 << 24 >> 24;
       __THREW__ = 0;
       $69 = (invoke_iii(438,($68|0),($65|0))|0);
       $70 = __THREW__; __THREW__ = 0;
       $71 = $70&1;
       if ($71) {
        break;
       }
       $72 = ($69|0)==(0);
       if ($72) {
        $__nf$1 = $__nf$0;$__ns$2 = $__ns$148;
        break L18;
       }
       $73 = ((($__ns$148)) + 1|0);
       $74 = ($73>>>0)<($__ne>>>0);
       if ($74) {
        $__ns$148 = $73;
       } else {
        $__nf$1 = $__nf$0;$__ns$2 = $73;
        break L18;
       }
      }
      $19 = ___cxa_find_matching_catch()|0;
      $20 = tempRet0;
      $lpad$phi$index = $19;$lpad$phi$index5 = $20;
      break L4;
     } else {
      $__nf$1 = $__nf$0;$__ns$2 = $__nf$0;
     }
    }
   } while(0);
   $75 = HEAP8[$__grouping>>0]|0;
   $76 = $75 & 1;
   $77 = ($76<<24>>24)==(0);
   $78 = ((($__grouping)) + 4|0);
   $79 = HEAP32[$78>>2]|0;
   $80 = $75&255;
   $81 = $80 >>> 1;
   $82 = $77 ? $81 : $79;
   $83 = ($82|0)==(0);
   if ($83) {
    $84 = HEAP32[$__oe>>2]|0;
    $85 = HEAP32[$0>>2]|0;
    $86 = ((($85)) + 32|0);
    $87 = HEAP32[$86>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($87|0,($0|0),($__nf$1|0),($__ns$2|0),($84|0))|0);
    $88 = __THREW__; __THREW__ = 0;
    $89 = $88&1;
    if ($89) {
     label = 8;
     break;
    }
    $90 = $__ns$2;
    $91 = $__nf$1;
    $92 = (($90) - ($91))|0;
    $93 = HEAP32[$__oe>>2]|0;
    $94 = (($93) + ($92)|0);
    HEAP32[$__oe>>2] = $94;
    $$pre$phiZ2D = $0;
   } else {
    $95 = ($__nf$1|0)==($__ns$2|0);
    if (!($95)) {
     $96 = ((($__ns$2)) + -1|0);
     $97 = ($__nf$1>>>0)<($96>>>0);
     if ($97) {
      $$01$i$i46 = $__nf$1;$100 = $96;
      while(1) {
       $98 = HEAP8[$$01$i$i46>>0]|0;
       $99 = HEAP8[$100>>0]|0;
       HEAP8[$$01$i$i46>>0] = $99;
       HEAP8[$100>>0] = $98;
       $101 = ((($$01$i$i46)) + 1|0);
       $102 = ((($100)) + -1|0);
       $103 = ($101>>>0)<($102>>>0);
       if ($103) {
        $$01$i$i46 = $101;$100 = $102;
       } else {
        break;
       }
      }
     }
    }
    $104 = HEAP32[$1>>2]|0;
    $105 = ((($104)) + 16|0);
    $106 = HEAP32[$105>>2]|0;
    __THREW__ = 0;
    $107 = (invoke_ii($106|0,($1|0))|0);
    $108 = __THREW__; __THREW__ = 0;
    $109 = $108&1;
    if ($109) {
     label = 8;
     break;
    }
    $110 = ((($__grouping)) + 8|0);
    $111 = ((($__grouping)) + 1|0);
    $112 = ($__nf$1>>>0)<($__ns$2>>>0);
    L37: do {
     if ($112) {
      $__dc$043 = 0;$__dg$044 = 0;$__p$045 = $__nf$1;
      while(1) {
       $113 = HEAP8[$__grouping>>0]|0;
       $114 = $113 & 1;
       $115 = ($114<<24>>24)==(0);
       $116 = HEAP32[$110>>2]|0;
       $117 = $115 ? $111 : $116;
       $118 = (($117) + ($__dg$044)|0);
       $119 = HEAP8[$118>>0]|0;
       $120 = ($119<<24>>24)>(0);
       $121 = $119 << 24 >> 24;
       $122 = ($__dc$043|0)==($121|0);
       $or$cond = $120 & $122;
       if ($or$cond) {
        $123 = HEAP32[$__oe>>2]|0;
        $124 = ((($123)) + 1|0);
        HEAP32[$__oe>>2] = $124;
        HEAP8[$123>>0] = $107;
        $125 = HEAP8[$__grouping>>0]|0;
        $126 = $125 & 1;
        $127 = ($126<<24>>24)==(0);
        $128 = HEAP32[$78>>2]|0;
        $129 = $125&255;
        $130 = $129 >>> 1;
        $131 = $127 ? $130 : $128;
        $132 = (($131) + -1)|0;
        $133 = ($__dg$044>>>0)<($132>>>0);
        $134 = $133&1;
        $$__dg$0 = (($134) + ($__dg$044))|0;
        $__dc$1 = 0;$__dg$1 = $$__dg$0;
       } else {
        $__dc$1 = $__dc$043;$__dg$1 = $__dg$044;
       }
       $135 = HEAP8[$__p$045>>0]|0;
       $136 = HEAP32[$0>>2]|0;
       $137 = ((($136)) + 28|0);
       $138 = HEAP32[$137>>2]|0;
       __THREW__ = 0;
       $139 = (invoke_iii($138|0,($0|0),($135|0))|0);
       $140 = __THREW__; __THREW__ = 0;
       $141 = $140&1;
       if ($141) {
        break;
       }
       $142 = HEAP32[$__oe>>2]|0;
       $143 = ((($142)) + 1|0);
       HEAP32[$__oe>>2] = $143;
       HEAP8[$142>>0] = $139;
       $144 = (($__dc$1) + 1)|0;
       $145 = ((($__p$045)) + 1|0);
       $146 = ($145>>>0)<($__ns$2>>>0);
       if ($146) {
        $__dc$043 = $144;$__dg$044 = $__dg$1;$__p$045 = $145;
       } else {
        break L37;
       }
      }
      $17 = ___cxa_find_matching_catch()|0;
      $18 = tempRet0;
      $lpad$phi$index = $17;$lpad$phi$index5 = $18;
      break L4;
     }
    } while(0);
    $147 = $__nf$1;
    $148 = $__nb;
    $149 = (($147) - ($148))|0;
    $150 = (($__ob) + ($149)|0);
    $151 = HEAP32[$__oe>>2]|0;
    $152 = ($150|0)==($151|0);
    if ($152) {
     $$pre$phiZ2D = $0;
    } else {
     $153 = ((($151)) + -1|0);
     $154 = ($150>>>0)<($153>>>0);
     if ($154) {
      $$01$i$i641 = $150;$158 = $153;
      while(1) {
       $156 = HEAP8[$$01$i$i641>>0]|0;
       $157 = HEAP8[$158>>0]|0;
       HEAP8[$$01$i$i641>>0] = $157;
       HEAP8[$158>>0] = $156;
       $159 = ((($$01$i$i641)) + 1|0);
       $160 = ((($158)) + -1|0);
       $161 = ($159>>>0)<($160>>>0);
       if ($161) {
        $$01$i$i641 = $159;$158 = $160;
       } else {
        $$pre$phiZ2D = $0;
        break;
       }
      }
     } else {
      $$pre$phiZ2D = $0;
     }
    }
   }
   $155 = ($__ns$2>>>0)<($__ne>>>0);
   L50: do {
    if ($155) {
     $__nf$240 = $__ns$2;
     while(1) {
      $162 = HEAP8[$__nf$240>>0]|0;
      $163 = ($162<<24>>24)==(46);
      if ($163) {
       $__nf$240$lcssa = $__nf$240;
       break;
      }
      $173 = HEAP32[$$pre$phiZ2D>>2]|0;
      $174 = ((($173)) + 28|0);
      $175 = HEAP32[$174>>2]|0;
      __THREW__ = 0;
      $176 = (invoke_iii($175|0,($0|0),($162|0))|0);
      $177 = __THREW__; __THREW__ = 0;
      $178 = $177&1;
      if ($178) {
       label = 4;
       break;
      }
      $179 = HEAP32[$__oe>>2]|0;
      $180 = ((($179)) + 1|0);
      HEAP32[$__oe>>2] = $180;
      HEAP8[$179>>0] = $176;
      $181 = ((($__nf$240)) + 1|0);
      $182 = ($181>>>0)<($__ne>>>0);
      if ($182) {
       $__nf$240 = $181;
      } else {
       $__nf$3 = $181;
       break L50;
      }
     }
     if ((label|0) == 4) {
      $15 = ___cxa_find_matching_catch()|0;
      $16 = tempRet0;
      $lpad$phi$index = $15;$lpad$phi$index5 = $16;
      break L4;
     }
     $164 = HEAP32[$1>>2]|0;
     $165 = ((($164)) + 12|0);
     $166 = HEAP32[$165>>2]|0;
     __THREW__ = 0;
     $167 = (invoke_ii($166|0,($1|0))|0);
     $168 = __THREW__; __THREW__ = 0;
     $169 = $168&1;
     if ($169) {
      label = 8;
      break L4;
     }
     $170 = HEAP32[$__oe>>2]|0;
     $171 = ((($170)) + 1|0);
     HEAP32[$__oe>>2] = $171;
     HEAP8[$170>>0] = $167;
     $172 = ((($__nf$240$lcssa)) + 1|0);
     $__nf$3 = $172;
    } else {
     $__nf$3 = $__ns$2;
    }
   } while(0);
   $183 = HEAP32[$__oe>>2]|0;
   $184 = HEAP32[$0>>2]|0;
   $185 = ((($184)) + 32|0);
   $186 = HEAP32[$185>>2]|0;
   __THREW__ = 0;
   (invoke_iiiii($186|0,($0|0),($__nf$3|0),($__ne|0),($183|0))|0);
   $187 = __THREW__; __THREW__ = 0;
   $188 = $187&1;
   if ($188) {
    label = 8;
   } else {
    $189 = $__nf$3;
    $190 = (($25) - ($189))|0;
    $191 = HEAP32[$__oe>>2]|0;
    $192 = (($191) + ($190)|0);
    HEAP32[$__oe>>2] = $192;
    $193 = ($__np|0)==($__ne|0);
    $194 = $__np;
    $195 = $__nb;
    $196 = (($194) - ($195))|0;
    $197 = (($__ob) + ($196)|0);
    $storemerge = $193 ? $192 : $197;
    HEAP32[$__op>>2] = $storemerge;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $23 = ___cxa_find_matching_catch()|0;
  $24 = tempRet0;
  $lpad$phi$index = $23;$lpad$phi$index5 = $24;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$0 = 0, $$02 = 0, $$112 = 0, $$1311 = 0, $$byval_copy = 0, $$pre = 0, $$pre8 = 0, $$pre9 = 0, $$pre9$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 76|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 138|0;
 $__nb = sp + 72|0;
 $__o = sp + 80|0;
 $__op = sp + 68|0;
 $__oe = sp + 64|0;
 $0 = sp + 60|0;
 $1 = sp + 56|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($__fmt)) + 1|0);
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,26020,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = ((($__iob)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $12;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 L5: do {
  if ($15) {
   __THREW__ = 0;
   $16 = (invoke_i(429)|0);
   $17 = __THREW__; __THREW__ = 0;
   $18 = $17&1;
   if ($9) {
    if (!($18)) {
     $19 = ((($__iob)) + 8|0);
     $20 = HEAP32[$19>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer5>>2] = $20;
     $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
     HEAPF64[$vararg_ptr8>>3] = $__v;
     $21 = (invoke_iiiii(434,($__nb|0),($16|0),($__fmt|0),($vararg_buffer5|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if (!($23)) {
      $__nc$1 = $21;
      label = 12;
     }
    }
   } else {
    if (!($18)) {
     __THREW__ = 0;
     HEAPF64[$vararg_buffer9>>3] = $__v;
     $26 = (invoke_iiiii(434,($__nb|0),($16|0),($__fmt|0),($vararg_buffer9|0))|0);
     $27 = __THREW__; __THREW__ = 0;
     $28 = $27&1;
     if (!($28)) {
      $__nc$1 = $26;
      label = 12;
     }
    }
   }
   do {
    if ((label|0) == 12) {
     $29 = HEAP32[$__nb>>2]|0;
     $30 = ($29|0)==(0|0);
     if ($30) {
      __THREW__ = 0;
      invoke_v(435);
      $31 = __THREW__; __THREW__ = 0;
      $32 = $31&1;
      if ($32) {
       break;
      }
      $$pre = HEAP32[$__nb>>2]|0;
      $34 = $$pre;
     } else {
      $34 = $29;
     }
     $33 = $34;
     $36 = $34;$63 = $33;$__nc$2 = $__nc$1;
     label = 16;
     break L5;
    }
   } while(0);
   $24 = ___cxa_find_matching_catch()|0;
   $25 = tempRet0;
   $$112 = $24;$$1311 = $25;
  } else {
   $$pre8 = HEAP32[$__nb>>2]|0;
   $36 = $$pre8;$63 = 0;$__nc$2 = $__nc$0;
   label = 16;
  }
 } while(0);
 if ((label|0) == 16) {
  $35 = (($36) + ($__nc$2)|0);
  $37 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($36,$35,$__iob)|0);
  $38 = ($36|0)==($__nar|0);
  do {
   if ($38) {
    $50 = $__nar;$60 = 0;$__ob$0 = $__o;
    label = 22;
   } else {
    $39 = $__nc$2 << 1;
    $40 = (_malloc($39)|0);
    $41 = ($40|0)==(0|0);
    if ($41) {
     __THREW__ = 0;
     invoke_v(435);
     $42 = __THREW__; __THREW__ = 0;
     $43 = $42&1;
     if ($43) {
      $72 = 0;
      label = 20;
      break;
     }
     $$pre9$pre = HEAP32[$__nb>>2]|0;
     $$pre9 = $$pre9$pre;
    } else {
     $$pre9 = $36;
    }
    $46 = $40;
    $50 = $$pre9;$60 = $46;$__ob$0 = $40;
    label = 22;
   }
  } while(0);
  do {
   if ((label|0) == 22) {
    __THREW__ = 0;
    $47 = (invoke_ii(357,($__iob|0))|0);
    $48 = __THREW__; __THREW__ = 0;
    $49 = $48&1;
    if ($49) {
     $72 = $60;
     label = 20;
    } else {
     HEAP32[$0>>2] = $47;
     __THREW__ = 0;
     invoke_viiiiiii(436,($50|0),($37|0),($35|0),($__ob$0|0),($__op|0),($__oe|0),($0|0));
     $51 = __THREW__; __THREW__ = 0;
     $52 = $51&1;
     if ($52) {
      $65 = ___cxa_find_matching_catch()|0;
      $66 = tempRet0;
      (__ZNSt3__114__shared_count16__release_sharedEv($47)|0);
      $$0 = $65;$$02 = $66;$68 = $60;
      break;
     }
     (__ZNSt3__114__shared_count16__release_sharedEv($47)|0);
     $53 = HEAP32[$__s>>2]|0;
     HEAP32[$1>>2] = $53;
     $54 = HEAP32[$__op>>2]|0;
     $55 = HEAP32[$__oe>>2]|0;
     __THREW__ = 0;
     ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
     $56 = (invoke_iiiiiii(358,($$byval_copy|0),($__ob$0|0),($54|0),($55|0),($__iob|0),($__fl|0))|0);
     $57 = __THREW__; __THREW__ = 0;
     $58 = $57&1;
     if ($58) {
      $72 = $60;
      label = 20;
     } else {
      HEAP32[$__s>>2] = $56;
      $59 = ($60|0)==(0);
      if (!($59)) {
       $61 = $60;
       _free($61);
      }
      $62 = ($63|0)==(0);
      if (!($62)) {
       $64 = $63;
       _free($64);
      }
      STACKTOP = sp;return ($56|0);
     }
    }
   }
  } while(0);
  if ((label|0) == 20) {
   $44 = ___cxa_find_matching_catch()|0;
   $45 = tempRet0;
   $$0 = $44;$$02 = $45;$68 = $72;
  }
  $67 = ($68|0)==(0);
  if (!($67)) {
   $69 = $68;
   _free($69);
  }
  $70 = ($63|0)==(0);
  if ($70) {
   $$112 = $$0;$$1311 = $$02;
  } else {
   $71 = $63;
   _free($71);
   $$112 = $$0;$$1311 = $$02;
  }
 }
 ___resumeException($$112|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__op$0 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 12|0;
 $vararg_buffer = sp;
 $__fmt = sp + 76|0;
 $__nar = sp + 56|0;
 $__o = sp + 16|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[26022>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[26022+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[26022+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[26022+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[26022+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[26022+5>>0]|0;
 $2 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $3 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,20,$2,$__fmt,$vararg_buffer)|0);
 $4 = (($__nar) + ($3)|0);
 $5 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$4,$__iob)|0);
 $6 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $6;
 __THREW__ = 0;
 $7 = (invoke_iii(355,($0|0),(10392|0))|0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if ($9) {
  $21 = ___cxa_find_matching_catch()|0;
  $22 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($6)|0);
  ___resumeException($21|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($6)|0);
  $10 = HEAP32[$7>>2]|0;
  $11 = ((($10)) + 32|0);
  $12 = HEAP32[$11>>2]|0;
  (FUNCTION_TABLE_iiiii[$12 & 1023]($7,$__nar,$4,$__o)|0);
  $13 = (($__o) + ($3)|0);
  $14 = ($5|0)==($4|0);
  $15 = $__nar;
  $16 = $5;
  $17 = (($16) - ($15))|0;
  $18 = (($__o) + ($17)|0);
  $__op$0 = $14 ? $13 : $18;
  $19 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $19;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  $20 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$__op$0,$13,$__iob,$__fl)|0);
  STACKTOP = sp;return ($20|0);
 }
 return (0)|0;
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$0 = 0, $$0$i$i = 0, $$01 = 0, $$byval_copy = 0, $$ph = 0, $$pre = 0, $$pre$phi4Z2D = 0, $$pre2 = 0, $$pre2$val = 0, $$pre2$val5 = 0, $$pre3 = 0, $$sroa$0$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__nm = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 20|0;
 $0 = sp + 16|0;
 $1 = sp + 12|0;
 $__nm = sp;
 $2 = ((($__iob)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 1;
 $5 = ($4|0)==(0);
 L1: do {
  if ($5) {
   $6 = HEAP32[$this>>2]|0;
   $7 = ((($6)) + 24|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = HEAP32[$__s>>2]|0;
   HEAP32[$0>>2] = $9;
   $10 = $__v&1;
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   $11 = (FUNCTION_TABLE_iiiiii[$8 & 511]($this,$$byval_copy,$__iob,$__fl,$10)|0);
   $$sroa$0$0 = $11;
  } else {
   $12 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
   HEAP32[$1>>2] = $12;
   __THREW__ = 0;
   $13 = (invoke_iii(355,($1|0),(10540|0))|0);
   $14 = __THREW__; __THREW__ = 0;
   $15 = $14&1;
   L4: do {
    if ($15) {
     $63 = ___cxa_find_matching_catch()|0;
     $64 = tempRet0;
     (__ZNSt3__114__shared_count16__release_sharedEv($12)|0);
     $$0 = $64;$$01 = $63;
    } else {
     (__ZNSt3__114__shared_count16__release_sharedEv($12)|0);
     $16 = HEAP32[$13>>2]|0;
     if ($__v) {
      $17 = ((($16)) + 24|0);
      $18 = HEAP32[$17>>2]|0;
      FUNCTION_TABLE_vii[$18 & 1023]($__nm,$13);
     } else {
      $19 = ((($16)) + 28|0);
      $20 = HEAP32[$19>>2]|0;
      FUNCTION_TABLE_vii[$20 & 1023]($__nm,$13);
     }
     $21 = HEAP8[$__nm>>0]|0;
     $22 = $21 & 1;
     $23 = ($22<<24>>24)==(0);
     $24 = ((($__nm)) + 8|0);
     $25 = HEAP32[$24>>2]|0;
     $$pre3 = ((($__nm)) + 4|0);
     $26 = ((($__nm)) + 4|0);
     $$pre2 = ((($__nm)) + 8|0);
     $$pre$phi4Z2D = $23 ? $26 : $$pre3;
     $$ph = $23 ? $26 : $25;
     $27 = $21 & 1;
     $28 = ($27<<24>>24)==(0);
     $$pre2$val5 = HEAP32[$$pre2>>2]|0;
     $29 = HEAP32[$$pre$phi4Z2D>>2]|0;
     $30 = $21&255;
     $31 = $30 >>> 1;
     $32 = $28 ? $$pre$phi4Z2D : $$pre2$val5;
     $33 = $28 ? $31 : $29;
     $34 = (($32) + ($33<<2)|0);
     $35 = ($$ph|0)==($34|0);
     L11: do {
      if (!($35)) {
       $37 = $$ph;
       while(1) {
        $36 = HEAP32[$37>>2]|0;
        $38 = HEAP32[$__s>>2]|0;
        $39 = ($38|0)==(0|0);
        if (!($39)) {
         $40 = ((($38)) + 24|0);
         $41 = HEAP32[$40>>2]|0;
         $42 = ((($38)) + 28|0);
         $43 = HEAP32[$42>>2]|0;
         $44 = ($41|0)==($43|0);
         if ($44) {
          $45 = HEAP32[$38>>2]|0;
          $46 = ((($45)) + 52|0);
          $47 = HEAP32[$46>>2]|0;
          __THREW__ = 0;
          $48 = (invoke_iii($47|0,($38|0),($36|0))|0);
          $49 = __THREW__; __THREW__ = 0;
          $50 = $49&1;
          if ($50) {
           break;
          } else {
           $$0$i$i = $48;
          }
         } else {
          $51 = ((($41)) + 4|0);
          HEAP32[$40>>2] = $51;
          HEAP32[$41>>2] = $36;
          $$0$i$i = $36;
         }
         $52 = ($$0$i$i|0)==(-1);
         if ($52) {
          HEAP32[$__s>>2] = 0;
         }
        }
        $53 = ((($37)) + 4|0);
        $$pre = HEAP8[$__nm>>0]|0;
        $54 = $$pre & 1;
        $55 = ($54<<24>>24)==(0);
        $$pre2$val = HEAP32[$$pre2>>2]|0;
        $56 = HEAP32[$$pre$phi4Z2D>>2]|0;
        $57 = $$pre&255;
        $58 = $57 >>> 1;
        $59 = $55 ? $$pre$phi4Z2D : $$pre2$val;
        $60 = $55 ? $58 : $56;
        $61 = (($59) + ($60<<2)|0);
        $62 = ($53|0)==($61|0);
        if ($62) {
         break L11;
        } else {
         $37 = $53;
        }
       }
       $65 = ___cxa_find_matching_catch()|0;
       $66 = tempRet0;
       __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nm);
       $$0 = $66;$$01 = $65;
       break L4;
      }
     } while(0);
     $67 = HEAP32[$__s>>2]|0;
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nm);
     $$sroa$0$0 = $67;
     break L1;
    }
   } while(0);
   ___resumeException($$01|0);
   // unreachable;
  }
 } while(0);
 STACKTOP = sp;return ($$sroa$0$0|0);
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 104|0;
 $vararg_buffer = sp;
 $__fmt = sp + 120|0;
 $__nar = sp + 108|0;
 $__o = sp + 20|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[26008>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[26008+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[26008+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[26008+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[26008+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[26008+5>>0]|0;
 $2 = ((($__fmt)) + 1|0);
 $3 = ((($__iob)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,26014,1,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$vararg_buffer)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 $9 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $9;
 __THREW__ = 0;
 invoke_viiiiiii(439,($__nar|0),($8|0),($7|0),($__o|0),($__op|0),($__oe|0),($0|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $16 = ___cxa_find_matching_catch()|0;
  $17 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
  ___resumeException($16|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
  $12 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $12;
  $13 = HEAP32[$__op>>2]|0;
  $14 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  $15 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$13,$14,$__iob,$__fl)|0);
  STACKTOP = sp;return ($15|0);
 }
 return (0)|0;
}
function __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$01$i$i413 = 0, $$01$i$i9 = 0, $$__dg$0 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dc$010 = 0, $__dc$1 = 0;
 var $__dg$011 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$012 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,10384)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,10540)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 1023]($__grouping,$1);
 $5 = HEAP8[$__grouping>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 $8 = ((($__grouping)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $5&255;
 $11 = $10 >>> 1;
 $12 = $7 ? $11 : $9;
 $13 = ($12|0)==(0);
 L1: do {
  if ($13) {
   $14 = HEAP32[$0>>2]|0;
   $15 = ((($14)) + 48|0);
   $16 = HEAP32[$15>>2]|0;
   __THREW__ = 0;
   (invoke_iiiii($16|0,($0|0),($__nb|0),($__ne|0),($__ob|0))|0);
   $17 = __THREW__; __THREW__ = 0;
   $18 = $17&1;
   if ($18) {
    label = 5;
   } else {
    $19 = $__ne;
    $20 = $__nb;
    $21 = (($19) - ($20))|0;
    $22 = (($__ob) + ($21<<2)|0);
    HEAP32[$__oe>>2] = $22;
    $$pre$phiZ2D = $20;$133 = $22;
    label = 28;
   }
  } else {
   HEAP32[$__oe>>2] = $__ob;
   $27 = HEAP8[$__nb>>0]|0;
   switch ($27<<24>>24) {
   case 43: case 45:  {
    $28 = HEAP32[$0>>2]|0;
    $29 = ((($28)) + 44|0);
    $30 = HEAP32[$29>>2]|0;
    __THREW__ = 0;
    $31 = (invoke_iii($30|0,($0|0),($27|0))|0);
    $32 = __THREW__; __THREW__ = 0;
    $33 = $32&1;
    if ($33) {
     label = 5;
     break L1;
    }
    $34 = ((($__nb)) + 1|0);
    $35 = HEAP32[$__oe>>2]|0;
    $36 = ((($35)) + 4|0);
    HEAP32[$__oe>>2] = $36;
    HEAP32[$35>>2] = $31;
    $__nf$0 = $34;
    break;
   }
   default: {
    $__nf$0 = $__nb;
   }
   }
   $37 = $__ne;
   $38 = $__nf$0;
   $39 = (($37) - ($38))|0;
   $40 = ($39|0)>(1);
   L9: do {
    if ($40) {
     $41 = HEAP8[$__nf$0>>0]|0;
     $42 = ($41<<24>>24)==(48);
     if ($42) {
      $43 = ((($__nf$0)) + 1|0);
      $44 = HEAP8[$43>>0]|0;
      switch ($44<<24>>24) {
      case 88: case 120:  {
       break;
      }
      default: {
       $__nf$1 = $__nf$0;
       break L9;
      }
      }
      $45 = HEAP32[$0>>2]|0;
      $46 = ((($45)) + 44|0);
      $47 = HEAP32[$46>>2]|0;
      __THREW__ = 0;
      $48 = (invoke_iii($47|0,($0|0),48)|0);
      $49 = __THREW__; __THREW__ = 0;
      $50 = $49&1;
      if ($50) {
       label = 5;
       break L1;
      }
      $51 = HEAP32[$__oe>>2]|0;
      $52 = ((($51)) + 4|0);
      HEAP32[$__oe>>2] = $52;
      HEAP32[$51>>2] = $48;
      $53 = HEAP8[$43>>0]|0;
      $54 = HEAP32[$0>>2]|0;
      $55 = ((($54)) + 44|0);
      $56 = HEAP32[$55>>2]|0;
      __THREW__ = 0;
      $57 = (invoke_iii($56|0,($0|0),($53|0))|0);
      $58 = __THREW__; __THREW__ = 0;
      $59 = $58&1;
      if ($59) {
       label = 5;
       break L1;
      }
      $60 = ((($__nf$0)) + 2|0);
      $61 = HEAP32[$__oe>>2]|0;
      $62 = ((($61)) + 4|0);
      HEAP32[$__oe>>2] = $62;
      HEAP32[$61>>2] = $57;
      $__nf$1 = $60;
     } else {
      $__nf$1 = $__nf$0;
     }
    } else {
     $__nf$1 = $__nf$0;
    }
   } while(0);
   $63 = ($__nf$1|0)==($__ne|0);
   if (!($63)) {
    $64 = ((($__ne)) + -1|0);
    $65 = ($__nf$1>>>0)<($64>>>0);
    if ($65) {
     $$01$i$i413 = $__nf$1;$68 = $64;
     while(1) {
      $66 = HEAP8[$$01$i$i413>>0]|0;
      $67 = HEAP8[$68>>0]|0;
      HEAP8[$$01$i$i413>>0] = $67;
      HEAP8[$68>>0] = $66;
      $69 = ((($$01$i$i413)) + 1|0);
      $70 = ((($68)) + -1|0);
      $71 = ($69>>>0)<($70>>>0);
      if ($71) {
       $$01$i$i413 = $69;$68 = $70;
      } else {
       break;
      }
     }
    }
   }
   $72 = HEAP32[$1>>2]|0;
   $73 = ((($72)) + 16|0);
   $74 = HEAP32[$73>>2]|0;
   __THREW__ = 0;
   $75 = (invoke_ii($74|0,($1|0))|0);
   $76 = __THREW__; __THREW__ = 0;
   $77 = $76&1;
   if ($77) {
    label = 5;
   } else {
    $78 = ((($__grouping)) + 8|0);
    $79 = ((($__grouping)) + 1|0);
    $80 = ($__nf$1>>>0)<($__ne>>>0);
    L22: do {
     if ($80) {
      $__dc$010 = 0;$__dg$011 = 0;$__p$012 = $__nf$1;
      while(1) {
       $81 = HEAP8[$__grouping>>0]|0;
       $82 = $81 & 1;
       $83 = ($82<<24>>24)==(0);
       $84 = HEAP32[$78>>2]|0;
       $85 = $83 ? $79 : $84;
       $86 = (($85) + ($__dg$011)|0);
       $87 = HEAP8[$86>>0]|0;
       $88 = ($87<<24>>24)!=(0);
       $89 = $87 << 24 >> 24;
       $90 = ($__dc$010|0)==($89|0);
       $or$cond = $88 & $90;
       if ($or$cond) {
        $91 = HEAP32[$__oe>>2]|0;
        $92 = ((($91)) + 4|0);
        HEAP32[$__oe>>2] = $92;
        HEAP32[$91>>2] = $75;
        $93 = HEAP8[$__grouping>>0]|0;
        $94 = $93 & 1;
        $95 = ($94<<24>>24)==(0);
        $96 = HEAP32[$8>>2]|0;
        $97 = $93&255;
        $98 = $97 >>> 1;
        $99 = $95 ? $98 : $96;
        $100 = (($99) + -1)|0;
        $101 = ($__dg$011>>>0)<($100>>>0);
        $102 = $101&1;
        $$__dg$0 = (($102) + ($__dg$011))|0;
        $__dc$1 = 0;$__dg$1 = $$__dg$0;
       } else {
        $__dc$1 = $__dc$010;$__dg$1 = $__dg$011;
       }
       $103 = HEAP8[$__p$012>>0]|0;
       $104 = HEAP32[$0>>2]|0;
       $105 = ((($104)) + 44|0);
       $106 = HEAP32[$105>>2]|0;
       __THREW__ = 0;
       $107 = (invoke_iii($106|0,($0|0),($103|0))|0);
       $108 = __THREW__; __THREW__ = 0;
       $109 = $108&1;
       if ($109) {
        break;
       }
       $110 = HEAP32[$__oe>>2]|0;
       $111 = ((($110)) + 4|0);
       HEAP32[$__oe>>2] = $111;
       HEAP32[$110>>2] = $107;
       $112 = (($__dc$1) + 1)|0;
       $113 = ((($__p$012)) + 1|0);
       $114 = ($113>>>0)<($__ne>>>0);
       if ($114) {
        $__dc$010 = $112;$__dg$011 = $__dg$1;$__p$012 = $113;
       } else {
        break L22;
       }
      }
      $23 = ___cxa_find_matching_catch()|0;
      $24 = tempRet0;
      $lpad$phi$index = $23;$lpad$phi$index2 = $24;
      break L1;
     }
    } while(0);
    $115 = $__nf$1;
    $116 = $__nb;
    $117 = (($115) - ($116))|0;
    $118 = (($__ob) + ($117<<2)|0);
    $119 = HEAP32[$__oe>>2]|0;
    $120 = ($118|0)==($119|0);
    if ($120) {
     $$pre$phiZ2D = $116;$133 = $118;
     label = 28;
    } else {
     $121 = ((($119)) + -4|0);
     $122 = ($118>>>0)<($121>>>0);
     if ($122) {
      $$01$i$i9 = $118;$125 = $121;
      while(1) {
       $123 = HEAP32[$$01$i$i9>>2]|0;
       $124 = HEAP32[$125>>2]|0;
       HEAP32[$$01$i$i9>>2] = $124;
       HEAP32[$125>>2] = $123;
       $126 = ((($$01$i$i9)) + 4|0);
       $127 = ((($125)) + -4|0);
       $128 = ($126>>>0)<($127>>>0);
       if ($128) {
        $$01$i$i9 = $126;$125 = $127;
       } else {
        $$pre$phiZ2D = $116;$133 = $119;
        label = 28;
        break;
       }
      }
     } else {
      $$pre$phiZ2D = $116;$133 = $119;
      label = 28;
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 5) {
  $25 = ___cxa_find_matching_catch()|0;
  $26 = tempRet0;
  $lpad$phi$index = $25;$lpad$phi$index2 = $26;
 }
 else if ((label|0) == 28) {
  $129 = ($__np|0)==($__ne|0);
  $130 = $__np;
  $131 = (($130) - ($$pre$phiZ2D))|0;
  $132 = (($__ob) + ($131<<2)|0);
  $storemerge = $129 ? $133 : $132;
  HEAP32[$__op>>2] = $storemerge;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
  STACKTOP = sp;return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx($this,$__s,$__iob,$__fl,$0,$1) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 196|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 200|0;
 $__o = sp + 32|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($__fmt)) + 1|0);
 $9 = ((($__iob)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,26016,1,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $vararg_buffer;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,22,$11,$__fmt,$vararg_buffer)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 $19 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$2>>2] = $19;
 __THREW__ = 0;
 invoke_viiiiiii(439,($__nar|0),($18|0),($17|0),($__o|0),($__op|0),($__oe|0),($2|0));
 $20 = __THREW__; __THREW__ = 0;
 $21 = $20&1;
 if ($21) {
  $26 = ___cxa_find_matching_catch()|0;
  $27 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
  ___resumeException($26|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
  $22 = HEAP32[$__s>>2]|0;
  HEAP32[$3>>2] = $22;
  $23 = HEAP32[$__op>>2]|0;
  $24 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;
  $25 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$23,$24,$__iob,$__fl)|0);
  STACKTOP = sp;return ($25|0);
 }
 return (0)|0;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 104|0;
 $vararg_buffer = sp;
 $__fmt = sp + 120|0;
 $__nar = sp + 108|0;
 $__o = sp + 20|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[26008>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[26008+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[26008+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[26008+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[26008+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[26008+5>>0]|0;
 $2 = ((($__fmt)) + 1|0);
 $3 = ((($__iob)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,26014,0,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$vararg_buffer)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 $9 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $9;
 __THREW__ = 0;
 invoke_viiiiiii(439,($__nar|0),($8|0),($7|0),($__o|0),($__op|0),($__oe|0),($0|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $16 = ___cxa_find_matching_catch()|0;
  $17 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
  ___resumeException($16|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
  $12 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $12;
  $13 = HEAP32[$__op>>2]|0;
  $14 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  $15 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$13,$14,$__iob,$__fl)|0);
  STACKTOP = sp;return ($15|0);
 }
 return (0)|0;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy($this,$__s,$__iob,$__fl,$0,$1) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 204|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 208|0;
 $__o = sp + 32|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($__fmt)) + 1|0);
 $9 = ((($__iob)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,26016,0,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $vararg_buffer;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,23,$11,$__fmt,$vararg_buffer)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 $19 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$2>>2] = $19;
 __THREW__ = 0;
 invoke_viiiiiii(439,($__nar|0),($18|0),($17|0),($__o|0),($__op|0),($__oe|0),($2|0));
 $20 = __THREW__; __THREW__ = 0;
 $21 = $20&1;
 if ($21) {
  $26 = ___cxa_find_matching_catch()|0;
  $27 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
  ___resumeException($26|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
  $22 = HEAP32[$__s>>2]|0;
  HEAP32[$3>>2] = $22;
  $23 = HEAP32[$__op>>2]|0;
  $24 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;
  $25 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$23,$24,$__iob,$__fl)|0);
  STACKTOP = sp;return ($25|0);
 }
 return (0)|0;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$0 = 0, $$02 = 0, $$110 = 0, $$139 = 0, $$byval_copy = 0, $$pre = 0, $$pre6 = 0, $$pre7 = 0, $$pre7$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr12 = 0;
 var $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 312|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 316|0;
 $__nb = sp + 308|0;
 $__o = sp + 80|0;
 $__op = sp + 76|0;
 $__oe = sp + 72|0;
 $0 = sp + 68|0;
 $1 = sp + 64|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($__fmt)) + 1|0);
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,26019,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = ((($__iob)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $12;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 L5: do {
  if ($15) {
   __THREW__ = 0;
   $16 = (invoke_i(429)|0);
   $17 = __THREW__; __THREW__ = 0;
   $18 = $17&1;
   if ($9) {
    if (!($18)) {
     $19 = ((($__iob)) + 8|0);
     $20 = HEAP32[$19>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer5>>2] = $20;
     $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
     HEAPF64[$vararg_ptr8>>3] = $__v;
     $21 = (invoke_iiiii(434,($__nb|0),($16|0),($__fmt|0),($vararg_buffer5|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if (!($23)) {
      $__nc$1 = $21;
      label = 12;
     }
    }
   } else {
    if (!($18)) {
     $26 = ((($__iob)) + 8|0);
     $27 = HEAP32[$26>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer9>>2] = $27;
     $vararg_ptr12 = ((($vararg_buffer9)) + 8|0);
     HEAPF64[$vararg_ptr12>>3] = $__v;
     $28 = (invoke_iiiii(434,($__nb|0),($16|0),($__fmt|0),($vararg_buffer9|0))|0);
     $29 = __THREW__; __THREW__ = 0;
     $30 = $29&1;
     if (!($30)) {
      $__nc$1 = $28;
      label = 12;
     }
    }
   }
   do {
    if ((label|0) == 12) {
     $31 = HEAP32[$__nb>>2]|0;
     $32 = ($31|0)==(0|0);
     if ($32) {
      __THREW__ = 0;
      invoke_v(435);
      $33 = __THREW__; __THREW__ = 0;
      $34 = $33&1;
      if ($34) {
       break;
      }
      $$pre = HEAP32[$__nb>>2]|0;
      $36 = $$pre;
     } else {
      $36 = $31;
     }
     $35 = $36;
     $38 = $36;$65 = $35;$__nc$2 = $__nc$1;
     label = 16;
     break L5;
    }
   } while(0);
   $24 = ___cxa_find_matching_catch()|0;
   $25 = tempRet0;
   $$110 = $24;$$139 = $25;
  } else {
   $$pre6 = HEAP32[$__nb>>2]|0;
   $38 = $$pre6;$65 = 0;$__nc$2 = $__nc$0;
   label = 16;
  }
 } while(0);
 if ((label|0) == 16) {
  $37 = (($38) + ($__nc$2)|0);
  $39 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($38,$37,$__iob)|0);
  $40 = ($38|0)==($__nar|0);
  do {
   if ($40) {
    $52 = $__nar;$62 = 0;$__ob$0 = $__o;
    label = 22;
   } else {
    $41 = $__nc$2 << 3;
    $42 = (_malloc($41)|0);
    $43 = ($42|0)==(0|0);
    if ($43) {
     __THREW__ = 0;
     invoke_v(435);
     $44 = __THREW__; __THREW__ = 0;
     $45 = $44&1;
     if ($45) {
      $74 = 0;
      label = 20;
      break;
     }
     $$pre7$pre = HEAP32[$__nb>>2]|0;
     $$pre7 = $$pre7$pre;
    } else {
     $$pre7 = $38;
    }
    $48 = $42;
    $52 = $$pre7;$62 = $48;$__ob$0 = $42;
    label = 22;
   }
  } while(0);
  do {
   if ((label|0) == 22) {
    __THREW__ = 0;
    $49 = (invoke_ii(357,($__iob|0))|0);
    $50 = __THREW__; __THREW__ = 0;
    $51 = $50&1;
    if ($51) {
     $74 = $62;
     label = 20;
    } else {
     HEAP32[$0>>2] = $49;
     __THREW__ = 0;
     invoke_viiiiiii(440,($52|0),($39|0),($37|0),($__ob$0|0),($__op|0),($__oe|0),($0|0));
     $53 = __THREW__; __THREW__ = 0;
     $54 = $53&1;
     if ($54) {
      $67 = ___cxa_find_matching_catch()|0;
      $68 = tempRet0;
      (__ZNSt3__114__shared_count16__release_sharedEv($49)|0);
      $$0 = $67;$$02 = $68;$70 = $62;
      break;
     }
     (__ZNSt3__114__shared_count16__release_sharedEv($49)|0);
     $55 = HEAP32[$__s>>2]|0;
     HEAP32[$1>>2] = $55;
     $56 = HEAP32[$__op>>2]|0;
     $57 = HEAP32[$__oe>>2]|0;
     __THREW__ = 0;
     ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
     $58 = (invoke_iiiiiii(441,($$byval_copy|0),($__ob$0|0),($56|0),($57|0),($__iob|0),($__fl|0))|0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      $74 = $62;
      label = 20;
     } else {
      HEAP32[$__s>>2] = $58;
      $61 = ($62|0)==(0);
      if (!($61)) {
       $63 = $62;
       _free($63);
      }
      $64 = ($65|0)==(0);
      if (!($64)) {
       $66 = $65;
       _free($66);
      }
      STACKTOP = sp;return ($58|0);
     }
    }
   }
  } while(0);
  if ((label|0) == 20) {
   $46 = ___cxa_find_matching_catch()|0;
   $47 = tempRet0;
   $$0 = $46;$$02 = $47;$70 = $74;
  }
  $69 = ($70|0)==(0);
  if (!($69)) {
   $71 = $70;
   _free($71);
  }
  $72 = ($65|0)==(0);
  if ($72) {
   $$110 = $$0;$$139 = $$02;
  } else {
   $73 = $65;
   _free($73);
   $$110 = $$0;$$139 = $$02;
  }
 }
 ___resumeException($$110|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$01$i$i50 = 0, $$01$i$i645 = 0, $$__dg$0 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__dc$047 = 0, $__dc$1 = 0, $__dg$048 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$243 = 0, $__nf$243$lcssa = 0, $__nf$3 = 0, $__ns$056 = 0, $__ns$152 = 0, $__ns$2 = 0, $__p$049 = 0, $lpad$phi$index = 0, $lpad$phi$index5 = 0, $or$cond = 0;
 var $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,10384)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,10540)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 1023]($__grouping,$1);
 HEAP32[$__oe>>2] = $__ob;
 $5 = HEAP8[$__nb>>0]|0;
 switch ($5<<24>>24) {
 case 43: case 45:  {
  $6 = HEAP32[$0>>2]|0;
  $7 = ((($6)) + 44|0);
  $8 = HEAP32[$7>>2]|0;
  __THREW__ = 0;
  $9 = (invoke_iii($8|0,($0|0),($5|0))|0);
  $10 = __THREW__; __THREW__ = 0;
  $11 = $10&1;
  if ($11) {
   label = 8;
  } else {
   $12 = ((($__nb)) + 1|0);
   $13 = HEAP32[$__oe>>2]|0;
   $14 = ((($13)) + 4|0);
   HEAP32[$__oe>>2] = $14;
   HEAP32[$13>>2] = $9;
   $__nf$0 = $12;
   label = 10;
  }
  break;
 }
 default: {
  $__nf$0 = $__nb;
  label = 10;
 }
 }
 L4: do {
  if ((label|0) == 10) {
   $25 = $__ne;
   $26 = $__nf$0;
   $27 = (($25) - ($26))|0;
   $28 = ($27|0)>(1);
   L6: do {
    if ($28) {
     $30 = HEAP8[$__nf$0>>0]|0;
     $31 = ($30<<24>>24)==(48);
     if ($31) {
      $32 = ((($__nf$0)) + 1|0);
      $33 = HEAP8[$32>>0]|0;
      switch ($33<<24>>24) {
      case 88: case 120:  {
       break;
      }
      default: {
       label = 11;
       break L6;
      }
      }
      $34 = HEAP32[$0>>2]|0;
      $35 = ((($34)) + 44|0);
      $36 = HEAP32[$35>>2]|0;
      __THREW__ = 0;
      $37 = (invoke_iii($36|0,($0|0),48)|0);
      $38 = __THREW__; __THREW__ = 0;
      $39 = $38&1;
      if ($39) {
       label = 8;
       break L4;
      }
      $40 = HEAP32[$__oe>>2]|0;
      $41 = ((($40)) + 4|0);
      HEAP32[$__oe>>2] = $41;
      HEAP32[$40>>2] = $37;
      $42 = ((($__nf$0)) + 2|0);
      $43 = HEAP8[$32>>0]|0;
      $44 = HEAP32[$0>>2]|0;
      $45 = ((($44)) + 44|0);
      $46 = HEAP32[$45>>2]|0;
      __THREW__ = 0;
      $47 = (invoke_iii($46|0,($0|0),($43|0))|0);
      $48 = __THREW__; __THREW__ = 0;
      $49 = $48&1;
      if ($49) {
       label = 8;
       break L4;
      }
      $50 = HEAP32[$__oe>>2]|0;
      $51 = ((($50)) + 4|0);
      HEAP32[$__oe>>2] = $51;
      HEAP32[$50>>2] = $47;
      $52 = ($42>>>0)<($__ne>>>0);
      if ($52) {
       $__ns$056 = $42;
       while(1) {
        $53 = HEAP8[$__ns$056>>0]|0;
        __THREW__ = 0;
        $54 = (invoke_i(429)|0);
        $55 = __THREW__; __THREW__ = 0;
        $56 = $55&1;
        if ($56) {
         break;
        }
        $57 = $53 << 24 >> 24;
        __THREW__ = 0;
        $58 = (invoke_iii(437,($57|0),($54|0))|0);
        $59 = __THREW__; __THREW__ = 0;
        $60 = $59&1;
        if ($60) {
         break;
        }
        $61 = ($58|0)==(0);
        if ($61) {
         $__nf$1 = $42;$__ns$2 = $__ns$056;
         break L6;
        }
        $62 = ((($__ns$056)) + 1|0);
        $63 = ($62>>>0)<($__ne>>>0);
        if ($63) {
         $__ns$056 = $62;
        } else {
         $__nf$1 = $42;$__ns$2 = $62;
         break L6;
        }
       }
       $21 = ___cxa_find_matching_catch()|0;
       $22 = tempRet0;
       $lpad$phi$index = $21;$lpad$phi$index5 = $22;
       break L4;
      } else {
       $__nf$1 = $42;$__ns$2 = $42;
      }
     } else {
      label = 11;
     }
    } else {
     label = 11;
    }
   } while(0);
   L18: do {
    if ((label|0) == 11) {
     $29 = ($__nf$0>>>0)<($__ne>>>0);
     if ($29) {
      $__ns$152 = $__nf$0;
      while(1) {
       $64 = HEAP8[$__ns$152>>0]|0;
       __THREW__ = 0;
       $65 = (invoke_i(429)|0);
       $66 = __THREW__; __THREW__ = 0;
       $67 = $66&1;
       if ($67) {
        break;
       }
       $68 = $64 << 24 >> 24;
       __THREW__ = 0;
       $69 = (invoke_iii(438,($68|0),($65|0))|0);
       $70 = __THREW__; __THREW__ = 0;
       $71 = $70&1;
       if ($71) {
        break;
       }
       $72 = ($69|0)==(0);
       if ($72) {
        $__nf$1 = $__nf$0;$__ns$2 = $__ns$152;
        break L18;
       }
       $73 = ((($__ns$152)) + 1|0);
       $74 = ($73>>>0)<($__ne>>>0);
       if ($74) {
        $__ns$152 = $73;
       } else {
        $__nf$1 = $__nf$0;$__ns$2 = $73;
        break L18;
       }
      }
      $19 = ___cxa_find_matching_catch()|0;
      $20 = tempRet0;
      $lpad$phi$index = $19;$lpad$phi$index5 = $20;
      break L4;
     } else {
      $__nf$1 = $__nf$0;$__ns$2 = $__nf$0;
     }
    }
   } while(0);
   $75 = HEAP8[$__grouping>>0]|0;
   $76 = $75 & 1;
   $77 = ($76<<24>>24)==(0);
   $78 = ((($__grouping)) + 4|0);
   $79 = HEAP32[$78>>2]|0;
   $80 = $75&255;
   $81 = $80 >>> 1;
   $82 = $77 ? $81 : $79;
   $83 = ($82|0)==(0);
   if ($83) {
    $84 = HEAP32[$__oe>>2]|0;
    $85 = HEAP32[$0>>2]|0;
    $86 = ((($85)) + 48|0);
    $87 = HEAP32[$86>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($87|0,($0|0),($__nf$1|0),($__ns$2|0),($84|0))|0);
    $88 = __THREW__; __THREW__ = 0;
    $89 = $88&1;
    if ($89) {
     label = 8;
     break;
    }
    $90 = $__ns$2;
    $91 = $__nf$1;
    $92 = (($90) - ($91))|0;
    $93 = HEAP32[$__oe>>2]|0;
    $94 = (($93) + ($92<<2)|0);
    HEAP32[$__oe>>2] = $94;
    $$pre$phiZ2D = $0;$198 = $94;
   } else {
    $95 = ($__nf$1|0)==($__ns$2|0);
    if (!($95)) {
     $96 = ((($__ns$2)) + -1|0);
     $97 = ($__nf$1>>>0)<($96>>>0);
     if ($97) {
      $$01$i$i50 = $__nf$1;$100 = $96;
      while(1) {
       $98 = HEAP8[$$01$i$i50>>0]|0;
       $99 = HEAP8[$100>>0]|0;
       HEAP8[$$01$i$i50>>0] = $99;
       HEAP8[$100>>0] = $98;
       $101 = ((($$01$i$i50)) + 1|0);
       $102 = ((($100)) + -1|0);
       $103 = ($101>>>0)<($102>>>0);
       if ($103) {
        $$01$i$i50 = $101;$100 = $102;
       } else {
        break;
       }
      }
     }
    }
    $104 = HEAP32[$1>>2]|0;
    $105 = ((($104)) + 16|0);
    $106 = HEAP32[$105>>2]|0;
    __THREW__ = 0;
    $107 = (invoke_ii($106|0,($1|0))|0);
    $108 = __THREW__; __THREW__ = 0;
    $109 = $108&1;
    if ($109) {
     label = 8;
     break;
    }
    $110 = ((($__grouping)) + 8|0);
    $111 = ((($__grouping)) + 1|0);
    $112 = ($__nf$1>>>0)<($__ns$2>>>0);
    L37: do {
     if ($112) {
      $__dc$047 = 0;$__dg$048 = 0;$__p$049 = $__nf$1;
      while(1) {
       $113 = HEAP8[$__grouping>>0]|0;
       $114 = $113 & 1;
       $115 = ($114<<24>>24)==(0);
       $116 = HEAP32[$110>>2]|0;
       $117 = $115 ? $111 : $116;
       $118 = (($117) + ($__dg$048)|0);
       $119 = HEAP8[$118>>0]|0;
       $120 = ($119<<24>>24)>(0);
       $121 = $119 << 24 >> 24;
       $122 = ($__dc$047|0)==($121|0);
       $or$cond = $120 & $122;
       if ($or$cond) {
        $123 = HEAP32[$__oe>>2]|0;
        $124 = ((($123)) + 4|0);
        HEAP32[$__oe>>2] = $124;
        HEAP32[$123>>2] = $107;
        $125 = HEAP8[$__grouping>>0]|0;
        $126 = $125 & 1;
        $127 = ($126<<24>>24)==(0);
        $128 = HEAP32[$78>>2]|0;
        $129 = $125&255;
        $130 = $129 >>> 1;
        $131 = $127 ? $130 : $128;
        $132 = (($131) + -1)|0;
        $133 = ($__dg$048>>>0)<($132>>>0);
        $134 = $133&1;
        $$__dg$0 = (($134) + ($__dg$048))|0;
        $__dc$1 = 0;$__dg$1 = $$__dg$0;
       } else {
        $__dc$1 = $__dc$047;$__dg$1 = $__dg$048;
       }
       $135 = HEAP8[$__p$049>>0]|0;
       $136 = HEAP32[$0>>2]|0;
       $137 = ((($136)) + 44|0);
       $138 = HEAP32[$137>>2]|0;
       __THREW__ = 0;
       $139 = (invoke_iii($138|0,($0|0),($135|0))|0);
       $140 = __THREW__; __THREW__ = 0;
       $141 = $140&1;
       if ($141) {
        break;
       }
       $142 = HEAP32[$__oe>>2]|0;
       $143 = ((($142)) + 4|0);
       HEAP32[$__oe>>2] = $143;
       HEAP32[$142>>2] = $139;
       $144 = (($__dc$1) + 1)|0;
       $145 = ((($__p$049)) + 1|0);
       $146 = ($145>>>0)<($__ns$2>>>0);
       if ($146) {
        $__dc$047 = $144;$__dg$048 = $__dg$1;$__p$049 = $145;
       } else {
        break L37;
       }
      }
      $17 = ___cxa_find_matching_catch()|0;
      $18 = tempRet0;
      $lpad$phi$index = $17;$lpad$phi$index5 = $18;
      break L4;
     }
    } while(0);
    $147 = $__nf$1;
    $148 = $__nb;
    $149 = (($147) - ($148))|0;
    $150 = (($__ob) + ($149<<2)|0);
    $151 = HEAP32[$__oe>>2]|0;
    $152 = ($150|0)==($151|0);
    if ($152) {
     $$pre$phiZ2D = $0;$198 = $150;
    } else {
     $153 = ((($151)) + -4|0);
     $154 = ($150>>>0)<($153>>>0);
     if ($154) {
      $$01$i$i645 = $150;$158 = $153;
      while(1) {
       $156 = HEAP32[$$01$i$i645>>2]|0;
       $157 = HEAP32[$158>>2]|0;
       HEAP32[$$01$i$i645>>2] = $157;
       HEAP32[$158>>2] = $156;
       $159 = ((($$01$i$i645)) + 4|0);
       $160 = ((($158)) + -4|0);
       $161 = ($159>>>0)<($160>>>0);
       if ($161) {
        $$01$i$i645 = $159;$158 = $160;
       } else {
        $$pre$phiZ2D = $0;$198 = $151;
        break;
       }
      }
     } else {
      $$pre$phiZ2D = $0;$198 = $151;
     }
    }
   }
   $155 = ($__ns$2>>>0)<($__ne>>>0);
   L50: do {
    if ($155) {
     $__nf$243 = $__ns$2;
     while(1) {
      $162 = HEAP8[$__nf$243>>0]|0;
      $163 = ($162<<24>>24)==(46);
      if ($163) {
       $__nf$243$lcssa = $__nf$243;
       break;
      }
      $173 = HEAP32[$$pre$phiZ2D>>2]|0;
      $174 = ((($173)) + 44|0);
      $175 = HEAP32[$174>>2]|0;
      __THREW__ = 0;
      $176 = (invoke_iii($175|0,($0|0),($162|0))|0);
      $177 = __THREW__; __THREW__ = 0;
      $178 = $177&1;
      if ($178) {
       label = 4;
       break;
      }
      $179 = HEAP32[$__oe>>2]|0;
      $180 = ((($179)) + 4|0);
      HEAP32[$__oe>>2] = $180;
      HEAP32[$179>>2] = $176;
      $181 = ((($__nf$243)) + 1|0);
      $182 = ($181>>>0)<($__ne>>>0);
      if ($182) {
       $__nf$243 = $181;
      } else {
       $186 = $180;$__nf$3 = $181;
       break L50;
      }
     }
     if ((label|0) == 4) {
      $15 = ___cxa_find_matching_catch()|0;
      $16 = tempRet0;
      $lpad$phi$index = $15;$lpad$phi$index5 = $16;
      break L4;
     }
     $164 = HEAP32[$1>>2]|0;
     $165 = ((($164)) + 12|0);
     $166 = HEAP32[$165>>2]|0;
     __THREW__ = 0;
     $167 = (invoke_ii($166|0,($1|0))|0);
     $168 = __THREW__; __THREW__ = 0;
     $169 = $168&1;
     if ($169) {
      label = 8;
      break L4;
     }
     $170 = HEAP32[$__oe>>2]|0;
     $171 = ((($170)) + 4|0);
     HEAP32[$__oe>>2] = $171;
     HEAP32[$170>>2] = $167;
     $172 = ((($__nf$243$lcssa)) + 1|0);
     $186 = $171;$__nf$3 = $172;
    } else {
     $186 = $198;$__nf$3 = $__ns$2;
    }
   } while(0);
   $183 = HEAP32[$0>>2]|0;
   $184 = ((($183)) + 48|0);
   $185 = HEAP32[$184>>2]|0;
   __THREW__ = 0;
   (invoke_iiiii($185|0,($0|0),($__nf$3|0),($__ne|0),($186|0))|0);
   $187 = __THREW__; __THREW__ = 0;
   $188 = $187&1;
   if ($188) {
    label = 8;
   } else {
    $189 = $__nf$3;
    $190 = (($25) - ($189))|0;
    $191 = HEAP32[$__oe>>2]|0;
    $192 = (($191) + ($190<<2)|0);
    HEAP32[$__oe>>2] = $192;
    $193 = ($__np|0)==($__ne|0);
    $194 = $__np;
    $195 = $__nb;
    $196 = (($194) - ($195))|0;
    $197 = (($__ob) + ($196<<2)|0);
    $storemerge = $193 ? $192 : $197;
    HEAP32[$__op>>2] = $storemerge;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $23 = ___cxa_find_matching_catch()|0;
  $24 = tempRet0;
  $lpad$phi$index = $23;$lpad$phi$index5 = $24;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$0 = 0, $$02 = 0, $$110 = 0, $$139 = 0, $$byval_copy = 0, $$pre = 0, $$pre6 = 0, $$pre7 = 0, $$pre7$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 304|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 308|0;
 $__nb = sp + 300|0;
 $__o = sp + 72|0;
 $__op = sp + 68|0;
 $__oe = sp + 64|0;
 $0 = sp + 60|0;
 $1 = sp + 56|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($__fmt)) + 1|0);
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,26020,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = ((($__iob)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $12;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 L5: do {
  if ($15) {
   __THREW__ = 0;
   $16 = (invoke_i(429)|0);
   $17 = __THREW__; __THREW__ = 0;
   $18 = $17&1;
   if ($9) {
    if (!($18)) {
     $19 = ((($__iob)) + 8|0);
     $20 = HEAP32[$19>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer5>>2] = $20;
     $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
     HEAPF64[$vararg_ptr8>>3] = $__v;
     $21 = (invoke_iiiii(434,($__nb|0),($16|0),($__fmt|0),($vararg_buffer5|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if (!($23)) {
      $__nc$1 = $21;
      label = 12;
     }
    }
   } else {
    if (!($18)) {
     __THREW__ = 0;
     HEAPF64[$vararg_buffer9>>3] = $__v;
     $26 = (invoke_iiiii(434,($__nb|0),($16|0),($__fmt|0),($vararg_buffer9|0))|0);
     $27 = __THREW__; __THREW__ = 0;
     $28 = $27&1;
     if (!($28)) {
      $__nc$1 = $26;
      label = 12;
     }
    }
   }
   do {
    if ((label|0) == 12) {
     $29 = HEAP32[$__nb>>2]|0;
     $30 = ($29|0)==(0|0);
     if ($30) {
      __THREW__ = 0;
      invoke_v(435);
      $31 = __THREW__; __THREW__ = 0;
      $32 = $31&1;
      if ($32) {
       break;
      }
      $$pre = HEAP32[$__nb>>2]|0;
      $34 = $$pre;
     } else {
      $34 = $29;
     }
     $33 = $34;
     $36 = $34;$63 = $33;$__nc$2 = $__nc$1;
     label = 16;
     break L5;
    }
   } while(0);
   $24 = ___cxa_find_matching_catch()|0;
   $25 = tempRet0;
   $$110 = $24;$$139 = $25;
  } else {
   $$pre6 = HEAP32[$__nb>>2]|0;
   $36 = $$pre6;$63 = 0;$__nc$2 = $__nc$0;
   label = 16;
  }
 } while(0);
 if ((label|0) == 16) {
  $35 = (($36) + ($__nc$2)|0);
  $37 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($36,$35,$__iob)|0);
  $38 = ($36|0)==($__nar|0);
  do {
   if ($38) {
    $50 = $__nar;$60 = 0;$__ob$0 = $__o;
    label = 22;
   } else {
    $39 = $__nc$2 << 3;
    $40 = (_malloc($39)|0);
    $41 = ($40|0)==(0|0);
    if ($41) {
     __THREW__ = 0;
     invoke_v(435);
     $42 = __THREW__; __THREW__ = 0;
     $43 = $42&1;
     if ($43) {
      $72 = 0;
      label = 20;
      break;
     }
     $$pre7$pre = HEAP32[$__nb>>2]|0;
     $$pre7 = $$pre7$pre;
    } else {
     $$pre7 = $36;
    }
    $46 = $40;
    $50 = $$pre7;$60 = $46;$__ob$0 = $40;
    label = 22;
   }
  } while(0);
  do {
   if ((label|0) == 22) {
    __THREW__ = 0;
    $47 = (invoke_ii(357,($__iob|0))|0);
    $48 = __THREW__; __THREW__ = 0;
    $49 = $48&1;
    if ($49) {
     $72 = $60;
     label = 20;
    } else {
     HEAP32[$0>>2] = $47;
     __THREW__ = 0;
     invoke_viiiiiii(440,($50|0),($37|0),($35|0),($__ob$0|0),($__op|0),($__oe|0),($0|0));
     $51 = __THREW__; __THREW__ = 0;
     $52 = $51&1;
     if ($52) {
      $65 = ___cxa_find_matching_catch()|0;
      $66 = tempRet0;
      (__ZNSt3__114__shared_count16__release_sharedEv($47)|0);
      $$0 = $65;$$02 = $66;$68 = $60;
      break;
     }
     (__ZNSt3__114__shared_count16__release_sharedEv($47)|0);
     $53 = HEAP32[$__s>>2]|0;
     HEAP32[$1>>2] = $53;
     $54 = HEAP32[$__op>>2]|0;
     $55 = HEAP32[$__oe>>2]|0;
     __THREW__ = 0;
     ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
     $56 = (invoke_iiiiiii(441,($$byval_copy|0),($__ob$0|0),($54|0),($55|0),($__iob|0),($__fl|0))|0);
     $57 = __THREW__; __THREW__ = 0;
     $58 = $57&1;
     if ($58) {
      $72 = $60;
      label = 20;
     } else {
      HEAP32[$__s>>2] = $56;
      $59 = ($60|0)==(0);
      if (!($59)) {
       $61 = $60;
       _free($61);
      }
      $62 = ($63|0)==(0);
      if (!($62)) {
       $64 = $63;
       _free($64);
      }
      STACKTOP = sp;return ($56|0);
     }
    }
   }
  } while(0);
  if ((label|0) == 20) {
   $44 = ___cxa_find_matching_catch()|0;
   $45 = tempRet0;
   $$0 = $44;$$02 = $45;$68 = $72;
  }
  $67 = ($68|0)==(0);
  if (!($67)) {
   $69 = $68;
   _free($69);
  }
  $70 = ($63|0)==(0);
  if ($70) {
   $$110 = $$0;$$139 = $$02;
  } else {
   $71 = $63;
   _free($71);
   $$110 = $$0;$$139 = $$02;
  }
 }
 ___resumeException($$110|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__op$0 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 160|0;
 $vararg_buffer = sp;
 $__fmt = sp + 184|0;
 $__nar = sp + 164|0;
 $__o = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[26022>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[26022+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[26022+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[26022+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[26022+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[26022+5>>0]|0;
 $2 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $3 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,20,$2,$__fmt,$vararg_buffer)|0);
 $4 = (($__nar) + ($3)|0);
 $5 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$4,$__iob)|0);
 $6 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $6;
 __THREW__ = 0;
 $7 = (invoke_iii(355,($0|0),(10384|0))|0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if ($9) {
  $21 = ___cxa_find_matching_catch()|0;
  $22 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($6)|0);
  ___resumeException($21|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($6)|0);
  $10 = HEAP32[$7>>2]|0;
  $11 = ((($10)) + 48|0);
  $12 = HEAP32[$11>>2]|0;
  (FUNCTION_TABLE_iiiii[$12 & 1023]($7,$__nar,$4,$__o)|0);
  $13 = (($__o) + ($3<<2)|0);
  $14 = ($5|0)==($4|0);
  $15 = $__nar;
  $16 = $5;
  $17 = (($16) - ($15))|0;
  $18 = (($__o) + ($17<<2)|0);
  $__op$0 = $14 ? $13 : $18;
  $19 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $19;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  $20 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$__op$0,$13,$__iob,$__fl)|0);
  STACKTOP = sp;return ($20|0);
 }
 return (0)|0;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$__b,$__e,$__iob,$__err,$__tm,$__fmtb,$__fmte) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmtb = $__fmtb|0;
 $__fmte = $__fmte|0;
 var $$0$i$i = 0, $$0$i$i26 = 0, $$0$ph$be = 0, $$0$ph86 = 0, $$0$pn = 0, $$2 = 0, $$2$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa = 0, $$lcssa94 = 0, $$lcssa95 = 0, $$pre$i$i$i17 = 0, $$pre$i$i$i8 = 0, $$pre$i2$i$i21 = 0, $$pre$i2$i$i2139 = 0, $$pre$i2$i$i2140 = 0, $$pre$pre = 0, $0 = 0, $1 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__cmd$0 = 0, $__opt$0 = 0, $isascii1$i = 0, $isascii1$i24 = 0, $isascii1$i5 = 0;
 var $or$cond84 = 0, $sext = 0, $tmp$i$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 16|0;
 $$byval_copy = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 $2 = sp;
 $3 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $3;
 __THREW__ = 0;
 $4 = (invoke_iii(355,($0|0),(10392|0))|0);
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if ($6) {
  $38 = ___cxa_find_matching_catch()|0;
  $39 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
  ___resumeException($38|0);
  // unreachable;
 }
 (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
 HEAP32[$__err>>2] = 0;
 $7 = ((($4)) + 8|0);
 $8 = ($__fmtb|0)==($__fmte|0);
 $9 = HEAP32[$__b>>2]|0;
 L4: do {
  if ($8) {
   $$pre$i$i$i8 = $9;
  } else {
   $$0$ph86 = $__fmtb;$11 = $9;
   L5: while(1) {
    $10 = ($11|0)==(0|0);
    $12 = $11;
    if ($10) {
     $24 = 0;$63 = $12;
    } else {
     $13 = ((($11)) + 12|0);
     $14 = HEAP32[$13>>2]|0;
     $15 = ((($11)) + 16|0);
     $16 = HEAP32[$15>>2]|0;
     $17 = ($14|0)==($16|0);
     if ($17) {
      $18 = HEAP32[$11>>2]|0;
      $19 = ((($18)) + 36|0);
      $20 = HEAP32[$19>>2]|0;
      $21 = (FUNCTION_TABLE_ii[$20 & 1023]($11)|0);
      $22 = ($21|0)==(-1);
      if ($22) {
       HEAP32[$__b>>2] = 0;
       $24 = 0;$63 = 0;
      } else {
       $24 = $11;$63 = $12;
      }
     } else {
      $24 = $11;$63 = $12;
     }
    }
    $23 = ($24|0)==(0|0);
    $25 = HEAP32[$__e>>2]|0;
    $26 = ($25|0)==(0|0);
    $27 = $25;
    do {
     if ($26) {
      $194 = $27;
      label = 12;
     } else {
      $28 = ((($25)) + 12|0);
      $29 = HEAP32[$28>>2]|0;
      $30 = ((($25)) + 16|0);
      $31 = HEAP32[$30>>2]|0;
      $32 = ($29|0)==($31|0);
      if ($32) {
       $33 = HEAP32[$25>>2]|0;
       $34 = ((($33)) + 36|0);
       $35 = HEAP32[$34>>2]|0;
       $36 = (FUNCTION_TABLE_ii[$35 & 1023]($25)|0);
       $37 = ($36|0)==(-1);
       if ($37) {
        HEAP32[$__e>>2] = 0;
        $194 = 0;
        label = 12;
        break;
       }
      }
      if ($23) {
       $195 = $25;$64 = $27;
      } else {
       $$lcssa = $24;
       label = 13;
       break L5;
      }
     }
    } while(0);
    if ((label|0) == 12) {
     label = 0;
     if ($23) {
      $$lcssa = $24;
      label = 13;
      break;
     } else {
      $195 = 0;$64 = $194;
     }
    }
    $40 = HEAP8[$$0$ph86>>0]|0;
    $41 = HEAP32[$4>>2]|0;
    $42 = ((($41)) + 36|0);
    $43 = HEAP32[$42>>2]|0;
    $44 = (FUNCTION_TABLE_iiii[$43 & 1023]($4,$40,0)|0);
    $45 = ($44<<24>>24)==(37);
    L21: do {
     if ($45) {
      $46 = ((($$0$ph86)) + 1|0);
      $47 = ($46|0)==($__fmte|0);
      if ($47) {
       $$lcssa94 = $24;
       label = 17;
       break L5;
      }
      $48 = HEAP8[$46>>0]|0;
      $49 = HEAP32[$4>>2]|0;
      $50 = ((($49)) + 36|0);
      $51 = HEAP32[$50>>2]|0;
      $52 = (FUNCTION_TABLE_iiii[$51 & 1023]($4,$48,0)|0);
      switch ($52<<24>>24) {
      case 48: case 69:  {
       $53 = ((($$0$ph86)) + 2|0);
       $54 = ($53|0)==($__fmte|0);
       if ($54) {
        $$lcssa95 = $24;
        label = 20;
        break L5;
       }
       $55 = HEAP8[$53>>0]|0;
       $56 = HEAP32[$4>>2]|0;
       $57 = ((($56)) + 36|0);
       $58 = HEAP32[$57>>2]|0;
       $59 = (FUNCTION_TABLE_iiii[$58 & 1023]($4,$55,0)|0);
       $67 = $46;$__cmd$0 = $59;$__opt$0 = $52;
       break;
      }
      default: {
       $67 = $$0$ph86;$__cmd$0 = $52;$__opt$0 = 0;
      }
      }
      $60 = HEAP32[$this>>2]|0;
      $61 = ((($60)) + 36|0);
      $62 = HEAP32[$61>>2]|0;
      HEAP32[$1>>2] = $63;
      HEAP32[$2>>2] = $64;
      ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
      ;HEAP32[$$byval_copy1>>2]=HEAP32[$2>>2]|0;
      $65 = (FUNCTION_TABLE_iiiiiiiii[$62 & 511]($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$__cmd$0,$__opt$0)|0);
      HEAP32[$__b>>2] = $65;
      $66 = ((($67)) + 2|0);
      $$0$ph$be = $66;
     } else {
      $71 = HEAP8[$$0$ph86>>0]|0;
      $isascii1$i = ($71<<24>>24)>(-1);
      if ($isascii1$i) {
       $72 = $71 << 24 >> 24;
       $73 = HEAP32[$7>>2]|0;
       $74 = (($73) + ($72<<1)|0);
       $75 = HEAP16[$74>>1]|0;
       $76 = $75 & 8192;
       $77 = ($76<<16>>16)==(0);
       if (!($77)) {
        $$0$pn = $$0$ph86;
        while(1) {
         $$2 = ((($$0$pn)) + 1|0);
         $78 = ($$2|0)==($__fmte|0);
         if ($78) {
          $$2$lcssa = $__fmte;
          break;
         }
         $79 = HEAP8[$$2>>0]|0;
         $isascii1$i5 = ($79<<24>>24)>(-1);
         if (!($isascii1$i5)) {
          $$2$lcssa = $$2;
          break;
         }
         $80 = $79 << 24 >> 24;
         $81 = (($73) + ($80<<1)|0);
         $82 = HEAP16[$81>>1]|0;
         $83 = $82 & 8192;
         $84 = ($83<<16>>16)==(0);
         if ($84) {
          $$2$lcssa = $$2;
          break;
         } else {
          $$0$pn = $$2;
         }
        }
        $$pre$i$i$i17 = $24;$$pre$i2$i$i21 = $195;$99 = $195;
        while(1) {
         $85 = ($$pre$i$i$i17|0)==(0|0);
         if ($85) {
          $97 = 0;
         } else {
          $86 = ((($$pre$i$i$i17)) + 12|0);
          $87 = HEAP32[$86>>2]|0;
          $88 = ((($$pre$i$i$i17)) + 16|0);
          $89 = HEAP32[$88>>2]|0;
          $90 = ($87|0)==($89|0);
          if ($90) {
           $91 = HEAP32[$$pre$i$i$i17>>2]|0;
           $92 = ((($91)) + 36|0);
           $93 = HEAP32[$92>>2]|0;
           $94 = (FUNCTION_TABLE_ii[$93 & 1023]($$pre$i$i$i17)|0);
           $95 = ($94|0)==(-1);
           if ($95) {
            HEAP32[$__b>>2] = 0;
            $97 = 0;
           } else {
            $97 = $$pre$i$i$i17;
           }
          } else {
           $97 = $$pre$i$i$i17;
          }
         }
         $96 = ($97|0)==(0|0);
         $98 = ($99|0)==(0|0);
         do {
          if ($98) {
           $$pre$i2$i$i2140 = $$pre$i2$i$i21;
           label = 39;
          } else {
           $100 = ((($99)) + 12|0);
           $101 = HEAP32[$100>>2]|0;
           $102 = ((($99)) + 16|0);
           $103 = HEAP32[$102>>2]|0;
           $104 = ($101|0)==($103|0);
           if (!($104)) {
            if ($96) {
             $$pre$i2$i$i2139 = $$pre$i2$i$i21;$196 = $99;
             break;
            } else {
             $$0$ph$be = $$2$lcssa;
             break L21;
            }
           }
           $105 = HEAP32[$99>>2]|0;
           $106 = ((($105)) + 36|0);
           $107 = HEAP32[$106>>2]|0;
           $108 = (FUNCTION_TABLE_ii[$107 & 1023]($99)|0);
           $109 = ($108|0)==(-1);
           if ($109) {
            HEAP32[$__e>>2] = 0;
            $$pre$i2$i$i2140 = 0;
            label = 39;
            break;
           } else {
            $110 = ($$pre$i2$i$i21|0)==(0|0);
            $tmp$i$i23 = $96 ^ $110;
            if ($tmp$i$i23) {
             $$pre$i2$i$i2139 = $$pre$i2$i$i21;$196 = $$pre$i2$i$i21;
             break;
            } else {
             $$0$ph$be = $$2$lcssa;
             break L21;
            }
           }
          }
         } while(0);
         if ((label|0) == 39) {
          label = 0;
          if ($96) {
           $$0$ph$be = $$2$lcssa;
           break L21;
          } else {
           $$pre$i2$i$i2139 = $$pre$i2$i$i2140;$196 = 0;
          }
         }
         $111 = ((($97)) + 12|0);
         $112 = HEAP32[$111>>2]|0;
         $113 = ((($97)) + 16|0);
         $114 = HEAP32[$113>>2]|0;
         $115 = ($112|0)==($114|0);
         if ($115) {
          $116 = HEAP32[$97>>2]|0;
          $117 = ((($116)) + 36|0);
          $118 = HEAP32[$117>>2]|0;
          $119 = (FUNCTION_TABLE_ii[$118 & 1023]($97)|0);
          $$0$i$i = $119;
         } else {
          $120 = HEAP8[$112>>0]|0;
          $121 = $120&255;
          $$0$i$i = $121;
         }
         $122 = $$0$i$i&255;
         $isascii1$i24 = ($122<<24>>24)>(-1);
         if (!($isascii1$i24)) {
          $$0$ph$be = $$2$lcssa;
          break L21;
         }
         $sext = $$0$i$i << 24;
         $123 = $sext >> 24;
         $124 = HEAP32[$7>>2]|0;
         $125 = (($124) + ($123<<1)|0);
         $126 = HEAP16[$125>>1]|0;
         $127 = $126 & 8192;
         $128 = ($127<<16>>16)==(0);
         if ($128) {
          $$0$ph$be = $$2$lcssa;
          break L21;
         }
         $129 = HEAP32[$111>>2]|0;
         $130 = HEAP32[$113>>2]|0;
         $131 = ($129|0)==($130|0);
         if ($131) {
          $132 = HEAP32[$97>>2]|0;
          $133 = ((($132)) + 40|0);
          $134 = HEAP32[$133>>2]|0;
          (FUNCTION_TABLE_ii[$134 & 1023]($97)|0);
          $$pre$i$i$i17 = $97;$$pre$i2$i$i21 = $$pre$i2$i$i2139;$99 = $196;
          continue;
         } else {
          $135 = ((($129)) + 1|0);
          HEAP32[$111>>2] = $135;
          $$pre$i$i$i17 = $97;$$pre$i2$i$i21 = $$pre$i2$i$i2139;$99 = $196;
          continue;
         }
        }
       }
      }
      $136 = ((($24)) + 12|0);
      $137 = HEAP32[$136>>2]|0;
      $138 = ((($24)) + 16|0);
      $139 = HEAP32[$138>>2]|0;
      $140 = ($137|0)==($139|0);
      if ($140) {
       $141 = HEAP32[$24>>2]|0;
       $142 = ((($141)) + 36|0);
       $143 = HEAP32[$142>>2]|0;
       $144 = (FUNCTION_TABLE_ii[$143 & 1023]($24)|0);
       $$0$i$i26 = $144;
      } else {
       $145 = HEAP8[$137>>0]|0;
       $146 = $145&255;
       $$0$i$i26 = $146;
      }
      $147 = $$0$i$i26&255;
      $148 = HEAP32[$4>>2]|0;
      $149 = ((($148)) + 12|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = (FUNCTION_TABLE_iii[$150 & 1023]($4,$147)|0);
      $152 = HEAP8[$$0$ph86>>0]|0;
      $153 = HEAP32[$4>>2]|0;
      $154 = ((($153)) + 12|0);
      $155 = HEAP32[$154>>2]|0;
      $156 = (FUNCTION_TABLE_iii[$155 & 1023]($4,$152)|0);
      $157 = ($151<<24>>24)==($156<<24>>24);
      if (!($157)) {
       label = 57;
       break L5;
      }
      $158 = HEAP32[$136>>2]|0;
      $159 = HEAP32[$138>>2]|0;
      $160 = ($158|0)==($159|0);
      if ($160) {
       $161 = HEAP32[$24>>2]|0;
       $162 = ((($161)) + 40|0);
       $163 = HEAP32[$162>>2]|0;
       (FUNCTION_TABLE_ii[$163 & 1023]($24)|0);
      } else {
       $164 = ((($158)) + 1|0);
       HEAP32[$136>>2] = $164;
      }
      $165 = ((($$0$ph86)) + 1|0);
      $$0$ph$be = $165;
     }
    } while(0);
    $$pre$pre = HEAP32[$__err>>2]|0;
    $68 = ($$0$ph$be|0)!=($__fmte|0);
    $69 = ($$pre$pre|0)==(0);
    $or$cond84 = $68 & $69;
    $70 = HEAP32[$__b>>2]|0;
    if ($or$cond84) {
     $$0$ph86 = $$0$ph$be;$11 = $70;
    } else {
     $$pre$i$i$i8 = $70;
     break L4;
    }
   }
   if ((label|0) == 13) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i8 = $$lcssa;
    break;
   }
   else if ((label|0) == 17) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i8 = $$lcssa94;
    break;
   }
   else if ((label|0) == 20) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i8 = $$lcssa95;
    break;
   }
   else if ((label|0) == 57) {
    HEAP32[$__err>>2] = 4;
    $166 = HEAP32[$__b>>2]|0;
    $$pre$i$i$i8 = $166;
    break;
   }
  }
 } while(0);
 $167 = ($$pre$i$i$i8|0)==(0|0);
 if ($167) {
  $179 = 0;
 } else {
  $168 = ((($$pre$i$i$i8)) + 12|0);
  $169 = HEAP32[$168>>2]|0;
  $170 = ((($$pre$i$i$i8)) + 16|0);
  $171 = HEAP32[$170>>2]|0;
  $172 = ($169|0)==($171|0);
  if ($172) {
   $173 = HEAP32[$$pre$i$i$i8>>2]|0;
   $174 = ((($173)) + 36|0);
   $175 = HEAP32[$174>>2]|0;
   $176 = (FUNCTION_TABLE_ii[$175 & 1023]($$pre$i$i$i8)|0);
   $177 = ($176|0)==(-1);
   if ($177) {
    HEAP32[$__b>>2] = 0;
    $179 = 0;
   } else {
    $179 = $$pre$i$i$i8;
   }
  } else {
   $179 = $$pre$i$i$i8;
  }
 }
 $178 = ($179|0)==(0|0);
 $180 = HEAP32[$__e>>2]|0;
 $181 = ($180|0)==(0|0);
 do {
  if ($181) {
   label = 67;
  } else {
   $182 = ((($180)) + 12|0);
   $183 = HEAP32[$182>>2]|0;
   $184 = ((($180)) + 16|0);
   $185 = HEAP32[$184>>2]|0;
   $186 = ($183|0)==($185|0);
   if ($186) {
    $187 = HEAP32[$180>>2]|0;
    $188 = ((($187)) + 36|0);
    $189 = HEAP32[$188>>2]|0;
    $190 = (FUNCTION_TABLE_ii[$189 & 1023]($180)|0);
    $191 = ($190|0)==(-1);
    if ($191) {
     HEAP32[$__e>>2] = 0;
     label = 67;
     break;
    }
   }
   if (!($178)) {
    label = 68;
   }
  }
 } while(0);
 if ((label|0) == 67) {
  if ($178) {
   label = 68;
  }
 }
 if ((label|0) == 68) {
  $192 = HEAP32[$__err>>2]|0;
  $193 = $192 | 2;
  HEAP32[$__err>>2] = $193;
 }
 STACKTOP = sp;return ($179|0);
}
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,26028,(26036))|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = ((($this)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (FUNCTION_TABLE_ii[$5 & 1023]($2)|0);
 $7 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $7;
 $8 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $8;
 $9 = HEAP8[$6>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($6)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($6)) + 1|0);
 $15 = $11 ? $14 : $13;
 $16 = ((($6)) + 4|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = $9&255;
 $19 = $18 >>> 1;
 $20 = $11 ? $19 : $17;
 $21 = (($15) + ($20)|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $22 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$15,$21)|0);
 STACKTOP = sp;return ($22|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 __THREW__ = 0;
 $3 = (invoke_iii(355,($0|0),(10392|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  $6 = ((($__tm)) + 24|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$6,$__b,$$byval_copy,$__err,$3);
  $8 = HEAP32[$__b>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 return (0)|0;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_ii[$3 & 1023]($1)|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $5;
 $6 = ((($4)) + 168|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $7 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$4,$6,$__ct,$__err,0)|0);
 $8 = $7;
 $9 = $4;
 $10 = (($8) - ($9))|0;
 $11 = ($10|0)<(168);
 if ($11) {
  $12 = (($10|0) / 12)&-1;
  $13 = (($12|0) % 7)&-1;
  HEAP32[$__w>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 __THREW__ = 0;
 $3 = (invoke_iii(355,($0|0),(10392|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  $6 = ((($__tm)) + 16|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$6,$__b,$$byval_copy,$__err,$3);
  $8 = HEAP32[$__b>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 return (0)|0;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 1023]($1)|0);
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($5)) + 288|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $8 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$7,$__ct,$__err,0)|0);
 $9 = $8;
 $10 = $5;
 $11 = (($9) - ($10))|0;
 $12 = ($11|0)<(288);
 if ($12) {
  $13 = (($11|0) / 12)&-1;
  $14 = (($13|0) % 12)&-1;
  HEAP32[$__m>>2] = $14;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 __THREW__ = 0;
 $3 = (invoke_iii(355,($0|0),(10392|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  $6 = ((($__tm)) + 20|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$6,$__b,$$byval_copy,$__err,$3);
  $8 = HEAP32[$__b>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 return (0)|0;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$ = 0, $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__t$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = ($2|0)<(69);
  if ($6) {
   $7 = (($2) + 2000)|0;
   $__t$0 = $7;
  } else {
   $$off = (($2) + -69)|0;
   $8 = ($$off>>>0)<(31);
   $9 = (($2) + 1900)|0;
   $$ = $8 ? $9 : $2;
   $__t$0 = $$;
  }
  $10 = (($__t$0) + -1900)|0;
  HEAP32[$__y>>2] = $10;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($this,$__b,$__e,$__iob,$__err,$__tm,$__fmt,$0) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $0 = $0|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy10 = 0, $$byval_copy11 = 0, $$byval_copy12 = 0, $$byval_copy13 = 0, $$byval_copy14 = 0, $$byval_copy15 = 0, $$byval_copy16 = 0, $$byval_copy17 = 0, $$byval_copy18 = 0, $$byval_copy19 = 0, $$byval_copy2 = 0, $$byval_copy20 = 0, $$byval_copy21 = 0, $$byval_copy22 = 0, $$byval_copy23 = 0, $$byval_copy24 = 0, $$byval_copy25 = 0, $$byval_copy26 = 0;
 var $$byval_copy27 = 0, $$byval_copy28 = 0, $$byval_copy29 = 0, $$byval_copy3 = 0, $$byval_copy30 = 0, $$byval_copy4 = 0, $$byval_copy5 = 0, $$byval_copy6 = 0, $$byval_copy7 = 0, $$byval_copy8 = 0, $$byval_copy9 = 0, $$sroa$07$0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy30 = sp + 248|0;
 $$byval_copy29 = sp + 244|0;
 $$byval_copy28 = sp + 240|0;
 $$byval_copy27 = sp + 236|0;
 $$byval_copy26 = sp + 232|0;
 $$byval_copy25 = sp + 228|0;
 $$byval_copy24 = sp + 224|0;
 $$byval_copy23 = sp + 220|0;
 $$byval_copy22 = sp + 216|0;
 $$byval_copy21 = sp + 212|0;
 $$byval_copy20 = sp + 208|0;
 $$byval_copy19 = sp + 204|0;
 $$byval_copy18 = sp + 200|0;
 $$byval_copy17 = sp + 196|0;
 $$byval_copy16 = sp + 192|0;
 $$byval_copy15 = sp + 188|0;
 $$byval_copy14 = sp + 184|0;
 $$byval_copy13 = sp + 180|0;
 $$byval_copy12 = sp + 176|0;
 $$byval_copy11 = sp + 172|0;
 $$byval_copy10 = sp + 168|0;
 $$byval_copy9 = sp + 164|0;
 $$byval_copy8 = sp + 160|0;
 $$byval_copy7 = sp + 156|0;
 $$byval_copy6 = sp + 152|0;
 $$byval_copy5 = sp + 148|0;
 $$byval_copy4 = sp + 144|0;
 $$byval_copy3 = sp + 140|0;
 $$byval_copy2 = sp + 136|0;
 $$byval_copy1 = sp + 132|0;
 $$byval_copy = sp + 128|0;
 $1 = sp + 124|0;
 $2 = sp + 120|0;
 $3 = sp + 116|0;
 $4 = sp + 112|0;
 $5 = sp + 108|0;
 $6 = sp + 104|0;
 $7 = sp + 100|0;
 $8 = sp + 96|0;
 $9 = sp + 92|0;
 $10 = sp + 88|0;
 $11 = sp + 84|0;
 $12 = sp + 80|0;
 $13 = sp + 76|0;
 $14 = sp + 72|0;
 $15 = sp + 68|0;
 $16 = sp + 64|0;
 $17 = sp + 60|0;
 $18 = sp + 56|0;
 $19 = sp + 52|0;
 $20 = sp + 48|0;
 $21 = sp + 44|0;
 $22 = sp + 40|0;
 $23 = sp + 36|0;
 $24 = sp + 32|0;
 $25 = sp + 28|0;
 $26 = sp + 24|0;
 $27 = sp + 20|0;
 $28 = sp + 16|0;
 $29 = sp + 12|0;
 $30 = sp + 8|0;
 $31 = sp + 4|0;
 $32 = sp;
 HEAP32[$__err>>2] = 0;
 $33 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$1>>2] = $33;
 __THREW__ = 0;
 $34 = (invoke_iii(355,($1|0),(10392|0))|0);
 $35 = __THREW__; __THREW__ = 0;
 $36 = $35&1;
 if ($36) {
  $38 = ___cxa_find_matching_catch()|0;
  $39 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($33)|0);
  ___resumeException($38|0);
  // unreachable;
 }
 (__ZNSt3__114__shared_count16__release_sharedEv($33)|0);
 $37 = $__fmt << 24 >> 24;
 do {
  switch ($37|0) {
  case 65: case 97:  {
   $40 = ((($__tm)) + 24|0);
   $41 = HEAP32[$__e>>2]|0;
   HEAP32[$2>>2] = $41;
   ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$40,$__b,$$byval_copy,$__err,$34);
   label = 28;
   break;
  }
  case 104: case 66: case 98:  {
   $42 = ((($__tm)) + 16|0);
   $43 = HEAP32[$__e>>2]|0;
   HEAP32[$3>>2] = $43;
   ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$42,$__b,$$byval_copy1,$__err,$34);
   label = 28;
   break;
  }
  case 99:  {
   $44 = ((($this)) + 8|0);
   $45 = HEAP32[$44>>2]|0;
   $46 = ((($45)) + 12|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = (FUNCTION_TABLE_ii[$47 & 1023]($44)|0);
   $49 = HEAP32[$__b>>2]|0;
   HEAP32[$4>>2] = $49;
   $50 = HEAP32[$__e>>2]|0;
   HEAP32[$5>>2] = $50;
   $51 = HEAP8[$48>>0]|0;
   $52 = $51 & 1;
   $53 = ($52<<24>>24)==(0);
   $54 = ((($48)) + 8|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = ((($48)) + 1|0);
   $57 = $53 ? $56 : $55;
   $58 = ((($48)) + 4|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = $51&255;
   $61 = $60 >>> 1;
   $62 = $53 ? $61 : $59;
   $63 = (($57) + ($62)|0);
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;
   ;HEAP32[$$byval_copy3>>2]=HEAP32[$5>>2]|0;
   $64 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy2,$$byval_copy3,$__iob,$__err,$__tm,$57,$63)|0);
   HEAP32[$__b>>2] = $64;
   label = 28;
   break;
  }
  case 101: case 100:  {
   $65 = ((($__tm)) + 12|0);
   $66 = HEAP32[$__e>>2]|0;
   HEAP32[$6>>2] = $66;
   ;HEAP32[$$byval_copy4>>2]=HEAP32[$6>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$65,$__b,$$byval_copy4,$__err,$34);
   label = 28;
   break;
  }
  case 68:  {
   $67 = HEAP32[$__b>>2]|0;
   HEAP32[$7>>2] = $67;
   $68 = HEAP32[$__e>>2]|0;
   HEAP32[$8>>2] = $68;
   ;HEAP32[$$byval_copy5>>2]=HEAP32[$7>>2]|0;
   ;HEAP32[$$byval_copy6>>2]=HEAP32[$8>>2]|0;
   $69 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy5,$$byval_copy6,$__iob,$__err,$__tm,26036,(26044))|0);
   HEAP32[$__b>>2] = $69;
   label = 28;
   break;
  }
  case 70:  {
   $70 = HEAP32[$__b>>2]|0;
   HEAP32[$9>>2] = $70;
   $71 = HEAP32[$__e>>2]|0;
   HEAP32[$10>>2] = $71;
   ;HEAP32[$$byval_copy7>>2]=HEAP32[$9>>2]|0;
   ;HEAP32[$$byval_copy8>>2]=HEAP32[$10>>2]|0;
   $72 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy7,$$byval_copy8,$__iob,$__err,$__tm,26044,(26052))|0);
   HEAP32[$__b>>2] = $72;
   label = 28;
   break;
  }
  case 72:  {
   $73 = ((($__tm)) + 8|0);
   $74 = HEAP32[$__e>>2]|0;
   HEAP32[$11>>2] = $74;
   ;HEAP32[$$byval_copy9>>2]=HEAP32[$11>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$73,$__b,$$byval_copy9,$__err,$34);
   label = 28;
   break;
  }
  case 73:  {
   $75 = ((($__tm)) + 8|0);
   $76 = HEAP32[$__e>>2]|0;
   HEAP32[$12>>2] = $76;
   ;HEAP32[$$byval_copy10>>2]=HEAP32[$12>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$75,$__b,$$byval_copy10,$__err,$34);
   label = 28;
   break;
  }
  case 106:  {
   $77 = ((($__tm)) + 28|0);
   $78 = HEAP32[$__e>>2]|0;
   HEAP32[$13>>2] = $78;
   ;HEAP32[$$byval_copy11>>2]=HEAP32[$13>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this,$77,$__b,$$byval_copy11,$__err,$34);
   label = 28;
   break;
  }
  case 109:  {
   $79 = ((($__tm)) + 16|0);
   $80 = HEAP32[$__e>>2]|0;
   HEAP32[$14>>2] = $80;
   ;HEAP32[$$byval_copy12>>2]=HEAP32[$14>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this,$79,$__b,$$byval_copy12,$__err,$34);
   label = 28;
   break;
  }
  case 77:  {
   $81 = ((($__tm)) + 4|0);
   $82 = HEAP32[$__e>>2]|0;
   HEAP32[$15>>2] = $82;
   ;HEAP32[$$byval_copy13>>2]=HEAP32[$15>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this,$81,$__b,$$byval_copy13,$__err,$34);
   label = 28;
   break;
  }
  case 116: case 110:  {
   $83 = HEAP32[$__e>>2]|0;
   HEAP32[$16>>2] = $83;
   ;HEAP32[$$byval_copy14>>2]=HEAP32[$16>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$$byval_copy14,$__err,$34);
   label = 28;
   break;
  }
  case 112:  {
   $84 = ((($__tm)) + 8|0);
   $85 = HEAP32[$__e>>2]|0;
   HEAP32[$17>>2] = $85;
   ;HEAP32[$$byval_copy15>>2]=HEAP32[$17>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this,$84,$__b,$$byval_copy15,$__err,$34);
   label = 28;
   break;
  }
  case 114:  {
   $86 = HEAP32[$__b>>2]|0;
   HEAP32[$18>>2] = $86;
   $87 = HEAP32[$__e>>2]|0;
   HEAP32[$19>>2] = $87;
   ;HEAP32[$$byval_copy16>>2]=HEAP32[$18>>2]|0;
   ;HEAP32[$$byval_copy17>>2]=HEAP32[$19>>2]|0;
   $88 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy16,$$byval_copy17,$__iob,$__err,$__tm,26052,(26063))|0);
   HEAP32[$__b>>2] = $88;
   label = 28;
   break;
  }
  case 82:  {
   $89 = HEAP32[$__b>>2]|0;
   HEAP32[$20>>2] = $89;
   $90 = HEAP32[$__e>>2]|0;
   HEAP32[$21>>2] = $90;
   ;HEAP32[$$byval_copy18>>2]=HEAP32[$20>>2]|0;
   ;HEAP32[$$byval_copy19>>2]=HEAP32[$21>>2]|0;
   $91 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy18,$$byval_copy19,$__iob,$__err,$__tm,26063,(26068))|0);
   HEAP32[$__b>>2] = $91;
   label = 28;
   break;
  }
  case 83:  {
   $92 = HEAP32[$__e>>2]|0;
   HEAP32[$22>>2] = $92;
   ;HEAP32[$$byval_copy20>>2]=HEAP32[$22>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__tm,$__b,$$byval_copy20,$__err,$34);
   label = 28;
   break;
  }
  case 84:  {
   $93 = HEAP32[$__b>>2]|0;
   HEAP32[$23>>2] = $93;
   $94 = HEAP32[$__e>>2]|0;
   HEAP32[$24>>2] = $94;
   ;HEAP32[$$byval_copy21>>2]=HEAP32[$23>>2]|0;
   ;HEAP32[$$byval_copy22>>2]=HEAP32[$24>>2]|0;
   $95 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy21,$$byval_copy22,$__iob,$__err,$__tm,26068,(26076))|0);
   HEAP32[$__b>>2] = $95;
   label = 28;
   break;
  }
  case 119:  {
   $96 = ((($__tm)) + 24|0);
   $97 = HEAP32[$__e>>2]|0;
   HEAP32[$25>>2] = $97;
   ;HEAP32[$$byval_copy23>>2]=HEAP32[$25>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$96,$__b,$$byval_copy23,$__err,$34);
   label = 28;
   break;
  }
  case 120:  {
   $98 = HEAP32[$this>>2]|0;
   $99 = ((($98)) + 20|0);
   $100 = HEAP32[$99>>2]|0;
   $101 = HEAP32[$__b>>2]|0;
   HEAP32[$26>>2] = $101;
   $102 = HEAP32[$__e>>2]|0;
   HEAP32[$27>>2] = $102;
   ;HEAP32[$$byval_copy24>>2]=HEAP32[$26>>2]|0;
   ;HEAP32[$$byval_copy25>>2]=HEAP32[$27>>2]|0;
   $103 = (FUNCTION_TABLE_iiiiiii[$100 & 511]($this,$$byval_copy24,$$byval_copy25,$__iob,$__err,$__tm)|0);
   $$sroa$07$0 = $103;
   break;
  }
  case 88:  {
   $104 = ((($this)) + 8|0);
   $105 = HEAP32[$104>>2]|0;
   $106 = ((($105)) + 24|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = (FUNCTION_TABLE_ii[$107 & 1023]($104)|0);
   $109 = HEAP32[$__b>>2]|0;
   HEAP32[$28>>2] = $109;
   $110 = HEAP32[$__e>>2]|0;
   HEAP32[$29>>2] = $110;
   $111 = HEAP8[$108>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   $114 = ((($108)) + 8|0);
   $115 = HEAP32[$114>>2]|0;
   $116 = ((($108)) + 1|0);
   $117 = $113 ? $116 : $115;
   $118 = ((($108)) + 4|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = $111&255;
   $121 = $120 >>> 1;
   $122 = $113 ? $121 : $119;
   $123 = (($117) + ($122)|0);
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$28>>2]|0;
   ;HEAP32[$$byval_copy27>>2]=HEAP32[$29>>2]|0;
   $124 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy27,$__iob,$__err,$__tm,$117,$123)|0);
   HEAP32[$__b>>2] = $124;
   label = 28;
   break;
  }
  case 121:  {
   $125 = ((($__tm)) + 20|0);
   $126 = HEAP32[$__e>>2]|0;
   HEAP32[$30>>2] = $126;
   ;HEAP32[$$byval_copy28>>2]=HEAP32[$30>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$125,$__b,$$byval_copy28,$__err,$34);
   label = 28;
   break;
  }
  case 89:  {
   $127 = ((($__tm)) + 20|0);
   $128 = HEAP32[$__e>>2]|0;
   HEAP32[$31>>2] = $128;
   ;HEAP32[$$byval_copy29>>2]=HEAP32[$31>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this,$127,$__b,$$byval_copy29,$__err,$34);
   label = 28;
   break;
  }
  case 37:  {
   $129 = HEAP32[$__e>>2]|0;
   HEAP32[$32>>2] = $129;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$32>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$$byval_copy30,$__err,$34);
   label = 28;
   break;
  }
  default: {
   $130 = HEAP32[$__err>>2]|0;
   $131 = $130 | 4;
   HEAP32[$__err>>2] = $131;
   label = 28;
  }
  }
 } while(0);
 if ((label|0) == 28) {
  $132 = HEAP32[$__b>>2]|0;
  $$sroa$07$0 = $132;
 }
 STACKTOP = sp;return ($$sroa$07$0|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(31);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__d>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(24);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__h>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(12);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__h>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,3)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(366);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__d>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(13);
 $or$cond = $6 & $5;
 if ($or$cond) {
  $7 = (($2) + -1)|0;
  HEAP32[$__m>>2] = $7;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(60);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__m>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i6 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $isascii1$i = 0, $sext = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__ct)) + 8|0);
 L1: while(1) {
  $1 = HEAP32[$__b>>2]|0;
  $2 = ($1|0)==(0|0);
  do {
   if ($2) {
    $14 = 0;
   } else {
    $3 = ((($1)) + 12|0);
    $4 = HEAP32[$3>>2]|0;
    $5 = ((($1)) + 16|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = ($4|0)==($6|0);
    if ($7) {
     $8 = HEAP32[$1>>2]|0;
     $9 = ((($8)) + 36|0);
     $10 = HEAP32[$9>>2]|0;
     $11 = (FUNCTION_TABLE_ii[$10 & 1023]($1)|0);
     $12 = ($11|0)==(-1);
     if ($12) {
      HEAP32[$__b>>2] = 0;
      $14 = 0;
      break;
     } else {
      $$pre$i$i$i = HEAP32[$__b>>2]|0;
      $14 = $$pre$i$i$i;
      break;
     }
    } else {
     $14 = $1;
    }
   }
  } while(0);
  $13 = ($14|0)==(0|0);
  $15 = HEAP32[$__e>>2]|0;
  $16 = ($15|0)==(0|0);
  do {
   if ($16) {
    label = 12;
   } else {
    $17 = ((($15)) + 12|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ((($15)) + 16|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($18|0)==($20|0);
    if (!($21)) {
     if ($13) {
      $83 = $15;
      break;
     } else {
      $$pre$i2$i$i6 = $15;
      break L1;
     }
    }
    $22 = HEAP32[$15>>2]|0;
    $23 = ((($22)) + 36|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = (FUNCTION_TABLE_ii[$24 & 1023]($15)|0);
    $26 = ($25|0)==(-1);
    if ($26) {
     HEAP32[$__e>>2] = 0;
     label = 12;
     break;
    } else {
     if ($13) {
      $83 = $15;
      break;
     } else {
      $$pre$i2$i$i6 = $15;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 12) {
   label = 0;
   if ($13) {
    $$pre$i2$i$i6 = 0;
    break;
   } else {
    $83 = 0;
   }
  }
  $27 = HEAP32[$__b>>2]|0;
  $28 = ((($27)) + 12|0);
  $29 = HEAP32[$28>>2]|0;
  $30 = ((($27)) + 16|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = ($29|0)==($31|0);
  if ($32) {
   $33 = HEAP32[$27>>2]|0;
   $34 = ((($33)) + 36|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = (FUNCTION_TABLE_ii[$35 & 1023]($27)|0);
   $$0$i$i = $36;
  } else {
   $37 = HEAP8[$29>>0]|0;
   $38 = $37&255;
   $$0$i$i = $38;
  }
  $39 = $$0$i$i&255;
  $isascii1$i = ($39<<24>>24)>(-1);
  if (!($isascii1$i)) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  $sext = $$0$i$i << 24;
  $40 = $sext >> 24;
  $41 = HEAP32[$0>>2]|0;
  $42 = (($41) + ($40<<1)|0);
  $43 = HEAP16[$42>>1]|0;
  $44 = $43 & 8192;
  $45 = ($44<<16>>16)==(0);
  if ($45) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  $46 = HEAP32[$__b>>2]|0;
  $47 = ((($46)) + 12|0);
  $48 = HEAP32[$47>>2]|0;
  $49 = ((($46)) + 16|0);
  $50 = HEAP32[$49>>2]|0;
  $51 = ($48|0)==($50|0);
  if ($51) {
   $52 = HEAP32[$46>>2]|0;
   $53 = ((($52)) + 40|0);
   $54 = HEAP32[$53>>2]|0;
   (FUNCTION_TABLE_ii[$54 & 1023]($46)|0);
   continue;
  } else {
   $55 = ((($48)) + 1|0);
   HEAP32[$47>>2] = $55;
   continue;
  }
 }
 $56 = HEAP32[$__b>>2]|0;
 $57 = ($56|0)==(0|0);
 do {
  if ($57) {
   $69 = 0;
  } else {
   $58 = ((($56)) + 12|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = ((($56)) + 16|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = ($59|0)==($61|0);
   if ($62) {
    $63 = HEAP32[$56>>2]|0;
    $64 = ((($63)) + 36|0);
    $65 = HEAP32[$64>>2]|0;
    $66 = (FUNCTION_TABLE_ii[$65 & 1023]($56)|0);
    $67 = ($66|0)==(-1);
    if ($67) {
     HEAP32[$__b>>2] = 0;
     $69 = 0;
     break;
    } else {
     $$pre$i$i$i2 = HEAP32[$__b>>2]|0;
     $69 = $$pre$i$i$i2;
     break;
    }
   } else {
    $69 = $56;
   }
  }
 } while(0);
 $68 = ($69|0)==(0|0);
 $70 = ($$pre$i2$i$i6|0)==(0|0);
 do {
  if ($70) {
   label = 32;
  } else {
   $71 = ((($$pre$i2$i$i6)) + 12|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = ((($$pre$i2$i$i6)) + 16|0);
   $74 = HEAP32[$73>>2]|0;
   $75 = ($72|0)==($74|0);
   if ($75) {
    $76 = HEAP32[$$pre$i2$i$i6>>2]|0;
    $77 = ((($76)) + 36|0);
    $78 = HEAP32[$77>>2]|0;
    $79 = (FUNCTION_TABLE_ii[$78 & 1023]($$pre$i2$i$i6)|0);
    $80 = ($79|0)==(-1);
    if ($80) {
     HEAP32[$__e>>2] = 0;
     label = 32;
     break;
    }
   }
   if (!($68)) {
    label = 33;
   }
  }
 } while(0);
 if ((label|0) == 32) {
  if ($68) {
   label = 33;
  }
 }
 if ((label|0) == 33) {
  $81 = HEAP32[$__err>>2]|0;
  $82 = $81 | 2;
  HEAP32[$__err>>2] = $82;
 }
 return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 1023]($1)|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6 & 1;
 $8 = ($7<<24>>24)==(0);
 if ($8) {
  $11 = $6&255;
  $12 = $11 >>> 1;
  $24 = $12;
 } else {
  $9 = ((($5)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $24 = $10;
 }
 $13 = ((($5)) + 12|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = $14 & 1;
 $16 = ($15<<24>>24)==(0);
 if ($16) {
  $19 = $14&255;
  $20 = $19 >>> 1;
  $22 = $20;
 } else {
  $17 = ((($5)) + 16|0);
  $18 = HEAP32[$17>>2]|0;
  $22 = $18;
 }
 $21 = (0 - ($22))|0;
 $23 = ($24|0)==($21|0);
 do {
  if ($23) {
   $25 = HEAP32[$__err>>2]|0;
   $26 = $25 | 4;
   HEAP32[$__err>>2] = $26;
  } else {
   $27 = HEAP32[$__e>>2]|0;
   HEAP32[$0>>2] = $27;
   $28 = ((($5)) + 24|0);
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   $29 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$28,$__ct,$__err,0)|0);
   $30 = ($29|0)==($5|0);
   $31 = HEAP32[$__h>>2]|0;
   $32 = ($31|0)==(12);
   $or$cond = $30 & $32;
   if ($or$cond) {
    HEAP32[$__h>>2] = 0;
    break;
   }
   $33 = $29;
   $34 = $5;
   $35 = (($33) - ($34))|0;
   $36 = ($35|0)==(12);
   $37 = ($31|0)<(12);
   $or$cond3 = $37 & $36;
   if ($or$cond3) {
    $38 = (($31) + 12)|0;
    HEAP32[$__h>>2] = $38;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__s,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__s = $__s|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(61);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__s>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,1)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(7);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__w>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = (($2) + -1900)|0;
  HEAP32[$__y>>2] = $6;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i611 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $13 = 0;
  } else {
   $2 = ((($0)) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ((($0)) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = ((($7)) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
    $11 = ($10|0)==(-1);
    if ($11) {
     HEAP32[$__b>>2] = 0;
     $13 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $13 = $$pre$i$i$i;
     break;
    }
   } else {
    $13 = $0;
   }
  }
 } while(0);
 $12 = ($13|0)==(0|0);
 $14 = HEAP32[$__e>>2]|0;
 $15 = ($14|0)==(0|0);
 do {
  if ($15) {
   label = 11;
  } else {
   $16 = ((($14)) + 12|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($14)) + 16|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ($17|0)==($19|0);
   if ($20) {
    $21 = HEAP32[$14>>2]|0;
    $22 = ((($21)) + 36|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = (FUNCTION_TABLE_ii[$23 & 1023]($14)|0);
    $25 = ($24|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 11;
     break;
    }
   }
   if ($12) {
    $$pre$i2$i$i611 = $14;
    label = 13;
   } else {
    label = 12;
   }
  }
 } while(0);
 if ((label|0) == 11) {
  if ($12) {
   label = 12;
  } else {
   $$pre$i2$i$i611 = 0;
   label = 13;
  }
 }
 L16: do {
  if ((label|0) == 12) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
  }
  else if ((label|0) == 13) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = ((($28)) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($28)) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = ((($34)) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 1023]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP8[$30>>0]|0;
    $39 = $38&255;
    $$0$i$i = $39;
   }
   $40 = $$0$i$i&255;
   $41 = HEAP32[$__ct>>2]|0;
   $42 = ((($41)) + 36|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = (FUNCTION_TABLE_iiii[$43 & 1023]($__ct,$40,0)|0);
   $45 = ($44<<24>>24)==(37);
   if (!($45)) {
    $46 = HEAP32[$__err>>2]|0;
    $47 = $46 | 4;
    HEAP32[$__err>>2] = $47;
    break;
   }
   $48 = HEAP32[$__b>>2]|0;
   $49 = ((($48)) + 12|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ((($48)) + 16|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ($50|0)==($52|0);
   if ($53) {
    $55 = HEAP32[$48>>2]|0;
    $56 = ((($55)) + 40|0);
    $57 = HEAP32[$56>>2]|0;
    (FUNCTION_TABLE_ii[$57 & 1023]($48)|0);
    $$pre = HEAP32[$__b>>2]|0;
    $58 = ($$pre|0)==(0|0);
    if ($58) {
     $71 = 0;
    } else {
     $60 = $$pre;
     label = 21;
    }
   } else {
    $54 = ((($50)) + 1|0);
    HEAP32[$49>>2] = $54;
    $60 = $48;
    label = 21;
   }
   do {
    if ((label|0) == 21) {
     $59 = ((($60)) + 12|0);
     $61 = HEAP32[$59>>2]|0;
     $62 = ((($60)) + 16|0);
     $63 = HEAP32[$62>>2]|0;
     $64 = ($61|0)==($63|0);
     if ($64) {
      $65 = HEAP32[$60>>2]|0;
      $66 = ((($65)) + 36|0);
      $67 = HEAP32[$66>>2]|0;
      $68 = (FUNCTION_TABLE_ii[$67 & 1023]($60)|0);
      $69 = ($68|0)==(-1);
      if ($69) {
       HEAP32[$__b>>2] = 0;
       $71 = 0;
       break;
      } else {
       $$pre$i$i$i2 = HEAP32[$__b>>2]|0;
       $71 = $$pre$i$i$i2;
       break;
      }
     } else {
      $71 = $60;
     }
    }
   } while(0);
   $70 = ($71|0)==(0|0);
   $72 = ($$pre$i2$i$i611|0)==(0|0);
   do {
    if ($72) {
     label = 30;
    } else {
     $73 = ((($$pre$i2$i$i611)) + 12|0);
     $74 = HEAP32[$73>>2]|0;
     $75 = ((($$pre$i2$i$i611)) + 16|0);
     $76 = HEAP32[$75>>2]|0;
     $77 = ($74|0)==($76|0);
     if ($77) {
      $78 = HEAP32[$$pre$i2$i$i611>>2]|0;
      $79 = ((($78)) + 36|0);
      $80 = HEAP32[$79>>2]|0;
      $81 = (FUNCTION_TABLE_ii[$80 & 1023]($$pre$i2$i$i611)|0);
      $82 = ($81|0)==(-1);
      if ($82) {
       HEAP32[$__e>>2] = 0;
       label = 30;
       break;
      }
     }
     if ($70) {
      break L16;
     }
    }
   } while(0);
   if ((label|0) == 30) {
    if (!($70)) {
     break;
    }
   }
   $83 = HEAP32[$__err>>2]|0;
   $84 = $83 | 2;
   HEAP32[$__err>>2] = $84;
  }
 } while(0);
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$__b,$__e,$__iob,$__err,$__tm,$__fmtb,$__fmte) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmtb = $__fmtb|0;
 $__fmte = $__fmte|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i20 = 0, $$0$i$i$i$i5 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i11 = 0, $$0$i$i1$i$i26 = 0, $$0$i$i17 = 0, $$0$ph$be = 0, $$0$ph89 = 0, $$0$pn = 0, $$2 = 0, $$2$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa = 0, $$lcssa97 = 0, $$lcssa98 = 0, $$ph = 0, $$pre$i$i$i22 = 0;
 var $$pre$i$i$i7 = 0, $$pre$i3$i$i13 = 0, $$pre$i3$i$i1344 = 0, $$pre$i3$i$i1345 = 0, $$pre$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__cmd$0 = 0, $__opt$0 = 0, $or$cond87 = 0, $phitmp$i4$i$i14 = 0;
 var $tmp$i$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 16|0;
 $$byval_copy = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 $2 = sp;
 $3 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $3;
 __THREW__ = 0;
 $4 = (invoke_iii(355,($0|0),(10384|0))|0);
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if ($6) {
  $37 = ___cxa_find_matching_catch()|0;
  $38 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
  ___resumeException($37|0);
  // unreachable;
 }
 (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
 HEAP32[$__err>>2] = 0;
 $7 = ($__fmtb|0)==($__fmte|0);
 $8 = HEAP32[$__b>>2]|0;
 L4: do {
  if ($7) {
   $$pre$i$i$i22 = $8;
  } else {
   $$0$ph89 = $__fmtb;$10 = $8;
   L5: while(1) {
    $9 = ($10|0)==(0|0);
    $11 = $10;
    if ($9) {
     $130 = 0;$187 = 1;$62 = $11;
    } else {
     $12 = ((($10)) + 12|0);
     $13 = HEAP32[$12>>2]|0;
     $14 = ((($10)) + 16|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = ($13|0)==($15|0);
     if ($16) {
      $17 = HEAP32[$10>>2]|0;
      $18 = ((($17)) + 36|0);
      $19 = HEAP32[$18>>2]|0;
      $20 = (FUNCTION_TABLE_ii[$19 & 1023]($10)|0);
      $$0$i$i$i$i = $20;
     } else {
      $21 = HEAP32[$13>>2]|0;
      $$0$i$i$i$i = $21;
     }
     $22 = ($$0$i$i$i$i|0)==(-1);
     if ($22) {
      HEAP32[$__b>>2] = 0;
      $130 = 0;$187 = 1;$62 = 0;
     } else {
      $130 = $10;$187 = 0;$62 = $11;
     }
    }
    $23 = HEAP32[$__e>>2]|0;
    $24 = ($23|0)==(0|0);
    $25 = $23;
    do {
     if ($24) {
      $$ph = $25;
      label = 15;
     } else {
      $26 = ((($23)) + 12|0);
      $27 = HEAP32[$26>>2]|0;
      $28 = ((($23)) + 16|0);
      $29 = HEAP32[$28>>2]|0;
      $30 = ($27|0)==($29|0);
      if ($30) {
       $31 = HEAP32[$23>>2]|0;
       $32 = ((($31)) + 36|0);
       $33 = HEAP32[$32>>2]|0;
       $34 = (FUNCTION_TABLE_ii[$33 & 1023]($23)|0);
       $$0$i$i1$i$i = $34;
      } else {
       $35 = HEAP32[$27>>2]|0;
       $$0$i$i1$i$i = $35;
      }
      $36 = ($$0$i$i1$i$i|0)==(-1);
      if ($36) {
       HEAP32[$__e>>2] = 0;
       $$ph = 0;
       label = 15;
       break;
      } else {
       if ($187) {
        $188 = $23;$63 = $25;
        break;
       } else {
        $$lcssa = $130;
        label = 17;
        break L5;
       }
      }
     }
    } while(0);
    if ((label|0) == 15) {
     label = 0;
     if ($187) {
      $$lcssa = $130;
      label = 17;
      break;
     } else {
      $188 = 0;$63 = $$ph;
     }
    }
    $39 = HEAP32[$$0$ph89>>2]|0;
    $40 = HEAP32[$4>>2]|0;
    $41 = ((($40)) + 52|0);
    $42 = HEAP32[$41>>2]|0;
    $43 = (FUNCTION_TABLE_iiii[$42 & 1023]($4,$39,0)|0);
    $44 = ($43<<24>>24)==(37);
    L27: do {
     if ($44) {
      $45 = ((($$0$ph89)) + 4|0);
      $46 = ($45|0)==($__fmte|0);
      if ($46) {
       $$lcssa97 = $130;
       label = 21;
       break L5;
      }
      $47 = HEAP32[$45>>2]|0;
      $48 = HEAP32[$4>>2]|0;
      $49 = ((($48)) + 52|0);
      $50 = HEAP32[$49>>2]|0;
      $51 = (FUNCTION_TABLE_iiii[$50 & 1023]($4,$47,0)|0);
      switch ($51<<24>>24) {
      case 48: case 69:  {
       $52 = ((($$0$ph89)) + 8|0);
       $53 = ($52|0)==($__fmte|0);
       if ($53) {
        $$lcssa98 = $130;
        label = 24;
        break L5;
       }
       $54 = HEAP32[$52>>2]|0;
       $55 = HEAP32[$4>>2]|0;
       $56 = ((($55)) + 52|0);
       $57 = HEAP32[$56>>2]|0;
       $58 = (FUNCTION_TABLE_iiii[$57 & 1023]($4,$54,0)|0);
       $66 = $45;$__cmd$0 = $58;$__opt$0 = $51;
       break;
      }
      default: {
       $66 = $$0$ph89;$__cmd$0 = $51;$__opt$0 = 0;
      }
      }
      $59 = HEAP32[$this>>2]|0;
      $60 = ((($59)) + 36|0);
      $61 = HEAP32[$60>>2]|0;
      HEAP32[$1>>2] = $62;
      HEAP32[$2>>2] = $63;
      ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
      ;HEAP32[$$byval_copy1>>2]=HEAP32[$2>>2]|0;
      $64 = (FUNCTION_TABLE_iiiiiiiii[$61 & 511]($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$__cmd$0,$__opt$0)|0);
      HEAP32[$__b>>2] = $64;
      $65 = ((($66)) + 8|0);
      $$0$ph$be = $65;
     } else {
      $70 = HEAP32[$$0$ph89>>2]|0;
      $71 = HEAP32[$4>>2]|0;
      $72 = ((($71)) + 12|0);
      $73 = HEAP32[$72>>2]|0;
      $74 = (FUNCTION_TABLE_iiii[$73 & 1023]($4,8192,$70)|0);
      if ($74) {
       $$0$pn = $$0$ph89;
      } else {
       $129 = ((($130)) + 12|0);
       $131 = HEAP32[$129>>2]|0;
       $132 = ((($130)) + 16|0);
       $133 = HEAP32[$132>>2]|0;
       $134 = ($131|0)==($133|0);
       if ($134) {
        $135 = HEAP32[$130>>2]|0;
        $136 = ((($135)) + 36|0);
        $137 = HEAP32[$136>>2]|0;
        $138 = (FUNCTION_TABLE_ii[$137 & 1023]($130)|0);
        $$0$i$i17 = $138;
       } else {
        $139 = HEAP32[$131>>2]|0;
        $$0$i$i17 = $139;
       }
       $140 = HEAP32[$4>>2]|0;
       $141 = ((($140)) + 28|0);
       $142 = HEAP32[$141>>2]|0;
       $143 = (FUNCTION_TABLE_iii[$142 & 1023]($4,$$0$i$i17)|0);
       $144 = HEAP32[$$0$ph89>>2]|0;
       $145 = HEAP32[$4>>2]|0;
       $146 = ((($145)) + 28|0);
       $147 = HEAP32[$146>>2]|0;
       $148 = (FUNCTION_TABLE_iii[$147 & 1023]($4,$144)|0);
       $149 = ($143|0)==($148|0);
       if (!($149)) {
        label = 61;
        break L5;
       }
       $150 = HEAP32[$129>>2]|0;
       $151 = HEAP32[$132>>2]|0;
       $152 = ($150|0)==($151|0);
       if ($152) {
        $153 = HEAP32[$130>>2]|0;
        $154 = ((($153)) + 40|0);
        $155 = HEAP32[$154>>2]|0;
        (FUNCTION_TABLE_ii[$155 & 1023]($130)|0);
       } else {
        $156 = ((($150)) + 4|0);
        HEAP32[$129>>2] = $156;
       }
       $157 = ((($$0$ph89)) + 4|0);
       $$0$ph$be = $157;
       break;
      }
      while(1) {
       $$2 = ((($$0$pn)) + 4|0);
       $75 = ($$2|0)==($__fmte|0);
       if ($75) {
        $$2$lcssa = $__fmte;
        break;
       }
       $76 = HEAP32[$$2>>2]|0;
       $77 = HEAP32[$4>>2]|0;
       $78 = ((($77)) + 12|0);
       $79 = HEAP32[$78>>2]|0;
       $80 = (FUNCTION_TABLE_iiii[$79 & 1023]($4,8192,$76)|0);
       if ($80) {
        $$0$pn = $$2;
       } else {
        $$2$lcssa = $$2;
        break;
       }
      }
      $$pre$i$i$i7 = $130;$$pre$i3$i$i13 = $188;$94 = $188;
      while(1) {
       $81 = ($$pre$i$i$i7|0)==(0|0);
       if ($81) {
        $106 = 1;$108 = 0;
       } else {
        $82 = ((($$pre$i$i$i7)) + 12|0);
        $83 = HEAP32[$82>>2]|0;
        $84 = ((($$pre$i$i$i7)) + 16|0);
        $85 = HEAP32[$84>>2]|0;
        $86 = ($83|0)==($85|0);
        if ($86) {
         $87 = HEAP32[$$pre$i$i$i7>>2]|0;
         $88 = ((($87)) + 36|0);
         $89 = HEAP32[$88>>2]|0;
         $90 = (FUNCTION_TABLE_ii[$89 & 1023]($$pre$i$i$i7)|0);
         $$0$i$i$i$i5 = $90;
        } else {
         $91 = HEAP32[$83>>2]|0;
         $$0$i$i$i$i5 = $91;
        }
        $92 = ($$0$i$i$i$i5|0)==(-1);
        if ($92) {
         HEAP32[$__b>>2] = 0;
         $106 = 1;$108 = 0;
        } else {
         $106 = 0;$108 = $$pre$i$i$i7;
        }
       }
       $93 = ($94|0)==(0|0);
       do {
        if ($93) {
         $$pre$i3$i$i1345 = $$pre$i3$i$i13;
         label = 44;
        } else {
         $95 = ((($94)) + 12|0);
         $96 = HEAP32[$95>>2]|0;
         $97 = ((($94)) + 16|0);
         $98 = HEAP32[$97>>2]|0;
         $99 = ($96|0)==($98|0);
         if ($99) {
          $100 = HEAP32[$94>>2]|0;
          $101 = ((($100)) + 36|0);
          $102 = HEAP32[$101>>2]|0;
          $103 = (FUNCTION_TABLE_ii[$102 & 1023]($94)|0);
          $$0$i$i1$i$i11 = $103;
         } else {
          $104 = HEAP32[$96>>2]|0;
          $$0$i$i1$i$i11 = $104;
         }
         $105 = ($$0$i$i1$i$i11|0)==(-1);
         if ($105) {
          HEAP32[$__e>>2] = 0;
          $$pre$i3$i$i1345 = 0;
          label = 44;
          break;
         } else {
          $phitmp$i4$i$i14 = ($$pre$i3$i$i13|0)==(0|0);
          $tmp$i$i16 = $106 ^ $phitmp$i4$i$i14;
          if ($tmp$i$i16) {
           $$pre$i3$i$i1344 = $$pre$i3$i$i13;$189 = $$pre$i3$i$i13;
           break;
          } else {
           $$0$ph$be = $$2$lcssa;
           break L27;
          }
         }
        }
       } while(0);
       if ((label|0) == 44) {
        label = 0;
        if ($106) {
         $$0$ph$be = $$2$lcssa;
         break L27;
        } else {
         $$pre$i3$i$i1344 = $$pre$i3$i$i1345;$189 = 0;
        }
       }
       $107 = ((($108)) + 12|0);
       $109 = HEAP32[$107>>2]|0;
       $110 = ((($108)) + 16|0);
       $111 = HEAP32[$110>>2]|0;
       $112 = ($109|0)==($111|0);
       if ($112) {
        $113 = HEAP32[$108>>2]|0;
        $114 = ((($113)) + 36|0);
        $115 = HEAP32[$114>>2]|0;
        $116 = (FUNCTION_TABLE_ii[$115 & 1023]($108)|0);
        $$0$i$i = $116;
       } else {
        $117 = HEAP32[$109>>2]|0;
        $$0$i$i = $117;
       }
       $118 = HEAP32[$4>>2]|0;
       $119 = ((($118)) + 12|0);
       $120 = HEAP32[$119>>2]|0;
       $121 = (FUNCTION_TABLE_iiii[$120 & 1023]($4,8192,$$0$i$i)|0);
       if (!($121)) {
        $$0$ph$be = $$2$lcssa;
        break L27;
       }
       $122 = HEAP32[$107>>2]|0;
       $123 = HEAP32[$110>>2]|0;
       $124 = ($122|0)==($123|0);
       if ($124) {
        $125 = HEAP32[$108>>2]|0;
        $126 = ((($125)) + 40|0);
        $127 = HEAP32[$126>>2]|0;
        (FUNCTION_TABLE_ii[$127 & 1023]($108)|0);
        $$pre$i$i$i7 = $108;$$pre$i3$i$i13 = $$pre$i3$i$i1344;$94 = $189;
        continue;
       } else {
        $128 = ((($122)) + 4|0);
        HEAP32[$107>>2] = $128;
        $$pre$i$i$i7 = $108;$$pre$i3$i$i13 = $$pre$i3$i$i1344;$94 = $189;
        continue;
       }
      }
     }
    } while(0);
    $$pre$pre = HEAP32[$__err>>2]|0;
    $67 = ($$0$ph$be|0)!=($__fmte|0);
    $68 = ($$pre$pre|0)==(0);
    $or$cond87 = $67 & $68;
    $69 = HEAP32[$__b>>2]|0;
    if ($or$cond87) {
     $$0$ph89 = $$0$ph$be;$10 = $69;
    } else {
     $$pre$i$i$i22 = $69;
     break L4;
    }
   }
   if ((label|0) == 17) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i22 = $$lcssa;
    break;
   }
   else if ((label|0) == 21) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i22 = $$lcssa97;
    break;
   }
   else if ((label|0) == 24) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i22 = $$lcssa98;
    break;
   }
   else if ((label|0) == 61) {
    HEAP32[$__err>>2] = 4;
    $158 = HEAP32[$__b>>2]|0;
    $$pre$i$i$i22 = $158;
    break;
   }
  }
 } while(0);
 $159 = ($$pre$i$i$i22|0)==(0|0);
 if ($159) {
  $186 = 0;$190 = 1;
 } else {
  $160 = ((($$pre$i$i$i22)) + 12|0);
  $161 = HEAP32[$160>>2]|0;
  $162 = ((($$pre$i$i$i22)) + 16|0);
  $163 = HEAP32[$162>>2]|0;
  $164 = ($161|0)==($163|0);
  if ($164) {
   $165 = HEAP32[$$pre$i$i$i22>>2]|0;
   $166 = ((($165)) + 36|0);
   $167 = HEAP32[$166>>2]|0;
   $168 = (FUNCTION_TABLE_ii[$167 & 1023]($$pre$i$i$i22)|0);
   $$0$i$i$i$i20 = $168;
  } else {
   $169 = HEAP32[$161>>2]|0;
   $$0$i$i$i$i20 = $169;
  }
  $170 = ($$0$i$i$i$i20|0)==(-1);
  if ($170) {
   HEAP32[$__b>>2] = 0;
   $186 = 0;$190 = 1;
  } else {
   $186 = $$pre$i$i$i22;$190 = 0;
  }
 }
 $171 = HEAP32[$__e>>2]|0;
 $172 = ($171|0)==(0|0);
 do {
  if ($172) {
   label = 74;
  } else {
   $173 = ((($171)) + 12|0);
   $174 = HEAP32[$173>>2]|0;
   $175 = ((($171)) + 16|0);
   $176 = HEAP32[$175>>2]|0;
   $177 = ($174|0)==($176|0);
   if ($177) {
    $178 = HEAP32[$171>>2]|0;
    $179 = ((($178)) + 36|0);
    $180 = HEAP32[$179>>2]|0;
    $181 = (FUNCTION_TABLE_ii[$180 & 1023]($171)|0);
    $$0$i$i1$i$i26 = $181;
   } else {
    $182 = HEAP32[$174>>2]|0;
    $$0$i$i1$i$i26 = $182;
   }
   $183 = ($$0$i$i1$i$i26|0)==(-1);
   if ($183) {
    HEAP32[$__e>>2] = 0;
    label = 74;
    break;
   } else {
    if ($190) {
     break;
    } else {
     label = 76;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 74) {
  if ($190) {
   label = 76;
  }
 }
 if ((label|0) == 76) {
  $184 = HEAP32[$__err>>2]|0;
  $185 = $184 | 2;
  HEAP32[$__err>>2] = $185;
 }
 STACKTOP = sp;return ($186|0);
}
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,10960,(10992))|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = ((($this)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (FUNCTION_TABLE_ii[$5 & 1023]($2)|0);
 $7 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $7;
 $8 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $8;
 $9 = HEAP8[$6>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($6)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($6)) + 4|0);
 $15 = $11 ? $14 : $13;
 $16 = HEAP32[$14>>2]|0;
 $17 = $9&255;
 $18 = $17 >>> 1;
 $19 = $11 ? $18 : $16;
 $20 = (($15) + ($19<<2)|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $21 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$15,$20)|0);
 STACKTOP = sp;return ($21|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 __THREW__ = 0;
 $3 = (invoke_iii(355,($0|0),(10384|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  $6 = ((($__tm)) + 24|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$6,$__b,$$byval_copy,$__err,$3);
  $8 = HEAP32[$__b>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 return (0)|0;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_ii[$3 & 1023]($1)|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $5;
 $6 = ((($4)) + 168|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $7 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$4,$6,$__ct,$__err,0)|0);
 $8 = $7;
 $9 = $4;
 $10 = (($8) - ($9))|0;
 $11 = ($10|0)<(168);
 if ($11) {
  $12 = (($10|0) / 12)&-1;
  $13 = (($12|0) % 7)&-1;
  HEAP32[$__w>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 __THREW__ = 0;
 $3 = (invoke_iii(355,($0|0),(10384|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  $6 = ((($__tm)) + 16|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$6,$__b,$$byval_copy,$__err,$3);
  $8 = HEAP32[$__b>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 return (0)|0;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 1023]($1)|0);
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($5)) + 288|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $8 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$7,$__ct,$__err,0)|0);
 $9 = $8;
 $10 = $5;
 $11 = (($9) - ($10))|0;
 $12 = ($11|0)<(288);
 if ($12) {
  $13 = (($11|0) / 12)&-1;
  $14 = (($13|0) % 12)&-1;
  HEAP32[$__m>>2] = $14;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 __THREW__ = 0;
 $3 = (invoke_iii(355,($0|0),(10384|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  $6 = ((($__tm)) + 20|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$6,$__b,$$byval_copy,$__err,$3);
  $8 = HEAP32[$__b>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 return (0)|0;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$ = 0, $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__t$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = ($2|0)<(69);
  if ($6) {
   $7 = (($2) + 2000)|0;
   $__t$0 = $7;
  } else {
   $$off = (($2) + -69)|0;
   $8 = ($$off>>>0)<(31);
   $9 = (($2) + 1900)|0;
   $$ = $8 ? $9 : $2;
   $__t$0 = $$;
  }
  $10 = (($__t$0) + -1900)|0;
  HEAP32[$__y>>2] = $10;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($this,$__b,$__e,$__iob,$__err,$__tm,$__fmt,$0) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $0 = $0|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy10 = 0, $$byval_copy11 = 0, $$byval_copy12 = 0, $$byval_copy13 = 0, $$byval_copy14 = 0, $$byval_copy15 = 0, $$byval_copy16 = 0, $$byval_copy17 = 0, $$byval_copy18 = 0, $$byval_copy19 = 0, $$byval_copy2 = 0, $$byval_copy20 = 0, $$byval_copy21 = 0, $$byval_copy22 = 0, $$byval_copy23 = 0, $$byval_copy24 = 0, $$byval_copy25 = 0, $$byval_copy26 = 0;
 var $$byval_copy27 = 0, $$byval_copy28 = 0, $$byval_copy29 = 0, $$byval_copy3 = 0, $$byval_copy30 = 0, $$byval_copy4 = 0, $$byval_copy5 = 0, $$byval_copy6 = 0, $$byval_copy7 = 0, $$byval_copy8 = 0, $$byval_copy9 = 0, $$sroa$07$0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy30 = sp + 248|0;
 $$byval_copy29 = sp + 244|0;
 $$byval_copy28 = sp + 240|0;
 $$byval_copy27 = sp + 236|0;
 $$byval_copy26 = sp + 232|0;
 $$byval_copy25 = sp + 228|0;
 $$byval_copy24 = sp + 224|0;
 $$byval_copy23 = sp + 220|0;
 $$byval_copy22 = sp + 216|0;
 $$byval_copy21 = sp + 212|0;
 $$byval_copy20 = sp + 208|0;
 $$byval_copy19 = sp + 204|0;
 $$byval_copy18 = sp + 200|0;
 $$byval_copy17 = sp + 196|0;
 $$byval_copy16 = sp + 192|0;
 $$byval_copy15 = sp + 188|0;
 $$byval_copy14 = sp + 184|0;
 $$byval_copy13 = sp + 180|0;
 $$byval_copy12 = sp + 176|0;
 $$byval_copy11 = sp + 172|0;
 $$byval_copy10 = sp + 168|0;
 $$byval_copy9 = sp + 164|0;
 $$byval_copy8 = sp + 160|0;
 $$byval_copy7 = sp + 156|0;
 $$byval_copy6 = sp + 152|0;
 $$byval_copy5 = sp + 148|0;
 $$byval_copy4 = sp + 144|0;
 $$byval_copy3 = sp + 140|0;
 $$byval_copy2 = sp + 136|0;
 $$byval_copy1 = sp + 132|0;
 $$byval_copy = sp + 128|0;
 $1 = sp + 124|0;
 $2 = sp + 120|0;
 $3 = sp + 116|0;
 $4 = sp + 112|0;
 $5 = sp + 108|0;
 $6 = sp + 104|0;
 $7 = sp + 100|0;
 $8 = sp + 96|0;
 $9 = sp + 92|0;
 $10 = sp + 88|0;
 $11 = sp + 84|0;
 $12 = sp + 80|0;
 $13 = sp + 76|0;
 $14 = sp + 72|0;
 $15 = sp + 68|0;
 $16 = sp + 64|0;
 $17 = sp + 60|0;
 $18 = sp + 56|0;
 $19 = sp + 52|0;
 $20 = sp + 48|0;
 $21 = sp + 44|0;
 $22 = sp + 40|0;
 $23 = sp + 36|0;
 $24 = sp + 32|0;
 $25 = sp + 28|0;
 $26 = sp + 24|0;
 $27 = sp + 20|0;
 $28 = sp + 16|0;
 $29 = sp + 12|0;
 $30 = sp + 8|0;
 $31 = sp + 4|0;
 $32 = sp;
 HEAP32[$__err>>2] = 0;
 $33 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$1>>2] = $33;
 __THREW__ = 0;
 $34 = (invoke_iii(355,($1|0),(10384|0))|0);
 $35 = __THREW__; __THREW__ = 0;
 $36 = $35&1;
 if ($36) {
  $38 = ___cxa_find_matching_catch()|0;
  $39 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($33)|0);
  ___resumeException($38|0);
  // unreachable;
 }
 (__ZNSt3__114__shared_count16__release_sharedEv($33)|0);
 $37 = $__fmt << 24 >> 24;
 do {
  switch ($37|0) {
  case 65: case 97:  {
   $40 = ((($__tm)) + 24|0);
   $41 = HEAP32[$__e>>2]|0;
   HEAP32[$2>>2] = $41;
   ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$40,$__b,$$byval_copy,$__err,$34);
   label = 28;
   break;
  }
  case 104: case 66: case 98:  {
   $42 = ((($__tm)) + 16|0);
   $43 = HEAP32[$__e>>2]|0;
   HEAP32[$3>>2] = $43;
   ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$42,$__b,$$byval_copy1,$__err,$34);
   label = 28;
   break;
  }
  case 99:  {
   $44 = ((($this)) + 8|0);
   $45 = HEAP32[$44>>2]|0;
   $46 = ((($45)) + 12|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = (FUNCTION_TABLE_ii[$47 & 1023]($44)|0);
   $49 = HEAP32[$__b>>2]|0;
   HEAP32[$4>>2] = $49;
   $50 = HEAP32[$__e>>2]|0;
   HEAP32[$5>>2] = $50;
   $51 = HEAP8[$48>>0]|0;
   $52 = $51 & 1;
   $53 = ($52<<24>>24)==(0);
   $54 = ((($48)) + 8|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = ((($48)) + 4|0);
   $57 = $53 ? $56 : $55;
   $58 = HEAP32[$56>>2]|0;
   $59 = $51&255;
   $60 = $59 >>> 1;
   $61 = $53 ? $60 : $58;
   $62 = (($57) + ($61<<2)|0);
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;
   ;HEAP32[$$byval_copy3>>2]=HEAP32[$5>>2]|0;
   $63 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy2,$$byval_copy3,$__iob,$__err,$__tm,$57,$62)|0);
   HEAP32[$__b>>2] = $63;
   label = 28;
   break;
  }
  case 101: case 100:  {
   $64 = ((($__tm)) + 12|0);
   $65 = HEAP32[$__e>>2]|0;
   HEAP32[$6>>2] = $65;
   ;HEAP32[$$byval_copy4>>2]=HEAP32[$6>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$64,$__b,$$byval_copy4,$__err,$34);
   label = 28;
   break;
  }
  case 68:  {
   $66 = HEAP32[$__b>>2]|0;
   HEAP32[$7>>2] = $66;
   $67 = HEAP32[$__e>>2]|0;
   HEAP32[$8>>2] = $67;
   ;HEAP32[$$byval_copy5>>2]=HEAP32[$7>>2]|0;
   ;HEAP32[$$byval_copy6>>2]=HEAP32[$8>>2]|0;
   $68 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy5,$$byval_copy6,$__iob,$__err,$__tm,10992,(11024))|0);
   HEAP32[$__b>>2] = $68;
   label = 28;
   break;
  }
  case 70:  {
   $69 = HEAP32[$__b>>2]|0;
   HEAP32[$9>>2] = $69;
   $70 = HEAP32[$__e>>2]|0;
   HEAP32[$10>>2] = $70;
   ;HEAP32[$$byval_copy7>>2]=HEAP32[$9>>2]|0;
   ;HEAP32[$$byval_copy8>>2]=HEAP32[$10>>2]|0;
   $71 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy7,$$byval_copy8,$__iob,$__err,$__tm,11024,(11056))|0);
   HEAP32[$__b>>2] = $71;
   label = 28;
   break;
  }
  case 72:  {
   $72 = ((($__tm)) + 8|0);
   $73 = HEAP32[$__e>>2]|0;
   HEAP32[$11>>2] = $73;
   ;HEAP32[$$byval_copy9>>2]=HEAP32[$11>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$72,$__b,$$byval_copy9,$__err,$34);
   label = 28;
   break;
  }
  case 73:  {
   $74 = ((($__tm)) + 8|0);
   $75 = HEAP32[$__e>>2]|0;
   HEAP32[$12>>2] = $75;
   ;HEAP32[$$byval_copy10>>2]=HEAP32[$12>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$74,$__b,$$byval_copy10,$__err,$34);
   label = 28;
   break;
  }
  case 106:  {
   $76 = ((($__tm)) + 28|0);
   $77 = HEAP32[$__e>>2]|0;
   HEAP32[$13>>2] = $77;
   ;HEAP32[$$byval_copy11>>2]=HEAP32[$13>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this,$76,$__b,$$byval_copy11,$__err,$34);
   label = 28;
   break;
  }
  case 109:  {
   $78 = ((($__tm)) + 16|0);
   $79 = HEAP32[$__e>>2]|0;
   HEAP32[$14>>2] = $79;
   ;HEAP32[$$byval_copy12>>2]=HEAP32[$14>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this,$78,$__b,$$byval_copy12,$__err,$34);
   label = 28;
   break;
  }
  case 77:  {
   $80 = ((($__tm)) + 4|0);
   $81 = HEAP32[$__e>>2]|0;
   HEAP32[$15>>2] = $81;
   ;HEAP32[$$byval_copy13>>2]=HEAP32[$15>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this,$80,$__b,$$byval_copy13,$__err,$34);
   label = 28;
   break;
  }
  case 116: case 110:  {
   $82 = HEAP32[$__e>>2]|0;
   HEAP32[$16>>2] = $82;
   ;HEAP32[$$byval_copy14>>2]=HEAP32[$16>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$$byval_copy14,$__err,$34);
   label = 28;
   break;
  }
  case 112:  {
   $83 = ((($__tm)) + 8|0);
   $84 = HEAP32[$__e>>2]|0;
   HEAP32[$17>>2] = $84;
   ;HEAP32[$$byval_copy15>>2]=HEAP32[$17>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this,$83,$__b,$$byval_copy15,$__err,$34);
   label = 28;
   break;
  }
  case 114:  {
   $85 = HEAP32[$__b>>2]|0;
   HEAP32[$18>>2] = $85;
   $86 = HEAP32[$__e>>2]|0;
   HEAP32[$19>>2] = $86;
   ;HEAP32[$$byval_copy16>>2]=HEAP32[$18>>2]|0;
   ;HEAP32[$$byval_copy17>>2]=HEAP32[$19>>2]|0;
   $87 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy16,$$byval_copy17,$__iob,$__err,$__tm,11056,(11100))|0);
   HEAP32[$__b>>2] = $87;
   label = 28;
   break;
  }
  case 82:  {
   $88 = HEAP32[$__b>>2]|0;
   HEAP32[$20>>2] = $88;
   $89 = HEAP32[$__e>>2]|0;
   HEAP32[$21>>2] = $89;
   ;HEAP32[$$byval_copy18>>2]=HEAP32[$20>>2]|0;
   ;HEAP32[$$byval_copy19>>2]=HEAP32[$21>>2]|0;
   $90 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy18,$$byval_copy19,$__iob,$__err,$__tm,11100,(11120))|0);
   HEAP32[$__b>>2] = $90;
   label = 28;
   break;
  }
  case 83:  {
   $91 = HEAP32[$__e>>2]|0;
   HEAP32[$22>>2] = $91;
   ;HEAP32[$$byval_copy20>>2]=HEAP32[$22>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__tm,$__b,$$byval_copy20,$__err,$34);
   label = 28;
   break;
  }
  case 84:  {
   $92 = HEAP32[$__b>>2]|0;
   HEAP32[$23>>2] = $92;
   $93 = HEAP32[$__e>>2]|0;
   HEAP32[$24>>2] = $93;
   ;HEAP32[$$byval_copy21>>2]=HEAP32[$23>>2]|0;
   ;HEAP32[$$byval_copy22>>2]=HEAP32[$24>>2]|0;
   $94 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy21,$$byval_copy22,$__iob,$__err,$__tm,11120,(11152))|0);
   HEAP32[$__b>>2] = $94;
   label = 28;
   break;
  }
  case 119:  {
   $95 = ((($__tm)) + 24|0);
   $96 = HEAP32[$__e>>2]|0;
   HEAP32[$25>>2] = $96;
   ;HEAP32[$$byval_copy23>>2]=HEAP32[$25>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$95,$__b,$$byval_copy23,$__err,$34);
   label = 28;
   break;
  }
  case 120:  {
   $97 = HEAP32[$this>>2]|0;
   $98 = ((($97)) + 20|0);
   $99 = HEAP32[$98>>2]|0;
   $100 = HEAP32[$__b>>2]|0;
   HEAP32[$26>>2] = $100;
   $101 = HEAP32[$__e>>2]|0;
   HEAP32[$27>>2] = $101;
   ;HEAP32[$$byval_copy24>>2]=HEAP32[$26>>2]|0;
   ;HEAP32[$$byval_copy25>>2]=HEAP32[$27>>2]|0;
   $102 = (FUNCTION_TABLE_iiiiiii[$99 & 511]($this,$$byval_copy24,$$byval_copy25,$__iob,$__err,$__tm)|0);
   $$sroa$07$0 = $102;
   break;
  }
  case 88:  {
   $103 = ((($this)) + 8|0);
   $104 = HEAP32[$103>>2]|0;
   $105 = ((($104)) + 24|0);
   $106 = HEAP32[$105>>2]|0;
   $107 = (FUNCTION_TABLE_ii[$106 & 1023]($103)|0);
   $108 = HEAP32[$__b>>2]|0;
   HEAP32[$28>>2] = $108;
   $109 = HEAP32[$__e>>2]|0;
   HEAP32[$29>>2] = $109;
   $110 = HEAP8[$107>>0]|0;
   $111 = $110 & 1;
   $112 = ($111<<24>>24)==(0);
   $113 = ((($107)) + 8|0);
   $114 = HEAP32[$113>>2]|0;
   $115 = ((($107)) + 4|0);
   $116 = $112 ? $115 : $114;
   $117 = HEAP32[$115>>2]|0;
   $118 = $110&255;
   $119 = $118 >>> 1;
   $120 = $112 ? $119 : $117;
   $121 = (($116) + ($120<<2)|0);
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$28>>2]|0;
   ;HEAP32[$$byval_copy27>>2]=HEAP32[$29>>2]|0;
   $122 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy27,$__iob,$__err,$__tm,$116,$121)|0);
   HEAP32[$__b>>2] = $122;
   label = 28;
   break;
  }
  case 121:  {
   $123 = ((($__tm)) + 20|0);
   $124 = HEAP32[$__e>>2]|0;
   HEAP32[$30>>2] = $124;
   ;HEAP32[$$byval_copy28>>2]=HEAP32[$30>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$123,$__b,$$byval_copy28,$__err,$34);
   label = 28;
   break;
  }
  case 89:  {
   $125 = ((($__tm)) + 20|0);
   $126 = HEAP32[$__e>>2]|0;
   HEAP32[$31>>2] = $126;
   ;HEAP32[$$byval_copy29>>2]=HEAP32[$31>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this,$125,$__b,$$byval_copy29,$__err,$34);
   label = 28;
   break;
  }
  case 37:  {
   $127 = HEAP32[$__e>>2]|0;
   HEAP32[$32>>2] = $127;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$32>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$$byval_copy30,$__err,$34);
   label = 28;
   break;
  }
  default: {
   $128 = HEAP32[$__err>>2]|0;
   $129 = $128 | 4;
   HEAP32[$__err>>2] = $129;
   label = 28;
  }
  }
 } while(0);
 if ((label|0) == 28) {
  $130 = HEAP32[$__b>>2]|0;
  $$sroa$07$0 = $130;
 }
 STACKTOP = sp;return ($$sroa$07$0|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(31);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__d>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(24);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__h>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(12);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__h>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,3)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(366);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__d>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(13);
 $or$cond = $6 & $5;
 if ($or$cond) {
  $7 = (($2) + -1)|0;
  HEAP32[$__m>>2] = $7;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(60);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__m>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre$i$i$i = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i9 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $9 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 L1: while(1) {
  $0 = HEAP32[$__b>>2]|0;
  $1 = ($0|0)==(0|0);
  do {
   if ($1) {
    $78 = 1;
   } else {
    $2 = ((($0)) + 12|0);
    $3 = HEAP32[$2>>2]|0;
    $4 = ((($0)) + 16|0);
    $5 = HEAP32[$4>>2]|0;
    $6 = ($3|0)==($5|0);
    if ($6) {
     $7 = HEAP32[$0>>2]|0;
     $8 = ((($7)) + 36|0);
     $9 = HEAP32[$8>>2]|0;
     $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
     $$0$i$i$i$i = $10;
    } else {
     $11 = HEAP32[$3>>2]|0;
     $$0$i$i$i$i = $11;
    }
    $12 = ($$0$i$i$i$i|0)==(-1);
    if ($12) {
     HEAP32[$__b>>2] = 0;
     $78 = 1;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
     $78 = $phitmp$i$i$i;
     break;
    }
   }
  } while(0);
  $13 = HEAP32[$__e>>2]|0;
  $14 = ($13|0)==(0|0);
  do {
   if ($14) {
    label = 15;
   } else {
    $15 = ((($13)) + 12|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ((($13)) + 16|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($16|0)==($18|0);
    if ($19) {
     $20 = HEAP32[$13>>2]|0;
     $21 = ((($20)) + 36|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (FUNCTION_TABLE_ii[$22 & 1023]($13)|0);
     $$0$i$i1$i$i = $23;
    } else {
     $24 = HEAP32[$16>>2]|0;
     $$0$i$i1$i$i = $24;
    }
    $25 = ($$0$i$i1$i$i|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 15;
     break;
    } else {
     if ($78) {
      $79 = $13;
      break;
     } else {
      $$pre$i3$i$i9 = $13;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 15) {
   label = 0;
   if ($78) {
    $$pre$i3$i$i9 = 0;
    break;
   } else {
    $79 = 0;
   }
  }
  $26 = HEAP32[$__b>>2]|0;
  $27 = ((($26)) + 12|0);
  $28 = HEAP32[$27>>2]|0;
  $29 = ((($26)) + 16|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = ($28|0)==($30|0);
  if ($31) {
   $32 = HEAP32[$26>>2]|0;
   $33 = ((($32)) + 36|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = (FUNCTION_TABLE_ii[$34 & 1023]($26)|0);
   $$0$i$i = $35;
  } else {
   $36 = HEAP32[$28>>2]|0;
   $$0$i$i = $36;
  }
  $37 = HEAP32[$__ct>>2]|0;
  $38 = ((($37)) + 12|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = (FUNCTION_TABLE_iiii[$39 & 1023]($__ct,8192,$$0$i$i)|0);
  if (!($40)) {
   $$pre$i3$i$i9 = $79;
   break;
  }
  $41 = HEAP32[$__b>>2]|0;
  $42 = ((($41)) + 12|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = ((($41)) + 16|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = ($43|0)==($45|0);
  if ($46) {
   $47 = HEAP32[$41>>2]|0;
   $48 = ((($47)) + 40|0);
   $49 = HEAP32[$48>>2]|0;
   (FUNCTION_TABLE_ii[$49 & 1023]($41)|0);
   continue;
  } else {
   $50 = ((($43)) + 4|0);
   HEAP32[$42>>2] = $50;
   continue;
  }
 }
 $51 = HEAP32[$__b>>2]|0;
 $52 = ($51|0)==(0|0);
 do {
  if ($52) {
   $80 = 1;
  } else {
   $53 = ((($51)) + 12|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ((($51)) + 16|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = ($54|0)==($56|0);
   if ($57) {
    $58 = HEAP32[$51>>2]|0;
    $59 = ((($58)) + 36|0);
    $60 = HEAP32[$59>>2]|0;
    $61 = (FUNCTION_TABLE_ii[$60 & 1023]($51)|0);
    $$0$i$i$i$i1 = $61;
   } else {
    $62 = HEAP32[$54>>2]|0;
    $$0$i$i$i$i1 = $62;
   }
   $63 = ($$0$i$i$i$i1|0)==(-1);
   if ($63) {
    HEAP32[$__b>>2] = 0;
    $80 = 1;
    break;
   } else {
    $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i4 = ($$pre$i$i$i3|0)==(0|0);
    $80 = $phitmp$i$i$i4;
    break;
   }
  }
 } while(0);
 $64 = ($$pre$i3$i$i9|0)==(0|0);
 do {
  if ($64) {
   label = 37;
  } else {
   $65 = ((($$pre$i3$i$i9)) + 12|0);
   $66 = HEAP32[$65>>2]|0;
   $67 = ((($$pre$i3$i$i9)) + 16|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = ($66|0)==($68|0);
   if ($69) {
    $70 = HEAP32[$$pre$i3$i$i9>>2]|0;
    $71 = ((($70)) + 36|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = (FUNCTION_TABLE_ii[$72 & 1023]($$pre$i3$i$i9)|0);
    $$0$i$i1$i$i7 = $73;
   } else {
    $74 = HEAP32[$66>>2]|0;
    $$0$i$i1$i$i7 = $74;
   }
   $75 = ($$0$i$i1$i$i7|0)==(-1);
   if ($75) {
    HEAP32[$__e>>2] = 0;
    label = 37;
    break;
   } else {
    if ($80) {
     break;
    } else {
     label = 39;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 37) {
  if ($80) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $76 = HEAP32[$__err>>2]|0;
  $77 = $76 | 2;
  HEAP32[$__err>>2] = $77;
 }
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 1023]($1)|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6 & 1;
 $8 = ($7<<24>>24)==(0);
 if ($8) {
  $11 = $6&255;
  $12 = $11 >>> 1;
  $24 = $12;
 } else {
  $9 = ((($5)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $24 = $10;
 }
 $13 = ((($5)) + 12|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = $14 & 1;
 $16 = ($15<<24>>24)==(0);
 if ($16) {
  $19 = $14&255;
  $20 = $19 >>> 1;
  $22 = $20;
 } else {
  $17 = ((($5)) + 16|0);
  $18 = HEAP32[$17>>2]|0;
  $22 = $18;
 }
 $21 = (0 - ($22))|0;
 $23 = ($24|0)==($21|0);
 do {
  if ($23) {
   $25 = HEAP32[$__err>>2]|0;
   $26 = $25 | 4;
   HEAP32[$__err>>2] = $26;
  } else {
   $27 = HEAP32[$__e>>2]|0;
   HEAP32[$0>>2] = $27;
   $28 = ((($5)) + 24|0);
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   $29 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$28,$__ct,$__err,0)|0);
   $30 = ($29|0)==($5|0);
   $31 = HEAP32[$__h>>2]|0;
   $32 = ($31|0)==(12);
   $or$cond = $30 & $32;
   if ($or$cond) {
    HEAP32[$__h>>2] = 0;
    break;
   }
   $33 = $29;
   $34 = $5;
   $35 = (($33) - ($34))|0;
   $36 = ($35|0)==(12);
   $37 = ($31|0)<(12);
   $or$cond3 = $37 & $36;
   if ($or$cond3) {
    $38 = (($31) + 12)|0;
    HEAP32[$__h>>2] = $38;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__s,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__s = $__s|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(61);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__s>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,1)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(7);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__w>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = (($2) + -1900)|0;
  HEAP32[$__y>>2] = $6;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i915 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $83 = 1;
  } else {
   $2 = ((($0)) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ((($0)) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = ((($7)) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
    $$0$i$i$i$i = $10;
   } else {
    $11 = HEAP32[$3>>2]|0;
    $$0$i$i$i$i = $11;
   }
   $12 = ($$0$i$i$i$i|0)==(-1);
   if ($12) {
    HEAP32[$__b>>2] = 0;
    $83 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $83 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $13 = HEAP32[$__e>>2]|0;
 $14 = ($13|0)==(0|0);
 do {
  if ($14) {
   label = 14;
  } else {
   $15 = ((($13)) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ((($13)) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$13>>2]|0;
    $21 = ((($20)) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 1023]($13)|0);
    $$0$i$i1$i$i = $23;
   } else {
    $24 = HEAP32[$16>>2]|0;
    $$0$i$i1$i$i = $24;
   }
   $25 = ($$0$i$i1$i$i|0)==(-1);
   if ($25) {
    HEAP32[$__e>>2] = 0;
    label = 14;
    break;
   } else {
    if ($83) {
     $$pre$i3$i$i915 = $13;
     label = 17;
     break;
    } else {
     label = 16;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 14) {
  if ($83) {
   label = 16;
  } else {
   $$pre$i3$i$i915 = 0;
   label = 17;
  }
 }
 L22: do {
  if ((label|0) == 16) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
  }
  else if ((label|0) == 17) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = ((($28)) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($28)) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = ((($34)) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 1023]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP32[$30>>2]|0;
    $$0$i$i = $38;
   }
   $39 = HEAP32[$__ct>>2]|0;
   $40 = ((($39)) + 52|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = (FUNCTION_TABLE_iiii[$41 & 1023]($__ct,$$0$i$i,0)|0);
   $43 = ($42<<24>>24)==(37);
   if (!($43)) {
    $44 = HEAP32[$__err>>2]|0;
    $45 = $44 | 4;
    HEAP32[$__err>>2] = $45;
    break;
   }
   $46 = HEAP32[$__b>>2]|0;
   $47 = ((($46)) + 12|0);
   $48 = HEAP32[$47>>2]|0;
   $49 = ((($46)) + 16|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ($48|0)==($50|0);
   if ($51) {
    $53 = HEAP32[$46>>2]|0;
    $54 = ((($53)) + 40|0);
    $55 = HEAP32[$54>>2]|0;
    (FUNCTION_TABLE_ii[$55 & 1023]($46)|0);
    $$pre = HEAP32[$__b>>2]|0;
    $56 = ($$pre|0)==(0|0);
    if ($56) {
     $84 = 1;
    } else {
     $58 = $$pre;
     label = 25;
    }
   } else {
    $52 = ((($48)) + 4|0);
    HEAP32[$47>>2] = $52;
    $58 = $46;
    label = 25;
   }
   do {
    if ((label|0) == 25) {
     $57 = ((($58)) + 12|0);
     $59 = HEAP32[$57>>2]|0;
     $60 = ((($58)) + 16|0);
     $61 = HEAP32[$60>>2]|0;
     $62 = ($59|0)==($61|0);
     if ($62) {
      $63 = HEAP32[$58>>2]|0;
      $64 = ((($63)) + 36|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = (FUNCTION_TABLE_ii[$65 & 1023]($58)|0);
      $$0$i$i$i$i1 = $66;
     } else {
      $67 = HEAP32[$59>>2]|0;
      $$0$i$i$i$i1 = $67;
     }
     $68 = ($$0$i$i$i$i1|0)==(-1);
     if ($68) {
      HEAP32[$__b>>2] = 0;
      $84 = 1;
      break;
     } else {
      $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i4 = ($$pre$i$i$i3|0)==(0|0);
      $84 = $phitmp$i$i$i4;
      break;
     }
    }
   } while(0);
   $69 = ($$pre$i3$i$i915|0)==(0|0);
   do {
    if ($69) {
     label = 37;
    } else {
     $70 = ((($$pre$i3$i$i915)) + 12|0);
     $71 = HEAP32[$70>>2]|0;
     $72 = ((($$pre$i3$i$i915)) + 16|0);
     $73 = HEAP32[$72>>2]|0;
     $74 = ($71|0)==($73|0);
     if ($74) {
      $75 = HEAP32[$$pre$i3$i$i915>>2]|0;
      $76 = ((($75)) + 36|0);
      $77 = HEAP32[$76>>2]|0;
      $78 = (FUNCTION_TABLE_ii[$77 & 1023]($$pre$i3$i$i915)|0);
      $$0$i$i1$i$i7 = $78;
     } else {
      $79 = HEAP32[$71>>2]|0;
      $$0$i$i1$i$i7 = $79;
     }
     $80 = ($$0$i$i1$i$i7|0)==(-1);
     if ($80) {
      HEAP32[$__e>>2] = 0;
      label = 37;
      break;
     } else {
      if ($84) {
       break L22;
      } else {
       break;
      }
     }
    }
   } while(0);
   if ((label|0) == 37) {
    if (!($84)) {
     break;
    }
   }
   $81 = HEAP32[$__err>>2]|0;
   $82 = $81 | 2;
   HEAP32[$__err>>2] = $82;
  }
 } while(0);
 return;
}
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 return;
}
function __ZNSt3__110__time_putD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 __THREW__ = 0;
 $1 = (invoke_i(429)|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 do {
  if (!($3)) {
   $4 = ($0|0)==($1|0);
   if (!($4)) {
    $5 = HEAP32[$this>>2]|0;
    __THREW__ = 0;
    invoke_vi(442,($5|0));
    $6 = __THREW__; __THREW__ = 0;
    $7 = $6&1;
    if ($7) {
     break;
    }
   }
   return;
  }
 } while(0);
 $8 = ___cxa_find_matching_catch(0|0)|0;
 $9 = tempRet0;
 ___clang_call_terminate($8);
 // unreachable;
}
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc($this,$__s,$0,$1,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__s = $__s|0;
 $0 = $0|0;
 $1 = $1|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $$$i = 0, $$0$i$i2 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__ne = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__nar = sp + 4|0;
 $__ne = sp;
 $2 = ((($__nar)) + 100|0);
 HEAP32[$__ne>>2] = $2;
 $3 = ((($this)) + 8|0);
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($3,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $4 = HEAP32[$__ne>>2]|0;
 $5 = HEAP32[$__s>>2]|0;
 $6 = $5;
 $7 = ($__nar|0)==($4|0);
 if ($7) {
  $$lcssa = $6;
 } else {
  $$0$i$i2 = $__nar;$10 = $6;
  while(1) {
   $8 = HEAP8[$$0$i$i2>>0]|0;
   $9 = ($10|0)==(0|0);
   do {
    if ($9) {
     $25 = 0;
    } else {
     $11 = ((($10)) + 24|0);
     $12 = HEAP32[$11>>2]|0;
     $13 = ((($10)) + 28|0);
     $14 = HEAP32[$13>>2]|0;
     $15 = ($12|0)==($14|0);
     if ($15) {
      $17 = HEAP32[$10>>2]|0;
      $18 = ((($17)) + 52|0);
      $19 = HEAP32[$18>>2]|0;
      $20 = $8&255;
      $21 = (FUNCTION_TABLE_iii[$19 & 1023]($10,$20)|0);
      $22 = ($21|0)==(-1);
      $$$i = $22 ? 0 : $10;
      $25 = $$$i;
      break;
     } else {
      $16 = ((($12)) + 1|0);
      HEAP32[$11>>2] = $16;
      HEAP8[$12>>0] = $8;
      $25 = $10;
      break;
     }
    }
   } while(0);
   $23 = ((($$0$i$i2)) + 1|0);
   $24 = ($23|0)==($4|0);
   if ($24) {
    $$lcssa = $25;
    break;
   } else {
    $$0$i$i2 = $23;$10 = $25;
   }
  }
 }
 STACKTOP = sp;return ($$lcssa|0);
}
function __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this,$__nb,$__ne,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__nb = $__nb|0;
 $__ne = $__ne|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $fmt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $fmt = sp;
 HEAP8[$fmt>>0] = 37;
 $0 = ((($fmt)) + 1|0);
 HEAP8[$0>>0] = $__fmt;
 $1 = ((($fmt)) + 2|0);
 HEAP8[$1>>0] = $__mod;
 $2 = ((($fmt)) + 3|0);
 HEAP8[$2>>0] = 0;
 $3 = ($__mod<<24>>24)==(0);
 if (!($3)) {
  HEAP8[$0>>0] = $__mod;
  HEAP8[$1>>0] = $__fmt;
 }
 $4 = HEAP32[$__ne>>2]|0;
 $5 = $4;
 $6 = $__nb;
 $7 = (($5) - ($6))|0;
 $8 = HEAP32[$this>>2]|0;
 $9 = (_strftime_l(($__nb|0),($7|0),($fmt|0),($__tm|0),($8|0))|0);
 $10 = (($__nb) + ($9)|0);
 HEAP32[$__ne>>2] = $10;
 STACKTOP = sp;return;
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 return;
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc($this,$__s,$0,$1,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__s = $__s|0;
 $0 = $0|0;
 $1 = $1|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $$$i = 0, $$0$i$i$i$i = 0, $$0$i$i2 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__ne = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__nar = sp + 8|0;
 $__ne = sp;
 $2 = ((($__nar)) + 400|0);
 HEAP32[$__ne>>2] = $2;
 $3 = ((($this)) + 8|0);
 __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($3,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $4 = HEAP32[$__ne>>2]|0;
 $5 = HEAP32[$__s>>2]|0;
 $6 = $5;
 $7 = ($__nar|0)==($4|0);
 if ($7) {
  $$lcssa = $6;
 } else {
  $$0$i$i2 = $__nar;$10 = $6;
  while(1) {
   $8 = HEAP32[$$0$i$i2>>2]|0;
   $9 = ($10|0)==(0|0);
   if ($9) {
    $24 = 0;
   } else {
    $11 = ((($10)) + 24|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ((($10)) + 28|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ($12|0)==($14|0);
    if ($15) {
     $16 = HEAP32[$10>>2]|0;
     $17 = ((($16)) + 52|0);
     $18 = HEAP32[$17>>2]|0;
     $19 = (FUNCTION_TABLE_iii[$18 & 1023]($10,$8)|0);
     $$0$i$i$i$i = $19;
    } else {
     $20 = ((($12)) + 4|0);
     HEAP32[$11>>2] = $20;
     HEAP32[$12>>2] = $8;
     $$0$i$i$i$i = $8;
    }
    $21 = ($$0$i$i$i$i|0)==(-1);
    $$$i = $21 ? 0 : $10;
    $24 = $$$i;
   }
   $22 = ((($$0$i$i2)) + 4|0);
   $23 = ($22|0)==($4|0);
   if ($23) {
    $$lcssa = $24;
    break;
   } else {
    $$0$i$i2 = $22;$10 = $24;
   }
  }
 }
 STACKTOP = sp;return ($$lcssa|0);
}
function __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($this,$__wb,$__we,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__wb = $__wb|0;
 $__we = $__we|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__nb = 0, $__ne = 0, $mb = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__nar = sp + 16|0;
 $__ne = sp + 12|0;
 $mb = sp;
 $__nb = sp + 8|0;
 $0 = ((($__nar)) + 100|0);
 HEAP32[$__ne>>2] = $0;
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $1 = $mb;
 $2 = $1;
 HEAP32[$2>>2] = 0;
 $3 = (($1) + 4)|0;
 $4 = $3;
 HEAP32[$4>>2] = 0;
 HEAP32[$__nb>>2] = $__nar;
 $5 = HEAP32[$__we>>2]|0;
 $6 = $5;
 $7 = $__wb;
 $8 = (($6) - ($7))|0;
 $9 = $8 >> 2;
 $10 = HEAP32[$this>>2]|0;
 $11 = (_uselocale($10)|0);
 __THREW__ = 0;
 $12 = (invoke_iiiii(443,($__wb|0),($__nb|0),($9|0),($mb|0))|0);
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 if ($14) {
  $20 = ___cxa_find_matching_catch()|0;
  $21 = tempRet0;
  $22 = ($11|0)==(0|0);
  if (!($22)) {
   __THREW__ = 0;
   (invoke_ii(444,($11|0))|0);
   $23 = __THREW__; __THREW__ = 0;
   $24 = $23&1;
   if ($24) {
    $25 = ___cxa_find_matching_catch(0|0)|0;
    $26 = tempRet0;
    ___clang_call_terminate($25);
    // unreachable;
   }
  }
  ___resumeException($20|0);
  // unreachable;
 }
 $15 = ($11|0)==(0|0);
 if (!($15)) {
  __THREW__ = 0;
  (invoke_ii(444,($11|0))|0);
  $16 = __THREW__; __THREW__ = 0;
  $17 = $16&1;
  if ($17) {
   $18 = ___cxa_find_matching_catch(0|0)|0;
   $19 = tempRet0;
   ___clang_call_terminate($18);
   // unreachable;
  }
 }
 $27 = ($12|0)==(-1);
 if ($27) {
  __ZNSt3__121__throw_runtime_errorEPKc(26076);
  // unreachable;
 } else {
  $28 = (($__wb) + ($12<<2)|0);
  HEAP32[$__we>>2] = $28;
  STACKTOP = sp;return;
 }
}
function __ZNSt3__110moneypunctIcLb0EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIcLb0EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIcLb1EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIcLb1EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb1EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIwLb0EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIwLb0EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIwLb1EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIwLb1EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb1EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = 0;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($agg$result)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$0 = 0, $$0$lcssa$i = 0, $$01 = 0, $$113 = 0, $$114 = 0, $$1211 = 0, $$1212 = 0, $$byval_copy = 0, $$phi$trans$insert$pre$phiZZZZ2D = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre15 = 0, $$pre7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__atoms = 0, $__loc = 0, $__nbuf = 0, $__nc$0 = 0, $__nc$1 = 0;
 var $__nc$2$lcssa = 0, $__nc$217 = 0, $__neg = 0, $__w$018 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 24|0;
 $vararg_buffer = sp;
 $__wbuf = sp + 140|0;
 $__wb = sp + 16|0;
 $__wn = sp + 12|0;
 $__loc = sp + 8|0;
 $__neg = sp + 138|0;
 $0 = sp + 4|0;
 $__atoms = sp + 128|0;
 $__nbuf = sp + 28|0;
 $1 = $__wbuf;
 HEAP32[$__wb>>2] = $1;
 $2 = ((($__wb)) + 4|0);
 HEAP32[$2>>2] = (445);
 $3 = ((($__wbuf)) + 100|0);
 __THREW__ = 0;
 $4 = (invoke_ii(357,($__iob|0))|0);
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if ($6) {
  $33 = ___cxa_find_matching_catch()|0;
  $34 = tempRet0;
  HEAP32[$__wb>>2] = 0;
  $$113 = $33;$$1211 = $34;$119 = 445;$120 = $__wbuf;
  label = 45;
 } else {
  HEAP32[$__loc>>2] = $4;
  __THREW__ = 0;
  $7 = (invoke_iii(355,($__loc|0),(10392|0))|0);
  $8 = __THREW__; __THREW__ = 0;
  $9 = $8&1;
  L4: do {
   if ($9) {
    label = 10;
   } else {
    HEAP8[$__neg>>0] = 0;
    $10 = HEAP32[$__e>>2]|0;
    HEAP32[$0>>2] = $10;
    $11 = ((($__iob)) + 4|0);
    $12 = HEAP32[$11>>2]|0;
    __THREW__ = 0;
    ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
    $13 = (invoke_iiiiiiiiiiii(446,($__b|0),($$byval_copy|0),($__intl|0),($__loc|0),($12|0),($__err|0),($__neg|0),($7|0),($__wb|0),($__wn|0),($3|0))|0);
    $14 = __THREW__; __THREW__ = 0;
    $15 = $14&1;
    if ($15) {
     label = 10;
    } else {
     L7: do {
      if ($13) {
       $16 = HEAP32[$7>>2]|0;
       $17 = ((($16)) + 32|0);
       $18 = HEAP32[$17>>2]|0;
       __THREW__ = 0;
       (invoke_iiiii($18|0,($7|0),(26097|0),((26107)|0),($__atoms|0))|0);
       $19 = __THREW__; __THREW__ = 0;
       $20 = $19&1;
       if ($20) {
        label = 10;
        break L4;
       }
       $21 = HEAP32[$__wn>>2]|0;
       $22 = HEAP32[$__wb>>2]|0;
       $23 = $21;
       $24 = $22;
       $25 = (($23) - ($24))|0;
       $26 = ($25|0)>(98);
       if ($26) {
        $27 = (($25) + 2)|0;
        $28 = (_malloc($27)|0);
        $29 = $28;
        $30 = ($28|0)==(0|0);
        if ($30) {
         __THREW__ = 0;
         invoke_v(435);
         $31 = __THREW__; __THREW__ = 0;
         $32 = $31&1;
         if ($32) {
          $40 = $29;
         } else {
          $74 = $29;$__nc$0 = 0;
          label = 13;
         }
        } else {
         $74 = $29;$__nc$0 = $28;
         label = 13;
        }
       } else {
        $74 = 0;$__nc$0 = $__nbuf;
        label = 13;
       }
       do {
        if ((label|0) == 13) {
         $42 = HEAP8[$__neg>>0]|0;
         $43 = ($42<<24>>24)==(0);
         if ($43) {
          $__nc$1 = $__nc$0;
         } else {
          $44 = ((($__nc$0)) + 1|0);
          HEAP8[$__nc$0>>0] = 45;
          $__nc$1 = $44;
         }
         $45 = ((($__atoms)) + 10|0);
         $46 = $__atoms;
         $47 = ($22>>>0)<($21>>>0);
         if ($47) {
          $48 = ((($__atoms)) + 1|0);
          $49 = ((($48)) + 1|0);
          $50 = ((($49)) + 1|0);
          $51 = ((($50)) + 1|0);
          $52 = ((($51)) + 1|0);
          $53 = ((($52)) + 1|0);
          $54 = ((($53)) + 1|0);
          $55 = ((($54)) + 1|0);
          $56 = ((($55)) + 1|0);
          $__nc$217 = $__nc$1;$__w$018 = $22;
          while(1) {
           $57 = HEAP8[$__w$018>>0]|0;
           $58 = HEAP8[$__atoms>>0]|0;
           $59 = ($58<<24>>24)==($57<<24>>24);
           do {
            if ($59) {
             $$0$lcssa$i = $__atoms;
            } else {
             $60 = HEAP8[$48>>0]|0;
             $61 = ($60<<24>>24)==($57<<24>>24);
             if ($61) {
              $$0$lcssa$i = $48;
             } else {
              $125 = HEAP8[$49>>0]|0;
              $126 = ($125<<24>>24)==($57<<24>>24);
              if ($126) {
               $$0$lcssa$i = $49;
              } else {
               $127 = HEAP8[$50>>0]|0;
               $128 = ($127<<24>>24)==($57<<24>>24);
               if ($128) {
                $$0$lcssa$i = $50;
               } else {
                $129 = HEAP8[$51>>0]|0;
                $130 = ($129<<24>>24)==($57<<24>>24);
                if ($130) {
                 $$0$lcssa$i = $51;
                } else {
                 $131 = HEAP8[$52>>0]|0;
                 $132 = ($131<<24>>24)==($57<<24>>24);
                 if ($132) {
                  $$0$lcssa$i = $52;
                  break;
                 }
                 $133 = HEAP8[$53>>0]|0;
                 $134 = ($133<<24>>24)==($57<<24>>24);
                 if ($134) {
                  $$0$lcssa$i = $53;
                  break;
                 }
                 $135 = HEAP8[$54>>0]|0;
                 $136 = ($135<<24>>24)==($57<<24>>24);
                 if ($136) {
                  $$0$lcssa$i = $54;
                  break;
                 }
                 $137 = HEAP8[$55>>0]|0;
                 $138 = ($137<<24>>24)==($57<<24>>24);
                 if ($138) {
                  $$0$lcssa$i = $55;
                  break;
                 }
                 $139 = HEAP8[$56>>0]|0;
                 $140 = ($139<<24>>24)==($57<<24>>24);
                 $$ = $140 ? $56 : $45;
                 $$0$lcssa$i = $$;
                }
               }
              }
             }
            }
           } while(0);
           $62 = $$0$lcssa$i;
           $63 = (($62) - ($46))|0;
           $64 = (26097 + ($63)|0);
           $65 = HEAP8[$64>>0]|0;
           HEAP8[$__nc$217>>0] = $65;
           $66 = ((($__w$018)) + 1|0);
           $67 = ((($__nc$217)) + 1|0);
           $$pre = HEAP32[$__wn>>2]|0;
           $68 = ($66>>>0)<($$pre>>>0);
           if ($68) {
            $__nc$217 = $67;$__w$018 = $66;
           } else {
            $__nc$2$lcssa = $67;
            break;
           }
          }
         } else {
          $__nc$2$lcssa = $__nc$1;
         }
         HEAP8[$__nc$2$lcssa>>0] = 0;
         HEAP32[$vararg_buffer>>2] = $__v;
         $69 = (_sscanf($__nbuf,26108,$vararg_buffer)|0);
         $70 = ($69|0)==(1);
         if (!($70)) {
          __THREW__ = 0;
          invoke_vi(447,(26112|0));
          $71 = __THREW__; __THREW__ = 0;
          $72 = $71&1;
          if ($72) {
           $40 = $74;
           break;
          }
         }
         $73 = ($74|0)==(0);
         if (!($73)) {
          $75 = $74;
          _free($75);
         }
         break L7;
        }
       } while(0);
       $37 = ___cxa_find_matching_catch()|0;
       $38 = tempRet0;
       $39 = ($40|0)==(0);
       if ($39) {
        $$0 = $37;$$01 = $38;$$phi$trans$insert$pre$phiZZZZ2D = $__wb;
        break L4;
       }
       $41 = $40;
       _free($41);
       $$0 = $37;$$01 = $38;$$phi$trans$insert$pre$phiZZZZ2D = $__wb;
       break L4;
      }
     } while(0);
     $76 = HEAP32[$__b>>2]|0;
     $77 = ($76|0)==(0|0);
     do {
      if ($77) {
       $91 = 0;
      } else {
       $78 = ((($76)) + 12|0);
       $79 = HEAP32[$78>>2]|0;
       $80 = ((($76)) + 16|0);
       $81 = HEAP32[$80>>2]|0;
       $82 = ($79|0)==($81|0);
       if ($82) {
        $83 = HEAP32[$76>>2]|0;
        $84 = ((($83)) + 36|0);
        $85 = HEAP32[$84>>2]|0;
        __THREW__ = 0;
        $86 = (invoke_ii($85|0,($76|0))|0);
        $87 = __THREW__; __THREW__ = 0;
        $88 = $87&1;
        if ($88) {
         label = 10;
         break L4;
        }
        $89 = ($86|0)==(-1);
        if ($89) {
         HEAP32[$__b>>2] = 0;
         $91 = 0;
         break;
        } else {
         $$pre$i$i$i = HEAP32[$__b>>2]|0;
         $91 = $$pre$i$i$i;
         break;
        }
       } else {
        $91 = $76;
       }
      }
     } while(0);
     $90 = ($91|0)==(0|0);
     $92 = HEAP32[$__e>>2]|0;
     $93 = ($92|0)==(0|0);
     do {
      if ($93) {
       label = 37;
      } else {
       $94 = ((($92)) + 12|0);
       $95 = HEAP32[$94>>2]|0;
       $96 = ((($92)) + 16|0);
       $97 = HEAP32[$96>>2]|0;
       $98 = ($95|0)==($97|0);
       if ($98) {
        $99 = HEAP32[$92>>2]|0;
        $100 = ((($99)) + 36|0);
        $101 = HEAP32[$100>>2]|0;
        __THREW__ = 0;
        $102 = (invoke_ii($101|0,($92|0))|0);
        $103 = __THREW__; __THREW__ = 0;
        $104 = $103&1;
        if ($104) {
         label = 10;
         break L4;
        }
        $105 = ($102|0)==(-1);
        if ($105) {
         HEAP32[$__e>>2] = 0;
         label = 37;
         break;
        }
       }
       if (!($90)) {
        label = 38;
       }
      }
     } while(0);
     if ((label|0) == 37) {
      if ($90) {
       label = 38;
      }
     }
     if ((label|0) == 38) {
      $106 = HEAP32[$__err>>2]|0;
      $107 = $106 | 2;
      HEAP32[$__err>>2] = $107;
     }
     $108 = HEAP32[$__b>>2]|0;
     $109 = HEAP32[$__loc>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($109)|0);
     $110 = HEAP32[$__wb>>2]|0;
     HEAP32[$__wb>>2] = 0;
     $111 = ($110|0)==(0|0);
     if (!($111)) {
      $112 = HEAP32[$2>>2]|0;
      __THREW__ = 0;
      invoke_vi($112|0,($110|0));
      $113 = __THREW__; __THREW__ = 0;
      $114 = $113&1;
      if ($114) {
       $115 = ___cxa_find_matching_catch(0|0)|0;
       $116 = tempRet0;
       ___clang_call_terminate($115);
       // unreachable;
      }
     }
     STACKTOP = sp;return ($108|0);
    }
   }
  } while(0);
  if ((label|0) == 10) {
   $35 = ___cxa_find_matching_catch()|0;
   $36 = tempRet0;
   $$0 = $35;$$01 = $36;$$phi$trans$insert$pre$phiZZZZ2D = $__wb;
  }
  $117 = HEAP32[$__loc>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($117)|0);
  $$pre7 = HEAP32[$$phi$trans$insert$pre$phiZZZZ2D>>2]|0;
  HEAP32[$$phi$trans$insert$pre$phiZZZZ2D>>2] = 0;
  $118 = ($$pre7|0)==(0|0);
  if ($118) {
   $$114 = $$0;$$1212 = $$01;
  } else {
   $$pre15 = HEAP32[$2>>2]|0;
   $$113 = $$0;$$1211 = $$01;$119 = $$pre15;$120 = $$pre7;
   label = 45;
  }
 }
 if ((label|0) == 45) {
  __THREW__ = 0;
  invoke_vi($119|0,($120|0));
  $121 = __THREW__; __THREW__ = 0;
  $122 = $121&1;
  if ($122) {
   $123 = ___cxa_find_matching_catch(0|0)|0;
   $124 = tempRet0;
   ___clang_call_terminate($123);
   // unreachable;
  } else {
   $$114 = $$113;$$1212 = $$1211;
  }
 }
 ___resumeException($$114|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__112__do_nothingEPv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b,$__e,$__intl,$__loc,$__flags,$__err,$__neg,$__ct,$__wb,$__wn,$__we) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__flags = $__flags|0;
 $__err = $__err|0;
 $__neg = $__neg|0;
 $__ct = $__ct|0;
 $__wb = $__wb|0;
 $__wn = $__wn|0;
 $__we = $__we|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i114 = 0, $$0$i$i121 = 0, $$0$i$i130 = 0, $$0$i$i140 = 0, $$0$i$i157 = 0, $$0$i$i42 = 0, $$0$i$i45 = 0, $$0$i$i58 = 0, $$0$i$i65 = 0, $$0$i$i68 = 0, $$0$i$i75 = 0, $$0$i$i94 = 0, $$0$i$i97 = 0, $$in340 = 0, $$lcssa = 0, $$lcssa243 = 0, $$lcssa313 = 0, $$lcssa371 = 0;
 var $$ph = 0, $$phi$trans$insert = 0, $$phi$trans$insert274 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i104 = 0, $$pre$i$i$i144 = 0, $$pre$i$i$i161 = 0, $$pre$i$i$i32 = 0, $$pre$i$i$i48 = 0, $$pre$i$i$i80 = 0, $$pre$i2$i$i108 = 0, $$pre$i2$i$i148 = 0, $$pre$i2$i$i148256 = 0, $$pre$i2$i$i148258 = 0, $$pre$i2$i$i165268 = 0, $$pre$i2$i$i165269 = 0, $$pre$i2$i$i165345 = 0, $$pre$i2$i$i52 = 0, $$pre$i2$i$i52278 = 0;
 var $$pre$i2$i$i52280 = 0, $$pre$i2$i$i84264$ph = 0, $$pre$i2$i$i84264283 = 0, $$pre$i2$i$i84336 = 0, $$pre261 = 0, $$pre263 = 0, $$pre266 = 0, $$pre267 = 0, $$pre271 = 0, $$pre272 = 0, $$pre273 = 0, $$pre275 = 0, $$pre276 = 0, $$pre277 = 0, $$sum = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0;
 var $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;
 var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0;
 var $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0;
 var $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0;
 var $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0;
 var $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0;
 var $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0;
 var $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0;
 var $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0;
 var $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0;
 var $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0;
 var $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0;
 var $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0;
 var $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0;
 var $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0;
 var $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0;
 var $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0;
 var $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0;
 var $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0;
 var $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0;
 var $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0;
 var $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0;
 var $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0;
 var $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0;
 var $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0;
 var $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0;
 var $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0;
 var $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0;
 var $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0;
 var $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0;
 var $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0;
 var $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0;
 var $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0;
 var $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0;
 var $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0, $__gn = 0, $__grp = 0, $__i$0 = 0, $__ng$0 = 0, $__ng$0$lcssa372 = 0, $__ng$1 = 0, $__nsn = 0, $__nsn$__trailing_sign$0 = 0, $__nsn$__trailing_sign$011 = 0, $__p$0353 = 0, $__pat = 0, $__psn = 0;
 var $__psn$__trailing_sign$0 = 0, $__psn$__trailing_sign$010 = 0, $__spaces = 0, $__sym = 0, $__trailing_sign$0$lcssa = 0, $__trailing_sign$0355 = 0, $__trailing_sign$1 = 0, $__ts = 0, $brmerge = 0, $cond = 0, $isascii1$i = 0, $isascii1$i138 = 0, $isascii1$i171 = 0, $isascii1$i61 = 0, $isascii1$i73 = 0, $lpad$phi$index = 0, $lpad$phi$index7 = 0, $or$cond = 0, $or$cond13 = 0, $or$cond7 = 0;
 var $or$cond9 = 0, $sext = 0, $sext210 = 0, $sext211 = 0, $sext212 = 0, $switch = 0, $tmp$i$i150 = 0, $tmp$i$i167 = 0, $tmp$i$i54 = 0, $tmp$i$i86 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 488|0;
 $__gbuf = sp + 88|0;
 $__gb = sp + 80|0;
 $__gn = sp + 72|0;
 $__ge = sp + 68|0;
 $__pat = sp + 496|0;
 $__dp = sp + 493|0;
 $__ts = sp + 492|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__psn = sp + 32|0;
 $__nsn = sp + 20|0;
 $__spaces = sp + 8|0;
 $__fd = sp + 4|0;
 $__et = sp;
 HEAP32[$0>>2] = $__we;
 $1 = $__gbuf;
 HEAP32[$__gb>>2] = $1;
 $2 = ((($__gb)) + 4|0);
 HEAP32[$2>>2] = (445);
 HEAP32[$__gn>>2] = $__gbuf;
 $3 = ((($__gbuf)) + 400|0);
 HEAP32[$__ge>>2] = $3;
 HEAP32[$__grp>>2] = 0;
 $4 = ((($__grp)) + 4|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($__grp)) + 8|0);
 HEAP32[$5>>2] = 0;
 HEAP32[$__sym>>2] = 0;
 $6 = ((($__sym)) + 4|0);
 HEAP32[$6>>2] = 0;
 $7 = ((($__sym)) + 8|0);
 HEAP32[$7>>2] = 0;
 HEAP32[$__psn>>2] = 0;
 $8 = ((($__psn)) + 4|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($__psn)) + 8|0);
 HEAP32[$9>>2] = 0;
 HEAP32[$__nsn>>2] = 0;
 $10 = ((($__nsn)) + 4|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($__nsn)) + 8|0);
 HEAP32[$11>>2] = 0;
 HEAP32[$__spaces>>2] = 0;
 $12 = ((($__spaces)) + 4|0);
 HEAP32[$12>>2] = 0;
 $13 = ((($__spaces)) + 8|0);
 HEAP32[$13>>2] = 0;
 __THREW__ = 0;
 invoke_viiiiiiiiii(448,($__intl|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__psn|0),($__nsn|0),($__fd|0));
 $14 = __THREW__; __THREW__ = 0;
 $15 = $14&1;
 L1: do {
  if ($15) {
   $80 = ___cxa_find_matching_catch()|0;
   $81 = tempRet0;
   $lpad$phi$index = $80;$lpad$phi$index7 = $81;
  } else {
   $16 = HEAP32[$__wb>>2]|0;
   HEAP32[$__wn>>2] = $16;
   $17 = ((($__ct)) + 8|0);
   $18 = ((($__psn)) + 4|0);
   $19 = ((($__nsn)) + 4|0);
   $20 = ((($__nsn)) + 8|0);
   $21 = ((($__nsn)) + 1|0);
   $22 = ((($__psn)) + 8|0);
   $23 = ((($__psn)) + 1|0);
   $24 = $__flags & 512;
   $25 = ($24|0)!=(0);
   $26 = ((($__sym)) + 8|0);
   $27 = ((($__sym)) + 1|0);
   $28 = ((($__sym)) + 4|0);
   $29 = ((($__spaces)) + 4|0);
   $30 = ((($__spaces)) + 8|0);
   $31 = ((($__spaces)) + 1|0);
   $32 = ((($__pat)) + 3|0);
   $33 = ((($__grp)) + 4|0);
   $876 = $__gbuf;$__p$0353 = 0;$__trailing_sign$0355 = 0;
   L4: while(1) {
    $34 = HEAP32[$__b>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      $49 = 0;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = ((($41)) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 24;
        break L4;
       }
       $47 = ($44|0)==(-1);
       if ($47) {
        HEAP32[$__b>>2] = 0;
        $49 = 0;
        break;
       } else {
        $$pre$i$i$i32 = HEAP32[$__b>>2]|0;
        $49 = $$pre$i$i$i32;
        break;
       }
      } else {
       $49 = $34;
      }
     }
    } while(0);
    $48 = ($49|0)==(0|0);
    $50 = HEAP32[$__e>>2]|0;
    $51 = ($50|0)==(0|0);
    do {
     if ($51) {
      label = 15;
     } else {
      $52 = ((($50)) + 12|0);
      $53 = HEAP32[$52>>2]|0;
      $54 = ((($50)) + 16|0);
      $55 = HEAP32[$54>>2]|0;
      $56 = ($53|0)==($55|0);
      if (!($56)) {
       if ($48) {
        $877 = $50;
        break;
       } else {
        $$lcssa313 = $876;$__trailing_sign$0$lcssa = $__trailing_sign$0355;
        label = 235;
        break L4;
       }
      }
      $57 = HEAP32[$50>>2]|0;
      $58 = ((($57)) + 36|0);
      $59 = HEAP32[$58>>2]|0;
      __THREW__ = 0;
      $60 = (invoke_ii($59|0,($50|0))|0);
      $61 = __THREW__; __THREW__ = 0;
      $62 = $61&1;
      if ($62) {
       label = 24;
       break L4;
      }
      $63 = ($60|0)==(-1);
      if ($63) {
       HEAP32[$__e>>2] = 0;
       label = 15;
       break;
      } else {
       if ($48) {
        $877 = $50;
        break;
       } else {
        $$lcssa313 = $876;$__trailing_sign$0$lcssa = $__trailing_sign$0355;
        label = 235;
        break L4;
       }
      }
     }
    } while(0);
    if ((label|0) == 15) {
     label = 0;
     if ($48) {
      $$lcssa313 = $876;$__trailing_sign$0$lcssa = $__trailing_sign$0355;
      label = 235;
      break;
     } else {
      $877 = 0;
     }
    }
    $64 = (($__pat) + ($__p$0353)|0);
    $65 = HEAP8[$64>>0]|0;
    $66 = $65 << 24 >> 24;
    L26: do {
     switch ($66|0) {
     case 1:  {
      $cond = ($__p$0353|0)==(3);
      if ($cond) {
       $878 = $876;$__trailing_sign$1 = $__trailing_sign$0355;
      } else {
       $89 = HEAP32[$__b>>2]|0;
       $90 = ((($89)) + 12|0);
       $91 = HEAP32[$90>>2]|0;
       $92 = ((($89)) + 16|0);
       $93 = HEAP32[$92>>2]|0;
       $94 = ($91|0)==($93|0);
       if ($94) {
        $95 = HEAP32[$89>>2]|0;
        $96 = ((($95)) + 36|0);
        $97 = HEAP32[$96>>2]|0;
        __THREW__ = 0;
        $98 = (invoke_ii($97|0,($89|0))|0);
        $99 = __THREW__; __THREW__ = 0;
        $100 = $99&1;
        if ($100) {
         label = 24;
         break L4;
        } else {
         $$0$i$i42 = $98;
        }
       } else {
        $101 = HEAP8[$91>>0]|0;
        $102 = $101&255;
        $$0$i$i42 = $102;
       }
       $103 = $$0$i$i42&255;
       $isascii1$i = ($103<<24>>24)>(-1);
       if (!($isascii1$i)) {
        label = 40;
        break L4;
       }
       $sext212 = $$0$i$i42 << 24;
       $104 = $sext212 >> 24;
       $105 = HEAP32[$17>>2]|0;
       $106 = (($105) + ($104<<1)|0);
       $107 = HEAP16[$106>>1]|0;
       $108 = $107 & 8192;
       $109 = ($108<<16>>16)==(0);
       if ($109) {
        label = 40;
        break L4;
       }
       $110 = HEAP32[$__b>>2]|0;
       $111 = ((($110)) + 12|0);
       $112 = HEAP32[$111>>2]|0;
       $113 = ((($110)) + 16|0);
       $114 = HEAP32[$113>>2]|0;
       $115 = ($112|0)==($114|0);
       if ($115) {
        $116 = HEAP32[$110>>2]|0;
        $117 = ((($116)) + 40|0);
        $118 = HEAP32[$117>>2]|0;
        __THREW__ = 0;
        $119 = (invoke_ii($118|0,($110|0))|0);
        $120 = __THREW__; __THREW__ = 0;
        $121 = $120&1;
        if ($121) {
         label = 24;
         break L4;
        } else {
         $$0$i$i45 = $119;
        }
       } else {
        $122 = ((($112)) + 1|0);
        HEAP32[$111>>2] = $122;
        $123 = HEAP8[$112>>0]|0;
        $124 = $123&255;
        $$0$i$i45 = $124;
       }
       $125 = $$0$i$i45&255;
       __THREW__ = 0;
       invoke_vii(449,($__spaces|0),($125|0));
       $126 = __THREW__; __THREW__ = 0;
       $127 = $126&1;
       if ($127) {
        label = 24;
        break L4;
       } else {
        $$pre$i2$i$i52 = $877;$148 = $877;
        label = 42;
       }
      }
      break;
     }
     case 0:  {
      $130 = ($__p$0353|0)==(3);
      if ($130) {
       $878 = $876;$__trailing_sign$1 = $__trailing_sign$0355;
      } else {
       $$pre$i2$i$i52 = $877;$148 = $877;
       label = 42;
      }
      break;
     }
     case 3:  {
      $201 = HEAP8[$__psn>>0]|0;
      $202 = $201 & 1;
      $203 = ($202<<24>>24)==(0);
      $204 = HEAP32[$18>>2]|0;
      $205 = $201&255;
      $206 = $205 >>> 1;
      $207 = $203 ? $206 : $204;
      $208 = HEAP8[$__nsn>>0]|0;
      $209 = $208 & 1;
      $210 = ($209<<24>>24)==(0);
      $211 = HEAP32[$19>>2]|0;
      $212 = $208&255;
      $213 = $212 >>> 1;
      $214 = $210 ? $213 : $211;
      $215 = (0 - ($214))|0;
      $216 = ($207|0)==($215|0);
      if ($216) {
       $878 = $876;$__trailing_sign$1 = $__trailing_sign$0355;
      } else {
       $217 = ($207|0)==(0);
       if ($217) {
        $261 = HEAP32[$__b>>2]|0;
        $262 = ((($261)) + 12|0);
        $263 = HEAP32[$262>>2]|0;
        $264 = ((($261)) + 16|0);
        $265 = HEAP32[$264>>2]|0;
        $266 = ($263|0)==($265|0);
        if ($266) {
         $267 = HEAP32[$261>>2]|0;
         $268 = ((($267)) + 36|0);
         $269 = HEAP32[$268>>2]|0;
         __THREW__ = 0;
         $270 = (invoke_ii($269|0,($261|0))|0);
         $271 = __THREW__; __THREW__ = 0;
         $272 = $271&1;
         if ($272) {
          label = 24;
          break L4;
         }
         $$pre277 = HEAP8[$__nsn>>0]|0;
         $$0$i$i114 = $270;$277 = $$pre277;
        } else {
         $273 = HEAP8[$263>>0]|0;
         $274 = $273&255;
         $$0$i$i114 = $274;$277 = $208;
        }
        $275 = $$0$i$i114&255;
        $276 = $277 & 1;
        $278 = ($276<<24>>24)==(0);
        $279 = HEAP32[$20>>2]|0;
        $280 = $278 ? $21 : $279;
        $281 = HEAP8[$280>>0]|0;
        $282 = ($275<<24>>24)==($281<<24>>24);
        if (!($282)) {
         $878 = $876;$__trailing_sign$1 = $__trailing_sign$0355;
         break L26;
        }
        $283 = HEAP32[$__b>>2]|0;
        $284 = ((($283)) + 12|0);
        $285 = HEAP32[$284>>2]|0;
        $286 = ((($283)) + 16|0);
        $287 = HEAP32[$286>>2]|0;
        $288 = ($285|0)==($287|0);
        if ($288) {
         $289 = HEAP32[$283>>2]|0;
         $290 = ((($289)) + 40|0);
         $291 = HEAP32[$290>>2]|0;
         __THREW__ = 0;
         (invoke_ii($291|0,($283|0))|0);
         $292 = __THREW__; __THREW__ = 0;
         $293 = $292&1;
         if ($293) {
          label = 24;
          break L4;
         }
        } else {
         $294 = ((($285)) + 1|0);
         HEAP32[$284>>2] = $294;
        }
        HEAP8[$__neg>>0] = 1;
        $295 = HEAP8[$__nsn>>0]|0;
        $296 = $295 & 1;
        $297 = ($296<<24>>24)==(0);
        $298 = HEAP32[$19>>2]|0;
        $299 = $295&255;
        $300 = $299 >>> 1;
        $301 = $297 ? $300 : $298;
        $302 = ($301>>>0)>(1);
        $__nsn$__trailing_sign$0 = $302 ? $__nsn : $__trailing_sign$0355;
        $878 = $876;$__trailing_sign$1 = $__nsn$__trailing_sign$0;
        break L26;
       }
       $218 = ($214|0)==(0);
       $219 = HEAP32[$__b>>2]|0;
       $220 = ((($219)) + 12|0);
       $221 = HEAP32[$220>>2]|0;
       $222 = ((($219)) + 16|0);
       $223 = HEAP32[$222>>2]|0;
       $224 = ($221|0)==($223|0);
       if ($218) {
        if ($224) {
         $225 = HEAP32[$219>>2]|0;
         $226 = ((($225)) + 36|0);
         $227 = HEAP32[$226>>2]|0;
         __THREW__ = 0;
         $228 = (invoke_ii($227|0,($219|0))|0);
         $229 = __THREW__; __THREW__ = 0;
         $230 = $229&1;
         if ($230) {
          label = 24;
          break L4;
         }
         $$pre276 = HEAP8[$__psn>>0]|0;
         $$0$i$i94 = $228;$235 = $$pre276;
        } else {
         $231 = HEAP8[$221>>0]|0;
         $232 = $231&255;
         $$0$i$i94 = $232;$235 = $201;
        }
        $233 = $$0$i$i94&255;
        $234 = $235 & 1;
        $236 = ($234<<24>>24)==(0);
        $237 = HEAP32[$22>>2]|0;
        $238 = $236 ? $23 : $237;
        $239 = HEAP8[$238>>0]|0;
        $240 = ($233<<24>>24)==($239<<24>>24);
        if (!($240)) {
         HEAP8[$__neg>>0] = 1;
         $878 = $876;$__trailing_sign$1 = $__trailing_sign$0355;
         break L26;
        }
        $241 = HEAP32[$__b>>2]|0;
        $242 = ((($241)) + 12|0);
        $243 = HEAP32[$242>>2]|0;
        $244 = ((($241)) + 16|0);
        $245 = HEAP32[$244>>2]|0;
        $246 = ($243|0)==($245|0);
        if ($246) {
         $247 = HEAP32[$241>>2]|0;
         $248 = ((($247)) + 40|0);
         $249 = HEAP32[$248>>2]|0;
         __THREW__ = 0;
         (invoke_ii($249|0,($241|0))|0);
         $250 = __THREW__; __THREW__ = 0;
         $251 = $250&1;
         if ($251) {
          label = 24;
          break L4;
         }
        } else {
         $252 = ((($243)) + 1|0);
         HEAP32[$242>>2] = $252;
        }
        $253 = HEAP8[$__psn>>0]|0;
        $254 = $253 & 1;
        $255 = ($254<<24>>24)==(0);
        $256 = HEAP32[$18>>2]|0;
        $257 = $253&255;
        $258 = $257 >>> 1;
        $259 = $255 ? $258 : $256;
        $260 = ($259>>>0)>(1);
        $__psn$__trailing_sign$0 = $260 ? $__psn : $__trailing_sign$0355;
        $878 = $876;$__trailing_sign$1 = $__psn$__trailing_sign$0;
        break L26;
       }
       if ($224) {
        $303 = HEAP32[$219>>2]|0;
        $304 = ((($303)) + 36|0);
        $305 = HEAP32[$304>>2]|0;
        __THREW__ = 0;
        $306 = (invoke_ii($305|0,($219|0))|0);
        $307 = __THREW__; __THREW__ = 0;
        $308 = $307&1;
        if ($308) {
         label = 24;
         break L4;
        }
        $$pre271 = HEAP8[$__psn>>0]|0;
        $$pre272 = HEAP32[$__b>>2]|0;
        $$phi$trans$insert = ((($$pre272)) + 12|0);
        $$pre273 = HEAP32[$$phi$trans$insert>>2]|0;
        $$phi$trans$insert274 = ((($$pre272)) + 16|0);
        $$pre275 = HEAP32[$$phi$trans$insert274>>2]|0;
        $$0$i$i121 = $306;$313 = $$pre271;$320 = $$pre272;$322 = $$pre273;$323 = $$pre275;
       } else {
        $309 = HEAP8[$221>>0]|0;
        $310 = $309&255;
        $$0$i$i121 = $310;$313 = $201;$320 = $219;$322 = $221;$323 = $223;
       }
       $311 = $$0$i$i121&255;
       $312 = $313 & 1;
       $314 = ($312<<24>>24)==(0);
       $315 = HEAP32[$22>>2]|0;
       $316 = $314 ? $23 : $315;
       $317 = HEAP8[$316>>0]|0;
       $318 = ($311<<24>>24)==($317<<24>>24);
       $319 = ((($320)) + 12|0);
       $321 = ($322|0)==($323|0);
       if ($318) {
        if ($321) {
         $324 = HEAP32[$320>>2]|0;
         $325 = ((($324)) + 40|0);
         $326 = HEAP32[$325>>2]|0;
         __THREW__ = 0;
         (invoke_ii($326|0,($320|0))|0);
         $327 = __THREW__; __THREW__ = 0;
         $328 = $327&1;
         if ($328) {
          label = 24;
          break L4;
         }
        } else {
         $329 = ((($322)) + 1|0);
         HEAP32[$319>>2] = $329;
        }
        $330 = HEAP8[$__psn>>0]|0;
        $331 = $330 & 1;
        $332 = ($331<<24>>24)==(0);
        $333 = HEAP32[$18>>2]|0;
        $334 = $330&255;
        $335 = $334 >>> 1;
        $336 = $332 ? $335 : $333;
        $337 = ($336>>>0)>(1);
        $__psn$__trailing_sign$010 = $337 ? $__psn : $__trailing_sign$0355;
        $878 = $876;$__trailing_sign$1 = $__psn$__trailing_sign$010;
        break L26;
       }
       if ($321) {
        $338 = HEAP32[$320>>2]|0;
        $339 = ((($338)) + 36|0);
        $340 = HEAP32[$339>>2]|0;
        __THREW__ = 0;
        $341 = (invoke_ii($340|0,($320|0))|0);
        $342 = __THREW__; __THREW__ = 0;
        $343 = $342&1;
        if ($343) {
         label = 24;
         break L4;
        } else {
         $$0$i$i130 = $341;
        }
       } else {
        $344 = HEAP8[$322>>0]|0;
        $345 = $344&255;
        $$0$i$i130 = $345;
       }
       $346 = $$0$i$i130&255;
       $347 = HEAP8[$__nsn>>0]|0;
       $348 = $347 & 1;
       $349 = ($348<<24>>24)==(0);
       $350 = HEAP32[$20>>2]|0;
       $351 = $349 ? $21 : $350;
       $352 = HEAP8[$351>>0]|0;
       $353 = ($346<<24>>24)==($352<<24>>24);
       if (!($353)) {
        label = 104;
        break L4;
       }
       $354 = HEAP32[$__b>>2]|0;
       $355 = ((($354)) + 12|0);
       $356 = HEAP32[$355>>2]|0;
       $357 = ((($354)) + 16|0);
       $358 = HEAP32[$357>>2]|0;
       $359 = ($356|0)==($358|0);
       if ($359) {
        $360 = HEAP32[$354>>2]|0;
        $361 = ((($360)) + 40|0);
        $362 = HEAP32[$361>>2]|0;
        __THREW__ = 0;
        (invoke_ii($362|0,($354|0))|0);
        $363 = __THREW__; __THREW__ = 0;
        $364 = $363&1;
        if ($364) {
         label = 24;
         break L4;
        }
       } else {
        $365 = ((($356)) + 1|0);
        HEAP32[$355>>2] = $365;
       }
       HEAP8[$__neg>>0] = 1;
       $366 = HEAP8[$__nsn>>0]|0;
       $367 = $366 & 1;
       $368 = ($367<<24>>24)==(0);
       $369 = HEAP32[$19>>2]|0;
       $370 = $366&255;
       $371 = $370 >>> 1;
       $372 = $368 ? $371 : $369;
       $373 = ($372>>>0)>(1);
       $__nsn$__trailing_sign$011 = $373 ? $__nsn : $__trailing_sign$0355;
       $878 = $876;$__trailing_sign$1 = $__nsn$__trailing_sign$011;
      }
      break;
     }
     case 2:  {
      $376 = ($__trailing_sign$0355|0)!=(0|0);
      $377 = ($__p$0353>>>0)<(2);
      $or$cond = $377 | $376;
      if (!($or$cond)) {
       $378 = ($__p$0353|0)==(2);
       $379 = HEAP8[$32>>0]|0;
       $380 = ($379<<24>>24)!=(0);
       $381 = $378 & $380;
       $brmerge = $25 | $381;
       if (!($brmerge)) {
        $878 = $876;$__trailing_sign$1 = 0;
        break L26;
       }
      }
      $382 = HEAP8[$__sym>>0]|0;
      $383 = $382 & 1;
      $384 = ($383<<24>>24)==(0);
      $385 = HEAP32[$26>>2]|0;
      $386 = $384 ? $27 : $385;
      $387 = $386;
      $388 = ($__p$0353|0)==(0);
      L95: do {
       if ($388) {
        $$ph = $387;
       } else {
        $399 = (($__p$0353) + -1)|0;
        $400 = (($__pat) + ($399)|0);
        $401 = HEAP8[$400>>0]|0;
        $switch = ($401&255)<(2);
        if ($switch) {
         $402 = HEAP32[$28>>2]|0;
         $403 = $382&255;
         $404 = $403 >>> 1;
         $405 = $384 ? $404 : $402;
         $406 = (($386) + ($405)|0);
         $407 = HEAP32[$17>>2]|0;
         $408 = ($405|0)==(0);
         L98: do {
          if ($408) {
           $$lcssa = $387;
          } else {
           $410 = $386;$880 = $387;
           while(1) {
            $409 = HEAP8[$410>>0]|0;
            $isascii1$i171 = ($409<<24>>24)>(-1);
            if (!($isascii1$i171)) {
             $$lcssa = $880;
             break L98;
            }
            $411 = $409 << 24 >> 24;
            $412 = (($407) + ($411<<1)|0);
            $413 = HEAP16[$412>>1]|0;
            $414 = $413 & 8192;
            $415 = ($414<<16>>16)==(0);
            if ($415) {
             $$lcssa = $880;
             break L98;
            }
            $416 = ((($410)) + 1|0);
            $417 = $416;
            $418 = ($416|0)==($406|0);
            if ($418) {
             $$lcssa = $417;
             break;
            } else {
             $410 = $416;$880 = $417;
            }
           }
          }
         } while(0);
         $419 = (($$lcssa) - ($387))|0;
         $420 = HEAP8[$__spaces>>0]|0;
         $421 = $420 & 1;
         $422 = ($421<<24>>24)==(0);
         $423 = HEAP32[$29>>2]|0;
         $424 = $420&255;
         $425 = $424 >>> 1;
         $426 = $422 ? $425 : $423;
         $427 = ($426>>>0)<($419>>>0);
         if ($427) {
          $$ph = $387;
         } else {
          $428 = HEAP32[$30>>2]|0;
          $429 = $422 ? $31 : $428;
          $430 = (($429) + ($426)|0);
          $431 = ($$lcssa|0)==($387|0);
          if ($431) {
           $$ph = $$lcssa;
          } else {
           $$sum = (($426) - ($419))|0;
           $432 = (($429) + ($$sum)|0);
           $$in340 = $386;$434 = $432;
           while(1) {
            $433 = HEAP8[$434>>0]|0;
            $435 = HEAP8[$$in340>>0]|0;
            $436 = ($433<<24>>24)==($435<<24>>24);
            if (!($436)) {
             $$ph = $387;
             break L95;
            }
            $437 = ((($434)) + 1|0);
            $438 = ((($$in340)) + 1|0);
            $439 = ($437|0)==($430|0);
            if ($439) {
             $$ph = $$lcssa;
             break;
            } else {
             $$in340 = $438;$434 = $437;
            }
           }
          }
         }
        } else {
         $$ph = $387;
        }
       }
      } while(0);
      $389 = $382 & 1;
      $390 = ($389<<24>>24)==(0);
      $391 = HEAP32[$28>>2]|0;
      $392 = $382&255;
      $393 = $392 >>> 1;
      $394 = $390 ? $27 : $385;
      $395 = $390 ? $393 : $391;
      $396 = (($394) + ($395)|0);
      $397 = $$ph;
      $398 = ($397|0)==($396|0);
      L110: do {
       if ($398) {
        $$lcssa243 = $396;
       } else {
        $$pre$i2$i$i165345 = $877;$457 = $877;$487 = $397;
        while(1) {
         $440 = HEAP32[$__b>>2]|0;
         $441 = ($440|0)==(0|0);
         do {
          if ($441) {
           $455 = 0;
          } else {
           $442 = ((($440)) + 12|0);
           $443 = HEAP32[$442>>2]|0;
           $444 = ((($440)) + 16|0);
           $445 = HEAP32[$444>>2]|0;
           $446 = ($443|0)==($445|0);
           if ($446) {
            $447 = HEAP32[$440>>2]|0;
            $448 = ((($447)) + 36|0);
            $449 = HEAP32[$448>>2]|0;
            __THREW__ = 0;
            $450 = (invoke_ii($449|0,($440|0))|0);
            $451 = __THREW__; __THREW__ = 0;
            $452 = $451&1;
            if ($452) {
             label = 21;
             break L4;
            }
            $453 = ($450|0)==(-1);
            if ($453) {
             HEAP32[$__b>>2] = 0;
             $455 = 0;
             break;
            } else {
             $$pre$i$i$i161 = HEAP32[$__b>>2]|0;
             $455 = $$pre$i$i$i161;
             break;
            }
           } else {
            $455 = $440;
           }
          }
         } while(0);
         $454 = ($455|0)==(0|0);
         $456 = ($457|0)==(0|0);
         do {
          if ($456) {
           $$pre$i2$i$i165269 = $$pre$i2$i$i165345;
           label = 131;
          } else {
           $458 = ((($457)) + 12|0);
           $459 = HEAP32[$458>>2]|0;
           $460 = ((($457)) + 16|0);
           $461 = HEAP32[$460>>2]|0;
           $462 = ($459|0)==($461|0);
           if (!($462)) {
            if ($454) {
             $$pre$i2$i$i165268 = $$pre$i2$i$i165345;$881 = $457;
             break;
            } else {
             $$lcssa243 = $487;
             break L110;
            }
           }
           $463 = HEAP32[$457>>2]|0;
           $464 = ((($463)) + 36|0);
           $465 = HEAP32[$464>>2]|0;
           __THREW__ = 0;
           $466 = (invoke_ii($465|0,($457|0))|0);
           $467 = __THREW__; __THREW__ = 0;
           $468 = $467&1;
           if ($468) {
            label = 21;
            break L4;
           }
           $469 = ($466|0)==(-1);
           if ($469) {
            HEAP32[$__e>>2] = 0;
            $$pre$i2$i$i165269 = 0;
            label = 131;
            break;
           } else {
            $470 = ($$pre$i2$i$i165345|0)==(0|0);
            $tmp$i$i167 = $454 ^ $470;
            if ($tmp$i$i167) {
             $$pre$i2$i$i165268 = $$pre$i2$i$i165345;$881 = $$pre$i2$i$i165345;
             break;
            } else {
             $$lcssa243 = $487;
             break L110;
            }
           }
          }
         } while(0);
         if ((label|0) == 131) {
          label = 0;
          if ($454) {
           $$lcssa243 = $487;
           break L110;
          } else {
           $$pre$i2$i$i165268 = $$pre$i2$i$i165269;$881 = 0;
          }
         }
         $471 = HEAP32[$__b>>2]|0;
         $472 = ((($471)) + 12|0);
         $473 = HEAP32[$472>>2]|0;
         $474 = ((($471)) + 16|0);
         $475 = HEAP32[$474>>2]|0;
         $476 = ($473|0)==($475|0);
         if ($476) {
          $477 = HEAP32[$471>>2]|0;
          $478 = ((($477)) + 36|0);
          $479 = HEAP32[$478>>2]|0;
          __THREW__ = 0;
          $480 = (invoke_ii($479|0,($471|0))|0);
          $481 = __THREW__; __THREW__ = 0;
          $482 = $481&1;
          if ($482) {
           label = 21;
           break L4;
          } else {
           $$0$i$i157 = $480;
          }
         } else {
          $483 = HEAP8[$473>>0]|0;
          $484 = $483&255;
          $$0$i$i157 = $484;
         }
         $485 = $$0$i$i157&255;
         $486 = HEAP8[$487>>0]|0;
         $488 = ($485<<24>>24)==($486<<24>>24);
         if (!($488)) {
          $$lcssa243 = $487;
          break L110;
         }
         $489 = HEAP32[$__b>>2]|0;
         $490 = ((($489)) + 12|0);
         $491 = HEAP32[$490>>2]|0;
         $492 = ((($489)) + 16|0);
         $493 = HEAP32[$492>>2]|0;
         $494 = ($491|0)==($493|0);
         if ($494) {
          $495 = HEAP32[$489>>2]|0;
          $496 = ((($495)) + 40|0);
          $497 = HEAP32[$496>>2]|0;
          __THREW__ = 0;
          (invoke_ii($497|0,($489|0))|0);
          $498 = __THREW__; __THREW__ = 0;
          $499 = $498&1;
          if ($499) {
           label = 21;
           break L4;
          }
         } else {
          $500 = ((($491)) + 1|0);
          HEAP32[$490>>2] = $500;
         }
         $501 = ((($487)) + 1|0);
         $$pre266 = HEAP8[$__sym>>0]|0;
         $$pre267 = HEAP32[$26>>2]|0;
         $502 = $$pre266 & 1;
         $503 = ($502<<24>>24)==(0);
         $504 = HEAP32[$28>>2]|0;
         $505 = $$pre266&255;
         $506 = $505 >>> 1;
         $507 = $503 ? $27 : $$pre267;
         $508 = $503 ? $506 : $504;
         $509 = (($507) + ($508)|0);
         $510 = ($501|0)==($509|0);
         if ($510) {
          $$lcssa243 = $509;
          break;
         } else {
          $$pre$i2$i$i165345 = $$pre$i2$i$i165268;$457 = $881;$487 = $501;
         }
        }
       }
      } while(0);
      if ($25) {
       $511 = HEAP8[$__sym>>0]|0;
       $512 = $511 & 1;
       $513 = ($512<<24>>24)==(0);
       $514 = HEAP32[$26>>2]|0;
       $515 = HEAP32[$28>>2]|0;
       $516 = $511&255;
       $517 = $516 >>> 1;
       $518 = $513 ? $27 : $514;
       $519 = $513 ? $517 : $515;
       $520 = (($518) + ($519)|0);
       $521 = ($$lcssa243|0)==($520|0);
       if ($521) {
        $878 = $876;$__trailing_sign$1 = $__trailing_sign$0355;
       } else {
        label = 143;
        break L4;
       }
      } else {
       $878 = $876;$__trailing_sign$1 = $__trailing_sign$0355;
      }
      break;
     }
     case 4:  {
      $67 = HEAP8[$__ts>>0]|0;
      $$pre$i2$i$i148 = $877;$541 = $877;$596 = $876;$__ng$0 = 0;
      L145: while(1) {
       $524 = HEAP32[$__b>>2]|0;
       $525 = ($524|0)==(0|0);
       do {
        if ($525) {
         $539 = 0;
        } else {
         $526 = ((($524)) + 12|0);
         $527 = HEAP32[$526>>2]|0;
         $528 = ((($524)) + 16|0);
         $529 = HEAP32[$528>>2]|0;
         $530 = ($527|0)==($529|0);
         if ($530) {
          $531 = HEAP32[$524>>2]|0;
          $532 = ((($531)) + 36|0);
          $533 = HEAP32[$532>>2]|0;
          __THREW__ = 0;
          $534 = (invoke_ii($533|0,($524|0))|0);
          $535 = __THREW__; __THREW__ = 0;
          $536 = $535&1;
          if ($536) {
           label = 23;
           break L4;
          }
          $537 = ($534|0)==(-1);
          if ($537) {
           HEAP32[$__b>>2] = 0;
           $539 = 0;
           break;
          } else {
           $$pre$i$i$i144 = HEAP32[$__b>>2]|0;
           $539 = $$pre$i$i$i144;
           break;
          }
         } else {
          $539 = $524;
         }
        }
       } while(0);
       $538 = ($539|0)==(0|0);
       $540 = ($541|0)==(0|0);
       do {
        if ($540) {
         $$pre$i2$i$i148256 = $$pre$i2$i$i148;
         label = 156;
        } else {
         $542 = ((($541)) + 12|0);
         $543 = HEAP32[$542>>2]|0;
         $544 = ((($541)) + 16|0);
         $545 = HEAP32[$544>>2]|0;
         $546 = ($543|0)==($545|0);
         if (!($546)) {
          if ($538) {
           $$pre$i2$i$i148258 = $$pre$i2$i$i148;$882 = $541;
           break;
          } else {
           $$lcssa371 = $596;$$pre$i2$i$i108 = $$pre$i2$i$i148;$__ng$0$lcssa372 = $__ng$0;
           break L145;
          }
         }
         $547 = HEAP32[$541>>2]|0;
         $548 = ((($547)) + 36|0);
         $549 = HEAP32[$548>>2]|0;
         __THREW__ = 0;
         $550 = (invoke_ii($549|0,($541|0))|0);
         $551 = __THREW__; __THREW__ = 0;
         $552 = $551&1;
         if ($552) {
          label = 23;
          break L4;
         }
         $553 = ($550|0)==(-1);
         if ($553) {
          HEAP32[$__e>>2] = 0;
          $$pre$i2$i$i148256 = 0;
          label = 156;
          break;
         } else {
          $554 = ($$pre$i2$i$i148|0)==(0|0);
          $tmp$i$i150 = $538 ^ $554;
          if ($tmp$i$i150) {
           $$pre$i2$i$i148258 = $$pre$i2$i$i148;$882 = $$pre$i2$i$i148;
           break;
          } else {
           $$lcssa371 = $596;$$pre$i2$i$i108 = $$pre$i2$i$i148;$__ng$0$lcssa372 = $__ng$0;
           break L145;
          }
         }
        }
       } while(0);
       if ((label|0) == 156) {
        label = 0;
        if ($538) {
         $$lcssa371 = $596;$$pre$i2$i$i108 = $$pre$i2$i$i148256;$__ng$0$lcssa372 = $__ng$0;
         break;
        } else {
         $$pre$i2$i$i148258 = $$pre$i2$i$i148256;$882 = 0;
        }
       }
       $555 = HEAP32[$__b>>2]|0;
       $556 = ((($555)) + 12|0);
       $557 = HEAP32[$556>>2]|0;
       $558 = ((($555)) + 16|0);
       $559 = HEAP32[$558>>2]|0;
       $560 = ($557|0)==($559|0);
       if ($560) {
        $561 = HEAP32[$555>>2]|0;
        $562 = ((($561)) + 36|0);
        $563 = HEAP32[$562>>2]|0;
        __THREW__ = 0;
        $564 = (invoke_ii($563|0,($555|0))|0);
        $565 = __THREW__; __THREW__ = 0;
        $566 = $565&1;
        if ($566) {
         label = 23;
         break L4;
        } else {
         $$0$i$i140 = $564;
        }
       } else {
        $567 = HEAP8[$557>>0]|0;
        $568 = $567&255;
        $$0$i$i140 = $568;
       }
       $569 = $$0$i$i140&255;
       $isascii1$i138 = ($569<<24>>24)>(-1);
       if ($isascii1$i138) {
        $sext210 = $$0$i$i140 << 24;
        $570 = $sext210 >> 24;
        $571 = HEAP32[$17>>2]|0;
        $572 = (($571) + ($570<<1)|0);
        $573 = HEAP16[$572>>1]|0;
        $574 = $573 & 2048;
        $575 = ($574<<16>>16)==(0);
        if ($575) {
         label = 167;
        } else {
         $576 = HEAP32[$__wn>>2]|0;
         $577 = HEAP32[$0>>2]|0;
         $578 = ($576|0)==($577|0);
         if ($578) {
          __THREW__ = 0;
          invoke_viii(450,($__wb|0),($__wn|0),($0|0));
          $579 = __THREW__; __THREW__ = 0;
          $580 = $579&1;
          if ($580) {
           label = 23;
           break L4;
          }
          $$pre = HEAP32[$__wn>>2]|0;
          $582 = $$pre;
         } else {
          $582 = $576;
         }
         $581 = ((($582)) + 1|0);
         HEAP32[$__wn>>2] = $581;
         HEAP8[$582>>0] = $569;
         $583 = (($__ng$0) + 1)|0;
         $883 = $596;$__ng$1 = $583;
        }
       } else {
        label = 167;
       }
       if ((label|0) == 167) {
        label = 0;
        $584 = HEAP8[$__grp>>0]|0;
        $585 = $584 & 1;
        $586 = ($585<<24>>24)==(0);
        $587 = HEAP32[$33>>2]|0;
        $588 = $584&255;
        $589 = $588 >>> 1;
        $590 = $586 ? $589 : $587;
        $591 = ($590|0)!=(0);
        $592 = ($__ng$0|0)!=(0);
        $or$cond7 = $592 & $591;
        $593 = ($569<<24>>24)==($67<<24>>24);
        $or$cond13 = $593 & $or$cond7;
        if (!($or$cond13)) {
         $$lcssa371 = $596;$$pre$i2$i$i108 = $$pre$i2$i$i148258;$__ng$0$lcssa372 = $__ng$0;
         break;
        }
        $594 = HEAP32[$__ge>>2]|0;
        $595 = ($596|0)==($594|0);
        if ($595) {
         __THREW__ = 0;
         invoke_viii(451,($__gb|0),($__gn|0),($__ge|0));
         $597 = __THREW__; __THREW__ = 0;
         $598 = $597&1;
         if ($598) {
          label = 23;
          break L4;
         }
         $$pre261 = HEAP32[$__gn>>2]|0;
         $600 = $$pre261;
        } else {
         $600 = $596;
        }
        $599 = ((($600)) + 4|0);
        HEAP32[$__gn>>2] = $599;
        HEAP32[$600>>2] = $__ng$0;
        $883 = $599;$__ng$1 = 0;
       }
       $601 = HEAP32[$__b>>2]|0;
       $602 = ((($601)) + 12|0);
       $603 = HEAP32[$602>>2]|0;
       $604 = ((($601)) + 16|0);
       $605 = HEAP32[$604>>2]|0;
       $606 = ($603|0)==($605|0);
       if ($606) {
        $607 = HEAP32[$601>>2]|0;
        $608 = ((($607)) + 40|0);
        $609 = HEAP32[$608>>2]|0;
        __THREW__ = 0;
        (invoke_ii($609|0,($601|0))|0);
        $610 = __THREW__; __THREW__ = 0;
        $611 = $610&1;
        if ($611) {
         label = 23;
         break L4;
        } else {
         $$pre$i2$i$i148 = $$pre$i2$i$i148258;$541 = $882;$596 = $883;$__ng$0 = $__ng$1;
         continue;
        }
       } else {
        $612 = ((($603)) + 1|0);
        HEAP32[$602>>2] = $612;
        $$pre$i2$i$i148 = $$pre$i2$i$i148258;$541 = $882;$596 = $883;$__ng$0 = $__ng$1;
        continue;
       }
      }
      $613 = HEAP32[$__gb>>2]|0;
      $614 = ($613|0)!=($$lcssa371|0);
      $615 = ($__ng$0$lcssa372|0)!=(0);
      $or$cond9 = $615 & $614;
      if ($or$cond9) {
       $616 = HEAP32[$__ge>>2]|0;
       $617 = ($$lcssa371|0)==($616|0);
       if ($617) {
        __THREW__ = 0;
        invoke_viii(451,($__gb|0),($__gn|0),($__ge|0));
        $618 = __THREW__; __THREW__ = 0;
        $619 = $618&1;
        if ($619) {
         label = 24;
         break L4;
        }
        $$pre263 = HEAP32[$__gn>>2]|0;
        $621 = $$pre263;
       } else {
        $621 = $$lcssa371;
       }
       $620 = ((($621)) + 4|0);
       HEAP32[$__gn>>2] = $620;
       HEAP32[$621>>2] = $__ng$0$lcssa372;
       $884 = $620;
      } else {
       $884 = $$lcssa371;
      }
      $622 = HEAP32[$__fd>>2]|0;
      $623 = ($622|0)>(0);
      if ($623) {
       $624 = HEAP32[$__b>>2]|0;
       $625 = ($624|0)==(0|0);
       do {
        if ($625) {
         $639 = 0;
        } else {
         $626 = ((($624)) + 12|0);
         $627 = HEAP32[$626>>2]|0;
         $628 = ((($624)) + 16|0);
         $629 = HEAP32[$628>>2]|0;
         $630 = ($627|0)==($629|0);
         if ($630) {
          $631 = HEAP32[$624>>2]|0;
          $632 = ((($631)) + 36|0);
          $633 = HEAP32[$632>>2]|0;
          __THREW__ = 0;
          $634 = (invoke_ii($633|0,($624|0))|0);
          $635 = __THREW__; __THREW__ = 0;
          $636 = $635&1;
          if ($636) {
           label = 24;
           break L4;
          }
          $637 = ($634|0)==(-1);
          if ($637) {
           HEAP32[$__b>>2] = 0;
           $639 = 0;
           break;
          } else {
           $$pre$i$i$i104 = HEAP32[$__b>>2]|0;
           $639 = $$pre$i$i$i104;
           break;
          }
         } else {
          $639 = $624;
         }
        }
       } while(0);
       $638 = ($639|0)==(0|0);
       $640 = ($$pre$i2$i$i108|0)==(0|0);
       do {
        if ($640) {
         label = 193;
        } else {
         $641 = ((($$pre$i2$i$i108)) + 12|0);
         $642 = HEAP32[$641>>2]|0;
         $643 = ((($$pre$i2$i$i108)) + 16|0);
         $644 = HEAP32[$643>>2]|0;
         $645 = ($642|0)==($644|0);
         if ($645) {
          $646 = HEAP32[$$pre$i2$i$i108>>2]|0;
          $647 = ((($646)) + 36|0);
          $648 = HEAP32[$647>>2]|0;
          __THREW__ = 0;
          $649 = (invoke_ii($648|0,($$pre$i2$i$i108|0))|0);
          $650 = __THREW__; __THREW__ = 0;
          $651 = $650&1;
          if ($651) {
           label = 24;
           break L4;
          }
          $652 = ($649|0)==(-1);
          if ($652) {
           HEAP32[$__e>>2] = 0;
           label = 193;
           break;
          }
         }
         if ($638) {
          $885 = $$pre$i2$i$i108;
         } else {
          label = 198;
          break L4;
         }
        }
       } while(0);
       if ((label|0) == 193) {
        label = 0;
        if ($638) {
         label = 198;
         break L4;
        } else {
         $885 = 0;
        }
       }
       $653 = HEAP32[$__b>>2]|0;
       $654 = ((($653)) + 12|0);
       $655 = HEAP32[$654>>2]|0;
       $656 = ((($653)) + 16|0);
       $657 = HEAP32[$656>>2]|0;
       $658 = ($655|0)==($657|0);
       if ($658) {
        $659 = HEAP32[$653>>2]|0;
        $660 = ((($659)) + 36|0);
        $661 = HEAP32[$660>>2]|0;
        __THREW__ = 0;
        $662 = (invoke_ii($661|0,($653|0))|0);
        $663 = __THREW__; __THREW__ = 0;
        $664 = $663&1;
        if ($664) {
         label = 24;
         break L4;
        } else {
         $$0$i$i97 = $662;
        }
       } else {
        $665 = HEAP8[$655>>0]|0;
        $666 = $665&255;
        $$0$i$i97 = $666;
       }
       $667 = $$0$i$i97&255;
       $668 = HEAP8[$__dp>>0]|0;
       $669 = ($667<<24>>24)==($668<<24>>24);
       if (!($669)) {
        label = 198;
        break L4;
       }
       $672 = HEAP32[$__b>>2]|0;
       $673 = ((($672)) + 12|0);
       $674 = HEAP32[$673>>2]|0;
       $675 = ((($672)) + 16|0);
       $676 = HEAP32[$675>>2]|0;
       $677 = ($674|0)==($676|0);
       if ($677) {
        $678 = HEAP32[$672>>2]|0;
        $679 = ((($678)) + 40|0);
        $680 = HEAP32[$679>>2]|0;
        __THREW__ = 0;
        (invoke_ii($680|0,($672|0))|0);
        $681 = __THREW__; __THREW__ = 0;
        $682 = $681&1;
        if ($682) {
         label = 24;
         break L4;
        }
       } else {
        $683 = ((($674)) + 1|0);
        HEAP32[$673>>2] = $683;
       }
       $684 = ($622|0)>(0);
       if ($684) {
        $$pre$i2$i$i84336 = $885;$702 = $885;$762 = $622;
        while(1) {
         $685 = HEAP32[$__b>>2]|0;
         $686 = ($685|0)==(0|0);
         do {
          if ($686) {
           $700 = 0;
          } else {
           $687 = ((($685)) + 12|0);
           $688 = HEAP32[$687>>2]|0;
           $689 = ((($685)) + 16|0);
           $690 = HEAP32[$689>>2]|0;
           $691 = ($688|0)==($690|0);
           if ($691) {
            $692 = HEAP32[$685>>2]|0;
            $693 = ((($692)) + 36|0);
            $694 = HEAP32[$693>>2]|0;
            __THREW__ = 0;
            $695 = (invoke_ii($694|0,($685|0))|0);
            $696 = __THREW__; __THREW__ = 0;
            $697 = $696&1;
            if ($697) {
             label = 22;
             break L4;
            }
            $698 = ($695|0)==(-1);
            if ($698) {
             HEAP32[$__b>>2] = 0;
             $700 = 0;
             break;
            } else {
             $$pre$i$i$i80 = HEAP32[$__b>>2]|0;
             $700 = $$pre$i$i$i80;
             break;
            }
           } else {
            $700 = $685;
           }
          }
         } while(0);
         $699 = ($700|0)==(0|0);
         $701 = ($702|0)==(0|0);
         do {
          if ($701) {
           $$pre$i2$i$i84264$ph = $$pre$i2$i$i84336;
           label = 215;
          } else {
           $703 = ((($702)) + 12|0);
           $704 = HEAP32[$703>>2]|0;
           $705 = ((($702)) + 16|0);
           $706 = HEAP32[$705>>2]|0;
           $707 = ($704|0)==($706|0);
           if (!($707)) {
            if ($699) {
             $$pre$i2$i$i84264283 = $$pre$i2$i$i84336;$886 = $702;
             break;
            } else {
             label = 222;
             break L4;
            }
           }
           $708 = HEAP32[$702>>2]|0;
           $709 = ((($708)) + 36|0);
           $710 = HEAP32[$709>>2]|0;
           __THREW__ = 0;
           $711 = (invoke_ii($710|0,($702|0))|0);
           $712 = __THREW__; __THREW__ = 0;
           $713 = $712&1;
           if ($713) {
            label = 22;
            break L4;
           }
           $714 = ($711|0)==(-1);
           if ($714) {
            HEAP32[$__e>>2] = 0;
            $$pre$i2$i$i84264$ph = 0;
            label = 215;
            break;
           } else {
            $715 = ($$pre$i2$i$i84336|0)==(0|0);
            $tmp$i$i86 = $699 ^ $715;
            if ($tmp$i$i86) {
             $$pre$i2$i$i84264283 = $$pre$i2$i$i84336;$886 = $$pre$i2$i$i84336;
             break;
            } else {
             label = 222;
             break L4;
            }
           }
          }
         } while(0);
         if ((label|0) == 215) {
          label = 0;
          if ($699) {
           label = 222;
           break L4;
          } else {
           $$pre$i2$i$i84264283 = $$pre$i2$i$i84264$ph;$886 = 0;
          }
         }
         $716 = HEAP32[$__b>>2]|0;
         $717 = ((($716)) + 12|0);
         $718 = HEAP32[$717>>2]|0;
         $719 = ((($716)) + 16|0);
         $720 = HEAP32[$719>>2]|0;
         $721 = ($718|0)==($720|0);
         if ($721) {
          $722 = HEAP32[$716>>2]|0;
          $723 = ((($722)) + 36|0);
          $724 = HEAP32[$723>>2]|0;
          __THREW__ = 0;
          $725 = (invoke_ii($724|0,($716|0))|0);
          $726 = __THREW__; __THREW__ = 0;
          $727 = $726&1;
          if ($727) {
           label = 22;
           break L4;
          } else {
           $$0$i$i75 = $725;
          }
         } else {
          $728 = HEAP8[$718>>0]|0;
          $729 = $728&255;
          $$0$i$i75 = $729;
         }
         $730 = $$0$i$i75&255;
         $isascii1$i73 = ($730<<24>>24)>(-1);
         if (!($isascii1$i73)) {
          label = 222;
          break L4;
         }
         $sext = $$0$i$i75 << 24;
         $731 = $sext >> 24;
         $732 = HEAP32[$17>>2]|0;
         $733 = (($732) + ($731<<1)|0);
         $734 = HEAP16[$733>>1]|0;
         $735 = $734 & 2048;
         $736 = ($735<<16>>16)==(0);
         if ($736) {
          label = 222;
          break L4;
         }
         $739 = HEAP32[$__wn>>2]|0;
         $740 = HEAP32[$0>>2]|0;
         $741 = ($739|0)==($740|0);
         if ($741) {
          __THREW__ = 0;
          invoke_viii(450,($__wb|0),($__wn|0),($0|0));
          $742 = __THREW__; __THREW__ = 0;
          $743 = $742&1;
          if ($743) {
           label = 22;
           break L4;
          }
         }
         $744 = HEAP32[$__b>>2]|0;
         $745 = ((($744)) + 12|0);
         $746 = HEAP32[$745>>2]|0;
         $747 = ((($744)) + 16|0);
         $748 = HEAP32[$747>>2]|0;
         $749 = ($746|0)==($748|0);
         if ($749) {
          $750 = HEAP32[$744>>2]|0;
          $751 = ((($750)) + 36|0);
          $752 = HEAP32[$751>>2]|0;
          __THREW__ = 0;
          $753 = (invoke_ii($752|0,($744|0))|0);
          $754 = __THREW__; __THREW__ = 0;
          $755 = $754&1;
          if ($755) {
           label = 22;
           break L4;
          } else {
           $$0$i$i68 = $753;
          }
         } else {
          $756 = HEAP8[$746>>0]|0;
          $757 = $756&255;
          $$0$i$i68 = $757;
         }
         $758 = $$0$i$i68&255;
         $759 = HEAP32[$__wn>>2]|0;
         $760 = ((($759)) + 1|0);
         HEAP32[$__wn>>2] = $760;
         HEAP8[$759>>0] = $758;
         $761 = (($762) + -1)|0;
         HEAP32[$__fd>>2] = $761;
         $763 = HEAP32[$__b>>2]|0;
         $764 = ((($763)) + 12|0);
         $765 = HEAP32[$764>>2]|0;
         $766 = ((($763)) + 16|0);
         $767 = HEAP32[$766>>2]|0;
         $768 = ($765|0)==($767|0);
         if ($768) {
          $769 = HEAP32[$763>>2]|0;
          $770 = ((($769)) + 40|0);
          $771 = HEAP32[$770>>2]|0;
          __THREW__ = 0;
          (invoke_ii($771|0,($763|0))|0);
          $772 = __THREW__; __THREW__ = 0;
          $773 = $772&1;
          if ($773) {
           label = 22;
           break L4;
          }
         } else {
          $775 = ((($765)) + 1|0);
          HEAP32[$764>>2] = $775;
         }
         $774 = ($762|0)>(1);
         if ($774) {
          $$pre$i2$i$i84336 = $$pre$i2$i$i84264283;$702 = $886;$762 = $761;
         } else {
          break;
         }
        }
       }
      }
      $776 = HEAP32[$__wn>>2]|0;
      $777 = HEAP32[$__wb>>2]|0;
      $778 = ($776|0)==($777|0);
      if ($778) {
       label = 233;
       break L4;
      } else {
       $878 = $884;$__trailing_sign$1 = $__trailing_sign$0355;
      }
      break;
     }
     default: {
      $878 = $876;$__trailing_sign$1 = $__trailing_sign$0355;
     }
     }
    } while(0);
    L266: do {
     if ((label|0) == 42) {
      while(1) {
       label = 0;
       $131 = HEAP32[$__b>>2]|0;
       $132 = ($131|0)==(0|0);
       do {
        if ($132) {
         $146 = 0;
        } else {
         $133 = ((($131)) + 12|0);
         $134 = HEAP32[$133>>2]|0;
         $135 = ((($131)) + 16|0);
         $136 = HEAP32[$135>>2]|0;
         $137 = ($134|0)==($136|0);
         if ($137) {
          $138 = HEAP32[$131>>2]|0;
          $139 = ((($138)) + 36|0);
          $140 = HEAP32[$139>>2]|0;
          __THREW__ = 0;
          $141 = (invoke_ii($140|0,($131|0))|0);
          $142 = __THREW__; __THREW__ = 0;
          $143 = $142&1;
          if ($143) {
           label = 20;
           break L4;
          }
          $144 = ($141|0)==(-1);
          if ($144) {
           HEAP32[$__b>>2] = 0;
           $146 = 0;
           break;
          } else {
           $$pre$i$i$i48 = HEAP32[$__b>>2]|0;
           $146 = $$pre$i$i$i48;
           break;
          }
         } else {
          $146 = $131;
         }
        }
       } while(0);
       $145 = ($146|0)==(0|0);
       $147 = ($148|0)==(0|0);
       do {
        if ($147) {
         $$pre$i2$i$i52278 = $$pre$i2$i$i52;
         label = 54;
        } else {
         $149 = ((($148)) + 12|0);
         $150 = HEAP32[$149>>2]|0;
         $151 = ((($148)) + 16|0);
         $152 = HEAP32[$151>>2]|0;
         $153 = ($150|0)==($152|0);
         if (!($153)) {
          if ($145) {
           $$pre$i2$i$i52280 = $$pre$i2$i$i52;$879 = $148;
           break;
          } else {
           $878 = $876;$__trailing_sign$1 = $__trailing_sign$0355;
           break L266;
          }
         }
         $154 = HEAP32[$148>>2]|0;
         $155 = ((($154)) + 36|0);
         $156 = HEAP32[$155>>2]|0;
         __THREW__ = 0;
         $157 = (invoke_ii($156|0,($148|0))|0);
         $158 = __THREW__; __THREW__ = 0;
         $159 = $158&1;
         if ($159) {
          label = 20;
          break L4;
         }
         $160 = ($157|0)==(-1);
         if ($160) {
          HEAP32[$__e>>2] = 0;
          $$pre$i2$i$i52278 = 0;
          label = 54;
          break;
         } else {
          $161 = ($$pre$i2$i$i52|0)==(0|0);
          $tmp$i$i54 = $145 ^ $161;
          if ($tmp$i$i54) {
           $$pre$i2$i$i52280 = $$pre$i2$i$i52;$879 = $$pre$i2$i$i52;
           break;
          } else {
           $878 = $876;$__trailing_sign$1 = $__trailing_sign$0355;
           break L266;
          }
         }
        }
       } while(0);
       if ((label|0) == 54) {
        label = 0;
        if ($145) {
         $878 = $876;$__trailing_sign$1 = $__trailing_sign$0355;
         break L266;
        } else {
         $$pre$i2$i$i52280 = $$pre$i2$i$i52278;$879 = 0;
        }
       }
       $162 = HEAP32[$__b>>2]|0;
       $163 = ((($162)) + 12|0);
       $164 = HEAP32[$163>>2]|0;
       $165 = ((($162)) + 16|0);
       $166 = HEAP32[$165>>2]|0;
       $167 = ($164|0)==($166|0);
       if ($167) {
        $168 = HEAP32[$162>>2]|0;
        $169 = ((($168)) + 36|0);
        $170 = HEAP32[$169>>2]|0;
        __THREW__ = 0;
        $171 = (invoke_ii($170|0,($162|0))|0);
        $172 = __THREW__; __THREW__ = 0;
        $173 = $172&1;
        if ($173) {
         label = 20;
         break L4;
        } else {
         $$0$i$i58 = $171;
        }
       } else {
        $174 = HEAP8[$164>>0]|0;
        $175 = $174&255;
        $$0$i$i58 = $175;
       }
       $176 = $$0$i$i58&255;
       $isascii1$i61 = ($176<<24>>24)>(-1);
       if (!($isascii1$i61)) {
        $878 = $876;$__trailing_sign$1 = $__trailing_sign$0355;
        break L266;
       }
       $sext211 = $$0$i$i58 << 24;
       $177 = $sext211 >> 24;
       $178 = HEAP32[$17>>2]|0;
       $179 = (($178) + ($177<<1)|0);
       $180 = HEAP16[$179>>1]|0;
       $181 = $180 & 8192;
       $182 = ($181<<16>>16)==(0);
       if ($182) {
        $878 = $876;$__trailing_sign$1 = $__trailing_sign$0355;
        break L266;
       }
       $183 = HEAP32[$__b>>2]|0;
       $184 = ((($183)) + 12|0);
       $185 = HEAP32[$184>>2]|0;
       $186 = ((($183)) + 16|0);
       $187 = HEAP32[$186>>2]|0;
       $188 = ($185|0)==($187|0);
       if ($188) {
        $189 = HEAP32[$183>>2]|0;
        $190 = ((($189)) + 40|0);
        $191 = HEAP32[$190>>2]|0;
        __THREW__ = 0;
        $192 = (invoke_ii($191|0,($183|0))|0);
        $193 = __THREW__; __THREW__ = 0;
        $194 = $193&1;
        if ($194) {
         label = 20;
         break L4;
        } else {
         $$0$i$i65 = $192;
        }
       } else {
        $195 = ((($185)) + 1|0);
        HEAP32[$184>>2] = $195;
        $196 = HEAP8[$185>>0]|0;
        $197 = $196&255;
        $$0$i$i65 = $197;
       }
       $198 = $$0$i$i65&255;
       __THREW__ = 0;
       invoke_vii(449,($__spaces|0),($198|0));
       $199 = __THREW__; __THREW__ = 0;
       $200 = $199&1;
       if ($200) {
        label = 20;
        break L4;
       } else {
        $$pre$i2$i$i52 = $$pre$i2$i$i52280;$148 = $879;
        label = 42;
       }
      }
     }
    } while(0);
    $781 = (($__p$0353) + 1)|0;
    $782 = ($781>>>0)<(4);
    if ($782) {
     $876 = $878;$__p$0353 = $781;$__trailing_sign$0355 = $__trailing_sign$1;
    } else {
     $$lcssa313 = $878;$__trailing_sign$0$lcssa = $__trailing_sign$1;
     label = 235;
     break;
    }
   }
   L300:    switch (label|0) {
    case 20: {
     $70 = ___cxa_find_matching_catch()|0;
     $71 = tempRet0;
     $lpad$phi$index = $70;$lpad$phi$index7 = $71;
     break L1;
     break;
    }
    case 21: {
     $72 = ___cxa_find_matching_catch()|0;
     $73 = tempRet0;
     $lpad$phi$index = $72;$lpad$phi$index7 = $73;
     break L1;
     break;
    }
    case 22: {
     $74 = ___cxa_find_matching_catch()|0;
     $75 = tempRet0;
     $lpad$phi$index = $74;$lpad$phi$index7 = $75;
     break L1;
     break;
    }
    case 23: {
     $76 = ___cxa_find_matching_catch()|0;
     $77 = tempRet0;
     $lpad$phi$index = $76;$lpad$phi$index7 = $77;
     break L1;
     break;
    }
    case 24: {
     $78 = ___cxa_find_matching_catch()|0;
     $79 = tempRet0;
     $lpad$phi$index = $78;$lpad$phi$index7 = $79;
     break L1;
     break;
    }
    case 40: {
     $128 = HEAP32[$__err>>2]|0;
     $129 = $128 | 4;
     HEAP32[$__err>>2] = $129;
     $$0 = 0;
     break;
    }
    case 104: {
     $374 = HEAP32[$__err>>2]|0;
     $375 = $374 | 4;
     HEAP32[$__err>>2] = $375;
     $$0 = 0;
     break;
    }
    case 143: {
     $522 = HEAP32[$__err>>2]|0;
     $523 = $522 | 4;
     HEAP32[$__err>>2] = $523;
     $$0 = 0;
     break;
    }
    case 198: {
     $670 = HEAP32[$__err>>2]|0;
     $671 = $670 | 4;
     HEAP32[$__err>>2] = $671;
     $$0 = 0;
     break;
    }
    case 222: {
     $737 = HEAP32[$__err>>2]|0;
     $738 = $737 | 4;
     HEAP32[$__err>>2] = $738;
     $$0 = 0;
     break;
    }
    case 233: {
     $779 = HEAP32[$__err>>2]|0;
     $780 = $779 | 4;
     HEAP32[$__err>>2] = $780;
     $$0 = 0;
     break;
    }
    case 235: {
     $783 = ($__trailing_sign$0$lcssa|0)==(0|0);
     L302: do {
      if (!($783)) {
       $784 = ((($__trailing_sign$0$lcssa)) + 1|0);
       $785 = ((($__trailing_sign$0$lcssa)) + 8|0);
       $786 = ((($__trailing_sign$0$lcssa)) + 4|0);
       $__i$0 = 1;
       L304: while(1) {
        $787 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
        $788 = $787 & 1;
        $789 = ($788<<24>>24)==(0);
        if ($789) {
         $791 = $787&255;
         $792 = $791 >>> 1;
         $794 = $792;
        } else {
         $790 = HEAP32[$786>>2]|0;
         $794 = $790;
        }
        $793 = ($__i$0>>>0)<($794>>>0);
        if (!($793)) {
         break L302;
        }
        $795 = HEAP32[$__b>>2]|0;
        $796 = ($795|0)==(0|0);
        do {
         if ($796) {
          $810 = 0;
         } else {
          $797 = ((($795)) + 12|0);
          $798 = HEAP32[$797>>2]|0;
          $799 = ((($795)) + 16|0);
          $800 = HEAP32[$799>>2]|0;
          $801 = ($798|0)==($800|0);
          if ($801) {
           $802 = HEAP32[$795>>2]|0;
           $803 = ((($802)) + 36|0);
           $804 = HEAP32[$803>>2]|0;
           __THREW__ = 0;
           $805 = (invoke_ii($804|0,($795|0))|0);
           $806 = __THREW__; __THREW__ = 0;
           $807 = $806&1;
           if ($807) {
            label = 19;
            break L304;
           }
           $808 = ($805|0)==(-1);
           if ($808) {
            HEAP32[$__b>>2] = 0;
            $810 = 0;
            break;
           } else {
            $$pre$i$i$i = HEAP32[$__b>>2]|0;
            $810 = $$pre$i$i$i;
            break;
           }
          } else {
           $810 = $795;
          }
         }
        } while(0);
        $809 = ($810|0)==(0|0);
        $811 = HEAP32[$__e>>2]|0;
        $812 = ($811|0)==(0|0);
        do {
         if ($812) {
          label = 253;
         } else {
          $813 = ((($811)) + 12|0);
          $814 = HEAP32[$813>>2]|0;
          $815 = ((($811)) + 16|0);
          $816 = HEAP32[$815>>2]|0;
          $817 = ($814|0)==($816|0);
          if ($817) {
           $818 = HEAP32[$811>>2]|0;
           $819 = ((($818)) + 36|0);
           $820 = HEAP32[$819>>2]|0;
           __THREW__ = 0;
           $821 = (invoke_ii($820|0,($811|0))|0);
           $822 = __THREW__; __THREW__ = 0;
           $823 = $822&1;
           if ($823) {
            label = 19;
            break L304;
           }
           $824 = ($821|0)==(-1);
           if ($824) {
            HEAP32[$__e>>2] = 0;
            label = 253;
            break;
           }
          }
          if (!($809)) {
           label = 260;
           break L304;
          }
         }
        } while(0);
        if ((label|0) == 253) {
         label = 0;
         if ($809) {
          label = 260;
          break;
         }
        }
        $825 = HEAP32[$__b>>2]|0;
        $826 = ((($825)) + 12|0);
        $827 = HEAP32[$826>>2]|0;
        $828 = ((($825)) + 16|0);
        $829 = HEAP32[$828>>2]|0;
        $830 = ($827|0)==($829|0);
        if ($830) {
         $831 = HEAP32[$825>>2]|0;
         $832 = ((($831)) + 36|0);
         $833 = HEAP32[$832>>2]|0;
         __THREW__ = 0;
         $834 = (invoke_ii($833|0,($825|0))|0);
         $835 = __THREW__; __THREW__ = 0;
         $836 = $835&1;
         if ($836) {
          label = 19;
          break;
         } else {
          $$0$i$i = $834;
         }
        } else {
         $837 = HEAP8[$827>>0]|0;
         $838 = $837&255;
         $$0$i$i = $838;
        }
        $839 = $$0$i$i&255;
        $840 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
        $841 = $840 & 1;
        $842 = ($841<<24>>24)==(0);
        if ($842) {
         $845 = $784;
        } else {
         $843 = HEAP32[$785>>2]|0;
         $845 = $843;
        }
        $844 = (($845) + ($__i$0)|0);
        $846 = HEAP8[$844>>0]|0;
        $847 = ($839<<24>>24)==($846<<24>>24);
        if (!($847)) {
         label = 260;
         break;
        }
        $850 = (($__i$0) + 1)|0;
        $851 = HEAP32[$__b>>2]|0;
        $852 = ((($851)) + 12|0);
        $853 = HEAP32[$852>>2]|0;
        $854 = ((($851)) + 16|0);
        $855 = HEAP32[$854>>2]|0;
        $856 = ($853|0)==($855|0);
        if ($856) {
         $857 = HEAP32[$851>>2]|0;
         $858 = ((($857)) + 40|0);
         $859 = HEAP32[$858>>2]|0;
         __THREW__ = 0;
         (invoke_ii($859|0,($851|0))|0);
         $860 = __THREW__; __THREW__ = 0;
         $861 = $860&1;
         if ($861) {
          label = 19;
          break;
         } else {
          $__i$0 = $850;
          continue;
         }
        } else {
         $862 = ((($853)) + 1|0);
         HEAP32[$852>>2] = $862;
         $__i$0 = $850;
         continue;
        }
       }
       if ((label|0) == 19) {
        $68 = ___cxa_find_matching_catch()|0;
        $69 = tempRet0;
        $lpad$phi$index = $68;$lpad$phi$index7 = $69;
        break L1;
       }
       else if ((label|0) == 260) {
        $848 = HEAP32[$__err>>2]|0;
        $849 = $848 | 4;
        HEAP32[$__err>>2] = $849;
        $$0 = 0;
        break L300;
       }
      }
     } while(0);
     $863 = HEAP32[$__gb>>2]|0;
     $864 = ($863|0)==($$lcssa313|0);
     if ($864) {
      $$0 = 1;
     } else {
      HEAP32[$__et>>2] = 0;
      __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp,$863,$$lcssa313,$__et);
      $865 = HEAP32[$__et>>2]|0;
      $866 = ($865|0)==(0);
      if ($866) {
       $$0 = 1;
      } else {
       $867 = HEAP32[$__err>>2]|0;
       $868 = $867 | 4;
       HEAP32[$__err>>2] = $868;
       $$0 = 0;
      }
     }
     break;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__spaces);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nsn);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__psn);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
   $869 = HEAP32[$__gb>>2]|0;
   HEAP32[$__gb>>2] = 0;
   $870 = ($869|0)==(0|0);
   if (!($870)) {
    $871 = HEAP32[$2>>2]|0;
    __THREW__ = 0;
    invoke_vi($871|0,($869|0));
    $872 = __THREW__; __THREW__ = 0;
    $873 = $872&1;
    if ($873) {
     $874 = ___cxa_find_matching_catch(0|0)|0;
     $875 = tempRet0;
     ___clang_call_terminate($874);
     // unreachable;
    }
   }
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__spaces);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nsn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__psn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 $82 = HEAP32[$__gb>>2]|0;
 HEAP32[$__gb>>2] = 0;
 $83 = ($82|0)==(0|0);
 if (!($83)) {
  $84 = HEAP32[$2>>2]|0;
  __THREW__ = 0;
  invoke_vi($84|0,($82|0));
  $85 = __THREW__; __THREW__ = 0;
  $86 = $85&1;
  if ($86) {
   $87 = ___cxa_find_matching_catch(0|0)|0;
   $88 = tempRet0;
   ___clang_call_terminate($87);
   // unreachable;
  }
 }
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__121__throw_runtime_errorEPKc($msg) {
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(422,($0|0),($msg|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch()|0;
  $4 = tempRet0;
  ___cxa_free_exception(($0|0));
  ___resumeException($3|0);
  // unreachable;
 } else {
  ___cxa_throw(($0|0),(312|0),(5|0));
  // unreachable;
 }
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE($this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$011 = 0, $$0110 = 0, $$012 = 0, $$019 = 0, $$byval_copy = 0, $$pre = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__loc = 0, $__neg = 0, $__w$0$lcssa = 0, $__w$013 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 24|0;
 $__wbuf = sp + 32|0;
 $__wb = sp + 16|0;
 $__wn = sp + 8|0;
 $__loc = sp + 4|0;
 $__neg = sp + 28|0;
 $0 = sp;
 $1 = $__wbuf;
 HEAP32[$__wb>>2] = $1;
 $2 = ((($__wb)) + 4|0);
 HEAP32[$2>>2] = (445);
 $3 = ((($__wbuf)) + 100|0);
 __THREW__ = 0;
 $4 = (invoke_ii(357,($__iob|0))|0);
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if ($6) {
  $34 = ___cxa_find_matching_catch()|0;
  $35 = tempRet0;
  HEAP32[$__wb>>2] = 0;
  $$011 = $34;$$019 = $35;$96 = $__wbuf;
  label = 36;
 } else {
  HEAP32[$__loc>>2] = $4;
  __THREW__ = 0;
  $7 = (invoke_iii(355,($__loc|0),(10392|0))|0);
  $8 = __THREW__; __THREW__ = 0;
  $9 = $8&1;
  L4: do {
   if (!($9)) {
    HEAP8[$__neg>>0] = 0;
    $10 = HEAP32[$__e>>2]|0;
    HEAP32[$0>>2] = $10;
    $11 = ((($__iob)) + 4|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = $10;
    __THREW__ = 0;
    ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
    $14 = (invoke_iiiiiiiiiiii(446,($__b|0),($$byval_copy|0),($__intl|0),($__loc|0),($12|0),($__err|0),($__neg|0),($7|0),($__wb|0),($__wn|0),($3|0))|0);
    $15 = __THREW__; __THREW__ = 0;
    $16 = $15&1;
    if (!($16)) {
     if ($14) {
      $17 = HEAP8[$__v>>0]|0;
      $18 = $17 & 1;
      $19 = ($18<<24>>24)==(0);
      if ($19) {
       $23 = ((($__v)) + 1|0);
       HEAP8[$23>>0] = 0;
       HEAP8[$__v>>0] = 0;
      } else {
       $20 = ((($__v)) + 8|0);
       $21 = HEAP32[$20>>2]|0;
       HEAP8[$21>>0] = 0;
       $22 = ((($__v)) + 4|0);
       HEAP32[$22>>2] = 0;
      }
      $24 = HEAP8[$__neg>>0]|0;
      $25 = ($24<<24>>24)==(0);
      if (!($25)) {
       $26 = HEAP32[$7>>2]|0;
       $27 = ((($26)) + 28|0);
       $28 = HEAP32[$27>>2]|0;
       __THREW__ = 0;
       $29 = (invoke_iii($28|0,($7|0),45)|0);
       $30 = __THREW__; __THREW__ = 0;
       $31 = $30&1;
       if ($31) {
        break;
       }
       __THREW__ = 0;
       invoke_vii(449,($__v|0),($29|0));
       $32 = __THREW__; __THREW__ = 0;
       $33 = $32&1;
       if ($33) {
        break;
       }
      }
      $36 = HEAP32[$7>>2]|0;
      $37 = ((($36)) + 28|0);
      $38 = HEAP32[$37>>2]|0;
      __THREW__ = 0;
      $39 = (invoke_iii($38|0,($7|0),48)|0);
      $40 = __THREW__; __THREW__ = 0;
      $41 = $40&1;
      if ($41) {
       break;
      }
      $42 = HEAP32[$__wb>>2]|0;
      $43 = HEAP32[$__wn>>2]|0;
      $44 = ((($43)) + -1|0);
      $45 = ($42>>>0)<($44>>>0);
      L18: do {
       if ($45) {
        $__w$013 = $42;
        while(1) {
         $46 = HEAP8[$__w$013>>0]|0;
         $47 = ($46<<24>>24)==($39<<24>>24);
         if (!($47)) {
          $__w$0$lcssa = $__w$013;
          break L18;
         }
         $48 = ((($__w$013)) + 1|0);
         $49 = ($48>>>0)<($44>>>0);
         if ($49) {
          $__w$013 = $48;
         } else {
          $__w$0$lcssa = $48;
          break;
         }
        }
       } else {
        $__w$0$lcssa = $42;
       }
      } while(0);
      __THREW__ = 0;
      (invoke_iiii(452,($__v|0),($__w$0$lcssa|0),($43|0))|0);
      $50 = __THREW__; __THREW__ = 0;
      $51 = $50&1;
      if ($51) {
       break;
      }
     }
     $52 = HEAP32[$__b>>2]|0;
     $53 = ($52|0)==(0|0);
     do {
      if ($53) {
       $67 = 0;
      } else {
       $54 = ((($52)) + 12|0);
       $55 = HEAP32[$54>>2]|0;
       $56 = ((($52)) + 16|0);
       $57 = HEAP32[$56>>2]|0;
       $58 = ($55|0)==($57|0);
       if ($58) {
        $59 = HEAP32[$52>>2]|0;
        $60 = ((($59)) + 36|0);
        $61 = HEAP32[$60>>2]|0;
        __THREW__ = 0;
        $62 = (invoke_ii($61|0,($52|0))|0);
        $63 = __THREW__; __THREW__ = 0;
        $64 = $63&1;
        if ($64) {
         break L4;
        }
        $65 = ($62|0)==(-1);
        if ($65) {
         HEAP32[$__b>>2] = 0;
         $67 = 0;
         break;
        } else {
         $$pre$i$i$i = HEAP32[$__b>>2]|0;
         $67 = $$pre$i$i$i;
         break;
        }
       } else {
        $67 = $52;
       }
      }
     } while(0);
     $66 = ($67|0)==(0|0);
     $68 = ($10|0)==(0);
     do {
      if ($68) {
       label = 29;
      } else {
       $69 = ((($13)) + 12|0);
       $70 = HEAP32[$69>>2]|0;
       $71 = ((($13)) + 16|0);
       $72 = HEAP32[$71>>2]|0;
       $73 = ($70|0)==($72|0);
       if ($73) {
        $74 = $10;
        $75 = HEAP32[$74>>2]|0;
        $76 = ((($75)) + 36|0);
        $77 = HEAP32[$76>>2]|0;
        __THREW__ = 0;
        $78 = (invoke_ii($77|0,($13|0))|0);
        $79 = __THREW__; __THREW__ = 0;
        $80 = $79&1;
        if ($80) {
         break L4;
        }
        $81 = ($78|0)==(-1);
        if ($81) {
         HEAP32[$__e>>2] = 0;
         label = 29;
         break;
        }
       }
       if (!($66)) {
        label = 30;
       }
      }
     } while(0);
     if ((label|0) == 29) {
      if ($66) {
       label = 30;
      }
     }
     if ((label|0) == 30) {
      $82 = HEAP32[$__err>>2]|0;
      $83 = $82 | 2;
      HEAP32[$__err>>2] = $83;
     }
     $84 = HEAP32[$__b>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($4)|0);
     $85 = HEAP32[$__wb>>2]|0;
     HEAP32[$__wb>>2] = 0;
     $86 = ($85|0)==(0|0);
     if (!($86)) {
      $87 = HEAP32[$2>>2]|0;
      __THREW__ = 0;
      invoke_vi($87|0,($85|0));
      $88 = __THREW__; __THREW__ = 0;
      $89 = $88&1;
      if ($89) {
       $90 = ___cxa_find_matching_catch(0|0)|0;
       $91 = tempRet0;
       ___clang_call_terminate($90);
       // unreachable;
      }
     }
     STACKTOP = sp;return ($84|0);
    }
   }
  } while(0);
  $92 = ___cxa_find_matching_catch()|0;
  $93 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($4)|0);
  $$pre = HEAP32[$__wb>>2]|0;
  HEAP32[$__wb>>2] = 0;
  $94 = ($$pre|0)==(0|0);
  if ($94) {
   $$0110 = $93;$$012 = $92;
  } else {
   $$011 = $92;$$019 = $93;$96 = $$pre;
   label = 36;
  }
 }
 if ((label|0) == 36) {
  $95 = HEAP32[$2>>2]|0;
  __THREW__ = 0;
  invoke_vi($95|0,($96|0));
  $97 = __THREW__; __THREW__ = 0;
  $98 = $97&1;
  if ($98) {
   $99 = ___cxa_find_matching_catch(0|0)|0;
   $100 = tempRet0;
   ___clang_call_terminate($99);
   // unreachable;
  } else {
   $$0110 = $$019;$$012 = $$011;
  }
 }
 ___resumeException($$012|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd) {
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__psn = $__psn|0;
 $__nsn = $__nsn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 100|0;
 $1 = sp + 88|0;
 $2 = sp + 76|0;
 $3 = sp + 64|0;
 $4 = sp + 52|0;
 $5 = sp + 48|0;
 $6 = sp + 36|0;
 $7 = sp + 24|0;
 $8 = sp + 12|0;
 $9 = sp;
 do {
  if ($__intl) {
   $10 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,10000)|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = ((($11)) + 44|0);
   $13 = HEAP32[$12>>2]|0;
   FUNCTION_TABLE_vii[$13 & 1023]($0,$10);
   $14 = HEAP32[$0>>2]|0;
   HEAP8[$__pat>>0]=$14&255;HEAP8[$__pat+1>>0]=($14>>8)&255;HEAP8[$__pat+2>>0]=($14>>16)&255;HEAP8[$__pat+3>>0]=$14>>24;
   $15 = HEAP32[$10>>2]|0;
   $16 = ((($15)) + 32|0);
   $17 = HEAP32[$16>>2]|0;
   FUNCTION_TABLE_vii[$17 & 1023]($1,$10);
   $18 = HEAP8[$__nsn>>0]|0;
   $19 = $18 & 1;
   $20 = ($19<<24>>24)==(0);
   if ($20) {
    $24 = ((($__nsn)) + 1|0);
    HEAP8[$24>>0] = 0;
    HEAP8[$__nsn>>0] = 0;
   } else {
    $21 = ((($__nsn)) + 8|0);
    $22 = HEAP32[$21>>2]|0;
    HEAP8[$22>>0] = 0;
    $23 = ((($__nsn)) + 4|0);
    HEAP32[$23>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(453,($__nsn|0),0);
   $25 = __THREW__; __THREW__ = 0;
   $26 = $25&1;
   if ($26) {
    $27 = ___cxa_find_matching_catch(0|0)|0;
    $28 = tempRet0;
    ___clang_call_terminate($27);
    // unreachable;
   }
   ;HEAP32[$__nsn>>2]=HEAP32[$1>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$1+8>>2]|0;
   HEAP32[$1>>2] = 0;
   $29 = ((($1)) + 4|0);
   HEAP32[$29>>2] = 0;
   $30 = ((($1)) + 8|0);
   HEAP32[$30>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
   $31 = HEAP32[$10>>2]|0;
   $32 = ((($31)) + 28|0);
   $33 = HEAP32[$32>>2]|0;
   FUNCTION_TABLE_vii[$33 & 1023]($2,$10);
   $34 = HEAP8[$__psn>>0]|0;
   $35 = $34 & 1;
   $36 = ($35<<24>>24)==(0);
   if ($36) {
    $40 = ((($__psn)) + 1|0);
    HEAP8[$40>>0] = 0;
    HEAP8[$__psn>>0] = 0;
   } else {
    $37 = ((($__psn)) + 8|0);
    $38 = HEAP32[$37>>2]|0;
    HEAP8[$38>>0] = 0;
    $39 = ((($__psn)) + 4|0);
    HEAP32[$39>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(453,($__psn|0),0);
   $41 = __THREW__; __THREW__ = 0;
   $42 = $41&1;
   if ($42) {
    $43 = ___cxa_find_matching_catch(0|0)|0;
    $44 = tempRet0;
    ___clang_call_terminate($43);
    // unreachable;
   }
   ;HEAP32[$__psn>>2]=HEAP32[$2>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$2+8>>2]|0;
   HEAP32[$2>>2] = 0;
   $45 = ((($2)) + 4|0);
   HEAP32[$45>>2] = 0;
   $46 = ((($2)) + 8|0);
   HEAP32[$46>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
   $47 = HEAP32[$10>>2]|0;
   $48 = ((($47)) + 12|0);
   $49 = HEAP32[$48>>2]|0;
   $50 = (FUNCTION_TABLE_ii[$49 & 1023]($10)|0);
   HEAP8[$__dp>>0] = $50;
   $51 = HEAP32[$10>>2]|0;
   $52 = ((($51)) + 16|0);
   $53 = HEAP32[$52>>2]|0;
   $54 = (FUNCTION_TABLE_ii[$53 & 1023]($10)|0);
   HEAP8[$__ts>>0] = $54;
   $55 = HEAP32[$10>>2]|0;
   $56 = ((($55)) + 20|0);
   $57 = HEAP32[$56>>2]|0;
   FUNCTION_TABLE_vii[$57 & 1023]($3,$10);
   $58 = HEAP8[$__grp>>0]|0;
   $59 = $58 & 1;
   $60 = ($59<<24>>24)==(0);
   if ($60) {
    $64 = ((($__grp)) + 1|0);
    HEAP8[$64>>0] = 0;
    HEAP8[$__grp>>0] = 0;
   } else {
    $61 = ((($__grp)) + 8|0);
    $62 = HEAP32[$61>>2]|0;
    HEAP8[$62>>0] = 0;
    $63 = ((($__grp)) + 4|0);
    HEAP32[$63>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(453,($__grp|0),0);
   $65 = __THREW__; __THREW__ = 0;
   $66 = $65&1;
   if ($66) {
    $67 = ___cxa_find_matching_catch(0|0)|0;
    $68 = tempRet0;
    ___clang_call_terminate($67);
    // unreachable;
   }
   ;HEAP32[$__grp>>2]=HEAP32[$3>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$3+8>>2]|0;
   HEAP32[$3>>2] = 0;
   $69 = ((($3)) + 4|0);
   HEAP32[$69>>2] = 0;
   $70 = ((($3)) + 8|0);
   HEAP32[$70>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
   $71 = HEAP32[$10>>2]|0;
   $72 = ((($71)) + 24|0);
   $73 = HEAP32[$72>>2]|0;
   FUNCTION_TABLE_vii[$73 & 1023]($4,$10);
   $74 = HEAP8[$__sym>>0]|0;
   $75 = $74 & 1;
   $76 = ($75<<24>>24)==(0);
   if ($76) {
    $80 = ((($__sym)) + 1|0);
    HEAP8[$80>>0] = 0;
    HEAP8[$__sym>>0] = 0;
   } else {
    $77 = ((($__sym)) + 8|0);
    $78 = HEAP32[$77>>2]|0;
    HEAP8[$78>>0] = 0;
    $79 = ((($__sym)) + 4|0);
    HEAP32[$79>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(453,($__sym|0),0);
   $81 = __THREW__; __THREW__ = 0;
   $82 = $81&1;
   if ($82) {
    $83 = ___cxa_find_matching_catch(0|0)|0;
    $84 = tempRet0;
    ___clang_call_terminate($83);
    // unreachable;
   } else {
    ;HEAP32[$__sym>>2]=HEAP32[$4>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$4+8>>2]|0;
    HEAP32[$4>>2] = 0;
    $85 = ((($4)) + 4|0);
    HEAP32[$85>>2] = 0;
    $86 = ((($4)) + 8|0);
    HEAP32[$86>>2] = 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
    $87 = HEAP32[$10>>2]|0;
    $88 = ((($87)) + 36|0);
    $89 = HEAP32[$88>>2]|0;
    $90 = (FUNCTION_TABLE_ii[$89 & 1023]($10)|0);
    $storemerge = $90;
    break;
   }
  } else {
   $91 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,9936)|0);
   $92 = HEAP32[$91>>2]|0;
   $93 = ((($92)) + 44|0);
   $94 = HEAP32[$93>>2]|0;
   FUNCTION_TABLE_vii[$94 & 1023]($5,$91);
   $95 = HEAP32[$5>>2]|0;
   HEAP8[$__pat>>0]=$95&255;HEAP8[$__pat+1>>0]=($95>>8)&255;HEAP8[$__pat+2>>0]=($95>>16)&255;HEAP8[$__pat+3>>0]=$95>>24;
   $96 = HEAP32[$91>>2]|0;
   $97 = ((($96)) + 32|0);
   $98 = HEAP32[$97>>2]|0;
   FUNCTION_TABLE_vii[$98 & 1023]($6,$91);
   $99 = HEAP8[$__nsn>>0]|0;
   $100 = $99 & 1;
   $101 = ($100<<24>>24)==(0);
   if ($101) {
    $105 = ((($__nsn)) + 1|0);
    HEAP8[$105>>0] = 0;
    HEAP8[$__nsn>>0] = 0;
   } else {
    $102 = ((($__nsn)) + 8|0);
    $103 = HEAP32[$102>>2]|0;
    HEAP8[$103>>0] = 0;
    $104 = ((($__nsn)) + 4|0);
    HEAP32[$104>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(453,($__nsn|0),0);
   $106 = __THREW__; __THREW__ = 0;
   $107 = $106&1;
   if ($107) {
    $108 = ___cxa_find_matching_catch(0|0)|0;
    $109 = tempRet0;
    ___clang_call_terminate($108);
    // unreachable;
   }
   ;HEAP32[$__nsn>>2]=HEAP32[$6>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$6+8>>2]|0;
   HEAP32[$6>>2] = 0;
   $110 = ((($6)) + 4|0);
   HEAP32[$110>>2] = 0;
   $111 = ((($6)) + 8|0);
   HEAP32[$111>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
   $112 = HEAP32[$91>>2]|0;
   $113 = ((($112)) + 28|0);
   $114 = HEAP32[$113>>2]|0;
   FUNCTION_TABLE_vii[$114 & 1023]($7,$91);
   $115 = HEAP8[$__psn>>0]|0;
   $116 = $115 & 1;
   $117 = ($116<<24>>24)==(0);
   if ($117) {
    $121 = ((($__psn)) + 1|0);
    HEAP8[$121>>0] = 0;
    HEAP8[$__psn>>0] = 0;
   } else {
    $118 = ((($__psn)) + 8|0);
    $119 = HEAP32[$118>>2]|0;
    HEAP8[$119>>0] = 0;
    $120 = ((($__psn)) + 4|0);
    HEAP32[$120>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(453,($__psn|0),0);
   $122 = __THREW__; __THREW__ = 0;
   $123 = $122&1;
   if ($123) {
    $124 = ___cxa_find_matching_catch(0|0)|0;
    $125 = tempRet0;
    ___clang_call_terminate($124);
    // unreachable;
   }
   ;HEAP32[$__psn>>2]=HEAP32[$7>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$7+8>>2]|0;
   HEAP32[$7>>2] = 0;
   $126 = ((($7)) + 4|0);
   HEAP32[$126>>2] = 0;
   $127 = ((($7)) + 8|0);
   HEAP32[$127>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
   $128 = HEAP32[$91>>2]|0;
   $129 = ((($128)) + 12|0);
   $130 = HEAP32[$129>>2]|0;
   $131 = (FUNCTION_TABLE_ii[$130 & 1023]($91)|0);
   HEAP8[$__dp>>0] = $131;
   $132 = HEAP32[$91>>2]|0;
   $133 = ((($132)) + 16|0);
   $134 = HEAP32[$133>>2]|0;
   $135 = (FUNCTION_TABLE_ii[$134 & 1023]($91)|0);
   HEAP8[$__ts>>0] = $135;
   $136 = HEAP32[$91>>2]|0;
   $137 = ((($136)) + 20|0);
   $138 = HEAP32[$137>>2]|0;
   FUNCTION_TABLE_vii[$138 & 1023]($8,$91);
   $139 = HEAP8[$__grp>>0]|0;
   $140 = $139 & 1;
   $141 = ($140<<24>>24)==(0);
   if ($141) {
    $145 = ((($__grp)) + 1|0);
    HEAP8[$145>>0] = 0;
    HEAP8[$__grp>>0] = 0;
   } else {
    $142 = ((($__grp)) + 8|0);
    $143 = HEAP32[$142>>2]|0;
    HEAP8[$143>>0] = 0;
    $144 = ((($__grp)) + 4|0);
    HEAP32[$144>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(453,($__grp|0),0);
   $146 = __THREW__; __THREW__ = 0;
   $147 = $146&1;
   if ($147) {
    $148 = ___cxa_find_matching_catch(0|0)|0;
    $149 = tempRet0;
    ___clang_call_terminate($148);
    // unreachable;
   }
   ;HEAP32[$__grp>>2]=HEAP32[$8>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$8+8>>2]|0;
   HEAP32[$8>>2] = 0;
   $150 = ((($8)) + 4|0);
   HEAP32[$150>>2] = 0;
   $151 = ((($8)) + 8|0);
   HEAP32[$151>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
   $152 = HEAP32[$91>>2]|0;
   $153 = ((($152)) + 24|0);
   $154 = HEAP32[$153>>2]|0;
   FUNCTION_TABLE_vii[$154 & 1023]($9,$91);
   $155 = HEAP8[$__sym>>0]|0;
   $156 = $155 & 1;
   $157 = ($156<<24>>24)==(0);
   if ($157) {
    $161 = ((($__sym)) + 1|0);
    HEAP8[$161>>0] = 0;
    HEAP8[$__sym>>0] = 0;
   } else {
    $158 = ((($__sym)) + 8|0);
    $159 = HEAP32[$158>>2]|0;
    HEAP8[$159>>0] = 0;
    $160 = ((($__sym)) + 4|0);
    HEAP32[$160>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(453,($__sym|0),0);
   $162 = __THREW__; __THREW__ = 0;
   $163 = $162&1;
   if ($163) {
    $164 = ___cxa_find_matching_catch(0|0)|0;
    $165 = tempRet0;
    ___clang_call_terminate($164);
    // unreachable;
   } else {
    ;HEAP32[$__sym>>2]=HEAP32[$9>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$9+8>>2]|0;
    HEAP32[$9>>2] = 0;
    $166 = ((($9)) + 4|0);
    HEAP32[$166>>2] = 0;
    $167 = ((($9)) + 8|0);
    HEAP32[$167>>2] = 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
    $168 = HEAP32[$91>>2]|0;
    $169 = ((($168)) + 36|0);
    $170 = HEAP32[$169>>2]|0;
    $171 = (FUNCTION_TABLE_ii[$170 & 1023]($91)|0);
    $storemerge = $171;
    break;
   }
  }
 } while(0);
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$__g_end,$__err) {
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__err = $__err|0;
 var $$01$i$i22 = 0, $$__ig$0 = 0, $$lcssa = 0, $$not = 0, $$not16 = 0, $$pre = 0, $$pre11 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__ig$018 = 0, $__r$019 = 0;
 var $or$cond2 = 0, $or$cond2$lcssa = 0, $or$cond217 = 0, $or$cond220 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__grouping>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 $3 = ((($__grouping)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $0&255;
 $6 = $5 >>> 1;
 $7 = $2 ? $6 : $4;
 $8 = ($7|0)==(0);
 L1: do {
  if (!($8)) {
   $9 = ($__g|0)==($__g_end|0);
   if ($9) {
    $19 = $0;$28 = $4;
   } else {
    $10 = ((($__g_end)) + -4|0);
    $11 = ($10>>>0)>($__g>>>0);
    if ($11) {
     $$01$i$i22 = $__g;$14 = $10;
     while(1) {
      $12 = HEAP32[$$01$i$i22>>2]|0;
      $13 = HEAP32[$14>>2]|0;
      HEAP32[$$01$i$i22>>2] = $13;
      HEAP32[$14>>2] = $12;
      $15 = ((($$01$i$i22)) + 4|0);
      $16 = ((($14)) + -4|0);
      $17 = ($15>>>0)<($16>>>0);
      if ($17) {
       $$01$i$i22 = $15;$14 = $16;
      } else {
       break;
      }
     }
    }
    $$pre = HEAP8[$__grouping>>0]|0;
    $$pre11 = HEAP32[$3>>2]|0;
    $19 = $$pre;$28 = $$pre11;
   }
   $18 = $19 & 1;
   $20 = ($18<<24>>24)==(0);
   $21 = ((($__grouping)) + 8|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ((($__grouping)) + 1|0);
   $24 = $20 ? $23 : $22;
   $25 = $19&255;
   $26 = $25 >>> 1;
   $27 = $20 ? $26 : $28;
   $29 = (($24) + ($27)|0);
   $30 = ((($__g_end)) + -4|0);
   $31 = $29;
   $32 = ($30>>>0)>($__g>>>0);
   $33 = HEAP8[$24>>0]|0;
   $$not16 = ($33<<24>>24)<(1);
   $34 = ($33<<24>>24)==(127);
   $or$cond217 = $$not16 | $34;
   L10: do {
    if ($32) {
     $36 = $33;$__ig$018 = $24;$__r$019 = $__g;$or$cond220 = $or$cond217;
     while(1) {
      if (!($or$cond220)) {
       $35 = $36 << 24 >> 24;
       $37 = HEAP32[$__r$019>>2]|0;
       $38 = ($35|0)==($37|0);
       if (!($38)) {
        break;
       }
      }
      $39 = $__ig$018;
      $40 = (($31) - ($39))|0;
      $41 = ($40|0)>(1);
      $42 = ((($__ig$018)) + 1|0);
      $$__ig$0 = $41 ? $42 : $__ig$018;
      $43 = ((($__r$019)) + 4|0);
      $44 = ($43>>>0)<($30>>>0);
      $45 = HEAP8[$$__ig$0>>0]|0;
      $$not = ($45<<24>>24)<(1);
      $46 = ($45<<24>>24)==(127);
      $or$cond2 = $$not | $46;
      if ($44) {
       $36 = $45;$__ig$018 = $$__ig$0;$__r$019 = $43;$or$cond220 = $or$cond2;
      } else {
       $$lcssa = $45;$or$cond2$lcssa = $or$cond2;
       break L10;
      }
     }
     HEAP32[$__err>>2] = 4;
     break L1;
    } else {
     $$lcssa = $33;$or$cond2$lcssa = $or$cond217;
    }
   } while(0);
   if (!($or$cond2$lcssa)) {
    $47 = $$lcssa << 24 >> 24;
    $48 = HEAP32[$30>>2]|0;
    $49 = (($48) + -1)|0;
    $50 = ($49>>>0)<($47>>>0);
    if (!($50)) {
     HEAP32[$__err>>2] = 4;
    }
   }
  }
 } while(0);
 return;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$0 = 0, $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$0$lcssa$i = 0, $$01 = 0, $$112 = 0, $$113 = 0, $$1210 = 0, $$1211 = 0, $$byval_copy = 0, $$phi$trans$insert$pre$phiZZZZ2D = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre14 = 0, $$pre6 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $__atoms = 0, $__loc = 0, $__nbuf = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2$lcssa = 0, $__nc$216 = 0, $__neg = 0, $__w$017 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $phitmp$i$i$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 592|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 472|0;
 $vararg_buffer = sp;
 $__wbuf = sp + 72|0;
 $__wb = sp + 64|0;
 $__wn = sp + 56|0;
 $__loc = sp + 52|0;
 $__neg = sp + 576|0;
 $0 = sp + 48|0;
 $__atoms = sp + 8|0;
 $__nbuf = sp + 476|0;
 $1 = $__wbuf;
 HEAP32[$__wb>>2] = $1;
 $2 = ((($__wb)) + 4|0);
 HEAP32[$2>>2] = (445);
 $3 = ((($__wbuf)) + 400|0);
 __THREW__ = 0;
 $4 = (invoke_ii(357,($__iob|0))|0);
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if ($6) {
  $34 = ___cxa_find_matching_catch()|0;
  $35 = tempRet0;
  HEAP32[$__wb>>2] = 0;
  $$112 = $34;$$1210 = $35;$121 = 445;$122 = $__wbuf;
  label = 47;
 } else {
  HEAP32[$__loc>>2] = $4;
  __THREW__ = 0;
  $7 = (invoke_iii(355,($__loc|0),(10384|0))|0);
  $8 = __THREW__; __THREW__ = 0;
  $9 = $8&1;
  L4: do {
   if ($9) {
    label = 10;
   } else {
    HEAP8[$__neg>>0] = 0;
    $10 = HEAP32[$__e>>2]|0;
    HEAP32[$0>>2] = $10;
    $11 = ((($__iob)) + 4|0);
    $12 = HEAP32[$11>>2]|0;
    __THREW__ = 0;
    ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
    $13 = (invoke_iiiiiiiiiiii(454,($__b|0),($$byval_copy|0),($__intl|0),($__loc|0),($12|0),($__err|0),($__neg|0),($7|0),($__wb|0),($__wn|0),($3|0))|0);
    $14 = __THREW__; __THREW__ = 0;
    $15 = $14&1;
    if ($15) {
     label = 10;
    } else {
     L7: do {
      if ($13) {
       $16 = HEAP32[$7>>2]|0;
       $17 = ((($16)) + 48|0);
       $18 = HEAP32[$17>>2]|0;
       __THREW__ = 0;
       (invoke_iiiii($18|0,($7|0),(26128|0),((26138)|0),($__atoms|0))|0);
       $19 = __THREW__; __THREW__ = 0;
       $20 = $19&1;
       if ($20) {
        label = 10;
        break L4;
       }
       $21 = HEAP32[$__wn>>2]|0;
       $22 = HEAP32[$__wb>>2]|0;
       $23 = $21;
       $24 = $22;
       $25 = (($23) - ($24))|0;
       $26 = ($25|0)>(392);
       if ($26) {
        $27 = $25 >> 2;
        $28 = (($27) + 2)|0;
        $29 = (_malloc($28)|0);
        $30 = $29;
        $31 = ($29|0)==(0|0);
        if ($31) {
         __THREW__ = 0;
         invoke_v(435);
         $32 = __THREW__; __THREW__ = 0;
         $33 = $32&1;
         if ($33) {
          $41 = $30;
         } else {
          $76 = $30;$__nc$0 = 0;
          label = 13;
         }
        } else {
         $76 = $30;$__nc$0 = $29;
         label = 13;
        }
       } else {
        $76 = 0;$__nc$0 = $__nbuf;
        label = 13;
       }
       do {
        if ((label|0) == 13) {
         $43 = HEAP8[$__neg>>0]|0;
         $44 = ($43<<24>>24)==(0);
         if ($44) {
          $__nc$1 = $__nc$0;
         } else {
          $45 = ((($__nc$0)) + 1|0);
          HEAP8[$__nc$0>>0] = 45;
          $__nc$1 = $45;
         }
         $46 = ((($__atoms)) + 40|0);
         $47 = $__atoms;
         $48 = ($22>>>0)<($21>>>0);
         if ($48) {
          $49 = ((($__atoms)) + 4|0);
          $50 = ((($49)) + 4|0);
          $51 = ((($50)) + 4|0);
          $52 = ((($51)) + 4|0);
          $53 = ((($52)) + 4|0);
          $54 = ((($53)) + 4|0);
          $55 = ((($54)) + 4|0);
          $56 = ((($55)) + 4|0);
          $57 = ((($56)) + 4|0);
          $__nc$216 = $__nc$1;$__w$017 = $22;
          while(1) {
           $58 = HEAP32[$__w$017>>2]|0;
           $59 = HEAP32[$__atoms>>2]|0;
           $60 = ($59|0)==($58|0);
           do {
            if ($60) {
             $$0$lcssa$i = $__atoms;
            } else {
             $61 = HEAP32[$49>>2]|0;
             $62 = ($61|0)==($58|0);
             if ($62) {
              $$0$lcssa$i = $49;
             } else {
              $127 = HEAP32[$50>>2]|0;
              $128 = ($127|0)==($58|0);
              if ($128) {
               $$0$lcssa$i = $50;
              } else {
               $129 = HEAP32[$51>>2]|0;
               $130 = ($129|0)==($58|0);
               if ($130) {
                $$0$lcssa$i = $51;
               } else {
                $131 = HEAP32[$52>>2]|0;
                $132 = ($131|0)==($58|0);
                if ($132) {
                 $$0$lcssa$i = $52;
                } else {
                 $133 = HEAP32[$53>>2]|0;
                 $134 = ($133|0)==($58|0);
                 if ($134) {
                  $$0$lcssa$i = $53;
                  break;
                 }
                 $135 = HEAP32[$54>>2]|0;
                 $136 = ($135|0)==($58|0);
                 if ($136) {
                  $$0$lcssa$i = $54;
                  break;
                 }
                 $137 = HEAP32[$55>>2]|0;
                 $138 = ($137|0)==($58|0);
                 if ($138) {
                  $$0$lcssa$i = $55;
                  break;
                 }
                 $139 = HEAP32[$56>>2]|0;
                 $140 = ($139|0)==($58|0);
                 if ($140) {
                  $$0$lcssa$i = $56;
                  break;
                 }
                 $141 = HEAP32[$57>>2]|0;
                 $142 = ($141|0)==($58|0);
                 $$ = $142 ? $57 : $46;
                 $$0$lcssa$i = $$;
                }
               }
              }
             }
            }
           } while(0);
           $63 = $$0$lcssa$i;
           $64 = (($63) - ($47))|0;
           $65 = $64 >> 2;
           $66 = (26128 + ($65)|0);
           $67 = HEAP8[$66>>0]|0;
           HEAP8[$__nc$216>>0] = $67;
           $68 = ((($__w$017)) + 4|0);
           $69 = ((($__nc$216)) + 1|0);
           $$pre = HEAP32[$__wn>>2]|0;
           $70 = ($68>>>0)<($$pre>>>0);
           if ($70) {
            $__nc$216 = $69;$__w$017 = $68;
           } else {
            $__nc$2$lcssa = $69;
            break;
           }
          }
         } else {
          $__nc$2$lcssa = $__nc$1;
         }
         HEAP8[$__nc$2$lcssa>>0] = 0;
         HEAP32[$vararg_buffer>>2] = $__v;
         $71 = (_sscanf($__nbuf,26108,$vararg_buffer)|0);
         $72 = ($71|0)==(1);
         if (!($72)) {
          __THREW__ = 0;
          invoke_vi(447,(26112|0));
          $73 = __THREW__; __THREW__ = 0;
          $74 = $73&1;
          if ($74) {
           $41 = $76;
           break;
          }
         }
         $75 = ($76|0)==(0);
         if (!($75)) {
          $77 = $76;
          _free($77);
         }
         break L7;
        }
       } while(0);
       $38 = ___cxa_find_matching_catch()|0;
       $39 = tempRet0;
       $40 = ($41|0)==(0);
       if ($40) {
        $$0 = $38;$$01 = $39;$$phi$trans$insert$pre$phiZZZZ2D = $__wb;
        break L4;
       }
       $42 = $41;
       _free($42);
       $$0 = $38;$$01 = $39;$$phi$trans$insert$pre$phiZZZZ2D = $__wb;
       break L4;
      }
     } while(0);
     $78 = HEAP32[$__b>>2]|0;
     $79 = ($78|0)==(0|0);
     do {
      if ($79) {
       $143 = 1;
      } else {
       $80 = ((($78)) + 12|0);
       $81 = HEAP32[$80>>2]|0;
       $82 = ((($78)) + 16|0);
       $83 = HEAP32[$82>>2]|0;
       $84 = ($81|0)==($83|0);
       if ($84) {
        $85 = HEAP32[$78>>2]|0;
        $86 = ((($85)) + 36|0);
        $87 = HEAP32[$86>>2]|0;
        __THREW__ = 0;
        $88 = (invoke_ii($87|0,($78|0))|0);
        $89 = __THREW__; __THREW__ = 0;
        $90 = $89&1;
        if ($90) {
         label = 10;
         break L4;
        } else {
         $$0$i$i$i$i = $88;
        }
       } else {
        $91 = HEAP32[$81>>2]|0;
        $$0$i$i$i$i = $91;
       }
       $92 = ($$0$i$i$i$i|0)==(-1);
       if ($92) {
        HEAP32[$__b>>2] = 0;
        $143 = 1;
        break;
       } else {
        $$pre$i$i$i = HEAP32[$__b>>2]|0;
        $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
        $143 = $phitmp$i$i$i;
        break;
       }
      }
     } while(0);
     $93 = HEAP32[$__e>>2]|0;
     $94 = ($93|0)==(0|0);
     do {
      if ($94) {
       label = 38;
      } else {
       $95 = ((($93)) + 12|0);
       $96 = HEAP32[$95>>2]|0;
       $97 = ((($93)) + 16|0);
       $98 = HEAP32[$97>>2]|0;
       $99 = ($96|0)==($98|0);
       if ($99) {
        $100 = HEAP32[$93>>2]|0;
        $101 = ((($100)) + 36|0);
        $102 = HEAP32[$101>>2]|0;
        __THREW__ = 0;
        $103 = (invoke_ii($102|0,($93|0))|0);
        $104 = __THREW__; __THREW__ = 0;
        $105 = $104&1;
        if ($105) {
         label = 10;
         break L4;
        } else {
         $$0$i$i1$i$i = $103;
        }
       } else {
        $106 = HEAP32[$96>>2]|0;
        $$0$i$i1$i$i = $106;
       }
       $107 = ($$0$i$i1$i$i|0)==(-1);
       if ($107) {
        HEAP32[$__e>>2] = 0;
        label = 38;
        break;
       } else {
        if ($143) {
         break;
        } else {
         label = 40;
         break;
        }
       }
      }
     } while(0);
     if ((label|0) == 38) {
      if ($143) {
       label = 40;
      }
     }
     if ((label|0) == 40) {
      $108 = HEAP32[$__err>>2]|0;
      $109 = $108 | 2;
      HEAP32[$__err>>2] = $109;
     }
     $110 = HEAP32[$__b>>2]|0;
     $111 = HEAP32[$__loc>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($111)|0);
     $112 = HEAP32[$__wb>>2]|0;
     HEAP32[$__wb>>2] = 0;
     $113 = ($112|0)==(0|0);
     if (!($113)) {
      $114 = HEAP32[$2>>2]|0;
      __THREW__ = 0;
      invoke_vi($114|0,($112|0));
      $115 = __THREW__; __THREW__ = 0;
      $116 = $115&1;
      if ($116) {
       $117 = ___cxa_find_matching_catch(0|0)|0;
       $118 = tempRet0;
       ___clang_call_terminate($117);
       // unreachable;
      }
     }
     STACKTOP = sp;return ($110|0);
    }
   }
  } while(0);
  if ((label|0) == 10) {
   $36 = ___cxa_find_matching_catch()|0;
   $37 = tempRet0;
   $$0 = $36;$$01 = $37;$$phi$trans$insert$pre$phiZZZZ2D = $__wb;
  }
  $119 = HEAP32[$__loc>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($119)|0);
  $$pre6 = HEAP32[$$phi$trans$insert$pre$phiZZZZ2D>>2]|0;
  HEAP32[$$phi$trans$insert$pre$phiZZZZ2D>>2] = 0;
  $120 = ($$pre6|0)==(0|0);
  if ($120) {
   $$113 = $$0;$$1211 = $$01;
  } else {
   $$pre14 = HEAP32[$2>>2]|0;
   $$112 = $$0;$$1210 = $$01;$121 = $$pre14;$122 = $$pre6;
   label = 47;
  }
 }
 if ((label|0) == 47) {
  __THREW__ = 0;
  invoke_vi($121|0,($122|0));
  $123 = __THREW__; __THREW__ = 0;
  $124 = $123&1;
  if ($124) {
   $125 = ___cxa_find_matching_catch(0|0)|0;
   $126 = tempRet0;
   ___clang_call_terminate($125);
   // unreachable;
  } else {
   $$113 = $$112;$$1211 = $$1210;
  }
 }
 ___resumeException($$113|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b,$__e,$__intl,$__loc,$__flags,$__err,$__neg,$__ct,$__wb,$__wn,$__we) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__flags = $__flags|0;
 $__err = $__err|0;
 $__neg = $__neg|0;
 $__ct = $__ct|0;
 $__wb = $__wb|0;
 $__wn = $__wn|0;
 $__we = $__we|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i126 = 0, $$0$i$i$i$i158 = 0, $$0$i$i$i$i183 = 0, $$0$i$i$i$i30 = 0, $$0$i$i$i$i51 = 0, $$0$i$i$i$i92 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i132 = 0, $$0$i$i1$i$i164 = 0, $$0$i$i1$i$i189 = 0, $$0$i$i1$i$i36 = 0, $$0$i$i1$i$i57 = 0, $$0$i$i1$i$i98 = 0, $$0$i$i110 = 0, $$0$i$i119 = 0, $$0$i$i122 = 0, $$0$i$i144 = 0;
 var $$0$i$i155 = 0, $$0$i$i179 = 0, $$0$i$i45 = 0, $$0$i$i49 = 0, $$0$i$i66 = 0, $$0$i$i73 = 0, $$0$i$i78 = 0, $$0$i$i86 = 0, $$0$i$i89 = 0, $$in386 = 0, $$lcssa261 = 0, $$lcssa357 = 0, $$lcssa416 = 0, $$lcssa418 = 0, $$ph = 0, $$ph345 = 0, $$ph346 = 0, $$phi$trans$insert = 0, $$phi$trans$insert296 = 0, $$pre = 0;
 var $$pre$i$i$i = 0, $$pre$i$i$i128 = 0, $$pre$i$i$i160 = 0, $$pre$i$i$i185 = 0, $$pre$i$i$i32 = 0, $$pre$i$i$i53 = 0, $$pre$i$i$i94 = 0, $$pre$i3$i$i100282$ph = 0, $$pre$i3$i$i100282306 = 0, $$pre$i3$i$i100382 = 0, $$pre$i3$i$i134 = 0, $$pre$i3$i$i166 = 0, $$pre$i3$i$i166275 = 0, $$pre$i3$i$i166277 = 0, $$pre$i3$i$i191290 = 0, $$pre$i3$i$i191291 = 0, $$pre$i3$i$i191391 = 0, $$pre$i3$i$i59 = 0, $$pre$i3$i$i59300 = 0, $$pre$i3$i$i59302 = 0;
 var $$pre279 = 0, $$pre281 = 0, $$pre284 = 0, $$pre285 = 0, $$pre286 = 0, $$pre287 = 0, $$pre288 = 0, $$pre289 = 0, $$pre293 = 0, $$pre294 = 0, $$pre295 = 0, $$pre297 = 0, $$pre298 = 0, $$pre299 = 0, $$sum = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0;
 var $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;
 var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0;
 var $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0;
 var $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0;
 var $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0;
 var $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0;
 var $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0;
 var $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0;
 var $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0;
 var $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0;
 var $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0;
 var $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0;
 var $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0;
 var $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0;
 var $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0;
 var $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0;
 var $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0;
 var $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0;
 var $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0;
 var $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0;
 var $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0;
 var $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0;
 var $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0;
 var $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0;
 var $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0;
 var $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0;
 var $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0;
 var $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0;
 var $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0;
 var $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0;
 var $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0;
 var $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0;
 var $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0;
 var $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0, $__gn = 0, $__grp = 0;
 var $__i$0 = 0, $__ng$0 = 0, $__ng$0$lcssa417 = 0, $__ng$1 = 0, $__nsn = 0, $__nsn$__trailing_sign$0 = 0, $__nsn$__trailing_sign$011 = 0, $__p$0397 = 0, $__pat = 0, $__psn = 0, $__psn$__trailing_sign$0 = 0, $__psn$__trailing_sign$010 = 0, $__spaces = 0, $__sym = 0, $__trailing_sign$0$lcssa = 0, $__trailing_sign$0399 = 0, $__trailing_sign$1 = 0, $__ts = 0, $brmerge = 0, $cond = 0;
 var $lpad$phi$index = 0, $lpad$phi$index8 = 0, $or$cond = 0, $or$cond13 = 0, $or$cond7 = 0, $or$cond9 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i129 = 0, $phitmp$i$i$i161 = 0, $phitmp$i$i$i186 = 0, $phitmp$i$i$i33 = 0, $phitmp$i$i$i54 = 0, $phitmp$i$i$i95 = 0, $phitmp$i4$i$i101 = 0, $phitmp$i4$i$i167 = 0, $phitmp$i4$i$i192 = 0, $phitmp$i4$i$i60 = 0, $switch = 0, $tmp$i$i103 = 0, $tmp$i$i169 = 0;
 var $tmp$i$i194 = 0, $tmp$i$i62 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 496|0;
 $__gbuf = sp + 96|0;
 $__gb = sp + 88|0;
 $__gn = sp + 80|0;
 $__ge = sp + 76|0;
 $__pat = sp + 500|0;
 $__dp = sp + 72|0;
 $__ts = sp + 68|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__psn = sp + 32|0;
 $__nsn = sp + 20|0;
 $__spaces = sp + 8|0;
 $__fd = sp + 4|0;
 $__et = sp;
 HEAP32[$0>>2] = $__we;
 $1 = $__gbuf;
 HEAP32[$__gb>>2] = $1;
 $2 = ((($__gb)) + 4|0);
 HEAP32[$2>>2] = (445);
 HEAP32[$__gn>>2] = $__gbuf;
 $3 = ((($__gbuf)) + 400|0);
 HEAP32[$__ge>>2] = $3;
 HEAP32[$__grp>>2] = 0;
 $4 = ((($__grp)) + 4|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($__grp)) + 8|0);
 HEAP32[$5>>2] = 0;
 HEAP32[$__sym>>2] = 0;
 $6 = ((($__sym)) + 4|0);
 HEAP32[$6>>2] = 0;
 $7 = ((($__sym)) + 8|0);
 HEAP32[$7>>2] = 0;
 HEAP32[$__psn>>2] = 0;
 $8 = ((($__psn)) + 4|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($__psn)) + 8|0);
 HEAP32[$9>>2] = 0;
 HEAP32[$__nsn>>2] = 0;
 $10 = ((($__nsn)) + 4|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($__nsn)) + 8|0);
 HEAP32[$11>>2] = 0;
 HEAP32[$__spaces>>2] = 0;
 $12 = ((($__spaces)) + 4|0);
 HEAP32[$12>>2] = 0;
 $13 = ((($__spaces)) + 8|0);
 HEAP32[$13>>2] = 0;
 __THREW__ = 0;
 invoke_viiiiiiiiii(455,($__intl|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__psn|0),($__nsn|0),($__fd|0));
 $14 = __THREW__; __THREW__ = 0;
 $15 = $14&1;
 L1: do {
  if ($15) {
   $77 = ___cxa_find_matching_catch()|0;
   $78 = tempRet0;
   $lpad$phi$index = $77;$lpad$phi$index8 = $78;
  } else {
   $16 = HEAP32[$__wb>>2]|0;
   HEAP32[$__wn>>2] = $16;
   $17 = ((($__psn)) + 4|0);
   $18 = ((($__nsn)) + 4|0);
   $19 = ((($__nsn)) + 8|0);
   $20 = ((($__psn)) + 8|0);
   $21 = $__flags & 512;
   $22 = ($21|0)!=(0);
   $23 = ((($__sym)) + 8|0);
   $24 = ((($__sym)) + 4|0);
   $25 = ((($__spaces)) + 4|0);
   $26 = ((($__spaces)) + 8|0);
   $27 = ((($__pat)) + 3|0);
   $28 = ((($__grp)) + 4|0);
   $863 = $__gbuf;$__p$0397 = 0;$__trailing_sign$0399 = 0;
   L4: while(1) {
    $29 = HEAP32[$__b>>2]|0;
    $30 = ($29|0)==(0|0);
    do {
     if ($30) {
      $864 = 1;
     } else {
      $31 = ((($29)) + 12|0);
      $32 = HEAP32[$31>>2]|0;
      $33 = ((($29)) + 16|0);
      $34 = HEAP32[$33>>2]|0;
      $35 = ($32|0)==($34|0);
      if ($35) {
       $36 = HEAP32[$29>>2]|0;
       $37 = ((($36)) + 36|0);
       $38 = HEAP32[$37>>2]|0;
       __THREW__ = 0;
       $39 = (invoke_ii($38|0,($29|0))|0);
       $40 = __THREW__; __THREW__ = 0;
       $41 = $40&1;
       if ($41) {
        label = 26;
        break L4;
       } else {
        $$0$i$i$i$i30 = $39;
       }
      } else {
       $42 = HEAP32[$32>>2]|0;
       $$0$i$i$i$i30 = $42;
      }
      $43 = ($$0$i$i$i$i30|0)==(-1);
      if ($43) {
       HEAP32[$__b>>2] = 0;
       $864 = 1;
       break;
      } else {
       $$pre$i$i$i32 = HEAP32[$__b>>2]|0;
       $phitmp$i$i$i33 = ($$pre$i$i$i32|0)==(0|0);
       $864 = $phitmp$i$i$i33;
       break;
      }
     }
    } while(0);
    $44 = HEAP32[$__e>>2]|0;
    $45 = ($44|0)==(0|0);
    do {
     if ($45) {
      label = 16;
     } else {
      $46 = ((($44)) + 12|0);
      $47 = HEAP32[$46>>2]|0;
      $48 = ((($44)) + 16|0);
      $49 = HEAP32[$48>>2]|0;
      $50 = ($47|0)==($49|0);
      if ($50) {
       $51 = HEAP32[$44>>2]|0;
       $52 = ((($51)) + 36|0);
       $53 = HEAP32[$52>>2]|0;
       __THREW__ = 0;
       $54 = (invoke_ii($53|0,($44|0))|0);
       $55 = __THREW__; __THREW__ = 0;
       $56 = $55&1;
       if ($56) {
        label = 26;
        break L4;
       } else {
        $$0$i$i1$i$i36 = $54;
       }
      } else {
       $57 = HEAP32[$47>>2]|0;
       $$0$i$i1$i$i36 = $57;
      }
      $58 = ($$0$i$i1$i$i36|0)==(-1);
      if ($58) {
       HEAP32[$__e>>2] = 0;
       label = 16;
       break;
      } else {
       if ($864) {
        $865 = $44;
        break;
       } else {
        $$lcssa357 = $863;$__trailing_sign$0$lcssa = $__trailing_sign$0399;
        label = 244;
        break L4;
       }
      }
     }
    } while(0);
    if ((label|0) == 16) {
     label = 0;
     if ($864) {
      $$lcssa357 = $863;$__trailing_sign$0$lcssa = $__trailing_sign$0399;
      label = 244;
      break;
     } else {
      $865 = 0;
     }
    }
    $59 = (($__pat) + ($__p$0397)|0);
    $60 = HEAP8[$59>>0]|0;
    $61 = $60 << 24 >> 24;
    L28: do {
     switch ($61|0) {
     case 1:  {
      $cond = ($__p$0397|0)==(3);
      if ($cond) {
       $866 = $863;$__trailing_sign$1 = $__trailing_sign$0399;
      } else {
       $86 = HEAP32[$__b>>2]|0;
       $87 = ((($86)) + 12|0);
       $88 = HEAP32[$87>>2]|0;
       $89 = ((($86)) + 16|0);
       $90 = HEAP32[$89>>2]|0;
       $91 = ($88|0)==($90|0);
       if ($91) {
        $92 = HEAP32[$86>>2]|0;
        $93 = ((($92)) + 36|0);
        $94 = HEAP32[$93>>2]|0;
        __THREW__ = 0;
        $95 = (invoke_ii($94|0,($86|0))|0);
        $96 = __THREW__; __THREW__ = 0;
        $97 = $96&1;
        if ($97) {
         label = 26;
         break L4;
        } else {
         $$0$i$i45 = $95;
        }
       } else {
        $98 = HEAP32[$88>>2]|0;
        $$0$i$i45 = $98;
       }
       $99 = HEAP32[$__ct>>2]|0;
       $100 = ((($99)) + 12|0);
       $101 = HEAP32[$100>>2]|0;
       __THREW__ = 0;
       $102 = (invoke_iiii($101|0,($__ct|0),8192,($$0$i$i45|0))|0);
       $103 = __THREW__; __THREW__ = 0;
       $104 = $103&1;
       if ($104) {
        label = 26;
        break L4;
       }
       if (!($102)) {
        label = 42;
        break L4;
       }
       $105 = HEAP32[$__b>>2]|0;
       $106 = ((($105)) + 12|0);
       $107 = HEAP32[$106>>2]|0;
       $108 = ((($105)) + 16|0);
       $109 = HEAP32[$108>>2]|0;
       $110 = ($107|0)==($109|0);
       if ($110) {
        $111 = HEAP32[$105>>2]|0;
        $112 = ((($111)) + 40|0);
        $113 = HEAP32[$112>>2]|0;
        __THREW__ = 0;
        $114 = (invoke_ii($113|0,($105|0))|0);
        $115 = __THREW__; __THREW__ = 0;
        $116 = $115&1;
        if ($116) {
         label = 26;
         break L4;
        } else {
         $$0$i$i49 = $114;
        }
       } else {
        $117 = ((($107)) + 4|0);
        HEAP32[$106>>2] = $117;
        $118 = HEAP32[$107>>2]|0;
        $$0$i$i49 = $118;
       }
       __THREW__ = 0;
       invoke_vii(456,($__spaces|0),($$0$i$i49|0));
       $119 = __THREW__; __THREW__ = 0;
       $120 = $119&1;
       if ($120) {
        label = 26;
        break L4;
       } else {
        $$pre$i3$i$i59 = $865;$140 = $865;
        label = 44;
       }
      }
      break;
     }
     case 0:  {
      $123 = ($__p$0397|0)==(3);
      if ($123) {
       $866 = $863;$__trailing_sign$1 = $__trailing_sign$0399;
      } else {
       $$pre$i3$i$i59 = $865;$140 = $865;
       label = 44;
      }
      break;
     }
     case 3:  {
      $190 = HEAP8[$__psn>>0]|0;
      $191 = $190 & 1;
      $192 = ($191<<24>>24)==(0);
      $193 = HEAP32[$17>>2]|0;
      $194 = $190&255;
      $195 = $194 >>> 1;
      $196 = $192 ? $195 : $193;
      $197 = HEAP8[$__nsn>>0]|0;
      $198 = $197 & 1;
      $199 = ($198<<24>>24)==(0);
      $200 = HEAP32[$18>>2]|0;
      $201 = $197&255;
      $202 = $201 >>> 1;
      $203 = $199 ? $202 : $200;
      $204 = (0 - ($203))|0;
      $205 = ($196|0)==($204|0);
      if ($205) {
       $866 = $863;$__trailing_sign$1 = $__trailing_sign$0399;
      } else {
       $206 = ($196|0)==(0);
       if ($206) {
        $248 = HEAP32[$__b>>2]|0;
        $249 = ((($248)) + 12|0);
        $250 = HEAP32[$249>>2]|0;
        $251 = ((($248)) + 16|0);
        $252 = HEAP32[$251>>2]|0;
        $253 = ($250|0)==($252|0);
        if ($253) {
         $254 = HEAP32[$248>>2]|0;
         $255 = ((($254)) + 36|0);
         $256 = HEAP32[$255>>2]|0;
         __THREW__ = 0;
         $257 = (invoke_ii($256|0,($248|0))|0);
         $258 = __THREW__; __THREW__ = 0;
         $259 = $258&1;
         if ($259) {
          label = 26;
          break L4;
         }
         $$pre299 = HEAP8[$__nsn>>0]|0;
         $$0$i$i110 = $257;$262 = $$pre299;
        } else {
         $260 = HEAP32[$250>>2]|0;
         $$0$i$i110 = $260;$262 = $197;
        }
        $261 = $262 & 1;
        $263 = ($261<<24>>24)==(0);
        $264 = HEAP32[$19>>2]|0;
        $265 = $263 ? $18 : $264;
        $266 = HEAP32[$265>>2]|0;
        $267 = ($$0$i$i110|0)==($266|0);
        if (!($267)) {
         $866 = $863;$__trailing_sign$1 = $__trailing_sign$0399;
         break L28;
        }
        $268 = HEAP32[$__b>>2]|0;
        $269 = ((($268)) + 12|0);
        $270 = HEAP32[$269>>2]|0;
        $271 = ((($268)) + 16|0);
        $272 = HEAP32[$271>>2]|0;
        $273 = ($270|0)==($272|0);
        if ($273) {
         $274 = HEAP32[$268>>2]|0;
         $275 = ((($274)) + 40|0);
         $276 = HEAP32[$275>>2]|0;
         __THREW__ = 0;
         (invoke_ii($276|0,($268|0))|0);
         $277 = __THREW__; __THREW__ = 0;
         $278 = $277&1;
         if ($278) {
          label = 26;
          break L4;
         }
        } else {
         $279 = ((($270)) + 4|0);
         HEAP32[$269>>2] = $279;
        }
        HEAP8[$__neg>>0] = 1;
        $280 = HEAP8[$__nsn>>0]|0;
        $281 = $280 & 1;
        $282 = ($281<<24>>24)==(0);
        $283 = HEAP32[$18>>2]|0;
        $284 = $280&255;
        $285 = $284 >>> 1;
        $286 = $282 ? $285 : $283;
        $287 = ($286>>>0)>(1);
        $__nsn$__trailing_sign$0 = $287 ? $__nsn : $__trailing_sign$0399;
        $866 = $863;$__trailing_sign$1 = $__nsn$__trailing_sign$0;
        break L28;
       }
       $207 = ($203|0)==(0);
       $208 = HEAP32[$__b>>2]|0;
       $209 = ((($208)) + 12|0);
       $210 = HEAP32[$209>>2]|0;
       $211 = ((($208)) + 16|0);
       $212 = HEAP32[$211>>2]|0;
       $213 = ($210|0)==($212|0);
       if ($207) {
        if ($213) {
         $214 = HEAP32[$208>>2]|0;
         $215 = ((($214)) + 36|0);
         $216 = HEAP32[$215>>2]|0;
         __THREW__ = 0;
         $217 = (invoke_ii($216|0,($208|0))|0);
         $218 = __THREW__; __THREW__ = 0;
         $219 = $218&1;
         if ($219) {
          label = 26;
          break L4;
         }
         $$pre298 = HEAP8[$__psn>>0]|0;
         $$0$i$i89 = $217;$222 = $$pre298;
        } else {
         $220 = HEAP32[$210>>2]|0;
         $$0$i$i89 = $220;$222 = $190;
        }
        $221 = $222 & 1;
        $223 = ($221<<24>>24)==(0);
        $224 = HEAP32[$20>>2]|0;
        $225 = $223 ? $17 : $224;
        $226 = HEAP32[$225>>2]|0;
        $227 = ($$0$i$i89|0)==($226|0);
        if (!($227)) {
         HEAP8[$__neg>>0] = 1;
         $866 = $863;$__trailing_sign$1 = $__trailing_sign$0399;
         break L28;
        }
        $228 = HEAP32[$__b>>2]|0;
        $229 = ((($228)) + 12|0);
        $230 = HEAP32[$229>>2]|0;
        $231 = ((($228)) + 16|0);
        $232 = HEAP32[$231>>2]|0;
        $233 = ($230|0)==($232|0);
        if ($233) {
         $234 = HEAP32[$228>>2]|0;
         $235 = ((($234)) + 40|0);
         $236 = HEAP32[$235>>2]|0;
         __THREW__ = 0;
         (invoke_ii($236|0,($228|0))|0);
         $237 = __THREW__; __THREW__ = 0;
         $238 = $237&1;
         if ($238) {
          label = 26;
          break L4;
         }
        } else {
         $239 = ((($230)) + 4|0);
         HEAP32[$229>>2] = $239;
        }
        $240 = HEAP8[$__psn>>0]|0;
        $241 = $240 & 1;
        $242 = ($241<<24>>24)==(0);
        $243 = HEAP32[$17>>2]|0;
        $244 = $240&255;
        $245 = $244 >>> 1;
        $246 = $242 ? $245 : $243;
        $247 = ($246>>>0)>(1);
        $__psn$__trailing_sign$0 = $247 ? $__psn : $__trailing_sign$0399;
        $866 = $863;$__trailing_sign$1 = $__psn$__trailing_sign$0;
        break L28;
       }
       if ($213) {
        $288 = HEAP32[$208>>2]|0;
        $289 = ((($288)) + 36|0);
        $290 = HEAP32[$289>>2]|0;
        __THREW__ = 0;
        $291 = (invoke_ii($290|0,($208|0))|0);
        $292 = __THREW__; __THREW__ = 0;
        $293 = $292&1;
        if ($293) {
         label = 26;
         break L4;
        }
        $$pre293 = HEAP8[$__psn>>0]|0;
        $$pre294 = HEAP32[$__b>>2]|0;
        $$phi$trans$insert = ((($$pre294)) + 12|0);
        $$pre295 = HEAP32[$$phi$trans$insert>>2]|0;
        $$phi$trans$insert296 = ((($$pre294)) + 16|0);
        $$pre297 = HEAP32[$$phi$trans$insert296>>2]|0;
        $$0$i$i122 = $291;$296 = $$pre293;$303 = $$pre294;$305 = $$pre295;$306 = $$pre297;
       } else {
        $294 = HEAP32[$210>>2]|0;
        $$0$i$i122 = $294;$296 = $190;$303 = $208;$305 = $210;$306 = $212;
       }
       $295 = $296 & 1;
       $297 = ($295<<24>>24)==(0);
       $298 = HEAP32[$20>>2]|0;
       $299 = $297 ? $17 : $298;
       $300 = HEAP32[$299>>2]|0;
       $301 = ($$0$i$i122|0)==($300|0);
       $302 = ((($303)) + 12|0);
       $304 = ($305|0)==($306|0);
       if ($301) {
        if ($304) {
         $307 = HEAP32[$303>>2]|0;
         $308 = ((($307)) + 40|0);
         $309 = HEAP32[$308>>2]|0;
         __THREW__ = 0;
         (invoke_ii($309|0,($303|0))|0);
         $310 = __THREW__; __THREW__ = 0;
         $311 = $310&1;
         if ($311) {
          label = 26;
          break L4;
         }
        } else {
         $312 = ((($305)) + 4|0);
         HEAP32[$302>>2] = $312;
        }
        $313 = HEAP8[$__psn>>0]|0;
        $314 = $313 & 1;
        $315 = ($314<<24>>24)==(0);
        $316 = HEAP32[$17>>2]|0;
        $317 = $313&255;
        $318 = $317 >>> 1;
        $319 = $315 ? $318 : $316;
        $320 = ($319>>>0)>(1);
        $__psn$__trailing_sign$010 = $320 ? $__psn : $__trailing_sign$0399;
        $866 = $863;$__trailing_sign$1 = $__psn$__trailing_sign$010;
        break L28;
       }
       if ($304) {
        $321 = HEAP32[$303>>2]|0;
        $322 = ((($321)) + 36|0);
        $323 = HEAP32[$322>>2]|0;
        __THREW__ = 0;
        $324 = (invoke_ii($323|0,($303|0))|0);
        $325 = __THREW__; __THREW__ = 0;
        $326 = $325&1;
        if ($326) {
         label = 26;
         break L4;
        } else {
         $$0$i$i144 = $324;
        }
       } else {
        $327 = HEAP32[$305>>2]|0;
        $$0$i$i144 = $327;
       }
       $328 = HEAP8[$__nsn>>0]|0;
       $329 = $328 & 1;
       $330 = ($329<<24>>24)==(0);
       $331 = HEAP32[$19>>2]|0;
       $332 = $330 ? $18 : $331;
       $333 = HEAP32[$332>>2]|0;
       $334 = ($$0$i$i144|0)==($333|0);
       if (!($334)) {
        label = 107;
        break L4;
       }
       $335 = HEAP32[$__b>>2]|0;
       $336 = ((($335)) + 12|0);
       $337 = HEAP32[$336>>2]|0;
       $338 = ((($335)) + 16|0);
       $339 = HEAP32[$338>>2]|0;
       $340 = ($337|0)==($339|0);
       if ($340) {
        $341 = HEAP32[$335>>2]|0;
        $342 = ((($341)) + 40|0);
        $343 = HEAP32[$342>>2]|0;
        __THREW__ = 0;
        (invoke_ii($343|0,($335|0))|0);
        $344 = __THREW__; __THREW__ = 0;
        $345 = $344&1;
        if ($345) {
         label = 26;
         break L4;
        }
       } else {
        $346 = ((($337)) + 4|0);
        HEAP32[$336>>2] = $346;
       }
       HEAP8[$__neg>>0] = 1;
       $347 = HEAP8[$__nsn>>0]|0;
       $348 = $347 & 1;
       $349 = ($348<<24>>24)==(0);
       $350 = HEAP32[$18>>2]|0;
       $351 = $347&255;
       $352 = $351 >>> 1;
       $353 = $349 ? $352 : $350;
       $354 = ($353>>>0)>(1);
       $__nsn$__trailing_sign$011 = $354 ? $__nsn : $__trailing_sign$0399;
       $866 = $863;$__trailing_sign$1 = $__nsn$__trailing_sign$011;
      }
      break;
     }
     case 2:  {
      $357 = ($__trailing_sign$0399|0)!=(0|0);
      $358 = ($__p$0397>>>0)<(2);
      $or$cond = $358 | $357;
      if (!($or$cond)) {
       $359 = ($__p$0397|0)==(2);
       $360 = HEAP8[$27>>0]|0;
       $361 = ($360<<24>>24)!=(0);
       $362 = $359 & $361;
       $brmerge = $22 | $362;
       if (!($brmerge)) {
        $866 = $863;$__trailing_sign$1 = 0;
        break L28;
       }
      }
      $363 = HEAP8[$__sym>>0]|0;
      $364 = $363 & 1;
      $365 = ($364<<24>>24)==(0);
      $366 = HEAP32[$23>>2]|0;
      $367 = $365 ? $24 : $366;
      $368 = $367;
      $369 = ($__p$0397|0)==(0);
      L97: do {
       if ($369) {
        $$ph = $366;$$ph345 = $363;$$ph346 = $368;
       } else {
        $380 = (($__p$0397) + -1)|0;
        $381 = (($__pat) + ($380)|0);
        $382 = HEAP8[$381>>0]|0;
        $switch = ($382&255)<(2);
        if ($switch) {
         $383 = $363 & 1;
         $384 = ($383<<24>>24)==(0);
         $385 = HEAP32[$24>>2]|0;
         $386 = $363&255;
         $387 = $386 >>> 1;
         $388 = $384 ? $24 : $366;
         $389 = $384 ? $387 : $385;
         $390 = (($388) + ($389<<2)|0);
         $391 = ($367|0)==($390|0);
         L100: do {
          if ($391) {
           $412 = $363;$415 = $366;$418 = $368;
          } else {
           $393 = $367;$868 = $368;
           while(1) {
            $392 = HEAP32[$393>>2]|0;
            $394 = HEAP32[$__ct>>2]|0;
            $395 = ((($394)) + 12|0);
            $396 = HEAP32[$395>>2]|0;
            __THREW__ = 0;
            $397 = (invoke_iiii($396|0,($__ct|0),8192,($392|0))|0);
            $398 = __THREW__; __THREW__ = 0;
            $399 = $398&1;
            if ($399) {
             label = 23;
             break L4;
            }
            if (!($397)) {
             $$lcssa418 = $868;
             break;
            }
            $400 = ((($393)) + 4|0);
            $401 = $400;
            $$pre284 = HEAP8[$__sym>>0]|0;
            $$pre285 = HEAP32[$23>>2]|0;
            $402 = $$pre284 & 1;
            $403 = ($402<<24>>24)==(0);
            $404 = HEAP32[$24>>2]|0;
            $405 = $$pre284&255;
            $406 = $405 >>> 1;
            $407 = $403 ? $24 : $$pre285;
            $408 = $403 ? $406 : $404;
            $409 = (($407) + ($408<<2)|0);
            $410 = ($400|0)==($409|0);
            if ($410) {
             $412 = $$pre284;$415 = $$pre285;$418 = $401;
             break L100;
            } else {
             $393 = $400;$868 = $401;
            }
           }
           $$pre286 = HEAP8[$__sym>>0]|0;
           $$pre287 = HEAP32[$23>>2]|0;
           $412 = $$pre286;$415 = $$pre287;$418 = $$lcssa418;
          }
         } while(0);
         $411 = $412 & 1;
         $413 = ($411<<24>>24)==(0);
         $414 = $413 ? $24 : $415;
         $416 = $414;
         $417 = (($418) - ($416))|0;
         $419 = $417 >> 2;
         $420 = HEAP8[$__spaces>>0]|0;
         $421 = $420 & 1;
         $422 = ($421<<24>>24)==(0);
         $423 = HEAP32[$25>>2]|0;
         $424 = $420&255;
         $425 = $424 >>> 1;
         $426 = $422 ? $425 : $423;
         $427 = ($426>>>0)<($419>>>0);
         if ($427) {
          $$ph = $415;$$ph345 = $412;$$ph346 = $416;
         } else {
          $428 = HEAP32[$26>>2]|0;
          $429 = $422 ? $25 : $428;
          $430 = (($429) + ($426<<2)|0);
          $431 = ($419|0)==(0);
          if ($431) {
           $$ph = $415;$$ph345 = $412;$$ph346 = $418;
          } else {
           $$sum = (($426) - ($419))|0;
           $432 = (($429) + ($$sum<<2)|0);
           $$in386 = $414;$434 = $432;
           while(1) {
            $433 = HEAP32[$434>>2]|0;
            $435 = HEAP32[$$in386>>2]|0;
            $436 = ($433|0)==($435|0);
            if (!($436)) {
             $$ph = $415;$$ph345 = $412;$$ph346 = $416;
             break L97;
            }
            $437 = ((($434)) + 4|0);
            $438 = ((($$in386)) + 4|0);
            $439 = ($437|0)==($430|0);
            if ($439) {
             $$ph = $415;$$ph345 = $412;$$ph346 = $418;
             break;
            } else {
             $$in386 = $438;$434 = $437;
            }
           }
          }
         }
        } else {
         $$ph = $366;$$ph345 = $363;$$ph346 = $368;
        }
       }
      } while(0);
      $370 = $$ph345 & 1;
      $371 = ($370<<24>>24)==(0);
      $372 = HEAP32[$24>>2]|0;
      $373 = $$ph345&255;
      $374 = $373 >>> 1;
      $375 = $371 ? $24 : $$ph;
      $376 = $371 ? $374 : $372;
      $377 = (($375) + ($376<<2)|0);
      $378 = $$ph346;
      $379 = ($378|0)==($377|0);
      L113: do {
       if ($379) {
        $$lcssa261 = $377;
       } else {
        $$pre$i3$i$i191391 = $865;$456 = $865;$485 = $378;
        while(1) {
         $440 = HEAP32[$__b>>2]|0;
         $441 = ($440|0)==(0|0);
         do {
          if ($441) {
           $470 = 1;
          } else {
           $442 = ((($440)) + 12|0);
           $443 = HEAP32[$442>>2]|0;
           $444 = ((($440)) + 16|0);
           $445 = HEAP32[$444>>2]|0;
           $446 = ($443|0)==($445|0);
           if ($446) {
            $447 = HEAP32[$440>>2]|0;
            $448 = ((($447)) + 36|0);
            $449 = HEAP32[$448>>2]|0;
            __THREW__ = 0;
            $450 = (invoke_ii($449|0,($440|0))|0);
            $451 = __THREW__; __THREW__ = 0;
            $452 = $451&1;
            if ($452) {
             label = 22;
             break L4;
            } else {
             $$0$i$i$i$i183 = $450;
            }
           } else {
            $453 = HEAP32[$443>>2]|0;
            $$0$i$i$i$i183 = $453;
           }
           $454 = ($$0$i$i$i$i183|0)==(-1);
           if ($454) {
            HEAP32[$__b>>2] = 0;
            $470 = 1;
            break;
           } else {
            $$pre$i$i$i185 = HEAP32[$__b>>2]|0;
            $phitmp$i$i$i186 = ($$pre$i$i$i185|0)==(0|0);
            $470 = $phitmp$i$i$i186;
            break;
           }
          }
         } while(0);
         $455 = ($456|0)==(0|0);
         do {
          if ($455) {
           $$pre$i3$i$i191291 = $$pre$i3$i$i191391;
           label = 136;
          } else {
           $457 = ((($456)) + 12|0);
           $458 = HEAP32[$457>>2]|0;
           $459 = ((($456)) + 16|0);
           $460 = HEAP32[$459>>2]|0;
           $461 = ($458|0)==($460|0);
           if ($461) {
            $462 = HEAP32[$456>>2]|0;
            $463 = ((($462)) + 36|0);
            $464 = HEAP32[$463>>2]|0;
            __THREW__ = 0;
            $465 = (invoke_ii($464|0,($456|0))|0);
            $466 = __THREW__; __THREW__ = 0;
            $467 = $466&1;
            if ($467) {
             label = 22;
             break L4;
            } else {
             $$0$i$i1$i$i189 = $465;
            }
           } else {
            $468 = HEAP32[$458>>2]|0;
            $$0$i$i1$i$i189 = $468;
           }
           $469 = ($$0$i$i1$i$i189|0)==(-1);
           if ($469) {
            HEAP32[$__e>>2] = 0;
            $$pre$i3$i$i191291 = 0;
            label = 136;
            break;
           } else {
            $phitmp$i4$i$i192 = ($$pre$i3$i$i191391|0)==(0|0);
            $tmp$i$i194 = $470 ^ $phitmp$i4$i$i192;
            if ($tmp$i$i194) {
             $$pre$i3$i$i191290 = $$pre$i3$i$i191391;$869 = $$pre$i3$i$i191391;
             break;
            } else {
             $$lcssa261 = $485;
             break L113;
            }
           }
          }
         } while(0);
         if ((label|0) == 136) {
          label = 0;
          if ($470) {
           $$lcssa261 = $485;
           break L113;
          } else {
           $$pre$i3$i$i191290 = $$pre$i3$i$i191291;$869 = 0;
          }
         }
         $471 = HEAP32[$__b>>2]|0;
         $472 = ((($471)) + 12|0);
         $473 = HEAP32[$472>>2]|0;
         $474 = ((($471)) + 16|0);
         $475 = HEAP32[$474>>2]|0;
         $476 = ($473|0)==($475|0);
         if ($476) {
          $477 = HEAP32[$471>>2]|0;
          $478 = ((($477)) + 36|0);
          $479 = HEAP32[$478>>2]|0;
          __THREW__ = 0;
          $480 = (invoke_ii($479|0,($471|0))|0);
          $481 = __THREW__; __THREW__ = 0;
          $482 = $481&1;
          if ($482) {
           label = 22;
           break L4;
          } else {
           $$0$i$i179 = $480;
          }
         } else {
          $483 = HEAP32[$473>>2]|0;
          $$0$i$i179 = $483;
         }
         $484 = HEAP32[$485>>2]|0;
         $486 = ($$0$i$i179|0)==($484|0);
         if (!($486)) {
          $$lcssa261 = $485;
          break L113;
         }
         $487 = HEAP32[$__b>>2]|0;
         $488 = ((($487)) + 12|0);
         $489 = HEAP32[$488>>2]|0;
         $490 = ((($487)) + 16|0);
         $491 = HEAP32[$490>>2]|0;
         $492 = ($489|0)==($491|0);
         if ($492) {
          $493 = HEAP32[$487>>2]|0;
          $494 = ((($493)) + 40|0);
          $495 = HEAP32[$494>>2]|0;
          __THREW__ = 0;
          (invoke_ii($495|0,($487|0))|0);
          $496 = __THREW__; __THREW__ = 0;
          $497 = $496&1;
          if ($497) {
           label = 22;
           break L4;
          }
         } else {
          $498 = ((($489)) + 4|0);
          HEAP32[$488>>2] = $498;
         }
         $499 = ((($485)) + 4|0);
         $$pre288 = HEAP8[$__sym>>0]|0;
         $$pre289 = HEAP32[$23>>2]|0;
         $500 = $$pre288 & 1;
         $501 = ($500<<24>>24)==(0);
         $502 = HEAP32[$24>>2]|0;
         $503 = $$pre288&255;
         $504 = $503 >>> 1;
         $505 = $501 ? $24 : $$pre289;
         $506 = $501 ? $504 : $502;
         $507 = (($505) + ($506<<2)|0);
         $508 = ($499|0)==($507|0);
         if ($508) {
          $$lcssa261 = $507;
          break;
         } else {
          $$pre$i3$i$i191391 = $$pre$i3$i$i191290;$456 = $869;$485 = $499;
         }
        }
       }
      } while(0);
      if ($22) {
       $509 = HEAP8[$__sym>>0]|0;
       $510 = $509 & 1;
       $511 = ($510<<24>>24)==(0);
       $512 = HEAP32[$23>>2]|0;
       $513 = HEAP32[$24>>2]|0;
       $514 = $509&255;
       $515 = $514 >>> 1;
       $516 = $511 ? $24 : $512;
       $517 = $511 ? $515 : $513;
       $518 = (($516) + ($517<<2)|0);
       $519 = ($$lcssa261|0)==($518|0);
       if ($519) {
        $866 = $863;$__trailing_sign$1 = $__trailing_sign$0399;
       } else {
        label = 148;
        break L4;
       }
      } else {
       $866 = $863;$__trailing_sign$1 = $__trailing_sign$0399;
      }
      break;
     }
     case 4:  {
      $62 = HEAP32[$__ts>>2]|0;
      $$pre$i3$i$i166 = $865;$538 = $865;$592 = $863;$__ng$0 = 0;
      L150: while(1) {
       $522 = HEAP32[$__b>>2]|0;
       $523 = ($522|0)==(0|0);
       do {
        if ($523) {
         $552 = 1;
        } else {
         $524 = ((($522)) + 12|0);
         $525 = HEAP32[$524>>2]|0;
         $526 = ((($522)) + 16|0);
         $527 = HEAP32[$526>>2]|0;
         $528 = ($525|0)==($527|0);
         if ($528) {
          $529 = HEAP32[$522>>2]|0;
          $530 = ((($529)) + 36|0);
          $531 = HEAP32[$530>>2]|0;
          __THREW__ = 0;
          $532 = (invoke_ii($531|0,($522|0))|0);
          $533 = __THREW__; __THREW__ = 0;
          $534 = $533&1;
          if ($534) {
           label = 25;
           break L4;
          } else {
           $$0$i$i$i$i158 = $532;
          }
         } else {
          $535 = HEAP32[$525>>2]|0;
          $$0$i$i$i$i158 = $535;
         }
         $536 = ($$0$i$i$i$i158|0)==(-1);
         if ($536) {
          HEAP32[$__b>>2] = 0;
          $552 = 1;
          break;
         } else {
          $$pre$i$i$i160 = HEAP32[$__b>>2]|0;
          $phitmp$i$i$i161 = ($$pre$i$i$i160|0)==(0|0);
          $552 = $phitmp$i$i$i161;
          break;
         }
        }
       } while(0);
       $537 = ($538|0)==(0|0);
       do {
        if ($537) {
         $$pre$i3$i$i166275 = $$pre$i3$i$i166;
         label = 162;
        } else {
         $539 = ((($538)) + 12|0);
         $540 = HEAP32[$539>>2]|0;
         $541 = ((($538)) + 16|0);
         $542 = HEAP32[$541>>2]|0;
         $543 = ($540|0)==($542|0);
         if ($543) {
          $544 = HEAP32[$538>>2]|0;
          $545 = ((($544)) + 36|0);
          $546 = HEAP32[$545>>2]|0;
          __THREW__ = 0;
          $547 = (invoke_ii($546|0,($538|0))|0);
          $548 = __THREW__; __THREW__ = 0;
          $549 = $548&1;
          if ($549) {
           label = 25;
           break L4;
          } else {
           $$0$i$i1$i$i164 = $547;
          }
         } else {
          $550 = HEAP32[$540>>2]|0;
          $$0$i$i1$i$i164 = $550;
         }
         $551 = ($$0$i$i1$i$i164|0)==(-1);
         if ($551) {
          HEAP32[$__e>>2] = 0;
          $$pre$i3$i$i166275 = 0;
          label = 162;
          break;
         } else {
          $phitmp$i4$i$i167 = ($$pre$i3$i$i166|0)==(0|0);
          $tmp$i$i169 = $552 ^ $phitmp$i4$i$i167;
          if ($tmp$i$i169) {
           $$pre$i3$i$i166277 = $$pre$i3$i$i166;$870 = $$pre$i3$i$i166;
           break;
          } else {
           $$lcssa416 = $592;$$pre$i3$i$i134 = $$pre$i3$i$i166;$__ng$0$lcssa417 = $__ng$0;
           break L150;
          }
         }
        }
       } while(0);
       if ((label|0) == 162) {
        label = 0;
        if ($552) {
         $$lcssa416 = $592;$$pre$i3$i$i134 = $$pre$i3$i$i166275;$__ng$0$lcssa417 = $__ng$0;
         break;
        } else {
         $$pre$i3$i$i166277 = $$pre$i3$i$i166275;$870 = 0;
        }
       }
       $553 = HEAP32[$__b>>2]|0;
       $554 = ((($553)) + 12|0);
       $555 = HEAP32[$554>>2]|0;
       $556 = ((($553)) + 16|0);
       $557 = HEAP32[$556>>2]|0;
       $558 = ($555|0)==($557|0);
       if ($558) {
        $559 = HEAP32[$553>>2]|0;
        $560 = ((($559)) + 36|0);
        $561 = HEAP32[$560>>2]|0;
        __THREW__ = 0;
        $562 = (invoke_ii($561|0,($553|0))|0);
        $563 = __THREW__; __THREW__ = 0;
        $564 = $563&1;
        if ($564) {
         label = 25;
         break L4;
        } else {
         $$0$i$i155 = $562;
        }
       } else {
        $565 = HEAP32[$555>>2]|0;
        $$0$i$i155 = $565;
       }
       $566 = HEAP32[$__ct>>2]|0;
       $567 = ((($566)) + 12|0);
       $568 = HEAP32[$567>>2]|0;
       __THREW__ = 0;
       $569 = (invoke_iiii($568|0,($__ct|0),2048,($$0$i$i155|0))|0);
       $570 = __THREW__; __THREW__ = 0;
       $571 = $570&1;
       if ($571) {
        label = 25;
        break L4;
       }
       if ($569) {
        $572 = HEAP32[$__wn>>2]|0;
        $573 = HEAP32[$0>>2]|0;
        $574 = ($572|0)==($573|0);
        if ($574) {
         __THREW__ = 0;
         invoke_viii(457,($__wb|0),($__wn|0),($0|0));
         $575 = __THREW__; __THREW__ = 0;
         $576 = $575&1;
         if ($576) {
          label = 25;
          break L4;
         }
         $$pre279 = HEAP32[$__wn>>2]|0;
         $578 = $$pre279;
        } else {
         $578 = $572;
        }
        $577 = ((($578)) + 4|0);
        HEAP32[$__wn>>2] = $577;
        HEAP32[$578>>2] = $$0$i$i155;
        $579 = (($__ng$0) + 1)|0;
        $871 = $592;$__ng$1 = $579;
       } else {
        $580 = HEAP8[$__grp>>0]|0;
        $581 = $580 & 1;
        $582 = ($581<<24>>24)==(0);
        $583 = HEAP32[$28>>2]|0;
        $584 = $580&255;
        $585 = $584 >>> 1;
        $586 = $582 ? $585 : $583;
        $587 = ($586|0)!=(0);
        $588 = ($__ng$0|0)!=(0);
        $or$cond7 = $588 & $587;
        $589 = ($$0$i$i155|0)==($62|0);
        $or$cond13 = $589 & $or$cond7;
        if (!($or$cond13)) {
         $$lcssa416 = $592;$$pre$i3$i$i134 = $$pre$i3$i$i166277;$__ng$0$lcssa417 = $__ng$0;
         break;
        }
        $590 = HEAP32[$__ge>>2]|0;
        $591 = ($592|0)==($590|0);
        if ($591) {
         __THREW__ = 0;
         invoke_viii(451,($__gb|0),($__gn|0),($__ge|0));
         $593 = __THREW__; __THREW__ = 0;
         $594 = $593&1;
         if ($594) {
          label = 25;
          break L4;
         }
         $$pre = HEAP32[$__gn>>2]|0;
         $596 = $$pre;
        } else {
         $596 = $592;
        }
        $595 = ((($596)) + 4|0);
        HEAP32[$__gn>>2] = $595;
        HEAP32[$596>>2] = $__ng$0;
        $871 = $595;$__ng$1 = 0;
       }
       $597 = HEAP32[$__b>>2]|0;
       $598 = ((($597)) + 12|0);
       $599 = HEAP32[$598>>2]|0;
       $600 = ((($597)) + 16|0);
       $601 = HEAP32[$600>>2]|0;
       $602 = ($599|0)==($601|0);
       if ($602) {
        $603 = HEAP32[$597>>2]|0;
        $604 = ((($603)) + 40|0);
        $605 = HEAP32[$604>>2]|0;
        __THREW__ = 0;
        (invoke_ii($605|0,($597|0))|0);
        $606 = __THREW__; __THREW__ = 0;
        $607 = $606&1;
        if ($607) {
         label = 25;
         break L4;
        } else {
         $$pre$i3$i$i166 = $$pre$i3$i$i166277;$538 = $870;$592 = $871;$__ng$0 = $__ng$1;
         continue;
        }
       } else {
        $608 = ((($599)) + 4|0);
        HEAP32[$598>>2] = $608;
        $$pre$i3$i$i166 = $$pre$i3$i$i166277;$538 = $870;$592 = $871;$__ng$0 = $__ng$1;
        continue;
       }
      }
      $609 = HEAP32[$__gb>>2]|0;
      $610 = ($609|0)!=($$lcssa416|0);
      $611 = ($__ng$0$lcssa417|0)!=(0);
      $or$cond9 = $611 & $610;
      if ($or$cond9) {
       $612 = HEAP32[$__ge>>2]|0;
       $613 = ($$lcssa416|0)==($612|0);
       if ($613) {
        __THREW__ = 0;
        invoke_viii(451,($__gb|0),($__gn|0),($__ge|0));
        $614 = __THREW__; __THREW__ = 0;
        $615 = $614&1;
        if ($615) {
         label = 26;
         break L4;
        }
        $$pre281 = HEAP32[$__gn>>2]|0;
        $617 = $$pre281;
       } else {
        $617 = $$lcssa416;
       }
       $616 = ((($617)) + 4|0);
       HEAP32[$__gn>>2] = $616;
       HEAP32[$617>>2] = $__ng$0$lcssa417;
       $872 = $616;
      } else {
       $872 = $$lcssa416;
      }
      $618 = HEAP32[$__fd>>2]|0;
      $619 = ($618|0)>(0);
      if ($619) {
       $620 = HEAP32[$__b>>2]|0;
       $621 = ($620|0)==(0|0);
       do {
        if ($621) {
         $873 = 1;
        } else {
         $622 = ((($620)) + 12|0);
         $623 = HEAP32[$622>>2]|0;
         $624 = ((($620)) + 16|0);
         $625 = HEAP32[$624>>2]|0;
         $626 = ($623|0)==($625|0);
         if ($626) {
          $627 = HEAP32[$620>>2]|0;
          $628 = ((($627)) + 36|0);
          $629 = HEAP32[$628>>2]|0;
          __THREW__ = 0;
          $630 = (invoke_ii($629|0,($620|0))|0);
          $631 = __THREW__; __THREW__ = 0;
          $632 = $631&1;
          if ($632) {
           label = 26;
           break L4;
          } else {
           $$0$i$i$i$i126 = $630;
          }
         } else {
          $633 = HEAP32[$623>>2]|0;
          $$0$i$i$i$i126 = $633;
         }
         $634 = ($$0$i$i$i$i126|0)==(-1);
         if ($634) {
          HEAP32[$__b>>2] = 0;
          $873 = 1;
          break;
         } else {
          $$pre$i$i$i128 = HEAP32[$__b>>2]|0;
          $phitmp$i$i$i129 = ($$pre$i$i$i128|0)==(0|0);
          $873 = $phitmp$i$i$i129;
          break;
         }
        }
       } while(0);
       $635 = ($$pre$i3$i$i134|0)==(0|0);
       do {
        if ($635) {
         label = 200;
        } else {
         $636 = ((($$pre$i3$i$i134)) + 12|0);
         $637 = HEAP32[$636>>2]|0;
         $638 = ((($$pre$i3$i$i134)) + 16|0);
         $639 = HEAP32[$638>>2]|0;
         $640 = ($637|0)==($639|0);
         if ($640) {
          $641 = HEAP32[$$pre$i3$i$i134>>2]|0;
          $642 = ((($641)) + 36|0);
          $643 = HEAP32[$642>>2]|0;
          __THREW__ = 0;
          $644 = (invoke_ii($643|0,($$pre$i3$i$i134|0))|0);
          $645 = __THREW__; __THREW__ = 0;
          $646 = $645&1;
          if ($646) {
           label = 26;
           break L4;
          } else {
           $$0$i$i1$i$i132 = $644;
          }
         } else {
          $647 = HEAP32[$637>>2]|0;
          $$0$i$i1$i$i132 = $647;
         }
         $648 = ($$0$i$i1$i$i132|0)==(-1);
         if ($648) {
          HEAP32[$__e>>2] = 0;
          label = 200;
          break;
         } else {
          if ($873) {
           $874 = $$pre$i3$i$i134;
           break;
          } else {
           label = 206;
           break L4;
          }
         }
        }
       } while(0);
       if ((label|0) == 200) {
        label = 0;
        if ($873) {
         label = 206;
         break L4;
        } else {
         $874 = 0;
        }
       }
       $649 = HEAP32[$__b>>2]|0;
       $650 = ((($649)) + 12|0);
       $651 = HEAP32[$650>>2]|0;
       $652 = ((($649)) + 16|0);
       $653 = HEAP32[$652>>2]|0;
       $654 = ($651|0)==($653|0);
       if ($654) {
        $655 = HEAP32[$649>>2]|0;
        $656 = ((($655)) + 36|0);
        $657 = HEAP32[$656>>2]|0;
        __THREW__ = 0;
        $658 = (invoke_ii($657|0,($649|0))|0);
        $659 = __THREW__; __THREW__ = 0;
        $660 = $659&1;
        if ($660) {
         label = 26;
         break L4;
        } else {
         $$0$i$i119 = $658;
        }
       } else {
        $661 = HEAP32[$651>>2]|0;
        $$0$i$i119 = $661;
       }
       $662 = HEAP32[$__dp>>2]|0;
       $663 = ($$0$i$i119|0)==($662|0);
       if (!($663)) {
        label = 206;
        break L4;
       }
       $666 = HEAP32[$__b>>2]|0;
       $667 = ((($666)) + 12|0);
       $668 = HEAP32[$667>>2]|0;
       $669 = ((($666)) + 16|0);
       $670 = HEAP32[$669>>2]|0;
       $671 = ($668|0)==($670|0);
       if ($671) {
        $672 = HEAP32[$666>>2]|0;
        $673 = ((($672)) + 40|0);
        $674 = HEAP32[$673>>2]|0;
        __THREW__ = 0;
        (invoke_ii($674|0,($666|0))|0);
        $675 = __THREW__; __THREW__ = 0;
        $676 = $675&1;
        if ($676) {
         label = 26;
         break L4;
        }
       } else {
        $677 = ((($668)) + 4|0);
        HEAP32[$667>>2] = $677;
       }
       $678 = ($618|0)>(0);
       if ($678) {
        $$pre$i3$i$i100382 = $874;$695 = $874;$752 = $618;
        while(1) {
         $679 = HEAP32[$__b>>2]|0;
         $680 = ($679|0)==(0|0);
         do {
          if ($680) {
           $709 = 1;
          } else {
           $681 = ((($679)) + 12|0);
           $682 = HEAP32[$681>>2]|0;
           $683 = ((($679)) + 16|0);
           $684 = HEAP32[$683>>2]|0;
           $685 = ($682|0)==($684|0);
           if ($685) {
            $686 = HEAP32[$679>>2]|0;
            $687 = ((($686)) + 36|0);
            $688 = HEAP32[$687>>2]|0;
            __THREW__ = 0;
            $689 = (invoke_ii($688|0,($679|0))|0);
            $690 = __THREW__; __THREW__ = 0;
            $691 = $690&1;
            if ($691) {
             label = 24;
             break L4;
            } else {
             $$0$i$i$i$i92 = $689;
            }
           } else {
            $692 = HEAP32[$682>>2]|0;
            $$0$i$i$i$i92 = $692;
           }
           $693 = ($$0$i$i$i$i92|0)==(-1);
           if ($693) {
            HEAP32[$__b>>2] = 0;
            $709 = 1;
            break;
           } else {
            $$pre$i$i$i94 = HEAP32[$__b>>2]|0;
            $phitmp$i$i$i95 = ($$pre$i$i$i94|0)==(0|0);
            $709 = $phitmp$i$i$i95;
            break;
           }
          }
         } while(0);
         $694 = ($695|0)==(0|0);
         do {
          if ($694) {
           $$pre$i3$i$i100282$ph = $$pre$i3$i$i100382;
           label = 224;
          } else {
           $696 = ((($695)) + 12|0);
           $697 = HEAP32[$696>>2]|0;
           $698 = ((($695)) + 16|0);
           $699 = HEAP32[$698>>2]|0;
           $700 = ($697|0)==($699|0);
           if ($700) {
            $701 = HEAP32[$695>>2]|0;
            $702 = ((($701)) + 36|0);
            $703 = HEAP32[$702>>2]|0;
            __THREW__ = 0;
            $704 = (invoke_ii($703|0,($695|0))|0);
            $705 = __THREW__; __THREW__ = 0;
            $706 = $705&1;
            if ($706) {
             label = 24;
             break L4;
            } else {
             $$0$i$i1$i$i98 = $704;
            }
           } else {
            $707 = HEAP32[$697>>2]|0;
            $$0$i$i1$i$i98 = $707;
           }
           $708 = ($$0$i$i1$i$i98|0)==(-1);
           if ($708) {
            HEAP32[$__e>>2] = 0;
            $$pre$i3$i$i100282$ph = 0;
            label = 224;
            break;
           } else {
            $phitmp$i4$i$i101 = ($$pre$i3$i$i100382|0)==(0|0);
            $tmp$i$i103 = $709 ^ $phitmp$i4$i$i101;
            if ($tmp$i$i103) {
             $$pre$i3$i$i100282306 = $$pre$i3$i$i100382;$875 = $$pre$i3$i$i100382;
             break;
            } else {
             label = 231;
             break L4;
            }
           }
          }
         } while(0);
         if ((label|0) == 224) {
          label = 0;
          if ($709) {
           label = 231;
           break L4;
          } else {
           $$pre$i3$i$i100282306 = $$pre$i3$i$i100282$ph;$875 = 0;
          }
         }
         $710 = HEAP32[$__b>>2]|0;
         $711 = ((($710)) + 12|0);
         $712 = HEAP32[$711>>2]|0;
         $713 = ((($710)) + 16|0);
         $714 = HEAP32[$713>>2]|0;
         $715 = ($712|0)==($714|0);
         if ($715) {
          $716 = HEAP32[$710>>2]|0;
          $717 = ((($716)) + 36|0);
          $718 = HEAP32[$717>>2]|0;
          __THREW__ = 0;
          $719 = (invoke_ii($718|0,($710|0))|0);
          $720 = __THREW__; __THREW__ = 0;
          $721 = $720&1;
          if ($721) {
           label = 24;
           break L4;
          } else {
           $$0$i$i86 = $719;
          }
         } else {
          $722 = HEAP32[$712>>2]|0;
          $$0$i$i86 = $722;
         }
         $723 = HEAP32[$__ct>>2]|0;
         $724 = ((($723)) + 12|0);
         $725 = HEAP32[$724>>2]|0;
         __THREW__ = 0;
         $726 = (invoke_iiii($725|0,($__ct|0),2048,($$0$i$i86|0))|0);
         $727 = __THREW__; __THREW__ = 0;
         $728 = $727&1;
         if ($728) {
          label = 24;
          break L4;
         }
         if (!($726)) {
          label = 231;
          break L4;
         }
         $731 = HEAP32[$__wn>>2]|0;
         $732 = HEAP32[$0>>2]|0;
         $733 = ($731|0)==($732|0);
         if ($733) {
          __THREW__ = 0;
          invoke_viii(457,($__wb|0),($__wn|0),($0|0));
          $734 = __THREW__; __THREW__ = 0;
          $735 = $734&1;
          if ($735) {
           label = 24;
           break L4;
          }
         }
         $736 = HEAP32[$__b>>2]|0;
         $737 = ((($736)) + 12|0);
         $738 = HEAP32[$737>>2]|0;
         $739 = ((($736)) + 16|0);
         $740 = HEAP32[$739>>2]|0;
         $741 = ($738|0)==($740|0);
         if ($741) {
          $742 = HEAP32[$736>>2]|0;
          $743 = ((($742)) + 36|0);
          $744 = HEAP32[$743>>2]|0;
          __THREW__ = 0;
          $745 = (invoke_ii($744|0,($736|0))|0);
          $746 = __THREW__; __THREW__ = 0;
          $747 = $746&1;
          if ($747) {
           label = 24;
           break L4;
          } else {
           $$0$i$i78 = $745;
          }
         } else {
          $748 = HEAP32[$738>>2]|0;
          $$0$i$i78 = $748;
         }
         $749 = HEAP32[$__wn>>2]|0;
         $750 = ((($749)) + 4|0);
         HEAP32[$__wn>>2] = $750;
         HEAP32[$749>>2] = $$0$i$i78;
         $751 = (($752) + -1)|0;
         HEAP32[$__fd>>2] = $751;
         $753 = HEAP32[$__b>>2]|0;
         $754 = ((($753)) + 12|0);
         $755 = HEAP32[$754>>2]|0;
         $756 = ((($753)) + 16|0);
         $757 = HEAP32[$756>>2]|0;
         $758 = ($755|0)==($757|0);
         if ($758) {
          $759 = HEAP32[$753>>2]|0;
          $760 = ((($759)) + 40|0);
          $761 = HEAP32[$760>>2]|0;
          __THREW__ = 0;
          (invoke_ii($761|0,($753|0))|0);
          $762 = __THREW__; __THREW__ = 0;
          $763 = $762&1;
          if ($763) {
           label = 24;
           break L4;
          }
         } else {
          $765 = ((($755)) + 4|0);
          HEAP32[$754>>2] = $765;
         }
         $764 = ($752|0)>(1);
         if ($764) {
          $$pre$i3$i$i100382 = $$pre$i3$i$i100282306;$695 = $875;$752 = $751;
         } else {
          break;
         }
        }
       }
      }
      $766 = HEAP32[$__wn>>2]|0;
      $767 = HEAP32[$__wb>>2]|0;
      $768 = ($766|0)==($767|0);
      if ($768) {
       label = 242;
       break L4;
      } else {
       $866 = $872;$__trailing_sign$1 = $__trailing_sign$0399;
      }
      break;
     }
     default: {
      $866 = $863;$__trailing_sign$1 = $__trailing_sign$0399;
     }
     }
    } while(0);
    L278: do {
     if ((label|0) == 44) {
      while(1) {
       label = 0;
       $124 = HEAP32[$__b>>2]|0;
       $125 = ($124|0)==(0|0);
       do {
        if ($125) {
         $154 = 1;
        } else {
         $126 = ((($124)) + 12|0);
         $127 = HEAP32[$126>>2]|0;
         $128 = ((($124)) + 16|0);
         $129 = HEAP32[$128>>2]|0;
         $130 = ($127|0)==($129|0);
         if ($130) {
          $131 = HEAP32[$124>>2]|0;
          $132 = ((($131)) + 36|0);
          $133 = HEAP32[$132>>2]|0;
          __THREW__ = 0;
          $134 = (invoke_ii($133|0,($124|0))|0);
          $135 = __THREW__; __THREW__ = 0;
          $136 = $135&1;
          if ($136) {
           label = 21;
           break L4;
          } else {
           $$0$i$i$i$i51 = $134;
          }
         } else {
          $137 = HEAP32[$127>>2]|0;
          $$0$i$i$i$i51 = $137;
         }
         $138 = ($$0$i$i$i$i51|0)==(-1);
         if ($138) {
          HEAP32[$__b>>2] = 0;
          $154 = 1;
          break;
         } else {
          $$pre$i$i$i53 = HEAP32[$__b>>2]|0;
          $phitmp$i$i$i54 = ($$pre$i$i$i53|0)==(0|0);
          $154 = $phitmp$i$i$i54;
          break;
         }
        }
       } while(0);
       $139 = ($140|0)==(0|0);
       do {
        if ($139) {
         $$pre$i3$i$i59300 = $$pre$i3$i$i59;
         label = 57;
        } else {
         $141 = ((($140)) + 12|0);
         $142 = HEAP32[$141>>2]|0;
         $143 = ((($140)) + 16|0);
         $144 = HEAP32[$143>>2]|0;
         $145 = ($142|0)==($144|0);
         if ($145) {
          $146 = HEAP32[$140>>2]|0;
          $147 = ((($146)) + 36|0);
          $148 = HEAP32[$147>>2]|0;
          __THREW__ = 0;
          $149 = (invoke_ii($148|0,($140|0))|0);
          $150 = __THREW__; __THREW__ = 0;
          $151 = $150&1;
          if ($151) {
           label = 21;
           break L4;
          } else {
           $$0$i$i1$i$i57 = $149;
          }
         } else {
          $152 = HEAP32[$142>>2]|0;
          $$0$i$i1$i$i57 = $152;
         }
         $153 = ($$0$i$i1$i$i57|0)==(-1);
         if ($153) {
          HEAP32[$__e>>2] = 0;
          $$pre$i3$i$i59300 = 0;
          label = 57;
          break;
         } else {
          $phitmp$i4$i$i60 = ($$pre$i3$i$i59|0)==(0|0);
          $tmp$i$i62 = $154 ^ $phitmp$i4$i$i60;
          if ($tmp$i$i62) {
           $$pre$i3$i$i59302 = $$pre$i3$i$i59;$867 = $$pre$i3$i$i59;
           break;
          } else {
           $866 = $863;$__trailing_sign$1 = $__trailing_sign$0399;
           break L278;
          }
         }
        }
       } while(0);
       if ((label|0) == 57) {
        label = 0;
        if ($154) {
         $866 = $863;$__trailing_sign$1 = $__trailing_sign$0399;
         break L278;
        } else {
         $$pre$i3$i$i59302 = $$pre$i3$i$i59300;$867 = 0;
        }
       }
       $155 = HEAP32[$__b>>2]|0;
       $156 = ((($155)) + 12|0);
       $157 = HEAP32[$156>>2]|0;
       $158 = ((($155)) + 16|0);
       $159 = HEAP32[$158>>2]|0;
       $160 = ($157|0)==($159|0);
       if ($160) {
        $161 = HEAP32[$155>>2]|0;
        $162 = ((($161)) + 36|0);
        $163 = HEAP32[$162>>2]|0;
        __THREW__ = 0;
        $164 = (invoke_ii($163|0,($155|0))|0);
        $165 = __THREW__; __THREW__ = 0;
        $166 = $165&1;
        if ($166) {
         label = 21;
         break L4;
        } else {
         $$0$i$i66 = $164;
        }
       } else {
        $167 = HEAP32[$157>>2]|0;
        $$0$i$i66 = $167;
       }
       $168 = HEAP32[$__ct>>2]|0;
       $169 = ((($168)) + 12|0);
       $170 = HEAP32[$169>>2]|0;
       __THREW__ = 0;
       $171 = (invoke_iiii($170|0,($__ct|0),8192,($$0$i$i66|0))|0);
       $172 = __THREW__; __THREW__ = 0;
       $173 = $172&1;
       if ($173) {
        label = 21;
        break L4;
       }
       if (!($171)) {
        $866 = $863;$__trailing_sign$1 = $__trailing_sign$0399;
        break L278;
       }
       $174 = HEAP32[$__b>>2]|0;
       $175 = ((($174)) + 12|0);
       $176 = HEAP32[$175>>2]|0;
       $177 = ((($174)) + 16|0);
       $178 = HEAP32[$177>>2]|0;
       $179 = ($176|0)==($178|0);
       if ($179) {
        $180 = HEAP32[$174>>2]|0;
        $181 = ((($180)) + 40|0);
        $182 = HEAP32[$181>>2]|0;
        __THREW__ = 0;
        $183 = (invoke_ii($182|0,($174|0))|0);
        $184 = __THREW__; __THREW__ = 0;
        $185 = $184&1;
        if ($185) {
         label = 21;
         break L4;
        } else {
         $$0$i$i73 = $183;
        }
       } else {
        $186 = ((($176)) + 4|0);
        HEAP32[$175>>2] = $186;
        $187 = HEAP32[$176>>2]|0;
        $$0$i$i73 = $187;
       }
       __THREW__ = 0;
       invoke_vii(456,($__spaces|0),($$0$i$i73|0));
       $188 = __THREW__; __THREW__ = 0;
       $189 = $188&1;
       if ($189) {
        label = 21;
        break L4;
       } else {
        $$pre$i3$i$i59 = $$pre$i3$i$i59302;$140 = $867;
        label = 44;
       }
      }
     }
    } while(0);
    $771 = (($__p$0397) + 1)|0;
    $772 = ($771>>>0)<(4);
    if ($772) {
     $863 = $866;$__p$0397 = $771;$__trailing_sign$0399 = $__trailing_sign$1;
    } else {
     $$lcssa357 = $866;$__trailing_sign$0$lcssa = $__trailing_sign$1;
     label = 244;
     break;
    }
   }
   L314:    switch (label|0) {
    case 21: {
     $65 = ___cxa_find_matching_catch()|0;
     $66 = tempRet0;
     $lpad$phi$index = $65;$lpad$phi$index8 = $66;
     break L1;
     break;
    }
    case 22: {
     $67 = ___cxa_find_matching_catch()|0;
     $68 = tempRet0;
     $lpad$phi$index = $67;$lpad$phi$index8 = $68;
     break L1;
     break;
    }
    case 23: {
     $69 = ___cxa_find_matching_catch()|0;
     $70 = tempRet0;
     $lpad$phi$index = $69;$lpad$phi$index8 = $70;
     break L1;
     break;
    }
    case 24: {
     $71 = ___cxa_find_matching_catch()|0;
     $72 = tempRet0;
     $lpad$phi$index = $71;$lpad$phi$index8 = $72;
     break L1;
     break;
    }
    case 25: {
     $73 = ___cxa_find_matching_catch()|0;
     $74 = tempRet0;
     $lpad$phi$index = $73;$lpad$phi$index8 = $74;
     break L1;
     break;
    }
    case 26: {
     $75 = ___cxa_find_matching_catch()|0;
     $76 = tempRet0;
     $lpad$phi$index = $75;$lpad$phi$index8 = $76;
     break L1;
     break;
    }
    case 42: {
     $121 = HEAP32[$__err>>2]|0;
     $122 = $121 | 4;
     HEAP32[$__err>>2] = $122;
     $$0 = 0;
     break;
    }
    case 107: {
     $355 = HEAP32[$__err>>2]|0;
     $356 = $355 | 4;
     HEAP32[$__err>>2] = $356;
     $$0 = 0;
     break;
    }
    case 148: {
     $520 = HEAP32[$__err>>2]|0;
     $521 = $520 | 4;
     HEAP32[$__err>>2] = $521;
     $$0 = 0;
     break;
    }
    case 206: {
     $664 = HEAP32[$__err>>2]|0;
     $665 = $664 | 4;
     HEAP32[$__err>>2] = $665;
     $$0 = 0;
     break;
    }
    case 231: {
     $729 = HEAP32[$__err>>2]|0;
     $730 = $729 | 4;
     HEAP32[$__err>>2] = $730;
     $$0 = 0;
     break;
    }
    case 242: {
     $769 = HEAP32[$__err>>2]|0;
     $770 = $769 | 4;
     HEAP32[$__err>>2] = $770;
     $$0 = 0;
     break;
    }
    case 244: {
     $773 = ($__trailing_sign$0$lcssa|0)==(0|0);
     L316: do {
      if (!($773)) {
       $774 = ((($__trailing_sign$0$lcssa)) + 4|0);
       $775 = ((($__trailing_sign$0$lcssa)) + 8|0);
       $__i$0 = 1;
       L318: while(1) {
        $776 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
        $777 = $776 & 1;
        $778 = ($777<<24>>24)==(0);
        if ($778) {
         $780 = $776&255;
         $781 = $780 >>> 1;
         $783 = $781;
        } else {
         $779 = HEAP32[$774>>2]|0;
         $783 = $779;
        }
        $782 = ($__i$0>>>0)<($783>>>0);
        if (!($782)) {
         break L316;
        }
        $784 = HEAP32[$__b>>2]|0;
        $785 = ($784|0)==(0|0);
        do {
         if ($785) {
          $876 = 1;
         } else {
          $786 = ((($784)) + 12|0);
          $787 = HEAP32[$786>>2]|0;
          $788 = ((($784)) + 16|0);
          $789 = HEAP32[$788>>2]|0;
          $790 = ($787|0)==($789|0);
          if ($790) {
           $791 = HEAP32[$784>>2]|0;
           $792 = ((($791)) + 36|0);
           $793 = HEAP32[$792>>2]|0;
           __THREW__ = 0;
           $794 = (invoke_ii($793|0,($784|0))|0);
           $795 = __THREW__; __THREW__ = 0;
           $796 = $795&1;
           if ($796) {
            label = 20;
            break L318;
           } else {
            $$0$i$i$i$i = $794;
           }
          } else {
           $797 = HEAP32[$787>>2]|0;
           $$0$i$i$i$i = $797;
          }
          $798 = ($$0$i$i$i$i|0)==(-1);
          if ($798) {
           HEAP32[$__b>>2] = 0;
           $876 = 1;
           break;
          } else {
           $$pre$i$i$i = HEAP32[$__b>>2]|0;
           $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
           $876 = $phitmp$i$i$i;
           break;
          }
         }
        } while(0);
        $799 = HEAP32[$__e>>2]|0;
        $800 = ($799|0)==(0|0);
        do {
         if ($800) {
          label = 263;
         } else {
          $801 = ((($799)) + 12|0);
          $802 = HEAP32[$801>>2]|0;
          $803 = ((($799)) + 16|0);
          $804 = HEAP32[$803>>2]|0;
          $805 = ($802|0)==($804|0);
          if ($805) {
           $806 = HEAP32[$799>>2]|0;
           $807 = ((($806)) + 36|0);
           $808 = HEAP32[$807>>2]|0;
           __THREW__ = 0;
           $809 = (invoke_ii($808|0,($799|0))|0);
           $810 = __THREW__; __THREW__ = 0;
           $811 = $810&1;
           if ($811) {
            label = 20;
            break L318;
           } else {
            $$0$i$i1$i$i = $809;
           }
          } else {
           $812 = HEAP32[$802>>2]|0;
           $$0$i$i1$i$i = $812;
          }
          $813 = ($$0$i$i1$i$i|0)==(-1);
          if ($813) {
           HEAP32[$__e>>2] = 0;
           label = 263;
           break;
          } else {
           if ($876) {
            break;
           } else {
            label = 271;
            break L318;
           }
          }
         }
        } while(0);
        if ((label|0) == 263) {
         label = 0;
         if ($876) {
          label = 271;
          break;
         }
        }
        $814 = HEAP32[$__b>>2]|0;
        $815 = ((($814)) + 12|0);
        $816 = HEAP32[$815>>2]|0;
        $817 = ((($814)) + 16|0);
        $818 = HEAP32[$817>>2]|0;
        $819 = ($816|0)==($818|0);
        if ($819) {
         $820 = HEAP32[$814>>2]|0;
         $821 = ((($820)) + 36|0);
         $822 = HEAP32[$821>>2]|0;
         __THREW__ = 0;
         $823 = (invoke_ii($822|0,($814|0))|0);
         $824 = __THREW__; __THREW__ = 0;
         $825 = $824&1;
         if ($825) {
          label = 20;
          break;
         } else {
          $$0$i$i = $823;
         }
        } else {
         $826 = HEAP32[$816>>2]|0;
         $$0$i$i = $826;
        }
        $827 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
        $828 = $827 & 1;
        $829 = ($828<<24>>24)==(0);
        if ($829) {
         $832 = $774;
        } else {
         $830 = HEAP32[$775>>2]|0;
         $832 = $830;
        }
        $831 = (($832) + ($__i$0<<2)|0);
        $833 = HEAP32[$831>>2]|0;
        $834 = ($$0$i$i|0)==($833|0);
        if (!($834)) {
         label = 271;
         break;
        }
        $837 = (($__i$0) + 1)|0;
        $838 = HEAP32[$__b>>2]|0;
        $839 = ((($838)) + 12|0);
        $840 = HEAP32[$839>>2]|0;
        $841 = ((($838)) + 16|0);
        $842 = HEAP32[$841>>2]|0;
        $843 = ($840|0)==($842|0);
        if ($843) {
         $844 = HEAP32[$838>>2]|0;
         $845 = ((($844)) + 40|0);
         $846 = HEAP32[$845>>2]|0;
         __THREW__ = 0;
         (invoke_ii($846|0,($838|0))|0);
         $847 = __THREW__; __THREW__ = 0;
         $848 = $847&1;
         if ($848) {
          label = 20;
          break;
         } else {
          $__i$0 = $837;
          continue;
         }
        } else {
         $849 = ((($840)) + 4|0);
         HEAP32[$839>>2] = $849;
         $__i$0 = $837;
         continue;
        }
       }
       if ((label|0) == 20) {
        $63 = ___cxa_find_matching_catch()|0;
        $64 = tempRet0;
        $lpad$phi$index = $63;$lpad$phi$index8 = $64;
        break L1;
       }
       else if ((label|0) == 271) {
        $835 = HEAP32[$__err>>2]|0;
        $836 = $835 | 4;
        HEAP32[$__err>>2] = $836;
        $$0 = 0;
        break L314;
       }
      }
     } while(0);
     $850 = HEAP32[$__gb>>2]|0;
     $851 = ($850|0)==($$lcssa357|0);
     if ($851) {
      $$0 = 1;
     } else {
      HEAP32[$__et>>2] = 0;
      __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp,$850,$$lcssa357,$__et);
      $852 = HEAP32[$__et>>2]|0;
      $853 = ($852|0)==(0);
      if ($853) {
       $$0 = 1;
      } else {
       $854 = HEAP32[$__err>>2]|0;
       $855 = $854 | 4;
       HEAP32[$__err>>2] = $855;
       $$0 = 0;
      }
     }
     break;
    }
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__spaces);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nsn);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__psn);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
   $856 = HEAP32[$__gb>>2]|0;
   HEAP32[$__gb>>2] = 0;
   $857 = ($856|0)==(0|0);
   if (!($857)) {
    $858 = HEAP32[$2>>2]|0;
    __THREW__ = 0;
    invoke_vi($858|0,($856|0));
    $859 = __THREW__; __THREW__ = 0;
    $860 = $859&1;
    if ($860) {
     $861 = ___cxa_find_matching_catch(0|0)|0;
     $862 = tempRet0;
     ___clang_call_terminate($861);
     // unreachable;
    }
   }
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__spaces);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nsn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__psn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 $79 = HEAP32[$__gb>>2]|0;
 HEAP32[$__gb>>2] = 0;
 $80 = ($79|0)==(0|0);
 if (!($80)) {
  $81 = HEAP32[$2>>2]|0;
  __THREW__ = 0;
  invoke_vi($81|0,($79|0));
  $82 = __THREW__; __THREW__ = 0;
  $83 = $82&1;
  if ($83) {
   $84 = ___cxa_find_matching_catch(0|0)|0;
   $85 = tempRet0;
   ___clang_call_terminate($84);
   // unreachable;
  }
 }
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE($this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$011 = 0, $$0110 = 0, $$012 = 0, $$019 = 0, $$byval_copy = 0, $$pre = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__loc = 0, $__neg = 0, $__w$0$lcssa = 0, $__w$013 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $phitmp$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 432|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 424|0;
 $__wbuf = sp + 24|0;
 $__wb = sp + 16|0;
 $__wn = sp + 8|0;
 $__loc = sp + 4|0;
 $__neg = sp + 428|0;
 $0 = sp;
 $1 = $__wbuf;
 HEAP32[$__wb>>2] = $1;
 $2 = ((($__wb)) + 4|0);
 HEAP32[$2>>2] = (445);
 $3 = ((($__wbuf)) + 400|0);
 __THREW__ = 0;
 $4 = (invoke_ii(357,($__iob|0))|0);
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if ($6) {
  $33 = ___cxa_find_matching_catch()|0;
  $34 = tempRet0;
  HEAP32[$__wb>>2] = 0;
  $$011 = $33;$$019 = $34;$95 = $__wbuf;
  label = 38;
 } else {
  HEAP32[$__loc>>2] = $4;
  __THREW__ = 0;
  $7 = (invoke_iii(355,($__loc|0),(10384|0))|0);
  $8 = __THREW__; __THREW__ = 0;
  $9 = $8&1;
  L4: do {
   if (!($9)) {
    HEAP8[$__neg>>0] = 0;
    $10 = HEAP32[$__e>>2]|0;
    HEAP32[$0>>2] = $10;
    $11 = ((($__iob)) + 4|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = $10;
    __THREW__ = 0;
    ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
    $14 = (invoke_iiiiiiiiiiii(454,($__b|0),($$byval_copy|0),($__intl|0),($__loc|0),($12|0),($__err|0),($__neg|0),($7|0),($__wb|0),($__wn|0),($3|0))|0);
    $15 = __THREW__; __THREW__ = 0;
    $16 = $15&1;
    if (!($16)) {
     if ($14) {
      $17 = HEAP8[$__v>>0]|0;
      $18 = $17 & 1;
      $19 = ($18<<24>>24)==(0);
      if ($19) {
       HEAP8[$__v>>0] = 0;
      } else {
       $20 = ((($__v)) + 8|0);
       $21 = HEAP32[$20>>2]|0;
       HEAP32[$21>>2] = 0;
      }
      $22 = ((($__v)) + 4|0);
      HEAP32[$22>>2] = 0;
      $23 = HEAP8[$__neg>>0]|0;
      $24 = ($23<<24>>24)==(0);
      if (!($24)) {
       $25 = HEAP32[$7>>2]|0;
       $26 = ((($25)) + 44|0);
       $27 = HEAP32[$26>>2]|0;
       __THREW__ = 0;
       $28 = (invoke_iii($27|0,($7|0),45)|0);
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        break;
       }
       __THREW__ = 0;
       invoke_vii(456,($__v|0),($28|0));
       $31 = __THREW__; __THREW__ = 0;
       $32 = $31&1;
       if ($32) {
        break;
       }
      }
      $35 = HEAP32[$7>>2]|0;
      $36 = ((($35)) + 44|0);
      $37 = HEAP32[$36>>2]|0;
      __THREW__ = 0;
      $38 = (invoke_iii($37|0,($7|0),48)|0);
      $39 = __THREW__; __THREW__ = 0;
      $40 = $39&1;
      if ($40) {
       break;
      }
      $41 = HEAP32[$__wb>>2]|0;
      $42 = HEAP32[$__wn>>2]|0;
      $43 = ((($42)) + -4|0);
      $44 = ($41>>>0)<($43>>>0);
      L18: do {
       if ($44) {
        $__w$013 = $41;
        while(1) {
         $45 = HEAP32[$__w$013>>2]|0;
         $46 = ($45|0)==($38|0);
         if (!($46)) {
          $__w$0$lcssa = $__w$013;
          break L18;
         }
         $47 = ((($__w$013)) + 4|0);
         $48 = ($47>>>0)<($43>>>0);
         if ($48) {
          $__w$013 = $47;
         } else {
          $__w$0$lcssa = $47;
          break;
         }
        }
       } else {
        $__w$0$lcssa = $41;
       }
      } while(0);
      __THREW__ = 0;
      (invoke_iiii(458,($__v|0),($__w$0$lcssa|0),($42|0))|0);
      $49 = __THREW__; __THREW__ = 0;
      $50 = $49&1;
      if ($50) {
       break;
      }
     }
     $51 = HEAP32[$__b>>2]|0;
     $52 = ($51|0)==(0|0);
     do {
      if ($52) {
       $100 = 1;
      } else {
       $53 = ((($51)) + 12|0);
       $54 = HEAP32[$53>>2]|0;
       $55 = ((($51)) + 16|0);
       $56 = HEAP32[$55>>2]|0;
       $57 = ($54|0)==($56|0);
       if ($57) {
        $58 = HEAP32[$51>>2]|0;
        $59 = ((($58)) + 36|0);
        $60 = HEAP32[$59>>2]|0;
        __THREW__ = 0;
        $61 = (invoke_ii($60|0,($51|0))|0);
        $62 = __THREW__; __THREW__ = 0;
        $63 = $62&1;
        if ($63) {
         break L4;
        } else {
         $$0$i$i$i$i = $61;
        }
       } else {
        $64 = HEAP32[$54>>2]|0;
        $$0$i$i$i$i = $64;
       }
       $65 = ($$0$i$i$i$i|0)==(-1);
       if ($65) {
        HEAP32[$__b>>2] = 0;
        $100 = 1;
        break;
       } else {
        $$pre$i$i$i = HEAP32[$__b>>2]|0;
        $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
        $100 = $phitmp$i$i$i;
        break;
       }
      }
     } while(0);
     $66 = ($10|0)==(0);
     do {
      if ($66) {
       label = 30;
      } else {
       $67 = ((($13)) + 12|0);
       $68 = HEAP32[$67>>2]|0;
       $69 = ((($13)) + 16|0);
       $70 = HEAP32[$69>>2]|0;
       $71 = ($68|0)==($70|0);
       if ($71) {
        $72 = $10;
        $73 = HEAP32[$72>>2]|0;
        $74 = ((($73)) + 36|0);
        $75 = HEAP32[$74>>2]|0;
        __THREW__ = 0;
        $76 = (invoke_ii($75|0,($13|0))|0);
        $77 = __THREW__; __THREW__ = 0;
        $78 = $77&1;
        if ($78) {
         break L4;
        } else {
         $$0$i$i1$i$i = $76;
        }
       } else {
        $79 = HEAP32[$68>>2]|0;
        $$0$i$i1$i$i = $79;
       }
       $80 = ($$0$i$i1$i$i|0)==(-1);
       if ($80) {
        HEAP32[$__e>>2] = 0;
        label = 30;
        break;
       } else {
        if ($100) {
         break;
        } else {
         label = 32;
         break;
        }
       }
      }
     } while(0);
     if ((label|0) == 30) {
      if ($100) {
       label = 32;
      }
     }
     if ((label|0) == 32) {
      $81 = HEAP32[$__err>>2]|0;
      $82 = $81 | 2;
      HEAP32[$__err>>2] = $82;
     }
     $83 = HEAP32[$__b>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($4)|0);
     $84 = HEAP32[$__wb>>2]|0;
     HEAP32[$__wb>>2] = 0;
     $85 = ($84|0)==(0|0);
     if (!($85)) {
      $86 = HEAP32[$2>>2]|0;
      __THREW__ = 0;
      invoke_vi($86|0,($84|0));
      $87 = __THREW__; __THREW__ = 0;
      $88 = $87&1;
      if ($88) {
       $89 = ___cxa_find_matching_catch(0|0)|0;
       $90 = tempRet0;
       ___clang_call_terminate($89);
       // unreachable;
      }
     }
     STACKTOP = sp;return ($83|0);
    }
   }
  } while(0);
  $91 = ___cxa_find_matching_catch()|0;
  $92 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($4)|0);
  $$pre = HEAP32[$__wb>>2]|0;
  HEAP32[$__wb>>2] = 0;
  $93 = ($$pre|0)==(0|0);
  if ($93) {
   $$0110 = $92;$$012 = $91;
  } else {
   $$011 = $91;$$019 = $92;$95 = $$pre;
   label = 38;
  }
 }
 if ((label|0) == 38) {
  $94 = HEAP32[$2>>2]|0;
  __THREW__ = 0;
  invoke_vi($94|0,($95|0));
  $96 = __THREW__; __THREW__ = 0;
  $97 = $96&1;
  if ($97) {
   $98 = ___cxa_find_matching_catch(0|0)|0;
   $99 = tempRet0;
   ___clang_call_terminate($98);
   // unreachable;
  } else {
   $$0110 = $$019;$$012 = $$011;
  }
 }
 ___resumeException($$012|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd) {
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__psn = $__psn|0;
 $__nsn = $__nsn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 100|0;
 $1 = sp + 88|0;
 $2 = sp + 76|0;
 $3 = sp + 64|0;
 $4 = sp + 52|0;
 $5 = sp + 48|0;
 $6 = sp + 36|0;
 $7 = sp + 24|0;
 $8 = sp + 12|0;
 $9 = sp;
 do {
  if ($__intl) {
   $10 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,10128)|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = ((($11)) + 44|0);
   $13 = HEAP32[$12>>2]|0;
   FUNCTION_TABLE_vii[$13 & 1023]($0,$10);
   $14 = HEAP32[$0>>2]|0;
   HEAP8[$__pat>>0]=$14&255;HEAP8[$__pat+1>>0]=($14>>8)&255;HEAP8[$__pat+2>>0]=($14>>16)&255;HEAP8[$__pat+3>>0]=$14>>24;
   $15 = HEAP32[$10>>2]|0;
   $16 = ((($15)) + 32|0);
   $17 = HEAP32[$16>>2]|0;
   FUNCTION_TABLE_vii[$17 & 1023]($1,$10);
   $18 = HEAP8[$__nsn>>0]|0;
   $19 = $18 & 1;
   $20 = ($19<<24>>24)==(0);
   if ($20) {
    HEAP8[$__nsn>>0] = 0;
   } else {
    $21 = ((($__nsn)) + 8|0);
    $22 = HEAP32[$21>>2]|0;
    HEAP32[$22>>2] = 0;
   }
   $23 = ((($__nsn)) + 4|0);
   HEAP32[$23>>2] = 0;
   __THREW__ = 0;
   invoke_vii(459,($__nsn|0),0);
   $24 = __THREW__; __THREW__ = 0;
   $25 = $24&1;
   if ($25) {
    $26 = ___cxa_find_matching_catch(0|0)|0;
    $27 = tempRet0;
    ___clang_call_terminate($26);
    // unreachable;
   }
   ;HEAP32[$__nsn>>2]=HEAP32[$1>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$1+8>>2]|0;
   HEAP32[$1>>2] = 0;
   $28 = ((($1)) + 4|0);
   HEAP32[$28>>2] = 0;
   $29 = ((($1)) + 8|0);
   HEAP32[$29>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($1);
   $30 = HEAP32[$10>>2]|0;
   $31 = ((($30)) + 28|0);
   $32 = HEAP32[$31>>2]|0;
   FUNCTION_TABLE_vii[$32 & 1023]($2,$10);
   $33 = HEAP8[$__psn>>0]|0;
   $34 = $33 & 1;
   $35 = ($34<<24>>24)==(0);
   if ($35) {
    HEAP8[$__psn>>0] = 0;
   } else {
    $36 = ((($__psn)) + 8|0);
    $37 = HEAP32[$36>>2]|0;
    HEAP32[$37>>2] = 0;
   }
   $38 = ((($__psn)) + 4|0);
   HEAP32[$38>>2] = 0;
   __THREW__ = 0;
   invoke_vii(459,($__psn|0),0);
   $39 = __THREW__; __THREW__ = 0;
   $40 = $39&1;
   if ($40) {
    $41 = ___cxa_find_matching_catch(0|0)|0;
    $42 = tempRet0;
    ___clang_call_terminate($41);
    // unreachable;
   }
   ;HEAP32[$__psn>>2]=HEAP32[$2>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$2+8>>2]|0;
   HEAP32[$2>>2] = 0;
   $43 = ((($2)) + 4|0);
   HEAP32[$43>>2] = 0;
   $44 = ((($2)) + 8|0);
   HEAP32[$44>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($2);
   $45 = HEAP32[$10>>2]|0;
   $46 = ((($45)) + 12|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = (FUNCTION_TABLE_ii[$47 & 1023]($10)|0);
   HEAP32[$__dp>>2] = $48;
   $49 = HEAP32[$10>>2]|0;
   $50 = ((($49)) + 16|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = (FUNCTION_TABLE_ii[$51 & 1023]($10)|0);
   HEAP32[$__ts>>2] = $52;
   $53 = HEAP32[$10>>2]|0;
   $54 = ((($53)) + 20|0);
   $55 = HEAP32[$54>>2]|0;
   FUNCTION_TABLE_vii[$55 & 1023]($3,$10);
   $56 = HEAP8[$__grp>>0]|0;
   $57 = $56 & 1;
   $58 = ($57<<24>>24)==(0);
   if ($58) {
    $62 = ((($__grp)) + 1|0);
    HEAP8[$62>>0] = 0;
    HEAP8[$__grp>>0] = 0;
   } else {
    $59 = ((($__grp)) + 8|0);
    $60 = HEAP32[$59>>2]|0;
    HEAP8[$60>>0] = 0;
    $61 = ((($__grp)) + 4|0);
    HEAP32[$61>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(453,($__grp|0),0);
   $63 = __THREW__; __THREW__ = 0;
   $64 = $63&1;
   if ($64) {
    $65 = ___cxa_find_matching_catch(0|0)|0;
    $66 = tempRet0;
    ___clang_call_terminate($65);
    // unreachable;
   }
   ;HEAP32[$__grp>>2]=HEAP32[$3>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$3+8>>2]|0;
   HEAP32[$3>>2] = 0;
   $67 = ((($3)) + 4|0);
   HEAP32[$67>>2] = 0;
   $68 = ((($3)) + 8|0);
   HEAP32[$68>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
   $69 = HEAP32[$10>>2]|0;
   $70 = ((($69)) + 24|0);
   $71 = HEAP32[$70>>2]|0;
   FUNCTION_TABLE_vii[$71 & 1023]($4,$10);
   $72 = HEAP8[$__sym>>0]|0;
   $73 = $72 & 1;
   $74 = ($73<<24>>24)==(0);
   if ($74) {
    HEAP8[$__sym>>0] = 0;
   } else {
    $75 = ((($__sym)) + 8|0);
    $76 = HEAP32[$75>>2]|0;
    HEAP32[$76>>2] = 0;
   }
   $77 = ((($__sym)) + 4|0);
   HEAP32[$77>>2] = 0;
   __THREW__ = 0;
   invoke_vii(459,($__sym|0),0);
   $78 = __THREW__; __THREW__ = 0;
   $79 = $78&1;
   if ($79) {
    $80 = ___cxa_find_matching_catch(0|0)|0;
    $81 = tempRet0;
    ___clang_call_terminate($80);
    // unreachable;
   } else {
    ;HEAP32[$__sym>>2]=HEAP32[$4>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$4+8>>2]|0;
    HEAP32[$4>>2] = 0;
    $82 = ((($4)) + 4|0);
    HEAP32[$82>>2] = 0;
    $83 = ((($4)) + 8|0);
    HEAP32[$83>>2] = 0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($4);
    $84 = HEAP32[$10>>2]|0;
    $85 = ((($84)) + 36|0);
    $86 = HEAP32[$85>>2]|0;
    $87 = (FUNCTION_TABLE_ii[$86 & 1023]($10)|0);
    $storemerge = $87;
    break;
   }
  } else {
   $88 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,10064)|0);
   $89 = HEAP32[$88>>2]|0;
   $90 = ((($89)) + 44|0);
   $91 = HEAP32[$90>>2]|0;
   FUNCTION_TABLE_vii[$91 & 1023]($5,$88);
   $92 = HEAP32[$5>>2]|0;
   HEAP8[$__pat>>0]=$92&255;HEAP8[$__pat+1>>0]=($92>>8)&255;HEAP8[$__pat+2>>0]=($92>>16)&255;HEAP8[$__pat+3>>0]=$92>>24;
   $93 = HEAP32[$88>>2]|0;
   $94 = ((($93)) + 32|0);
   $95 = HEAP32[$94>>2]|0;
   FUNCTION_TABLE_vii[$95 & 1023]($6,$88);
   $96 = HEAP8[$__nsn>>0]|0;
   $97 = $96 & 1;
   $98 = ($97<<24>>24)==(0);
   if ($98) {
    HEAP8[$__nsn>>0] = 0;
   } else {
    $99 = ((($__nsn)) + 8|0);
    $100 = HEAP32[$99>>2]|0;
    HEAP32[$100>>2] = 0;
   }
   $101 = ((($__nsn)) + 4|0);
   HEAP32[$101>>2] = 0;
   __THREW__ = 0;
   invoke_vii(459,($__nsn|0),0);
   $102 = __THREW__; __THREW__ = 0;
   $103 = $102&1;
   if ($103) {
    $104 = ___cxa_find_matching_catch(0|0)|0;
    $105 = tempRet0;
    ___clang_call_terminate($104);
    // unreachable;
   }
   ;HEAP32[$__nsn>>2]=HEAP32[$6>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$6+8>>2]|0;
   HEAP32[$6>>2] = 0;
   $106 = ((($6)) + 4|0);
   HEAP32[$106>>2] = 0;
   $107 = ((($6)) + 8|0);
   HEAP32[$107>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($6);
   $108 = HEAP32[$88>>2]|0;
   $109 = ((($108)) + 28|0);
   $110 = HEAP32[$109>>2]|0;
   FUNCTION_TABLE_vii[$110 & 1023]($7,$88);
   $111 = HEAP8[$__psn>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   if ($113) {
    HEAP8[$__psn>>0] = 0;
   } else {
    $114 = ((($__psn)) + 8|0);
    $115 = HEAP32[$114>>2]|0;
    HEAP32[$115>>2] = 0;
   }
   $116 = ((($__psn)) + 4|0);
   HEAP32[$116>>2] = 0;
   __THREW__ = 0;
   invoke_vii(459,($__psn|0),0);
   $117 = __THREW__; __THREW__ = 0;
   $118 = $117&1;
   if ($118) {
    $119 = ___cxa_find_matching_catch(0|0)|0;
    $120 = tempRet0;
    ___clang_call_terminate($119);
    // unreachable;
   }
   ;HEAP32[$__psn>>2]=HEAP32[$7>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$7+8>>2]|0;
   HEAP32[$7>>2] = 0;
   $121 = ((($7)) + 4|0);
   HEAP32[$121>>2] = 0;
   $122 = ((($7)) + 8|0);
   HEAP32[$122>>2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
   $123 = HEAP32[$88>>2]|0;
   $124 = ((($123)) + 12|0);
   $125 = HEAP32[$124>>2]|0;
   $126 = (FUNCTION_TABLE_ii[$125 & 1023]($88)|0);
   HEAP32[$__dp>>2] = $126;
   $127 = HEAP32[$88>>2]|0;
   $128 = ((($127)) + 16|0);
   $129 = HEAP32[$128>>2]|0;
   $130 = (FUNCTION_TABLE_ii[$129 & 1023]($88)|0);
   HEAP32[$__ts>>2] = $130;
   $131 = HEAP32[$88>>2]|0;
   $132 = ((($131)) + 20|0);
   $133 = HEAP32[$132>>2]|0;
   FUNCTION_TABLE_vii[$133 & 1023]($8,$88);
   $134 = HEAP8[$__grp>>0]|0;
   $135 = $134 & 1;
   $136 = ($135<<24>>24)==(0);
   if ($136) {
    $140 = ((($__grp)) + 1|0);
    HEAP8[$140>>0] = 0;
    HEAP8[$__grp>>0] = 0;
   } else {
    $137 = ((($__grp)) + 8|0);
    $138 = HEAP32[$137>>2]|0;
    HEAP8[$138>>0] = 0;
    $139 = ((($__grp)) + 4|0);
    HEAP32[$139>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(453,($__grp|0),0);
   $141 = __THREW__; __THREW__ = 0;
   $142 = $141&1;
   if ($142) {
    $143 = ___cxa_find_matching_catch(0|0)|0;
    $144 = tempRet0;
    ___clang_call_terminate($143);
    // unreachable;
   }
   ;HEAP32[$__grp>>2]=HEAP32[$8>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$8+8>>2]|0;
   HEAP32[$8>>2] = 0;
   $145 = ((($8)) + 4|0);
   HEAP32[$145>>2] = 0;
   $146 = ((($8)) + 8|0);
   HEAP32[$146>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
   $147 = HEAP32[$88>>2]|0;
   $148 = ((($147)) + 24|0);
   $149 = HEAP32[$148>>2]|0;
   FUNCTION_TABLE_vii[$149 & 1023]($9,$88);
   $150 = HEAP8[$__sym>>0]|0;
   $151 = $150 & 1;
   $152 = ($151<<24>>24)==(0);
   if ($152) {
    HEAP8[$__sym>>0] = 0;
   } else {
    $153 = ((($__sym)) + 8|0);
    $154 = HEAP32[$153>>2]|0;
    HEAP32[$154>>2] = 0;
   }
   $155 = ((($__sym)) + 4|0);
   HEAP32[$155>>2] = 0;
   __THREW__ = 0;
   invoke_vii(459,($__sym|0),0);
   $156 = __THREW__; __THREW__ = 0;
   $157 = $156&1;
   if ($157) {
    $158 = ___cxa_find_matching_catch(0|0)|0;
    $159 = tempRet0;
    ___clang_call_terminate($158);
    // unreachable;
   } else {
    ;HEAP32[$__sym>>2]=HEAP32[$9>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$9+8>>2]|0;
    HEAP32[$9>>2] = 0;
    $160 = ((($9)) + 4|0);
    HEAP32[$160>>2] = 0;
    $161 = ((($9)) + 8|0);
    HEAP32[$161>>2] = 0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($9);
    $162 = HEAP32[$88>>2]|0;
    $163 = ((($162)) + 36|0);
    $164 = HEAP32[$163>>2]|0;
    $165 = (FUNCTION_TABLE_ii[$164 & 1023]($88)|0);
    $storemerge = $165;
    break;
   }
  }
 } while(0);
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce($this,$__s,$__intl,$__iob,$__fl,$__units) {
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__units = +$__units;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$byval_copy = 0, $$pre = 0, $$pre20 = 0, $$pre20$pre = 0, $$pre22 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__bb = 0, $__buf = 0, $__db$0 = 0, $__digits = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0;
 var $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 400|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 76|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $__buf = sp + 288|0;
 $__bb = sp + 72|0;
 $__digits = sp + 188|0;
 $__loc = sp + 68|0;
 $__pat = sp + 184|0;
 $__dp = sp + 181|0;
 $__ts = sp + 180|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__sn = sp + 32|0;
 $__fd = sp + 28|0;
 $__mbuf = sp + 80|0;
 $__mi = sp + 24|0;
 $__me = sp + 20|0;
 $0 = sp + 16|0;
 HEAP32[$__bb>>2] = $__buf;
 HEAPF64[$vararg_buffer>>3] = $__units;
 $1 = (_snprintf($__buf,100,26139,$vararg_buffer)|0);
 $2 = ($1>>>0)>(99);
 do {
  if ($2) {
   __THREW__ = 0;
   $3 = (invoke_i(429)|0);
   $4 = __THREW__; __THREW__ = 0;
   $5 = $4&1;
   if ($5) {
    $137 = 0;$138 = 0;
    label = 7;
   } else {
    __THREW__ = 0;
    HEAPF64[$vararg_buffer1>>3] = $__units;
    $6 = (invoke_iiiii(434,($__bb|0),($3|0),(26139|0),($vararg_buffer1|0))|0);
    $7 = __THREW__; __THREW__ = 0;
    $8 = $7&1;
    if ($8) {
     $137 = 0;$138 = 0;
     label = 7;
    } else {
     $9 = HEAP32[$__bb>>2]|0;
     $10 = ($9|0)==(0|0);
     if ($10) {
      __THREW__ = 0;
      invoke_v(435);
      $11 = __THREW__; __THREW__ = 0;
      $12 = $11&1;
      if ($12) {
       $137 = 0;$138 = 0;
       label = 7;
       break;
      }
      $$pre = HEAP32[$__bb>>2]|0;
      $16 = $$pre;
     } else {
      $16 = $9;
     }
     $15 = $16;
     $17 = (_malloc($6)|0);
     $18 = $17;
     $19 = ($17|0)==(0|0);
     if ($19) {
      __THREW__ = 0;
      invoke_v(435);
      $20 = __THREW__; __THREW__ = 0;
      $21 = $20&1;
      if ($21) {
       $137 = $15;$138 = $18;
       label = 7;
      } else {
       $125 = $18;$128 = $15;$__db$0 = 0;$__n$0 = $6;
       label = 10;
      }
     } else {
      $125 = $18;$128 = $15;$__db$0 = $17;$__n$0 = $6;
      label = 10;
     }
    }
   }
  } else {
   $125 = 0;$128 = 0;$__db$0 = $__digits;$__n$0 = $1;
   label = 10;
  }
 } while(0);
 if ((label|0) == 10) {
  __THREW__ = 0;
  $22 = (invoke_ii(357,($__iob|0))|0);
  $23 = __THREW__; __THREW__ = 0;
  $24 = $23&1;
  if ($24) {
   $137 = $128;$138 = $125;
   label = 7;
  } else {
   HEAP32[$__loc>>2] = $22;
   __THREW__ = 0;
   $25 = (invoke_iii(355,($__loc|0),(10392|0))|0);
   $26 = __THREW__; __THREW__ = 0;
   $27 = $26&1;
   if ($27) {
    label = 22;
   } else {
    $28 = HEAP32[$__bb>>2]|0;
    $29 = (($28) + ($__n$0)|0);
    $30 = HEAP32[$25>>2]|0;
    $31 = ((($30)) + 32|0);
    $32 = HEAP32[$31>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($32|0,($25|0),($28|0),($29|0),($__db$0|0))|0);
    $33 = __THREW__; __THREW__ = 0;
    $34 = $33&1;
    if ($34) {
     label = 22;
    } else {
     $35 = ($__n$0|0)==(0);
     if ($35) {
      $45 = 0;
     } else {
      $36 = HEAP32[$__bb>>2]|0;
      $37 = HEAP8[$36>>0]|0;
      $38 = ($37<<24>>24)==(45);
      $45 = $38;
     }
     HEAP32[$__grp>>2] = 0;
     $39 = ((($__grp)) + 4|0);
     HEAP32[$39>>2] = 0;
     $40 = ((($__grp)) + 8|0);
     HEAP32[$40>>2] = 0;
     HEAP32[$__sym>>2] = 0;
     $41 = ((($__sym)) + 4|0);
     HEAP32[$41>>2] = 0;
     $42 = ((($__sym)) + 8|0);
     HEAP32[$42>>2] = 0;
     HEAP32[$__sn>>2] = 0;
     $43 = ((($__sn)) + 4|0);
     HEAP32[$43>>2] = 0;
     $44 = ((($__sn)) + 8|0);
     HEAP32[$44>>2] = 0;
     __THREW__ = 0;
     invoke_viiiiiiiiii(460,($__intl|0),($45|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__sn|0),($__fd|0));
     $46 = __THREW__; __THREW__ = 0;
     $47 = $46&1;
     if ($47) {
      $100 = ___cxa_find_matching_catch()|0;
      $101 = tempRet0;
      $$0 = $100;$$01 = $101;$$pre20 = $22;
     } else {
      $48 = HEAP32[$__fd>>2]|0;
      $49 = ($__n$0|0)>($48|0);
      if ($49) {
       $50 = (($__n$0) - ($48))|0;
       $51 = $50 << 1;
       $52 = HEAP8[$__sn>>0]|0;
       $53 = $52 & 1;
       $54 = ($53<<24>>24)==(0);
       $55 = ((($__sn)) + 4|0);
       $56 = HEAP32[$55>>2]|0;
       $57 = $52&255;
       $58 = $57 >>> 1;
       $59 = $54 ? $58 : $56;
       $60 = HEAP8[$__sym>>0]|0;
       $61 = $60 & 1;
       $62 = ($61<<24>>24)==(0);
       $63 = ((($__sym)) + 4|0);
       $64 = HEAP32[$63>>2]|0;
       $65 = $60&255;
       $66 = $65 >>> 1;
       $67 = $62 ? $66 : $64;
       $68 = $51 | 1;
       $69 = (($68) + ($48))|0;
       $70 = (($69) + ($59))|0;
       $71 = (($70) + ($67))|0;
       $92 = $71;
      } else {
       $72 = HEAP8[$__sn>>0]|0;
       $73 = $72 & 1;
       $74 = ($73<<24>>24)==(0);
       $75 = ((($__sn)) + 4|0);
       $76 = HEAP32[$75>>2]|0;
       $77 = $72&255;
       $78 = $77 >>> 1;
       $79 = $74 ? $78 : $76;
       $80 = HEAP8[$__sym>>0]|0;
       $81 = $80 & 1;
       $82 = ($81<<24>>24)==(0);
       $83 = ((($__sym)) + 4|0);
       $84 = HEAP32[$83>>2]|0;
       $85 = $80&255;
       $86 = $85 >>> 1;
       $87 = $82 ? $86 : $84;
       $88 = (($48) + 2)|0;
       $89 = (($88) + ($79))|0;
       $90 = (($89) + ($87))|0;
       $92 = $90;
      }
      $91 = ($92>>>0)>(100);
      if ($91) {
       $93 = (_malloc($92)|0);
       $94 = $93;
       $95 = ($93|0)==(0|0);
       if ($95) {
        __THREW__ = 0;
        invoke_v(435);
        $96 = __THREW__; __THREW__ = 0;
        $97 = $96&1;
        if ($97) {
         $105 = $94;
        } else {
         $121 = $94;$__mb$0 = 0;
         label = 26;
        }
       } else {
        $121 = $94;$__mb$0 = $93;
        label = 26;
       }
      } else {
       $121 = 0;$__mb$0 = $__mbuf;
       label = 26;
      }
      if ((label|0) == 26) {
       $107 = ((($__iob)) + 4|0);
       $108 = HEAP32[$107>>2]|0;
       $109 = (($__db$0) + ($__n$0)|0);
       $110 = HEAP8[$__dp>>0]|0;
       $111 = HEAP8[$__ts>>0]|0;
       __THREW__ = 0;
       invoke_viiiiiiiiiiiiiii(461,($__mb$0|0),($__mi|0),($__me|0),($108|0),($__db$0|0),($109|0),($25|0),($45|0),($__pat|0),($110|0),($111|0),($__grp|0),($__sym|0),($__sn|0),($48|0));
       $112 = __THREW__; __THREW__ = 0;
       $113 = $112&1;
       if ($113) {
        $105 = $121;
       } else {
        $114 = HEAP32[$__s>>2]|0;
        HEAP32[$0>>2] = $114;
        $115 = HEAP32[$__mi>>2]|0;
        $116 = HEAP32[$__me>>2]|0;
        __THREW__ = 0;
        ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
        $117 = (invoke_iiiiiii(358,($$byval_copy|0),($__mb$0|0),($115|0),($116|0),($__iob|0),($__fl|0))|0);
        $118 = __THREW__; __THREW__ = 0;
        $119 = $118&1;
        if ($119) {
         $105 = $121;
        } else {
         $120 = ($121|0)==(0);
         if ($120) {
          $123 = $22;
         } else {
          $122 = $121;
          _free($122);
          $$pre22 = HEAP32[$__loc>>2]|0;
          $123 = $$pre22;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
         (__ZNSt3__114__shared_count16__release_sharedEv($123)|0);
         $124 = ($125|0)==(0);
         if (!($124)) {
          $126 = $125;
          _free($126);
         }
         $127 = ($128|0)==(0);
         if (!($127)) {
          $129 = $128;
          _free($129);
         }
         STACKTOP = sp;return ($117|0);
        }
       }
      }
      $102 = ___cxa_find_matching_catch()|0;
      $103 = tempRet0;
      $104 = ($105|0)==(0);
      if ($104) {
       $$0 = $102;$$01 = $103;$$pre20 = $22;
      } else {
       $106 = $105;
       _free($106);
       $$pre20$pre = HEAP32[$__loc>>2]|0;
       $$0 = $102;$$01 = $103;$$pre20 = $$pre20$pre;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
     $$1 = $$0;$$12 = $$01;$130 = $$pre20;
    }
   }
   if ((label|0) == 22) {
    $98 = ___cxa_find_matching_catch()|0;
    $99 = tempRet0;
    $$1 = $98;$$12 = $99;$130 = $22;
   }
   (__ZNSt3__114__shared_count16__release_sharedEv($130)|0);
   $$2 = $$1;$$23 = $$12;$132 = $125;$135 = $128;
  }
 }
 if ((label|0) == 7) {
  $13 = ___cxa_find_matching_catch()|0;
  $14 = tempRet0;
  $$2 = $13;$$23 = $14;$132 = $138;$135 = $137;
 }
 $131 = ($132|0)==(0);
 if (!($131)) {
  $133 = $132;
  _free($133);
 }
 $134 = ($135|0)==(0);
 if (!($134)) {
  $136 = $135;
  _free($136);
 }
 ___resumeException($$2|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl,$__neg,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__intl = $__intl|0;
 $__neg = $__neg|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$pre$phi39Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 108|0;
 $1 = sp + 96|0;
 $2 = sp + 92|0;
 $3 = sp + 80|0;
 $4 = sp + 68|0;
 $5 = sp + 56|0;
 $6 = sp + 52|0;
 $7 = sp + 40|0;
 $8 = sp + 36|0;
 $9 = sp + 24|0;
 $10 = sp + 12|0;
 $11 = sp;
 do {
  if ($__intl) {
   $12 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,10000)|0);
   $13 = HEAP32[$12>>2]|0;
   do {
    if ($__neg) {
     $14 = ((($13)) + 44|0);
     $15 = HEAP32[$14>>2]|0;
     FUNCTION_TABLE_vii[$15 & 1023]($0,$12);
     $16 = HEAP32[$0>>2]|0;
     HEAP8[$__pat>>0]=$16&255;HEAP8[$__pat+1>>0]=($16>>8)&255;HEAP8[$__pat+2>>0]=($16>>16)&255;HEAP8[$__pat+3>>0]=$16>>24;
     $17 = HEAP32[$12>>2]|0;
     $18 = ((($17)) + 32|0);
     $19 = HEAP32[$18>>2]|0;
     FUNCTION_TABLE_vii[$19 & 1023]($1,$12);
     $20 = HEAP8[$__sn>>0]|0;
     $21 = $20 & 1;
     $22 = ($21<<24>>24)==(0);
     if ($22) {
      $26 = ((($__sn)) + 1|0);
      HEAP8[$26>>0] = 0;
      HEAP8[$__sn>>0] = 0;
     } else {
      $23 = ((($__sn)) + 8|0);
      $24 = HEAP32[$23>>2]|0;
      HEAP8[$24>>0] = 0;
      $25 = ((($__sn)) + 4|0);
      HEAP32[$25>>2] = 0;
     }
     __THREW__ = 0;
     invoke_vii(453,($__sn|0),0);
     $27 = __THREW__; __THREW__ = 0;
     $28 = $27&1;
     if ($28) {
      $29 = ___cxa_find_matching_catch(0|0)|0;
      $30 = tempRet0;
      ___clang_call_terminate($29);
      // unreachable;
     } else {
      ;HEAP32[$__sn>>2]=HEAP32[$1>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$1+8>>2]|0;
      HEAP32[$1>>2] = 0;
      $31 = ((($1)) + 4|0);
      HEAP32[$31>>2] = 0;
      $32 = ((($1)) + 8|0);
      HEAP32[$32>>2] = 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
      $$pre$phiZ2D = $12;
      break;
     }
    } else {
     $33 = ((($13)) + 40|0);
     $34 = HEAP32[$33>>2]|0;
     FUNCTION_TABLE_vii[$34 & 1023]($2,$12);
     $35 = HEAP32[$2>>2]|0;
     HEAP8[$__pat>>0]=$35&255;HEAP8[$__pat+1>>0]=($35>>8)&255;HEAP8[$__pat+2>>0]=($35>>16)&255;HEAP8[$__pat+3>>0]=$35>>24;
     $36 = HEAP32[$12>>2]|0;
     $37 = ((($36)) + 28|0);
     $38 = HEAP32[$37>>2]|0;
     FUNCTION_TABLE_vii[$38 & 1023]($3,$12);
     $39 = HEAP8[$__sn>>0]|0;
     $40 = $39 & 1;
     $41 = ($40<<24>>24)==(0);
     if ($41) {
      $45 = ((($__sn)) + 1|0);
      HEAP8[$45>>0] = 0;
      HEAP8[$__sn>>0] = 0;
     } else {
      $42 = ((($__sn)) + 8|0);
      $43 = HEAP32[$42>>2]|0;
      HEAP8[$43>>0] = 0;
      $44 = ((($__sn)) + 4|0);
      HEAP32[$44>>2] = 0;
     }
     __THREW__ = 0;
     invoke_vii(453,($__sn|0),0);
     $46 = __THREW__; __THREW__ = 0;
     $47 = $46&1;
     if ($47) {
      $48 = ___cxa_find_matching_catch(0|0)|0;
      $49 = tempRet0;
      ___clang_call_terminate($48);
      // unreachable;
     } else {
      ;HEAP32[$__sn>>2]=HEAP32[$3>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$3+8>>2]|0;
      HEAP32[$3>>2] = 0;
      $50 = ((($3)) + 4|0);
      HEAP32[$50>>2] = 0;
      $51 = ((($3)) + 8|0);
      HEAP32[$51>>2] = 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
      $$pre$phiZ2D = $12;
      break;
     }
    }
   } while(0);
   $52 = HEAP32[$12>>2]|0;
   $53 = ((($52)) + 12|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = (FUNCTION_TABLE_ii[$54 & 1023]($12)|0);
   HEAP8[$__dp>>0] = $55;
   $56 = HEAP32[$12>>2]|0;
   $57 = ((($56)) + 16|0);
   $58 = HEAP32[$57>>2]|0;
   $59 = (FUNCTION_TABLE_ii[$58 & 1023]($12)|0);
   HEAP8[$__ts>>0] = $59;
   $60 = HEAP32[$$pre$phiZ2D>>2]|0;
   $61 = ((($60)) + 20|0);
   $62 = HEAP32[$61>>2]|0;
   FUNCTION_TABLE_vii[$62 & 1023]($4,$12);
   $63 = HEAP8[$__grp>>0]|0;
   $64 = $63 & 1;
   $65 = ($64<<24>>24)==(0);
   if ($65) {
    $69 = ((($__grp)) + 1|0);
    HEAP8[$69>>0] = 0;
    HEAP8[$__grp>>0] = 0;
   } else {
    $66 = ((($__grp)) + 8|0);
    $67 = HEAP32[$66>>2]|0;
    HEAP8[$67>>0] = 0;
    $68 = ((($__grp)) + 4|0);
    HEAP32[$68>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(453,($__grp|0),0);
   $70 = __THREW__; __THREW__ = 0;
   $71 = $70&1;
   if ($71) {
    $72 = ___cxa_find_matching_catch(0|0)|0;
    $73 = tempRet0;
    ___clang_call_terminate($72);
    // unreachable;
   }
   ;HEAP32[$__grp>>2]=HEAP32[$4>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$4+8>>2]|0;
   HEAP32[$4>>2] = 0;
   $74 = ((($4)) + 4|0);
   HEAP32[$74>>2] = 0;
   $75 = ((($4)) + 8|0);
   HEAP32[$75>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
   $76 = HEAP32[$$pre$phiZ2D>>2]|0;
   $77 = ((($76)) + 24|0);
   $78 = HEAP32[$77>>2]|0;
   FUNCTION_TABLE_vii[$78 & 1023]($5,$12);
   $79 = HEAP8[$__sym>>0]|0;
   $80 = $79 & 1;
   $81 = ($80<<24>>24)==(0);
   if ($81) {
    $85 = ((($__sym)) + 1|0);
    HEAP8[$85>>0] = 0;
    HEAP8[$__sym>>0] = 0;
   } else {
    $82 = ((($__sym)) + 8|0);
    $83 = HEAP32[$82>>2]|0;
    HEAP8[$83>>0] = 0;
    $84 = ((($__sym)) + 4|0);
    HEAP32[$84>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(453,($__sym|0),0);
   $86 = __THREW__; __THREW__ = 0;
   $87 = $86&1;
   if ($87) {
    $88 = ___cxa_find_matching_catch(0|0)|0;
    $89 = tempRet0;
    ___clang_call_terminate($88);
    // unreachable;
   } else {
    ;HEAP32[$__sym>>2]=HEAP32[$5>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$5+8>>2]|0;
    HEAP32[$5>>2] = 0;
    $90 = ((($5)) + 4|0);
    HEAP32[$90>>2] = 0;
    $91 = ((($5)) + 8|0);
    HEAP32[$91>>2] = 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
    $92 = HEAP32[$12>>2]|0;
    $93 = ((($92)) + 36|0);
    $94 = HEAP32[$93>>2]|0;
    $95 = (FUNCTION_TABLE_ii[$94 & 1023]($12)|0);
    $storemerge = $95;
    break;
   }
  } else {
   $96 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,9936)|0);
   $97 = HEAP32[$96>>2]|0;
   do {
    if ($__neg) {
     $98 = ((($97)) + 44|0);
     $99 = HEAP32[$98>>2]|0;
     FUNCTION_TABLE_vii[$99 & 1023]($6,$96);
     $100 = HEAP32[$6>>2]|0;
     HEAP8[$__pat>>0]=$100&255;HEAP8[$__pat+1>>0]=($100>>8)&255;HEAP8[$__pat+2>>0]=($100>>16)&255;HEAP8[$__pat+3>>0]=$100>>24;
     $101 = HEAP32[$96>>2]|0;
     $102 = ((($101)) + 32|0);
     $103 = HEAP32[$102>>2]|0;
     FUNCTION_TABLE_vii[$103 & 1023]($7,$96);
     $104 = HEAP8[$__sn>>0]|0;
     $105 = $104 & 1;
     $106 = ($105<<24>>24)==(0);
     if ($106) {
      $110 = ((($__sn)) + 1|0);
      HEAP8[$110>>0] = 0;
      HEAP8[$__sn>>0] = 0;
     } else {
      $107 = ((($__sn)) + 8|0);
      $108 = HEAP32[$107>>2]|0;
      HEAP8[$108>>0] = 0;
      $109 = ((($__sn)) + 4|0);
      HEAP32[$109>>2] = 0;
     }
     __THREW__ = 0;
     invoke_vii(453,($__sn|0),0);
     $111 = __THREW__; __THREW__ = 0;
     $112 = $111&1;
     if ($112) {
      $113 = ___cxa_find_matching_catch(0|0)|0;
      $114 = tempRet0;
      ___clang_call_terminate($113);
      // unreachable;
     } else {
      ;HEAP32[$__sn>>2]=HEAP32[$7>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$7+8>>2]|0;
      HEAP32[$7>>2] = 0;
      $115 = ((($7)) + 4|0);
      HEAP32[$115>>2] = 0;
      $116 = ((($7)) + 8|0);
      HEAP32[$116>>2] = 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
      $$pre$phi39Z2D = $96;
      break;
     }
    } else {
     $117 = ((($97)) + 40|0);
     $118 = HEAP32[$117>>2]|0;
     FUNCTION_TABLE_vii[$118 & 1023]($8,$96);
     $119 = HEAP32[$8>>2]|0;
     HEAP8[$__pat>>0]=$119&255;HEAP8[$__pat+1>>0]=($119>>8)&255;HEAP8[$__pat+2>>0]=($119>>16)&255;HEAP8[$__pat+3>>0]=$119>>24;
     $120 = HEAP32[$96>>2]|0;
     $121 = ((($120)) + 28|0);
     $122 = HEAP32[$121>>2]|0;
     FUNCTION_TABLE_vii[$122 & 1023]($9,$96);
     $123 = HEAP8[$__sn>>0]|0;
     $124 = $123 & 1;
     $125 = ($124<<24>>24)==(0);
     if ($125) {
      $129 = ((($__sn)) + 1|0);
      HEAP8[$129>>0] = 0;
      HEAP8[$__sn>>0] = 0;
     } else {
      $126 = ((($__sn)) + 8|0);
      $127 = HEAP32[$126>>2]|0;
      HEAP8[$127>>0] = 0;
      $128 = ((($__sn)) + 4|0);
      HEAP32[$128>>2] = 0;
     }
     __THREW__ = 0;
     invoke_vii(453,($__sn|0),0);
     $130 = __THREW__; __THREW__ = 0;
     $131 = $130&1;
     if ($131) {
      $132 = ___cxa_find_matching_catch(0|0)|0;
      $133 = tempRet0;
      ___clang_call_terminate($132);
      // unreachable;
     } else {
      ;HEAP32[$__sn>>2]=HEAP32[$9>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$9+8>>2]|0;
      HEAP32[$9>>2] = 0;
      $134 = ((($9)) + 4|0);
      HEAP32[$134>>2] = 0;
      $135 = ((($9)) + 8|0);
      HEAP32[$135>>2] = 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
      $$pre$phi39Z2D = $96;
      break;
     }
    }
   } while(0);
   $136 = HEAP32[$96>>2]|0;
   $137 = ((($136)) + 12|0);
   $138 = HEAP32[$137>>2]|0;
   $139 = (FUNCTION_TABLE_ii[$138 & 1023]($96)|0);
   HEAP8[$__dp>>0] = $139;
   $140 = HEAP32[$96>>2]|0;
   $141 = ((($140)) + 16|0);
   $142 = HEAP32[$141>>2]|0;
   $143 = (FUNCTION_TABLE_ii[$142 & 1023]($96)|0);
   HEAP8[$__ts>>0] = $143;
   $144 = HEAP32[$$pre$phi39Z2D>>2]|0;
   $145 = ((($144)) + 20|0);
   $146 = HEAP32[$145>>2]|0;
   FUNCTION_TABLE_vii[$146 & 1023]($10,$96);
   $147 = HEAP8[$__grp>>0]|0;
   $148 = $147 & 1;
   $149 = ($148<<24>>24)==(0);
   if ($149) {
    $153 = ((($__grp)) + 1|0);
    HEAP8[$153>>0] = 0;
    HEAP8[$__grp>>0] = 0;
   } else {
    $150 = ((($__grp)) + 8|0);
    $151 = HEAP32[$150>>2]|0;
    HEAP8[$151>>0] = 0;
    $152 = ((($__grp)) + 4|0);
    HEAP32[$152>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(453,($__grp|0),0);
   $154 = __THREW__; __THREW__ = 0;
   $155 = $154&1;
   if ($155) {
    $156 = ___cxa_find_matching_catch(0|0)|0;
    $157 = tempRet0;
    ___clang_call_terminate($156);
    // unreachable;
   }
   ;HEAP32[$__grp>>2]=HEAP32[$10>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$10+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$10+8>>2]|0;
   HEAP32[$10>>2] = 0;
   $158 = ((($10)) + 4|0);
   HEAP32[$158>>2] = 0;
   $159 = ((($10)) + 8|0);
   HEAP32[$159>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
   $160 = HEAP32[$$pre$phi39Z2D>>2]|0;
   $161 = ((($160)) + 24|0);
   $162 = HEAP32[$161>>2]|0;
   FUNCTION_TABLE_vii[$162 & 1023]($11,$96);
   $163 = HEAP8[$__sym>>0]|0;
   $164 = $163 & 1;
   $165 = ($164<<24>>24)==(0);
   if ($165) {
    $169 = ((($__sym)) + 1|0);
    HEAP8[$169>>0] = 0;
    HEAP8[$__sym>>0] = 0;
   } else {
    $166 = ((($__sym)) + 8|0);
    $167 = HEAP32[$166>>2]|0;
    HEAP8[$167>>0] = 0;
    $168 = ((($__sym)) + 4|0);
    HEAP32[$168>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(453,($__sym|0),0);
   $170 = __THREW__; __THREW__ = 0;
   $171 = $170&1;
   if ($171) {
    $172 = ___cxa_find_matching_catch(0|0)|0;
    $173 = tempRet0;
    ___clang_call_terminate($172);
    // unreachable;
   } else {
    ;HEAP32[$__sym>>2]=HEAP32[$11>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$11+8>>2]|0;
    HEAP32[$11>>2] = 0;
    $174 = ((($11)) + 4|0);
    HEAP32[$174>>2] = 0;
    $175 = ((($11)) + 8|0);
    HEAP32[$175>>2] = 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
    $176 = HEAP32[$96>>2]|0;
    $177 = ((($176)) + 36|0);
    $178 = HEAP32[$177>>2]|0;
    $179 = (FUNCTION_TABLE_ii[$178 & 1023]($96)|0);
    $storemerge = $179;
    break;
   }
  }
 } while(0);
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb,$__mi,$__me,$__flags,$__db,$__de,$__ct,$__neg,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__mb = $__mb|0;
 $__mi = $__mi|0;
 $__me = $__me|0;
 $__flags = $__flags|0;
 $__db = $__db|0;
 $__de = $__de|0;
 $__ct = $__ct|0;
 $__neg = $__neg|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$ = 0, $$$0 = 0, $$$027 = 0, $$0$i$i$lcssa = 0, $$0$i$i35 = 0, $$0$i$i9$lcssa = 0, $$0$i$i958 = 0, $$01$i$i56 = 0, $$062 = 0, $$2 = 0, $$lcssa = 0, $$lcssa34 = 0, $$op = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__d$0$lcssa = 0, $__d$0$lcssa26 = 0, $__d$036 = 0, $__d$142 = 0, $__d$2 = 0, $__d$351 = 0, $__f$043 = 0, $__f$146 = 0;
 var $__gl$0$ph = 0, $__gl$054 = 0, $__gl$1 = 0, $__ig$053 = 0, $__ig$1 = 0, $__ng$052 = 0, $__ng$1 = 0, $__p$061 = 0, $exitcond = 0, $isascii1$i = 0, $or$cond = 0, $scevgep$sum = 0, $scevgep29 = 0, $umax28 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$__me>>2] = $__mb;
 $0 = ((($__sn)) + 4|0);
 $1 = ((($__sn)) + 8|0);
 $2 = ((($__sn)) + 1|0);
 $3 = ((($__sym)) + 4|0);
 $4 = $__flags & 512;
 $5 = ($4|0)==(0);
 $6 = ((($__sym)) + 8|0);
 $7 = ((($__sym)) + 1|0);
 $8 = ((($__ct)) + 8|0);
 $9 = ($__fd|0)>(0);
 $10 = ((($__grp)) + 4|0);
 $11 = ((($__grp)) + 8|0);
 $12 = ((($__grp)) + 1|0);
 $13 = (($__fd) + 1)|0;
 $14 = (-2 - ($__fd))|0;
 $15 = ($__fd|0)<(0);
 $$op = $__fd ^ -1;
 $16 = $15 ? $$op : -1;
 $17 = (($14) - ($16))|0;
 $18 = ($__fd|0)>(0);
 $$062 = $__db;$__p$061 = 0;
 while(1) {
  $19 = (($__pat) + ($__p$061)|0);
  $20 = HEAP8[$19>>0]|0;
  $21 = $20 << 24 >> 24;
  switch ($21|0) {
  case 0:  {
   $22 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $22;
   $$2 = $$062;
   break;
  }
  case 1:  {
   $23 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $23;
   $24 = HEAP32[$__ct>>2]|0;
   $25 = ((($24)) + 28|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = (FUNCTION_TABLE_iii[$26 & 1023]($__ct,32)|0);
   $28 = HEAP32[$__me>>2]|0;
   $29 = ((($28)) + 1|0);
   HEAP32[$__me>>2] = $29;
   HEAP8[$28>>0] = $27;
   $$2 = $$062;
   break;
  }
  case 3:  {
   $30 = HEAP8[$__sn>>0]|0;
   $31 = $30 & 1;
   $32 = ($31<<24>>24)==(0);
   $33 = HEAP32[$0>>2]|0;
   $34 = $30&255;
   $35 = $34 >>> 1;
   $36 = $32 ? $35 : $33;
   $37 = ($36|0)==(0);
   if ($37) {
    $$2 = $$062;
   } else {
    $38 = HEAP32[$1>>2]|0;
    $39 = $32 ? $2 : $38;
    $40 = HEAP8[$39>>0]|0;
    $41 = HEAP32[$__me>>2]|0;
    $42 = ((($41)) + 1|0);
    HEAP32[$__me>>2] = $42;
    HEAP8[$41>>0] = $40;
    $$2 = $$062;
   }
   break;
  }
  case 2:  {
   $43 = HEAP8[$__sym>>0]|0;
   $44 = $43 & 1;
   $45 = ($44<<24>>24)==(0);
   $46 = HEAP32[$3>>2]|0;
   $47 = $43&255;
   $48 = $47 >>> 1;
   $49 = $45 ? $48 : $46;
   $50 = ($49|0)==(0);
   $or$cond = $5 | $50;
   if ($or$cond) {
    $$2 = $$062;
   } else {
    $51 = HEAP32[$6>>2]|0;
    $52 = $45 ? $7 : $51;
    $53 = (($52) + ($49)|0);
    $54 = HEAP32[$__me>>2]|0;
    $55 = ($49|0)==(0);
    if ($55) {
     $$0$i$i9$lcssa = $54;
    } else {
     $$0$i$i958 = $54;$57 = $52;
     while(1) {
      $56 = HEAP8[$57>>0]|0;
      HEAP8[$$0$i$i958>>0] = $56;
      $58 = ((($57)) + 1|0);
      $59 = ((($$0$i$i958)) + 1|0);
      $60 = ($58|0)==($53|0);
      if ($60) {
       $$0$i$i9$lcssa = $59;
       break;
      } else {
       $$0$i$i958 = $59;$57 = $58;
      }
     }
    }
    HEAP32[$__me>>2] = $$0$i$i9$lcssa;
    $$2 = $$062;
   }
   break;
  }
  case 4:  {
   $61 = HEAP32[$__me>>2]|0;
   $62 = ((($$062)) + 1|0);
   $$$0 = $__neg ? $62 : $$062;
   $$$027 = $$$0;
   $63 = HEAP32[$8>>2]|0;
   $64 = ($$$0>>>0)<($__de>>>0);
   L15: do {
    if ($64) {
     $__d$036 = $$$0;
     while(1) {
      $65 = HEAP8[$__d$036>>0]|0;
      $isascii1$i = ($65<<24>>24)>(-1);
      if (!($isascii1$i)) {
       $__d$0$lcssa = $__d$036;
       break L15;
      }
      $66 = $65 << 24 >> 24;
      $67 = (($63) + ($66<<1)|0);
      $68 = HEAP16[$67>>1]|0;
      $69 = $68 & 2048;
      $70 = ($69<<16>>16)==(0);
      if ($70) {
       $__d$0$lcssa = $__d$036;
       break L15;
      }
      $71 = ((($__d$036)) + 1|0);
      $72 = ($71>>>0)<($__de>>>0);
      if ($72) {
       $__d$036 = $71;
      } else {
       $__d$0$lcssa = $71;
       break;
      }
     }
    } else {
     $__d$0$lcssa = $$$0;
    }
   } while(0);
   $__d$0$lcssa26 = $__d$0$lcssa;
   if ($9) {
    $73 = (-2 - ($__d$0$lcssa26))|0;
    $74 = ($__d$0$lcssa26>>>0)>($$$027>>>0);
    $75 = $74 ? $$$027 : $__d$0$lcssa26;
    $76 = $75 ^ -1;
    $77 = (($73) - ($76))|0;
    $78 = ($17>>>0)>($77>>>0);
    $umax28 = $78 ? $17 : $77;
    $79 = ($__d$0$lcssa>>>0)>($$$0>>>0);
    $80 = $79 & $18;
    if ($80) {
     $__d$142 = $__d$0$lcssa;$__f$043 = $__fd;
     while(1) {
      $81 = ((($__d$142)) + -1|0);
      $82 = HEAP8[$81>>0]|0;
      $83 = HEAP32[$__me>>2]|0;
      $84 = ((($83)) + 1|0);
      HEAP32[$__me>>2] = $84;
      HEAP8[$83>>0] = $82;
      $85 = (($__f$043) + -1)|0;
      $86 = ($81>>>0)>($$$0>>>0);
      $87 = ($__f$043|0)>(1);
      $88 = $86 & $87;
      if ($88) {
       $__d$142 = $81;$__f$043 = $85;
      } else {
       $$lcssa = $87;
       break;
      }
     }
    } else {
     $$lcssa = $18;
    }
    $89 = (($13) + ($umax28))|0;
    $scevgep$sum = (($umax28) + 1)|0;
    $scevgep29 = (($__d$0$lcssa) + ($scevgep$sum)|0);
    if ($$lcssa) {
     $90 = HEAP32[$__ct>>2]|0;
     $91 = ((($90)) + 28|0);
     $92 = HEAP32[$91>>2]|0;
     $93 = (FUNCTION_TABLE_iii[$92 & 1023]($__ct,48)|0);
     $97 = $93;
    } else {
     $97 = 0;
    }
    $94 = ($89|0)>(0);
    $95 = HEAP32[$__me>>2]|0;
    $96 = ((($95)) + 1|0);
    HEAP32[$__me>>2] = $96;
    if ($94) {
     $98 = $95;$__f$146 = $89;
     while(1) {
      HEAP8[$98>>0] = $97;
      $99 = (($__f$146) + -1)|0;
      $100 = ($__f$146|0)>(1);
      $101 = HEAP32[$__me>>2]|0;
      $102 = ((($101)) + 1|0);
      HEAP32[$__me>>2] = $102;
      if ($100) {
       $98 = $101;$__f$146 = $99;
      } else {
       $$lcssa34 = $101;
       break;
      }
     }
    } else {
     $$lcssa34 = $95;
    }
    HEAP8[$$lcssa34>>0] = $__dp;
    $__d$2 = $scevgep29;
   } else {
    $__d$2 = $__d$0$lcssa;
   }
   $103 = ($__d$2|0)==($$$0|0);
   if ($103) {
    $104 = HEAP32[$__ct>>2]|0;
    $105 = ((($104)) + 28|0);
    $106 = HEAP32[$105>>2]|0;
    $107 = (FUNCTION_TABLE_iii[$106 & 1023]($__ct,48)|0);
    $108 = HEAP32[$__me>>2]|0;
    $109 = ((($108)) + 1|0);
    HEAP32[$__me>>2] = $109;
    HEAP8[$108>>0] = $107;
   } else {
    $110 = HEAP8[$__grp>>0]|0;
    $111 = $110 & 1;
    $112 = ($111<<24>>24)==(0);
    $113 = HEAP32[$10>>2]|0;
    $114 = $110&255;
    $115 = $114 >>> 1;
    $116 = $112 ? $115 : $113;
    $117 = ($116|0)==(0);
    if ($117) {
     $__gl$0$ph = -1;
    } else {
     $118 = HEAP32[$11>>2]|0;
     $119 = $112 ? $12 : $118;
     $120 = HEAP8[$119>>0]|0;
     $121 = $120 << 24 >> 24;
     $__gl$0$ph = $121;
    }
    $122 = ($__d$2|0)==($$$0|0);
    if (!($122)) {
     $__d$351 = $__d$2;$__gl$054 = $__gl$0$ph;$__ig$053 = 0;$__ng$052 = 0;
     while(1) {
      $123 = ($__ng$052|0)==($__gl$054|0);
      if ($123) {
       $124 = HEAP32[$__me>>2]|0;
       $125 = ((($124)) + 1|0);
       HEAP32[$__me>>2] = $125;
       HEAP8[$124>>0] = $__ts;
       $126 = (($__ig$053) + 1)|0;
       $127 = HEAP8[$__grp>>0]|0;
       $128 = $127 & 1;
       $129 = ($128<<24>>24)==(0);
       $130 = HEAP32[$10>>2]|0;
       $131 = $127&255;
       $132 = $131 >>> 1;
       $133 = $129 ? $132 : $130;
       $134 = ($126>>>0)<($133>>>0);
       if ($134) {
        $135 = HEAP32[$11>>2]|0;
        $136 = $129 ? $12 : $135;
        $137 = (($136) + ($126)|0);
        $138 = HEAP8[$137>>0]|0;
        $139 = ($138<<24>>24)==(127);
        $140 = $138 << 24 >> 24;
        $$ = $139 ? -1 : $140;
        $__gl$1 = $$;$__ig$1 = $126;$__ng$1 = 0;
       } else {
        $__gl$1 = $__ng$052;$__ig$1 = $126;$__ng$1 = 0;
       }
      } else {
       $__gl$1 = $__gl$054;$__ig$1 = $__ig$053;$__ng$1 = $__ng$052;
      }
      $141 = ((($__d$351)) + -1|0);
      $142 = HEAP8[$141>>0]|0;
      $143 = HEAP32[$__me>>2]|0;
      $144 = ((($143)) + 1|0);
      HEAP32[$__me>>2] = $144;
      HEAP8[$143>>0] = $142;
      $145 = (($__ng$1) + 1)|0;
      $146 = ($141|0)==($$$0|0);
      if ($146) {
       break;
      } else {
       $__d$351 = $141;$__gl$054 = $__gl$1;$__ig$053 = $__ig$1;$__ng$052 = $145;
      }
     }
    }
   }
   $147 = HEAP32[$__me>>2]|0;
   $148 = ($61|0)==($147|0);
   if ($148) {
    $$2 = $$$0;
   } else {
    $149 = ((($147)) + -1|0);
    $150 = ($61>>>0)<($149>>>0);
    if ($150) {
     $$01$i$i56 = $61;$153 = $149;
     while(1) {
      $151 = HEAP8[$$01$i$i56>>0]|0;
      $152 = HEAP8[$153>>0]|0;
      HEAP8[$$01$i$i56>>0] = $152;
      HEAP8[$153>>0] = $151;
      $154 = ((($$01$i$i56)) + 1|0);
      $155 = ((($153)) + -1|0);
      $156 = ($154>>>0)<($155>>>0);
      if ($156) {
       $$01$i$i56 = $154;$153 = $155;
      } else {
       $$2 = $$$0;
       break;
      }
     }
    } else {
     $$2 = $$$0;
    }
   }
   break;
  }
  default: {
   $$2 = $$062;
  }
  }
  $157 = (($__p$061) + 1)|0;
  $exitcond = ($157|0)==(4);
  if ($exitcond) {
   break;
  } else {
   $$062 = $$2;$__p$061 = $157;
  }
 }
 $158 = HEAP8[$__sn>>0]|0;
 $159 = $158 & 1;
 $160 = ($159<<24>>24)==(0);
 $161 = HEAP32[$0>>2]|0;
 $162 = $158&255;
 $163 = $162 >>> 1;
 $164 = $160 ? $163 : $161;
 $165 = ($164>>>0)>(1);
 if ($165) {
  $166 = HEAP32[$1>>2]|0;
  $167 = $160 ? $2 : $166;
  $168 = (($167) + ($164)|0);
  $169 = HEAP32[$__me>>2]|0;
  $170 = ($164|0)==(1);
  if ($170) {
   $$0$i$i$lcssa = $169;
  } else {
   $171 = ((($167)) + 1|0);
   $$0$i$i35 = $169;$173 = $171;
   while(1) {
    $172 = HEAP8[$173>>0]|0;
    HEAP8[$$0$i$i35>>0] = $172;
    $174 = ((($$0$i$i35)) + 1|0);
    $175 = ((($173)) + 1|0);
    $176 = ($175|0)==($168|0);
    if ($176) {
     $$0$i$i$lcssa = $174;
     break;
    } else {
     $$0$i$i35 = $174;$173 = $175;
    }
   }
  }
  HEAP32[$__me>>2] = $$0$i$i$lcssa;
 }
 $177 = $__flags & 176;
 switch ($177|0) {
 case 32:  {
  $178 = HEAP32[$__me>>2]|0;
  HEAP32[$__mi>>2] = $178;
  break;
 }
 case 16:  {
  break;
 }
 default: {
  HEAP32[$__mi>>2] = $__mb;
 }
 }
 return;
}
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE($this,$__s,$__intl,$__iob,$__fl,$__digits) {
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__digits = $__digits|0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$byval_copy = 0, $$pre = 0, $$pre18 = 0, $$pre19 = 0, $$pre19$pre = 0, $$pre21 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 56|0;
 $__loc = sp + 52|0;
 $__pat = sp + 164|0;
 $__dp = sp + 161|0;
 $__ts = sp + 160|0;
 $__grp = sp + 40|0;
 $__sym = sp + 28|0;
 $__sn = sp + 16|0;
 $__fd = sp + 12|0;
 $__mbuf = sp + 60|0;
 $__mi = sp + 8|0;
 $__me = sp + 4|0;
 $0 = sp;
 $1 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $1;
 __THREW__ = 0;
 $2 = (invoke_iii(355,($__loc|0),(10392|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if ($4) {
   label = 13;
  } else {
   $5 = HEAP8[$__digits>>0]|0;
   $6 = $5 & 1;
   $7 = ($6<<24>>24)==(0);
   $8 = ((($__digits)) + 4|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = $5&255;
   $11 = $10 >>> 1;
   $12 = $7 ? $11 : $9;
   $13 = ($12|0)==(0);
   if ($13) {
    $32 = 0;
   } else {
    $14 = ((($__digits)) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ((($__digits)) + 1|0);
    $17 = $7 ? $16 : $15;
    $18 = HEAP8[$17>>0]|0;
    $19 = HEAP32[$2>>2]|0;
    $20 = ((($19)) + 28|0);
    $21 = HEAP32[$20>>2]|0;
    __THREW__ = 0;
    $22 = (invoke_iii($21|0,($2|0),45)|0);
    $23 = __THREW__; __THREW__ = 0;
    $24 = $23&1;
    if ($24) {
     label = 13;
     break;
    }
    $25 = ($18<<24>>24)==($22<<24>>24);
    $32 = $25;
   }
   HEAP32[$__grp>>2] = 0;
   $26 = ((($__grp)) + 4|0);
   HEAP32[$26>>2] = 0;
   $27 = ((($__grp)) + 8|0);
   HEAP32[$27>>2] = 0;
   HEAP32[$__sym>>2] = 0;
   $28 = ((($__sym)) + 4|0);
   HEAP32[$28>>2] = 0;
   $29 = ((($__sym)) + 8|0);
   HEAP32[$29>>2] = 0;
   HEAP32[$__sn>>2] = 0;
   $30 = ((($__sn)) + 4|0);
   HEAP32[$30>>2] = 0;
   $31 = ((($__sn)) + 8|0);
   HEAP32[$31>>2] = 0;
   __THREW__ = 0;
   invoke_viiiiiiiiii(460,($__intl|0),($32|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__sn|0),($__fd|0));
   $33 = __THREW__; __THREW__ = 0;
   $34 = $33&1;
   if ($34) {
    $94 = ___cxa_find_matching_catch()|0;
    $95 = tempRet0;
    $$0 = $94;$$01 = $95;$$pre19 = $1;
   } else {
    $35 = HEAP8[$__digits>>0]|0;
    $36 = $35 & 1;
    $37 = ($36<<24>>24)==(0);
    $38 = HEAP32[$8>>2]|0;
    $39 = $35&255;
    $40 = $39 >>> 1;
    $41 = $37 ? $40 : $38;
    $42 = HEAP32[$__fd>>2]|0;
    $43 = ($41|0)>($42|0);
    if ($43) {
     $44 = (($41) - ($42))|0;
     $45 = $44 << 1;
     $46 = HEAP8[$__sn>>0]|0;
     $47 = $46 & 1;
     $48 = ($47<<24>>24)==(0);
     $49 = ((($__sn)) + 4|0);
     $50 = HEAP32[$49>>2]|0;
     $51 = $46&255;
     $52 = $51 >>> 1;
     $53 = $48 ? $52 : $50;
     $54 = HEAP8[$__sym>>0]|0;
     $55 = $54 & 1;
     $56 = ($55<<24>>24)==(0);
     $57 = ((($__sym)) + 4|0);
     $58 = HEAP32[$57>>2]|0;
     $59 = $54&255;
     $60 = $59 >>> 1;
     $61 = $56 ? $60 : $58;
     $62 = $45 | 1;
     $63 = (($62) + ($42))|0;
     $64 = (($63) + ($53))|0;
     $65 = (($64) + ($61))|0;
     $86 = $65;
    } else {
     $66 = HEAP8[$__sn>>0]|0;
     $67 = $66 & 1;
     $68 = ($67<<24>>24)==(0);
     $69 = ((($__sn)) + 4|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = $66&255;
     $72 = $71 >>> 1;
     $73 = $68 ? $72 : $70;
     $74 = HEAP8[$__sym>>0]|0;
     $75 = $74 & 1;
     $76 = ($75<<24>>24)==(0);
     $77 = ((($__sym)) + 4|0);
     $78 = HEAP32[$77>>2]|0;
     $79 = $74&255;
     $80 = $79 >>> 1;
     $81 = $76 ? $80 : $78;
     $82 = (($42) + 2)|0;
     $83 = (($82) + ($73))|0;
     $84 = (($83) + ($81))|0;
     $86 = $84;
    }
    $85 = ($86>>>0)>(100);
    if ($85) {
     $87 = (_malloc($86)|0);
     $88 = $87;
     $89 = ($87|0)==(0|0);
     if ($89) {
      __THREW__ = 0;
      invoke_v(435);
      $90 = __THREW__; __THREW__ = 0;
      $91 = $90&1;
      if ($91) {
       $99 = $88;
      } else {
       $$pre = HEAP8[$__digits>>0]|0;
       $$pre18 = HEAP32[$8>>2]|0;
       $104 = $$pre;$113 = $$pre18;$126 = $88;$__mb$0 = 0;
       label = 17;
      }
     } else {
      $104 = $35;$113 = $38;$126 = $88;$__mb$0 = $87;
      label = 17;
     }
    } else {
     $104 = $35;$113 = $38;$126 = 0;$__mb$0 = $__mbuf;
     label = 17;
    }
    if ((label|0) == 17) {
     $101 = ((($__iob)) + 4|0);
     $102 = HEAP32[$101>>2]|0;
     $103 = $104 & 1;
     $105 = ($103<<24>>24)==(0);
     $106 = ((($__digits)) + 8|0);
     $107 = HEAP32[$106>>2]|0;
     $108 = ((($__digits)) + 1|0);
     $109 = $105 ? $108 : $107;
     $110 = $104&255;
     $111 = $110 >>> 1;
     $112 = $105 ? $111 : $113;
     $114 = (($109) + ($112)|0);
     $115 = HEAP8[$__dp>>0]|0;
     $116 = HEAP8[$__ts>>0]|0;
     __THREW__ = 0;
     invoke_viiiiiiiiiiiiiii(461,($__mb$0|0),($__mi|0),($__me|0),($102|0),($109|0),($114|0),($2|0),($32|0),($__pat|0),($115|0),($116|0),($__grp|0),($__sym|0),($__sn|0),($42|0));
     $117 = __THREW__; __THREW__ = 0;
     $118 = $117&1;
     if ($118) {
      $99 = $126;
     } else {
      $119 = HEAP32[$__s>>2]|0;
      HEAP32[$0>>2] = $119;
      $120 = HEAP32[$__mi>>2]|0;
      $121 = HEAP32[$__me>>2]|0;
      __THREW__ = 0;
      ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
      $122 = (invoke_iiiiiii(358,($$byval_copy|0),($__mb$0|0),($120|0),($121|0),($__iob|0),($__fl|0))|0);
      $123 = __THREW__; __THREW__ = 0;
      $124 = $123&1;
      if ($124) {
       $99 = $126;
      } else {
       $125 = ($126|0)==(0);
       if ($125) {
        $128 = $1;
       } else {
        $127 = $126;
        _free($127);
        $$pre21 = HEAP32[$__loc>>2]|0;
        $128 = $$pre21;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
       (__ZNSt3__114__shared_count16__release_sharedEv($128)|0);
       STACKTOP = sp;return ($122|0);
      }
     }
    }
    $96 = ___cxa_find_matching_catch()|0;
    $97 = tempRet0;
    $98 = ($99|0)==(0);
    if ($98) {
     $$0 = $96;$$01 = $97;$$pre19 = $1;
    } else {
     $100 = $99;
     _free($100);
     $$pre19$pre = HEAP32[$__loc>>2]|0;
     $$0 = $96;$$01 = $97;$$pre19 = $$pre19$pre;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
   $$1 = $$0;$$12 = $$01;$129 = $$pre19;
  }
 } while(0);
 if ((label|0) == 13) {
  $92 = ___cxa_find_matching_catch()|0;
  $93 = tempRet0;
  $$1 = $92;$$12 = $93;$129 = $1;
 }
 (__ZNSt3__114__shared_count16__release_sharedEv($129)|0);
 ___resumeException($$1|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe($this,$__s,$__intl,$__iob,$__fl,$__units) {
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__units = +$__units;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$byval_copy = 0, $$pre = 0, $$pre17 = 0, $$pre17$pre = 0, $$pre19 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__bb = 0, $__buf = 0, $__db$0 = 0, $__digits = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0;
 var $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1008|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 892|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $__buf = sp + 900|0;
 $__bb = sp + 888|0;
 $__digits = sp + 488|0;
 $__loc = sp + 480|0;
 $__pat = sp + 896|0;
 $__dp = sp + 476|0;
 $__ts = sp + 472|0;
 $__grp = sp + 460|0;
 $__sym = sp + 448|0;
 $__sn = sp + 436|0;
 $__fd = sp + 432|0;
 $__mbuf = sp + 32|0;
 $__mi = sp + 24|0;
 $__me = sp + 20|0;
 $0 = sp + 16|0;
 HEAP32[$__bb>>2] = $__buf;
 HEAPF64[$vararg_buffer>>3] = $__units;
 $1 = (_snprintf($__buf,100,26139,$vararg_buffer)|0);
 $2 = ($1>>>0)>(99);
 do {
  if ($2) {
   __THREW__ = 0;
   $3 = (invoke_i(429)|0);
   $4 = __THREW__; __THREW__ = 0;
   $5 = $4&1;
   if ($5) {
    $139 = 0;$140 = 0;
    label = 7;
   } else {
    __THREW__ = 0;
    HEAPF64[$vararg_buffer1>>3] = $__units;
    $6 = (invoke_iiiii(434,($__bb|0),($3|0),(26139|0),($vararg_buffer1|0))|0);
    $7 = __THREW__; __THREW__ = 0;
    $8 = $7&1;
    if ($8) {
     $139 = 0;$140 = 0;
     label = 7;
    } else {
     $9 = HEAP32[$__bb>>2]|0;
     $10 = ($9|0)==(0|0);
     if ($10) {
      __THREW__ = 0;
      invoke_v(435);
      $11 = __THREW__; __THREW__ = 0;
      $12 = $11&1;
      if ($12) {
       $139 = 0;$140 = 0;
       label = 7;
       break;
      }
      $$pre = HEAP32[$__bb>>2]|0;
      $16 = $$pre;
     } else {
      $16 = $9;
     }
     $15 = $16;
     $17 = $6 << 2;
     $18 = (_malloc($17)|0);
     $19 = $18;
     $20 = ($18|0)==(0|0);
     if ($20) {
      __THREW__ = 0;
      invoke_v(435);
      $21 = __THREW__; __THREW__ = 0;
      $22 = $21&1;
      if ($22) {
       $139 = $15;$140 = $19;
       label = 7;
      } else {
       $127 = $19;$130 = $15;$__db$0 = 0;$__n$0 = $6;
       label = 10;
      }
     } else {
      $127 = $19;$130 = $15;$__db$0 = $18;$__n$0 = $6;
      label = 10;
     }
    }
   }
  } else {
   $127 = 0;$130 = 0;$__db$0 = $__digits;$__n$0 = $1;
   label = 10;
  }
 } while(0);
 if ((label|0) == 10) {
  __THREW__ = 0;
  $23 = (invoke_ii(357,($__iob|0))|0);
  $24 = __THREW__; __THREW__ = 0;
  $25 = $24&1;
  if ($25) {
   $139 = $130;$140 = $127;
   label = 7;
  } else {
   HEAP32[$__loc>>2] = $23;
   __THREW__ = 0;
   $26 = (invoke_iii(355,($__loc|0),(10384|0))|0);
   $27 = __THREW__; __THREW__ = 0;
   $28 = $27&1;
   if ($28) {
    label = 22;
   } else {
    $29 = HEAP32[$__bb>>2]|0;
    $30 = (($29) + ($__n$0)|0);
    $31 = HEAP32[$26>>2]|0;
    $32 = ((($31)) + 48|0);
    $33 = HEAP32[$32>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($33|0,($26|0),($29|0),($30|0),($__db$0|0))|0);
    $34 = __THREW__; __THREW__ = 0;
    $35 = $34&1;
    if ($35) {
     label = 22;
    } else {
     $36 = ($__n$0|0)==(0);
     if ($36) {
      $46 = 0;
     } else {
      $37 = HEAP32[$__bb>>2]|0;
      $38 = HEAP8[$37>>0]|0;
      $39 = ($38<<24>>24)==(45);
      $46 = $39;
     }
     HEAP32[$__grp>>2] = 0;
     $40 = ((($__grp)) + 4|0);
     HEAP32[$40>>2] = 0;
     $41 = ((($__grp)) + 8|0);
     HEAP32[$41>>2] = 0;
     HEAP32[$__sym>>2] = 0;
     $42 = ((($__sym)) + 4|0);
     HEAP32[$42>>2] = 0;
     $43 = ((($__sym)) + 8|0);
     HEAP32[$43>>2] = 0;
     HEAP32[$__sn>>2] = 0;
     $44 = ((($__sn)) + 4|0);
     HEAP32[$44>>2] = 0;
     $45 = ((($__sn)) + 8|0);
     HEAP32[$45>>2] = 0;
     __THREW__ = 0;
     invoke_viiiiiiiiii(462,($__intl|0),($46|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__sn|0),($__fd|0));
     $47 = __THREW__; __THREW__ = 0;
     $48 = $47&1;
     if ($48) {
      $102 = ___cxa_find_matching_catch()|0;
      $103 = tempRet0;
      $$0 = $102;$$01 = $103;$$pre17 = $23;
     } else {
      $49 = HEAP32[$__fd>>2]|0;
      $50 = ($__n$0|0)>($49|0);
      if ($50) {
       $51 = (($__n$0) - ($49))|0;
       $52 = $51 << 1;
       $53 = HEAP8[$__sn>>0]|0;
       $54 = $53 & 1;
       $55 = ($54<<24>>24)==(0);
       $56 = ((($__sn)) + 4|0);
       $57 = HEAP32[$56>>2]|0;
       $58 = $53&255;
       $59 = $58 >>> 1;
       $60 = $55 ? $59 : $57;
       $61 = HEAP8[$__sym>>0]|0;
       $62 = $61 & 1;
       $63 = ($62<<24>>24)==(0);
       $64 = ((($__sym)) + 4|0);
       $65 = HEAP32[$64>>2]|0;
       $66 = $61&255;
       $67 = $66 >>> 1;
       $68 = $63 ? $67 : $65;
       $69 = $52 | 1;
       $70 = (($69) + ($49))|0;
       $71 = (($70) + ($60))|0;
       $72 = (($71) + ($68))|0;
       $93 = $72;
      } else {
       $73 = HEAP8[$__sn>>0]|0;
       $74 = $73 & 1;
       $75 = ($74<<24>>24)==(0);
       $76 = ((($__sn)) + 4|0);
       $77 = HEAP32[$76>>2]|0;
       $78 = $73&255;
       $79 = $78 >>> 1;
       $80 = $75 ? $79 : $77;
       $81 = HEAP8[$__sym>>0]|0;
       $82 = $81 & 1;
       $83 = ($82<<24>>24)==(0);
       $84 = ((($__sym)) + 4|0);
       $85 = HEAP32[$84>>2]|0;
       $86 = $81&255;
       $87 = $86 >>> 1;
       $88 = $83 ? $87 : $85;
       $89 = (($49) + 2)|0;
       $90 = (($89) + ($80))|0;
       $91 = (($90) + ($88))|0;
       $93 = $91;
      }
      $92 = ($93>>>0)>(100);
      if ($92) {
       $94 = $93 << 2;
       $95 = (_malloc($94)|0);
       $96 = $95;
       $97 = ($95|0)==(0|0);
       if ($97) {
        __THREW__ = 0;
        invoke_v(435);
        $98 = __THREW__; __THREW__ = 0;
        $99 = $98&1;
        if ($99) {
         $107 = $96;
        } else {
         $123 = $96;$__mb$0 = 0;
         label = 26;
        }
       } else {
        $123 = $96;$__mb$0 = $95;
        label = 26;
       }
      } else {
       $123 = 0;$__mb$0 = $__mbuf;
       label = 26;
      }
      if ((label|0) == 26) {
       $109 = ((($__iob)) + 4|0);
       $110 = HEAP32[$109>>2]|0;
       $111 = (($__db$0) + ($__n$0<<2)|0);
       $112 = HEAP32[$__dp>>2]|0;
       $113 = HEAP32[$__ts>>2]|0;
       __THREW__ = 0;
       invoke_viiiiiiiiiiiiiii(463,($__mb$0|0),($__mi|0),($__me|0),($110|0),($__db$0|0),($111|0),($26|0),($46|0),($__pat|0),($112|0),($113|0),($__grp|0),($__sym|0),($__sn|0),($49|0));
       $114 = __THREW__; __THREW__ = 0;
       $115 = $114&1;
       if ($115) {
        $107 = $123;
       } else {
        $116 = HEAP32[$__s>>2]|0;
        HEAP32[$0>>2] = $116;
        $117 = HEAP32[$__mi>>2]|0;
        $118 = HEAP32[$__me>>2]|0;
        __THREW__ = 0;
        ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
        $119 = (invoke_iiiiiii(441,($$byval_copy|0),($__mb$0|0),($117|0),($118|0),($__iob|0),($__fl|0))|0);
        $120 = __THREW__; __THREW__ = 0;
        $121 = $120&1;
        if ($121) {
         $107 = $123;
        } else {
         $122 = ($123|0)==(0);
         if ($122) {
          $125 = $23;
         } else {
          $124 = $123;
          _free($124);
          $$pre19 = HEAP32[$__loc>>2]|0;
          $125 = $$pre19;
         }
         __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
         __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
         (__ZNSt3__114__shared_count16__release_sharedEv($125)|0);
         $126 = ($127|0)==(0);
         if (!($126)) {
          $128 = $127;
          _free($128);
         }
         $129 = ($130|0)==(0);
         if (!($129)) {
          $131 = $130;
          _free($131);
         }
         STACKTOP = sp;return ($119|0);
        }
       }
      }
      $104 = ___cxa_find_matching_catch()|0;
      $105 = tempRet0;
      $106 = ($107|0)==(0);
      if ($106) {
       $$0 = $104;$$01 = $105;$$pre17 = $23;
      } else {
       $108 = $107;
       _free($108);
       $$pre17$pre = HEAP32[$__loc>>2]|0;
       $$0 = $104;$$01 = $105;$$pre17 = $$pre17$pre;
      }
     }
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
     $$1 = $$0;$$12 = $$01;$132 = $$pre17;
    }
   }
   if ((label|0) == 22) {
    $100 = ___cxa_find_matching_catch()|0;
    $101 = tempRet0;
    $$1 = $100;$$12 = $101;$132 = $23;
   }
   (__ZNSt3__114__shared_count16__release_sharedEv($132)|0);
   $$2 = $$1;$$23 = $$12;$134 = $127;$137 = $130;
  }
 }
 if ((label|0) == 7) {
  $13 = ___cxa_find_matching_catch()|0;
  $14 = tempRet0;
  $$2 = $13;$$23 = $14;$134 = $140;$137 = $139;
 }
 $133 = ($134|0)==(0);
 if (!($133)) {
  $135 = $134;
  _free($135);
 }
 $136 = ($137|0)==(0);
 if (!($136)) {
  $138 = $137;
  _free($138);
 }
 ___resumeException($$2|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl,$__neg,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__intl = $__intl|0;
 $__neg = $__neg|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 108|0;
 $1 = sp + 96|0;
 $2 = sp + 92|0;
 $3 = sp + 80|0;
 $4 = sp + 68|0;
 $5 = sp + 56|0;
 $6 = sp + 52|0;
 $7 = sp + 40|0;
 $8 = sp + 36|0;
 $9 = sp + 24|0;
 $10 = sp + 12|0;
 $11 = sp;
 do {
  if ($__intl) {
   $12 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,10128)|0);
   $13 = HEAP32[$12>>2]|0;
   do {
    if ($__neg) {
     $14 = ((($13)) + 44|0);
     $15 = HEAP32[$14>>2]|0;
     FUNCTION_TABLE_vii[$15 & 1023]($0,$12);
     $16 = HEAP32[$0>>2]|0;
     HEAP8[$__pat>>0]=$16&255;HEAP8[$__pat+1>>0]=($16>>8)&255;HEAP8[$__pat+2>>0]=($16>>16)&255;HEAP8[$__pat+3>>0]=$16>>24;
     $17 = HEAP32[$12>>2]|0;
     $18 = ((($17)) + 32|0);
     $19 = HEAP32[$18>>2]|0;
     FUNCTION_TABLE_vii[$19 & 1023]($1,$12);
     $20 = HEAP8[$__sn>>0]|0;
     $21 = $20 & 1;
     $22 = ($21<<24>>24)==(0);
     if ($22) {
      HEAP8[$__sn>>0] = 0;
     } else {
      $23 = ((($__sn)) + 8|0);
      $24 = HEAP32[$23>>2]|0;
      HEAP32[$24>>2] = 0;
     }
     $25 = ((($__sn)) + 4|0);
     HEAP32[$25>>2] = 0;
     __THREW__ = 0;
     invoke_vii(459,($__sn|0),0);
     $26 = __THREW__; __THREW__ = 0;
     $27 = $26&1;
     if ($27) {
      $28 = ___cxa_find_matching_catch(0|0)|0;
      $29 = tempRet0;
      ___clang_call_terminate($28);
      // unreachable;
     } else {
      ;HEAP32[$__sn>>2]=HEAP32[$1>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$1+8>>2]|0;
      HEAP32[$1>>2] = 0;
      $30 = ((($1)) + 4|0);
      HEAP32[$30>>2] = 0;
      $31 = ((($1)) + 8|0);
      HEAP32[$31>>2] = 0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($1);
      break;
     }
    } else {
     $32 = ((($13)) + 40|0);
     $33 = HEAP32[$32>>2]|0;
     FUNCTION_TABLE_vii[$33 & 1023]($2,$12);
     $34 = HEAP32[$2>>2]|0;
     HEAP8[$__pat>>0]=$34&255;HEAP8[$__pat+1>>0]=($34>>8)&255;HEAP8[$__pat+2>>0]=($34>>16)&255;HEAP8[$__pat+3>>0]=$34>>24;
     $35 = HEAP32[$12>>2]|0;
     $36 = ((($35)) + 28|0);
     $37 = HEAP32[$36>>2]|0;
     FUNCTION_TABLE_vii[$37 & 1023]($3,$12);
     $38 = HEAP8[$__sn>>0]|0;
     $39 = $38 & 1;
     $40 = ($39<<24>>24)==(0);
     if ($40) {
      HEAP8[$__sn>>0] = 0;
     } else {
      $41 = ((($__sn)) + 8|0);
      $42 = HEAP32[$41>>2]|0;
      HEAP32[$42>>2] = 0;
     }
     $43 = ((($__sn)) + 4|0);
     HEAP32[$43>>2] = 0;
     __THREW__ = 0;
     invoke_vii(459,($__sn|0),0);
     $44 = __THREW__; __THREW__ = 0;
     $45 = $44&1;
     if ($45) {
      $46 = ___cxa_find_matching_catch(0|0)|0;
      $47 = tempRet0;
      ___clang_call_terminate($46);
      // unreachable;
     } else {
      ;HEAP32[$__sn>>2]=HEAP32[$3>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$3+8>>2]|0;
      HEAP32[$3>>2] = 0;
      $48 = ((($3)) + 4|0);
      HEAP32[$48>>2] = 0;
      $49 = ((($3)) + 8|0);
      HEAP32[$49>>2] = 0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($3);
      break;
     }
    }
   } while(0);
   $50 = HEAP32[$12>>2]|0;
   $51 = ((($50)) + 12|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = (FUNCTION_TABLE_ii[$52 & 1023]($12)|0);
   HEAP32[$__dp>>2] = $53;
   $54 = HEAP32[$12>>2]|0;
   $55 = ((($54)) + 16|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = (FUNCTION_TABLE_ii[$56 & 1023]($12)|0);
   HEAP32[$__ts>>2] = $57;
   $58 = HEAP32[$12>>2]|0;
   $59 = ((($58)) + 20|0);
   $60 = HEAP32[$59>>2]|0;
   FUNCTION_TABLE_vii[$60 & 1023]($4,$12);
   $61 = HEAP8[$__grp>>0]|0;
   $62 = $61 & 1;
   $63 = ($62<<24>>24)==(0);
   if ($63) {
    $67 = ((($__grp)) + 1|0);
    HEAP8[$67>>0] = 0;
    HEAP8[$__grp>>0] = 0;
   } else {
    $64 = ((($__grp)) + 8|0);
    $65 = HEAP32[$64>>2]|0;
    HEAP8[$65>>0] = 0;
    $66 = ((($__grp)) + 4|0);
    HEAP32[$66>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(453,($__grp|0),0);
   $68 = __THREW__; __THREW__ = 0;
   $69 = $68&1;
   if ($69) {
    $70 = ___cxa_find_matching_catch(0|0)|0;
    $71 = tempRet0;
    ___clang_call_terminate($70);
    // unreachable;
   }
   ;HEAP32[$__grp>>2]=HEAP32[$4>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$4+8>>2]|0;
   HEAP32[$4>>2] = 0;
   $72 = ((($4)) + 4|0);
   HEAP32[$72>>2] = 0;
   $73 = ((($4)) + 8|0);
   HEAP32[$73>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
   $74 = HEAP32[$12>>2]|0;
   $75 = ((($74)) + 24|0);
   $76 = HEAP32[$75>>2]|0;
   FUNCTION_TABLE_vii[$76 & 1023]($5,$12);
   $77 = HEAP8[$__sym>>0]|0;
   $78 = $77 & 1;
   $79 = ($78<<24>>24)==(0);
   if ($79) {
    HEAP8[$__sym>>0] = 0;
   } else {
    $80 = ((($__sym)) + 8|0);
    $81 = HEAP32[$80>>2]|0;
    HEAP32[$81>>2] = 0;
   }
   $82 = ((($__sym)) + 4|0);
   HEAP32[$82>>2] = 0;
   __THREW__ = 0;
   invoke_vii(459,($__sym|0),0);
   $83 = __THREW__; __THREW__ = 0;
   $84 = $83&1;
   if ($84) {
    $85 = ___cxa_find_matching_catch(0|0)|0;
    $86 = tempRet0;
    ___clang_call_terminate($85);
    // unreachable;
   } else {
    ;HEAP32[$__sym>>2]=HEAP32[$5>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$5+8>>2]|0;
    HEAP32[$5>>2] = 0;
    $87 = ((($5)) + 4|0);
    HEAP32[$87>>2] = 0;
    $88 = ((($5)) + 8|0);
    HEAP32[$88>>2] = 0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($5);
    $89 = HEAP32[$12>>2]|0;
    $90 = ((($89)) + 36|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = (FUNCTION_TABLE_ii[$91 & 1023]($12)|0);
    $storemerge = $92;
    break;
   }
  } else {
   $93 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,10064)|0);
   $94 = HEAP32[$93>>2]|0;
   do {
    if ($__neg) {
     $95 = ((($94)) + 44|0);
     $96 = HEAP32[$95>>2]|0;
     FUNCTION_TABLE_vii[$96 & 1023]($6,$93);
     $97 = HEAP32[$6>>2]|0;
     HEAP8[$__pat>>0]=$97&255;HEAP8[$__pat+1>>0]=($97>>8)&255;HEAP8[$__pat+2>>0]=($97>>16)&255;HEAP8[$__pat+3>>0]=$97>>24;
     $98 = HEAP32[$93>>2]|0;
     $99 = ((($98)) + 32|0);
     $100 = HEAP32[$99>>2]|0;
     FUNCTION_TABLE_vii[$100 & 1023]($7,$93);
     $101 = HEAP8[$__sn>>0]|0;
     $102 = $101 & 1;
     $103 = ($102<<24>>24)==(0);
     if ($103) {
      HEAP8[$__sn>>0] = 0;
     } else {
      $104 = ((($__sn)) + 8|0);
      $105 = HEAP32[$104>>2]|0;
      HEAP32[$105>>2] = 0;
     }
     $106 = ((($__sn)) + 4|0);
     HEAP32[$106>>2] = 0;
     __THREW__ = 0;
     invoke_vii(459,($__sn|0),0);
     $107 = __THREW__; __THREW__ = 0;
     $108 = $107&1;
     if ($108) {
      $109 = ___cxa_find_matching_catch(0|0)|0;
      $110 = tempRet0;
      ___clang_call_terminate($109);
      // unreachable;
     } else {
      ;HEAP32[$__sn>>2]=HEAP32[$7>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$7+8>>2]|0;
      HEAP32[$7>>2] = 0;
      $111 = ((($7)) + 4|0);
      HEAP32[$111>>2] = 0;
      $112 = ((($7)) + 8|0);
      HEAP32[$112>>2] = 0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
      break;
     }
    } else {
     $113 = ((($94)) + 40|0);
     $114 = HEAP32[$113>>2]|0;
     FUNCTION_TABLE_vii[$114 & 1023]($8,$93);
     $115 = HEAP32[$8>>2]|0;
     HEAP8[$__pat>>0]=$115&255;HEAP8[$__pat+1>>0]=($115>>8)&255;HEAP8[$__pat+2>>0]=($115>>16)&255;HEAP8[$__pat+3>>0]=$115>>24;
     $116 = HEAP32[$93>>2]|0;
     $117 = ((($116)) + 28|0);
     $118 = HEAP32[$117>>2]|0;
     FUNCTION_TABLE_vii[$118 & 1023]($9,$93);
     $119 = HEAP8[$__sn>>0]|0;
     $120 = $119 & 1;
     $121 = ($120<<24>>24)==(0);
     if ($121) {
      HEAP8[$__sn>>0] = 0;
     } else {
      $122 = ((($__sn)) + 8|0);
      $123 = HEAP32[$122>>2]|0;
      HEAP32[$123>>2] = 0;
     }
     $124 = ((($__sn)) + 4|0);
     HEAP32[$124>>2] = 0;
     __THREW__ = 0;
     invoke_vii(459,($__sn|0),0);
     $125 = __THREW__; __THREW__ = 0;
     $126 = $125&1;
     if ($126) {
      $127 = ___cxa_find_matching_catch(0|0)|0;
      $128 = tempRet0;
      ___clang_call_terminate($127);
      // unreachable;
     } else {
      ;HEAP32[$__sn>>2]=HEAP32[$9>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$9+8>>2]|0;
      HEAP32[$9>>2] = 0;
      $129 = ((($9)) + 4|0);
      HEAP32[$129>>2] = 0;
      $130 = ((($9)) + 8|0);
      HEAP32[$130>>2] = 0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($9);
      break;
     }
    }
   } while(0);
   $131 = HEAP32[$93>>2]|0;
   $132 = ((($131)) + 12|0);
   $133 = HEAP32[$132>>2]|0;
   $134 = (FUNCTION_TABLE_ii[$133 & 1023]($93)|0);
   HEAP32[$__dp>>2] = $134;
   $135 = HEAP32[$93>>2]|0;
   $136 = ((($135)) + 16|0);
   $137 = HEAP32[$136>>2]|0;
   $138 = (FUNCTION_TABLE_ii[$137 & 1023]($93)|0);
   HEAP32[$__ts>>2] = $138;
   $139 = HEAP32[$93>>2]|0;
   $140 = ((($139)) + 20|0);
   $141 = HEAP32[$140>>2]|0;
   FUNCTION_TABLE_vii[$141 & 1023]($10,$93);
   $142 = HEAP8[$__grp>>0]|0;
   $143 = $142 & 1;
   $144 = ($143<<24>>24)==(0);
   if ($144) {
    $148 = ((($__grp)) + 1|0);
    HEAP8[$148>>0] = 0;
    HEAP8[$__grp>>0] = 0;
   } else {
    $145 = ((($__grp)) + 8|0);
    $146 = HEAP32[$145>>2]|0;
    HEAP8[$146>>0] = 0;
    $147 = ((($__grp)) + 4|0);
    HEAP32[$147>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(453,($__grp|0),0);
   $149 = __THREW__; __THREW__ = 0;
   $150 = $149&1;
   if ($150) {
    $151 = ___cxa_find_matching_catch(0|0)|0;
    $152 = tempRet0;
    ___clang_call_terminate($151);
    // unreachable;
   }
   ;HEAP32[$__grp>>2]=HEAP32[$10>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$10+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$10+8>>2]|0;
   HEAP32[$10>>2] = 0;
   $153 = ((($10)) + 4|0);
   HEAP32[$153>>2] = 0;
   $154 = ((($10)) + 8|0);
   HEAP32[$154>>2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
   $155 = HEAP32[$93>>2]|0;
   $156 = ((($155)) + 24|0);
   $157 = HEAP32[$156>>2]|0;
   FUNCTION_TABLE_vii[$157 & 1023]($11,$93);
   $158 = HEAP8[$__sym>>0]|0;
   $159 = $158 & 1;
   $160 = ($159<<24>>24)==(0);
   if ($160) {
    HEAP8[$__sym>>0] = 0;
   } else {
    $161 = ((($__sym)) + 8|0);
    $162 = HEAP32[$161>>2]|0;
    HEAP32[$162>>2] = 0;
   }
   $163 = ((($__sym)) + 4|0);
   HEAP32[$163>>2] = 0;
   __THREW__ = 0;
   invoke_vii(459,($__sym|0),0);
   $164 = __THREW__; __THREW__ = 0;
   $165 = $164&1;
   if ($165) {
    $166 = ___cxa_find_matching_catch(0|0)|0;
    $167 = tempRet0;
    ___clang_call_terminate($166);
    // unreachable;
   } else {
    ;HEAP32[$__sym>>2]=HEAP32[$11>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$11+8>>2]|0;
    HEAP32[$11>>2] = 0;
    $168 = ((($11)) + 4|0);
    HEAP32[$168>>2] = 0;
    $169 = ((($11)) + 8|0);
    HEAP32[$169>>2] = 0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
    $170 = HEAP32[$93>>2]|0;
    $171 = ((($170)) + 36|0);
    $172 = HEAP32[$171>>2]|0;
    $173 = (FUNCTION_TABLE_ii[$172 & 1023]($93)|0);
    $storemerge = $173;
    break;
   }
  }
 } while(0);
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb,$__mi,$__me,$__flags,$__db,$__de,$__ct,$__neg,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__mb = $__mb|0;
 $__mi = $__mi|0;
 $__me = $__me|0;
 $__flags = $__flags|0;
 $__db = $__db|0;
 $__de = $__de|0;
 $__ct = $__ct|0;
 $__neg = $__neg|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$ = 0, $$$0 = 0, $$0$i$i30 = 0, $$0$i$i954 = 0, $$01$i$i52 = 0, $$057 = 0, $$2 = 0, $$lcssa = 0, $$lcssa63 = 0, $$lcssa64 = 0, $$lcssa65 = 0, $$lcssa67 = 0, $$op = 0, $$pre29 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__d$0$lcssa = 0;
 var $__d$031 = 0, $__d$1$lcssa = 0, $__d$137 = 0, $__d$2 = 0, $__d$347 = 0, $__f$0$lcssa = 0, $__f$038 = 0, $__f$143 = 0, $__gl$0$ph = 0, $__gl$050 = 0, $__gl$1 = 0, $__ig$049 = 0, $__ig$1 = 0, $__me$promoted = 0, $__me$promoted66 = 0, $__ng$048 = 0, $__ng$1 = 0, $__p$056 = 0, $exitcond = 0, $or$cond = 0;
 var $scevgep$i = 0, $scevgep$i10 = 0, $scevgep$sum = 0, $scevgep26 = 0, $scevgep27$sum = 0, $scevgep28 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$__me>>2] = $__mb;
 $0 = ((($__sn)) + 4|0);
 $1 = ((($__sn)) + 8|0);
 $2 = ((($__sym)) + 4|0);
 $3 = $__flags & 512;
 $4 = ($3|0)==(0);
 $5 = ((($__sym)) + 8|0);
 $6 = ($__fd|0)>(0);
 $7 = ((($__grp)) + 4|0);
 $8 = ((($__grp)) + 8|0);
 $9 = ((($__grp)) + 1|0);
 $10 = ($__fd|0)>(0);
 $$057 = $__db;$__p$056 = 0;
 while(1) {
  $11 = (($__pat) + ($__p$056)|0);
  $12 = HEAP8[$11>>0]|0;
  $13 = $12 << 24 >> 24;
  switch ($13|0) {
  case 0:  {
   $14 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $14;
   $$2 = $$057;
   break;
  }
  case 1:  {
   $15 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $15;
   $16 = HEAP32[$__ct>>2]|0;
   $17 = ((($16)) + 44|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = (FUNCTION_TABLE_iii[$18 & 1023]($__ct,32)|0);
   $20 = HEAP32[$__me>>2]|0;
   $21 = ((($20)) + 4|0);
   HEAP32[$__me>>2] = $21;
   HEAP32[$20>>2] = $19;
   $$2 = $$057;
   break;
  }
  case 3:  {
   $22 = HEAP8[$__sn>>0]|0;
   $23 = $22 & 1;
   $24 = ($23<<24>>24)==(0);
   $25 = HEAP32[$0>>2]|0;
   $26 = $22&255;
   $27 = $26 >>> 1;
   $28 = $24 ? $27 : $25;
   $29 = ($28|0)==(0);
   if ($29) {
    $$2 = $$057;
   } else {
    $30 = HEAP32[$1>>2]|0;
    $31 = $24 ? $0 : $30;
    $32 = HEAP32[$31>>2]|0;
    $33 = HEAP32[$__me>>2]|0;
    $34 = ((($33)) + 4|0);
    HEAP32[$__me>>2] = $34;
    HEAP32[$33>>2] = $32;
    $$2 = $$057;
   }
   break;
  }
  case 2:  {
   $35 = HEAP8[$__sym>>0]|0;
   $36 = $35 & 1;
   $37 = ($36<<24>>24)==(0);
   $38 = HEAP32[$2>>2]|0;
   $39 = $35&255;
   $40 = $39 >>> 1;
   $41 = $37 ? $40 : $38;
   $42 = ($41|0)==(0);
   $or$cond = $4 | $42;
   if ($or$cond) {
    $$2 = $$057;
   } else {
    $43 = HEAP32[$5>>2]|0;
    $44 = $37 ? $2 : $43;
    $45 = (($44) + ($41<<2)|0);
    $46 = HEAP32[$__me>>2]|0;
    $47 = ($41|0)==(0);
    if (!($47)) {
     $$0$i$i954 = $46;$49 = $44;
     while(1) {
      $48 = HEAP32[$49>>2]|0;
      HEAP32[$$0$i$i954>>2] = $48;
      $50 = ((($49)) + 4|0);
      $51 = ((($$0$i$i954)) + 4|0);
      $52 = ($50|0)==($45|0);
      if ($52) {
       break;
      } else {
       $$0$i$i954 = $51;$49 = $50;
      }
     }
    }
    $scevgep$i10 = (($46) + ($41<<2)|0);
    HEAP32[$__me>>2] = $scevgep$i10;
    $$2 = $$057;
   }
   break;
  }
  case 4:  {
   $53 = HEAP32[$__me>>2]|0;
   $54 = ((($$057)) + 4|0);
   $$$0 = $__neg ? $54 : $$057;
   $55 = ($$$0>>>0)<($__de>>>0);
   L15: do {
    if ($55) {
     $__d$031 = $$$0;
     while(1) {
      $56 = HEAP32[$__d$031>>2]|0;
      $57 = HEAP32[$__ct>>2]|0;
      $58 = ((($57)) + 12|0);
      $59 = HEAP32[$58>>2]|0;
      $60 = (FUNCTION_TABLE_iiii[$59 & 1023]($__ct,2048,$56)|0);
      if (!($60)) {
       $__d$0$lcssa = $__d$031;
       break L15;
      }
      $61 = ((($__d$031)) + 4|0);
      $62 = ($61>>>0)<($__de>>>0);
      if ($62) {
       $__d$031 = $61;
      } else {
       $__d$0$lcssa = $61;
       break;
      }
     }
    } else {
     $__d$0$lcssa = $$$0;
    }
   } while(0);
   if ($6) {
    $63 = ($__d$0$lcssa>>>0)>($$$0>>>0);
    $64 = $63 & $10;
    if ($64) {
     $__me$promoted66 = HEAP32[$__me>>2]|0;
     $68 = $__me$promoted66;$__d$137 = $__d$0$lcssa;$__f$038 = $__fd;
     while(1) {
      $65 = ((($__d$137)) + -4|0);
      $66 = HEAP32[$65>>2]|0;
      $67 = ((($68)) + 4|0);
      HEAP32[$68>>2] = $66;
      $69 = (($__f$038) + -1)|0;
      $70 = ($65>>>0)>($$$0>>>0);
      $71 = ($__f$038|0)>(1);
      $72 = $70 & $71;
      if ($72) {
       $68 = $67;$__d$137 = $65;$__f$038 = $69;
      } else {
       $$lcssa63 = $65;$$lcssa64 = $69;$$lcssa65 = $71;$$lcssa67 = $67;
       break;
      }
     }
     HEAP32[$__me>>2] = $$lcssa67;
     $$lcssa = $$lcssa65;$__d$1$lcssa = $$lcssa63;$__f$0$lcssa = $$lcssa64;
    } else {
     $$lcssa = $10;$__d$1$lcssa = $__d$0$lcssa;$__f$0$lcssa = $__fd;
    }
    if ($$lcssa) {
     $73 = HEAP32[$__ct>>2]|0;
     $74 = ((($73)) + 44|0);
     $75 = HEAP32[$74>>2]|0;
     $76 = (FUNCTION_TABLE_iii[$75 & 1023]($__ct,48)|0);
     $83 = $76;
    } else {
     $83 = 0;
    }
    $__me$promoted = HEAP32[$__me>>2]|0;
    $77 = ($__f$0$lcssa|0)<(0);
    $$op = $__f$0$lcssa ^ -1;
    $78 = $77 ? $$op : -1;
    $79 = (($__f$0$lcssa) + ($78))|0;
    $80 = ($__f$0$lcssa|0)>(0);
    if ($80) {
     $82 = $__me$promoted;$__f$143 = $__f$0$lcssa;
     while(1) {
      $81 = ((($82)) + 4|0);
      HEAP32[$82>>2] = $83;
      $84 = (($__f$143) + -1)|0;
      $85 = ($__f$143|0)>(1);
      if ($85) {
       $82 = $81;$__f$143 = $84;
      } else {
       break;
      }
     }
    }
    $scevgep$sum = (($79) + 2)|0;
    $scevgep26 = (($__me$promoted) + ($scevgep$sum<<2)|0);
    $scevgep27$sum = (($79) + 1)|0;
    $scevgep28 = (($__me$promoted) + ($scevgep27$sum<<2)|0);
    HEAP32[$__me>>2] = $scevgep26;
    HEAP32[$scevgep28>>2] = $__dp;
    $__d$2 = $__d$1$lcssa;
   } else {
    $__d$2 = $__d$0$lcssa;
   }
   $86 = ($__d$2|0)==($$$0|0);
   if ($86) {
    $87 = HEAP32[$__ct>>2]|0;
    $88 = ((($87)) + 44|0);
    $89 = HEAP32[$88>>2]|0;
    $90 = (FUNCTION_TABLE_iii[$89 & 1023]($__ct,48)|0);
    $91 = HEAP32[$__me>>2]|0;
    $92 = ((($91)) + 4|0);
    HEAP32[$__me>>2] = $92;
    HEAP32[$91>>2] = $90;
    $130 = $92;
   } else {
    $93 = HEAP8[$__grp>>0]|0;
    $94 = $93 & 1;
    $95 = ($94<<24>>24)==(0);
    $96 = HEAP32[$7>>2]|0;
    $97 = $93&255;
    $98 = $97 >>> 1;
    $99 = $95 ? $98 : $96;
    $100 = ($99|0)==(0);
    if ($100) {
     $__gl$0$ph = -1;
    } else {
     $101 = HEAP32[$8>>2]|0;
     $102 = $95 ? $9 : $101;
     $103 = HEAP8[$102>>0]|0;
     $104 = $103 << 24 >> 24;
     $__gl$0$ph = $104;
    }
    $105 = ($__d$2|0)==($$$0|0);
    if (!($105)) {
     $__d$347 = $__d$2;$__gl$050 = $__gl$0$ph;$__ig$049 = 0;$__ng$048 = 0;
     while(1) {
      $106 = ($__ng$048|0)==($__gl$050|0);
      $107 = HEAP32[$__me>>2]|0;
      if ($106) {
       $108 = ((($107)) + 4|0);
       HEAP32[$__me>>2] = $108;
       HEAP32[$107>>2] = $__ts;
       $109 = (($__ig$049) + 1)|0;
       $110 = HEAP8[$__grp>>0]|0;
       $111 = $110 & 1;
       $112 = ($111<<24>>24)==(0);
       $113 = $110&255;
       $114 = $113 >>> 1;
       $115 = $112 ? $114 : $96;
       $116 = ($109>>>0)<($115>>>0);
       if ($116) {
        $117 = HEAP32[$8>>2]|0;
        $118 = $112 ? $9 : $117;
        $119 = (($118) + ($109)|0);
        $120 = HEAP8[$119>>0]|0;
        $121 = ($120<<24>>24)==(127);
        $122 = $120 << 24 >> 24;
        $$ = $121 ? -1 : $122;
        $126 = $108;$__gl$1 = $$;$__ig$1 = $109;$__ng$1 = 0;
       } else {
        $126 = $108;$__gl$1 = $__ng$048;$__ig$1 = $109;$__ng$1 = 0;
       }
      } else {
       $126 = $107;$__gl$1 = $__gl$050;$__ig$1 = $__ig$049;$__ng$1 = $__ng$048;
      }
      $123 = ((($__d$347)) + -4|0);
      $124 = HEAP32[$123>>2]|0;
      $125 = ((($126)) + 4|0);
      HEAP32[$__me>>2] = $125;
      HEAP32[$126>>2] = $124;
      $127 = (($__ng$1) + 1)|0;
      $128 = ($123|0)==($$$0|0);
      if ($128) {
       break;
      } else {
       $__d$347 = $123;$__gl$050 = $__gl$1;$__ig$049 = $__ig$1;$__ng$048 = $127;
      }
     }
    }
    $$pre29 = HEAP32[$__me>>2]|0;
    $130 = $$pre29;
   }
   $129 = ($53|0)==($130|0);
   if ($129) {
    $$2 = $$$0;
   } else {
    $131 = ((($130)) + -4|0);
    $132 = ($53>>>0)<($131>>>0);
    if ($132) {
     $$01$i$i52 = $53;$135 = $131;
     while(1) {
      $133 = HEAP32[$$01$i$i52>>2]|0;
      $134 = HEAP32[$135>>2]|0;
      HEAP32[$$01$i$i52>>2] = $134;
      HEAP32[$135>>2] = $133;
      $136 = ((($$01$i$i52)) + 4|0);
      $137 = ((($135)) + -4|0);
      $138 = ($136>>>0)<($137>>>0);
      if ($138) {
       $$01$i$i52 = $136;$135 = $137;
      } else {
       $$2 = $$$0;
       break;
      }
     }
    } else {
     $$2 = $$$0;
    }
   }
   break;
  }
  default: {
   $$2 = $$057;
  }
  }
  $139 = (($__p$056) + 1)|0;
  $exitcond = ($139|0)==(4);
  if ($exitcond) {
   break;
  } else {
   $$057 = $$2;$__p$056 = $139;
  }
 }
 $140 = HEAP8[$__sn>>0]|0;
 $141 = $140 & 1;
 $142 = ($141<<24>>24)==(0);
 $143 = HEAP32[$0>>2]|0;
 $144 = $140&255;
 $145 = $144 >>> 1;
 $146 = $142 ? $145 : $143;
 $147 = ($146>>>0)>(1);
 if ($147) {
  $148 = HEAP32[$1>>2]|0;
  $149 = $142 ? $0 : $148;
  $150 = ((($149)) + 4|0);
  $151 = (($149) + ($146<<2)|0);
  $152 = HEAP32[$__me>>2]|0;
  $153 = $150;
  $154 = $151;
  $155 = (($154) - ($153))|0;
  $156 = ($146|0)==(1);
  if (!($156)) {
   $$0$i$i30 = $152;$158 = $150;
   while(1) {
    $157 = HEAP32[$158>>2]|0;
    HEAP32[$$0$i$i30>>2] = $157;
    $159 = ((($158)) + 4|0);
    $160 = ((($$0$i$i30)) + 4|0);
    $161 = ($159|0)==($151|0);
    if ($161) {
     break;
    } else {
     $$0$i$i30 = $160;$158 = $159;
    }
   }
  }
  $162 = $155 >>> 2;
  $scevgep$i = (($152) + ($162<<2)|0);
  HEAP32[$__me>>2] = $scevgep$i;
 }
 $163 = $__flags & 176;
 switch ($163|0) {
 case 32:  {
  $164 = HEAP32[$__me>>2]|0;
  HEAP32[$__mi>>2] = $164;
  break;
 }
 case 16:  {
  break;
 }
 default: {
  HEAP32[$__mi>>2] = $__mb;
 }
 }
 return;
}
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE($this,$__s,$__intl,$__iob,$__fl,$__digits) {
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__digits = $__digits|0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$byval_copy = 0, $$pre = 0, $$pre17 = 0, $$pre18 = 0, $$pre18$pre = 0, $$pre20 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0;
 var $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 480|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 468|0;
 $__loc = sp + 464|0;
 $__pat = sp + 472|0;
 $__dp = sp + 460|0;
 $__ts = sp + 456|0;
 $__grp = sp + 444|0;
 $__sym = sp + 432|0;
 $__sn = sp + 420|0;
 $__fd = sp + 416|0;
 $__mbuf = sp + 16|0;
 $__mi = sp + 8|0;
 $__me = sp + 4|0;
 $0 = sp;
 $1 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $1;
 __THREW__ = 0;
 $2 = (invoke_iii(355,($__loc|0),(10384|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if ($4) {
   label = 13;
  } else {
   $5 = HEAP8[$__digits>>0]|0;
   $6 = $5 & 1;
   $7 = ($6<<24>>24)==(0);
   $8 = ((($__digits)) + 4|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = $5&255;
   $11 = $10 >>> 1;
   $12 = $7 ? $11 : $9;
   $13 = ($12|0)==(0);
   if ($13) {
    $31 = 0;
   } else {
    $14 = ((($__digits)) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = $7 ? $8 : $15;
    $17 = HEAP32[$16>>2]|0;
    $18 = HEAP32[$2>>2]|0;
    $19 = ((($18)) + 44|0);
    $20 = HEAP32[$19>>2]|0;
    __THREW__ = 0;
    $21 = (invoke_iii($20|0,($2|0),45)|0);
    $22 = __THREW__; __THREW__ = 0;
    $23 = $22&1;
    if ($23) {
     label = 13;
     break;
    }
    $24 = ($17|0)==($21|0);
    $31 = $24;
   }
   HEAP32[$__grp>>2] = 0;
   $25 = ((($__grp)) + 4|0);
   HEAP32[$25>>2] = 0;
   $26 = ((($__grp)) + 8|0);
   HEAP32[$26>>2] = 0;
   HEAP32[$__sym>>2] = 0;
   $27 = ((($__sym)) + 4|0);
   HEAP32[$27>>2] = 0;
   $28 = ((($__sym)) + 8|0);
   HEAP32[$28>>2] = 0;
   HEAP32[$__sn>>2] = 0;
   $29 = ((($__sn)) + 4|0);
   HEAP32[$29>>2] = 0;
   $30 = ((($__sn)) + 8|0);
   HEAP32[$30>>2] = 0;
   __THREW__ = 0;
   invoke_viiiiiiiiii(462,($__intl|0),($31|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__sn|0),($__fd|0));
   $32 = __THREW__; __THREW__ = 0;
   $33 = $32&1;
   if ($33) {
    $94 = ___cxa_find_matching_catch()|0;
    $95 = tempRet0;
    $$0 = $94;$$01 = $95;$$pre18 = $1;
   } else {
    $34 = HEAP8[$__digits>>0]|0;
    $35 = $34 & 1;
    $36 = ($35<<24>>24)==(0);
    $37 = HEAP32[$8>>2]|0;
    $38 = $34&255;
    $39 = $38 >>> 1;
    $40 = $36 ? $39 : $37;
    $41 = HEAP32[$__fd>>2]|0;
    $42 = ($40|0)>($41|0);
    if ($42) {
     $43 = (($40) - ($41))|0;
     $44 = $43 << 1;
     $45 = HEAP8[$__sn>>0]|0;
     $46 = $45 & 1;
     $47 = ($46<<24>>24)==(0);
     $48 = ((($__sn)) + 4|0);
     $49 = HEAP32[$48>>2]|0;
     $50 = $45&255;
     $51 = $50 >>> 1;
     $52 = $47 ? $51 : $49;
     $53 = HEAP8[$__sym>>0]|0;
     $54 = $53 & 1;
     $55 = ($54<<24>>24)==(0);
     $56 = ((($__sym)) + 4|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = $53&255;
     $59 = $58 >>> 1;
     $60 = $55 ? $59 : $57;
     $61 = $44 | 1;
     $62 = (($61) + ($41))|0;
     $63 = (($62) + ($52))|0;
     $64 = (($63) + ($60))|0;
     $85 = $64;
    } else {
     $65 = HEAP8[$__sn>>0]|0;
     $66 = $65 & 1;
     $67 = ($66<<24>>24)==(0);
     $68 = ((($__sn)) + 4|0);
     $69 = HEAP32[$68>>2]|0;
     $70 = $65&255;
     $71 = $70 >>> 1;
     $72 = $67 ? $71 : $69;
     $73 = HEAP8[$__sym>>0]|0;
     $74 = $73 & 1;
     $75 = ($74<<24>>24)==(0);
     $76 = ((($__sym)) + 4|0);
     $77 = HEAP32[$76>>2]|0;
     $78 = $73&255;
     $79 = $78 >>> 1;
     $80 = $75 ? $79 : $77;
     $81 = (($41) + 2)|0;
     $82 = (($81) + ($72))|0;
     $83 = (($82) + ($80))|0;
     $85 = $83;
    }
    $84 = ($85>>>0)>(100);
    if ($84) {
     $86 = $85 << 2;
     $87 = (_malloc($86)|0);
     $88 = $87;
     $89 = ($87|0)==(0|0);
     if ($89) {
      __THREW__ = 0;
      invoke_v(435);
      $90 = __THREW__; __THREW__ = 0;
      $91 = $90&1;
      if ($91) {
       $99 = $88;
      } else {
       $$pre = HEAP8[$__digits>>0]|0;
       $$pre17 = HEAP32[$8>>2]|0;
       $104 = $$pre;$112 = $$pre17;$125 = $88;$__mb$0 = 0;
       label = 17;
      }
     } else {
      $104 = $34;$112 = $37;$125 = $88;$__mb$0 = $87;
      label = 17;
     }
    } else {
     $104 = $34;$112 = $37;$125 = 0;$__mb$0 = $__mbuf;
     label = 17;
    }
    if ((label|0) == 17) {
     $101 = ((($__iob)) + 4|0);
     $102 = HEAP32[$101>>2]|0;
     $103 = $104 & 1;
     $105 = ($103<<24>>24)==(0);
     $106 = ((($__digits)) + 8|0);
     $107 = HEAP32[$106>>2]|0;
     $108 = $105 ? $8 : $107;
     $109 = $104&255;
     $110 = $109 >>> 1;
     $111 = $105 ? $110 : $112;
     $113 = (($108) + ($111<<2)|0);
     $114 = HEAP32[$__dp>>2]|0;
     $115 = HEAP32[$__ts>>2]|0;
     __THREW__ = 0;
     invoke_viiiiiiiiiiiiiii(463,($__mb$0|0),($__mi|0),($__me|0),($102|0),($108|0),($113|0),($2|0),($31|0),($__pat|0),($114|0),($115|0),($__grp|0),($__sym|0),($__sn|0),($41|0));
     $116 = __THREW__; __THREW__ = 0;
     $117 = $116&1;
     if ($117) {
      $99 = $125;
     } else {
      $118 = HEAP32[$__s>>2]|0;
      HEAP32[$0>>2] = $118;
      $119 = HEAP32[$__mi>>2]|0;
      $120 = HEAP32[$__me>>2]|0;
      __THREW__ = 0;
      ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
      $121 = (invoke_iiiiiii(441,($$byval_copy|0),($__mb$0|0),($119|0),($120|0),($__iob|0),($__fl|0))|0);
      $122 = __THREW__; __THREW__ = 0;
      $123 = $122&1;
      if ($123) {
       $99 = $125;
      } else {
       $124 = ($125|0)==(0);
       if ($124) {
        $127 = $1;
       } else {
        $126 = $125;
        _free($126);
        $$pre20 = HEAP32[$__loc>>2]|0;
        $127 = $$pre20;
       }
       __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
       __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
       (__ZNSt3__114__shared_count16__release_sharedEv($127)|0);
       STACKTOP = sp;return ($121|0);
      }
     }
    }
    $96 = ___cxa_find_matching_catch()|0;
    $97 = tempRet0;
    $98 = ($99|0)==(0);
    if ($98) {
     $$0 = $96;$$01 = $97;$$pre18 = $1;
    } else {
     $100 = $99;
     _free($100);
     $$pre18$pre = HEAP32[$__loc>>2]|0;
     $$0 = $96;$$01 = $97;$$pre18 = $$pre18$pre;
    }
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
   $$1 = $$0;$$12 = $$01;$128 = $$pre18;
  }
 } while(0);
 if ((label|0) == 13) {
  $92 = ___cxa_find_matching_catch()|0;
  $93 = tempRet0;
  $$1 = $92;$$12 = $93;$128 = $1;
 }
 (__ZNSt3__114__shared_count16__release_sharedEv($128)|0);
 ___resumeException($$1|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__18messagesIcED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18messagesIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this,$__nm,$0) {
 $this = $this|0;
 $__nm = $__nm|0;
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$__nm>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 $4 = ((($__nm)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($__nm)) + 1|0);
 $7 = $3 ? $6 : $5;
 $8 = (_catopen($7,1)|0);
 $9 = $8;
 $not$ = ($8|0)!=((-1)|0);
 $10 = $not$&1;
 $$ = $9 >>> $10;
 return ($$|0);
}
function __ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result,$this,$__c,$__set,$__msgid,$__dflt) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__c = $__c|0;
 $__set = $__set|0;
 $__msgid = $__msgid|0;
 $__dflt = $__dflt|0;
 var $$0$i15 = 0, $$0$i817 = 0, $$02 = 0, $$03 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__ndflt = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__ndflt = sp;
 HEAP32[$__ndflt>>2] = 0;
 $0 = ((($__ndflt)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__ndflt)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__dflt>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 $5 = ((($__dflt)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($__dflt)) + 1|0);
 $8 = $4 ? $7 : $6;
 $9 = ((($__dflt)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $2&255;
 $12 = $11 >>> 1;
 $13 = $4 ? $12 : $10;
 $14 = (($8) + ($13)|0);
 $15 = ($13|0)>(0);
 L1: do {
  if ($15) {
   $$0$i817 = $8;
   while(1) {
    $16 = HEAP8[$$0$i817>>0]|0;
    __THREW__ = 0;
    invoke_vii(449,($__ndflt|0),($16|0));
    $17 = __THREW__; __THREW__ = 0;
    $18 = $17&1;
    if ($18) {
     break;
    }
    $19 = ((($$0$i817)) + 1|0);
    $20 = ($19>>>0)<($14>>>0);
    if ($20) {
     $$0$i817 = $19;
    } else {
     label = 4;
     break L1;
    }
   }
   $35 = ___cxa_find_matching_catch()|0;
   $36 = tempRet0;
   $lpad$phi$index = $35;$lpad$phi$index2 = $36;
   label = 7;
  } else {
   label = 4;
  }
 } while(0);
 L6: do {
  if ((label|0) == 4) {
   $21 = ($__c|0)==(-1);
   $22 = $__c << 1;
   $23 = $22;
   $24 = $21 ? (-1) : $23;
   $25 = HEAP8[$__ndflt>>0]|0;
   $26 = $25 & 1;
   $27 = ($26<<24>>24)==(0);
   $28 = ((($__ndflt)) + 8|0);
   $29 = HEAP32[$28>>2]|0;
   $30 = ((($__ndflt)) + 1|0);
   $31 = $27 ? $30 : $29;
   __THREW__ = 0;
   $32 = (invoke_iiiii(464,($24|0),($__set|0),($__msgid|0),($31|0))|0);
   $33 = __THREW__; __THREW__ = 0;
   $34 = $33&1;
   if ($34) {
    $37 = ___cxa_find_matching_catch()|0;
    $38 = tempRet0;
    $lpad$phi$index = $37;$lpad$phi$index2 = $38;
    label = 7;
    break;
   }
   HEAP32[$agg$result>>2] = 0;
   $39 = ((($agg$result)) + 4|0);
   HEAP32[$39>>2] = 0;
   $40 = ((($agg$result)) + 8|0);
   HEAP32[$40>>2] = 0;
   $41 = (_strlen($32)|0);
   $42 = (($32) + ($41)|0);
   $43 = ($41|0)>(0);
   L11: do {
    if ($43) {
     $$0$i15 = $32;
     while(1) {
      $44 = HEAP8[$$0$i15>>0]|0;
      __THREW__ = 0;
      invoke_vii(449,($agg$result|0),($44|0));
      $45 = __THREW__; __THREW__ = 0;
      $46 = $45&1;
      if ($46) {
       break;
      }
      $47 = ((($$0$i15)) + 1|0);
      $48 = ($47>>>0)<($42>>>0);
      if ($48) {
       $$0$i15 = $47;
      } else {
       break L11;
      }
     }
     $49 = ___cxa_find_matching_catch()|0;
     $50 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
     $$02 = $49;$$03 = $50;
     break L6;
    }
   } while(0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
   STACKTOP = sp;return;
  }
 } while(0);
 if ((label|0) == 7) {
  $$02 = $lpad$phi$index;$$03 = $lpad$phi$index2;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
 ___resumeException($$02|0);
 // unreachable;
}
function __ZNKSt3__18messagesIcE8do_closeEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18messagesIwED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18messagesIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this,$__nm,$0) {
 $this = $this|0;
 $__nm = $__nm|0;
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$__nm>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 $4 = ((($__nm)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($__nm)) + 1|0);
 $7 = $3 ? $6 : $5;
 $8 = (_catopen($7,1)|0);
 $9 = $8;
 $not$ = ($8|0)!=((-1)|0);
 $10 = $not$&1;
 $$ = $9 >>> $10;
 return ($$|0);
}
function __ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE($agg$result,$this,$__c,$__set,$__msgid,$__dflt) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__c = $__c|0;
 $__set = $__set|0;
 $__msgid = $__msgid|0;
 $__dflt = $__dflt|0;
 var $$0$i1440 = 0, $$0$i35 = 0, $$1 = 0, $$14 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__bn$i = 0, $__bn$i12 = 0, $__buf$i = 0, $__buf$i11 = 0, $__mb$i = 0, $__mb$i10 = 0, $__ndflt = 0, $__nn$i = 0, $__p$0$i1638 = 0, $__p$0$i34 = 0, $__wn$i = 0, $lpad$phi$index = 0;
 var $lpad$phi$index10 = 0, $lpad$phi30$index = 0, $lpad$phi30$index3 = 0, $or$cond$i = 0, $or$cond$i15 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__mb$i10 = sp + 184|0;
 $__buf$i11 = sp + 192|0;
 $__bn$i12 = sp + 180|0;
 $__wn$i = sp + 176|0;
 $__mb$i = sp + 168|0;
 $__buf$i = sp + 40|0;
 $__bn$i = sp + 32|0;
 $__nn$i = sp + 28|0;
 $__ndflt = sp + 16|0;
 $0 = sp + 8|0;
 $1 = sp;
 HEAP32[$__ndflt>>2] = 0;
 $2 = ((($__ndflt)) + 4|0);
 HEAP32[$2>>2] = 0;
 $3 = ((($__ndflt)) + 8|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($0)) + 4|0);
 HEAP32[$4>>2] = 0;
 HEAP32[$0>>2] = (10868);
 $5 = HEAP8[$__dflt>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 $8 = ((($__dflt)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($__dflt)) + 4|0);
 $11 = $7 ? $10 : $9;
 $12 = HEAP32[$10>>2]|0;
 $13 = $5&255;
 $14 = $13 >>> 1;
 $15 = $7 ? $14 : $12;
 $16 = (($11) + ($15<<2)|0);
 $17 = ((($__buf$i11)) + 32|0);
 $18 = ($15|0)>(0);
 L1: do {
  if ($18) {
   $$0$i1440 = $11;
   L2: while(1) {
    HEAP32[$__wn$i>>2] = $$0$i1440;
    $19 = HEAP32[$0>>2]|0;
    $20 = ((($19)) + 12|0);
    $21 = HEAP32[$20>>2]|0;
    __THREW__ = 0;
    $22 = (invoke_iiiiiiiii($21|0,($0|0),($__mb$i10|0),($$0$i1440|0),($16|0),($__wn$i|0),($__buf$i11|0),($17|0),($__bn$i12|0))|0);
    $23 = __THREW__; __THREW__ = 0;
    $24 = $23&1;
    if ($24) {
     label = 12;
     break;
    }
    $25 = ($22|0)==(2);
    $26 = HEAP32[$__wn$i>>2]|0;
    $27 = ($26|0)==($$0$i1440|0);
    $or$cond$i15 = $25 | $27;
    if ($or$cond$i15) {
     label = 5;
     break;
    }
    $28 = HEAP32[$__bn$i12>>2]|0;
    $29 = ($__buf$i11>>>0)<($28>>>0);
    if ($29) {
     $__p$0$i1638 = $__buf$i11;
     while(1) {
      $33 = HEAP8[$__p$0$i1638>>0]|0;
      __THREW__ = 0;
      invoke_vii(449,($__ndflt|0),($33|0));
      $34 = __THREW__; __THREW__ = 0;
      $35 = $34&1;
      if ($35) {
       label = 11;
       break L2;
      }
      $36 = ((($__p$0$i1638)) + 1|0);
      $37 = HEAP32[$__bn$i12>>2]|0;
      $38 = ($36>>>0)<($37>>>0);
      if ($38) {
       $__p$0$i1638 = $36;
      } else {
       break;
      }
     }
    }
    $39 = HEAP32[$__wn$i>>2]|0;
    $40 = ($39>>>0)<($16>>>0);
    $41 = ($22|0)!=(2);
    $42 = $41 & $40;
    if ($42) {
     $$0$i1440 = $39;
    } else {
     label = 9;
     break L1;
    }
   }
   if ((label|0) == 5) {
    __THREW__ = 0;
    invoke_vi(447,(26076|0));
    $30 = __THREW__; __THREW__ = 0;
    $31 = ___cxa_find_matching_catch()|0;
    $32 = tempRet0;
    $lpad$phi30$index = $31;$lpad$phi30$index3 = $32;
   }
   else if ((label|0) == 11) {
    $59 = ___cxa_find_matching_catch()|0;
    $60 = tempRet0;
    $lpad$phi30$index = $59;$lpad$phi30$index3 = $60;
   }
   else if ((label|0) == 12) {
    $61 = ___cxa_find_matching_catch()|0;
    $62 = tempRet0;
    $lpad$phi30$index = $61;$lpad$phi30$index3 = $62;
   }
   $$1 = $lpad$phi30$index;$$14 = $lpad$phi30$index3;
  } else {
   label = 9;
  }
 } while(0);
 L16: do {
  if ((label|0) == 9) {
   $43 = ($__c|0)==(-1);
   $44 = $__c << 1;
   $45 = $44;
   $46 = $43 ? (-1) : $45;
   $47 = HEAP8[$__ndflt>>0]|0;
   $48 = $47 & 1;
   $49 = ($48<<24>>24)==(0);
   $50 = ((($__ndflt)) + 8|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = ((($__ndflt)) + 1|0);
   $53 = $49 ? $52 : $51;
   __THREW__ = 0;
   $54 = (invoke_iiiii(464,($46|0),($__set|0),($__msgid|0),($53|0))|0);
   $55 = __THREW__; __THREW__ = 0;
   $56 = $55&1;
   if ($56) {
    $57 = ___cxa_find_matching_catch()|0;
    $58 = tempRet0;
    $$1 = $57;$$14 = $58;
    break;
   }
   HEAP32[$agg$result>>2] = 0;
   $63 = ((($agg$result)) + 4|0);
   HEAP32[$63>>2] = 0;
   $64 = ((($agg$result)) + 8|0);
   HEAP32[$64>>2] = 0;
   $65 = ((($1)) + 4|0);
   HEAP32[$65>>2] = 0;
   HEAP32[$1>>2] = (10916);
   $66 = (_strlen($54)|0);
   $67 = (($54) + ($66)|0);
   $68 = $67;
   $69 = ((($__buf$i)) + 128|0);
   $70 = ($66|0)>(0);
   L21: do {
    if ($70) {
     $$0$i35 = $54;
     L22: while(1) {
      HEAP32[$__nn$i>>2] = $$0$i35;
      $71 = HEAP32[$1>>2]|0;
      $72 = ((($71)) + 16|0);
      $73 = HEAP32[$72>>2]|0;
      $74 = $$0$i35;
      $75 = (($68) - ($74))|0;
      $76 = ($75|0)>(32);
      $77 = ((($$0$i35)) + 32|0);
      $78 = $76 ? $77 : $67;
      __THREW__ = 0;
      $79 = (invoke_iiiiiiiii($73|0,($1|0),($__mb$i|0),($$0$i35|0),($78|0),($__nn$i|0),($__buf$i|0),($69|0),($__bn$i|0))|0);
      $80 = __THREW__; __THREW__ = 0;
      $81 = $80&1;
      if ($81) {
       label = 24;
       break;
      }
      $82 = ($79|0)==(2);
      $83 = HEAP32[$__nn$i>>2]|0;
      $84 = ($83|0)==($$0$i35|0);
      $or$cond$i = $82 | $84;
      if ($or$cond$i) {
       label = 18;
       break;
      }
      $85 = HEAP32[$__bn$i>>2]|0;
      $86 = ($__buf$i>>>0)<($85>>>0);
      if ($86) {
       $__p$0$i34 = $__buf$i;
       while(1) {
        $90 = HEAP32[$__p$0$i34>>2]|0;
        __THREW__ = 0;
        invoke_vii(456,($agg$result|0),($90|0));
        $91 = __THREW__; __THREW__ = 0;
        $92 = $91&1;
        if ($92) {
         label = 23;
         break L22;
        }
        $93 = ((($__p$0$i34)) + 4|0);
        $94 = HEAP32[$__bn$i>>2]|0;
        $95 = ($93>>>0)<($94>>>0);
        if ($95) {
         $__p$0$i34 = $93;
        } else {
         break;
        }
       }
      }
      $96 = HEAP32[$__nn$i>>2]|0;
      $97 = ($96>>>0)<($67>>>0);
      $98 = ($79|0)!=(2);
      $99 = $98 & $97;
      if ($99) {
       $$0$i35 = $96;
      } else {
       break L21;
      }
     }
     if ((label|0) == 18) {
      __THREW__ = 0;
      invoke_vi(447,(26076|0));
      $87 = __THREW__; __THREW__ = 0;
      $88 = ___cxa_find_matching_catch()|0;
      $89 = tempRet0;
      $lpad$phi$index = $88;$lpad$phi$index10 = $89;
     }
     else if ((label|0) == 23) {
      $100 = ___cxa_find_matching_catch()|0;
      $101 = tempRet0;
      $lpad$phi$index = $100;$lpad$phi$index10 = $101;
     }
     else if ((label|0) == 24) {
      $102 = ___cxa_find_matching_catch()|0;
      $103 = tempRet0;
      $lpad$phi$index = $102;$lpad$phi$index10 = $103;
     }
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($agg$result);
     $$1 = $lpad$phi$index;$$14 = $lpad$phi$index10;
     break L16;
    }
   } while(0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
   STACKTOP = sp;return;
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
 ___resumeException($$1|0);
 // unreachable;
}
function __ZNKSt3__18messagesIwE8do_closeEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__16locale5__impC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, $eh$lpad$body$index3Z2D = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = ((($this)) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = (10368);
 $2 = ((($this)) + 8|0);
 __THREW__ = 0;
 invoke_vii(465,($2|0),28);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $83 = ___cxa_find_matching_catch()|0;
  $84 = tempRet0;
  $$1 = $84;$$12 = $83;
 } else {
  $5 = ((($this)) + 144|0);
  __THREW__ = 0;
  invoke_viii(466,($5|0),(26006|0),1);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  if ($7) {
   $85 = ___cxa_find_matching_catch()|0;
   $86 = tempRet0;
   $$0 = $86;$$01 = $85;
  } else {
   $8 = HEAP32[$2>>2]|0;
   $9 = ((($this)) + 12|0);
   $$pre$i$i$i = HEAP32[$9>>2]|0;
   $10 = ($$pre$i$i$i|0)==($8|0);
   if (!($10)) {
    $12 = $$pre$i$i$i;
    while(1) {
     $11 = ((($12)) + -4|0);
     $13 = ($11|0)==($8|0);
     if ($13) {
      $$lcssa = $11;
      break;
     } else {
      $12 = $11;
     }
    }
    HEAP32[$9>>2] = $$lcssa;
   }
   HEAP32[(1764)>>2] = 0;
   HEAP32[1760>>2] = (9296);
   __THREW__ = 0;
   invoke_vii(467,($this|0),(1760|0));
   $14 = __THREW__; __THREW__ = 0;
   $15 = $14&1;
   do {
    if ($15) {
     label = 42;
    } else {
     HEAP32[(1772)>>2] = 0;
     HEAP32[1768>>2] = (9336);
     __THREW__ = 0;
     invoke_vii(468,($this|0),(1768|0));
     $16 = __THREW__; __THREW__ = 0;
     $17 = $16&1;
     if ($17) {
      label = 42;
     } else {
      HEAP32[(1780)>>2] = 0;
      HEAP32[1776>>2] = (10408);
      HEAP32[(1784)>>2] = 0;
      HEAP8[(1788)>>0] = 0;
      $18 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
      HEAP32[(1784)>>2] = $18;
      __THREW__ = 0;
      invoke_vii(469,($this|0),(1776|0));
      $19 = __THREW__; __THREW__ = 0;
      $20 = $19&1;
      if ($20) {
       label = 42;
      } else {
       HEAP32[(1796)>>2] = 0;
       HEAP32[1792>>2] = (10656);
       __THREW__ = 0;
       invoke_vii(470,($this|0),(1792|0));
       $21 = __THREW__; __THREW__ = 0;
       $22 = $21&1;
       if ($22) {
        label = 42;
       } else {
        HEAP32[(1804)>>2] = 0;
        HEAP32[1800>>2] = (10724);
        __THREW__ = 0;
        invoke_vii(471,($this|0),(1800|0));
        $23 = __THREW__; __THREW__ = 0;
        $24 = $23&1;
        if ($24) {
         label = 42;
        } else {
         __THREW__ = 0;
         invoke_vii(472,(1808|0),1);
         $25 = __THREW__; __THREW__ = 0;
         $26 = $25&1;
         if ($26) {
          label = 42;
         } else {
          __THREW__ = 0;
          invoke_vii(473,($this|0),(1808|0));
          $27 = __THREW__; __THREW__ = 0;
          $28 = $27&1;
          if ($28) {
           label = 42;
          } else {
           HEAP32[(1828)>>2] = 0;
           HEAP32[1824>>2] = (10772);
           __THREW__ = 0;
           invoke_vii(474,($this|0),(1824|0));
           $29 = __THREW__; __THREW__ = 0;
           $30 = $29&1;
           if ($30) {
            label = 42;
           } else {
            HEAP32[(1836)>>2] = 0;
            HEAP32[1832>>2] = (10820);
            __THREW__ = 0;
            invoke_vii(475,($this|0),(1832|0));
            $31 = __THREW__; __THREW__ = 0;
            $32 = $31&1;
            if ($32) {
             label = 42;
            } else {
             __ZNSt3__18numpunctIcEC2Ej(1840,1);
             __THREW__ = 0;
             invoke_vii(476,($this|0),(1840|0));
             $33 = __THREW__; __THREW__ = 0;
             $34 = $33&1;
             if ($34) {
              label = 42;
             } else {
              __ZNSt3__18numpunctIwEC2Ej(1864,1);
              __THREW__ = 0;
              invoke_vii(477,($this|0),(1864|0));
              $35 = __THREW__; __THREW__ = 0;
              $36 = $35&1;
              if ($36) {
               label = 42;
              } else {
               HEAP32[(1900)>>2] = 0;
               HEAP32[1896>>2] = (9376);
               __THREW__ = 0;
               invoke_vii(478,($this|0),(1896|0));
               $37 = __THREW__; __THREW__ = 0;
               $38 = $37&1;
               if ($38) {
                label = 42;
               } else {
                HEAP32[(1908)>>2] = 0;
                HEAP32[1904>>2] = (9448);
                __THREW__ = 0;
                invoke_vii(479,($this|0),(1904|0));
                $39 = __THREW__; __THREW__ = 0;
                $40 = $39&1;
                if ($40) {
                 label = 42;
                } else {
                 HEAP32[(1916)>>2] = 0;
                 HEAP32[1912>>2] = (9520);
                 __THREW__ = 0;
                 invoke_vii(480,($this|0),(1912|0));
                 $41 = __THREW__; __THREW__ = 0;
                 $42 = $41&1;
                 if ($42) {
                  label = 42;
                 } else {
                  HEAP32[(1924)>>2] = 0;
                  HEAP32[1920>>2] = (9580);
                  __THREW__ = 0;
                  invoke_vii(481,($this|0),(1920|0));
                  $43 = __THREW__; __THREW__ = 0;
                  $44 = $43&1;
                  if ($44) {
                   label = 42;
                   break;
                  }
                  HEAP32[(1932)>>2] = 0;
                  HEAP32[1928>>2] = (9888);
                  __THREW__ = 0;
                  invoke_vii(482,($this|0),(1928|0));
                  $45 = __THREW__; __THREW__ = 0;
                  $46 = $45&1;
                  if ($46) {
                   label = 42;
                   break;
                  }
                  HEAP32[(1940)>>2] = 0;
                  HEAP32[1936>>2] = (9952);
                  __THREW__ = 0;
                  invoke_vii(483,($this|0),(1936|0));
                  $47 = __THREW__; __THREW__ = 0;
                  $48 = $47&1;
                  if ($48) {
                   label = 42;
                   break;
                  }
                  HEAP32[(1948)>>2] = 0;
                  HEAP32[1944>>2] = (10016);
                  __THREW__ = 0;
                  invoke_vii(484,($this|0),(1944|0));
                  $49 = __THREW__; __THREW__ = 0;
                  $50 = $49&1;
                  if ($50) {
                   label = 42;
                   break;
                  }
                  HEAP32[(1956)>>2] = 0;
                  HEAP32[1952>>2] = (10080);
                  __THREW__ = 0;
                  invoke_vii(485,($this|0),(1952|0));
                  $51 = __THREW__; __THREW__ = 0;
                  $52 = $51&1;
                  if ($52) {
                   label = 42;
                   break;
                  }
                  HEAP32[(1964)>>2] = 0;
                  HEAP32[1960>>2] = (10144);
                  __THREW__ = 0;
                  invoke_vii(486,($this|0),(1960|0));
                  $53 = __THREW__; __THREW__ = 0;
                  $54 = $53&1;
                  if ($54) {
                   label = 42;
                   break;
                  }
                  HEAP32[(1972)>>2] = 0;
                  HEAP32[1968>>2] = (10180);
                  __THREW__ = 0;
                  invoke_vii(487,($this|0),(1968|0));
                  $55 = __THREW__; __THREW__ = 0;
                  $56 = $55&1;
                  if ($56) {
                   label = 42;
                   break;
                  }
                  HEAP32[(1980)>>2] = 0;
                  HEAP32[1976>>2] = (10216);
                  __THREW__ = 0;
                  invoke_vii(488,($this|0),(1976|0));
                  $57 = __THREW__; __THREW__ = 0;
                  $58 = $57&1;
                  if ($58) {
                   label = 42;
                   break;
                  }
                  HEAP32[(1988)>>2] = 0;
                  HEAP32[1984>>2] = (10252);
                  __THREW__ = 0;
                  invoke_vii(489,($this|0),(1984|0));
                  $59 = __THREW__; __THREW__ = 0;
                  $60 = $59&1;
                  if ($60) {
                   label = 42;
                   break;
                  }
                  HEAP32[(1996)>>2] = 0;
                  HEAP32[1992>>2] = (9640);
                  HEAP32[(2000)>>2] = (9688);
                  __THREW__ = 0;
                  invoke_vii(490,($this|0),(1992|0));
                  $61 = __THREW__; __THREW__ = 0;
                  $62 = $61&1;
                  if ($62) {
                   label = 42;
                   break;
                  }
                  HEAP32[(2012)>>2] = 0;
                  HEAP32[2008>>2] = (9732);
                  HEAP32[(2016)>>2] = (9780);
                  __THREW__ = 0;
                  invoke_vii(491,($this|0),(2008|0));
                  $63 = __THREW__; __THREW__ = 0;
                  $64 = $63&1;
                  if ($64) {
                   label = 42;
                   break;
                  }
                  HEAP32[(2028)>>2] = 0;
                  HEAP32[2024>>2] = (10636);
                  __THREW__ = 0;
                  $65 = (invoke_i(429)|0);
                  $66 = __THREW__; __THREW__ = 0;
                  $67 = $66&1;
                  if ($67) {
                   $68 = ___cxa_find_matching_catch()|0;
                   $69 = tempRet0;
                   $eh$lpad$body$index3Z2D = $69;$eh$lpad$body$indexZ2D = $68;
                   break;
                  }
                  HEAP32[(2032)>>2] = $65;
                  HEAP32[2024>>2] = (9824);
                  __THREW__ = 0;
                  invoke_vii(492,($this|0),(2024|0));
                  $70 = __THREW__; __THREW__ = 0;
                  $71 = $70&1;
                  if ($71) {
                   label = 42;
                   break;
                  }
                  HEAP32[(2044)>>2] = 0;
                  HEAP32[2040>>2] = (10636);
                  __THREW__ = 0;
                  $72 = (invoke_i(429)|0);
                  $73 = __THREW__; __THREW__ = 0;
                  $74 = $73&1;
                  if ($74) {
                   $75 = ___cxa_find_matching_catch()|0;
                   $76 = tempRet0;
                   $eh$lpad$body$index3Z2D = $76;$eh$lpad$body$indexZ2D = $75;
                   break;
                  }
                  HEAP32[(2048)>>2] = $72;
                  HEAP32[2040>>2] = (9856);
                  __THREW__ = 0;
                  invoke_vii(493,($this|0),(2040|0));
                  $77 = __THREW__; __THREW__ = 0;
                  $78 = $77&1;
                  if ($78) {
                   label = 42;
                   break;
                  }
                  HEAP32[(2060)>>2] = 0;
                  HEAP32[2056>>2] = (10288);
                  __THREW__ = 0;
                  invoke_vii(494,($this|0),(2056|0));
                  $79 = __THREW__; __THREW__ = 0;
                  $80 = $79&1;
                  if ($80) {
                   label = 42;
                   break;
                  }
                  HEAP32[(2068)>>2] = 0;
                  HEAP32[2064>>2] = (10328);
                  __THREW__ = 0;
                  invoke_vii(495,($this|0),(2064|0));
                  $81 = __THREW__; __THREW__ = 0;
                  $82 = $81&1;
                  if ($82) {
                   label = 42;
                   break;
                  }
                  return;
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   } while(0);
   if ((label|0) == 42) {
    $87 = ___cxa_find_matching_catch()|0;
    $88 = tempRet0;
    $eh$lpad$body$index3Z2D = $88;$eh$lpad$body$indexZ2D = $87;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
   $$0 = $eh$lpad$body$index3Z2D;$$01 = $eh$lpad$body$indexZ2D;
  }
  __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($2);
  $$1 = $$0;$$12 = $$01;
 }
 ___resumeException($$12|0);
 // unreachable;
}
function __ZNSt3__16locale7classicEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[2072>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((2072|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    (invoke_i(496)|0);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $7 = ___cxa_find_matching_catch()|0;
     $8 = tempRet0;
     ___cxa_guard_abort((2072|0));
     ___resumeException($7|0);
     // unreachable;
    } else {
     HEAP32[11156>>2] = 11152;
     ___cxa_guard_release((2072|0));
     break;
    }
   }
  }
 } while(0);
 $6 = HEAP32[11156>>2]|0;
 return ($6|0);
}
function __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$id) {
 $this = $this|0;
 $f = $f|0;
 $id = $id|0;
 var $$pre = 0, $$pre2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__114__shared_count12__add_sharedEv($f);
 $0 = ((($this)) + 8|0);
 $1 = ((($this)) + 12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = $2;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ($7>>>0)>($id>>>0);
 do {
  if ($8) {
   $16 = $3;
  } else {
   $9 = (($id) + 1)|0;
   __THREW__ = 0;
   invoke_vii(497,($0|0),($9|0));
   $10 = __THREW__; __THREW__ = 0;
   $11 = $10&1;
   if (!($11)) {
    $$pre = HEAP32[$0>>2]|0;
    $16 = $$pre;
    break;
   }
   $12 = ___cxa_find_matching_catch()|0;
   $13 = tempRet0;
   $14 = ($f|0)==(0|0);
   if (!($14)) {
    (__ZNSt3__114__shared_count16__release_sharedEv($f)|0);
   }
   ___resumeException($12|0);
   // unreachable;
  }
 } while(0);
 $15 = (($16) + ($id<<2)|0);
 $17 = HEAP32[$15>>2]|0;
 $18 = ($17|0)==(0|0);
 if ($18) {
  $20 = $16;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($17)|0);
  $$pre2 = HEAP32[$0>>2]|0;
  $20 = $$pre2;
 }
 $19 = (($20) + ($id<<2)|0);
 HEAP32[$19>>2] = $f;
 return;
}
function __ZNSt3__16locale5__impD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$01 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (10368);
 $0 = ((($this)) + 8|0);
 $1 = ((($this)) + 12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = ($2|0)==($3|0);
 if (!($4)) {
  $6 = $3;$i$01 = 0;
  while(1) {
   $5 = (($6) + ($i$01<<2)|0);
   $7 = HEAP32[$5>>2]|0;
   $8 = ($7|0)==(0|0);
   if (!($8)) {
    (__ZNSt3__114__shared_count16__release_sharedEv($7)|0);
   }
   $9 = (($i$01) + 1)|0;
   $10 = HEAP32[$1>>2]|0;
   $11 = HEAP32[$0>>2]|0;
   $12 = $10;
   $13 = $11;
   $14 = (($12) - ($13))|0;
   $15 = $14 >> 2;
   $16 = ($9>>>0)<($15>>>0);
   if ($16) {
    $6 = $11;$i$01 = $9;
   } else {
    break;
   }
  }
 }
 $17 = ((($this)) + 144|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
 __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($0);
 return;
}
function __ZNSt3__16locale5__impD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__impD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__16locale5__imp9use_facetEl($this,$id) {
 $this = $this|0;
 $id = $id|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNKSt3__16locale5__imp9has_facetEl($this,$id)|0);
 if ($0) {
  $2 = ((($this)) + 8|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = (($3) + ($id<<2)|0);
  $5 = HEAP32[$4>>2]|0;
  return ($5|0);
 } else {
  $1 = (___cxa_allocate_exception(4)|0);
  __ZNSt8bad_castC2Ev($1);
  ___cxa_throw(($1|0),(352|0),(9|0));
  // unreachable;
 }
 return (0)|0;
}
function __ZNSt3__16locale5__imp12make_classicEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__impC2Ej(2080,1);
 HEAP32[11152>>2] = 2080;
 return (11152|0);
}
function __ZNSt3__16locale5__imp11make_globalEv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale7classicEv()|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[11160>>2] = $1;
 __ZNSt3__114__shared_count12__add_sharedEv($1);
 return (11160|0);
}
function __ZNSt3__16locale8__globalEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[2240>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((2240|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    (invoke_i(498)|0);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $7 = ___cxa_find_matching_catch()|0;
     $8 = tempRet0;
     ___cxa_guard_abort((2240|0));
     ___resumeException($7|0);
     // unreachable;
    } else {
     HEAP32[11164>>2] = 11160;
     ___cxa_guard_release((2240|0));
     break;
    }
   }
  }
 } while(0);
 $6 = HEAP32[11164>>2]|0;
 return ($6|0);
}
function __ZNSt3__16localeC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(499)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $4 = ___cxa_find_matching_catch(0|0)|0;
  $5 = tempRet0;
  ___clang_call_terminate($4);
  // unreachable;
 } else {
  $3 = HEAP32[$0>>2]|0;
  HEAP32[$this>>2] = $3;
  __ZNSt3__114__shared_count12__add_sharedEv($3);
  return;
 }
}
function __ZNSt3__16localeC2ERKS0_($this,$l) {
 $this = $this|0;
 $l = $l|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$l>>2]|0;
 HEAP32[$this>>2] = $0;
 __ZNSt3__114__shared_count12__add_sharedEv($0);
 return;
}
function __ZNSt3__16localeD2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 return;
}
function __ZNSt3__16locale2id5__getEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__p$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p$i = sp;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(-1);
 if (!($1)) {
  HEAP32[$__p$i>>2] = $this;
  $2 = ((($__p$i)) + 4|0);
  HEAP32[$2>>2] = (500);
  $3 = ((($__p$i)) + 8|0);
  HEAP32[$3>>2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E($this,$__p$i,501);
 }
 $4 = ((($this)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($5) + -1)|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__16locale9use_facetERNS0_2idE($this,$x) {
 $this = $this|0;
 $x = $x|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (__ZNSt3__16locale2id5__getEv($x)|0);
 $2 = (__ZNKSt3__16locale5__imp9use_facetEl($0,$1)|0);
 return ($2|0);
}
function __ZNSt3__16locale5facetD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__16locale5facet16__on_zero_sharedEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($this|0)==(0|0);
 if (!($0)) {
  $1 = HEAP32[$this>>2]|0;
  $2 = ((($1)) + 4|0);
  $3 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$3 & 1023]($this);
 }
 return;
}
function __ZNSt3__16locale2id6__initEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[10380>>2]|0;HEAP32[10380>>2] = (($0+1)|0);
 $1 = (($0) + 1)|0;
 $2 = ((($this)) + 4|0);
 HEAP32[$2>>2] = $1;
 return;
}
function __ZNSt3__15ctypeIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__15ctypeIwE5do_isEtw($this,$m,$c) {
 $this = $this|0;
 $m = $m|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
  $1 = (($0) + ($c<<1)|0);
  $2 = HEAP16[$1>>1]|0;
  $3 = $2 & $m;
  $4 = ($3<<16>>16)!=(0);
  $5 = $4;
 } else {
  $5 = 0;
 }
 return ($5|0);
}
function __ZNSt3__15ctypeIcE13classic_tableEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(502)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $4 = ___cxa_find_matching_catch(0|0)|0;
  $5 = tempRet0;
  ___clang_call_terminate($4);
  // unreachable;
 } else {
  $3 = HEAP32[$0>>2]|0;
  return ($3|0);
 }
 return (0)|0;
}
function __ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt($this,$low,$high,$vec) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $vec = $vec|0;
 var $$015 = 0, $$06 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low3 = 0, $scevgep = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $low3 = $low;
 $0 = $high;
 $1 = (($0) - ($low3))|0;
 $2 = $1 >>> 2;
 $3 = ($low|0)==($high|0);
 if (!($3)) {
  $$015 = $low;$$06 = $vec;
  while(1) {
   $4 = HEAP32[$$015>>2]|0;
   $isascii = ($4>>>0)<(128);
   if ($isascii) {
    $5 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
    $6 = (($5) + ($4<<1)|0);
    $7 = HEAP16[$6>>1]|0;
    $8 = $7&65535;
    $10 = $8;
   } else {
    $10 = 0;
   }
   $9 = $10&65535;
   HEAP16[$$06>>1] = $9;
   $11 = ((($$015)) + 4|0);
   $12 = ((($$06)) + 2|0);
   $13 = ($11|0)==($high|0);
   if ($13) {
    break;
   } else {
    $$015 = $11;$$06 = $12;
   }
  }
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_($this,$m,$low,$high) {
 $this = $this|0;
 $m = $m|0;
 $low = $low|0;
 $high = $high|0;
 var $$0$lcssa = 0, $$01 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 L1: do {
  if ($0) {
   $$0$lcssa = $high;
  } else {
   $$01 = $low;
   while(1) {
    $1 = HEAP32[$$01>>2]|0;
    $isascii = ($1>>>0)<(128);
    if ($isascii) {
     $2 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
     $3 = (($2) + ($1<<1)|0);
     $4 = HEAP16[$3>>1]|0;
     $5 = $4 & $m;
     $6 = ($5<<16>>16)==(0);
     if (!($6)) {
      $$0$lcssa = $$01;
      break L1;
     }
    }
    $7 = ((($$01)) + 4|0);
    $8 = ($7|0)==($high|0);
    if ($8) {
     $$0$lcssa = $high;
     break;
    } else {
     $$01 = $7;
    }
   }
  }
 } while(0);
 return ($$0$lcssa|0);
}
function __ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_($this,$m,$low,$high) {
 $this = $this|0;
 $m = $m|0;
 $low = $low|0;
 $high = $high|0;
 var $$0$lcssa = 0, $$01 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 L1: do {
  if ($0) {
   $$0$lcssa = $high;
  } else {
   $$01 = $low;
   while(1) {
    $1 = HEAP32[$$01>>2]|0;
    $isascii = ($1>>>0)<(128);
    if (!($isascii)) {
     $$0$lcssa = $$01;
     break L1;
    }
    $2 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
    $3 = (($2) + ($1<<1)|0);
    $4 = HEAP16[$3>>1]|0;
    $5 = $4 & $m;
    $6 = ($5<<16>>16)==(0);
    if ($6) {
     $$0$lcssa = $$01;
     break L1;
    }
    $7 = ((($$01)) + 4|0);
    $8 = ($7|0)==($high|0);
    if ($8) {
     $$0$lcssa = $high;
     break;
    } else {
     $$01 = $7;
    }
   }
  }
 } while(0);
 return ($$0$lcssa|0);
}
function __ZNKSt3__15ctypeIwE10do_toupperEw($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (__ZNSt3__15ctypeIcE21__classic_upper_tableEv()|0);
  $1 = (($0) + ($c<<2)|0);
  $2 = HEAP32[$1>>2]|0;
  $3 = $2;
 } else {
  $3 = $c;
 }
 return ($3|0);
}
function __ZNSt3__15ctypeIcE21__classic_upper_tableEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(503)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $4 = ___cxa_find_matching_catch(0|0)|0;
  $5 = tempRet0;
  ___clang_call_terminate($4);
  // unreachable;
 } else {
  $3 = HEAP32[$0>>2]|0;
  return ($3|0);
 }
 return (0)|0;
}
function __ZNKSt3__15ctypeIwE10do_toupperEPwPKw($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$04 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low2 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low2 = $low;
 $0 = $high;
 $1 = (($0) - ($low2))|0;
 $2 = $1 >>> 2;
 $3 = ($low|0)==($high|0);
 if (!($3)) {
  $$04 = $low;
  while(1) {
   $4 = HEAP32[$$04>>2]|0;
   $isascii = ($4>>>0)<(128);
   if ($isascii) {
    $5 = (__ZNSt3__15ctypeIcE21__classic_upper_tableEv()|0);
    $6 = (($5) + ($4<<2)|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = $7;
   } else {
    $8 = $4;
   }
   HEAP32[$$04>>2] = $8;
   $9 = ((($$04)) + 4|0);
   $10 = ($9|0)==($high|0);
   if ($10) {
    break;
   } else {
    $$04 = $9;
   }
  }
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE10do_tolowerEw($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (__ZNSt3__15ctypeIcE21__classic_lower_tableEv()|0);
  $1 = (($0) + ($c<<2)|0);
  $2 = HEAP32[$1>>2]|0;
  $3 = $2;
 } else {
  $3 = $c;
 }
 return ($3|0);
}
function __ZNSt3__15ctypeIcE21__classic_lower_tableEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(504)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $4 = ___cxa_find_matching_catch(0|0)|0;
  $5 = tempRet0;
  ___clang_call_terminate($4);
  // unreachable;
 } else {
  $3 = HEAP32[$0>>2]|0;
  return ($3|0);
 }
 return (0)|0;
}
function __ZNKSt3__15ctypeIwE10do_tolowerEPwPKw($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$04 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low2 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low2 = $low;
 $0 = $high;
 $1 = (($0) - ($low2))|0;
 $2 = $1 >>> 2;
 $3 = ($low|0)==($high|0);
 if (!($3)) {
  $$04 = $low;
  while(1) {
   $4 = HEAP32[$$04>>2]|0;
   $isascii = ($4>>>0)<(128);
   if ($isascii) {
    $5 = (__ZNSt3__15ctypeIcE21__classic_lower_tableEv()|0);
    $6 = (($5) + ($4<<2)|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = $7;
   } else {
    $8 = $4;
   }
   HEAP32[$$04>>2] = $8;
   $9 = ((($$04)) + 4|0);
   $10 = ($9|0)==($high|0);
   if ($10) {
    break;
   } else {
    $$04 = $9;
   }
  }
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE8do_widenEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $c << 24 >> 24;
 return ($0|0);
}
function __ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw($this,$low,$high,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dest = $dest|0;
 var $$012 = 0, $$03 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$012 = $low;$$03 = $dest;
  while(1) {
   $1 = HEAP8[$$012>>0]|0;
   $2 = $1 << 24 >> 24;
   HEAP32[$$03>>2] = $2;
   $3 = ((($$012)) + 1|0);
   $4 = ((($$03)) + 4|0);
   $5 = ($3|0)==($high|0);
   if ($5) {
    break;
   } else {
    $$012 = $3;$$03 = $4;
   }
  }
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIwE9do_narrowEwc($this,$c,$dfault) {
 $this = $this|0;
 $c = $c|0;
 $dfault = $dfault|0;
 var $$0 = 0, $0 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 $0 = $c&255;
 $$0 = $isascii ? $0 : $dfault;
 return ($$0|0);
}
function __ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc($this,$low,$high,$dfault,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dfault = $dfault|0;
 $dest = $dest|0;
 var $$015 = 0, $$06 = 0, $$dfault = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $isascii = 0, $low3 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low3 = $low;
 $0 = $high;
 $1 = (($0) - ($low3))|0;
 $2 = $1 >>> 2;
 $3 = ($low|0)==($high|0);
 if (!($3)) {
  $$015 = $low;$$06 = $dest;
  while(1) {
   $4 = HEAP32[$$015>>2]|0;
   $isascii = ($4>>>0)<(128);
   $5 = $4&255;
   $$dfault = $isascii ? $5 : $dfault;
   HEAP8[$$06>>0] = $$dfault;
   $6 = ((($$015)) + 4|0);
   $7 = ((($$06)) + 1|0);
   $8 = ($6|0)==($high|0);
   if ($8) {
    break;
   } else {
    $$015 = $6;$$06 = $7;
   }
  }
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNSt3__15ctypeIcED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (10408);
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if (!($2)) {
  $3 = ((($this)) + 12|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = ($4<<24>>24)==(0);
  if (!($5)) {
   __ZdaPv($1);
  }
 }
 return;
}
function __ZNSt3__15ctypeIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__15ctypeIcED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__15ctypeIcE10do_toupperEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 if ($isascii1) {
  $0 = $c&255;
  $1 = (__ZNSt3__15ctypeIcE21__classic_upper_tableEv()|0);
  $2 = (($1) + ($0<<2)|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = $3&255;
  $5 = $4;
 } else {
  $5 = $c;
 }
 return ($5|0);
}
function __ZNKSt3__15ctypeIcE10do_toupperEPcPKc($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$02 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$02 = $low;
  while(1) {
   $1 = HEAP8[$$02>>0]|0;
   $isascii1 = ($1<<24>>24)>(-1);
   if ($isascii1) {
    $2 = $1 << 24 >> 24;
    $3 = (__ZNSt3__15ctypeIcE21__classic_upper_tableEv()|0);
    $4 = (($3) + ($2<<2)|0);
    $5 = HEAP32[$4>>2]|0;
    $6 = $5&255;
    $7 = $6;
   } else {
    $7 = $1;
   }
   HEAP8[$$02>>0] = $7;
   $8 = ((($$02)) + 1|0);
   $9 = ($8|0)==($high|0);
   if ($9) {
    break;
   } else {
    $$02 = $8;
   }
  }
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE10do_tolowerEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 if ($isascii1) {
  $0 = $c << 24 >> 24;
  $1 = (__ZNSt3__15ctypeIcE21__classic_lower_tableEv()|0);
  $2 = (($1) + ($0<<2)|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = $3&255;
  $5 = $4;
 } else {
  $5 = $c;
 }
 return ($5|0);
}
function __ZNKSt3__15ctypeIcE10do_tolowerEPcPKc($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$02 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$02 = $low;
  while(1) {
   $1 = HEAP8[$$02>>0]|0;
   $isascii1 = ($1<<24>>24)>(-1);
   if ($isascii1) {
    $2 = $1 << 24 >> 24;
    $3 = (__ZNSt3__15ctypeIcE21__classic_lower_tableEv()|0);
    $4 = (($3) + ($2<<2)|0);
    $5 = HEAP32[$4>>2]|0;
    $6 = $5&255;
    $7 = $6;
   } else {
    $7 = $1;
   }
   HEAP8[$$02>>0] = $7;
   $8 = ((($$02)) + 1|0);
   $9 = ($8|0)==($high|0);
   if ($9) {
    break;
   } else {
    $$02 = $8;
   }
  }
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE8do_widenEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($c|0);
}
function __ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc($this,$low,$high,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dest = $dest|0;
 var $$012 = 0, $$03 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$012 = $low;$$03 = $dest;
  while(1) {
   $1 = HEAP8[$$012>>0]|0;
   HEAP8[$$03>>0] = $1;
   $2 = ((($$012)) + 1|0);
   $3 = ((($$03)) + 1|0);
   $4 = ($2|0)==($high|0);
   if ($4) {
    break;
   } else {
    $$012 = $2;$$03 = $3;
   }
  }
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE9do_narrowEcc($this,$c,$dfault) {
 $this = $this|0;
 $c = $c|0;
 $dfault = $dfault|0;
 var $c$dfault = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 $c$dfault = $isascii1 ? $c : $dfault;
 return ($c$dfault|0);
}
function __ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc($this,$low,$high,$dfault,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dfault = $dfault|0;
 $dest = $dest|0;
 var $$013 = 0, $$04 = 0, $$dfault = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $isascii2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if (!($0)) {
  $$013 = $low;$$04 = $dest;
  while(1) {
   $1 = HEAP8[$$013>>0]|0;
   $isascii2 = ($1<<24>>24)>(-1);
   $$dfault = $isascii2 ? $1 : $dfault;
   HEAP8[$$04>>0] = $$dfault;
   $2 = ((($$013)) + 1|0);
   $3 = ((($$04)) + 1|0);
   $4 = ($2|0)==($high|0);
   if ($4) {
    break;
   } else {
    $$013 = $2;$$04 = $3;
   }
  }
 }
 return ($high|0);
}
function __ZNSt3__17codecvtIcc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_($this,$0,$frm,$1,$frm_nxt,$to,$2,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $1 = $1|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $2 = $2|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_($this,$0,$frm,$1,$frm_nxt,$to,$2,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $1 = $1|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $2 = $2|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $end = $end|0;
 $mx = $mx|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $end;
 $2 = $frm;
 $3 = (($1) - ($2))|0;
 $4 = ($3>>>0)<($mx>>>0);
 $5 = $4 ? $3 : $mx;
 return ($5|0);
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNSt3__17codecvtIwc11__mbstate_tEC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = ((($this)) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = (10476);
 __THREW__ = 0;
 $2 = (invoke_i(429)|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $6 = ___cxa_find_matching_catch()|0;
  $7 = tempRet0;
  ___resumeException($6|0);
  // unreachable;
 } else {
  $5 = ((($this)) + 8|0);
  HEAP32[$5>>2] = $2;
  return;
 }
}
function __ZNSt3__17codecvtIwc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_($this,$st,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $$01$be = 0, $$01128 = 0, $$01128$lcssa170 = 0, $$02$be = 0, $$02127 = 0, $$02127$lcssa177 = 0, $$1$lcssa = 0, $$1113 = 0, $$lcssa = 0, $$lcssa183 = 0, $$lcssa191 = 0, $$pre = 0, $$pre59 = 0, $$pre60 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $fend$0$lcssa = 0, $fend$0133 = 0, $fend$1$be = 0, $fend$1129 = 0, $fend$2$lcssa = 0, $fend$2120 = 0, $n$0117 = 0, $not$ = 0, $or$cond = 0, $or$cond126 = 0, $p$0118 = 0, $save_state = 0;
 var $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $save_state = sp;
 $tmp = sp + 8|0;
 $0 = ($frm|0)==($frm_end|0);
 L1: do {
  if ($0) {
   $fend$0$lcssa = $frm_end;
  } else {
   $fend$0133 = $frm;
   while(1) {
    $1 = HEAP32[$fend$0133>>2]|0;
    $2 = ($1|0)==(0);
    if ($2) {
     $fend$0$lcssa = $fend$0133;
     break L1;
    }
    $3 = ((($fend$0133)) + 4|0);
    $4 = ($3|0)==($frm_end|0);
    if ($4) {
     $fend$0$lcssa = $frm_end;
     break;
    } else {
     $fend$0133 = $3;
    }
   }
  }
 } while(0);
 HEAP32[$to_nxt>>2] = $to;
 HEAP32[$frm_nxt>>2] = $frm;
 $5 = $to_end;
 $6 = ((($this)) + 8|0);
 $7 = ($frm|0)==($frm_end|0);
 $8 = ($to|0)==($to_end|0);
 $or$cond126 = $8 | $7;
 L6: do {
  if ($or$cond126) {
   $111 = $frm;
   label = 47;
  } else {
   $$01128 = $frm;$$02127 = $to;$fend$1129 = $fend$0$lcssa;
   L7: while(1) {
    $9 = $st;
    $10 = $9;
    $11 = HEAP32[$10>>2]|0;
    $12 = (($9) + 4)|0;
    $13 = $12;
    $14 = HEAP32[$13>>2]|0;
    $15 = $save_state;
    $16 = $15;
    HEAP32[$16>>2] = $11;
    $17 = (($15) + 4)|0;
    $18 = $17;
    HEAP32[$18>>2] = $14;
    $19 = $fend$1129;
    $20 = $$01128;
    $21 = (($19) - ($20))|0;
    $22 = $21 >> 2;
    $23 = $$02127;
    $24 = (($5) - ($23))|0;
    $25 = HEAP32[$6>>2]|0;
    $26 = (_uselocale($25)|0);
    __THREW__ = 0;
    $27 = (invoke_iiiiii(505,($$02127|0),($frm_nxt|0),($22|0),($24|0),($st|0))|0);
    $28 = __THREW__; __THREW__ = 0;
    $29 = $28&1;
    if ($29) {
     $$lcssa183 = $26;
     label = 9;
     break;
    }
    $30 = ($26|0)==(0|0);
    if (!($30)) {
     __THREW__ = 0;
     (invoke_ii(444,($26|0))|0);
     $31 = __THREW__; __THREW__ = 0;
     $32 = $31&1;
     if ($32) {
      label = 8;
      break;
     }
    }
    switch ($27|0) {
    case 0:  {
     $$0 = 1;
     break L6;
     break;
    }
    case -1:  {
     $$01128$lcssa170 = $$01128;$$02127$lcssa177 = $$02127;
     label = 14;
     break L7;
     break;
    }
    default: {
    }
    }
    $69 = HEAP32[$to_nxt>>2]|0;
    $70 = (($69) + ($27)|0);
    HEAP32[$to_nxt>>2] = $70;
    $71 = ($70|0)==($to_end|0);
    if ($71) {
     label = 27;
     break;
    }
    $72 = ($fend$1129|0)==($frm_end|0);
    if ($72) {
     $$pre = HEAP32[$frm_nxt>>2]|0;
     $$01$be = $$pre;$$02$be = $70;$fend$1$be = $frm_end;
    } else {
     $75 = HEAP32[$6>>2]|0;
     $76 = (_uselocale($75)|0);
     __THREW__ = 0;
     $77 = (invoke_iiii(506,($tmp|0),0,($st|0))|0);
     $78 = __THREW__; __THREW__ = 0;
     $79 = $78&1;
     if ($79) {
      $$lcssa191 = $76;
      label = 35;
      break;
     }
     $80 = ($76|0)==(0|0);
     if (!($80)) {
      __THREW__ = 0;
      (invoke_ii(444,($76|0))|0);
      $81 = __THREW__; __THREW__ = 0;
      $82 = $81&1;
      if ($82) {
       label = 34;
       break;
      }
     }
     $92 = ($77|0)==(-1);
     if ($92) {
      $$0 = 2;
      break L6;
     }
     $93 = HEAP32[$to_nxt>>2]|0;
     $94 = $93;
     $95 = (($5) - ($94))|0;
     $96 = ($77>>>0)>($95>>>0);
     if ($96) {
      $$0 = 1;
      break L6;
     }
     $97 = ($77|0)==(0);
     if (!($97)) {
      $n$0117 = $77;$p$0118 = $tmp;
      while(1) {
       $98 = ((($p$0118)) + 1|0);
       $99 = HEAP8[$p$0118>>0]|0;
       $100 = HEAP32[$to_nxt>>2]|0;
       $101 = ((($100)) + 1|0);
       HEAP32[$to_nxt>>2] = $101;
       HEAP8[$100>>0] = $99;
       $102 = (($n$0117) + -1)|0;
       $103 = ($102|0)==(0);
       if ($103) {
        break;
       } else {
        $n$0117 = $102;$p$0118 = $98;
       }
      }
     }
     $104 = HEAP32[$frm_nxt>>2]|0;
     $105 = ((($104)) + 4|0);
     HEAP32[$frm_nxt>>2] = $105;
     $106 = ($105|0)==($frm_end|0);
     L28: do {
      if ($106) {
       $fend$2$lcssa = $frm_end;
      } else {
       $fend$2120 = $105;
       while(1) {
        $107 = HEAP32[$fend$2120>>2]|0;
        $108 = ($107|0)==(0);
        if ($108) {
         $fend$2$lcssa = $fend$2120;
         break L28;
        }
        $109 = ((($fend$2120)) + 4|0);
        $110 = ($109|0)==($frm_end|0);
        if ($110) {
         $fend$2$lcssa = $frm_end;
         break;
        } else {
         $fend$2120 = $109;
        }
       }
      }
     } while(0);
     $$pre59 = HEAP32[$to_nxt>>2]|0;
     $$01$be = $105;$$02$be = $$pre59;$fend$1$be = $fend$2$lcssa;
    }
    $73 = ($$01$be|0)==($frm_end|0);
    $74 = ($$02$be|0)==($to_end|0);
    $or$cond = $74 | $73;
    if ($or$cond) {
     $111 = $$01$be;
     label = 47;
     break L6;
    } else {
     $$01128 = $$01$be;$$02127 = $$02$be;$fend$1129 = $fend$1$be;
    }
   }
   if ((label|0) == 8) {
    $33 = ___cxa_find_matching_catch(0|0)|0;
    $34 = tempRet0;
    ___clang_call_terminate($33);
    // unreachable;
   }
   else if ((label|0) == 9) {
    $35 = ___cxa_find_matching_catch()|0;
    $36 = tempRet0;
    $37 = ($$lcssa183|0)==(0|0);
    if (!($37)) {
     __THREW__ = 0;
     (invoke_ii(444,($$lcssa183|0))|0);
     $38 = __THREW__; __THREW__ = 0;
     $39 = $38&1;
     if ($39) {
      $40 = ___cxa_find_matching_catch(0|0)|0;
      $41 = tempRet0;
      ___clang_call_terminate($40);
      // unreachable;
     }
    }
    ___resumeException($35|0);
    // unreachable;
   }
   else if ((label|0) == 14) {
    HEAP32[$to_nxt>>2] = $$02127$lcssa177;
    $42 = HEAP32[$frm_nxt>>2]|0;
    $43 = ($$01128$lcssa170|0)==($42|0);
    L42: do {
     if ($43) {
      $$1$lcssa = $$01128$lcssa170;
     } else {
      $$1113 = $$01128$lcssa170;$47 = $$02127$lcssa177;
      while(1) {
       $44 = HEAP32[$$1113>>2]|0;
       $45 = HEAP32[$6>>2]|0;
       $46 = (_uselocale($45)|0);
       __THREW__ = 0;
       $48 = (invoke_iiii(506,($47|0),($44|0),($save_state|0))|0);
       $49 = __THREW__; __THREW__ = 0;
       $50 = $49&1;
       if ($50) {
        $$lcssa = $46;
        break;
       }
       $51 = ($46|0)==(0|0);
       if (!($51)) {
        __THREW__ = 0;
        (invoke_ii(444,($46|0))|0);
        $52 = __THREW__; __THREW__ = 0;
        $53 = $52&1;
        if ($53) {
         label = 18;
         break;
        }
       }
       $63 = ($48|0)==(-1);
       if ($63) {
        $$1$lcssa = $$1113;
        break L42;
       }
       $64 = HEAP32[$to_nxt>>2]|0;
       $65 = (($64) + ($48)|0);
       HEAP32[$to_nxt>>2] = $65;
       $66 = ((($$1113)) + 4|0);
       $67 = HEAP32[$frm_nxt>>2]|0;
       $68 = ($66|0)==($67|0);
       if ($68) {
        $$1$lcssa = $66;
        break L42;
       } else {
        $$1113 = $66;$47 = $65;
       }
      }
      if ((label|0) == 18) {
       $54 = ___cxa_find_matching_catch(0|0)|0;
       $55 = tempRet0;
       ___clang_call_terminate($54);
       // unreachable;
      }
      $56 = ___cxa_find_matching_catch()|0;
      $57 = tempRet0;
      $58 = ($$lcssa|0)==(0|0);
      if (!($58)) {
       __THREW__ = 0;
       (invoke_ii(444,($$lcssa|0))|0);
       $59 = __THREW__; __THREW__ = 0;
       $60 = $59&1;
       if ($60) {
        $61 = ___cxa_find_matching_catch(0|0)|0;
        $62 = tempRet0;
        ___clang_call_terminate($61);
        // unreachable;
       }
      }
      ___resumeException($56|0);
      // unreachable;
     }
    } while(0);
    HEAP32[$frm_nxt>>2] = $$1$lcssa;
    $$0 = 2;
    break;
   }
   else if ((label|0) == 27) {
    $$pre60 = HEAP32[$frm_nxt>>2]|0;
    $111 = $$pre60;
    label = 47;
    break;
   }
   else if ((label|0) == 34) {
    $83 = ___cxa_find_matching_catch(0|0)|0;
    $84 = tempRet0;
    ___clang_call_terminate($83);
    // unreachable;
   }
   else if ((label|0) == 35) {
    $85 = ___cxa_find_matching_catch()|0;
    $86 = tempRet0;
    $87 = ($$lcssa191|0)==(0|0);
    if (!($87)) {
     __THREW__ = 0;
     (invoke_ii(444,($$lcssa191|0))|0);
     $88 = __THREW__; __THREW__ = 0;
     $89 = $88&1;
     if ($89) {
      $90 = ___cxa_find_matching_catch(0|0)|0;
      $91 = tempRet0;
      ___clang_call_terminate($90);
      // unreachable;
     }
    }
    ___resumeException($85|0);
    // unreachable;
   }
  }
 } while(0);
 if ((label|0) == 47) {
  $not$ = ($111|0)!=($frm_end|0);
  $112 = $not$&1;
  $$0 = $112;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_($this,$st,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $$01$be = 0, $$01165 = 0, $$01165$lcssa223 = 0, $$02$be = 0, $$02164 = 0, $$02164$lcssa230 = 0, $$1$lcssa = 0, $$1157 = 0, $$1157$lcssa215 = 0, $$1157$lcssa216 = 0, $$2 = 0, $$lcssa = 0, $$lcssa238 = 0, $$lcssa244 = 0, $$lcssa252 = 0, $$pre = 0, $$pre80 = 0, $$pre81 = 0, $0 = 0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $fend$0$lcssa = 0, $fend$0169 = 0, $fend$1$be = 0, $fend$1166 = 0, $fend$2$lcssa = 0, $fend$2158 = 0, $not$ = 0, $not$3 = 0, $or$cond = 0, $or$cond163 = 0, $save_state = 0, $storemerge156 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $save_state = sp;
 $0 = ($frm|0)==($frm_end|0);
 L1: do {
  if ($0) {
   $fend$0$lcssa = $frm_end;
  } else {
   $fend$0169 = $frm;
   while(1) {
    $1 = HEAP8[$fend$0169>>0]|0;
    $2 = ($1<<24>>24)==(0);
    if ($2) {
     $fend$0$lcssa = $fend$0169;
     break L1;
    }
    $3 = ((($fend$0169)) + 1|0);
    $4 = ($3|0)==($frm_end|0);
    if ($4) {
     $fend$0$lcssa = $frm_end;
     break;
    } else {
     $fend$0169 = $3;
    }
   }
  }
 } while(0);
 HEAP32[$to_nxt>>2] = $to;
 HEAP32[$frm_nxt>>2] = $frm;
 $5 = $to_end;
 $6 = ((($this)) + 8|0);
 $7 = ($frm|0)==($frm_end|0);
 $8 = ($to|0)==($to_end|0);
 $or$cond163 = $8 | $7;
 L6: do {
  if ($or$cond163) {
   $103 = $frm;
   label = 47;
  } else {
   $$01165 = $frm;$$02164 = $to;$fend$1166 = $fend$0$lcssa;
   L7: while(1) {
    $9 = $st;
    $10 = $9;
    $11 = HEAP32[$10>>2]|0;
    $12 = (($9) + 4)|0;
    $13 = $12;
    $14 = HEAP32[$13>>2]|0;
    $15 = $save_state;
    $16 = $15;
    HEAP32[$16>>2] = $11;
    $17 = (($15) + 4)|0;
    $18 = $17;
    HEAP32[$18>>2] = $14;
    $19 = $fend$1166;
    $20 = $$01165;
    $21 = (($19) - ($20))|0;
    $22 = $$02164;
    $23 = (($5) - ($22))|0;
    $24 = $23 >> 2;
    $25 = HEAP32[$6>>2]|0;
    $26 = (_uselocale($25)|0);
    __THREW__ = 0;
    $27 = (invoke_iiiiii(507,($$02164|0),($frm_nxt|0),($21|0),($24|0),($st|0))|0);
    $28 = __THREW__; __THREW__ = 0;
    $29 = $28&1;
    if ($29) {
     $$lcssa244 = $26;
     label = 9;
     break;
    }
    $30 = ($26|0)==(0|0);
    if (!($30)) {
     __THREW__ = 0;
     (invoke_ii(444,($26|0))|0);
     $31 = __THREW__; __THREW__ = 0;
     $32 = $31&1;
     if ($32) {
      label = 8;
      break;
     }
    }
    switch ($27|0) {
    case 0:  {
     $$0 = 2;
     break L6;
     break;
    }
    case -1:  {
     $$01165$lcssa223 = $$01165;$$02164$lcssa230 = $$02164;$$lcssa238 = $19;
     label = 14;
     break L7;
     break;
    }
    default: {
    }
    }
    $70 = HEAP32[$to_nxt>>2]|0;
    $71 = (($70) + ($27<<2)|0);
    HEAP32[$to_nxt>>2] = $71;
    $72 = ($71|0)==($to_end|0);
    if ($72) {
     label = 31;
     break;
    }
    $73 = ($fend$1166|0)==($frm_end|0);
    $$pre = HEAP32[$frm_nxt>>2]|0;
    if ($73) {
     $$01$be = $$pre;$$02$be = $71;$fend$1$be = $frm_end;
    } else {
     $76 = HEAP32[$6>>2]|0;
     $77 = (_uselocale($76)|0);
     __THREW__ = 0;
     $78 = (invoke_iiiii(508,($71|0),($$pre|0),1,($st|0))|0);
     $79 = __THREW__; __THREW__ = 0;
     $80 = $79&1;
     if ($80) {
      $$lcssa252 = $77;
      label = 38;
      break;
     }
     $81 = ($77|0)==(0|0);
     if (!($81)) {
      __THREW__ = 0;
      (invoke_ii(444,($77|0))|0);
      $82 = __THREW__; __THREW__ = 0;
      $83 = $82&1;
      if ($83) {
       label = 37;
       break;
      }
     }
     $93 = ($78|0)==(0);
     if (!($93)) {
      $$0 = 2;
      break L6;
     }
     $94 = HEAP32[$to_nxt>>2]|0;
     $95 = ((($94)) + 4|0);
     HEAP32[$to_nxt>>2] = $95;
     $96 = HEAP32[$frm_nxt>>2]|0;
     $97 = ((($96)) + 1|0);
     HEAP32[$frm_nxt>>2] = $97;
     $98 = ($97|0)==($frm_end|0);
     L22: do {
      if ($98) {
       $fend$2$lcssa = $frm_end;
      } else {
       $fend$2158 = $97;
       while(1) {
        $99 = HEAP8[$fend$2158>>0]|0;
        $100 = ($99<<24>>24)==(0);
        if ($100) {
         $fend$2$lcssa = $fend$2158;
         break L22;
        }
        $101 = ((($fend$2158)) + 1|0);
        $102 = ($101|0)==($frm_end|0);
        if ($102) {
         $fend$2$lcssa = $frm_end;
         break;
        } else {
         $fend$2158 = $101;
        }
       }
      }
     } while(0);
     $$pre80 = HEAP32[$to_nxt>>2]|0;
     $$01$be = $97;$$02$be = $$pre80;$fend$1$be = $fend$2$lcssa;
    }
    $74 = ($$01$be|0)==($frm_end|0);
    $75 = ($$02$be|0)==($to_end|0);
    $or$cond = $75 | $74;
    if ($or$cond) {
     $103 = $$01$be;
     label = 47;
     break L6;
    } else {
     $$01165 = $$01$be;$$02164 = $$02$be;$fend$1166 = $fend$1$be;
    }
   }
   if ((label|0) == 8) {
    $33 = ___cxa_find_matching_catch(0|0)|0;
    $34 = tempRet0;
    ___clang_call_terminate($33);
    // unreachable;
   }
   else if ((label|0) == 9) {
    $35 = ___cxa_find_matching_catch()|0;
    $36 = tempRet0;
    $37 = ($$lcssa244|0)==(0|0);
    if (!($37)) {
     __THREW__ = 0;
     (invoke_ii(444,($$lcssa244|0))|0);
     $38 = __THREW__; __THREW__ = 0;
     $39 = $38&1;
     if ($39) {
      $40 = ___cxa_find_matching_catch(0|0)|0;
      $41 = tempRet0;
      ___clang_call_terminate($40);
      // unreachable;
     }
    }
    ___resumeException($35|0);
    // unreachable;
   }
   else if ((label|0) == 14) {
    HEAP32[$to_nxt>>2] = $$02164$lcssa230;
    $42 = HEAP32[$frm_nxt>>2]|0;
    $43 = ($$01165$lcssa223|0)==($42|0);
    L36: do {
     if ($43) {
      $$1$lcssa = $$01165$lcssa223;
     } else {
      $$1157 = $$01165$lcssa223;$storemerge156 = $$02164$lcssa230;
      L37: while(1) {
       $44 = $$1157;
       $45 = (($$lcssa238) - ($44))|0;
       $46 = HEAP32[$6>>2]|0;
       $47 = (_uselocale($46)|0);
       __THREW__ = 0;
       $48 = (invoke_iiiii(508,($storemerge156|0),($$1157|0),($45|0),($save_state|0))|0);
       $49 = __THREW__; __THREW__ = 0;
       $50 = $49&1;
       if ($50) {
        $$lcssa = $47;
        label = 19;
        break;
       }
       $51 = ($47|0)==(0|0);
       if (!($51)) {
        __THREW__ = 0;
        (invoke_ii(444,($47|0))|0);
        $52 = __THREW__; __THREW__ = 0;
        $53 = $52&1;
        if ($53) {
         label = 18;
         break;
        }
       }
       switch ($48|0) {
       case -1:  {
        $$1157$lcssa215 = $$1157;
        label = 25;
        break L37;
        break;
       }
       case -2:  {
        $$1157$lcssa216 = $$1157;
        label = 26;
        break L37;
        break;
       }
       case 0:  {
        $63 = ((($$1157)) + 1|0);
        $$2 = $63;
        break;
       }
       default: {
        $64 = (($$1157) + ($48)|0);
        $$2 = $64;
       }
       }
       $65 = HEAP32[$to_nxt>>2]|0;
       $66 = ((($65)) + 4|0);
       HEAP32[$to_nxt>>2] = $66;
       $67 = HEAP32[$frm_nxt>>2]|0;
       $68 = ($$2|0)==($67|0);
       if ($68) {
        $$1$lcssa = $$2;
        break L36;
       } else {
        $$1157 = $$2;$storemerge156 = $66;
       }
      }
      if ((label|0) == 18) {
       $54 = ___cxa_find_matching_catch(0|0)|0;
       $55 = tempRet0;
       ___clang_call_terminate($54);
       // unreachable;
      }
      else if ((label|0) == 19) {
       $56 = ___cxa_find_matching_catch()|0;
       $57 = tempRet0;
       $58 = ($$lcssa|0)==(0|0);
       if (!($58)) {
        __THREW__ = 0;
        (invoke_ii(444,($$lcssa|0))|0);
        $59 = __THREW__; __THREW__ = 0;
        $60 = $59&1;
        if ($60) {
         $61 = ___cxa_find_matching_catch(0|0)|0;
         $62 = tempRet0;
         ___clang_call_terminate($61);
         // unreachable;
        }
       }
       ___resumeException($56|0);
       // unreachable;
      }
      else if ((label|0) == 25) {
       HEAP32[$frm_nxt>>2] = $$1157$lcssa215;
       $$0 = 2;
       break L6;
      }
      else if ((label|0) == 26) {
       HEAP32[$frm_nxt>>2] = $$1157$lcssa216;
       $$0 = 1;
       break L6;
      }
     }
    } while(0);
    HEAP32[$frm_nxt>>2] = $$1$lcssa;
    $not$3 = ($$1$lcssa|0)!=($frm_end|0);
    $69 = $not$3&1;
    $$0 = $69;
    break;
   }
   else if ((label|0) == 31) {
    $$pre81 = HEAP32[$frm_nxt>>2]|0;
    $103 = $$pre81;
    label = 47;
    break;
   }
   else if ((label|0) == 37) {
    $84 = ___cxa_find_matching_catch(0|0)|0;
    $85 = tempRet0;
    ___clang_call_terminate($84);
    // unreachable;
   }
   else if ((label|0) == 38) {
    $86 = ___cxa_find_matching_catch()|0;
    $87 = tempRet0;
    $88 = ($$lcssa252|0)==(0|0);
    if (!($88)) {
     __THREW__ = 0;
     (invoke_ii(444,($$lcssa252|0))|0);
     $89 = __THREW__; __THREW__ = 0;
     $90 = $89&1;
     if ($90) {
      $91 = ___cxa_find_matching_catch(0|0)|0;
      $92 = tempRet0;
      ___clang_call_terminate($91);
      // unreachable;
     }
    }
    ___resumeException($86|0);
    // unreachable;
   }
  }
 } while(0);
 if ((label|0) == 47) {
  $not$ = ($103|0)!=($frm_end|0);
  $104 = $not$&1;
  $$0 = $104;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$st,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $n$02 = 0, $p$03 = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $tmp = sp;
 HEAP32[$to_nxt>>2] = $to;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (_uselocale($1)|0);
 __THREW__ = 0;
 $3 = (invoke_iiii(506,($tmp|0),0,($st|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $11 = ___cxa_find_matching_catch()|0;
  $12 = tempRet0;
  $13 = ($2|0)==(0|0);
  if (!($13)) {
   __THREW__ = 0;
   (invoke_ii(444,($2|0))|0);
   $14 = __THREW__; __THREW__ = 0;
   $15 = $14&1;
   if ($15) {
    $16 = ___cxa_find_matching_catch(0|0)|0;
    $17 = tempRet0;
    ___clang_call_terminate($16);
    // unreachable;
   }
  }
  ___resumeException($11|0);
  // unreachable;
 }
 $6 = ($2|0)==(0|0);
 if (!($6)) {
  __THREW__ = 0;
  (invoke_ii(444,($2|0))|0);
  $7 = __THREW__; __THREW__ = 0;
  $8 = $7&1;
  if ($8) {
   $9 = ___cxa_find_matching_catch(0|0)|0;
   $10 = tempRet0;
   ___clang_call_terminate($9);
   // unreachable;
  }
 }
 switch ($3|0) {
 case 0: case -1:  {
  $$0 = 2;
  break;
 }
 default: {
  $18 = (($3) + -1)|0;
  $19 = HEAP32[$to_nxt>>2]|0;
  $20 = $to_end;
  $21 = $19;
  $22 = (($20) - ($21))|0;
  $23 = ($18>>>0)>($22>>>0);
  if ($23) {
   $$0 = 1;
  } else {
   $24 = ($18|0)==(0);
   if ($24) {
    $$0 = 0;
   } else {
    $n$02 = $18;$p$03 = $tmp;
    while(1) {
     $25 = ((($p$03)) + 1|0);
     $26 = HEAP8[$p$03>>0]|0;
     $27 = HEAP32[$to_nxt>>2]|0;
     $28 = ((($27)) + 1|0);
     HEAP32[$to_nxt>>2] = $28;
     HEAP8[$27>>0] = $26;
     $29 = (($n$02) + -1)|0;
     $30 = ($29|0)==(0);
     if ($30) {
      $$0 = 0;
      break;
     } else {
      $n$02 = $29;$p$03 = $25;
     }
    }
   }
  }
 }
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 __THREW__ = 0;
 $2 = (invoke_ii(444,($1|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if ($4) {
   label = 16;
  } else {
   __THREW__ = 0;
   $5 = (invoke_iiii(509,(0|0),(0|0),4)|0);
   $6 = __THREW__; __THREW__ = 0;
   $7 = $6&1;
   if ($7) {
    $13 = ___cxa_find_matching_catch(0|0)|0;
    $14 = tempRet0;
    $15 = ($2|0)==(0|0);
    if ($15) {
     $eh$lpad$body$indexZ2D = $13;
     break;
    }
    __THREW__ = 0;
    (invoke_ii(444,($2|0))|0);
    $16 = __THREW__; __THREW__ = 0;
    $17 = $16&1;
    if (!($17)) {
     $eh$lpad$body$indexZ2D = $13;
     break;
    }
    $18 = ___cxa_find_matching_catch(0|0)|0;
    $19 = tempRet0;
    ___clang_call_terminate($18);
    // unreachable;
   }
   $8 = ($2|0)==(0|0);
   if (!($8)) {
    __THREW__ = 0;
    (invoke_ii(444,($2|0))|0);
    $9 = __THREW__; __THREW__ = 0;
    $10 = $9&1;
    if ($10) {
     $11 = ___cxa_find_matching_catch(0|0)|0;
     $12 = tempRet0;
     ___clang_call_terminate($11);
     // unreachable;
    }
   }
   $20 = ($5|0)==(0);
   if ($20) {
    $21 = HEAP32[$0>>2]|0;
    $22 = ($21|0)==(0|0);
    if ($22) {
     $$0 = 1;
    } else {
     __THREW__ = 0;
     $23 = (invoke_ii(444,($21|0))|0);
     $24 = __THREW__; __THREW__ = 0;
     $25 = $24&1;
     if ($25) {
      label = 16;
      break;
     }
     $26 = ($23|0)==(0|0);
     if ($26) {
      $$0 = 0;
     } else {
      __THREW__ = 0;
      (invoke_ii(444,($23|0))|0);
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if ($28) {
       $29 = ___cxa_find_matching_catch(0|0)|0;
       $30 = tempRet0;
       ___clang_call_terminate($29);
       // unreachable;
      } else {
       $$0 = 0;
      }
     }
    }
   } else {
    $$0 = -1;
   }
   return ($$0|0);
  }
 } while(0);
 if ((label|0) == 16) {
  $31 = ___cxa_find_matching_catch(0|0)|0;
  $32 = tempRet0;
  $eh$lpad$body$indexZ2D = $31;
 }
 ___clang_call_terminate($eh$lpad$body$indexZ2D);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$st,$frm,$frm_end,$mx) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $$0115 = 0, $$1 = 0, $$lcssa = 0, $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $nbytes$0$lcssa = 0, $nbytes$016 = 0, $nbytes$1 = 0, $nwchar_t$017 = 0, $or$cond = 0, $or$cond14 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $frm_end;
 $1 = ((($this)) + 8|0);
 $2 = ($mx|0)==(0);
 $3 = ($frm|0)==($frm_end|0);
 $or$cond14 = $3 | $2;
 L1: do {
  if ($or$cond14) {
   $nbytes$0$lcssa = 0;
  } else {
   $$0115 = $frm;$nbytes$016 = 0;$nwchar_t$017 = 0;
   while(1) {
    $4 = $$0115;
    $5 = (($0) - ($4))|0;
    $6 = HEAP32[$1>>2]|0;
    $7 = (_uselocale($6)|0);
    __THREW__ = 0;
    $8 = (invoke_iiii(510,($$0115|0),($5|0),($st|0))|0);
    $9 = __THREW__; __THREW__ = 0;
    $10 = $9&1;
    if ($10) {
     $$lcssa = $7;
     break;
    }
    $11 = ($7|0)==(0|0);
    if (!($11)) {
     __THREW__ = 0;
     (invoke_ii(444,($7|0))|0);
     $12 = __THREW__; __THREW__ = 0;
     $13 = $12&1;
     if ($13) {
      label = 5;
      break;
     }
    }
    switch ($8|0) {
    case -2: case -1:  {
     $nbytes$0$lcssa = $nbytes$016;
     break L1;
     break;
    }
    case 0:  {
     $23 = ((($$0115)) + 1|0);
     $$1 = $23;$$pn = 1;
     break;
    }
    default: {
     $24 = (($$0115) + ($8)|0);
     $$1 = $24;$$pn = $8;
    }
    }
    $nbytes$1 = (($$pn) + ($nbytes$016))|0;
    $25 = (($nwchar_t$017) + 1)|0;
    $26 = ($25>>>0)>=($mx>>>0);
    $27 = ($$1|0)==($frm_end|0);
    $or$cond = $27 | $26;
    if ($or$cond) {
     $nbytes$0$lcssa = $nbytes$1;
     break L1;
    } else {
     $$0115 = $$1;$nbytes$016 = $nbytes$1;$nwchar_t$017 = $25;
    }
   }
   if ((label|0) == 5) {
    $14 = ___cxa_find_matching_catch(0|0)|0;
    $15 = tempRet0;
    ___clang_call_terminate($14);
    // unreachable;
   }
   $16 = ___cxa_find_matching_catch()|0;
   $17 = tempRet0;
   $18 = ($$lcssa|0)==(0|0);
   if (!($18)) {
    __THREW__ = 0;
    (invoke_ii(444,($$lcssa|0))|0);
    $19 = __THREW__; __THREW__ = 0;
    $20 = $19&1;
    if ($20) {
     $21 = ___cxa_find_matching_catch(0|0)|0;
     $22 = tempRet0;
     ___clang_call_terminate($21);
     // unreachable;
    }
   }
   ___resumeException($16|0);
   // unreachable;
  }
 } while(0);
 return ($nbytes$0$lcssa|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $11 = 1;
 } else {
  __THREW__ = 0;
  $3 = (invoke_ii(444,($1|0))|0);
  $4 = __THREW__; __THREW__ = 0;
  $5 = $4&1;
  if ($5) {
   $12 = ___cxa_find_matching_catch(0|0)|0;
   $13 = tempRet0;
   ___clang_call_terminate($12);
   // unreachable;
  }
  $6 = ($3|0)==(0|0);
  if ($6) {
   $11 = 4;
  } else {
   __THREW__ = 0;
   (invoke_ii(444,($3|0))|0);
   $7 = __THREW__; __THREW__ = 0;
   $8 = $7&1;
   if ($8) {
    $9 = ___cxa_find_matching_catch(0|0)|0;
    $10 = tempRet0;
    ___clang_call_terminate($9);
    // unreachable;
   } else {
    $11 = 4;
   }
  }
 }
 return ($11|0);
}
function __ZNSt3__17codecvtIDsc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$frm_end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,1114111,0)|0);
 return ($1|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4;
}
function __ZNSt3__17codecvtIDic11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$frm_end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,1114111,0)|0);
 return ($1|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4;
}
function __ZNSt3__116__narrow_to_utf8ILj32EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__117__widen_from_utf8ILj32EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__18numpunctIcEC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = ((($this)) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = (10556);
 $2 = ((($this)) + 8|0);
 HEAP8[$2>>0] = 46;
 $3 = ((($this)) + 9|0);
 HEAP8[$3>>0] = 44;
 $4 = ((($this)) + 12|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($4)) + 4|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($4)) + 8|0);
 HEAP32[$6>>2] = 0;
 return;
}
function __ZNSt3__18numpunctIwEC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = ((($this)) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = (10596);
 $2 = ((($this)) + 8|0);
 HEAP32[$2>>2] = 46;
 $3 = ((($this)) + 12|0);
 HEAP32[$3>>2] = 44;
 $4 = ((($this)) + 16|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($4)) + 4|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($4)) + 8|0);
 HEAP32[$6>>2] = 0;
 return;
}
function __ZNSt3__18numpunctIcED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (10556);
 $0 = ((($this)) + 12|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 return;
}
function __ZNSt3__18numpunctIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18numpunctIcED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__18numpunctIwED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (10596);
 $0 = ((($this)) + 16|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 return;
}
function __ZNSt3__18numpunctIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18numpunctIwED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18numpunctIcE16do_decimal_pointEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP8[$0>>0]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIwE16do_decimal_pointEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIcE16do_thousands_sepEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 9|0);
 $1 = HEAP8[$0>>0]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIwE16do_thousands_sepEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIcE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result,$0);
 return;
}
function __ZNKSt3__18numpunctIwE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 16|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result,$0);
 return;
}
function __ZNKSt3__18numpunctIcE11do_truenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,26145,4);
 return;
}
function __ZNKSt3__18numpunctIwE11do_truenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen(11168)|0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result,11168,$0);
 return;
}
function __ZNKSt3__18numpunctIcE12do_falsenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,26150,5);
 return;
}
function __ZNKSt3__18numpunctIwE12do_falsenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen(11188)|0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result,11188,$0);
 return;
}
function __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($iob) {
 $iob = $iob|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($iob)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 74;
 switch ($2|0) {
 case 64:  {
  $$0 = 8;
  break;
 }
 case 8:  {
  $$0 = 16;
  break;
 }
 case 0:  {
  $$0 = 0;
  break;
 }
 default: {
  $$0 = 10;
 }
 }
 return ($$0|0);
}
function __ZNKSt3__120__time_get_c_storageIcE7__weeksEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[2248>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((2248|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[2256>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((2256|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $8 = 11212;
      while(1) {
       HEAP32[$8>>2] = 0;
       $9 = ((($8)) + 4|0);
       HEAP32[$9>>2] = 0;
       $10 = ((($8)) + 8|0);
       HEAP32[$10>>2] = 0;
       $11 = ((($8)) + 12|0);
       $12 = ($11|0)==((11380)|0);
       if ($12) {
        break;
       } else {
        $8 = $11;
       }
      }
      (___cxa_atexit((511|0),(0|0),(___dso_handle|0))|0);
      ___cxa_guard_release((2256|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(512,(11212|0),(26156|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    if (!($14)) {
     __THREW__ = 0;
     (invoke_iii(512,((11224)|0),(26163|0))|0);
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      __THREW__ = 0;
      (invoke_iii(512,((11236)|0),(26170|0))|0);
      $17 = __THREW__; __THREW__ = 0;
      $18 = $17&1;
      if (!($18)) {
       __THREW__ = 0;
       (invoke_iii(512,((11248)|0),(26178|0))|0);
       $19 = __THREW__; __THREW__ = 0;
       $20 = $19&1;
       if (!($20)) {
        __THREW__ = 0;
        (invoke_iii(512,((11260)|0),(26188|0))|0);
        $21 = __THREW__; __THREW__ = 0;
        $22 = $21&1;
        if (!($22)) {
         __THREW__ = 0;
         (invoke_iii(512,((11272)|0),(26197|0))|0);
         $23 = __THREW__; __THREW__ = 0;
         $24 = $23&1;
         if (!($24)) {
          __THREW__ = 0;
          (invoke_iii(512,((11284)|0),(26204|0))|0);
          $25 = __THREW__; __THREW__ = 0;
          $26 = $25&1;
          if (!($26)) {
           __THREW__ = 0;
           (invoke_iii(512,((11296)|0),(26213|0))|0);
           $27 = __THREW__; __THREW__ = 0;
           $28 = $27&1;
           if (!($28)) {
            __THREW__ = 0;
            (invoke_iii(512,((11308)|0),(26217|0))|0);
            $29 = __THREW__; __THREW__ = 0;
            $30 = $29&1;
            if (!($30)) {
             __THREW__ = 0;
             (invoke_iii(512,((11320)|0),(26221|0))|0);
             $31 = __THREW__; __THREW__ = 0;
             $32 = $31&1;
             if (!($32)) {
              __THREW__ = 0;
              (invoke_iii(512,((11332)|0),(26225|0))|0);
              $33 = __THREW__; __THREW__ = 0;
              $34 = $33&1;
              if (!($34)) {
               __THREW__ = 0;
               (invoke_iii(512,((11344)|0),(26229|0))|0);
               $35 = __THREW__; __THREW__ = 0;
               $36 = $35&1;
               if (!($36)) {
                __THREW__ = 0;
                (invoke_iii(512,((11356)|0),(26233|0))|0);
                $37 = __THREW__; __THREW__ = 0;
                $38 = $37&1;
                if (!($38)) {
                 __THREW__ = 0;
                 (invoke_iii(512,((11368)|0),(26237|0))|0);
                 $39 = __THREW__; __THREW__ = 0;
                 $40 = $39&1;
                 if (!($40)) {
                  HEAP32[11380>>2] = 11212;
                  ___cxa_guard_release((2248|0));
                  break;
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
    $42 = ___cxa_find_matching_catch()|0;
    $43 = tempRet0;
    ___cxa_guard_abort((2248|0));
    ___resumeException($42|0);
    // unreachable;
   }
  }
 } while(0);
 $41 = HEAP32[11380>>2]|0;
 return ($41|0);
}
function __ZNKSt3__120__time_get_c_storageIwE7__weeksEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[2264>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((2264|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[2272>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((2272|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $8 = 11384;
      while(1) {
       HEAP32[$8>>2] = 0;
       $9 = ((($8)) + 4|0);
       HEAP32[$9>>2] = 0;
       $10 = ((($8)) + 8|0);
       HEAP32[$10>>2] = 0;
       $11 = ((($8)) + 12|0);
       $12 = ($11|0)==((11552)|0);
       if ($12) {
        break;
       } else {
        $8 = $11;
       }
      }
      (___cxa_atexit((513|0),(0|0),(___dso_handle|0))|0);
      ___cxa_guard_release((2272|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(514,(11384|0),(11552|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    if (!($14)) {
     __THREW__ = 0;
     (invoke_iii(514,((11396)|0),(11580|0))|0);
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      __THREW__ = 0;
      (invoke_iii(514,((11408)|0),(11608|0))|0);
      $17 = __THREW__; __THREW__ = 0;
      $18 = $17&1;
      if (!($18)) {
       __THREW__ = 0;
       (invoke_iii(514,((11420)|0),(11640|0))|0);
       $19 = __THREW__; __THREW__ = 0;
       $20 = $19&1;
       if (!($20)) {
        __THREW__ = 0;
        (invoke_iii(514,((11432)|0),(11680|0))|0);
        $21 = __THREW__; __THREW__ = 0;
        $22 = $21&1;
        if (!($22)) {
         __THREW__ = 0;
         (invoke_iii(514,((11444)|0),(11716|0))|0);
         $23 = __THREW__; __THREW__ = 0;
         $24 = $23&1;
         if (!($24)) {
          __THREW__ = 0;
          (invoke_iii(514,((11456)|0),(11744|0))|0);
          $25 = __THREW__; __THREW__ = 0;
          $26 = $25&1;
          if (!($26)) {
           __THREW__ = 0;
           (invoke_iii(514,((11468)|0),(11780|0))|0);
           $27 = __THREW__; __THREW__ = 0;
           $28 = $27&1;
           if (!($28)) {
            __THREW__ = 0;
            (invoke_iii(514,((11480)|0),(11796|0))|0);
            $29 = __THREW__; __THREW__ = 0;
            $30 = $29&1;
            if (!($30)) {
             __THREW__ = 0;
             (invoke_iii(514,((11492)|0),(11812|0))|0);
             $31 = __THREW__; __THREW__ = 0;
             $32 = $31&1;
             if (!($32)) {
              __THREW__ = 0;
              (invoke_iii(514,((11504)|0),(11828|0))|0);
              $33 = __THREW__; __THREW__ = 0;
              $34 = $33&1;
              if (!($34)) {
               __THREW__ = 0;
               (invoke_iii(514,((11516)|0),(11844|0))|0);
               $35 = __THREW__; __THREW__ = 0;
               $36 = $35&1;
               if (!($36)) {
                __THREW__ = 0;
                (invoke_iii(514,((11528)|0),(11860|0))|0);
                $37 = __THREW__; __THREW__ = 0;
                $38 = $37&1;
                if (!($38)) {
                 __THREW__ = 0;
                 (invoke_iii(514,((11540)|0),(11876|0))|0);
                 $39 = __THREW__; __THREW__ = 0;
                 $40 = $39&1;
                 if (!($40)) {
                  HEAP32[11892>>2] = 11384;
                  ___cxa_guard_release((2264|0));
                  break;
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
    $42 = ___cxa_find_matching_catch()|0;
    $43 = tempRet0;
    ___cxa_guard_abort((2264|0));
    ___resumeException($42|0);
    // unreachable;
   }
  }
 } while(0);
 $41 = HEAP32[11892>>2]|0;
 return ($41|0);
}
function __ZNKSt3__120__time_get_c_storageIcE8__monthsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[2280>>0]|0;
 $1 = ($0<<24>>24)==(0);
 L1: do {
  if ($1) {
   $2 = (___cxa_guard_acquire((2280|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[2288>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((2288|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $8 = 11896;
      while(1) {
       HEAP32[$8>>2] = 0;
       $9 = ((($8)) + 4|0);
       HEAP32[$9>>2] = 0;
       $10 = ((($8)) + 8|0);
       HEAP32[$10>>2] = 0;
       $11 = ((($8)) + 12|0);
       $12 = ($11|0)==((12184)|0);
       if ($12) {
        break;
       } else {
        $8 = $11;
       }
      }
      (___cxa_atexit((515|0),(0|0),(___dso_handle|0))|0);
      ___cxa_guard_release((2288|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(512,(11896|0),(26241|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    do {
     if (!($14)) {
      __THREW__ = 0;
      (invoke_iii(512,((11908)|0),(26249|0))|0);
      $15 = __THREW__; __THREW__ = 0;
      $16 = $15&1;
      if (!($16)) {
       __THREW__ = 0;
       (invoke_iii(512,((11920)|0),(26258|0))|0);
       $17 = __THREW__; __THREW__ = 0;
       $18 = $17&1;
       if (!($18)) {
        __THREW__ = 0;
        (invoke_iii(512,((11932)|0),(26264|0))|0);
        $19 = __THREW__; __THREW__ = 0;
        $20 = $19&1;
        if (!($20)) {
         __THREW__ = 0;
         (invoke_iii(512,((11944)|0),(26270|0))|0);
         $21 = __THREW__; __THREW__ = 0;
         $22 = $21&1;
         if (!($22)) {
          __THREW__ = 0;
          (invoke_iii(512,((11956)|0),(26274|0))|0);
          $23 = __THREW__; __THREW__ = 0;
          $24 = $23&1;
          if (!($24)) {
           __THREW__ = 0;
           (invoke_iii(512,((11968)|0),(26279|0))|0);
           $25 = __THREW__; __THREW__ = 0;
           $26 = $25&1;
           if (!($26)) {
            __THREW__ = 0;
            (invoke_iii(512,((11980)|0),(26284|0))|0);
            $27 = __THREW__; __THREW__ = 0;
            $28 = $27&1;
            if (!($28)) {
             __THREW__ = 0;
             (invoke_iii(512,((11992)|0),(26291|0))|0);
             $29 = __THREW__; __THREW__ = 0;
             $30 = $29&1;
             if (!($30)) {
              __THREW__ = 0;
              (invoke_iii(512,((12004)|0),(26301|0))|0);
              $31 = __THREW__; __THREW__ = 0;
              $32 = $31&1;
              if (!($32)) {
               __THREW__ = 0;
               (invoke_iii(512,((12016)|0),(26309|0))|0);
               $33 = __THREW__; __THREW__ = 0;
               $34 = $33&1;
               if (!($34)) {
                __THREW__ = 0;
                (invoke_iii(512,((12028)|0),(26318|0))|0);
                $35 = __THREW__; __THREW__ = 0;
                $36 = $35&1;
                if (!($36)) {
                 __THREW__ = 0;
                 (invoke_iii(512,((12040)|0),(26327|0))|0);
                 $37 = __THREW__; __THREW__ = 0;
                 $38 = $37&1;
                 if (!($38)) {
                  __THREW__ = 0;
                  (invoke_iii(512,((12052)|0),(26331|0))|0);
                  $39 = __THREW__; __THREW__ = 0;
                  $40 = $39&1;
                  if (!($40)) {
                   __THREW__ = 0;
                   (invoke_iii(512,((12064)|0),(26335|0))|0);
                   $41 = __THREW__; __THREW__ = 0;
                   $42 = $41&1;
                   if (!($42)) {
                    __THREW__ = 0;
                    (invoke_iii(512,((12076)|0),(26339|0))|0);
                    $43 = __THREW__; __THREW__ = 0;
                    $44 = $43&1;
                    if ($44) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(512,((12088)|0),(26270|0))|0);
                    $45 = __THREW__; __THREW__ = 0;
                    $46 = $45&1;
                    if ($46) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(512,((12100)|0),(26343|0))|0);
                    $47 = __THREW__; __THREW__ = 0;
                    $48 = $47&1;
                    if ($48) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(512,((12112)|0),(26347|0))|0);
                    $49 = __THREW__; __THREW__ = 0;
                    $50 = $49&1;
                    if ($50) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(512,((12124)|0),(26351|0))|0);
                    $51 = __THREW__; __THREW__ = 0;
                    $52 = $51&1;
                    if ($52) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(512,((12136)|0),(26355|0))|0);
                    $53 = __THREW__; __THREW__ = 0;
                    $54 = $53&1;
                    if ($54) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(512,((12148)|0),(26359|0))|0);
                    $55 = __THREW__; __THREW__ = 0;
                    $56 = $55&1;
                    if ($56) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(512,((12160)|0),(26363|0))|0);
                    $57 = __THREW__; __THREW__ = 0;
                    $58 = $57&1;
                    if ($58) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(512,((12172)|0),(26367|0))|0);
                    $59 = __THREW__; __THREW__ = 0;
                    $60 = $59&1;
                    if ($60) {
                     break;
                    }
                    HEAP32[12184>>2] = 11896;
                    ___cxa_guard_release((2280|0));
                    break L1;
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    } while(0);
    $62 = ___cxa_find_matching_catch()|0;
    $63 = tempRet0;
    ___cxa_guard_abort((2280|0));
    ___resumeException($62|0);
    // unreachable;
   }
  }
 } while(0);
 $61 = HEAP32[12184>>2]|0;
 return ($61|0);
}
function __ZNKSt3__120__time_get_c_storageIwE8__monthsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[2296>>0]|0;
 $1 = ($0<<24>>24)==(0);
 L1: do {
  if ($1) {
   $2 = (___cxa_guard_acquire((2296|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[2304>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((2304|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $8 = 12188;
      while(1) {
       HEAP32[$8>>2] = 0;
       $9 = ((($8)) + 4|0);
       HEAP32[$9>>2] = 0;
       $10 = ((($8)) + 8|0);
       HEAP32[$10>>2] = 0;
       $11 = ((($8)) + 12|0);
       $12 = ($11|0)==((12476)|0);
       if ($12) {
        break;
       } else {
        $8 = $11;
       }
      }
      (___cxa_atexit((516|0),(0|0),(___dso_handle|0))|0);
      ___cxa_guard_release((2304|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(514,(12188|0),(12476|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    do {
     if (!($14)) {
      __THREW__ = 0;
      (invoke_iii(514,((12200)|0),(12508|0))|0);
      $15 = __THREW__; __THREW__ = 0;
      $16 = $15&1;
      if (!($16)) {
       __THREW__ = 0;
       (invoke_iii(514,((12212)|0),(12544|0))|0);
       $17 = __THREW__; __THREW__ = 0;
       $18 = $17&1;
       if (!($18)) {
        __THREW__ = 0;
        (invoke_iii(514,((12224)|0),(12568|0))|0);
        $19 = __THREW__; __THREW__ = 0;
        $20 = $19&1;
        if (!($20)) {
         __THREW__ = 0;
         (invoke_iii(514,((12236)|0),(12592|0))|0);
         $21 = __THREW__; __THREW__ = 0;
         $22 = $21&1;
         if (!($22)) {
          __THREW__ = 0;
          (invoke_iii(514,((12248)|0),(12608|0))|0);
          $23 = __THREW__; __THREW__ = 0;
          $24 = $23&1;
          if (!($24)) {
           __THREW__ = 0;
           (invoke_iii(514,((12260)|0),(12628|0))|0);
           $25 = __THREW__; __THREW__ = 0;
           $26 = $25&1;
           if (!($26)) {
            __THREW__ = 0;
            (invoke_iii(514,((12272)|0),(12648|0))|0);
            $27 = __THREW__; __THREW__ = 0;
            $28 = $27&1;
            if (!($28)) {
             __THREW__ = 0;
             (invoke_iii(514,((12284)|0),(12676|0))|0);
             $29 = __THREW__; __THREW__ = 0;
             $30 = $29&1;
             if (!($30)) {
              __THREW__ = 0;
              (invoke_iii(514,((12296)|0),(12716|0))|0);
              $31 = __THREW__; __THREW__ = 0;
              $32 = $31&1;
              if (!($32)) {
               __THREW__ = 0;
               (invoke_iii(514,((12308)|0),(12748|0))|0);
               $33 = __THREW__; __THREW__ = 0;
               $34 = $33&1;
               if (!($34)) {
                __THREW__ = 0;
                (invoke_iii(514,((12320)|0),(12784|0))|0);
                $35 = __THREW__; __THREW__ = 0;
                $36 = $35&1;
                if (!($36)) {
                 __THREW__ = 0;
                 (invoke_iii(514,((12332)|0),(12820|0))|0);
                 $37 = __THREW__; __THREW__ = 0;
                 $38 = $37&1;
                 if (!($38)) {
                  __THREW__ = 0;
                  (invoke_iii(514,((12344)|0),(12836|0))|0);
                  $39 = __THREW__; __THREW__ = 0;
                  $40 = $39&1;
                  if (!($40)) {
                   __THREW__ = 0;
                   (invoke_iii(514,((12356)|0),(12852|0))|0);
                   $41 = __THREW__; __THREW__ = 0;
                   $42 = $41&1;
                   if (!($42)) {
                    __THREW__ = 0;
                    (invoke_iii(514,((12368)|0),(12868|0))|0);
                    $43 = __THREW__; __THREW__ = 0;
                    $44 = $43&1;
                    if ($44) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(514,((12380)|0),(12592|0))|0);
                    $45 = __THREW__; __THREW__ = 0;
                    $46 = $45&1;
                    if ($46) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(514,((12392)|0),(12884|0))|0);
                    $47 = __THREW__; __THREW__ = 0;
                    $48 = $47&1;
                    if ($48) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(514,((12404)|0),(12900|0))|0);
                    $49 = __THREW__; __THREW__ = 0;
                    $50 = $49&1;
                    if ($50) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(514,((12416)|0),(12916|0))|0);
                    $51 = __THREW__; __THREW__ = 0;
                    $52 = $51&1;
                    if ($52) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(514,((12428)|0),(12932|0))|0);
                    $53 = __THREW__; __THREW__ = 0;
                    $54 = $53&1;
                    if ($54) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(514,((12440)|0),(12948|0))|0);
                    $55 = __THREW__; __THREW__ = 0;
                    $56 = $55&1;
                    if ($56) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(514,((12452)|0),(12964|0))|0);
                    $57 = __THREW__; __THREW__ = 0;
                    $58 = $57&1;
                    if ($58) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(514,((12464)|0),(12980|0))|0);
                    $59 = __THREW__; __THREW__ = 0;
                    $60 = $59&1;
                    if ($60) {
                     break;
                    }
                    HEAP32[12996>>2] = 12188;
                    ___cxa_guard_release((2296|0));
                    break L1;
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    } while(0);
    $62 = ___cxa_find_matching_catch()|0;
    $63 = tempRet0;
    ___cxa_guard_abort((2296|0));
    ___resumeException($62|0);
    // unreachable;
   }
  }
 } while(0);
 $61 = HEAP32[12996>>2]|0;
 return ($61|0);
}
function __ZNKSt3__120__time_get_c_storageIcE7__am_pmEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[2312>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((2312|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[2320>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((2320|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $8 = 13000;
      while(1) {
       HEAP32[$8>>2] = 0;
       $9 = ((($8)) + 4|0);
       HEAP32[$9>>2] = 0;
       $10 = ((($8)) + 8|0);
       HEAP32[$10>>2] = 0;
       $11 = ((($8)) + 12|0);
       $12 = ($11|0)==((13288)|0);
       if ($12) {
        break;
       } else {
        $8 = $11;
       }
      }
      (___cxa_atexit((517|0),(0|0),(___dso_handle|0))|0);
      ___cxa_guard_release((2320|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(512,(13000|0),(26371|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    if (!($14)) {
     __THREW__ = 0;
     (invoke_iii(512,((13012)|0),(26374|0))|0);
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      HEAP32[13288>>2] = 13000;
      ___cxa_guard_release((2312|0));
      break;
     }
    }
    $18 = ___cxa_find_matching_catch()|0;
    $19 = tempRet0;
    ___cxa_guard_abort((2312|0));
    ___resumeException($18|0);
    // unreachable;
   }
  }
 } while(0);
 $17 = HEAP32[13288>>2]|0;
 return ($17|0);
}
function __ZNKSt3__120__time_get_c_storageIwE7__am_pmEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[2328>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((2328|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[2336>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((2336|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $8 = 13292;
      while(1) {
       HEAP32[$8>>2] = 0;
       $9 = ((($8)) + 4|0);
       HEAP32[$9>>2] = 0;
       $10 = ((($8)) + 8|0);
       HEAP32[$10>>2] = 0;
       $11 = ((($8)) + 12|0);
       $12 = ($11|0)==((13580)|0);
       if ($12) {
        break;
       } else {
        $8 = $11;
       }
      }
      (___cxa_atexit((518|0),(0|0),(___dso_handle|0))|0);
      ___cxa_guard_release((2336|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(514,(13292|0),(13580|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    if (!($14)) {
     __THREW__ = 0;
     (invoke_iii(514,((13304)|0),(13592|0))|0);
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      HEAP32[13604>>2] = 13292;
      ___cxa_guard_release((2328|0));
      break;
     }
    }
    $18 = ___cxa_find_matching_catch()|0;
    $19 = tempRet0;
    ___cxa_guard_abort((2328|0));
    ___resumeException($18|0);
    // unreachable;
   }
  }
 } while(0);
 $17 = HEAP32[13604>>2]|0;
 return ($17|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__xEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[2344>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((2344|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    invoke_viii(466,(13608|0),(26377|0),8);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $6 = ___cxa_find_matching_catch()|0;
     $7 = tempRet0;
     ___cxa_guard_abort((2344|0));
     ___resumeException($6|0);
     // unreachable;
    } else {
     (___cxa_atexit((519|0),(13608|0),(___dso_handle|0))|0);
     ___cxa_guard_release((2344|0));
     break;
    }
   }
  }
 } while(0);
 return (13608|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__xEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[2352>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((2352|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_ii(520,(13620|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if (!($6)) {
     __THREW__ = 0;
     invoke_viii(521,(13656|0),(13620|0),($4|0));
     $7 = __THREW__; __THREW__ = 0;
     $8 = $7&1;
     if (!($8)) {
      (___cxa_atexit((522|0),(13656|0),(___dso_handle|0))|0);
      ___cxa_guard_release((2352|0));
      break;
     }
    }
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    ___cxa_guard_abort((2352|0));
    ___resumeException($9|0);
    // unreachable;
   }
  }
 } while(0);
 return (13656|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__XEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[2360>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((2360|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    invoke_viii(466,(13668|0),(26386|0),8);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $6 = ___cxa_find_matching_catch()|0;
     $7 = tempRet0;
     ___cxa_guard_abort((2360|0));
     ___resumeException($6|0);
     // unreachable;
    } else {
     (___cxa_atexit((519|0),(13668|0),(___dso_handle|0))|0);
     ___cxa_guard_release((2360|0));
     break;
    }
   }
  }
 } while(0);
 return (13668|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__XEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[2368>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((2368|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_ii(520,(13680|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if (!($6)) {
     __THREW__ = 0;
     invoke_viii(521,(13716|0),(13680|0),($4|0));
     $7 = __THREW__; __THREW__ = 0;
     $8 = $7&1;
     if (!($8)) {
      (___cxa_atexit((522|0),(13716|0),(___dso_handle|0))|0);
      ___cxa_guard_release((2368|0));
      break;
     }
    }
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    ___cxa_guard_abort((2368|0));
    ___resumeException($9|0);
    // unreachable;
   }
  }
 } while(0);
 return (13716|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__cEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[2376>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((2376|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    invoke_viii(466,(13728|0),(26395|0),20);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $6 = ___cxa_find_matching_catch()|0;
     $7 = tempRet0;
     ___cxa_guard_abort((2376|0));
     ___resumeException($6|0);
     // unreachable;
    } else {
     (___cxa_atexit((519|0),(13728|0),(___dso_handle|0))|0);
     ___cxa_guard_release((2376|0));
     break;
    }
   }
  }
 } while(0);
 return (13728|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__cEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[2384>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((2384|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_ii(520,(13740|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if (!($6)) {
     __THREW__ = 0;
     invoke_viii(521,(13824|0),(13740|0),($4|0));
     $7 = __THREW__; __THREW__ = 0;
     $8 = $7&1;
     if (!($8)) {
      (___cxa_atexit((522|0),(13824|0),(___dso_handle|0))|0);
      ___cxa_guard_release((2384|0));
      break;
     }
    }
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    ___cxa_guard_abort((2384|0));
    ___resumeException($9|0);
    // unreachable;
   }
  }
 } while(0);
 return (13824|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__rEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[2392>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((2392|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    invoke_viii(466,(13836|0),(26416|0),11);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $6 = ___cxa_find_matching_catch()|0;
     $7 = tempRet0;
     ___cxa_guard_abort((2392|0));
     ___resumeException($6|0);
     // unreachable;
    } else {
     (___cxa_atexit((519|0),(13836|0),(___dso_handle|0))|0);
     ___cxa_guard_release((2392|0));
     break;
    }
   }
  }
 } while(0);
 return (13836|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__rEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[2400>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((2400|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_ii(520,(13848|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if (!($6)) {
     __THREW__ = 0;
     invoke_viii(521,(13896|0),(13848|0),($4|0));
     $7 = __THREW__; __THREW__ = 0;
     $8 = $7&1;
     if (!($8)) {
      (___cxa_atexit((522|0),(13896|0),(___dso_handle|0))|0);
      ___cxa_guard_release((2400|0));
      break;
     }
    }
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    ___cxa_guard_abort((2400|0));
    ___resumeException($9|0);
    // unreachable;
   }
  }
 } while(0);
 return (13896|0);
}
function __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (10476);
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 __THREW__ = 0;
 $2 = (invoke_i(429)|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if (!($4)) {
   $5 = ($1|0)==($2|0);
   if (!($5)) {
    $6 = HEAP32[$0>>2]|0;
    __THREW__ = 0;
    invoke_vi(442,($6|0));
    $7 = __THREW__; __THREW__ = 0;
    $8 = $7&1;
    if ($8) {
     break;
    }
   }
   return;
  }
 } while(0);
 $9 = ___cxa_find_matching_catch(0|0)|0;
 $10 = tempRet0;
 ___clang_call_terminate($9);
 // unreachable;
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$__e,$__kb,$__ke,$__ct,$__err,$__case_sensitive) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__kb = $__kb|0;
 $__ke = $__ke|0;
 $__ct = $__ct|0;
 $__err = $__err|0;
 $__case_sensitive = $__case_sensitive|0;
 var $$0$i$i = 0, $$040 = 0, $$085 = 0, $$lcssa = 0, $$lcssa117 = 0, $$ph$ph = 0, $$pre$i$i$i = 0, $$pre$i$i$i12 = 0, $$pre$i2$i$i16 = 0, $$pre$i2$i$i16$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__c$0 = 0, $__consume$0$off0$lcssa = 0, $__consume$0$off090 = 0, $__consume$1$off0 = 0, $__indx$0 = 0, $__kc$0 = 0, $__ky$0104 = 0, $__ky1$091 = 0, $__ky2$098 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$0102 = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0, $__n_does_match$3$lcssa = 0, $__n_does_match$387 = 0, $__n_does_match$4 = 0, $__n_does_match$596 = 0;
 var $__n_does_match$6 = 0, $__n_might_match$0$lcssa = 0, $__n_might_match$0101 = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0, $__n_might_match$3$lcssa = 0, $__n_might_match$386 = 0, $__n_might_match$4 = 0, $__st$0103 = 0, $__st$188 = 0, $__st$297 = 0, $__st$384 = 0, $__statbuf = 0, $__status$0 = 0, $lpad$phi$index = 0, $lpad$phi$index3 = 0, $or$cond = 0, $tmp$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__statbuf = sp;
 $0 = $__ke;
 $1 = $__kb;
 $2 = (($0) - ($1))|0;
 $3 = (($2|0) / 12)&-1;
 $4 = ($3>>>0)>(100);
 do {
  if ($4) {
   $5 = (_malloc($3)|0);
   $6 = ($5|0)==(0|0);
   if ($6) {
    __THREW__ = 0;
    invoke_v(435);
    $7 = __THREW__; __THREW__ = 0;
    $8 = $7&1;
    if ($8) {
     $$ph$ph = 0;
     label = 6;
     break;
    }
   }
   $18 = $5;
   $191 = $18;$__status$0 = $5;
   label = 11;
  } else {
   $191 = 0;$__status$0 = $__statbuf;
   label = 11;
  }
 } while(0);
 L6: do {
  if ((label|0) == 11) {
   $19 = ($__kb|0)==($__ke|0);
   if ($19) {
    $__n_does_match$0$lcssa = 0;$__n_might_match$0$lcssa = $3;
   } else {
    $__ky$0104 = $__kb;$__n_does_match$0102 = 0;$__n_might_match$0101 = $3;$__st$0103 = $__status$0;
    while(1) {
     $22 = HEAP8[$__ky$0104>>0]|0;
     $23 = $22 & 1;
     $24 = ($23<<24>>24)==(0);
     if ($24) {
      $27 = $22&255;
      $28 = $27 >>> 1;
      $30 = $28;
     } else {
      $25 = ((($__ky$0104)) + 4|0);
      $26 = HEAP32[$25>>2]|0;
      $30 = $26;
     }
     $29 = ($30|0)==(0);
     if ($29) {
      HEAP8[$__st$0103>>0] = 2;
      $31 = (($__n_might_match$0101) + -1)|0;
      $32 = (($__n_does_match$0102) + 1)|0;
      $__n_does_match$1 = $32;$__n_might_match$1 = $31;
     } else {
      HEAP8[$__st$0103>>0] = 1;
      $__n_does_match$1 = $__n_does_match$0102;$__n_might_match$1 = $__n_might_match$0101;
     }
     $33 = ((($__ky$0104)) + 12|0);
     $34 = ((($__st$0103)) + 1|0);
     $35 = ($33|0)==($__ke|0);
     if ($35) {
      $__n_does_match$0$lcssa = $__n_does_match$1;$__n_might_match$0$lcssa = $__n_might_match$1;
      break;
     } else {
      $__ky$0104 = $33;$__n_does_match$0102 = $__n_does_match$1;$__n_might_match$0101 = $__n_might_match$1;$__st$0103 = $34;
     }
    }
   }
   $20 = ($__kb|0)==($__ke|0);
   $21 = ($__kb|0)==($__ke|0);
   $__indx$0 = 0;$__n_does_match$2 = $__n_does_match$0$lcssa;$__n_might_match$2 = $__n_might_match$0$lcssa;
   L20: while(1) {
    $36 = HEAP32[$__b>>2]|0;
    $37 = ($36|0)==(0|0);
    do {
     if ($37) {
      $51 = 0;
     } else {
      $38 = ((($36)) + 12|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ((($36)) + 16|0);
      $41 = HEAP32[$40>>2]|0;
      $42 = ($39|0)==($41|0);
      if ($42) {
       $43 = HEAP32[$36>>2]|0;
       $44 = ((($43)) + 36|0);
       $45 = HEAP32[$44>>2]|0;
       __THREW__ = 0;
       $46 = (invoke_ii($45|0,($36|0))|0);
       $47 = __THREW__; __THREW__ = 0;
       $48 = $47&1;
       if ($48) {
        label = 5;
        break L20;
       }
       $49 = ($46|0)==(-1);
       if ($49) {
        HEAP32[$__b>>2] = 0;
        $51 = 0;
        break;
       } else {
        $$pre$i$i$i = HEAP32[$__b>>2]|0;
        $51 = $$pre$i$i$i;
        break;
       }
      } else {
       $51 = $36;
      }
     }
    } while(0);
    $50 = ($51|0)==(0|0);
    $52 = HEAP32[$__e>>2]|0;
    $53 = ($52|0)==(0|0);
    if ($53) {
     $$pre$i2$i$i16 = 0;
    } else {
     $54 = ((($52)) + 12|0);
     $55 = HEAP32[$54>>2]|0;
     $56 = ((($52)) + 16|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = ($55|0)==($57|0);
     if ($58) {
      $59 = HEAP32[$52>>2]|0;
      $60 = ((($59)) + 36|0);
      $61 = HEAP32[$60>>2]|0;
      __THREW__ = 0;
      $62 = (invoke_ii($61|0,($52|0))|0);
      $63 = __THREW__; __THREW__ = 0;
      $64 = $63&1;
      if ($64) {
       label = 5;
       break;
      }
      $65 = ($62|0)==(-1);
      if ($65) {
       HEAP32[$__e>>2] = 0;
       $$pre$i2$i$i16 = 0;
      } else {
       $$pre$i2$i$i16 = $52;
      }
     } else {
      $$pre$i2$i$i16 = $52;
     }
    }
    $66 = ($$pre$i2$i$i16|0)==(0|0);
    $tmp$i$i = $50 ^ $66;
    $67 = ($__n_might_match$2|0)!=(0);
    $68 = $67 & $tmp$i$i;
    $69 = HEAP32[$__b>>2]|0;
    if (!($68)) {
     $$lcssa = $66;$$lcssa117 = $69;$$pre$i2$i$i16$lcssa = $$pre$i2$i$i16;
     label = 64;
     break;
    }
    $70 = ((($69)) + 12|0);
    $71 = HEAP32[$70>>2]|0;
    $72 = ((($69)) + 16|0);
    $73 = HEAP32[$72>>2]|0;
    $74 = ($71|0)==($73|0);
    if ($74) {
     $75 = HEAP32[$69>>2]|0;
     $76 = ((($75)) + 36|0);
     $77 = HEAP32[$76>>2]|0;
     __THREW__ = 0;
     $78 = (invoke_ii($77|0,($69|0))|0);
     $79 = __THREW__; __THREW__ = 0;
     $80 = $79&1;
     if ($80) {
      label = 5;
      break;
     } else {
      $$0$i$i = $78;
     }
    } else {
     $81 = HEAP8[$71>>0]|0;
     $82 = $81&255;
     $$0$i$i = $82;
    }
    $83 = $$0$i$i&255;
    if ($__case_sensitive) {
     $__c$0 = $83;
    } else {
     $84 = HEAP32[$__ct>>2]|0;
     $85 = ((($84)) + 12|0);
     $86 = HEAP32[$85>>2]|0;
     __THREW__ = 0;
     $87 = (invoke_iii($86|0,($__ct|0),($83|0))|0);
     $88 = __THREW__; __THREW__ = 0;
     $89 = $88&1;
     if ($89) {
      label = 5;
      break;
     } else {
      $__c$0 = $87;
     }
    }
    $90 = (($__indx$0) + 1)|0;
    if ($20) {
     $__consume$0$off0$lcssa = 0;$__n_does_match$3$lcssa = $__n_does_match$2;$__n_might_match$3$lcssa = $__n_might_match$2;
    } else {
     $__consume$0$off090 = 0;$__ky1$091 = $__kb;$__n_does_match$387 = $__n_does_match$2;$__n_might_match$386 = $__n_might_match$2;$__st$188 = $__status$0;
     while(1) {
      $91 = HEAP8[$__st$188>>0]|0;
      $92 = ($91<<24>>24)==(1);
      do {
       if ($92) {
        $93 = HEAP8[$__ky1$091>>0]|0;
        $94 = $93 & 1;
        $95 = ($94<<24>>24)==(0);
        if ($95) {
         $98 = ((($__ky1$091)) + 1|0);
         $100 = $98;
        } else {
         $96 = ((($__ky1$091)) + 8|0);
         $97 = HEAP32[$96>>2]|0;
         $100 = $97;
        }
        $99 = (($100) + ($__indx$0)|0);
        $101 = HEAP8[$99>>0]|0;
        if ($__case_sensitive) {
         $__kc$0 = $101;
        } else {
         $102 = HEAP32[$__ct>>2]|0;
         $103 = ((($102)) + 12|0);
         $104 = HEAP32[$103>>2]|0;
         __THREW__ = 0;
         $105 = (invoke_iii($104|0,($__ct|0),($101|0))|0);
         $106 = __THREW__; __THREW__ = 0;
         $107 = $106&1;
         if ($107) {
          label = 4;
          break L20;
         } else {
          $__kc$0 = $105;
         }
        }
        $108 = ($__c$0<<24>>24)==($__kc$0<<24>>24);
        if (!($108)) {
         HEAP8[$__st$188>>0] = 0;
         $120 = (($__n_might_match$386) + -1)|0;
         $__consume$1$off0 = $__consume$0$off090;$__n_does_match$4 = $__n_does_match$387;$__n_might_match$4 = $120;
         break;
        }
        $109 = HEAP8[$__ky1$091>>0]|0;
        $110 = $109 & 1;
        $111 = ($110<<24>>24)==(0);
        if ($111) {
         $114 = $109&255;
         $115 = $114 >>> 1;
         $117 = $115;
        } else {
         $112 = ((($__ky1$091)) + 4|0);
         $113 = HEAP32[$112>>2]|0;
         $117 = $113;
        }
        $116 = ($117|0)==($90|0);
        if ($116) {
         HEAP8[$__st$188>>0] = 2;
         $118 = (($__n_might_match$386) + -1)|0;
         $119 = (($__n_does_match$387) + 1)|0;
         $__consume$1$off0 = 1;$__n_does_match$4 = $119;$__n_might_match$4 = $118;
        } else {
         $__consume$1$off0 = 1;$__n_does_match$4 = $__n_does_match$387;$__n_might_match$4 = $__n_might_match$386;
        }
       } else {
        $__consume$1$off0 = $__consume$0$off090;$__n_does_match$4 = $__n_does_match$387;$__n_might_match$4 = $__n_might_match$386;
       }
      } while(0);
      $121 = ((($__ky1$091)) + 12|0);
      $122 = ((($__st$188)) + 1|0);
      $123 = ($121|0)==($__ke|0);
      if ($123) {
       $__consume$0$off0$lcssa = $__consume$1$off0;$__n_does_match$3$lcssa = $__n_does_match$4;$__n_might_match$3$lcssa = $__n_might_match$4;
       break;
      } else {
       $__consume$0$off090 = $__consume$1$off0;$__ky1$091 = $121;$__n_does_match$387 = $__n_does_match$4;$__n_might_match$386 = $__n_might_match$4;$__st$188 = $122;
      }
     }
    }
    if (!($__consume$0$off0$lcssa)) {
     $__indx$0 = $90;$__n_does_match$2 = $__n_does_match$3$lcssa;$__n_might_match$2 = $__n_might_match$3$lcssa;
     continue;
    }
    $124 = HEAP32[$__b>>2]|0;
    $125 = ((($124)) + 12|0);
    $126 = HEAP32[$125>>2]|0;
    $127 = ((($124)) + 16|0);
    $128 = HEAP32[$127>>2]|0;
    $129 = ($126|0)==($128|0);
    if ($129) {
     $130 = HEAP32[$124>>2]|0;
     $131 = ((($130)) + 40|0);
     $132 = HEAP32[$131>>2]|0;
     __THREW__ = 0;
     (invoke_ii($132|0,($124|0))|0);
     $133 = __THREW__; __THREW__ = 0;
     $134 = $133&1;
     if ($134) {
      label = 5;
      break;
     }
    } else {
     $135 = ((($126)) + 1|0);
     HEAP32[$125>>2] = $135;
    }
    $136 = (($__n_does_match$3$lcssa) + ($__n_might_match$3$lcssa))|0;
    $137 = ($136>>>0)<(2);
    $or$cond = $137 | $21;
    if ($or$cond) {
     $__indx$0 = $90;$__n_does_match$2 = $__n_does_match$3$lcssa;$__n_might_match$2 = $__n_might_match$3$lcssa;
     continue;
    } else {
     $__ky2$098 = $__kb;$__n_does_match$596 = $__n_does_match$3$lcssa;$__st$297 = $__status$0;
    }
    while(1) {
     $138 = HEAP8[$__st$297>>0]|0;
     $139 = ($138<<24>>24)==(2);
     if ($139) {
      $140 = HEAP8[$__ky2$098>>0]|0;
      $141 = $140 & 1;
      $142 = ($141<<24>>24)==(0);
      if ($142) {
       $145 = $140&255;
       $146 = $145 >>> 1;
       $148 = $146;
      } else {
       $143 = ((($__ky2$098)) + 4|0);
       $144 = HEAP32[$143>>2]|0;
       $148 = $144;
      }
      $147 = ($148|0)==($90|0);
      if ($147) {
       $__n_does_match$6 = $__n_does_match$596;
      } else {
       HEAP8[$__st$297>>0] = 0;
       $149 = (($__n_does_match$596) + -1)|0;
       $__n_does_match$6 = $149;
      }
     } else {
      $__n_does_match$6 = $__n_does_match$596;
     }
     $150 = ((($__ky2$098)) + 12|0);
     $151 = ((($__st$297)) + 1|0);
     $152 = ($150|0)==($__ke|0);
     if ($152) {
      $__indx$0 = $90;$__n_does_match$2 = $__n_does_match$6;$__n_might_match$2 = $__n_might_match$3$lcssa;
      continue L20;
     } else {
      $__ky2$098 = $150;$__n_does_match$596 = $__n_does_match$6;$__st$297 = $151;
     }
    }
   }
   if ((label|0) == 4) {
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    $16 = $191;$lpad$phi$index = $9;$lpad$phi$index3 = $10;
    break;
   }
   else if ((label|0) == 5) {
    $11 = ___cxa_find_matching_catch()|0;
    $12 = tempRet0;
    $16 = $191;$lpad$phi$index = $11;$lpad$phi$index3 = $12;
    break;
   }
   else if ((label|0) == 64) {
    $153 = ($$lcssa117|0)==(0|0);
    do {
     if ($153) {
      $167 = 0;
     } else {
      $154 = ((($$lcssa117)) + 12|0);
      $155 = HEAP32[$154>>2]|0;
      $156 = ((($$lcssa117)) + 16|0);
      $157 = HEAP32[$156>>2]|0;
      $158 = ($155|0)==($157|0);
      if ($158) {
       $159 = HEAP32[$$lcssa117>>2]|0;
       $160 = ((($159)) + 36|0);
       $161 = HEAP32[$160>>2]|0;
       __THREW__ = 0;
       $162 = (invoke_ii($161|0,($$lcssa117|0))|0);
       $163 = __THREW__; __THREW__ = 0;
       $164 = $163&1;
       if ($164) {
        $$ph$ph = $191;
        label = 6;
        break L6;
       }
       $165 = ($162|0)==(-1);
       if ($165) {
        HEAP32[$__b>>2] = 0;
        $167 = 0;
        break;
       } else {
        $$pre$i$i$i12 = HEAP32[$__b>>2]|0;
        $167 = $$pre$i$i$i12;
        break;
       }
      } else {
       $167 = $$lcssa117;
      }
     }
    } while(0);
    $166 = ($167|0)==(0|0);
    do {
     if ($$lcssa) {
      label = 76;
     } else {
      $168 = ((($$pre$i2$i$i16$lcssa)) + 12|0);
      $169 = HEAP32[$168>>2]|0;
      $170 = ((($$pre$i2$i$i16$lcssa)) + 16|0);
      $171 = HEAP32[$170>>2]|0;
      $172 = ($169|0)==($171|0);
      if ($172) {
       $173 = HEAP32[$$pre$i2$i$i16$lcssa>>2]|0;
       $174 = ((($173)) + 36|0);
       $175 = HEAP32[$174>>2]|0;
       __THREW__ = 0;
       $176 = (invoke_ii($175|0,($$pre$i2$i$i16$lcssa|0))|0);
       $177 = __THREW__; __THREW__ = 0;
       $178 = $177&1;
       if ($178) {
        $$ph$ph = $191;
        label = 6;
        break L6;
       }
       $179 = ($176|0)==(-1);
       if ($179) {
        HEAP32[$__e>>2] = 0;
        label = 76;
        break;
       }
      }
      if (!($166)) {
       label = 77;
      }
     }
    } while(0);
    if ((label|0) == 76) {
     if ($166) {
      label = 77;
     }
    }
    if ((label|0) == 77) {
     $180 = HEAP32[$__err>>2]|0;
     $181 = $180 | 2;
     HEAP32[$__err>>2] = $181;
    }
    $182 = ($__kb|0)==($__ke|0);
    L105: do {
     if ($182) {
      label = 81;
     } else {
      $$085 = $__kb;$__st$384 = $__status$0;
      while(1) {
       $183 = HEAP8[$__st$384>>0]|0;
       $184 = ($183<<24>>24)==(2);
       if ($184) {
        $$040 = $$085;
        break L105;
       }
       $185 = ((($$085)) + 12|0);
       $186 = ((($__st$384)) + 1|0);
       $187 = ($185|0)==($__ke|0);
       if ($187) {
        label = 81;
        break;
       } else {
        $$085 = $185;$__st$384 = $186;
       }
      }
     }
    } while(0);
    if ((label|0) == 81) {
     $188 = HEAP32[$__err>>2]|0;
     $189 = $188 | 4;
     HEAP32[$__err>>2] = $189;
     $$040 = $__ke;
    }
    $190 = ($191|0)==(0);
    if (!($190)) {
     $192 = $191;
     _free($192);
    }
    STACKTOP = sp;return ($$040|0);
   }
  }
 } while(0);
 if ((label|0) == 6) {
  $13 = ___cxa_find_matching_catch()|0;
  $14 = tempRet0;
  $16 = $$ph$ph;$lpad$phi$index = $13;$lpad$phi$index3 = $14;
 }
 $15 = ($16|0)==(0);
 if (!($15)) {
  $17 = $16;
  _free($17);
 }
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(428,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L4: do {
  if ($10) {
   label = 25;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   $14 = ((($__buf)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($__buf)) + 1|0);
   $17 = $13 ? $16 : $15;
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = ((($__buf)) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L6: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;
    } else {
     $21 = ((($$pre$i$i$i4)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i4)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 24;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $$pre$i$i$i = 0;
      } else {
       $$pre$i$i$i = $$pre$i$i$i4;
      }
     } else {
      $$pre$i$i$i = $$pre$i$i$i4;
     }
    }
    $33 = ($$pre$i$i$i|0)==(0|0);
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 16;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if (!($40)) {
       if ($33) {
        $156 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
      $41 = HEAP32[$34>>2]|0;
      $42 = ((($41)) + 36|0);
      $43 = HEAP32[$42>>2]|0;
      __THREW__ = 0;
      $44 = (invoke_ii($43|0,($34|0))|0);
      $45 = __THREW__; __THREW__ = 0;
      $46 = $45&1;
      if ($46) {
       label = 24;
       break L6;
      }
      $47 = ($44|0)==(-1);
      if ($47) {
       HEAP32[$__e>>2] = 0;
       label = 16;
       break;
      } else {
       if ($33) {
        $156 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 16) {
     label = 0;
     if ($33) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $156 = 0;
     }
    }
    $48 = HEAP32[$__a_end>>2]|0;
    $49 = HEAP8[$__buf>>0]|0;
    $50 = $49 & 1;
    $51 = ($50<<24>>24)==(0);
    $52 = HEAP32[$18>>2]|0;
    $53 = $49&255;
    $54 = $53 >>> 1;
    $55 = $51 ? $54 : $52;
    $56 = (($__a$0) + ($55)|0);
    $57 = ($48|0)==($56|0);
    if ($57) {
     $58 = $55 << 1;
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($58|0),0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      label = 24;
      break;
     }
     $61 = HEAP8[$__buf>>0]|0;
     $62 = $61 & 1;
     $63 = ($62<<24>>24)==(0);
     if ($63) {
      $66 = 10;
     } else {
      $64 = HEAP32[$__buf>>2]|0;
      $65 = $64 & -2;
      $phitmp$i19 = (($65) + -1)|0;
      $66 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($66|0),0);
     $67 = __THREW__; __THREW__ = 0;
     $68 = $67&1;
     if ($68) {
      label = 24;
      break;
     }
     $69 = HEAP8[$__buf>>0]|0;
     $70 = $69 & 1;
     $71 = ($70<<24>>24)==(0);
     $72 = HEAP32[$14>>2]|0;
     $73 = $71 ? $16 : $72;
     $74 = (($73) + ($55)|0);
     HEAP32[$__a_end>>2] = $74;
     $__a$1 = $73;
    } else {
     $__a$1 = $__a$0;
    }
    $79 = ((($$pre$i$i$i)) + 12|0);
    $80 = HEAP32[$79>>2]|0;
    $81 = ((($$pre$i$i$i)) + 16|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($80|0)==($82|0);
    if ($83) {
     $84 = HEAP32[$$pre$i$i$i>>2]|0;
     $85 = ((($84)) + 36|0);
     $86 = HEAP32[$85>>2]|0;
     __THREW__ = 0;
     $87 = (invoke_ii($86|0,($$pre$i$i$i|0))|0);
     $88 = __THREW__; __THREW__ = 0;
     $89 = $88&1;
     if ($89) {
      label = 24;
      break;
     } else {
      $$0$i$i = $87;
     }
    } else {
     $90 = HEAP8[$80>>0]|0;
     $91 = $90&255;
     $$0$i$i = $91;
    }
    $92 = $$0$i$i&255;
    $93 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($92,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $94 = ($93|0)==(0);
    if (!($94)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $156;$__a$2 = $__a$1;
     break;
    }
    $95 = HEAP32[$79>>2]|0;
    $96 = HEAP32[$81>>2]|0;
    $97 = ($95|0)==($96|0);
    if ($97) {
     $98 = HEAP32[$$pre$i$i$i>>2]|0;
     $99 = ((($98)) + 40|0);
     $100 = HEAP32[$99>>2]|0;
     __THREW__ = 0;
     (invoke_ii($100|0,($$pre$i$i$i|0))|0);
     $101 = __THREW__; __THREW__ = 0;
     $102 = $101&1;
     if ($102) {
      label = 24;
      break;
     } else {
      $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $103 = ((($95)) + 1|0);
     HEAP32[$79>>2] = $103;
     $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 24) {
    $75 = ___cxa_find_matching_catch()|0;
    $76 = tempRet0;
    $lpad$phi$index = $75;$lpad$phi$index2 = $76;
    break;
   }
   $104 = HEAP8[$__grouping>>0]|0;
   $105 = $104 & 1;
   $106 = ($105<<24>>24)==(0);
   $107 = ((($__grouping)) + 4|0);
   $108 = HEAP32[$107>>2]|0;
   $109 = $104&255;
   $110 = $109 >>> 1;
   $111 = $106 ? $110 : $108;
   $112 = ($111|0)==(0);
   if (!($112)) {
    $113 = HEAP32[$__g_end>>2]|0;
    $114 = $113;
    $115 = $__g;
    $116 = (($114) - ($115))|0;
    $117 = ($116|0)<(160);
    if ($117) {
     $118 = HEAP32[$__dc>>2]|0;
     $119 = ((($113)) + 4|0);
     HEAP32[$__g_end>>2] = $119;
     HEAP32[$113>>2] = $118;
    }
   }
   $120 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $121 = (invoke_iiiii(523,($__a$2|0),($120|0),($__err|0),($0|0))|0);
   $122 = __THREW__; __THREW__ = 0;
   $123 = $122&1;
   if ($123) {
    label = 25;
   } else {
    HEAP32[$__v>>2] = $121;
    $124 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$124,$__err);
    $125 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($125) {
     $139 = 0;
    } else {
     $126 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $127 = HEAP32[$126>>2]|0;
     $128 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $129 = HEAP32[$128>>2]|0;
     $130 = ($127|0)==($129|0);
     if ($130) {
      $131 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $132 = ((($131)) + 36|0);
      $133 = HEAP32[$132>>2]|0;
      __THREW__ = 0;
      $134 = (invoke_ii($133|0,($$pre$i$i$i$lcssa|0))|0);
      $135 = __THREW__; __THREW__ = 0;
      $136 = $135&1;
      if ($136) {
       label = 25;
       break;
      }
      $137 = ($134|0)==(-1);
      if ($137) {
       HEAP32[$__b>>2] = 0;
       $139 = 0;
      } else {
       $139 = $$pre$i$i$i$lcssa;
      }
     } else {
      $139 = $$pre$i$i$i$lcssa;
     }
    }
    $138 = ($139|0)==(0|0);
    $140 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($140) {
      label = 49;
     } else {
      $141 = ((($$pre$i2$i$i)) + 12|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ((($$pre$i2$i$i)) + 16|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ($142|0)==($144|0);
      if ($145) {
       $146 = HEAP32[$$pre$i2$i$i>>2]|0;
       $147 = ((($146)) + 36|0);
       $148 = HEAP32[$147>>2]|0;
       __THREW__ = 0;
       $149 = (invoke_ii($148|0,($$pre$i2$i$i|0))|0);
       $150 = __THREW__; __THREW__ = 0;
       $151 = $150&1;
       if ($151) {
        label = 25;
        break L4;
       }
       $152 = ($149|0)==(-1);
       if ($152) {
        HEAP32[$__e>>2] = 0;
        label = 49;
        break;
       }
      }
      if (!($138)) {
       label = 50;
      }
     }
    } while(0);
    if ((label|0) == 49) {
     if ($138) {
      label = 50;
     }
    }
    if ((label|0) == 50) {
     $153 = HEAP32[$__err>>2]|0;
     $154 = $153 | 2;
     HEAP32[$__err>>2] = $154;
    }
    $155 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($155|0);
   }
  }
 } while(0);
 if ((label|0) == 25) {
  $77 = ___cxa_find_matching_catch()|0;
  $78 = tempRet0;
  $lpad$phi$index = $77;$lpad$phi$index2 = $78;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0;
 var $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(428,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L4: do {
  if ($10) {
   label = 25;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   $14 = ((($__buf)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($__buf)) + 1|0);
   $17 = $13 ? $16 : $15;
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = ((($__buf)) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L6: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;
    } else {
     $21 = ((($$pre$i$i$i4)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i4)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 24;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $$pre$i$i$i = 0;
      } else {
       $$pre$i$i$i = $$pre$i$i$i4;
      }
     } else {
      $$pre$i$i$i = $$pre$i$i$i4;
     }
    }
    $33 = ($$pre$i$i$i|0)==(0|0);
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 16;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if (!($40)) {
       if ($33) {
        $161 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
      $41 = HEAP32[$34>>2]|0;
      $42 = ((($41)) + 36|0);
      $43 = HEAP32[$42>>2]|0;
      __THREW__ = 0;
      $44 = (invoke_ii($43|0,($34|0))|0);
      $45 = __THREW__; __THREW__ = 0;
      $46 = $45&1;
      if ($46) {
       label = 24;
       break L6;
      }
      $47 = ($44|0)==(-1);
      if ($47) {
       HEAP32[$__e>>2] = 0;
       label = 16;
       break;
      } else {
       if ($33) {
        $161 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 16) {
     label = 0;
     if ($33) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $161 = 0;
     }
    }
    $48 = HEAP32[$__a_end>>2]|0;
    $49 = HEAP8[$__buf>>0]|0;
    $50 = $49 & 1;
    $51 = ($50<<24>>24)==(0);
    $52 = HEAP32[$18>>2]|0;
    $53 = $49&255;
    $54 = $53 >>> 1;
    $55 = $51 ? $54 : $52;
    $56 = (($__a$0) + ($55)|0);
    $57 = ($48|0)==($56|0);
    if ($57) {
     $58 = $55 << 1;
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($58|0),0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      label = 24;
      break;
     }
     $61 = HEAP8[$__buf>>0]|0;
     $62 = $61 & 1;
     $63 = ($62<<24>>24)==(0);
     if ($63) {
      $66 = 10;
     } else {
      $64 = HEAP32[$__buf>>2]|0;
      $65 = $64 & -2;
      $phitmp$i19 = (($65) + -1)|0;
      $66 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($66|0),0);
     $67 = __THREW__; __THREW__ = 0;
     $68 = $67&1;
     if ($68) {
      label = 24;
      break;
     }
     $69 = HEAP8[$__buf>>0]|0;
     $70 = $69 & 1;
     $71 = ($70<<24>>24)==(0);
     $72 = HEAP32[$14>>2]|0;
     $73 = $71 ? $16 : $72;
     $74 = (($73) + ($55)|0);
     HEAP32[$__a_end>>2] = $74;
     $__a$1 = $73;
    } else {
     $__a$1 = $__a$0;
    }
    $79 = ((($$pre$i$i$i)) + 12|0);
    $80 = HEAP32[$79>>2]|0;
    $81 = ((($$pre$i$i$i)) + 16|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($80|0)==($82|0);
    if ($83) {
     $84 = HEAP32[$$pre$i$i$i>>2]|0;
     $85 = ((($84)) + 36|0);
     $86 = HEAP32[$85>>2]|0;
     __THREW__ = 0;
     $87 = (invoke_ii($86|0,($$pre$i$i$i|0))|0);
     $88 = __THREW__; __THREW__ = 0;
     $89 = $88&1;
     if ($89) {
      label = 24;
      break;
     } else {
      $$0$i$i = $87;
     }
    } else {
     $90 = HEAP8[$80>>0]|0;
     $91 = $90&255;
     $$0$i$i = $91;
    }
    $92 = $$0$i$i&255;
    $93 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($92,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $94 = ($93|0)==(0);
    if (!($94)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $161;$__a$2 = $__a$1;
     break;
    }
    $95 = HEAP32[$79>>2]|0;
    $96 = HEAP32[$81>>2]|0;
    $97 = ($95|0)==($96|0);
    if ($97) {
     $98 = HEAP32[$$pre$i$i$i>>2]|0;
     $99 = ((($98)) + 40|0);
     $100 = HEAP32[$99>>2]|0;
     __THREW__ = 0;
     (invoke_ii($100|0,($$pre$i$i$i|0))|0);
     $101 = __THREW__; __THREW__ = 0;
     $102 = $101&1;
     if ($102) {
      label = 24;
      break;
     } else {
      $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $103 = ((($95)) + 1|0);
     HEAP32[$79>>2] = $103;
     $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 24) {
    $75 = ___cxa_find_matching_catch()|0;
    $76 = tempRet0;
    $lpad$phi$index = $75;$lpad$phi$index2 = $76;
    break;
   }
   $104 = HEAP8[$__grouping>>0]|0;
   $105 = $104 & 1;
   $106 = ($105<<24>>24)==(0);
   $107 = ((($__grouping)) + 4|0);
   $108 = HEAP32[$107>>2]|0;
   $109 = $104&255;
   $110 = $109 >>> 1;
   $111 = $106 ? $110 : $108;
   $112 = ($111|0)==(0);
   if (!($112)) {
    $113 = HEAP32[$__g_end>>2]|0;
    $114 = $113;
    $115 = $__g;
    $116 = (($114) - ($115))|0;
    $117 = ($116|0)<(160);
    if ($117) {
     $118 = HEAP32[$__dc>>2]|0;
     $119 = ((($113)) + 4|0);
     HEAP32[$__g_end>>2] = $119;
     HEAP32[$113>>2] = $118;
    }
   }
   $120 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $121 = (invoke_iiiii(524,($__a$2|0),($120|0),($__err|0),($0|0))|0);
   $122 = tempRet0;
   $123 = __THREW__; __THREW__ = 0;
   $124 = $123&1;
   if ($124) {
    label = 25;
   } else {
    $125 = $__v;
    $126 = $125;
    HEAP32[$126>>2] = $121;
    $127 = (($125) + 4)|0;
    $128 = $127;
    HEAP32[$128>>2] = $122;
    $129 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$129,$__err);
    $130 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($130) {
     $144 = 0;
    } else {
     $131 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $132 = HEAP32[$131>>2]|0;
     $133 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = ($132|0)==($134|0);
     if ($135) {
      $136 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $137 = ((($136)) + 36|0);
      $138 = HEAP32[$137>>2]|0;
      __THREW__ = 0;
      $139 = (invoke_ii($138|0,($$pre$i$i$i$lcssa|0))|0);
      $140 = __THREW__; __THREW__ = 0;
      $141 = $140&1;
      if ($141) {
       label = 25;
       break;
      }
      $142 = ($139|0)==(-1);
      if ($142) {
       HEAP32[$__b>>2] = 0;
       $144 = 0;
      } else {
       $144 = $$pre$i$i$i$lcssa;
      }
     } else {
      $144 = $$pre$i$i$i$lcssa;
     }
    }
    $143 = ($144|0)==(0|0);
    $145 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($145) {
      label = 49;
     } else {
      $146 = ((($$pre$i2$i$i)) + 12|0);
      $147 = HEAP32[$146>>2]|0;
      $148 = ((($$pre$i2$i$i)) + 16|0);
      $149 = HEAP32[$148>>2]|0;
      $150 = ($147|0)==($149|0);
      if ($150) {
       $151 = HEAP32[$$pre$i2$i$i>>2]|0;
       $152 = ((($151)) + 36|0);
       $153 = HEAP32[$152>>2]|0;
       __THREW__ = 0;
       $154 = (invoke_ii($153|0,($$pre$i2$i$i|0))|0);
       $155 = __THREW__; __THREW__ = 0;
       $156 = $155&1;
       if ($156) {
        label = 25;
        break L4;
       }
       $157 = ($154|0)==(-1);
       if ($157) {
        HEAP32[$__e>>2] = 0;
        label = 49;
        break;
       }
      }
      if (!($143)) {
       label = 50;
      }
     }
    } while(0);
    if ((label|0) == 49) {
     if ($143) {
      label = 50;
     }
    }
    if ((label|0) == 50) {
     $158 = HEAP32[$__err>>2]|0;
     $159 = $158 | 2;
     HEAP32[$__err>>2] = $159;
    }
    $160 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($160|0);
   }
  }
 } while(0);
 if ((label|0) == 25) {
  $77 = ___cxa_find_matching_catch()|0;
  $78 = tempRet0;
  $lpad$phi$index = $77;$lpad$phi$index2 = $78;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(428,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L4: do {
  if ($10) {
   label = 25;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   $14 = ((($__buf)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($__buf)) + 1|0);
   $17 = $13 ? $16 : $15;
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = ((($__buf)) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L6: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;
    } else {
     $21 = ((($$pre$i$i$i4)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i4)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 24;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $$pre$i$i$i = 0;
      } else {
       $$pre$i$i$i = $$pre$i$i$i4;
      }
     } else {
      $$pre$i$i$i = $$pre$i$i$i4;
     }
    }
    $33 = ($$pre$i$i$i|0)==(0|0);
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 16;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if (!($40)) {
       if ($33) {
        $156 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
      $41 = HEAP32[$34>>2]|0;
      $42 = ((($41)) + 36|0);
      $43 = HEAP32[$42>>2]|0;
      __THREW__ = 0;
      $44 = (invoke_ii($43|0,($34|0))|0);
      $45 = __THREW__; __THREW__ = 0;
      $46 = $45&1;
      if ($46) {
       label = 24;
       break L6;
      }
      $47 = ($44|0)==(-1);
      if ($47) {
       HEAP32[$__e>>2] = 0;
       label = 16;
       break;
      } else {
       if ($33) {
        $156 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 16) {
     label = 0;
     if ($33) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $156 = 0;
     }
    }
    $48 = HEAP32[$__a_end>>2]|0;
    $49 = HEAP8[$__buf>>0]|0;
    $50 = $49 & 1;
    $51 = ($50<<24>>24)==(0);
    $52 = HEAP32[$18>>2]|0;
    $53 = $49&255;
    $54 = $53 >>> 1;
    $55 = $51 ? $54 : $52;
    $56 = (($__a$0) + ($55)|0);
    $57 = ($48|0)==($56|0);
    if ($57) {
     $58 = $55 << 1;
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($58|0),0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      label = 24;
      break;
     }
     $61 = HEAP8[$__buf>>0]|0;
     $62 = $61 & 1;
     $63 = ($62<<24>>24)==(0);
     if ($63) {
      $66 = 10;
     } else {
      $64 = HEAP32[$__buf>>2]|0;
      $65 = $64 & -2;
      $phitmp$i19 = (($65) + -1)|0;
      $66 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($66|0),0);
     $67 = __THREW__; __THREW__ = 0;
     $68 = $67&1;
     if ($68) {
      label = 24;
      break;
     }
     $69 = HEAP8[$__buf>>0]|0;
     $70 = $69 & 1;
     $71 = ($70<<24>>24)==(0);
     $72 = HEAP32[$14>>2]|0;
     $73 = $71 ? $16 : $72;
     $74 = (($73) + ($55)|0);
     HEAP32[$__a_end>>2] = $74;
     $__a$1 = $73;
    } else {
     $__a$1 = $__a$0;
    }
    $79 = ((($$pre$i$i$i)) + 12|0);
    $80 = HEAP32[$79>>2]|0;
    $81 = ((($$pre$i$i$i)) + 16|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($80|0)==($82|0);
    if ($83) {
     $84 = HEAP32[$$pre$i$i$i>>2]|0;
     $85 = ((($84)) + 36|0);
     $86 = HEAP32[$85>>2]|0;
     __THREW__ = 0;
     $87 = (invoke_ii($86|0,($$pre$i$i$i|0))|0);
     $88 = __THREW__; __THREW__ = 0;
     $89 = $88&1;
     if ($89) {
      label = 24;
      break;
     } else {
      $$0$i$i = $87;
     }
    } else {
     $90 = HEAP8[$80>>0]|0;
     $91 = $90&255;
     $$0$i$i = $91;
    }
    $92 = $$0$i$i&255;
    $93 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($92,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $94 = ($93|0)==(0);
    if (!($94)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $156;$__a$2 = $__a$1;
     break;
    }
    $95 = HEAP32[$79>>2]|0;
    $96 = HEAP32[$81>>2]|0;
    $97 = ($95|0)==($96|0);
    if ($97) {
     $98 = HEAP32[$$pre$i$i$i>>2]|0;
     $99 = ((($98)) + 40|0);
     $100 = HEAP32[$99>>2]|0;
     __THREW__ = 0;
     (invoke_ii($100|0,($$pre$i$i$i|0))|0);
     $101 = __THREW__; __THREW__ = 0;
     $102 = $101&1;
     if ($102) {
      label = 24;
      break;
     } else {
      $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $103 = ((($95)) + 1|0);
     HEAP32[$79>>2] = $103;
     $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 24) {
    $75 = ___cxa_find_matching_catch()|0;
    $76 = tempRet0;
    $lpad$phi$index = $75;$lpad$phi$index2 = $76;
    break;
   }
   $104 = HEAP8[$__grouping>>0]|0;
   $105 = $104 & 1;
   $106 = ($105<<24>>24)==(0);
   $107 = ((($__grouping)) + 4|0);
   $108 = HEAP32[$107>>2]|0;
   $109 = $104&255;
   $110 = $109 >>> 1;
   $111 = $106 ? $110 : $108;
   $112 = ($111|0)==(0);
   if (!($112)) {
    $113 = HEAP32[$__g_end>>2]|0;
    $114 = $113;
    $115 = $__g;
    $116 = (($114) - ($115))|0;
    $117 = ($116|0)<(160);
    if ($117) {
     $118 = HEAP32[$__dc>>2]|0;
     $119 = ((($113)) + 4|0);
     HEAP32[$__g_end>>2] = $119;
     HEAP32[$113>>2] = $118;
    }
   }
   $120 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $121 = (invoke_iiiii(525,($__a$2|0),($120|0),($__err|0),($0|0))|0);
   $122 = __THREW__; __THREW__ = 0;
   $123 = $122&1;
   if ($123) {
    label = 25;
   } else {
    HEAP16[$__v>>1] = $121;
    $124 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$124,$__err);
    $125 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($125) {
     $139 = 0;
    } else {
     $126 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $127 = HEAP32[$126>>2]|0;
     $128 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $129 = HEAP32[$128>>2]|0;
     $130 = ($127|0)==($129|0);
     if ($130) {
      $131 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $132 = ((($131)) + 36|0);
      $133 = HEAP32[$132>>2]|0;
      __THREW__ = 0;
      $134 = (invoke_ii($133|0,($$pre$i$i$i$lcssa|0))|0);
      $135 = __THREW__; __THREW__ = 0;
      $136 = $135&1;
      if ($136) {
       label = 25;
       break;
      }
      $137 = ($134|0)==(-1);
      if ($137) {
       HEAP32[$__b>>2] = 0;
       $139 = 0;
      } else {
       $139 = $$pre$i$i$i$lcssa;
      }
     } else {
      $139 = $$pre$i$i$i$lcssa;
     }
    }
    $138 = ($139|0)==(0|0);
    $140 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($140) {
      label = 49;
     } else {
      $141 = ((($$pre$i2$i$i)) + 12|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ((($$pre$i2$i$i)) + 16|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ($142|0)==($144|0);
      if ($145) {
       $146 = HEAP32[$$pre$i2$i$i>>2]|0;
       $147 = ((($146)) + 36|0);
       $148 = HEAP32[$147>>2]|0;
       __THREW__ = 0;
       $149 = (invoke_ii($148|0,($$pre$i2$i$i|0))|0);
       $150 = __THREW__; __THREW__ = 0;
       $151 = $150&1;
       if ($151) {
        label = 25;
        break L4;
       }
       $152 = ($149|0)==(-1);
       if ($152) {
        HEAP32[$__e>>2] = 0;
        label = 49;
        break;
       }
      }
      if (!($138)) {
       label = 50;
      }
     }
    } while(0);
    if ((label|0) == 49) {
     if ($138) {
      label = 50;
     }
    }
    if ((label|0) == 50) {
     $153 = HEAP32[$__err>>2]|0;
     $154 = $153 | 2;
     HEAP32[$__err>>2] = $154;
    }
    $155 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($155|0);
   }
  }
 } while(0);
 if ((label|0) == 25) {
  $77 = ___cxa_find_matching_catch()|0;
  $78 = tempRet0;
  $lpad$phi$index = $77;$lpad$phi$index2 = $78;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(428,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L4: do {
  if ($10) {
   label = 25;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   $14 = ((($__buf)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($__buf)) + 1|0);
   $17 = $13 ? $16 : $15;
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = ((($__buf)) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L6: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;
    } else {
     $21 = ((($$pre$i$i$i4)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i4)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 24;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $$pre$i$i$i = 0;
      } else {
       $$pre$i$i$i = $$pre$i$i$i4;
      }
     } else {
      $$pre$i$i$i = $$pre$i$i$i4;
     }
    }
    $33 = ($$pre$i$i$i|0)==(0|0);
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 16;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if (!($40)) {
       if ($33) {
        $156 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
      $41 = HEAP32[$34>>2]|0;
      $42 = ((($41)) + 36|0);
      $43 = HEAP32[$42>>2]|0;
      __THREW__ = 0;
      $44 = (invoke_ii($43|0,($34|0))|0);
      $45 = __THREW__; __THREW__ = 0;
      $46 = $45&1;
      if ($46) {
       label = 24;
       break L6;
      }
      $47 = ($44|0)==(-1);
      if ($47) {
       HEAP32[$__e>>2] = 0;
       label = 16;
       break;
      } else {
       if ($33) {
        $156 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 16) {
     label = 0;
     if ($33) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $156 = 0;
     }
    }
    $48 = HEAP32[$__a_end>>2]|0;
    $49 = HEAP8[$__buf>>0]|0;
    $50 = $49 & 1;
    $51 = ($50<<24>>24)==(0);
    $52 = HEAP32[$18>>2]|0;
    $53 = $49&255;
    $54 = $53 >>> 1;
    $55 = $51 ? $54 : $52;
    $56 = (($__a$0) + ($55)|0);
    $57 = ($48|0)==($56|0);
    if ($57) {
     $58 = $55 << 1;
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($58|0),0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      label = 24;
      break;
     }
     $61 = HEAP8[$__buf>>0]|0;
     $62 = $61 & 1;
     $63 = ($62<<24>>24)==(0);
     if ($63) {
      $66 = 10;
     } else {
      $64 = HEAP32[$__buf>>2]|0;
      $65 = $64 & -2;
      $phitmp$i19 = (($65) + -1)|0;
      $66 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($66|0),0);
     $67 = __THREW__; __THREW__ = 0;
     $68 = $67&1;
     if ($68) {
      label = 24;
      break;
     }
     $69 = HEAP8[$__buf>>0]|0;
     $70 = $69 & 1;
     $71 = ($70<<24>>24)==(0);
     $72 = HEAP32[$14>>2]|0;
     $73 = $71 ? $16 : $72;
     $74 = (($73) + ($55)|0);
     HEAP32[$__a_end>>2] = $74;
     $__a$1 = $73;
    } else {
     $__a$1 = $__a$0;
    }
    $79 = ((($$pre$i$i$i)) + 12|0);
    $80 = HEAP32[$79>>2]|0;
    $81 = ((($$pre$i$i$i)) + 16|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($80|0)==($82|0);
    if ($83) {
     $84 = HEAP32[$$pre$i$i$i>>2]|0;
     $85 = ((($84)) + 36|0);
     $86 = HEAP32[$85>>2]|0;
     __THREW__ = 0;
     $87 = (invoke_ii($86|0,($$pre$i$i$i|0))|0);
     $88 = __THREW__; __THREW__ = 0;
     $89 = $88&1;
     if ($89) {
      label = 24;
      break;
     } else {
      $$0$i$i = $87;
     }
    } else {
     $90 = HEAP8[$80>>0]|0;
     $91 = $90&255;
     $$0$i$i = $91;
    }
    $92 = $$0$i$i&255;
    $93 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($92,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $94 = ($93|0)==(0);
    if (!($94)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $156;$__a$2 = $__a$1;
     break;
    }
    $95 = HEAP32[$79>>2]|0;
    $96 = HEAP32[$81>>2]|0;
    $97 = ($95|0)==($96|0);
    if ($97) {
     $98 = HEAP32[$$pre$i$i$i>>2]|0;
     $99 = ((($98)) + 40|0);
     $100 = HEAP32[$99>>2]|0;
     __THREW__ = 0;
     (invoke_ii($100|0,($$pre$i$i$i|0))|0);
     $101 = __THREW__; __THREW__ = 0;
     $102 = $101&1;
     if ($102) {
      label = 24;
      break;
     } else {
      $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $103 = ((($95)) + 1|0);
     HEAP32[$79>>2] = $103;
     $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 24) {
    $75 = ___cxa_find_matching_catch()|0;
    $76 = tempRet0;
    $lpad$phi$index = $75;$lpad$phi$index2 = $76;
    break;
   }
   $104 = HEAP8[$__grouping>>0]|0;
   $105 = $104 & 1;
   $106 = ($105<<24>>24)==(0);
   $107 = ((($__grouping)) + 4|0);
   $108 = HEAP32[$107>>2]|0;
   $109 = $104&255;
   $110 = $109 >>> 1;
   $111 = $106 ? $110 : $108;
   $112 = ($111|0)==(0);
   if (!($112)) {
    $113 = HEAP32[$__g_end>>2]|0;
    $114 = $113;
    $115 = $__g;
    $116 = (($114) - ($115))|0;
    $117 = ($116|0)<(160);
    if ($117) {
     $118 = HEAP32[$__dc>>2]|0;
     $119 = ((($113)) + 4|0);
     HEAP32[$__g_end>>2] = $119;
     HEAP32[$113>>2] = $118;
    }
   }
   $120 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $121 = (invoke_iiiii(526,($__a$2|0),($120|0),($__err|0),($0|0))|0);
   $122 = __THREW__; __THREW__ = 0;
   $123 = $122&1;
   if ($123) {
    label = 25;
   } else {
    HEAP32[$__v>>2] = $121;
    $124 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$124,$__err);
    $125 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($125) {
     $139 = 0;
    } else {
     $126 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $127 = HEAP32[$126>>2]|0;
     $128 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $129 = HEAP32[$128>>2]|0;
     $130 = ($127|0)==($129|0);
     if ($130) {
      $131 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $132 = ((($131)) + 36|0);
      $133 = HEAP32[$132>>2]|0;
      __THREW__ = 0;
      $134 = (invoke_ii($133|0,($$pre$i$i$i$lcssa|0))|0);
      $135 = __THREW__; __THREW__ = 0;
      $136 = $135&1;
      if ($136) {
       label = 25;
       break;
      }
      $137 = ($134|0)==(-1);
      if ($137) {
       HEAP32[$__b>>2] = 0;
       $139 = 0;
      } else {
       $139 = $$pre$i$i$i$lcssa;
      }
     } else {
      $139 = $$pre$i$i$i$lcssa;
     }
    }
    $138 = ($139|0)==(0|0);
    $140 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($140) {
      label = 49;
     } else {
      $141 = ((($$pre$i2$i$i)) + 12|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ((($$pre$i2$i$i)) + 16|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ($142|0)==($144|0);
      if ($145) {
       $146 = HEAP32[$$pre$i2$i$i>>2]|0;
       $147 = ((($146)) + 36|0);
       $148 = HEAP32[$147>>2]|0;
       __THREW__ = 0;
       $149 = (invoke_ii($148|0,($$pre$i2$i$i|0))|0);
       $150 = __THREW__; __THREW__ = 0;
       $151 = $150&1;
       if ($151) {
        label = 25;
        break L4;
       }
       $152 = ($149|0)==(-1);
       if ($152) {
        HEAP32[$__e>>2] = 0;
        label = 49;
        break;
       }
      }
      if (!($138)) {
       label = 50;
      }
     }
    } while(0);
    if ((label|0) == 49) {
     if ($138) {
      label = 50;
     }
    }
    if ((label|0) == 50) {
     $153 = HEAP32[$__err>>2]|0;
     $154 = $153 | 2;
     HEAP32[$__err>>2] = $154;
    }
    $155 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($155|0);
   }
  }
 } while(0);
 if ((label|0) == 25) {
  $77 = ___cxa_find_matching_catch()|0;
  $78 = tempRet0;
  $lpad$phi$index = $77;$lpad$phi$index2 = $78;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(428,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L4: do {
  if ($10) {
   label = 25;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   $14 = ((($__buf)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($__buf)) + 1|0);
   $17 = $13 ? $16 : $15;
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = ((($__buf)) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L6: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;
    } else {
     $21 = ((($$pre$i$i$i4)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i4)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 24;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $$pre$i$i$i = 0;
      } else {
       $$pre$i$i$i = $$pre$i$i$i4;
      }
     } else {
      $$pre$i$i$i = $$pre$i$i$i4;
     }
    }
    $33 = ($$pre$i$i$i|0)==(0|0);
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 16;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if (!($40)) {
       if ($33) {
        $156 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
      $41 = HEAP32[$34>>2]|0;
      $42 = ((($41)) + 36|0);
      $43 = HEAP32[$42>>2]|0;
      __THREW__ = 0;
      $44 = (invoke_ii($43|0,($34|0))|0);
      $45 = __THREW__; __THREW__ = 0;
      $46 = $45&1;
      if ($46) {
       label = 24;
       break L6;
      }
      $47 = ($44|0)==(-1);
      if ($47) {
       HEAP32[$__e>>2] = 0;
       label = 16;
       break;
      } else {
       if ($33) {
        $156 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 16) {
     label = 0;
     if ($33) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $156 = 0;
     }
    }
    $48 = HEAP32[$__a_end>>2]|0;
    $49 = HEAP8[$__buf>>0]|0;
    $50 = $49 & 1;
    $51 = ($50<<24>>24)==(0);
    $52 = HEAP32[$18>>2]|0;
    $53 = $49&255;
    $54 = $53 >>> 1;
    $55 = $51 ? $54 : $52;
    $56 = (($__a$0) + ($55)|0);
    $57 = ($48|0)==($56|0);
    if ($57) {
     $58 = $55 << 1;
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($58|0),0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      label = 24;
      break;
     }
     $61 = HEAP8[$__buf>>0]|0;
     $62 = $61 & 1;
     $63 = ($62<<24>>24)==(0);
     if ($63) {
      $66 = 10;
     } else {
      $64 = HEAP32[$__buf>>2]|0;
      $65 = $64 & -2;
      $phitmp$i19 = (($65) + -1)|0;
      $66 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($66|0),0);
     $67 = __THREW__; __THREW__ = 0;
     $68 = $67&1;
     if ($68) {
      label = 24;
      break;
     }
     $69 = HEAP8[$__buf>>0]|0;
     $70 = $69 & 1;
     $71 = ($70<<24>>24)==(0);
     $72 = HEAP32[$14>>2]|0;
     $73 = $71 ? $16 : $72;
     $74 = (($73) + ($55)|0);
     HEAP32[$__a_end>>2] = $74;
     $__a$1 = $73;
    } else {
     $__a$1 = $__a$0;
    }
    $79 = ((($$pre$i$i$i)) + 12|0);
    $80 = HEAP32[$79>>2]|0;
    $81 = ((($$pre$i$i$i)) + 16|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($80|0)==($82|0);
    if ($83) {
     $84 = HEAP32[$$pre$i$i$i>>2]|0;
     $85 = ((($84)) + 36|0);
     $86 = HEAP32[$85>>2]|0;
     __THREW__ = 0;
     $87 = (invoke_ii($86|0,($$pre$i$i$i|0))|0);
     $88 = __THREW__; __THREW__ = 0;
     $89 = $88&1;
     if ($89) {
      label = 24;
      break;
     } else {
      $$0$i$i = $87;
     }
    } else {
     $90 = HEAP8[$80>>0]|0;
     $91 = $90&255;
     $$0$i$i = $91;
    }
    $92 = $$0$i$i&255;
    $93 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($92,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $94 = ($93|0)==(0);
    if (!($94)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $156;$__a$2 = $__a$1;
     break;
    }
    $95 = HEAP32[$79>>2]|0;
    $96 = HEAP32[$81>>2]|0;
    $97 = ($95|0)==($96|0);
    if ($97) {
     $98 = HEAP32[$$pre$i$i$i>>2]|0;
     $99 = ((($98)) + 40|0);
     $100 = HEAP32[$99>>2]|0;
     __THREW__ = 0;
     (invoke_ii($100|0,($$pre$i$i$i|0))|0);
     $101 = __THREW__; __THREW__ = 0;
     $102 = $101&1;
     if ($102) {
      label = 24;
      break;
     } else {
      $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $103 = ((($95)) + 1|0);
     HEAP32[$79>>2] = $103;
     $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 24) {
    $75 = ___cxa_find_matching_catch()|0;
    $76 = tempRet0;
    $lpad$phi$index = $75;$lpad$phi$index2 = $76;
    break;
   }
   $104 = HEAP8[$__grouping>>0]|0;
   $105 = $104 & 1;
   $106 = ($105<<24>>24)==(0);
   $107 = ((($__grouping)) + 4|0);
   $108 = HEAP32[$107>>2]|0;
   $109 = $104&255;
   $110 = $109 >>> 1;
   $111 = $106 ? $110 : $108;
   $112 = ($111|0)==(0);
   if (!($112)) {
    $113 = HEAP32[$__g_end>>2]|0;
    $114 = $113;
    $115 = $__g;
    $116 = (($114) - ($115))|0;
    $117 = ($116|0)<(160);
    if ($117) {
     $118 = HEAP32[$__dc>>2]|0;
     $119 = ((($113)) + 4|0);
     HEAP32[$__g_end>>2] = $119;
     HEAP32[$113>>2] = $118;
    }
   }
   $120 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $121 = (invoke_iiiii(527,($__a$2|0),($120|0),($__err|0),($0|0))|0);
   $122 = __THREW__; __THREW__ = 0;
   $123 = $122&1;
   if ($123) {
    label = 25;
   } else {
    HEAP32[$__v>>2] = $121;
    $124 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$124,$__err);
    $125 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($125) {
     $139 = 0;
    } else {
     $126 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $127 = HEAP32[$126>>2]|0;
     $128 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $129 = HEAP32[$128>>2]|0;
     $130 = ($127|0)==($129|0);
     if ($130) {
      $131 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $132 = ((($131)) + 36|0);
      $133 = HEAP32[$132>>2]|0;
      __THREW__ = 0;
      $134 = (invoke_ii($133|0,($$pre$i$i$i$lcssa|0))|0);
      $135 = __THREW__; __THREW__ = 0;
      $136 = $135&1;
      if ($136) {
       label = 25;
       break;
      }
      $137 = ($134|0)==(-1);
      if ($137) {
       HEAP32[$__b>>2] = 0;
       $139 = 0;
      } else {
       $139 = $$pre$i$i$i$lcssa;
      }
     } else {
      $139 = $$pre$i$i$i$lcssa;
     }
    }
    $138 = ($139|0)==(0|0);
    $140 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($140) {
      label = 49;
     } else {
      $141 = ((($$pre$i2$i$i)) + 12|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ((($$pre$i2$i$i)) + 16|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ($142|0)==($144|0);
      if ($145) {
       $146 = HEAP32[$$pre$i2$i$i>>2]|0;
       $147 = ((($146)) + 36|0);
       $148 = HEAP32[$147>>2]|0;
       __THREW__ = 0;
       $149 = (invoke_ii($148|0,($$pre$i2$i$i|0))|0);
       $150 = __THREW__; __THREW__ = 0;
       $151 = $150&1;
       if ($151) {
        label = 25;
        break L4;
       }
       $152 = ($149|0)==(-1);
       if ($152) {
        HEAP32[$__e>>2] = 0;
        label = 49;
        break;
       }
      }
      if (!($138)) {
       label = 50;
      }
     }
    } while(0);
    if ((label|0) == 49) {
     if ($138) {
      label = 50;
     }
    }
    if ((label|0) == 50) {
     $153 = HEAP32[$__err>>2]|0;
     $154 = $153 | 2;
     HEAP32[$__err>>2] = $154;
    }
    $155 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($155|0);
   }
  }
 } while(0);
 if ((label|0) == 25) {
  $77 = ___cxa_find_matching_catch()|0;
  $78 = tempRet0;
  $lpad$phi$index = $77;$lpad$phi$index2 = $78;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0;
 var $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(428,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L4: do {
  if ($10) {
   label = 25;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   $14 = ((($__buf)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($__buf)) + 1|0);
   $17 = $13 ? $16 : $15;
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = ((($__buf)) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L6: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;
    } else {
     $21 = ((($$pre$i$i$i4)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i4)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 24;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $$pre$i$i$i = 0;
      } else {
       $$pre$i$i$i = $$pre$i$i$i4;
      }
     } else {
      $$pre$i$i$i = $$pre$i$i$i4;
     }
    }
    $33 = ($$pre$i$i$i|0)==(0|0);
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 16;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if (!($40)) {
       if ($33) {
        $161 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
      $41 = HEAP32[$34>>2]|0;
      $42 = ((($41)) + 36|0);
      $43 = HEAP32[$42>>2]|0;
      __THREW__ = 0;
      $44 = (invoke_ii($43|0,($34|0))|0);
      $45 = __THREW__; __THREW__ = 0;
      $46 = $45&1;
      if ($46) {
       label = 24;
       break L6;
      }
      $47 = ($44|0)==(-1);
      if ($47) {
       HEAP32[$__e>>2] = 0;
       label = 16;
       break;
      } else {
       if ($33) {
        $161 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 16) {
     label = 0;
     if ($33) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $161 = 0;
     }
    }
    $48 = HEAP32[$__a_end>>2]|0;
    $49 = HEAP8[$__buf>>0]|0;
    $50 = $49 & 1;
    $51 = ($50<<24>>24)==(0);
    $52 = HEAP32[$18>>2]|0;
    $53 = $49&255;
    $54 = $53 >>> 1;
    $55 = $51 ? $54 : $52;
    $56 = (($__a$0) + ($55)|0);
    $57 = ($48|0)==($56|0);
    if ($57) {
     $58 = $55 << 1;
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($58|0),0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      label = 24;
      break;
     }
     $61 = HEAP8[$__buf>>0]|0;
     $62 = $61 & 1;
     $63 = ($62<<24>>24)==(0);
     if ($63) {
      $66 = 10;
     } else {
      $64 = HEAP32[$__buf>>2]|0;
      $65 = $64 & -2;
      $phitmp$i19 = (($65) + -1)|0;
      $66 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($66|0),0);
     $67 = __THREW__; __THREW__ = 0;
     $68 = $67&1;
     if ($68) {
      label = 24;
      break;
     }
     $69 = HEAP8[$__buf>>0]|0;
     $70 = $69 & 1;
     $71 = ($70<<24>>24)==(0);
     $72 = HEAP32[$14>>2]|0;
     $73 = $71 ? $16 : $72;
     $74 = (($73) + ($55)|0);
     HEAP32[$__a_end>>2] = $74;
     $__a$1 = $73;
    } else {
     $__a$1 = $__a$0;
    }
    $79 = ((($$pre$i$i$i)) + 12|0);
    $80 = HEAP32[$79>>2]|0;
    $81 = ((($$pre$i$i$i)) + 16|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($80|0)==($82|0);
    if ($83) {
     $84 = HEAP32[$$pre$i$i$i>>2]|0;
     $85 = ((($84)) + 36|0);
     $86 = HEAP32[$85>>2]|0;
     __THREW__ = 0;
     $87 = (invoke_ii($86|0,($$pre$i$i$i|0))|0);
     $88 = __THREW__; __THREW__ = 0;
     $89 = $88&1;
     if ($89) {
      label = 24;
      break;
     } else {
      $$0$i$i = $87;
     }
    } else {
     $90 = HEAP8[$80>>0]|0;
     $91 = $90&255;
     $$0$i$i = $91;
    }
    $92 = $$0$i$i&255;
    $93 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($92,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $94 = ($93|0)==(0);
    if (!($94)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $161;$__a$2 = $__a$1;
     break;
    }
    $95 = HEAP32[$79>>2]|0;
    $96 = HEAP32[$81>>2]|0;
    $97 = ($95|0)==($96|0);
    if ($97) {
     $98 = HEAP32[$$pre$i$i$i>>2]|0;
     $99 = ((($98)) + 40|0);
     $100 = HEAP32[$99>>2]|0;
     __THREW__ = 0;
     (invoke_ii($100|0,($$pre$i$i$i|0))|0);
     $101 = __THREW__; __THREW__ = 0;
     $102 = $101&1;
     if ($102) {
      label = 24;
      break;
     } else {
      $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $103 = ((($95)) + 1|0);
     HEAP32[$79>>2] = $103;
     $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 24) {
    $75 = ___cxa_find_matching_catch()|0;
    $76 = tempRet0;
    $lpad$phi$index = $75;$lpad$phi$index2 = $76;
    break;
   }
   $104 = HEAP8[$__grouping>>0]|0;
   $105 = $104 & 1;
   $106 = ($105<<24>>24)==(0);
   $107 = ((($__grouping)) + 4|0);
   $108 = HEAP32[$107>>2]|0;
   $109 = $104&255;
   $110 = $109 >>> 1;
   $111 = $106 ? $110 : $108;
   $112 = ($111|0)==(0);
   if (!($112)) {
    $113 = HEAP32[$__g_end>>2]|0;
    $114 = $113;
    $115 = $__g;
    $116 = (($114) - ($115))|0;
    $117 = ($116|0)<(160);
    if ($117) {
     $118 = HEAP32[$__dc>>2]|0;
     $119 = ((($113)) + 4|0);
     HEAP32[$__g_end>>2] = $119;
     HEAP32[$113>>2] = $118;
    }
   }
   $120 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $121 = (invoke_iiiii(528,($__a$2|0),($120|0),($__err|0),($0|0))|0);
   $122 = tempRet0;
   $123 = __THREW__; __THREW__ = 0;
   $124 = $123&1;
   if ($124) {
    label = 25;
   } else {
    $125 = $__v;
    $126 = $125;
    HEAP32[$126>>2] = $121;
    $127 = (($125) + 4)|0;
    $128 = $127;
    HEAP32[$128>>2] = $122;
    $129 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$129,$__err);
    $130 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($130) {
     $144 = 0;
    } else {
     $131 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $132 = HEAP32[$131>>2]|0;
     $133 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = ($132|0)==($134|0);
     if ($135) {
      $136 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $137 = ((($136)) + 36|0);
      $138 = HEAP32[$137>>2]|0;
      __THREW__ = 0;
      $139 = (invoke_ii($138|0,($$pre$i$i$i$lcssa|0))|0);
      $140 = __THREW__; __THREW__ = 0;
      $141 = $140&1;
      if ($141) {
       label = 25;
       break;
      }
      $142 = ($139|0)==(-1);
      if ($142) {
       HEAP32[$__b>>2] = 0;
       $144 = 0;
      } else {
       $144 = $$pre$i$i$i$lcssa;
      }
     } else {
      $144 = $$pre$i$i$i$lcssa;
     }
    }
    $143 = ($144|0)==(0|0);
    $145 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($145) {
      label = 49;
     } else {
      $146 = ((($$pre$i2$i$i)) + 12|0);
      $147 = HEAP32[$146>>2]|0;
      $148 = ((($$pre$i2$i$i)) + 16|0);
      $149 = HEAP32[$148>>2]|0;
      $150 = ($147|0)==($149|0);
      if ($150) {
       $151 = HEAP32[$$pre$i2$i$i>>2]|0;
       $152 = ((($151)) + 36|0);
       $153 = HEAP32[$152>>2]|0;
       __THREW__ = 0;
       $154 = (invoke_ii($153|0,($$pre$i2$i$i|0))|0);
       $155 = __THREW__; __THREW__ = 0;
       $156 = $155&1;
       if ($156) {
        label = 25;
        break L4;
       }
       $157 = ($154|0)==(-1);
       if ($157) {
        HEAP32[$__e>>2] = 0;
        label = 49;
        break;
       }
      }
      if (!($143)) {
       label = 50;
      }
     }
    } while(0);
    if ((label|0) == 49) {
     if ($143) {
      label = 50;
     }
    }
    if ((label|0) == 50) {
     $158 = HEAP32[$__err>>2]|0;
     $159 = $158 | 2;
     HEAP32[$__err>>2] = $159;
    }
    $160 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($160|0);
   }
  }
 } while(0);
 if ((label|0) == 25) {
  $77 = ___cxa_find_matching_catch()|0;
  $78 = tempRet0;
  $lpad$phi$index = $77;$lpad$phi$index2 = $78;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0.0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0;
 var $lpad$phi$index2 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i20 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(428,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L4: do {
  if ($9) {
   label = 25;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__buf)) + 8|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ((($__buf)) + 1|0);
   $16 = $12 ? $15 : $14;
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = ((($__buf)) + 4|0);
   $18 = HEAP8[$__decimal_point>>0]|0;
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $16;
   L6: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;
    } else {
     $21 = ((($$pre$i$i$i5)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i5)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 24;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $$pre$i$i$i = 0;
      } else {
       $$pre$i$i$i = $$pre$i$i$i5;
      }
     } else {
      $$pre$i$i$i = $$pre$i$i$i5;
     }
    }
    $33 = ($$pre$i$i$i|0)==(0|0);
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 16;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if (!($40)) {
       if ($33) {
        $158 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
      $41 = HEAP32[$34>>2]|0;
      $42 = ((($41)) + 36|0);
      $43 = HEAP32[$42>>2]|0;
      __THREW__ = 0;
      $44 = (invoke_ii($43|0,($34|0))|0);
      $45 = __THREW__; __THREW__ = 0;
      $46 = $45&1;
      if ($46) {
       label = 24;
       break L6;
      }
      $47 = ($44|0)==(-1);
      if ($47) {
       HEAP32[$__e>>2] = 0;
       label = 16;
       break;
      } else {
       if ($33) {
        $158 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 16) {
     label = 0;
     if ($33) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $158 = 0;
     }
    }
    $48 = HEAP32[$__a_end>>2]|0;
    $49 = HEAP8[$__buf>>0]|0;
    $50 = $49 & 1;
    $51 = ($50<<24>>24)==(0);
    $52 = HEAP32[$17>>2]|0;
    $53 = $49&255;
    $54 = $53 >>> 1;
    $55 = $51 ? $54 : $52;
    $56 = (($__a$0) + ($55)|0);
    $57 = ($48|0)==($56|0);
    if ($57) {
     $58 = $55 << 1;
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($58|0),0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      label = 24;
      break;
     }
     $61 = HEAP8[$__buf>>0]|0;
     $62 = $61 & 1;
     $63 = ($62<<24>>24)==(0);
     if ($63) {
      $66 = 10;
     } else {
      $64 = HEAP32[$__buf>>2]|0;
      $65 = $64 & -2;
      $phitmp$i20 = (($65) + -1)|0;
      $66 = $phitmp$i20;
     }
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($66|0),0);
     $67 = __THREW__; __THREW__ = 0;
     $68 = $67&1;
     if ($68) {
      label = 24;
      break;
     }
     $69 = HEAP8[$__buf>>0]|0;
     $70 = $69 & 1;
     $71 = ($70<<24>>24)==(0);
     $72 = HEAP32[$13>>2]|0;
     $73 = $71 ? $15 : $72;
     $74 = (($73) + ($55)|0);
     HEAP32[$__a_end>>2] = $74;
     $__a$1 = $73;
    } else {
     $__a$1 = $__a$0;
    }
    $79 = ((($$pre$i$i$i)) + 12|0);
    $80 = HEAP32[$79>>2]|0;
    $81 = ((($$pre$i$i$i)) + 16|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($80|0)==($82|0);
    if ($83) {
     $84 = HEAP32[$$pre$i$i$i>>2]|0;
     $85 = ((($84)) + 36|0);
     $86 = HEAP32[$85>>2]|0;
     __THREW__ = 0;
     $87 = (invoke_ii($86|0,($$pre$i$i$i|0))|0);
     $88 = __THREW__; __THREW__ = 0;
     $89 = $88&1;
     if ($89) {
      label = 24;
      break;
     } else {
      $$0$i$i = $87;
     }
    } else {
     $90 = HEAP8[$80>>0]|0;
     $91 = $90&255;
     $$0$i$i = $91;
    }
    $92 = $$0$i$i&255;
    $93 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($92,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $94 = ($93|0)==(0);
    if (!($94)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $158;$__a$2 = $__a$1;
     break;
    }
    $95 = HEAP32[$79>>2]|0;
    $96 = HEAP32[$81>>2]|0;
    $97 = ($95|0)==($96|0);
    if ($97) {
     $98 = HEAP32[$$pre$i$i$i>>2]|0;
     $99 = ((($98)) + 40|0);
     $100 = HEAP32[$99>>2]|0;
     __THREW__ = 0;
     (invoke_ii($100|0,($$pre$i$i$i|0))|0);
     $101 = __THREW__; __THREW__ = 0;
     $102 = $101&1;
     if ($102) {
      label = 24;
      break;
     } else {
      $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $103 = ((($95)) + 1|0);
     HEAP32[$79>>2] = $103;
     $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 24) {
    $75 = ___cxa_find_matching_catch()|0;
    $76 = tempRet0;
    $lpad$phi$index = $75;$lpad$phi$index2 = $76;
    break;
   }
   $104 = HEAP8[$__grouping>>0]|0;
   $105 = $104 & 1;
   $106 = ($105<<24>>24)==(0);
   $107 = ((($__grouping)) + 4|0);
   $108 = HEAP32[$107>>2]|0;
   $109 = $104&255;
   $110 = $109 >>> 1;
   $111 = $106 ? $110 : $108;
   $112 = ($111|0)==(0);
   $113 = HEAP8[$__in_units>>0]|0;
   $114 = ($113<<24>>24)==(0);
   $or$cond = $114 | $112;
   if (!($or$cond)) {
    $115 = HEAP32[$__g_end>>2]|0;
    $116 = $115;
    $117 = $__g;
    $118 = (($116) - ($117))|0;
    $119 = ($118|0)<(160);
    if ($119) {
     $120 = HEAP32[$__dc>>2]|0;
     $121 = ((($115)) + 4|0);
     HEAP32[$__g_end>>2] = $121;
     HEAP32[$115>>2] = $120;
    }
   }
   $122 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $123 = (+invoke_diii(529,($__a$2|0),($122|0),($__err|0)));
   $124 = __THREW__; __THREW__ = 0;
   $125 = $124&1;
   if ($125) {
    label = 25;
   } else {
    HEAPF32[$__v>>2] = $123;
    $126 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$126,$__err);
    $127 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($127) {
     $141 = 0;
    } else {
     $128 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $129 = HEAP32[$128>>2]|0;
     $130 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $131 = HEAP32[$130>>2]|0;
     $132 = ($129|0)==($131|0);
     if ($132) {
      $133 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $134 = ((($133)) + 36|0);
      $135 = HEAP32[$134>>2]|0;
      __THREW__ = 0;
      $136 = (invoke_ii($135|0,($$pre$i$i$i$lcssa|0))|0);
      $137 = __THREW__; __THREW__ = 0;
      $138 = $137&1;
      if ($138) {
       label = 25;
       break;
      }
      $139 = ($136|0)==(-1);
      if ($139) {
       HEAP32[$__b>>2] = 0;
       $141 = 0;
      } else {
       $141 = $$pre$i$i$i$lcssa;
      }
     } else {
      $141 = $$pre$i$i$i$lcssa;
     }
    }
    $140 = ($141|0)==(0|0);
    $142 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($142) {
      label = 49;
     } else {
      $143 = ((($$pre$i2$i$i)) + 12|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ((($$pre$i2$i$i)) + 16|0);
      $146 = HEAP32[$145>>2]|0;
      $147 = ($144|0)==($146|0);
      if ($147) {
       $148 = HEAP32[$$pre$i2$i$i>>2]|0;
       $149 = ((($148)) + 36|0);
       $150 = HEAP32[$149>>2]|0;
       __THREW__ = 0;
       $151 = (invoke_ii($150|0,($$pre$i2$i$i|0))|0);
       $152 = __THREW__; __THREW__ = 0;
       $153 = $152&1;
       if ($153) {
        label = 25;
        break L4;
       }
       $154 = ($151|0)==(-1);
       if ($154) {
        HEAP32[$__e>>2] = 0;
        label = 49;
        break;
       }
      }
      if (!($140)) {
       label = 50;
      }
     }
    } while(0);
    if ((label|0) == 49) {
     if ($140) {
      label = 50;
     }
    }
    if ((label|0) == 50) {
     $155 = HEAP32[$__err>>2]|0;
     $156 = $155 | 2;
     HEAP32[$__err>>2] = $156;
    }
    $157 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($157|0);
   }
  }
 } while(0);
 if ((label|0) == 25) {
  $77 = ___cxa_find_matching_catch()|0;
  $78 = tempRet0;
  $lpad$phi$index = $77;$lpad$phi$index2 = $78;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0.0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0;
 var $lpad$phi$index2 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i20 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(428,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L4: do {
  if ($9) {
   label = 25;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__buf)) + 8|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ((($__buf)) + 1|0);
   $16 = $12 ? $15 : $14;
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = ((($__buf)) + 4|0);
   $18 = HEAP8[$__decimal_point>>0]|0;
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $16;
   L6: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;
    } else {
     $21 = ((($$pre$i$i$i5)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i5)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 24;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $$pre$i$i$i = 0;
      } else {
       $$pre$i$i$i = $$pre$i$i$i5;
      }
     } else {
      $$pre$i$i$i = $$pre$i$i$i5;
     }
    }
    $33 = ($$pre$i$i$i|0)==(0|0);
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 16;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if (!($40)) {
       if ($33) {
        $158 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
      $41 = HEAP32[$34>>2]|0;
      $42 = ((($41)) + 36|0);
      $43 = HEAP32[$42>>2]|0;
      __THREW__ = 0;
      $44 = (invoke_ii($43|0,($34|0))|0);
      $45 = __THREW__; __THREW__ = 0;
      $46 = $45&1;
      if ($46) {
       label = 24;
       break L6;
      }
      $47 = ($44|0)==(-1);
      if ($47) {
       HEAP32[$__e>>2] = 0;
       label = 16;
       break;
      } else {
       if ($33) {
        $158 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 16) {
     label = 0;
     if ($33) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $158 = 0;
     }
    }
    $48 = HEAP32[$__a_end>>2]|0;
    $49 = HEAP8[$__buf>>0]|0;
    $50 = $49 & 1;
    $51 = ($50<<24>>24)==(0);
    $52 = HEAP32[$17>>2]|0;
    $53 = $49&255;
    $54 = $53 >>> 1;
    $55 = $51 ? $54 : $52;
    $56 = (($__a$0) + ($55)|0);
    $57 = ($48|0)==($56|0);
    if ($57) {
     $58 = $55 << 1;
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($58|0),0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      label = 24;
      break;
     }
     $61 = HEAP8[$__buf>>0]|0;
     $62 = $61 & 1;
     $63 = ($62<<24>>24)==(0);
     if ($63) {
      $66 = 10;
     } else {
      $64 = HEAP32[$__buf>>2]|0;
      $65 = $64 & -2;
      $phitmp$i20 = (($65) + -1)|0;
      $66 = $phitmp$i20;
     }
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($66|0),0);
     $67 = __THREW__; __THREW__ = 0;
     $68 = $67&1;
     if ($68) {
      label = 24;
      break;
     }
     $69 = HEAP8[$__buf>>0]|0;
     $70 = $69 & 1;
     $71 = ($70<<24>>24)==(0);
     $72 = HEAP32[$13>>2]|0;
     $73 = $71 ? $15 : $72;
     $74 = (($73) + ($55)|0);
     HEAP32[$__a_end>>2] = $74;
     $__a$1 = $73;
    } else {
     $__a$1 = $__a$0;
    }
    $79 = ((($$pre$i$i$i)) + 12|0);
    $80 = HEAP32[$79>>2]|0;
    $81 = ((($$pre$i$i$i)) + 16|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($80|0)==($82|0);
    if ($83) {
     $84 = HEAP32[$$pre$i$i$i>>2]|0;
     $85 = ((($84)) + 36|0);
     $86 = HEAP32[$85>>2]|0;
     __THREW__ = 0;
     $87 = (invoke_ii($86|0,($$pre$i$i$i|0))|0);
     $88 = __THREW__; __THREW__ = 0;
     $89 = $88&1;
     if ($89) {
      label = 24;
      break;
     } else {
      $$0$i$i = $87;
     }
    } else {
     $90 = HEAP8[$80>>0]|0;
     $91 = $90&255;
     $$0$i$i = $91;
    }
    $92 = $$0$i$i&255;
    $93 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($92,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $94 = ($93|0)==(0);
    if (!($94)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $158;$__a$2 = $__a$1;
     break;
    }
    $95 = HEAP32[$79>>2]|0;
    $96 = HEAP32[$81>>2]|0;
    $97 = ($95|0)==($96|0);
    if ($97) {
     $98 = HEAP32[$$pre$i$i$i>>2]|0;
     $99 = ((($98)) + 40|0);
     $100 = HEAP32[$99>>2]|0;
     __THREW__ = 0;
     (invoke_ii($100|0,($$pre$i$i$i|0))|0);
     $101 = __THREW__; __THREW__ = 0;
     $102 = $101&1;
     if ($102) {
      label = 24;
      break;
     } else {
      $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $103 = ((($95)) + 1|0);
     HEAP32[$79>>2] = $103;
     $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 24) {
    $75 = ___cxa_find_matching_catch()|0;
    $76 = tempRet0;
    $lpad$phi$index = $75;$lpad$phi$index2 = $76;
    break;
   }
   $104 = HEAP8[$__grouping>>0]|0;
   $105 = $104 & 1;
   $106 = ($105<<24>>24)==(0);
   $107 = ((($__grouping)) + 4|0);
   $108 = HEAP32[$107>>2]|0;
   $109 = $104&255;
   $110 = $109 >>> 1;
   $111 = $106 ? $110 : $108;
   $112 = ($111|0)==(0);
   $113 = HEAP8[$__in_units>>0]|0;
   $114 = ($113<<24>>24)==(0);
   $or$cond = $114 | $112;
   if (!($or$cond)) {
    $115 = HEAP32[$__g_end>>2]|0;
    $116 = $115;
    $117 = $__g;
    $118 = (($116) - ($117))|0;
    $119 = ($118|0)<(160);
    if ($119) {
     $120 = HEAP32[$__dc>>2]|0;
     $121 = ((($115)) + 4|0);
     HEAP32[$__g_end>>2] = $121;
     HEAP32[$115>>2] = $120;
    }
   }
   $122 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $123 = (+invoke_diii(530,($__a$2|0),($122|0),($__err|0)));
   $124 = __THREW__; __THREW__ = 0;
   $125 = $124&1;
   if ($125) {
    label = 25;
   } else {
    HEAPF64[$__v>>3] = $123;
    $126 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$126,$__err);
    $127 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($127) {
     $141 = 0;
    } else {
     $128 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $129 = HEAP32[$128>>2]|0;
     $130 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $131 = HEAP32[$130>>2]|0;
     $132 = ($129|0)==($131|0);
     if ($132) {
      $133 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $134 = ((($133)) + 36|0);
      $135 = HEAP32[$134>>2]|0;
      __THREW__ = 0;
      $136 = (invoke_ii($135|0,($$pre$i$i$i$lcssa|0))|0);
      $137 = __THREW__; __THREW__ = 0;
      $138 = $137&1;
      if ($138) {
       label = 25;
       break;
      }
      $139 = ($136|0)==(-1);
      if ($139) {
       HEAP32[$__b>>2] = 0;
       $141 = 0;
      } else {
       $141 = $$pre$i$i$i$lcssa;
      }
     } else {
      $141 = $$pre$i$i$i$lcssa;
     }
    }
    $140 = ($141|0)==(0|0);
    $142 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($142) {
      label = 49;
     } else {
      $143 = ((($$pre$i2$i$i)) + 12|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ((($$pre$i2$i$i)) + 16|0);
      $146 = HEAP32[$145>>2]|0;
      $147 = ($144|0)==($146|0);
      if ($147) {
       $148 = HEAP32[$$pre$i2$i$i>>2]|0;
       $149 = ((($148)) + 36|0);
       $150 = HEAP32[$149>>2]|0;
       __THREW__ = 0;
       $151 = (invoke_ii($150|0,($$pre$i2$i$i|0))|0);
       $152 = __THREW__; __THREW__ = 0;
       $153 = $152&1;
       if ($153) {
        label = 25;
        break L4;
       }
       $154 = ($151|0)==(-1);
       if ($154) {
        HEAP32[$__e>>2] = 0;
        label = 49;
        break;
       }
      }
      if (!($140)) {
       label = 50;
      }
     }
    } while(0);
    if ((label|0) == 49) {
     if ($140) {
      label = 50;
     }
    }
    if ((label|0) == 50) {
     $155 = HEAP32[$__err>>2]|0;
     $156 = $155 | 2;
     HEAP32[$__err>>2] = $156;
    }
    $157 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($157|0);
   }
  }
 } while(0);
 if ((label|0) == 25) {
  $77 = ___cxa_find_matching_catch()|0;
  $78 = tempRet0;
  $lpad$phi$index = $77;$lpad$phi$index2 = $78;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0.0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0;
 var $lpad$phi$index2 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i20 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(428,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L4: do {
  if ($9) {
   label = 25;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__buf)) + 8|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ((($__buf)) + 1|0);
   $16 = $12 ? $15 : $14;
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = ((($__buf)) + 4|0);
   $18 = HEAP8[$__decimal_point>>0]|0;
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $16;
   L6: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;
    } else {
     $21 = ((($$pre$i$i$i5)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i5)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 24;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $$pre$i$i$i = 0;
      } else {
       $$pre$i$i$i = $$pre$i$i$i5;
      }
     } else {
      $$pre$i$i$i = $$pre$i$i$i5;
     }
    }
    $33 = ($$pre$i$i$i|0)==(0|0);
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 16;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if (!($40)) {
       if ($33) {
        $158 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
      $41 = HEAP32[$34>>2]|0;
      $42 = ((($41)) + 36|0);
      $43 = HEAP32[$42>>2]|0;
      __THREW__ = 0;
      $44 = (invoke_ii($43|0,($34|0))|0);
      $45 = __THREW__; __THREW__ = 0;
      $46 = $45&1;
      if ($46) {
       label = 24;
       break L6;
      }
      $47 = ($44|0)==(-1);
      if ($47) {
       HEAP32[$__e>>2] = 0;
       label = 16;
       break;
      } else {
       if ($33) {
        $158 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 16) {
     label = 0;
     if ($33) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $158 = 0;
     }
    }
    $48 = HEAP32[$__a_end>>2]|0;
    $49 = HEAP8[$__buf>>0]|0;
    $50 = $49 & 1;
    $51 = ($50<<24>>24)==(0);
    $52 = HEAP32[$17>>2]|0;
    $53 = $49&255;
    $54 = $53 >>> 1;
    $55 = $51 ? $54 : $52;
    $56 = (($__a$0) + ($55)|0);
    $57 = ($48|0)==($56|0);
    if ($57) {
     $58 = $55 << 1;
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($58|0),0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      label = 24;
      break;
     }
     $61 = HEAP8[$__buf>>0]|0;
     $62 = $61 & 1;
     $63 = ($62<<24>>24)==(0);
     if ($63) {
      $66 = 10;
     } else {
      $64 = HEAP32[$__buf>>2]|0;
      $65 = $64 & -2;
      $phitmp$i20 = (($65) + -1)|0;
      $66 = $phitmp$i20;
     }
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($66|0),0);
     $67 = __THREW__; __THREW__ = 0;
     $68 = $67&1;
     if ($68) {
      label = 24;
      break;
     }
     $69 = HEAP8[$__buf>>0]|0;
     $70 = $69 & 1;
     $71 = ($70<<24>>24)==(0);
     $72 = HEAP32[$13>>2]|0;
     $73 = $71 ? $15 : $72;
     $74 = (($73) + ($55)|0);
     HEAP32[$__a_end>>2] = $74;
     $__a$1 = $73;
    } else {
     $__a$1 = $__a$0;
    }
    $79 = ((($$pre$i$i$i)) + 12|0);
    $80 = HEAP32[$79>>2]|0;
    $81 = ((($$pre$i$i$i)) + 16|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($80|0)==($82|0);
    if ($83) {
     $84 = HEAP32[$$pre$i$i$i>>2]|0;
     $85 = ((($84)) + 36|0);
     $86 = HEAP32[$85>>2]|0;
     __THREW__ = 0;
     $87 = (invoke_ii($86|0,($$pre$i$i$i|0))|0);
     $88 = __THREW__; __THREW__ = 0;
     $89 = $88&1;
     if ($89) {
      label = 24;
      break;
     } else {
      $$0$i$i = $87;
     }
    } else {
     $90 = HEAP8[$80>>0]|0;
     $91 = $90&255;
     $$0$i$i = $91;
    }
    $92 = $$0$i$i&255;
    $93 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($92,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $94 = ($93|0)==(0);
    if (!($94)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $158;$__a$2 = $__a$1;
     break;
    }
    $95 = HEAP32[$79>>2]|0;
    $96 = HEAP32[$81>>2]|0;
    $97 = ($95|0)==($96|0);
    if ($97) {
     $98 = HEAP32[$$pre$i$i$i>>2]|0;
     $99 = ((($98)) + 40|0);
     $100 = HEAP32[$99>>2]|0;
     __THREW__ = 0;
     (invoke_ii($100|0,($$pre$i$i$i|0))|0);
     $101 = __THREW__; __THREW__ = 0;
     $102 = $101&1;
     if ($102) {
      label = 24;
      break;
     } else {
      $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $103 = ((($95)) + 1|0);
     HEAP32[$79>>2] = $103;
     $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 24) {
    $75 = ___cxa_find_matching_catch()|0;
    $76 = tempRet0;
    $lpad$phi$index = $75;$lpad$phi$index2 = $76;
    break;
   }
   $104 = HEAP8[$__grouping>>0]|0;
   $105 = $104 & 1;
   $106 = ($105<<24>>24)==(0);
   $107 = ((($__grouping)) + 4|0);
   $108 = HEAP32[$107>>2]|0;
   $109 = $104&255;
   $110 = $109 >>> 1;
   $111 = $106 ? $110 : $108;
   $112 = ($111|0)==(0);
   $113 = HEAP8[$__in_units>>0]|0;
   $114 = ($113<<24>>24)==(0);
   $or$cond = $114 | $112;
   if (!($or$cond)) {
    $115 = HEAP32[$__g_end>>2]|0;
    $116 = $115;
    $117 = $__g;
    $118 = (($116) - ($117))|0;
    $119 = ($118|0)<(160);
    if ($119) {
     $120 = HEAP32[$__dc>>2]|0;
     $121 = ((($115)) + 4|0);
     HEAP32[$__g_end>>2] = $121;
     HEAP32[$115>>2] = $120;
    }
   }
   $122 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $123 = (+invoke_diii(531,($__a$2|0),($122|0),($__err|0)));
   $124 = __THREW__; __THREW__ = 0;
   $125 = $124&1;
   if ($125) {
    label = 25;
   } else {
    HEAPF64[$__v>>3] = $123;
    $126 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$126,$__err);
    $127 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($127) {
     $141 = 0;
    } else {
     $128 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $129 = HEAP32[$128>>2]|0;
     $130 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $131 = HEAP32[$130>>2]|0;
     $132 = ($129|0)==($131|0);
     if ($132) {
      $133 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $134 = ((($133)) + 36|0);
      $135 = HEAP32[$134>>2]|0;
      __THREW__ = 0;
      $136 = (invoke_ii($135|0,($$pre$i$i$i$lcssa|0))|0);
      $137 = __THREW__; __THREW__ = 0;
      $138 = $137&1;
      if ($138) {
       label = 25;
       break;
      }
      $139 = ($136|0)==(-1);
      if ($139) {
       HEAP32[$__b>>2] = 0;
       $141 = 0;
      } else {
       $141 = $$pre$i$i$i$lcssa;
      }
     } else {
      $141 = $$pre$i$i$i$lcssa;
     }
    }
    $140 = ($141|0)==(0|0);
    $142 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($142) {
      label = 49;
     } else {
      $143 = ((($$pre$i2$i$i)) + 12|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ((($$pre$i2$i$i)) + 16|0);
      $146 = HEAP32[$145>>2]|0;
      $147 = ($144|0)==($146|0);
      if ($147) {
       $148 = HEAP32[$$pre$i2$i$i>>2]|0;
       $149 = ((($148)) + 36|0);
       $150 = HEAP32[$149>>2]|0;
       __THREW__ = 0;
       $151 = (invoke_ii($150|0,($$pre$i2$i$i|0))|0);
       $152 = __THREW__; __THREW__ = 0;
       $153 = $152&1;
       if ($153) {
        label = 25;
        break L4;
       }
       $154 = ($151|0)==(-1);
       if ($154) {
        HEAP32[$__e>>2] = 0;
        label = 49;
        break;
       }
      }
      if (!($140)) {
       label = 50;
      }
     }
    } while(0);
    if ((label|0) == 49) {
     if ($140) {
      label = 50;
     }
    }
    if ((label|0) == 50) {
     $155 = HEAP32[$__err>>2]|0;
     $156 = $155 | 2;
     HEAP32[$__err>>2] = $156;
    }
    $157 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($157|0);
   }
  }
 } while(0);
 if ((label|0) == 25) {
  $77 = ___cxa_find_matching_catch()|0;
  $78 = tempRet0;
  $lpad$phi$index = $77;$lpad$phi$index2 = $78;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($__s,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale($__l)|0);
 $1 = (_vsscanf($__s,$__format,$__va)|0);
 $2 = ($0|0)==(0|0);
 if (!($2)) {
  __THREW__ = 0;
  (invoke_ii(444,($0|0))|0);
  $3 = __THREW__; __THREW__ = 0;
  $4 = $3&1;
  if ($4) {
   $5 = ___cxa_find_matching_catch(0|0)|0;
   $6 = tempRet0;
   ___clang_call_terminate($5);
   // unreachable;
  }
 }
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$__e,$__kb,$__ke,$__ct,$__err,$__case_sensitive) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__kb = $__kb|0;
 $__ke = $__ke|0;
 $__ct = $__ct|0;
 $__err = $__err|0;
 $__case_sensitive = $__case_sensitive|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i11 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i17 = 0, $$044 = 0, $$081 = 0, $$lcssa = 0, $$ph$ph = 0, $$pre$i$i$i = 0, $$pre$i$i$i13 = 0, $$pre$i3$i$i19 = 0, $$pre$i3$i$i19$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__c$0 = 0, $__consume$0$off0$lcssa = 0, $__consume$0$off086 = 0, $__consume$1$off0 = 0, $__indx$0 = 0, $__kc$0 = 0, $__ky$0100 = 0, $__ky1$087 = 0, $__ky2$094 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$098 = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0;
 var $__n_does_match$3$lcssa = 0, $__n_does_match$383 = 0, $__n_does_match$4 = 0, $__n_does_match$592 = 0, $__n_does_match$6 = 0, $__n_might_match$0$lcssa = 0, $__n_might_match$097 = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0, $__n_might_match$3$lcssa = 0, $__n_might_match$382 = 0, $__n_might_match$4 = 0, $__st$099 = 0, $__st$184 = 0, $__st$293 = 0, $__st$380 = 0, $__statbuf = 0, $__status$0 = 0, $lpad$phi$index = 0, $lpad$phi$index3 = 0;
 var $or$cond = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i14 = 0, $tmp$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__statbuf = sp;
 $0 = $__ke;
 $1 = $__kb;
 $2 = (($0) - ($1))|0;
 $3 = (($2|0) / 12)&-1;
 $4 = ($3>>>0)>(100);
 do {
  if ($4) {
   $5 = (_malloc($3)|0);
   $6 = ($5|0)==(0|0);
   if ($6) {
    __THREW__ = 0;
    invoke_v(435);
    $7 = __THREW__; __THREW__ = 0;
    $8 = $7&1;
    if ($8) {
     $$ph$ph = 0;
     label = 6;
     break;
    }
   }
   $18 = $5;
   $191 = $18;$__status$0 = $5;
   label = 11;
  } else {
   $191 = 0;$__status$0 = $__statbuf;
   label = 11;
  }
 } while(0);
 L6: do {
  if ((label|0) == 11) {
   $19 = ($__kb|0)==($__ke|0);
   if ($19) {
    $__n_does_match$0$lcssa = 0;$__n_might_match$0$lcssa = $3;
   } else {
    $__ky$0100 = $__kb;$__n_does_match$098 = 0;$__n_might_match$097 = $3;$__st$099 = $__status$0;
    while(1) {
     $22 = HEAP8[$__ky$0100>>0]|0;
     $23 = $22 & 1;
     $24 = ($23<<24>>24)==(0);
     if ($24) {
      $27 = $22&255;
      $28 = $27 >>> 1;
      $30 = $28;
     } else {
      $25 = ((($__ky$0100)) + 4|0);
      $26 = HEAP32[$25>>2]|0;
      $30 = $26;
     }
     $29 = ($30|0)==(0);
     if ($29) {
      HEAP8[$__st$099>>0] = 2;
      $31 = (($__n_might_match$097) + -1)|0;
      $32 = (($__n_does_match$098) + 1)|0;
      $__n_does_match$1 = $32;$__n_might_match$1 = $31;
     } else {
      HEAP8[$__st$099>>0] = 1;
      $__n_does_match$1 = $__n_does_match$098;$__n_might_match$1 = $__n_might_match$097;
     }
     $33 = ((($__ky$0100)) + 12|0);
     $34 = ((($__st$099)) + 1|0);
     $35 = ($33|0)==($__ke|0);
     if ($35) {
      $__n_does_match$0$lcssa = $__n_does_match$1;$__n_might_match$0$lcssa = $__n_might_match$1;
      break;
     } else {
      $__ky$0100 = $33;$__n_does_match$098 = $__n_does_match$1;$__n_might_match$097 = $__n_might_match$1;$__st$099 = $34;
     }
    }
   }
   $20 = ($__kb|0)==($__ke|0);
   $21 = ($__kb|0)==($__ke|0);
   $__indx$0 = 0;$__n_does_match$2 = $__n_does_match$0$lcssa;$__n_might_match$2 = $__n_might_match$0$lcssa;
   L20: while(1) {
    $36 = HEAP32[$__b>>2]|0;
    $37 = ($36|0)==(0|0);
    do {
     if ($37) {
      $66 = 1;
     } else {
      $38 = ((($36)) + 12|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ((($36)) + 16|0);
      $41 = HEAP32[$40>>2]|0;
      $42 = ($39|0)==($41|0);
      if ($42) {
       $43 = HEAP32[$36>>2]|0;
       $44 = ((($43)) + 36|0);
       $45 = HEAP32[$44>>2]|0;
       __THREW__ = 0;
       $46 = (invoke_ii($45|0,($36|0))|0);
       $47 = __THREW__; __THREW__ = 0;
       $48 = $47&1;
       if ($48) {
        label = 5;
        break L20;
       } else {
        $$0$i$i$i$i = $46;
       }
      } else {
       $49 = HEAP32[$39>>2]|0;
       $$0$i$i$i$i = $49;
      }
      $50 = ($$0$i$i$i$i|0)==(-1);
      if ($50) {
       HEAP32[$__b>>2] = 0;
       $66 = 1;
       break;
      } else {
       $$pre$i$i$i = HEAP32[$__b>>2]|0;
       $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
       $66 = $phitmp$i$i$i;
       break;
      }
     }
    } while(0);
    $51 = HEAP32[$__e>>2]|0;
    $52 = ($51|0)==(0|0);
    if ($52) {
     $$pre$i3$i$i19 = 0;$67 = 1;
    } else {
     $53 = ((($51)) + 12|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = ((($51)) + 16|0);
     $56 = HEAP32[$55>>2]|0;
     $57 = ($54|0)==($56|0);
     if ($57) {
      $58 = HEAP32[$51>>2]|0;
      $59 = ((($58)) + 36|0);
      $60 = HEAP32[$59>>2]|0;
      __THREW__ = 0;
      $61 = (invoke_ii($60|0,($51|0))|0);
      $62 = __THREW__; __THREW__ = 0;
      $63 = $62&1;
      if ($63) {
       label = 5;
       break;
      } else {
       $$0$i$i1$i$i = $61;
      }
     } else {
      $64 = HEAP32[$54>>2]|0;
      $$0$i$i1$i$i = $64;
     }
     $65 = ($$0$i$i1$i$i|0)==(-1);
     if ($65) {
      HEAP32[$__e>>2] = 0;
      $$pre$i3$i$i19 = 0;$67 = 1;
     } else {
      $$pre$i3$i$i19 = $51;$67 = 0;
     }
    }
    $tmp$i$i = $66 ^ $67;
    $68 = ($__n_might_match$2|0)!=(0);
    $69 = $68 & $tmp$i$i;
    $70 = HEAP32[$__b>>2]|0;
    if (!($69)) {
     $$lcssa = $70;$$pre$i3$i$i19$lcssa = $$pre$i3$i$i19;
     label = 66;
     break;
    }
    $71 = ((($70)) + 12|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = ((($70)) + 16|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = ($72|0)==($74|0);
    if ($75) {
     $76 = HEAP32[$70>>2]|0;
     $77 = ((($76)) + 36|0);
     $78 = HEAP32[$77>>2]|0;
     __THREW__ = 0;
     $79 = (invoke_ii($78|0,($70|0))|0);
     $80 = __THREW__; __THREW__ = 0;
     $81 = $80&1;
     if ($81) {
      label = 5;
      break;
     } else {
      $$0$i$i = $79;
     }
    } else {
     $82 = HEAP32[$72>>2]|0;
     $$0$i$i = $82;
    }
    if ($__case_sensitive) {
     $__c$0 = $$0$i$i;
    } else {
     $83 = HEAP32[$__ct>>2]|0;
     $84 = ((($83)) + 28|0);
     $85 = HEAP32[$84>>2]|0;
     __THREW__ = 0;
     $86 = (invoke_iii($85|0,($__ct|0),($$0$i$i|0))|0);
     $87 = __THREW__; __THREW__ = 0;
     $88 = $87&1;
     if ($88) {
      label = 5;
      break;
     } else {
      $__c$0 = $86;
     }
    }
    $89 = (($__indx$0) + 1)|0;
    if ($20) {
     $__consume$0$off0$lcssa = 0;$__n_does_match$3$lcssa = $__n_does_match$2;$__n_might_match$3$lcssa = $__n_might_match$2;
    } else {
     $__consume$0$off086 = 0;$__ky1$087 = $__kb;$__n_does_match$383 = $__n_does_match$2;$__n_might_match$382 = $__n_might_match$2;$__st$184 = $__status$0;
     while(1) {
      $90 = HEAP8[$__st$184>>0]|0;
      $91 = ($90<<24>>24)==(1);
      do {
       if ($91) {
        $92 = HEAP8[$__ky1$087>>0]|0;
        $93 = $92 & 1;
        $94 = ($93<<24>>24)==(0);
        if ($94) {
         $97 = ((($__ky1$087)) + 4|0);
         $99 = $97;
        } else {
         $95 = ((($__ky1$087)) + 8|0);
         $96 = HEAP32[$95>>2]|0;
         $99 = $96;
        }
        $98 = (($99) + ($__indx$0<<2)|0);
        $100 = HEAP32[$98>>2]|0;
        if ($__case_sensitive) {
         $__kc$0 = $100;
        } else {
         $101 = HEAP32[$__ct>>2]|0;
         $102 = ((($101)) + 28|0);
         $103 = HEAP32[$102>>2]|0;
         __THREW__ = 0;
         $104 = (invoke_iii($103|0,($__ct|0),($100|0))|0);
         $105 = __THREW__; __THREW__ = 0;
         $106 = $105&1;
         if ($106) {
          label = 4;
          break L20;
         } else {
          $__kc$0 = $104;
         }
        }
        $107 = ($__c$0|0)==($__kc$0|0);
        if (!($107)) {
         HEAP8[$__st$184>>0] = 0;
         $119 = (($__n_might_match$382) + -1)|0;
         $__consume$1$off0 = $__consume$0$off086;$__n_does_match$4 = $__n_does_match$383;$__n_might_match$4 = $119;
         break;
        }
        $108 = HEAP8[$__ky1$087>>0]|0;
        $109 = $108 & 1;
        $110 = ($109<<24>>24)==(0);
        if ($110) {
         $113 = $108&255;
         $114 = $113 >>> 1;
         $116 = $114;
        } else {
         $111 = ((($__ky1$087)) + 4|0);
         $112 = HEAP32[$111>>2]|0;
         $116 = $112;
        }
        $115 = ($116|0)==($89|0);
        if ($115) {
         HEAP8[$__st$184>>0] = 2;
         $117 = (($__n_might_match$382) + -1)|0;
         $118 = (($__n_does_match$383) + 1)|0;
         $__consume$1$off0 = 1;$__n_does_match$4 = $118;$__n_might_match$4 = $117;
        } else {
         $__consume$1$off0 = 1;$__n_does_match$4 = $__n_does_match$383;$__n_might_match$4 = $__n_might_match$382;
        }
       } else {
        $__consume$1$off0 = $__consume$0$off086;$__n_does_match$4 = $__n_does_match$383;$__n_might_match$4 = $__n_might_match$382;
       }
      } while(0);
      $120 = ((($__ky1$087)) + 12|0);
      $121 = ((($__st$184)) + 1|0);
      $122 = ($120|0)==($__ke|0);
      if ($122) {
       $__consume$0$off0$lcssa = $__consume$1$off0;$__n_does_match$3$lcssa = $__n_does_match$4;$__n_might_match$3$lcssa = $__n_might_match$4;
       break;
      } else {
       $__consume$0$off086 = $__consume$1$off0;$__ky1$087 = $120;$__n_does_match$383 = $__n_does_match$4;$__n_might_match$382 = $__n_might_match$4;$__st$184 = $121;
      }
     }
    }
    if (!($__consume$0$off0$lcssa)) {
     $__indx$0 = $89;$__n_does_match$2 = $__n_does_match$3$lcssa;$__n_might_match$2 = $__n_might_match$3$lcssa;
     continue;
    }
    $123 = HEAP32[$__b>>2]|0;
    $124 = ((($123)) + 12|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = ((($123)) + 16|0);
    $127 = HEAP32[$126>>2]|0;
    $128 = ($125|0)==($127|0);
    if ($128) {
     $129 = HEAP32[$123>>2]|0;
     $130 = ((($129)) + 40|0);
     $131 = HEAP32[$130>>2]|0;
     __THREW__ = 0;
     (invoke_ii($131|0,($123|0))|0);
     $132 = __THREW__; __THREW__ = 0;
     $133 = $132&1;
     if ($133) {
      label = 5;
      break;
     }
    } else {
     $134 = ((($125)) + 4|0);
     HEAP32[$124>>2] = $134;
    }
    $135 = (($__n_does_match$3$lcssa) + ($__n_might_match$3$lcssa))|0;
    $136 = ($135>>>0)<(2);
    $or$cond = $136 | $21;
    if ($or$cond) {
     $__indx$0 = $89;$__n_does_match$2 = $__n_does_match$3$lcssa;$__n_might_match$2 = $__n_might_match$3$lcssa;
     continue;
    } else {
     $__ky2$094 = $__kb;$__n_does_match$592 = $__n_does_match$3$lcssa;$__st$293 = $__status$0;
    }
    while(1) {
     $137 = HEAP8[$__st$293>>0]|0;
     $138 = ($137<<24>>24)==(2);
     if ($138) {
      $139 = HEAP8[$__ky2$094>>0]|0;
      $140 = $139 & 1;
      $141 = ($140<<24>>24)==(0);
      if ($141) {
       $144 = $139&255;
       $145 = $144 >>> 1;
       $147 = $145;
      } else {
       $142 = ((($__ky2$094)) + 4|0);
       $143 = HEAP32[$142>>2]|0;
       $147 = $143;
      }
      $146 = ($147|0)==($89|0);
      if ($146) {
       $__n_does_match$6 = $__n_does_match$592;
      } else {
       HEAP8[$__st$293>>0] = 0;
       $148 = (($__n_does_match$592) + -1)|0;
       $__n_does_match$6 = $148;
      }
     } else {
      $__n_does_match$6 = $__n_does_match$592;
     }
     $149 = ((($__ky2$094)) + 12|0);
     $150 = ((($__st$293)) + 1|0);
     $151 = ($149|0)==($__ke|0);
     if ($151) {
      $__indx$0 = $89;$__n_does_match$2 = $__n_does_match$6;$__n_might_match$2 = $__n_might_match$3$lcssa;
      continue L20;
     } else {
      $__ky2$094 = $149;$__n_does_match$592 = $__n_does_match$6;$__st$293 = $150;
     }
    }
   }
   if ((label|0) == 4) {
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    $16 = $191;$lpad$phi$index = $9;$lpad$phi$index3 = $10;
    break;
   }
   else if ((label|0) == 5) {
    $11 = ___cxa_find_matching_catch()|0;
    $12 = tempRet0;
    $16 = $191;$lpad$phi$index = $11;$lpad$phi$index3 = $12;
    break;
   }
   else if ((label|0) == 66) {
    $152 = ($$lcssa|0)==(0|0);
    do {
     if ($152) {
      $193 = 1;
     } else {
      $153 = ((($$lcssa)) + 12|0);
      $154 = HEAP32[$153>>2]|0;
      $155 = ((($$lcssa)) + 16|0);
      $156 = HEAP32[$155>>2]|0;
      $157 = ($154|0)==($156|0);
      if ($157) {
       $158 = HEAP32[$$lcssa>>2]|0;
       $159 = ((($158)) + 36|0);
       $160 = HEAP32[$159>>2]|0;
       __THREW__ = 0;
       $161 = (invoke_ii($160|0,($$lcssa|0))|0);
       $162 = __THREW__; __THREW__ = 0;
       $163 = $162&1;
       if ($163) {
        $$ph$ph = $191;
        label = 6;
        break L6;
       } else {
        $$0$i$i$i$i11 = $161;
       }
      } else {
       $164 = HEAP32[$154>>2]|0;
       $$0$i$i$i$i11 = $164;
      }
      $165 = ($$0$i$i$i$i11|0)==(-1);
      if ($165) {
       HEAP32[$__b>>2] = 0;
       $193 = 1;
       break;
      } else {
       $$pre$i$i$i13 = HEAP32[$__b>>2]|0;
       $phitmp$i$i$i14 = ($$pre$i$i$i13|0)==(0|0);
       $193 = $phitmp$i$i$i14;
       break;
      }
     }
    } while(0);
    $166 = ($$pre$i3$i$i19$lcssa|0)==(0|0);
    do {
     if ($166) {
      label = 79;
     } else {
      $167 = ((($$pre$i3$i$i19$lcssa)) + 12|0);
      $168 = HEAP32[$167>>2]|0;
      $169 = ((($$pre$i3$i$i19$lcssa)) + 16|0);
      $170 = HEAP32[$169>>2]|0;
      $171 = ($168|0)==($170|0);
      if ($171) {
       $172 = HEAP32[$$pre$i3$i$i19$lcssa>>2]|0;
       $173 = ((($172)) + 36|0);
       $174 = HEAP32[$173>>2]|0;
       __THREW__ = 0;
       $175 = (invoke_ii($174|0,($$pre$i3$i$i19$lcssa|0))|0);
       $176 = __THREW__; __THREW__ = 0;
       $177 = $176&1;
       if ($177) {
        $$ph$ph = $191;
        label = 6;
        break L6;
       } else {
        $$0$i$i1$i$i17 = $175;
       }
      } else {
       $178 = HEAP32[$168>>2]|0;
       $$0$i$i1$i$i17 = $178;
      }
      $179 = ($$0$i$i1$i$i17|0)==(-1);
      if ($179) {
       HEAP32[$__e>>2] = 0;
       label = 79;
       break;
      } else {
       if ($193) {
        break;
       } else {
        label = 81;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 79) {
     if ($193) {
      label = 81;
     }
    }
    if ((label|0) == 81) {
     $180 = HEAP32[$__err>>2]|0;
     $181 = $180 | 2;
     HEAP32[$__err>>2] = $181;
    }
    $182 = ($__kb|0)==($__ke|0);
    L113: do {
     if ($182) {
      label = 85;
     } else {
      $$081 = $__kb;$__st$380 = $__status$0;
      while(1) {
       $183 = HEAP8[$__st$380>>0]|0;
       $184 = ($183<<24>>24)==(2);
       if ($184) {
        $$044 = $$081;
        break L113;
       }
       $185 = ((($$081)) + 12|0);
       $186 = ((($__st$380)) + 1|0);
       $187 = ($185|0)==($__ke|0);
       if ($187) {
        label = 85;
        break;
       } else {
        $$081 = $185;$__st$380 = $186;
       }
      }
     }
    } while(0);
    if ((label|0) == 85) {
     $188 = HEAP32[$__err>>2]|0;
     $189 = $188 | 4;
     HEAP32[$__err>>2] = $189;
     $$044 = $__ke;
    }
    $190 = ($191|0)==(0);
    if (!($190)) {
     $192 = $191;
     _free($192);
    }
    STACKTOP = sp;return ($$044|0);
   }
  }
 } while(0);
 if ((label|0) == 6) {
  $13 = ___cxa_find_matching_catch()|0;
  $14 = tempRet0;
  $16 = $$ph$ph;$lpad$phi$index = $13;$lpad$phi$index3 = $14;
 }
 $15 = ($16|0)==(0);
 if (!($15)) {
  $17 = $16;
  _free($17);
 }
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0;
 var $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(428,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L4: do {
  if ($10) {
   label = 26;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   $14 = ((($__buf)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($__buf)) + 1|0);
   $17 = $13 ? $16 : $15;
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = ((($__buf)) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L6: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;$155 = 1;
    } else {
     $21 = ((($$pre$i$i$i5)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i5)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 25;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $$pre$i$i$i = 0;$155 = 1;
     } else {
      $$pre$i$i$i = $$pre$i$i$i5;$155 = 0;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 17;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = ((($41)) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 25;
        break L6;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 17;
       break;
      } else {
       if ($155) {
        $156 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 17) {
     label = 0;
     if ($155) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $156 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    $53 = HEAP32[$18>>2]|0;
    $54 = $50&255;
    $55 = $54 >>> 1;
    $56 = $52 ? $55 : $53;
    $57 = (($__a$0) + ($56)|0);
    $58 = ($49|0)==($57|0);
    if ($58) {
     $59 = $56 << 1;
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($59|0),0);
     $60 = __THREW__; __THREW__ = 0;
     $61 = $60&1;
     if ($61) {
      label = 25;
      break;
     }
     $62 = HEAP8[$__buf>>0]|0;
     $63 = $62 & 1;
     $64 = ($63<<24>>24)==(0);
     if ($64) {
      $67 = 10;
     } else {
      $65 = HEAP32[$__buf>>2]|0;
      $66 = $65 & -2;
      $phitmp$i23 = (($66) + -1)|0;
      $67 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($67|0),0);
     $68 = __THREW__; __THREW__ = 0;
     $69 = $68&1;
     if ($69) {
      label = 25;
      break;
     }
     $70 = HEAP8[$__buf>>0]|0;
     $71 = $70 & 1;
     $72 = ($71<<24>>24)==(0);
     $73 = HEAP32[$14>>2]|0;
     $74 = $72 ? $16 : $73;
     $75 = (($74) + ($56)|0);
     HEAP32[$__a_end>>2] = $75;
     $__a$1 = $74;
    } else {
     $__a$1 = $__a$0;
    }
    $80 = ((($$pre$i$i$i)) + 12|0);
    $81 = HEAP32[$80>>2]|0;
    $82 = ((($$pre$i$i$i)) + 16|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = ($81|0)==($83|0);
    if ($84) {
     $85 = HEAP32[$$pre$i$i$i>>2]|0;
     $86 = ((($85)) + 36|0);
     $87 = HEAP32[$86>>2]|0;
     __THREW__ = 0;
     $88 = (invoke_ii($87|0,($$pre$i$i$i|0))|0);
     $89 = __THREW__; __THREW__ = 0;
     $90 = $89&1;
     if ($90) {
      label = 25;
      break;
     } else {
      $$0$i$i = $88;
     }
    } else {
     $91 = HEAP32[$81>>2]|0;
     $$0$i$i = $91;
    }
    $92 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $93 = ($92|0)==(0);
    if (!($93)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $156;$__a$2 = $__a$1;
     break;
    }
    $94 = HEAP32[$80>>2]|0;
    $95 = HEAP32[$82>>2]|0;
    $96 = ($94|0)==($95|0);
    if ($96) {
     $97 = HEAP32[$$pre$i$i$i>>2]|0;
     $98 = ((($97)) + 40|0);
     $99 = HEAP32[$98>>2]|0;
     __THREW__ = 0;
     (invoke_ii($99|0,($$pre$i$i$i|0))|0);
     $100 = __THREW__; __THREW__ = 0;
     $101 = $100&1;
     if ($101) {
      label = 25;
      break;
     } else {
      $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $102 = ((($94)) + 4|0);
     HEAP32[$80>>2] = $102;
     $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 25) {
    $76 = ___cxa_find_matching_catch()|0;
    $77 = tempRet0;
    $lpad$phi$index = $76;$lpad$phi$index2 = $77;
    break;
   }
   $103 = HEAP8[$__grouping>>0]|0;
   $104 = $103 & 1;
   $105 = ($104<<24>>24)==(0);
   $106 = ((($__grouping)) + 4|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = $103&255;
   $109 = $108 >>> 1;
   $110 = $105 ? $109 : $107;
   $111 = ($110|0)==(0);
   if (!($111)) {
    $112 = HEAP32[$__g_end>>2]|0;
    $113 = $112;
    $114 = $__g;
    $115 = (($113) - ($114))|0;
    $116 = ($115|0)<(160);
    if ($116) {
     $117 = HEAP32[$__dc>>2]|0;
     $118 = ((($112)) + 4|0);
     HEAP32[$__g_end>>2] = $118;
     HEAP32[$112>>2] = $117;
    }
   }
   $119 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $120 = (invoke_iiiii(523,($__a$2|0),($119|0),($__err|0),($0|0))|0);
   $121 = __THREW__; __THREW__ = 0;
   $122 = $121&1;
   if ($122) {
    label = 26;
   } else {
    HEAP32[$__v>>2] = $120;
    $123 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$123,$__err);
    $124 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($124) {
     $157 = 1;
    } else {
     $125 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $126 = HEAP32[$125>>2]|0;
     $127 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $128 = HEAP32[$127>>2]|0;
     $129 = ($126|0)==($128|0);
     if ($129) {
      $130 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $131 = ((($130)) + 36|0);
      $132 = HEAP32[$131>>2]|0;
      __THREW__ = 0;
      $133 = (invoke_ii($132|0,($$pre$i$i$i$lcssa|0))|0);
      $134 = __THREW__; __THREW__ = 0;
      $135 = $134&1;
      if ($135) {
       label = 26;
       break;
      } else {
       $$0$i$i$i$i = $133;
      }
     } else {
      $136 = HEAP32[$126>>2]|0;
      $$0$i$i$i$i = $136;
     }
     $137 = ($$0$i$i$i$i|0)==(-1);
     if ($137) {
      HEAP32[$__b>>2] = 0;
      $157 = 1;
     } else {
      $157 = 0;
     }
    }
    $138 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($138) {
      label = 51;
     } else {
      $139 = ((($$pre$i3$i$i)) + 12|0);
      $140 = HEAP32[$139>>2]|0;
      $141 = ((($$pre$i3$i$i)) + 16|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ($140|0)==($142|0);
      if ($143) {
       $144 = HEAP32[$$pre$i3$i$i>>2]|0;
       $145 = ((($144)) + 36|0);
       $146 = HEAP32[$145>>2]|0;
       __THREW__ = 0;
       $147 = (invoke_ii($146|0,($$pre$i3$i$i|0))|0);
       $148 = __THREW__; __THREW__ = 0;
       $149 = $148&1;
       if ($149) {
        label = 26;
        break L4;
       } else {
        $$0$i$i1$i$i = $147;
       }
      } else {
       $150 = HEAP32[$140>>2]|0;
       $$0$i$i1$i$i = $150;
      }
      $151 = ($$0$i$i1$i$i|0)==(-1);
      if ($151) {
       HEAP32[$__e>>2] = 0;
       label = 51;
       break;
      } else {
       if ($157) {
        break;
       } else {
        label = 53;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 51) {
     if ($157) {
      label = 53;
     }
    }
    if ((label|0) == 53) {
     $152 = HEAP32[$__err>>2]|0;
     $153 = $152 | 2;
     HEAP32[$__err>>2] = $153;
    }
    $154 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($154|0);
   }
  }
 } while(0);
 if ((label|0) == 26) {
  $78 = ___cxa_find_matching_catch()|0;
  $79 = tempRet0;
  $lpad$phi$index = $78;$lpad$phi$index2 = $79;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0;
 var $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(428,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L4: do {
  if ($10) {
   label = 26;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   $14 = ((($__buf)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($__buf)) + 1|0);
   $17 = $13 ? $16 : $15;
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = ((($__buf)) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L6: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;$160 = 1;
    } else {
     $21 = ((($$pre$i$i$i5)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i5)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 25;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $$pre$i$i$i = 0;$160 = 1;
     } else {
      $$pre$i$i$i = $$pre$i$i$i5;$160 = 0;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 17;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = ((($41)) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 25;
        break L6;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 17;
       break;
      } else {
       if ($160) {
        $161 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 17) {
     label = 0;
     if ($160) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $161 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    $53 = HEAP32[$18>>2]|0;
    $54 = $50&255;
    $55 = $54 >>> 1;
    $56 = $52 ? $55 : $53;
    $57 = (($__a$0) + ($56)|0);
    $58 = ($49|0)==($57|0);
    if ($58) {
     $59 = $56 << 1;
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($59|0),0);
     $60 = __THREW__; __THREW__ = 0;
     $61 = $60&1;
     if ($61) {
      label = 25;
      break;
     }
     $62 = HEAP8[$__buf>>0]|0;
     $63 = $62 & 1;
     $64 = ($63<<24>>24)==(0);
     if ($64) {
      $67 = 10;
     } else {
      $65 = HEAP32[$__buf>>2]|0;
      $66 = $65 & -2;
      $phitmp$i23 = (($66) + -1)|0;
      $67 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($67|0),0);
     $68 = __THREW__; __THREW__ = 0;
     $69 = $68&1;
     if ($69) {
      label = 25;
      break;
     }
     $70 = HEAP8[$__buf>>0]|0;
     $71 = $70 & 1;
     $72 = ($71<<24>>24)==(0);
     $73 = HEAP32[$14>>2]|0;
     $74 = $72 ? $16 : $73;
     $75 = (($74) + ($56)|0);
     HEAP32[$__a_end>>2] = $75;
     $__a$1 = $74;
    } else {
     $__a$1 = $__a$0;
    }
    $80 = ((($$pre$i$i$i)) + 12|0);
    $81 = HEAP32[$80>>2]|0;
    $82 = ((($$pre$i$i$i)) + 16|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = ($81|0)==($83|0);
    if ($84) {
     $85 = HEAP32[$$pre$i$i$i>>2]|0;
     $86 = ((($85)) + 36|0);
     $87 = HEAP32[$86>>2]|0;
     __THREW__ = 0;
     $88 = (invoke_ii($87|0,($$pre$i$i$i|0))|0);
     $89 = __THREW__; __THREW__ = 0;
     $90 = $89&1;
     if ($90) {
      label = 25;
      break;
     } else {
      $$0$i$i = $88;
     }
    } else {
     $91 = HEAP32[$81>>2]|0;
     $$0$i$i = $91;
    }
    $92 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $93 = ($92|0)==(0);
    if (!($93)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $161;$__a$2 = $__a$1;
     break;
    }
    $94 = HEAP32[$80>>2]|0;
    $95 = HEAP32[$82>>2]|0;
    $96 = ($94|0)==($95|0);
    if ($96) {
     $97 = HEAP32[$$pre$i$i$i>>2]|0;
     $98 = ((($97)) + 40|0);
     $99 = HEAP32[$98>>2]|0;
     __THREW__ = 0;
     (invoke_ii($99|0,($$pre$i$i$i|0))|0);
     $100 = __THREW__; __THREW__ = 0;
     $101 = $100&1;
     if ($101) {
      label = 25;
      break;
     } else {
      $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $102 = ((($94)) + 4|0);
     HEAP32[$80>>2] = $102;
     $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 25) {
    $76 = ___cxa_find_matching_catch()|0;
    $77 = tempRet0;
    $lpad$phi$index = $76;$lpad$phi$index2 = $77;
    break;
   }
   $103 = HEAP8[$__grouping>>0]|0;
   $104 = $103 & 1;
   $105 = ($104<<24>>24)==(0);
   $106 = ((($__grouping)) + 4|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = $103&255;
   $109 = $108 >>> 1;
   $110 = $105 ? $109 : $107;
   $111 = ($110|0)==(0);
   if (!($111)) {
    $112 = HEAP32[$__g_end>>2]|0;
    $113 = $112;
    $114 = $__g;
    $115 = (($113) - ($114))|0;
    $116 = ($115|0)<(160);
    if ($116) {
     $117 = HEAP32[$__dc>>2]|0;
     $118 = ((($112)) + 4|0);
     HEAP32[$__g_end>>2] = $118;
     HEAP32[$112>>2] = $117;
    }
   }
   $119 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $120 = (invoke_iiiii(524,($__a$2|0),($119|0),($__err|0),($0|0))|0);
   $121 = tempRet0;
   $122 = __THREW__; __THREW__ = 0;
   $123 = $122&1;
   if ($123) {
    label = 26;
   } else {
    $124 = $__v;
    $125 = $124;
    HEAP32[$125>>2] = $120;
    $126 = (($124) + 4)|0;
    $127 = $126;
    HEAP32[$127>>2] = $121;
    $128 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$128,$__err);
    $129 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($129) {
     $162 = 1;
    } else {
     $130 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $131 = HEAP32[$130>>2]|0;
     $132 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $133 = HEAP32[$132>>2]|0;
     $134 = ($131|0)==($133|0);
     if ($134) {
      $135 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $136 = ((($135)) + 36|0);
      $137 = HEAP32[$136>>2]|0;
      __THREW__ = 0;
      $138 = (invoke_ii($137|0,($$pre$i$i$i$lcssa|0))|0);
      $139 = __THREW__; __THREW__ = 0;
      $140 = $139&1;
      if ($140) {
       label = 26;
       break;
      } else {
       $$0$i$i$i$i = $138;
      }
     } else {
      $141 = HEAP32[$131>>2]|0;
      $$0$i$i$i$i = $141;
     }
     $142 = ($$0$i$i$i$i|0)==(-1);
     if ($142) {
      HEAP32[$__b>>2] = 0;
      $162 = 1;
     } else {
      $162 = 0;
     }
    }
    $143 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($143) {
      label = 51;
     } else {
      $144 = ((($$pre$i3$i$i)) + 12|0);
      $145 = HEAP32[$144>>2]|0;
      $146 = ((($$pre$i3$i$i)) + 16|0);
      $147 = HEAP32[$146>>2]|0;
      $148 = ($145|0)==($147|0);
      if ($148) {
       $149 = HEAP32[$$pre$i3$i$i>>2]|0;
       $150 = ((($149)) + 36|0);
       $151 = HEAP32[$150>>2]|0;
       __THREW__ = 0;
       $152 = (invoke_ii($151|0,($$pre$i3$i$i|0))|0);
       $153 = __THREW__; __THREW__ = 0;
       $154 = $153&1;
       if ($154) {
        label = 26;
        break L4;
       } else {
        $$0$i$i1$i$i = $152;
       }
      } else {
       $155 = HEAP32[$145>>2]|0;
       $$0$i$i1$i$i = $155;
      }
      $156 = ($$0$i$i1$i$i|0)==(-1);
      if ($156) {
       HEAP32[$__e>>2] = 0;
       label = 51;
       break;
      } else {
       if ($162) {
        break;
       } else {
        label = 53;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 51) {
     if ($162) {
      label = 53;
     }
    }
    if ((label|0) == 53) {
     $157 = HEAP32[$__err>>2]|0;
     $158 = $157 | 2;
     HEAP32[$__err>>2] = $158;
    }
    $159 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($159|0);
   }
  }
 } while(0);
 if ((label|0) == 26) {
  $78 = ___cxa_find_matching_catch()|0;
  $79 = tempRet0;
  $lpad$phi$index = $78;$lpad$phi$index2 = $79;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0;
 var $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(428,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L4: do {
  if ($10) {
   label = 26;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   $14 = ((($__buf)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($__buf)) + 1|0);
   $17 = $13 ? $16 : $15;
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = ((($__buf)) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L6: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;$155 = 1;
    } else {
     $21 = ((($$pre$i$i$i5)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i5)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 25;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $$pre$i$i$i = 0;$155 = 1;
     } else {
      $$pre$i$i$i = $$pre$i$i$i5;$155 = 0;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 17;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = ((($41)) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 25;
        break L6;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 17;
       break;
      } else {
       if ($155) {
        $156 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 17) {
     label = 0;
     if ($155) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $156 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    $53 = HEAP32[$18>>2]|0;
    $54 = $50&255;
    $55 = $54 >>> 1;
    $56 = $52 ? $55 : $53;
    $57 = (($__a$0) + ($56)|0);
    $58 = ($49|0)==($57|0);
    if ($58) {
     $59 = $56 << 1;
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($59|0),0);
     $60 = __THREW__; __THREW__ = 0;
     $61 = $60&1;
     if ($61) {
      label = 25;
      break;
     }
     $62 = HEAP8[$__buf>>0]|0;
     $63 = $62 & 1;
     $64 = ($63<<24>>24)==(0);
     if ($64) {
      $67 = 10;
     } else {
      $65 = HEAP32[$__buf>>2]|0;
      $66 = $65 & -2;
      $phitmp$i23 = (($66) + -1)|0;
      $67 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($67|0),0);
     $68 = __THREW__; __THREW__ = 0;
     $69 = $68&1;
     if ($69) {
      label = 25;
      break;
     }
     $70 = HEAP8[$__buf>>0]|0;
     $71 = $70 & 1;
     $72 = ($71<<24>>24)==(0);
     $73 = HEAP32[$14>>2]|0;
     $74 = $72 ? $16 : $73;
     $75 = (($74) + ($56)|0);
     HEAP32[$__a_end>>2] = $75;
     $__a$1 = $74;
    } else {
     $__a$1 = $__a$0;
    }
    $80 = ((($$pre$i$i$i)) + 12|0);
    $81 = HEAP32[$80>>2]|0;
    $82 = ((($$pre$i$i$i)) + 16|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = ($81|0)==($83|0);
    if ($84) {
     $85 = HEAP32[$$pre$i$i$i>>2]|0;
     $86 = ((($85)) + 36|0);
     $87 = HEAP32[$86>>2]|0;
     __THREW__ = 0;
     $88 = (invoke_ii($87|0,($$pre$i$i$i|0))|0);
     $89 = __THREW__; __THREW__ = 0;
     $90 = $89&1;
     if ($90) {
      label = 25;
      break;
     } else {
      $$0$i$i = $88;
     }
    } else {
     $91 = HEAP32[$81>>2]|0;
     $$0$i$i = $91;
    }
    $92 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $93 = ($92|0)==(0);
    if (!($93)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $156;$__a$2 = $__a$1;
     break;
    }
    $94 = HEAP32[$80>>2]|0;
    $95 = HEAP32[$82>>2]|0;
    $96 = ($94|0)==($95|0);
    if ($96) {
     $97 = HEAP32[$$pre$i$i$i>>2]|0;
     $98 = ((($97)) + 40|0);
     $99 = HEAP32[$98>>2]|0;
     __THREW__ = 0;
     (invoke_ii($99|0,($$pre$i$i$i|0))|0);
     $100 = __THREW__; __THREW__ = 0;
     $101 = $100&1;
     if ($101) {
      label = 25;
      break;
     } else {
      $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $102 = ((($94)) + 4|0);
     HEAP32[$80>>2] = $102;
     $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 25) {
    $76 = ___cxa_find_matching_catch()|0;
    $77 = tempRet0;
    $lpad$phi$index = $76;$lpad$phi$index2 = $77;
    break;
   }
   $103 = HEAP8[$__grouping>>0]|0;
   $104 = $103 & 1;
   $105 = ($104<<24>>24)==(0);
   $106 = ((($__grouping)) + 4|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = $103&255;
   $109 = $108 >>> 1;
   $110 = $105 ? $109 : $107;
   $111 = ($110|0)==(0);
   if (!($111)) {
    $112 = HEAP32[$__g_end>>2]|0;
    $113 = $112;
    $114 = $__g;
    $115 = (($113) - ($114))|0;
    $116 = ($115|0)<(160);
    if ($116) {
     $117 = HEAP32[$__dc>>2]|0;
     $118 = ((($112)) + 4|0);
     HEAP32[$__g_end>>2] = $118;
     HEAP32[$112>>2] = $117;
    }
   }
   $119 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $120 = (invoke_iiiii(525,($__a$2|0),($119|0),($__err|0),($0|0))|0);
   $121 = __THREW__; __THREW__ = 0;
   $122 = $121&1;
   if ($122) {
    label = 26;
   } else {
    HEAP16[$__v>>1] = $120;
    $123 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$123,$__err);
    $124 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($124) {
     $157 = 1;
    } else {
     $125 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $126 = HEAP32[$125>>2]|0;
     $127 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $128 = HEAP32[$127>>2]|0;
     $129 = ($126|0)==($128|0);
     if ($129) {
      $130 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $131 = ((($130)) + 36|0);
      $132 = HEAP32[$131>>2]|0;
      __THREW__ = 0;
      $133 = (invoke_ii($132|0,($$pre$i$i$i$lcssa|0))|0);
      $134 = __THREW__; __THREW__ = 0;
      $135 = $134&1;
      if ($135) {
       label = 26;
       break;
      } else {
       $$0$i$i$i$i = $133;
      }
     } else {
      $136 = HEAP32[$126>>2]|0;
      $$0$i$i$i$i = $136;
     }
     $137 = ($$0$i$i$i$i|0)==(-1);
     if ($137) {
      HEAP32[$__b>>2] = 0;
      $157 = 1;
     } else {
      $157 = 0;
     }
    }
    $138 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($138) {
      label = 51;
     } else {
      $139 = ((($$pre$i3$i$i)) + 12|0);
      $140 = HEAP32[$139>>2]|0;
      $141 = ((($$pre$i3$i$i)) + 16|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ($140|0)==($142|0);
      if ($143) {
       $144 = HEAP32[$$pre$i3$i$i>>2]|0;
       $145 = ((($144)) + 36|0);
       $146 = HEAP32[$145>>2]|0;
       __THREW__ = 0;
       $147 = (invoke_ii($146|0,($$pre$i3$i$i|0))|0);
       $148 = __THREW__; __THREW__ = 0;
       $149 = $148&1;
       if ($149) {
        label = 26;
        break L4;
       } else {
        $$0$i$i1$i$i = $147;
       }
      } else {
       $150 = HEAP32[$140>>2]|0;
       $$0$i$i1$i$i = $150;
      }
      $151 = ($$0$i$i1$i$i|0)==(-1);
      if ($151) {
       HEAP32[$__e>>2] = 0;
       label = 51;
       break;
      } else {
       if ($157) {
        break;
       } else {
        label = 53;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 51) {
     if ($157) {
      label = 53;
     }
    }
    if ((label|0) == 53) {
     $152 = HEAP32[$__err>>2]|0;
     $153 = $152 | 2;
     HEAP32[$__err>>2] = $153;
    }
    $154 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($154|0);
   }
  }
 } while(0);
 if ((label|0) == 26) {
  $78 = ___cxa_find_matching_catch()|0;
  $79 = tempRet0;
  $lpad$phi$index = $78;$lpad$phi$index2 = $79;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0;
 var $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(428,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L4: do {
  if ($10) {
   label = 26;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   $14 = ((($__buf)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($__buf)) + 1|0);
   $17 = $13 ? $16 : $15;
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = ((($__buf)) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L6: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;$155 = 1;
    } else {
     $21 = ((($$pre$i$i$i5)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i5)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 25;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $$pre$i$i$i = 0;$155 = 1;
     } else {
      $$pre$i$i$i = $$pre$i$i$i5;$155 = 0;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 17;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = ((($41)) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 25;
        break L6;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 17;
       break;
      } else {
       if ($155) {
        $156 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 17) {
     label = 0;
     if ($155) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $156 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    $53 = HEAP32[$18>>2]|0;
    $54 = $50&255;
    $55 = $54 >>> 1;
    $56 = $52 ? $55 : $53;
    $57 = (($__a$0) + ($56)|0);
    $58 = ($49|0)==($57|0);
    if ($58) {
     $59 = $56 << 1;
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($59|0),0);
     $60 = __THREW__; __THREW__ = 0;
     $61 = $60&1;
     if ($61) {
      label = 25;
      break;
     }
     $62 = HEAP8[$__buf>>0]|0;
     $63 = $62 & 1;
     $64 = ($63<<24>>24)==(0);
     if ($64) {
      $67 = 10;
     } else {
      $65 = HEAP32[$__buf>>2]|0;
      $66 = $65 & -2;
      $phitmp$i23 = (($66) + -1)|0;
      $67 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($67|0),0);
     $68 = __THREW__; __THREW__ = 0;
     $69 = $68&1;
     if ($69) {
      label = 25;
      break;
     }
     $70 = HEAP8[$__buf>>0]|0;
     $71 = $70 & 1;
     $72 = ($71<<24>>24)==(0);
     $73 = HEAP32[$14>>2]|0;
     $74 = $72 ? $16 : $73;
     $75 = (($74) + ($56)|0);
     HEAP32[$__a_end>>2] = $75;
     $__a$1 = $74;
    } else {
     $__a$1 = $__a$0;
    }
    $80 = ((($$pre$i$i$i)) + 12|0);
    $81 = HEAP32[$80>>2]|0;
    $82 = ((($$pre$i$i$i)) + 16|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = ($81|0)==($83|0);
    if ($84) {
     $85 = HEAP32[$$pre$i$i$i>>2]|0;
     $86 = ((($85)) + 36|0);
     $87 = HEAP32[$86>>2]|0;
     __THREW__ = 0;
     $88 = (invoke_ii($87|0,($$pre$i$i$i|0))|0);
     $89 = __THREW__; __THREW__ = 0;
     $90 = $89&1;
     if ($90) {
      label = 25;
      break;
     } else {
      $$0$i$i = $88;
     }
    } else {
     $91 = HEAP32[$81>>2]|0;
     $$0$i$i = $91;
    }
    $92 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $93 = ($92|0)==(0);
    if (!($93)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $156;$__a$2 = $__a$1;
     break;
    }
    $94 = HEAP32[$80>>2]|0;
    $95 = HEAP32[$82>>2]|0;
    $96 = ($94|0)==($95|0);
    if ($96) {
     $97 = HEAP32[$$pre$i$i$i>>2]|0;
     $98 = ((($97)) + 40|0);
     $99 = HEAP32[$98>>2]|0;
     __THREW__ = 0;
     (invoke_ii($99|0,($$pre$i$i$i|0))|0);
     $100 = __THREW__; __THREW__ = 0;
     $101 = $100&1;
     if ($101) {
      label = 25;
      break;
     } else {
      $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $102 = ((($94)) + 4|0);
     HEAP32[$80>>2] = $102;
     $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 25) {
    $76 = ___cxa_find_matching_catch()|0;
    $77 = tempRet0;
    $lpad$phi$index = $76;$lpad$phi$index2 = $77;
    break;
   }
   $103 = HEAP8[$__grouping>>0]|0;
   $104 = $103 & 1;
   $105 = ($104<<24>>24)==(0);
   $106 = ((($__grouping)) + 4|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = $103&255;
   $109 = $108 >>> 1;
   $110 = $105 ? $109 : $107;
   $111 = ($110|0)==(0);
   if (!($111)) {
    $112 = HEAP32[$__g_end>>2]|0;
    $113 = $112;
    $114 = $__g;
    $115 = (($113) - ($114))|0;
    $116 = ($115|0)<(160);
    if ($116) {
     $117 = HEAP32[$__dc>>2]|0;
     $118 = ((($112)) + 4|0);
     HEAP32[$__g_end>>2] = $118;
     HEAP32[$112>>2] = $117;
    }
   }
   $119 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $120 = (invoke_iiiii(526,($__a$2|0),($119|0),($__err|0),($0|0))|0);
   $121 = __THREW__; __THREW__ = 0;
   $122 = $121&1;
   if ($122) {
    label = 26;
   } else {
    HEAP32[$__v>>2] = $120;
    $123 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$123,$__err);
    $124 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($124) {
     $157 = 1;
    } else {
     $125 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $126 = HEAP32[$125>>2]|0;
     $127 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $128 = HEAP32[$127>>2]|0;
     $129 = ($126|0)==($128|0);
     if ($129) {
      $130 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $131 = ((($130)) + 36|0);
      $132 = HEAP32[$131>>2]|0;
      __THREW__ = 0;
      $133 = (invoke_ii($132|0,($$pre$i$i$i$lcssa|0))|0);
      $134 = __THREW__; __THREW__ = 0;
      $135 = $134&1;
      if ($135) {
       label = 26;
       break;
      } else {
       $$0$i$i$i$i = $133;
      }
     } else {
      $136 = HEAP32[$126>>2]|0;
      $$0$i$i$i$i = $136;
     }
     $137 = ($$0$i$i$i$i|0)==(-1);
     if ($137) {
      HEAP32[$__b>>2] = 0;
      $157 = 1;
     } else {
      $157 = 0;
     }
    }
    $138 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($138) {
      label = 51;
     } else {
      $139 = ((($$pre$i3$i$i)) + 12|0);
      $140 = HEAP32[$139>>2]|0;
      $141 = ((($$pre$i3$i$i)) + 16|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ($140|0)==($142|0);
      if ($143) {
       $144 = HEAP32[$$pre$i3$i$i>>2]|0;
       $145 = ((($144)) + 36|0);
       $146 = HEAP32[$145>>2]|0;
       __THREW__ = 0;
       $147 = (invoke_ii($146|0,($$pre$i3$i$i|0))|0);
       $148 = __THREW__; __THREW__ = 0;
       $149 = $148&1;
       if ($149) {
        label = 26;
        break L4;
       } else {
        $$0$i$i1$i$i = $147;
       }
      } else {
       $150 = HEAP32[$140>>2]|0;
       $$0$i$i1$i$i = $150;
      }
      $151 = ($$0$i$i1$i$i|0)==(-1);
      if ($151) {
       HEAP32[$__e>>2] = 0;
       label = 51;
       break;
      } else {
       if ($157) {
        break;
       } else {
        label = 53;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 51) {
     if ($157) {
      label = 53;
     }
    }
    if ((label|0) == 53) {
     $152 = HEAP32[$__err>>2]|0;
     $153 = $152 | 2;
     HEAP32[$__err>>2] = $153;
    }
    $154 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($154|0);
   }
  }
 } while(0);
 if ((label|0) == 26) {
  $78 = ___cxa_find_matching_catch()|0;
  $79 = tempRet0;
  $lpad$phi$index = $78;$lpad$phi$index2 = $79;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0;
 var $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(428,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L4: do {
  if ($10) {
   label = 26;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   $14 = ((($__buf)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($__buf)) + 1|0);
   $17 = $13 ? $16 : $15;
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = ((($__buf)) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L6: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;$155 = 1;
    } else {
     $21 = ((($$pre$i$i$i5)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i5)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 25;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $$pre$i$i$i = 0;$155 = 1;
     } else {
      $$pre$i$i$i = $$pre$i$i$i5;$155 = 0;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 17;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = ((($41)) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 25;
        break L6;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 17;
       break;
      } else {
       if ($155) {
        $156 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 17) {
     label = 0;
     if ($155) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $156 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    $53 = HEAP32[$18>>2]|0;
    $54 = $50&255;
    $55 = $54 >>> 1;
    $56 = $52 ? $55 : $53;
    $57 = (($__a$0) + ($56)|0);
    $58 = ($49|0)==($57|0);
    if ($58) {
     $59 = $56 << 1;
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($59|0),0);
     $60 = __THREW__; __THREW__ = 0;
     $61 = $60&1;
     if ($61) {
      label = 25;
      break;
     }
     $62 = HEAP8[$__buf>>0]|0;
     $63 = $62 & 1;
     $64 = ($63<<24>>24)==(0);
     if ($64) {
      $67 = 10;
     } else {
      $65 = HEAP32[$__buf>>2]|0;
      $66 = $65 & -2;
      $phitmp$i23 = (($66) + -1)|0;
      $67 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($67|0),0);
     $68 = __THREW__; __THREW__ = 0;
     $69 = $68&1;
     if ($69) {
      label = 25;
      break;
     }
     $70 = HEAP8[$__buf>>0]|0;
     $71 = $70 & 1;
     $72 = ($71<<24>>24)==(0);
     $73 = HEAP32[$14>>2]|0;
     $74 = $72 ? $16 : $73;
     $75 = (($74) + ($56)|0);
     HEAP32[$__a_end>>2] = $75;
     $__a$1 = $74;
    } else {
     $__a$1 = $__a$0;
    }
    $80 = ((($$pre$i$i$i)) + 12|0);
    $81 = HEAP32[$80>>2]|0;
    $82 = ((($$pre$i$i$i)) + 16|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = ($81|0)==($83|0);
    if ($84) {
     $85 = HEAP32[$$pre$i$i$i>>2]|0;
     $86 = ((($85)) + 36|0);
     $87 = HEAP32[$86>>2]|0;
     __THREW__ = 0;
     $88 = (invoke_ii($87|0,($$pre$i$i$i|0))|0);
     $89 = __THREW__; __THREW__ = 0;
     $90 = $89&1;
     if ($90) {
      label = 25;
      break;
     } else {
      $$0$i$i = $88;
     }
    } else {
     $91 = HEAP32[$81>>2]|0;
     $$0$i$i = $91;
    }
    $92 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $93 = ($92|0)==(0);
    if (!($93)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $156;$__a$2 = $__a$1;
     break;
    }
    $94 = HEAP32[$80>>2]|0;
    $95 = HEAP32[$82>>2]|0;
    $96 = ($94|0)==($95|0);
    if ($96) {
     $97 = HEAP32[$$pre$i$i$i>>2]|0;
     $98 = ((($97)) + 40|0);
     $99 = HEAP32[$98>>2]|0;
     __THREW__ = 0;
     (invoke_ii($99|0,($$pre$i$i$i|0))|0);
     $100 = __THREW__; __THREW__ = 0;
     $101 = $100&1;
     if ($101) {
      label = 25;
      break;
     } else {
      $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $102 = ((($94)) + 4|0);
     HEAP32[$80>>2] = $102;
     $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 25) {
    $76 = ___cxa_find_matching_catch()|0;
    $77 = tempRet0;
    $lpad$phi$index = $76;$lpad$phi$index2 = $77;
    break;
   }
   $103 = HEAP8[$__grouping>>0]|0;
   $104 = $103 & 1;
   $105 = ($104<<24>>24)==(0);
   $106 = ((($__grouping)) + 4|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = $103&255;
   $109 = $108 >>> 1;
   $110 = $105 ? $109 : $107;
   $111 = ($110|0)==(0);
   if (!($111)) {
    $112 = HEAP32[$__g_end>>2]|0;
    $113 = $112;
    $114 = $__g;
    $115 = (($113) - ($114))|0;
    $116 = ($115|0)<(160);
    if ($116) {
     $117 = HEAP32[$__dc>>2]|0;
     $118 = ((($112)) + 4|0);
     HEAP32[$__g_end>>2] = $118;
     HEAP32[$112>>2] = $117;
    }
   }
   $119 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $120 = (invoke_iiiii(527,($__a$2|0),($119|0),($__err|0),($0|0))|0);
   $121 = __THREW__; __THREW__ = 0;
   $122 = $121&1;
   if ($122) {
    label = 26;
   } else {
    HEAP32[$__v>>2] = $120;
    $123 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$123,$__err);
    $124 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($124) {
     $157 = 1;
    } else {
     $125 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $126 = HEAP32[$125>>2]|0;
     $127 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $128 = HEAP32[$127>>2]|0;
     $129 = ($126|0)==($128|0);
     if ($129) {
      $130 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $131 = ((($130)) + 36|0);
      $132 = HEAP32[$131>>2]|0;
      __THREW__ = 0;
      $133 = (invoke_ii($132|0,($$pre$i$i$i$lcssa|0))|0);
      $134 = __THREW__; __THREW__ = 0;
      $135 = $134&1;
      if ($135) {
       label = 26;
       break;
      } else {
       $$0$i$i$i$i = $133;
      }
     } else {
      $136 = HEAP32[$126>>2]|0;
      $$0$i$i$i$i = $136;
     }
     $137 = ($$0$i$i$i$i|0)==(-1);
     if ($137) {
      HEAP32[$__b>>2] = 0;
      $157 = 1;
     } else {
      $157 = 0;
     }
    }
    $138 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($138) {
      label = 51;
     } else {
      $139 = ((($$pre$i3$i$i)) + 12|0);
      $140 = HEAP32[$139>>2]|0;
      $141 = ((($$pre$i3$i$i)) + 16|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ($140|0)==($142|0);
      if ($143) {
       $144 = HEAP32[$$pre$i3$i$i>>2]|0;
       $145 = ((($144)) + 36|0);
       $146 = HEAP32[$145>>2]|0;
       __THREW__ = 0;
       $147 = (invoke_ii($146|0,($$pre$i3$i$i|0))|0);
       $148 = __THREW__; __THREW__ = 0;
       $149 = $148&1;
       if ($149) {
        label = 26;
        break L4;
       } else {
        $$0$i$i1$i$i = $147;
       }
      } else {
       $150 = HEAP32[$140>>2]|0;
       $$0$i$i1$i$i = $150;
      }
      $151 = ($$0$i$i1$i$i|0)==(-1);
      if ($151) {
       HEAP32[$__e>>2] = 0;
       label = 51;
       break;
      } else {
       if ($157) {
        break;
       } else {
        label = 53;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 51) {
     if ($157) {
      label = 53;
     }
    }
    if ((label|0) == 53) {
     $152 = HEAP32[$__err>>2]|0;
     $153 = $152 | 2;
     HEAP32[$__err>>2] = $153;
    }
    $154 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($154|0);
   }
  }
 } while(0);
 if ((label|0) == 26) {
  $78 = ___cxa_find_matching_catch()|0;
  $79 = tempRet0;
  $lpad$phi$index = $78;$lpad$phi$index2 = $79;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0;
 var $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $1 = ((($__buf)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($__buf)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(428,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L4: do {
  if ($10) {
   label = 26;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   $14 = ((($__buf)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($__buf)) + 1|0);
   $17 = $13 ? $16 : $15;
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = ((($__buf)) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L6: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;$160 = 1;
    } else {
     $21 = ((($$pre$i$i$i5)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i5)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 25;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $$pre$i$i$i = 0;$160 = 1;
     } else {
      $$pre$i$i$i = $$pre$i$i$i5;$160 = 0;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 17;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = ((($41)) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 25;
        break L6;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 17;
       break;
      } else {
       if ($160) {
        $161 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 17) {
     label = 0;
     if ($160) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $161 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    $53 = HEAP32[$18>>2]|0;
    $54 = $50&255;
    $55 = $54 >>> 1;
    $56 = $52 ? $55 : $53;
    $57 = (($__a$0) + ($56)|0);
    $58 = ($49|0)==($57|0);
    if ($58) {
     $59 = $56 << 1;
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($59|0),0);
     $60 = __THREW__; __THREW__ = 0;
     $61 = $60&1;
     if ($61) {
      label = 25;
      break;
     }
     $62 = HEAP8[$__buf>>0]|0;
     $63 = $62 & 1;
     $64 = ($63<<24>>24)==(0);
     if ($64) {
      $67 = 10;
     } else {
      $65 = HEAP32[$__buf>>2]|0;
      $66 = $65 & -2;
      $phitmp$i23 = (($66) + -1)|0;
      $67 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($67|0),0);
     $68 = __THREW__; __THREW__ = 0;
     $69 = $68&1;
     if ($69) {
      label = 25;
      break;
     }
     $70 = HEAP8[$__buf>>0]|0;
     $71 = $70 & 1;
     $72 = ($71<<24>>24)==(0);
     $73 = HEAP32[$14>>2]|0;
     $74 = $72 ? $16 : $73;
     $75 = (($74) + ($56)|0);
     HEAP32[$__a_end>>2] = $75;
     $__a$1 = $74;
    } else {
     $__a$1 = $__a$0;
    }
    $80 = ((($$pre$i$i$i)) + 12|0);
    $81 = HEAP32[$80>>2]|0;
    $82 = ((($$pre$i$i$i)) + 16|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = ($81|0)==($83|0);
    if ($84) {
     $85 = HEAP32[$$pre$i$i$i>>2]|0;
     $86 = ((($85)) + 36|0);
     $87 = HEAP32[$86>>2]|0;
     __THREW__ = 0;
     $88 = (invoke_ii($87|0,($$pre$i$i$i|0))|0);
     $89 = __THREW__; __THREW__ = 0;
     $90 = $89&1;
     if ($90) {
      label = 25;
      break;
     } else {
      $$0$i$i = $88;
     }
    } else {
     $91 = HEAP32[$81>>2]|0;
     $$0$i$i = $91;
    }
    $92 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $93 = ($92|0)==(0);
    if (!($93)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $161;$__a$2 = $__a$1;
     break;
    }
    $94 = HEAP32[$80>>2]|0;
    $95 = HEAP32[$82>>2]|0;
    $96 = ($94|0)==($95|0);
    if ($96) {
     $97 = HEAP32[$$pre$i$i$i>>2]|0;
     $98 = ((($97)) + 40|0);
     $99 = HEAP32[$98>>2]|0;
     __THREW__ = 0;
     (invoke_ii($99|0,($$pre$i$i$i|0))|0);
     $100 = __THREW__; __THREW__ = 0;
     $101 = $100&1;
     if ($101) {
      label = 25;
      break;
     } else {
      $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $102 = ((($94)) + 4|0);
     HEAP32[$80>>2] = $102;
     $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 25) {
    $76 = ___cxa_find_matching_catch()|0;
    $77 = tempRet0;
    $lpad$phi$index = $76;$lpad$phi$index2 = $77;
    break;
   }
   $103 = HEAP8[$__grouping>>0]|0;
   $104 = $103 & 1;
   $105 = ($104<<24>>24)==(0);
   $106 = ((($__grouping)) + 4|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = $103&255;
   $109 = $108 >>> 1;
   $110 = $105 ? $109 : $107;
   $111 = ($110|0)==(0);
   if (!($111)) {
    $112 = HEAP32[$__g_end>>2]|0;
    $113 = $112;
    $114 = $__g;
    $115 = (($113) - ($114))|0;
    $116 = ($115|0)<(160);
    if ($116) {
     $117 = HEAP32[$__dc>>2]|0;
     $118 = ((($112)) + 4|0);
     HEAP32[$__g_end>>2] = $118;
     HEAP32[$112>>2] = $117;
    }
   }
   $119 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $120 = (invoke_iiiii(528,($__a$2|0),($119|0),($__err|0),($0|0))|0);
   $121 = tempRet0;
   $122 = __THREW__; __THREW__ = 0;
   $123 = $122&1;
   if ($123) {
    label = 26;
   } else {
    $124 = $__v;
    $125 = $124;
    HEAP32[$125>>2] = $120;
    $126 = (($124) + 4)|0;
    $127 = $126;
    HEAP32[$127>>2] = $121;
    $128 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$128,$__err);
    $129 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($129) {
     $162 = 1;
    } else {
     $130 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $131 = HEAP32[$130>>2]|0;
     $132 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $133 = HEAP32[$132>>2]|0;
     $134 = ($131|0)==($133|0);
     if ($134) {
      $135 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $136 = ((($135)) + 36|0);
      $137 = HEAP32[$136>>2]|0;
      __THREW__ = 0;
      $138 = (invoke_ii($137|0,($$pre$i$i$i$lcssa|0))|0);
      $139 = __THREW__; __THREW__ = 0;
      $140 = $139&1;
      if ($140) {
       label = 26;
       break;
      } else {
       $$0$i$i$i$i = $138;
      }
     } else {
      $141 = HEAP32[$131>>2]|0;
      $$0$i$i$i$i = $141;
     }
     $142 = ($$0$i$i$i$i|0)==(-1);
     if ($142) {
      HEAP32[$__b>>2] = 0;
      $162 = 1;
     } else {
      $162 = 0;
     }
    }
    $143 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($143) {
      label = 51;
     } else {
      $144 = ((($$pre$i3$i$i)) + 12|0);
      $145 = HEAP32[$144>>2]|0;
      $146 = ((($$pre$i3$i$i)) + 16|0);
      $147 = HEAP32[$146>>2]|0;
      $148 = ($145|0)==($147|0);
      if ($148) {
       $149 = HEAP32[$$pre$i3$i$i>>2]|0;
       $150 = ((($149)) + 36|0);
       $151 = HEAP32[$150>>2]|0;
       __THREW__ = 0;
       $152 = (invoke_ii($151|0,($$pre$i3$i$i|0))|0);
       $153 = __THREW__; __THREW__ = 0;
       $154 = $153&1;
       if ($154) {
        label = 26;
        break L4;
       } else {
        $$0$i$i1$i$i = $152;
       }
      } else {
       $155 = HEAP32[$145>>2]|0;
       $$0$i$i1$i$i = $155;
      }
      $156 = ($$0$i$i1$i$i|0)==(-1);
      if ($156) {
       HEAP32[$__e>>2] = 0;
       label = 51;
       break;
      } else {
       if ($162) {
        break;
       } else {
        label = 53;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 51) {
     if ($162) {
      label = 53;
     }
    }
    if ((label|0) == 53) {
     $157 = HEAP32[$__err>>2]|0;
     $158 = $157 | 2;
     HEAP32[$__err>>2] = $158;
    }
    $159 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($159|0);
   }
  }
 } while(0);
 if ((label|0) == 26) {
  $78 = ___cxa_find_matching_catch()|0;
  $79 = tempRet0;
  $lpad$phi$index = $78;$lpad$phi$index2 = $79;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0.0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0;
 var $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i24 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(428,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L4: do {
  if ($9) {
   label = 26;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__buf)) + 8|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ((($__buf)) + 1|0);
   $16 = $12 ? $15 : $14;
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = ((($__buf)) + 4|0);
   $18 = HEAP32[$__decimal_point>>2]|0;
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i6 = $$pre;$__a$0 = $16;
   L6: while(1) {
    $20 = ($$pre$i$i$i6|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;$157 = 1;
    } else {
     $21 = ((($$pre$i$i$i6)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i6)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i6>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i6|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 25;
       break;
      } else {
       $$0$i$i$i$i4 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i4 = $32;
     }
     $33 = ($$0$i$i$i$i4|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $$pre$i$i$i = 0;$157 = 1;
     } else {
      $$pre$i$i$i = $$pre$i$i$i6;$157 = 0;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 17;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = ((($41)) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 25;
        break L6;
       } else {
        $$0$i$i1$i$i10 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i10 = $47;
      }
      $48 = ($$0$i$i1$i$i10|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 17;
       break;
      } else {
       if ($157) {
        $158 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 17) {
     label = 0;
     if ($157) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $158 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    $53 = HEAP32[$17>>2]|0;
    $54 = $50&255;
    $55 = $54 >>> 1;
    $56 = $52 ? $55 : $53;
    $57 = (($__a$0) + ($56)|0);
    $58 = ($49|0)==($57|0);
    if ($58) {
     $59 = $56 << 1;
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($59|0),0);
     $60 = __THREW__; __THREW__ = 0;
     $61 = $60&1;
     if ($61) {
      label = 25;
      break;
     }
     $62 = HEAP8[$__buf>>0]|0;
     $63 = $62 & 1;
     $64 = ($63<<24>>24)==(0);
     if ($64) {
      $67 = 10;
     } else {
      $65 = HEAP32[$__buf>>2]|0;
      $66 = $65 & -2;
      $phitmp$i24 = (($66) + -1)|0;
      $67 = $phitmp$i24;
     }
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($67|0),0);
     $68 = __THREW__; __THREW__ = 0;
     $69 = $68&1;
     if ($69) {
      label = 25;
      break;
     }
     $70 = HEAP8[$__buf>>0]|0;
     $71 = $70 & 1;
     $72 = ($71<<24>>24)==(0);
     $73 = HEAP32[$13>>2]|0;
     $74 = $72 ? $15 : $73;
     $75 = (($74) + ($56)|0);
     HEAP32[$__a_end>>2] = $75;
     $__a$1 = $74;
    } else {
     $__a$1 = $__a$0;
    }
    $80 = ((($$pre$i$i$i)) + 12|0);
    $81 = HEAP32[$80>>2]|0;
    $82 = ((($$pre$i$i$i)) + 16|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = ($81|0)==($83|0);
    if ($84) {
     $85 = HEAP32[$$pre$i$i$i>>2]|0;
     $86 = ((($85)) + 36|0);
     $87 = HEAP32[$86>>2]|0;
     __THREW__ = 0;
     $88 = (invoke_ii($87|0,($$pre$i$i$i|0))|0);
     $89 = __THREW__; __THREW__ = 0;
     $90 = $89&1;
     if ($90) {
      label = 25;
      break;
     } else {
      $$0$i$i = $88;
     }
    } else {
     $91 = HEAP32[$81>>2]|0;
     $$0$i$i = $91;
    }
    $92 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $93 = ($92|0)==(0);
    if (!($93)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $158;$__a$2 = $__a$1;
     break;
    }
    $94 = HEAP32[$80>>2]|0;
    $95 = HEAP32[$82>>2]|0;
    $96 = ($94|0)==($95|0);
    if ($96) {
     $97 = HEAP32[$$pre$i$i$i>>2]|0;
     $98 = ((($97)) + 40|0);
     $99 = HEAP32[$98>>2]|0;
     __THREW__ = 0;
     (invoke_ii($99|0,($$pre$i$i$i|0))|0);
     $100 = __THREW__; __THREW__ = 0;
     $101 = $100&1;
     if ($101) {
      label = 25;
      break;
     } else {
      $$pre$i$i$i6 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $102 = ((($94)) + 4|0);
     HEAP32[$80>>2] = $102;
     $$pre$i$i$i6 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 25) {
    $76 = ___cxa_find_matching_catch()|0;
    $77 = tempRet0;
    $lpad$phi$index = $76;$lpad$phi$index2 = $77;
    break;
   }
   $103 = HEAP8[$__grouping>>0]|0;
   $104 = $103 & 1;
   $105 = ($104<<24>>24)==(0);
   $106 = ((($__grouping)) + 4|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = $103&255;
   $109 = $108 >>> 1;
   $110 = $105 ? $109 : $107;
   $111 = ($110|0)==(0);
   $112 = HEAP8[$__in_units>>0]|0;
   $113 = ($112<<24>>24)==(0);
   $or$cond = $113 | $111;
   if (!($or$cond)) {
    $114 = HEAP32[$__g_end>>2]|0;
    $115 = $114;
    $116 = $__g;
    $117 = (($115) - ($116))|0;
    $118 = ($117|0)<(160);
    if ($118) {
     $119 = HEAP32[$__dc>>2]|0;
     $120 = ((($114)) + 4|0);
     HEAP32[$__g_end>>2] = $120;
     HEAP32[$114>>2] = $119;
    }
   }
   $121 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $122 = (+invoke_diii(529,($__a$2|0),($121|0),($__err|0)));
   $123 = __THREW__; __THREW__ = 0;
   $124 = $123&1;
   if ($124) {
    label = 26;
   } else {
    HEAPF32[$__v>>2] = $122;
    $125 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$125,$__err);
    $126 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($126) {
     $159 = 1;
    } else {
     $127 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $128 = HEAP32[$127>>2]|0;
     $129 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $130 = HEAP32[$129>>2]|0;
     $131 = ($128|0)==($130|0);
     if ($131) {
      $132 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $133 = ((($132)) + 36|0);
      $134 = HEAP32[$133>>2]|0;
      __THREW__ = 0;
      $135 = (invoke_ii($134|0,($$pre$i$i$i$lcssa|0))|0);
      $136 = __THREW__; __THREW__ = 0;
      $137 = $136&1;
      if ($137) {
       label = 26;
       break;
      } else {
       $$0$i$i$i$i = $135;
      }
     } else {
      $138 = HEAP32[$128>>2]|0;
      $$0$i$i$i$i = $138;
     }
     $139 = ($$0$i$i$i$i|0)==(-1);
     if ($139) {
      HEAP32[$__b>>2] = 0;
      $159 = 1;
     } else {
      $159 = 0;
     }
    }
    $140 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($140) {
      label = 51;
     } else {
      $141 = ((($$pre$i3$i$i)) + 12|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ((($$pre$i3$i$i)) + 16|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ($142|0)==($144|0);
      if ($145) {
       $146 = HEAP32[$$pre$i3$i$i>>2]|0;
       $147 = ((($146)) + 36|0);
       $148 = HEAP32[$147>>2]|0;
       __THREW__ = 0;
       $149 = (invoke_ii($148|0,($$pre$i3$i$i|0))|0);
       $150 = __THREW__; __THREW__ = 0;
       $151 = $150&1;
       if ($151) {
        label = 26;
        break L4;
       } else {
        $$0$i$i1$i$i = $149;
       }
      } else {
       $152 = HEAP32[$142>>2]|0;
       $$0$i$i1$i$i = $152;
      }
      $153 = ($$0$i$i1$i$i|0)==(-1);
      if ($153) {
       HEAP32[$__e>>2] = 0;
       label = 51;
       break;
      } else {
       if ($159) {
        break;
       } else {
        label = 53;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 51) {
     if ($159) {
      label = 53;
     }
    }
    if ((label|0) == 53) {
     $154 = HEAP32[$__err>>2]|0;
     $155 = $154 | 2;
     HEAP32[$__err>>2] = $155;
    }
    $156 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($156|0);
   }
  }
 } while(0);
 if ((label|0) == 26) {
  $78 = ___cxa_find_matching_catch()|0;
  $79 = tempRet0;
  $lpad$phi$index = $78;$lpad$phi$index2 = $79;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0.0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0;
 var $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i24 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(428,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L4: do {
  if ($9) {
   label = 26;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__buf)) + 8|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ((($__buf)) + 1|0);
   $16 = $12 ? $15 : $14;
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = ((($__buf)) + 4|0);
   $18 = HEAP32[$__decimal_point>>2]|0;
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i6 = $$pre;$__a$0 = $16;
   L6: while(1) {
    $20 = ($$pre$i$i$i6|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;$157 = 1;
    } else {
     $21 = ((($$pre$i$i$i6)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i6)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i6>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i6|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 25;
       break;
      } else {
       $$0$i$i$i$i4 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i4 = $32;
     }
     $33 = ($$0$i$i$i$i4|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $$pre$i$i$i = 0;$157 = 1;
     } else {
      $$pre$i$i$i = $$pre$i$i$i6;$157 = 0;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 17;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = ((($41)) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 25;
        break L6;
       } else {
        $$0$i$i1$i$i10 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i10 = $47;
      }
      $48 = ($$0$i$i1$i$i10|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 17;
       break;
      } else {
       if ($157) {
        $158 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 17) {
     label = 0;
     if ($157) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $158 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    $53 = HEAP32[$17>>2]|0;
    $54 = $50&255;
    $55 = $54 >>> 1;
    $56 = $52 ? $55 : $53;
    $57 = (($__a$0) + ($56)|0);
    $58 = ($49|0)==($57|0);
    if ($58) {
     $59 = $56 << 1;
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($59|0),0);
     $60 = __THREW__; __THREW__ = 0;
     $61 = $60&1;
     if ($61) {
      label = 25;
      break;
     }
     $62 = HEAP8[$__buf>>0]|0;
     $63 = $62 & 1;
     $64 = ($63<<24>>24)==(0);
     if ($64) {
      $67 = 10;
     } else {
      $65 = HEAP32[$__buf>>2]|0;
      $66 = $65 & -2;
      $phitmp$i24 = (($66) + -1)|0;
      $67 = $phitmp$i24;
     }
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($67|0),0);
     $68 = __THREW__; __THREW__ = 0;
     $69 = $68&1;
     if ($69) {
      label = 25;
      break;
     }
     $70 = HEAP8[$__buf>>0]|0;
     $71 = $70 & 1;
     $72 = ($71<<24>>24)==(0);
     $73 = HEAP32[$13>>2]|0;
     $74 = $72 ? $15 : $73;
     $75 = (($74) + ($56)|0);
     HEAP32[$__a_end>>2] = $75;
     $__a$1 = $74;
    } else {
     $__a$1 = $__a$0;
    }
    $80 = ((($$pre$i$i$i)) + 12|0);
    $81 = HEAP32[$80>>2]|0;
    $82 = ((($$pre$i$i$i)) + 16|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = ($81|0)==($83|0);
    if ($84) {
     $85 = HEAP32[$$pre$i$i$i>>2]|0;
     $86 = ((($85)) + 36|0);
     $87 = HEAP32[$86>>2]|0;
     __THREW__ = 0;
     $88 = (invoke_ii($87|0,($$pre$i$i$i|0))|0);
     $89 = __THREW__; __THREW__ = 0;
     $90 = $89&1;
     if ($90) {
      label = 25;
      break;
     } else {
      $$0$i$i = $88;
     }
    } else {
     $91 = HEAP32[$81>>2]|0;
     $$0$i$i = $91;
    }
    $92 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $93 = ($92|0)==(0);
    if (!($93)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $158;$__a$2 = $__a$1;
     break;
    }
    $94 = HEAP32[$80>>2]|0;
    $95 = HEAP32[$82>>2]|0;
    $96 = ($94|0)==($95|0);
    if ($96) {
     $97 = HEAP32[$$pre$i$i$i>>2]|0;
     $98 = ((($97)) + 40|0);
     $99 = HEAP32[$98>>2]|0;
     __THREW__ = 0;
     (invoke_ii($99|0,($$pre$i$i$i|0))|0);
     $100 = __THREW__; __THREW__ = 0;
     $101 = $100&1;
     if ($101) {
      label = 25;
      break;
     } else {
      $$pre$i$i$i6 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $102 = ((($94)) + 4|0);
     HEAP32[$80>>2] = $102;
     $$pre$i$i$i6 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 25) {
    $76 = ___cxa_find_matching_catch()|0;
    $77 = tempRet0;
    $lpad$phi$index = $76;$lpad$phi$index2 = $77;
    break;
   }
   $103 = HEAP8[$__grouping>>0]|0;
   $104 = $103 & 1;
   $105 = ($104<<24>>24)==(0);
   $106 = ((($__grouping)) + 4|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = $103&255;
   $109 = $108 >>> 1;
   $110 = $105 ? $109 : $107;
   $111 = ($110|0)==(0);
   $112 = HEAP8[$__in_units>>0]|0;
   $113 = ($112<<24>>24)==(0);
   $or$cond = $113 | $111;
   if (!($or$cond)) {
    $114 = HEAP32[$__g_end>>2]|0;
    $115 = $114;
    $116 = $__g;
    $117 = (($115) - ($116))|0;
    $118 = ($117|0)<(160);
    if ($118) {
     $119 = HEAP32[$__dc>>2]|0;
     $120 = ((($114)) + 4|0);
     HEAP32[$__g_end>>2] = $120;
     HEAP32[$114>>2] = $119;
    }
   }
   $121 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $122 = (+invoke_diii(530,($__a$2|0),($121|0),($__err|0)));
   $123 = __THREW__; __THREW__ = 0;
   $124 = $123&1;
   if ($124) {
    label = 26;
   } else {
    HEAPF64[$__v>>3] = $122;
    $125 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$125,$__err);
    $126 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($126) {
     $159 = 1;
    } else {
     $127 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $128 = HEAP32[$127>>2]|0;
     $129 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $130 = HEAP32[$129>>2]|0;
     $131 = ($128|0)==($130|0);
     if ($131) {
      $132 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $133 = ((($132)) + 36|0);
      $134 = HEAP32[$133>>2]|0;
      __THREW__ = 0;
      $135 = (invoke_ii($134|0,($$pre$i$i$i$lcssa|0))|0);
      $136 = __THREW__; __THREW__ = 0;
      $137 = $136&1;
      if ($137) {
       label = 26;
       break;
      } else {
       $$0$i$i$i$i = $135;
      }
     } else {
      $138 = HEAP32[$128>>2]|0;
      $$0$i$i$i$i = $138;
     }
     $139 = ($$0$i$i$i$i|0)==(-1);
     if ($139) {
      HEAP32[$__b>>2] = 0;
      $159 = 1;
     } else {
      $159 = 0;
     }
    }
    $140 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($140) {
      label = 51;
     } else {
      $141 = ((($$pre$i3$i$i)) + 12|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ((($$pre$i3$i$i)) + 16|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ($142|0)==($144|0);
      if ($145) {
       $146 = HEAP32[$$pre$i3$i$i>>2]|0;
       $147 = ((($146)) + 36|0);
       $148 = HEAP32[$147>>2]|0;
       __THREW__ = 0;
       $149 = (invoke_ii($148|0,($$pre$i3$i$i|0))|0);
       $150 = __THREW__; __THREW__ = 0;
       $151 = $150&1;
       if ($151) {
        label = 26;
        break L4;
       } else {
        $$0$i$i1$i$i = $149;
       }
      } else {
       $152 = HEAP32[$142>>2]|0;
       $$0$i$i1$i$i = $152;
      }
      $153 = ($$0$i$i1$i$i|0)==(-1);
      if ($153) {
       HEAP32[$__e>>2] = 0;
       label = 51;
       break;
      } else {
       if ($159) {
        break;
       } else {
        label = 53;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 51) {
     if ($159) {
      label = 53;
     }
    }
    if ((label|0) == 53) {
     $154 = HEAP32[$__err>>2]|0;
     $155 = $154 | 2;
     HEAP32[$__err>>2] = $155;
    }
    $156 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($156|0);
   }
  }
 } while(0);
 if ((label|0) == 26) {
  $78 = ___cxa_find_matching_catch()|0;
  $79 = tempRet0;
  $lpad$phi$index = $78;$lpad$phi$index2 = $79;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0.0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0;
 var $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i24 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 HEAP32[$__buf>>2] = 0;
 $0 = ((($__buf)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($__buf)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(428,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L4: do {
  if ($9) {
   label = 26;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__buf)) + 8|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ((($__buf)) + 1|0);
   $16 = $12 ? $15 : $14;
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = ((($__buf)) + 4|0);
   $18 = HEAP32[$__decimal_point>>2]|0;
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i6 = $$pre;$__a$0 = $16;
   L6: while(1) {
    $20 = ($$pre$i$i$i6|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;$157 = 1;
    } else {
     $21 = ((($$pre$i$i$i6)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i6)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i6>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i6|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 25;
       break;
      } else {
       $$0$i$i$i$i4 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i4 = $32;
     }
     $33 = ($$0$i$i$i$i4|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $$pre$i$i$i = 0;$157 = 1;
     } else {
      $$pre$i$i$i = $$pre$i$i$i6;$157 = 0;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 17;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = ((($41)) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 25;
        break L6;
       } else {
        $$0$i$i1$i$i10 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i10 = $47;
      }
      $48 = ($$0$i$i1$i$i10|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 17;
       break;
      } else {
       if ($157) {
        $158 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L6;
       }
      }
     }
    } while(0);
    if ((label|0) == 17) {
     label = 0;
     if ($157) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $158 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    $53 = HEAP32[$17>>2]|0;
    $54 = $50&255;
    $55 = $54 >>> 1;
    $56 = $52 ? $55 : $53;
    $57 = (($__a$0) + ($56)|0);
    $58 = ($49|0)==($57|0);
    if ($58) {
     $59 = $56 << 1;
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($59|0),0);
     $60 = __THREW__; __THREW__ = 0;
     $61 = $60&1;
     if ($61) {
      label = 25;
      break;
     }
     $62 = HEAP8[$__buf>>0]|0;
     $63 = $62 & 1;
     $64 = ($63<<24>>24)==(0);
     if ($64) {
      $67 = 10;
     } else {
      $65 = HEAP32[$__buf>>2]|0;
      $66 = $65 & -2;
      $phitmp$i24 = (($66) + -1)|0;
      $67 = $phitmp$i24;
     }
     __THREW__ = 0;
     invoke_viii(428,($__buf|0),($67|0),0);
     $68 = __THREW__; __THREW__ = 0;
     $69 = $68&1;
     if ($69) {
      label = 25;
      break;
     }
     $70 = HEAP8[$__buf>>0]|0;
     $71 = $70 & 1;
     $72 = ($71<<24>>24)==(0);
     $73 = HEAP32[$13>>2]|0;
     $74 = $72 ? $15 : $73;
     $75 = (($74) + ($56)|0);
     HEAP32[$__a_end>>2] = $75;
     $__a$1 = $74;
    } else {
     $__a$1 = $__a$0;
    }
    $80 = ((($$pre$i$i$i)) + 12|0);
    $81 = HEAP32[$80>>2]|0;
    $82 = ((($$pre$i$i$i)) + 16|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = ($81|0)==($83|0);
    if ($84) {
     $85 = HEAP32[$$pre$i$i$i>>2]|0;
     $86 = ((($85)) + 36|0);
     $87 = HEAP32[$86>>2]|0;
     __THREW__ = 0;
     $88 = (invoke_ii($87|0,($$pre$i$i$i|0))|0);
     $89 = __THREW__; __THREW__ = 0;
     $90 = $89&1;
     if ($90) {
      label = 25;
      break;
     } else {
      $$0$i$i = $88;
     }
    } else {
     $91 = HEAP32[$81>>2]|0;
     $$0$i$i = $91;
    }
    $92 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $93 = ($92|0)==(0);
    if (!($93)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $158;$__a$2 = $__a$1;
     break;
    }
    $94 = HEAP32[$80>>2]|0;
    $95 = HEAP32[$82>>2]|0;
    $96 = ($94|0)==($95|0);
    if ($96) {
     $97 = HEAP32[$$pre$i$i$i>>2]|0;
     $98 = ((($97)) + 40|0);
     $99 = HEAP32[$98>>2]|0;
     __THREW__ = 0;
     (invoke_ii($99|0,($$pre$i$i$i|0))|0);
     $100 = __THREW__; __THREW__ = 0;
     $101 = $100&1;
     if ($101) {
      label = 25;
      break;
     } else {
      $$pre$i$i$i6 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $102 = ((($94)) + 4|0);
     HEAP32[$80>>2] = $102;
     $$pre$i$i$i6 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 25) {
    $76 = ___cxa_find_matching_catch()|0;
    $77 = tempRet0;
    $lpad$phi$index = $76;$lpad$phi$index2 = $77;
    break;
   }
   $103 = HEAP8[$__grouping>>0]|0;
   $104 = $103 & 1;
   $105 = ($104<<24>>24)==(0);
   $106 = ((($__grouping)) + 4|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = $103&255;
   $109 = $108 >>> 1;
   $110 = $105 ? $109 : $107;
   $111 = ($110|0)==(0);
   $112 = HEAP8[$__in_units>>0]|0;
   $113 = ($112<<24>>24)==(0);
   $or$cond = $113 | $111;
   if (!($or$cond)) {
    $114 = HEAP32[$__g_end>>2]|0;
    $115 = $114;
    $116 = $__g;
    $117 = (($115) - ($116))|0;
    $118 = ($117|0)<(160);
    if ($118) {
     $119 = HEAP32[$__dc>>2]|0;
     $120 = ((($114)) + 4|0);
     HEAP32[$__g_end>>2] = $120;
     HEAP32[$114>>2] = $119;
    }
   }
   $121 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $122 = (+invoke_diii(531,($__a$2|0),($121|0),($__err|0)));
   $123 = __THREW__; __THREW__ = 0;
   $124 = $123&1;
   if ($124) {
    label = 26;
   } else {
    HEAPF64[$__v>>3] = $122;
    $125 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$125,$__err);
    $126 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($126) {
     $159 = 1;
    } else {
     $127 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $128 = HEAP32[$127>>2]|0;
     $129 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $130 = HEAP32[$129>>2]|0;
     $131 = ($128|0)==($130|0);
     if ($131) {
      $132 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $133 = ((($132)) + 36|0);
      $134 = HEAP32[$133>>2]|0;
      __THREW__ = 0;
      $135 = (invoke_ii($134|0,($$pre$i$i$i$lcssa|0))|0);
      $136 = __THREW__; __THREW__ = 0;
      $137 = $136&1;
      if ($137) {
       label = 26;
       break;
      } else {
       $$0$i$i$i$i = $135;
      }
     } else {
      $138 = HEAP32[$128>>2]|0;
      $$0$i$i$i$i = $138;
     }
     $139 = ($$0$i$i$i$i|0)==(-1);
     if ($139) {
      HEAP32[$__b>>2] = 0;
      $159 = 1;
     } else {
      $159 = 0;
     }
    }
    $140 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($140) {
      label = 51;
     } else {
      $141 = ((($$pre$i3$i$i)) + 12|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ((($$pre$i3$i$i)) + 16|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ($142|0)==($144|0);
      if ($145) {
       $146 = HEAP32[$$pre$i3$i$i>>2]|0;
       $147 = ((($146)) + 36|0);
       $148 = HEAP32[$147>>2]|0;
       __THREW__ = 0;
       $149 = (invoke_ii($148|0,($$pre$i3$i$i|0))|0);
       $150 = __THREW__; __THREW__ = 0;
       $151 = $150&1;
       if ($151) {
        label = 26;
        break L4;
       } else {
        $$0$i$i1$i$i = $149;
       }
      } else {
       $152 = HEAP32[$142>>2]|0;
       $$0$i$i1$i$i = $152;
      }
      $153 = ($$0$i$i1$i$i|0)==(-1);
      if ($153) {
       HEAP32[$__e>>2] = 0;
       label = 51;
       break;
      } else {
       if ($159) {
        break;
       } else {
        label = 53;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 51) {
     if ($159) {
      label = 53;
     }
    }
    if ((label|0) == 53) {
     $154 = HEAP32[$__err>>2]|0;
     $155 = $154 | 2;
     HEAP32[$__err>>2] = $155;
    }
    $156 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($156|0);
   }
  }
 } while(0);
 if ((label|0) == 26) {
  $78 = ___cxa_find_matching_catch()|0;
  $79 = tempRet0;
  $lpad$phi$index = $78;$lpad$phi$index2 = $79;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__s,$__n,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__n = $__n|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale($__l)|0);
 $1 = (_vsnprintf($__s,$__n,$__format,$__va)|0);
 $2 = ($0|0)==(0|0);
 if (!($2)) {
  __THREW__ = 0;
  (invoke_ii(444,($0|0))|0);
  $3 = __THREW__; __THREW__ = 0;
  $4 = $3&1;
  if ($4) {
   $5 = ___cxa_find_matching_catch(0|0)|0;
   $6 = tempRet0;
   ___clang_call_terminate($5);
   // unreachable;
  }
 }
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__s,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale($__l)|0);
 __THREW__ = 0;
 $1 = (invoke_iiii(532,($__s|0),($__format|0),($__va|0))|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 if ($3) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  $11 = ($0|0)==(0|0);
  if (!($11)) {
   __THREW__ = 0;
   (invoke_ii(444,($0|0))|0);
   $12 = __THREW__; __THREW__ = 0;
   $13 = $12&1;
   if ($13) {
    $14 = ___cxa_find_matching_catch(0|0)|0;
    $15 = tempRet0;
    ___clang_call_terminate($14);
    // unreachable;
   }
  }
  ___resumeException($9|0);
  // unreachable;
 } else {
  $4 = ($0|0)==(0|0);
  if (!($4)) {
   __THREW__ = 0;
   (invoke_ii(444,($0|0))|0);
   $5 = __THREW__; __THREW__ = 0;
   $6 = $5&1;
   if ($6) {
    $7 = ___cxa_find_matching_catch(0|0)|0;
    $8 = tempRet0;
    ___clang_call_terminate($7);
    // unreachable;
   }
  }
  STACKTOP = sp;return ($1|0);
 }
 return (0)|0;
}
function __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($__s,$__ob,$__op,$__oe,$__iob,$__fl) {
 $__s = $__s|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 var $$sroa$0$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__ns$0 = 0, $__sp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__sp = sp;
 $0 = HEAP32[$__s>>2]|0;
 $1 = ($0|0)==(0|0);
 L1: do {
  if ($1) {
   $$sroa$0$1 = 0;
  } else {
   $2 = $__oe;
   $3 = $__ob;
   $4 = (($2) - ($3))|0;
   $5 = $4 >> 2;
   $6 = ((($__iob)) + 12|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ($7|0)>($5|0);
   $9 = (($7) - ($5))|0;
   $__ns$0 = $8 ? $9 : 0;
   $10 = $__op;
   $11 = (($10) - ($3))|0;
   $12 = $11 >> 2;
   $13 = ($11|0)>(0);
   if ($13) {
    $14 = HEAP32[$0>>2]|0;
    $15 = ((($14)) + 48|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (FUNCTION_TABLE_iiii[$16 & 1023]($0,$__ob,$12)|0);
    $18 = ($17|0)==($12|0);
    if (!($18)) {
     HEAP32[$__s>>2] = 0;
     $$sroa$0$1 = 0;
     break;
    }
   }
   $19 = ($__ns$0|0)>(0);
   do {
    if ($19) {
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($__sp,$__ns$0,$__fl);
     $20 = HEAP8[$__sp>>0]|0;
     $21 = $20 & 1;
     $22 = ($21<<24>>24)==(0);
     $23 = ((($__sp)) + 8|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ((($__sp)) + 4|0);
     $26 = $22 ? $25 : $24;
     $27 = HEAP32[$0>>2]|0;
     $28 = ((($27)) + 48|0);
     $29 = HEAP32[$28>>2]|0;
     __THREW__ = 0;
     $30 = (invoke_iiii($29|0,($0|0),($26|0),($__ns$0|0))|0);
     $31 = __THREW__; __THREW__ = 0;
     $32 = $31&1;
     if ($32) {
      $34 = ___cxa_find_matching_catch()|0;
      $35 = tempRet0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
      ___resumeException($34|0);
      // unreachable;
     }
     $33 = ($30|0)==($__ns$0|0);
     if ($33) {
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
      break;
     } else {
      HEAP32[$__s>>2] = 0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
      $$sroa$0$1 = 0;
      break L1;
     }
    }
   } while(0);
   $36 = (($2) - ($10))|0;
   $37 = $36 >> 2;
   $38 = ($36|0)>(0);
   if ($38) {
    $39 = HEAP32[$0>>2]|0;
    $40 = ((($39)) + 48|0);
    $41 = HEAP32[$40>>2]|0;
    $42 = (FUNCTION_TABLE_iiii[$41 & 1023]($0,$__op,$37)|0);
    $43 = ($42|0)==($37|0);
    if (!($43)) {
     HEAP32[$__s>>2] = 0;
     $$sroa$0$1 = 0;
     break;
    }
   }
   HEAP32[$6>>2] = 0;
   $$sroa$0$1 = $0;
  }
 } while(0);
 STACKTOP = sp;return ($$sroa$0$1|0);
}
function __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$__e,$__err,$__ct,$__n) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 $__n = $__n|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i10 = 0, $$0$in = 0, $$01 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $$pre$i$i$i16 = 0, $$pre$i$i$i3 = 0, $$pre$i2$i$i20 = 0, $$pre$i2$i$i20$lcssa = 0, $$pre$i2$i$i7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__r$0 = 0, $__r$0$in = 0, $__r$0$lcssa = 0, $isascii1$i = 0, $isascii1$i12 = 0, $sext = 0, $sext24 = 0, $tmp$i$i9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $13 = 0;
  } else {
   $2 = ((($0)) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ((($0)) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = ((($7)) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
    $11 = ($10|0)==(-1);
    if ($11) {
     HEAP32[$__b>>2] = 0;
     $13 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $13 = $$pre$i$i$i;
     break;
    }
   } else {
    $13 = $0;
   }
  }
 } while(0);
 $12 = ($13|0)==(0|0);
 $14 = HEAP32[$__e>>2]|0;
 $15 = ($14|0)==(0|0);
 do {
  if ($15) {
   label = 11;
  } else {
   $16 = ((($14)) + 12|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($14)) + 16|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ($17|0)==($19|0);
   if ($20) {
    $21 = HEAP32[$14>>2]|0;
    $22 = ((($21)) + 36|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = (FUNCTION_TABLE_ii[$23 & 1023]($14)|0);
    $25 = ($24|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 11;
     break;
    }
   }
   if ($12) {
    $157 = $14;
    label = 13;
   } else {
    label = 12;
   }
  }
 } while(0);
 if ((label|0) == 11) {
  if ($12) {
   label = 12;
  } else {
   $157 = 0;
   label = 13;
  }
 }
 L16: do {
  if ((label|0) == 12) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
   $$01 = 0;
  }
  else if ((label|0) == 13) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = ((($28)) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($28)) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = ((($34)) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 1023]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP8[$30>>0]|0;
    $39 = $38&255;
    $$0$i$i = $39;
   }
   $40 = $$0$i$i&255;
   $isascii1$i = ($40<<24>>24)>(-1);
   if ($isascii1$i) {
    $sext = $$0$i$i << 24;
    $41 = $sext >> 24;
    $42 = ((($__ct)) + 8|0);
    $43 = HEAP32[$42>>2]|0;
    $44 = (($43) + ($41<<1)|0);
    $45 = HEAP16[$44>>1]|0;
    $46 = $45 & 2048;
    $47 = ($46<<16>>16)==(0);
    if (!($47)) {
     $50 = HEAP32[$__ct>>2]|0;
     $51 = ((($50)) + 36|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = (FUNCTION_TABLE_iiii[$52 & 1023]($__ct,$40,0)|0);
     $54 = $53 << 24 >> 24;
     $55 = HEAP32[$__b>>2]|0;
     $56 = ((($55)) + 12|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = ((($55)) + 16|0);
     $59 = HEAP32[$58>>2]|0;
     $60 = ($57|0)==($59|0);
     if ($60) {
      $61 = HEAP32[$55>>2]|0;
      $62 = ((($61)) + 40|0);
      $63 = HEAP32[$62>>2]|0;
      (FUNCTION_TABLE_ii[$63 & 1023]($55)|0);
      $$0$in = $__n;$$pre$i2$i$i7 = $157;$80 = $157;$__r$0$in = $54;
     } else {
      $64 = ((($57)) + 1|0);
      HEAP32[$56>>2] = $64;
      $$0$in = $__n;$$pre$i2$i$i7 = $157;$80 = $157;$__r$0$in = $54;
     }
     while(1) {
      $__r$0 = (($__r$0$in) + -48)|0;
      $$0 = (($$0$in) + -1)|0;
      $65 = HEAP32[$__b>>2]|0;
      $66 = ($65|0)==(0|0);
      do {
       if ($66) {
        $78 = 0;
       } else {
        $67 = ((($65)) + 12|0);
        $68 = HEAP32[$67>>2]|0;
        $69 = ((($65)) + 16|0);
        $70 = HEAP32[$69>>2]|0;
        $71 = ($68|0)==($70|0);
        if ($71) {
         $72 = HEAP32[$65>>2]|0;
         $73 = ((($72)) + 36|0);
         $74 = HEAP32[$73>>2]|0;
         $75 = (FUNCTION_TABLE_ii[$74 & 1023]($65)|0);
         $76 = ($75|0)==(-1);
         if ($76) {
          HEAP32[$__b>>2] = 0;
          $78 = 0;
          break;
         } else {
          $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
          $78 = $$pre$i$i$i3;
          break;
         }
        } else {
         $78 = $65;
        }
       }
      } while(0);
      $77 = ($78|0)==(0|0);
      $79 = ($80|0)==(0|0);
      if ($79) {
       $$pre$i2$i$i20 = $$pre$i2$i$i7;$92 = 0;
      } else {
       $81 = ((($80)) + 12|0);
       $82 = HEAP32[$81>>2]|0;
       $83 = ((($80)) + 16|0);
       $84 = HEAP32[$83>>2]|0;
       $85 = ($82|0)==($84|0);
       if ($85) {
        $86 = HEAP32[$80>>2]|0;
        $87 = ((($86)) + 36|0);
        $88 = HEAP32[$87>>2]|0;
        $89 = (FUNCTION_TABLE_ii[$88 & 1023]($80)|0);
        $90 = ($89|0)==(-1);
        if ($90) {
         HEAP32[$__e>>2] = 0;
         $$pre$i2$i$i20 = 0;$92 = 0;
        } else {
         $$pre$i2$i$i20 = $$pre$i2$i$i7;$92 = $$pre$i2$i$i7;
        }
       } else {
        $$pre$i2$i$i20 = $$pre$i2$i$i7;$92 = $80;
       }
      }
      $91 = ($92|0)==(0|0);
      $tmp$i$i9 = $77 ^ $91;
      $93 = ($$0$in|0)>(1);
      $94 = $93 & $tmp$i$i9;
      $95 = HEAP32[$__b>>2]|0;
      if (!($94)) {
       $$lcssa = $95;$$pre$i2$i$i20$lcssa = $$pre$i2$i$i20;$__r$0$lcssa = $__r$0;
       break;
      }
      $96 = ((($95)) + 12|0);
      $97 = HEAP32[$96>>2]|0;
      $98 = ((($95)) + 16|0);
      $99 = HEAP32[$98>>2]|0;
      $100 = ($97|0)==($99|0);
      if ($100) {
       $101 = HEAP32[$95>>2]|0;
       $102 = ((($101)) + 36|0);
       $103 = HEAP32[$102>>2]|0;
       $104 = (FUNCTION_TABLE_ii[$103 & 1023]($95)|0);
       $$0$i$i10 = $104;
      } else {
       $105 = HEAP8[$97>>0]|0;
       $106 = $105&255;
       $$0$i$i10 = $106;
      }
      $107 = $$0$i$i10&255;
      $isascii1$i12 = ($107<<24>>24)>(-1);
      if (!($isascii1$i12)) {
       $$01 = $__r$0;
       break L16;
      }
      $sext24 = $$0$i$i10 << 24;
      $108 = $sext24 >> 24;
      $109 = HEAP32[$42>>2]|0;
      $110 = (($109) + ($108<<1)|0);
      $111 = HEAP16[$110>>1]|0;
      $112 = $111 & 2048;
      $113 = ($112<<16>>16)==(0);
      if ($113) {
       $$01 = $__r$0;
       break L16;
      }
      $114 = ($__r$0*10)|0;
      $115 = HEAP32[$__ct>>2]|0;
      $116 = ((($115)) + 36|0);
      $117 = HEAP32[$116>>2]|0;
      $118 = (FUNCTION_TABLE_iiii[$117 & 1023]($__ct,$107,0)|0);
      $119 = $118 << 24 >> 24;
      $120 = (($119) + ($114))|0;
      $121 = HEAP32[$__b>>2]|0;
      $122 = ((($121)) + 12|0);
      $123 = HEAP32[$122>>2]|0;
      $124 = ((($121)) + 16|0);
      $125 = HEAP32[$124>>2]|0;
      $126 = ($123|0)==($125|0);
      if ($126) {
       $127 = HEAP32[$121>>2]|0;
       $128 = ((($127)) + 40|0);
       $129 = HEAP32[$128>>2]|0;
       (FUNCTION_TABLE_ii[$129 & 1023]($121)|0);
       $$0$in = $$0;$$pre$i2$i$i7 = $$pre$i2$i$i20;$80 = $92;$__r$0$in = $120;
       continue;
      } else {
       $130 = ((($123)) + 1|0);
       HEAP32[$122>>2] = $130;
       $$0$in = $$0;$$pre$i2$i$i7 = $$pre$i2$i$i20;$80 = $92;$__r$0$in = $120;
       continue;
      }
     }
     $131 = ($$lcssa|0)==(0|0);
     do {
      if ($131) {
       $143 = 0;
      } else {
       $132 = ((($$lcssa)) + 12|0);
       $133 = HEAP32[$132>>2]|0;
       $134 = ((($$lcssa)) + 16|0);
       $135 = HEAP32[$134>>2]|0;
       $136 = ($133|0)==($135|0);
       if ($136) {
        $137 = HEAP32[$$lcssa>>2]|0;
        $138 = ((($137)) + 36|0);
        $139 = HEAP32[$138>>2]|0;
        $140 = (FUNCTION_TABLE_ii[$139 & 1023]($$lcssa)|0);
        $141 = ($140|0)==(-1);
        if ($141) {
         HEAP32[$__b>>2] = 0;
         $143 = 0;
         break;
        } else {
         $$pre$i$i$i16 = HEAP32[$__b>>2]|0;
         $143 = $$pre$i$i$i16;
         break;
        }
       } else {
        $143 = $$lcssa;
       }
      }
     } while(0);
     $142 = ($143|0)==(0|0);
     $144 = ($$pre$i2$i$i20$lcssa|0)==(0|0);
     do {
      if ($144) {
       label = 50;
      } else {
       $145 = ((($$pre$i2$i$i20$lcssa)) + 12|0);
       $146 = HEAP32[$145>>2]|0;
       $147 = ((($$pre$i2$i$i20$lcssa)) + 16|0);
       $148 = HEAP32[$147>>2]|0;
       $149 = ($146|0)==($148|0);
       if ($149) {
        $150 = HEAP32[$$pre$i2$i$i20$lcssa>>2]|0;
        $151 = ((($150)) + 36|0);
        $152 = HEAP32[$151>>2]|0;
        $153 = (FUNCTION_TABLE_ii[$152 & 1023]($$pre$i2$i$i20$lcssa)|0);
        $154 = ($153|0)==(-1);
        if ($154) {
         HEAP32[$__e>>2] = 0;
         label = 50;
         break;
        }
       }
       if ($142) {
        $$01 = $__r$0$lcssa;
        break L16;
       }
      }
     } while(0);
     if ((label|0) == 50) {
      if (!($142)) {
       $$01 = $__r$0$lcssa;
       break;
      }
     }
     $155 = HEAP32[$__err>>2]|0;
     $156 = $155 | 2;
     HEAP32[$__err>>2] = $156;
     $$01 = $__r$0$lcssa;
     break;
    }
   }
   $48 = HEAP32[$__err>>2]|0;
   $49 = $48 | 4;
   HEAP32[$__err>>2] = $49;
   $$01 = 0;
  }
 } while(0);
 return ($$01|0);
}
function __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$__e,$__err,$__ct,$__n) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 $__n = $__n|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i17 = 0, $$0$i$i$i$i2 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i23 = 0, $$0$i$i1$i$i8 = 0, $$0$i$i14 = 0, $$0$in = 0, $$01 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $$pre$i$i$i19 = 0, $$pre$i$i$i4 = 0, $$pre$i3$i$i10 = 0, $$pre$i3$i$i25 = 0, $$pre$i3$i$i25$lcssa = 0, $0 = 0, $1 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__r$0 = 0, $__r$0$in = 0, $__r$0$lcssa = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i20 = 0, $phitmp$i$i$i5 = 0, $phitmp$i4$i$i11 = 0, $tmp$i$i13 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $148 = 1;
  } else {
   $2 = ((($0)) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ((($0)) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = ((($7)) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
    $$0$i$i$i$i = $10;
   } else {
    $11 = HEAP32[$3>>2]|0;
    $$0$i$i$i$i = $11;
   }
   $12 = ($$0$i$i$i$i|0)==(-1);
   if ($12) {
    HEAP32[$__b>>2] = 0;
    $148 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $148 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $13 = HEAP32[$__e>>2]|0;
 $14 = ($13|0)==(0|0);
 do {
  if ($14) {
   label = 14;
  } else {
   $15 = ((($13)) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ((($13)) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$13>>2]|0;
    $21 = ((($20)) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 1023]($13)|0);
    $$0$i$i1$i$i = $23;
   } else {
    $24 = HEAP32[$16>>2]|0;
    $$0$i$i1$i$i = $24;
   }
   $25 = ($$0$i$i1$i$i|0)==(-1);
   if ($25) {
    HEAP32[$__e>>2] = 0;
    label = 14;
    break;
   } else {
    if ($148) {
     $149 = $13;
     label = 17;
     break;
    } else {
     label = 16;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 14) {
  if ($148) {
   label = 16;
  } else {
   $149 = 0;
   label = 17;
  }
 }
 L22: do {
  if ((label|0) == 16) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
   $$01 = 0;
  }
  else if ((label|0) == 17) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = ((($28)) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($28)) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = ((($34)) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 1023]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP32[$30>>2]|0;
    $$0$i$i = $38;
   }
   $39 = HEAP32[$__ct>>2]|0;
   $40 = ((($39)) + 12|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = (FUNCTION_TABLE_iiii[$41 & 1023]($__ct,2048,$$0$i$i)|0);
   if (!($42)) {
    $43 = HEAP32[$__err>>2]|0;
    $44 = $43 | 4;
    HEAP32[$__err>>2] = $44;
    $$01 = 0;
    break;
   }
   $45 = HEAP32[$__ct>>2]|0;
   $46 = ((($45)) + 52|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = (FUNCTION_TABLE_iiii[$47 & 1023]($__ct,$$0$i$i,0)|0);
   $49 = $48 << 24 >> 24;
   $50 = HEAP32[$__b>>2]|0;
   $51 = ((($50)) + 12|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ((($50)) + 16|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ($52|0)==($54|0);
   if ($55) {
    $56 = HEAP32[$50>>2]|0;
    $57 = ((($56)) + 40|0);
    $58 = HEAP32[$57>>2]|0;
    (FUNCTION_TABLE_ii[$58 & 1023]($50)|0);
    $$0$in = $__n;$$pre$i3$i$i10 = $149;$74 = $149;$__r$0$in = $49;
   } else {
    $59 = ((($52)) + 4|0);
    HEAP32[$51>>2] = $59;
    $$0$in = $__n;$$pre$i3$i$i10 = $149;$74 = $149;$__r$0$in = $49;
   }
   while(1) {
    $__r$0 = (($__r$0$in) + -48)|0;
    $$0 = (($$0$in) + -1)|0;
    $60 = HEAP32[$__b>>2]|0;
    $61 = ($60|0)==(0|0);
    do {
     if ($61) {
      $86 = 1;
     } else {
      $62 = ((($60)) + 12|0);
      $63 = HEAP32[$62>>2]|0;
      $64 = ((($60)) + 16|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = ($63|0)==($65|0);
      if ($66) {
       $67 = HEAP32[$60>>2]|0;
       $68 = ((($67)) + 36|0);
       $69 = HEAP32[$68>>2]|0;
       $70 = (FUNCTION_TABLE_ii[$69 & 1023]($60)|0);
       $$0$i$i$i$i2 = $70;
      } else {
       $71 = HEAP32[$63>>2]|0;
       $$0$i$i$i$i2 = $71;
      }
      $72 = ($$0$i$i$i$i2|0)==(-1);
      if ($72) {
       HEAP32[$__b>>2] = 0;
       $86 = 1;
       break;
      } else {
       $$pre$i$i$i4 = HEAP32[$__b>>2]|0;
       $phitmp$i$i$i5 = ($$pre$i$i$i4|0)==(0|0);
       $86 = $phitmp$i$i$i5;
       break;
      }
     }
    } while(0);
    $73 = ($74|0)==(0|0);
    do {
     if ($73) {
      $$pre$i3$i$i25 = $$pre$i3$i$i10;$150 = 0;$87 = 1;
     } else {
      $75 = ((($74)) + 12|0);
      $76 = HEAP32[$75>>2]|0;
      $77 = ((($74)) + 16|0);
      $78 = HEAP32[$77>>2]|0;
      $79 = ($76|0)==($78|0);
      if ($79) {
       $80 = HEAP32[$74>>2]|0;
       $81 = ((($80)) + 36|0);
       $82 = HEAP32[$81>>2]|0;
       $83 = (FUNCTION_TABLE_ii[$82 & 1023]($74)|0);
       $$0$i$i1$i$i8 = $83;
      } else {
       $84 = HEAP32[$76>>2]|0;
       $$0$i$i1$i$i8 = $84;
      }
      $85 = ($$0$i$i1$i$i8|0)==(-1);
      if ($85) {
       HEAP32[$__e>>2] = 0;
       $$pre$i3$i$i25 = 0;$150 = 0;$87 = 1;
       break;
      } else {
       $phitmp$i4$i$i11 = ($$pre$i3$i$i10|0)==(0|0);
       $$pre$i3$i$i25 = $$pre$i3$i$i10;$150 = $$pre$i3$i$i10;$87 = $phitmp$i4$i$i11;
       break;
      }
     }
    } while(0);
    $tmp$i$i13 = $86 ^ $87;
    $88 = ($$0$in|0)>(1);
    $89 = $88 & $tmp$i$i13;
    $90 = HEAP32[$__b>>2]|0;
    if (!($89)) {
     $$lcssa = $90;$$pre$i3$i$i25$lcssa = $$pre$i3$i$i25;$__r$0$lcssa = $__r$0;
     break;
    }
    $91 = ((($90)) + 12|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = ((($90)) + 16|0);
    $94 = HEAP32[$93>>2]|0;
    $95 = ($92|0)==($94|0);
    if ($95) {
     $96 = HEAP32[$90>>2]|0;
     $97 = ((($96)) + 36|0);
     $98 = HEAP32[$97>>2]|0;
     $99 = (FUNCTION_TABLE_ii[$98 & 1023]($90)|0);
     $$0$i$i14 = $99;
    } else {
     $100 = HEAP32[$92>>2]|0;
     $$0$i$i14 = $100;
    }
    $101 = HEAP32[$__ct>>2]|0;
    $102 = ((($101)) + 12|0);
    $103 = HEAP32[$102>>2]|0;
    $104 = (FUNCTION_TABLE_iiii[$103 & 1023]($__ct,2048,$$0$i$i14)|0);
    if (!($104)) {
     $$01 = $__r$0;
     break L22;
    }
    $105 = ($__r$0*10)|0;
    $106 = HEAP32[$__ct>>2]|0;
    $107 = ((($106)) + 52|0);
    $108 = HEAP32[$107>>2]|0;
    $109 = (FUNCTION_TABLE_iiii[$108 & 1023]($__ct,$$0$i$i14,0)|0);
    $110 = $109 << 24 >> 24;
    $111 = (($110) + ($105))|0;
    $112 = HEAP32[$__b>>2]|0;
    $113 = ((($112)) + 12|0);
    $114 = HEAP32[$113>>2]|0;
    $115 = ((($112)) + 16|0);
    $116 = HEAP32[$115>>2]|0;
    $117 = ($114|0)==($116|0);
    if ($117) {
     $118 = HEAP32[$112>>2]|0;
     $119 = ((($118)) + 40|0);
     $120 = HEAP32[$119>>2]|0;
     (FUNCTION_TABLE_ii[$120 & 1023]($112)|0);
     $$0$in = $$0;$$pre$i3$i$i10 = $$pre$i3$i$i25;$74 = $150;$__r$0$in = $111;
     continue;
    } else {
     $121 = ((($114)) + 4|0);
     HEAP32[$113>>2] = $121;
     $$0$in = $$0;$$pre$i3$i$i10 = $$pre$i3$i$i25;$74 = $150;$__r$0$in = $111;
     continue;
    }
   }
   $122 = ($$lcssa|0)==(0|0);
   do {
    if ($122) {
     $151 = 1;
    } else {
     $123 = ((($$lcssa)) + 12|0);
     $124 = HEAP32[$123>>2]|0;
     $125 = ((($$lcssa)) + 16|0);
     $126 = HEAP32[$125>>2]|0;
     $127 = ($124|0)==($126|0);
     if ($127) {
      $128 = HEAP32[$$lcssa>>2]|0;
      $129 = ((($128)) + 36|0);
      $130 = HEAP32[$129>>2]|0;
      $131 = (FUNCTION_TABLE_ii[$130 & 1023]($$lcssa)|0);
      $$0$i$i$i$i17 = $131;
     } else {
      $132 = HEAP32[$124>>2]|0;
      $$0$i$i$i$i17 = $132;
     }
     $133 = ($$0$i$i$i$i17|0)==(-1);
     if ($133) {
      HEAP32[$__b>>2] = 0;
      $151 = 1;
      break;
     } else {
      $$pre$i$i$i19 = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i20 = ($$pre$i$i$i19|0)==(0|0);
      $151 = $phitmp$i$i$i20;
      break;
     }
    }
   } while(0);
   $134 = ($$pre$i3$i$i25$lcssa|0)==(0|0);
   do {
    if ($134) {
     label = 60;
    } else {
     $135 = ((($$pre$i3$i$i25$lcssa)) + 12|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = ((($$pre$i3$i$i25$lcssa)) + 16|0);
     $138 = HEAP32[$137>>2]|0;
     $139 = ($136|0)==($138|0);
     if ($139) {
      $140 = HEAP32[$$pre$i3$i$i25$lcssa>>2]|0;
      $141 = ((($140)) + 36|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = (FUNCTION_TABLE_ii[$142 & 1023]($$pre$i3$i$i25$lcssa)|0);
      $$0$i$i1$i$i23 = $143;
     } else {
      $144 = HEAP32[$136>>2]|0;
      $$0$i$i1$i$i23 = $144;
     }
     $145 = ($$0$i$i1$i$i23|0)==(-1);
     if ($145) {
      HEAP32[$__e>>2] = 0;
      label = 60;
      break;
     } else {
      if ($151) {
       $$01 = $__r$0$lcssa;
       break L22;
      } else {
       break;
      }
     }
    }
   } while(0);
   if ((label|0) == 60) {
    if (!($151)) {
     $$01 = $__r$0$lcssa;
     break;
    }
   }
   $146 = HEAP32[$__err>>2]|0;
   $147 = $146 | 2;
   HEAP32[$__err>>2] = $147;
   $$01 = $__r$0$lcssa;
  }
 } while(0);
 return ($$01|0);
}
function __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__b)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(445|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $2 ? $4 : 0;
 $14 = (_realloc($13,$$)|0);
 $15 = ($14|0)==(0|0);
 if ($15) {
  __ZSt17__throw_bad_allocv();
 }
 do {
  if ($2) {
   $16 = $14;
   HEAP32[$__b>>2] = $16;
   $25 = $14;
  } else {
   $$pr = HEAP32[$__b>>2]|0;
   $17 = $14;
   HEAP32[$__b>>2] = $17;
   $18 = ($$pr|0)==(0|0);
   if ($18) {
    $25 = $14;
   } else {
    $19 = HEAP32[$0>>2]|0;
    __THREW__ = 0;
    invoke_vi($19|0,($$pr|0));
    $20 = __THREW__; __THREW__ = 0;
    $21 = $20&1;
    if ($21) {
     $22 = ___cxa_find_matching_catch(0|0)|0;
     $23 = tempRet0;
     ___clang_call_terminate($22);
     // unreachable;
    } else {
     $$pre = HEAP32[$__b>>2]|0;
     $25 = $$pre;
     break;
    }
   }
  }
 } while(0);
 HEAP32[$0>>2] = (533);
 $24 = (($25) + ($12)|0);
 HEAP32[$__n>>2] = $24;
 $26 = HEAP32[$__b>>2]|0;
 $27 = (($26) + ($$)|0);
 HEAP32[$__e>>2] = $27;
 return;
}
function __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__b)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(445|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $12 >> 2;
 $14 = $2 ? $4 : 0;
 $15 = (_realloc($14,$$)|0);
 $16 = ($15|0)==(0|0);
 if ($16) {
  __ZSt17__throw_bad_allocv();
 }
 do {
  if ($2) {
   $17 = $15;
   HEAP32[$__b>>2] = $17;
   $27 = $15;
  } else {
   $$pr = HEAP32[$__b>>2]|0;
   $18 = $15;
   HEAP32[$__b>>2] = $18;
   $19 = ($$pr|0)==(0|0);
   if ($19) {
    $27 = $15;
   } else {
    $20 = HEAP32[$0>>2]|0;
    __THREW__ = 0;
    invoke_vi($20|0,($$pr|0));
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if ($22) {
     $23 = ___cxa_find_matching_catch(0|0)|0;
     $24 = tempRet0;
     ___clang_call_terminate($23);
     // unreachable;
    } else {
     $$pre = HEAP32[$__b>>2]|0;
     $27 = $$pre;
     break;
    }
   }
  }
 } while(0);
 HEAP32[$0>>2] = (533);
 $25 = $$ >>> 2;
 $26 = (($27) + ($13<<2)|0);
 HEAP32[$__n>>2] = $26;
 $28 = HEAP32[$__b>>2]|0;
 $29 = (($28) + ($25<<2)|0);
 HEAP32[$__e>>2] = $29;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$03 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$04 = 0, $phitmp$i = 0, $scevgep = 0, $scevgep1 = 0, $scevgep2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $4 = $1&255;
  $5 = $4 >>> 1;
  $15 = 10;$16 = $5;$41 = $1;
 } else {
  $6 = ((($this)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$this>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $8&255;
  $15 = $phitmp$i;$16 = $7;$41 = $10;
 }
 $11 = $__last;
 $12 = (($11) - ($0))|0;
 $13 = ($__last|0)==($__first|0);
 do {
  if (!($13)) {
   $14 = (($15) - ($16))|0;
   $17 = ($14>>>0)<($12>>>0);
   if ($17) {
    $18 = (($16) + ($12))|0;
    $19 = (($18) - ($15))|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$15,$19,$16,$16,0,0);
    $$pre = HEAP8[$this>>0]|0;
    $21 = $$pre;
   } else {
    $21 = $41;
   }
   $20 = $21 & 1;
   $22 = ($20<<24>>24)==(0);
   if ($22) {
    $25 = ((($this)) + 1|0);
    $29 = $25;
   } else {
    $23 = ((($this)) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    $29 = $24;
   }
   $26 = (($16) - ($0))|0;
   $scevgep = (($__last) + ($26)|0);
   $scevgep1 = $scevgep;
   $27 = ($__first|0)==($__last|0);
   if (!($27)) {
    $28 = (($29) + ($16)|0);
    $$03 = $__first;$__p$04 = $28;
    while(1) {
     $30 = HEAP8[$$03>>0]|0;
     HEAP8[$__p$04>>0] = $30;
     $31 = ((($__p$04)) + 1|0);
     $32 = ((($$03)) + 1|0);
     $33 = ($32|0)==($__last|0);
     if ($33) {
      break;
     } else {
      $$03 = $32;$__p$04 = $31;
     }
    }
   }
   $scevgep2 = (($29) + ($scevgep1)|0);
   HEAP8[$scevgep2>>0] = 0;
   $34 = (($16) + ($12))|0;
   $35 = HEAP8[$this>>0]|0;
   $36 = $35 & 1;
   $37 = ($36<<24>>24)==(0);
   if ($37) {
    $39 = $34 << 1;
    $40 = $39&255;
    HEAP8[$this>>0] = $40;
    break;
   } else {
    $38 = ((($this)) + 4|0);
    HEAP32[$38>>2] = $34;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__b)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(445|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $12 >> 2;
 $14 = $2 ? $4 : 0;
 $15 = (_realloc($14,$$)|0);
 $16 = ($15|0)==(0|0);
 if ($16) {
  __ZSt17__throw_bad_allocv();
 }
 do {
  if ($2) {
   $17 = $15;
   HEAP32[$__b>>2] = $17;
   $27 = $15;
  } else {
   $$pr = HEAP32[$__b>>2]|0;
   $18 = $15;
   HEAP32[$__b>>2] = $18;
   $19 = ($$pr|0)==(0|0);
   if ($19) {
    $27 = $15;
   } else {
    $20 = HEAP32[$0>>2]|0;
    __THREW__ = 0;
    invoke_vi($20|0,($$pr|0));
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if ($22) {
     $23 = ___cxa_find_matching_catch(0|0)|0;
     $24 = tempRet0;
     ___clang_call_terminate($23);
     // unreachable;
    } else {
     $$pre = HEAP32[$__b>>2]|0;
     $27 = $$pre;
     break;
    }
   }
  }
 } while(0);
 HEAP32[$0>>2] = (533);
 $25 = $$ >>> 2;
 $26 = (($27) + ($13<<2)|0);
 HEAP32[$__n>>2] = $26;
 $28 = HEAP32[$__b>>2]|0;
 $29 = (($28) + ($25<<2)|0);
 HEAP32[$__e>>2] = $29;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$03 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$04 = 0, $phitmp$i = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $4 = $1&255;
  $5 = $4 >>> 1;
  $16 = 1;$17 = $5;$45 = $1;
 } else {
  $6 = ((($this)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$this>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $8&255;
  $16 = $phitmp$i;$17 = $7;$45 = $10;
 }
 $11 = $__last;
 $12 = (($11) - ($0))|0;
 $13 = $12 >> 2;
 $14 = ($13|0)==(0);
 do {
  if (!($14)) {
   $15 = (($16) - ($17))|0;
   $18 = ($15>>>0)<($13>>>0);
   if ($18) {
    $19 = (($17) + ($13))|0;
    $20 = (($19) - ($16))|0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$16,$20,$17,$17,0,0);
    $$pre = HEAP8[$this>>0]|0;
    $22 = $$pre;
   } else {
    $22 = $45;
   }
   $21 = $22 & 1;
   $23 = ($21<<24>>24)==(0);
   if ($23) {
    $26 = ((($this)) + 4|0);
    $33 = $26;
   } else {
    $24 = ((($this)) + 8|0);
    $25 = HEAP32[$24>>2]|0;
    $33 = $25;
   }
   $27 = $__last;
   $28 = (($27) - ($0))|0;
   $29 = $28 >>> 2;
   $30 = (($17) + ($29))|0;
   $31 = ($__first|0)==($__last|0);
   if (!($31)) {
    $32 = (($33) + ($17<<2)|0);
    $$03 = $__first;$__p$04 = $32;
    while(1) {
     $34 = HEAP32[$$03>>2]|0;
     HEAP32[$__p$04>>2] = $34;
     $35 = ((($__p$04)) + 4|0);
     $36 = ((($$03)) + 4|0);
     $37 = ($36|0)==($__last|0);
     if ($37) {
      break;
     } else {
      $$03 = $36;$__p$04 = $35;
     }
    }
   }
   $scevgep = (($33) + ($30<<2)|0);
   HEAP32[$scevgep>>2] = 0;
   $38 = (($17) + ($13))|0;
   $39 = HEAP8[$this>>0]|0;
   $40 = $39 & 1;
   $41 = ($40<<24>>24)==(0);
   if ($41) {
    $43 = $38 << 1;
    $44 = $43&255;
    HEAP8[$this>>0] = $44;
    break;
   } else {
    $42 = ((($this)) + 4|0);
    HEAP32[$42>>2] = $38;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($this)) + 128|0);
 HEAP8[$2>>0] = 0;
 $3 = ($__n|0)==(0);
 do {
  if (!($3)) {
   __THREW__ = 0;
   invoke_vii(534,($this|0),($__n|0));
   $4 = __THREW__; __THREW__ = 0;
   $5 = $4&1;
   if ($5) {
    $6 = ___cxa_find_matching_catch()|0;
    $7 = tempRet0;
    __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($this);
    ___resumeException($6|0);
    // unreachable;
   } else {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n);
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(9320)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(9360)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(10392)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(10384)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(10452)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(10460)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(10516)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(10524)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(10532)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(10540)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(9432)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(9504)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(9564)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(9624)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(9936)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(10000)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(10064)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(10128)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(10164)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(10200)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(10236)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(10272)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(9716)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(9808)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(9840)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(9872)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(10312)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(10352)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this|0;
 var $$lcssa = 0, $$pre$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if (!($1)) {
   $2 = ((($this)) + 4|0);
   $$pre$i$i = HEAP32[$2>>2]|0;
   $3 = ($$pre$i$i|0)==($0|0);
   if (!($3)) {
    $5 = $$pre$i$i;
    while(1) {
     $4 = ((($5)) + -4|0);
     $6 = ($4|0)==($0|0);
     if ($6) {
      $$lcssa = $4;
      break;
     } else {
      $5 = $4;
     }
    }
    HEAP32[$2>>2] = $$lcssa;
   }
   $7 = ((($this)) + 16|0);
   $8 = ($7|0)==($0|0);
   if ($8) {
    $9 = ((($this)) + 128|0);
    HEAP8[$9>>0] = 0;
    break;
   } else {
    __ZdlPv($0);
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj($this,$__sz) {
 $this = $this|0;
 $__sz = $__sz|0;
 var $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$this>>2]|0;
 $3 = $1;
 $4 = $2;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 2;
 $7 = ($6>>>0)<($__sz>>>0);
 if ($7) {
  $8 = (($__sz) - ($6))|0;
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this,$8);
 } else {
  $9 = ($6>>>0)>($__sz>>>0);
  if ($9) {
   $10 = (($2) + ($__sz<<2)|0);
   $11 = ($1|0)==($10|0);
   if (!($11)) {
    $13 = $1;
    while(1) {
     $12 = ((($13)) + -4|0);
     $14 = ($12|0)==($10|0);
     if ($14) {
      $$lcssa = $12;
      break;
     } else {
      $13 = $12;
     }
    }
    HEAP32[$0>>2] = $$lcssa;
   }
  }
 }
 return;
}
function __ZNKSt3__16locale5__imp9has_facetEl($this,$id) {
 $this = $this|0;
 $id = $id|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ($7>>>0)>($id>>>0);
 if ($8) {
  $9 = (($3) + ($id<<2)|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)!=(0|0);
  $12 = $11;
 } else {
  $12 = 0;
 }
 return ($12|0);
}
function __ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv($__vp) {
 $__vp = $__vp|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__vp)) + 4|0);
 $$field = HEAP32[$0>>2]|0;
 $$index1 = ((($0)) + 4|0);
 $$field2 = HEAP32[$$index1>>2]|0;
 $1 = HEAP32[$__vp>>2]|0;
 $2 = $$field2 >> 1;
 $3 = (($1) + ($2)|0);
 $4 = $$field2 & 1;
 $5 = ($4|0)==(0);
 if ($5) {
  $9 = $$field;
  $10 = $9;
 } else {
  $6 = HEAP32[$3>>2]|0;
  $7 = (($6) + ($$field)|0);
  $8 = HEAP32[$7>>2]|0;
  $10 = $8;
 }
 FUNCTION_TABLE_vi[$10 & 1023]($3);
 return;
}
function __ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 2;
 $1 = ($0|0)==(0);
 $$pre1 = $to_end;
 if ($1) {
  label = 4;
 } else {
  $2 = $to;
  $3 = (($$pre1) - ($2))|0;
  $4 = ($3|0)<(3);
  if ($4) {
   $$0 = 1;
  } else {
   $5 = ((($to)) + 1|0);
   HEAP32[$to_nxt>>2] = $5;
   HEAP8[$to>>0] = -17;
   $6 = HEAP32[$to_nxt>>2]|0;
   $7 = ((($6)) + 1|0);
   HEAP32[$to_nxt>>2] = $7;
   HEAP8[$6>>0] = -69;
   $8 = HEAP32[$to_nxt>>2]|0;
   $9 = ((($8)) + 1|0);
   HEAP32[$to_nxt>>2] = $9;
   HEAP8[$8>>0] = -65;
   label = 4;
  }
 }
 L4: do {
  if ((label|0) == 4) {
   $10 = $frm_end;
   $$pre = HEAP32[$frm_nxt>>2]|0;
   $11 = ($$pre>>>0)<($frm_end>>>0);
   if ($11) {
    $13 = $$pre;
    while(1) {
     $12 = HEAP16[$13>>1]|0;
     $14 = $12&65535;
     $15 = ($14>>>0)>($Maxcode>>>0);
     if ($15) {
      $$0 = 2;
      break L4;
     }
     $16 = ($12&65535)<(128);
     do {
      if ($16) {
       $17 = HEAP32[$to_nxt>>2]|0;
       $18 = $17;
       $19 = (($$pre1) - ($18))|0;
       $20 = ($19|0)<(1);
       if ($20) {
        $$0 = 1;
        break L4;
       }
       $21 = $12&255;
       $22 = ((($17)) + 1|0);
       HEAP32[$to_nxt>>2] = $22;
       HEAP8[$17>>0] = $21;
      } else {
       $23 = ($12&65535)<(2048);
       if ($23) {
        $24 = HEAP32[$to_nxt>>2]|0;
        $25 = $24;
        $26 = (($$pre1) - ($25))|0;
        $27 = ($26|0)<(2);
        if ($27) {
         $$0 = 1;
         break L4;
        }
        $28 = $14 >>> 6;
        $29 = $28 | 192;
        $30 = $29&255;
        $31 = ((($24)) + 1|0);
        HEAP32[$to_nxt>>2] = $31;
        HEAP8[$24>>0] = $30;
        $32 = $14 & 63;
        $33 = $32 | 128;
        $34 = $33&255;
        $35 = HEAP32[$to_nxt>>2]|0;
        $36 = ((($35)) + 1|0);
        HEAP32[$to_nxt>>2] = $36;
        HEAP8[$35>>0] = $34;
        break;
       }
       $37 = ($12&65535)<(55296);
       if ($37) {
        $38 = HEAP32[$to_nxt>>2]|0;
        $39 = $38;
        $40 = (($$pre1) - ($39))|0;
        $41 = ($40|0)<(3);
        if ($41) {
         $$0 = 1;
         break L4;
        }
        $42 = $14 >>> 12;
        $43 = $42 | 224;
        $44 = $43&255;
        $45 = ((($38)) + 1|0);
        HEAP32[$to_nxt>>2] = $45;
        HEAP8[$38>>0] = $44;
        $46 = $14 >>> 6;
        $47 = $46 & 63;
        $48 = $47 | 128;
        $49 = $48&255;
        $50 = HEAP32[$to_nxt>>2]|0;
        $51 = ((($50)) + 1|0);
        HEAP32[$to_nxt>>2] = $51;
        HEAP8[$50>>0] = $49;
        $52 = $14 & 63;
        $53 = $52 | 128;
        $54 = $53&255;
        $55 = HEAP32[$to_nxt>>2]|0;
        $56 = ((($55)) + 1|0);
        HEAP32[$to_nxt>>2] = $56;
        HEAP8[$55>>0] = $54;
        break;
       }
       $57 = ($12&65535)<(56320);
       if (!($57)) {
        $109 = ($12&65535)<(57344);
        if ($109) {
         $$0 = 2;
         break L4;
        }
        $110 = HEAP32[$to_nxt>>2]|0;
        $111 = $110;
        $112 = (($$pre1) - ($111))|0;
        $113 = ($112|0)<(3);
        if ($113) {
         $$0 = 1;
         break L4;
        }
        $114 = $14 >>> 12;
        $115 = $114 | 224;
        $116 = $115&255;
        $117 = ((($110)) + 1|0);
        HEAP32[$to_nxt>>2] = $117;
        HEAP8[$110>>0] = $116;
        $118 = $14 >>> 6;
        $119 = $118 & 63;
        $120 = $119 | 128;
        $121 = $120&255;
        $122 = HEAP32[$to_nxt>>2]|0;
        $123 = ((($122)) + 1|0);
        HEAP32[$to_nxt>>2] = $123;
        HEAP8[$122>>0] = $121;
        $124 = $14 & 63;
        $125 = $124 | 128;
        $126 = $125&255;
        $127 = HEAP32[$to_nxt>>2]|0;
        $128 = ((($127)) + 1|0);
        HEAP32[$to_nxt>>2] = $128;
        HEAP8[$127>>0] = $126;
        break;
       }
       $58 = $13;
       $59 = (($10) - ($58))|0;
       $60 = ($59|0)<(4);
       if ($60) {
        $$0 = 1;
        break L4;
       }
       $61 = ((($13)) + 2|0);
       $62 = HEAP16[$61>>1]|0;
       $63 = $62&65535;
       $64 = $63 & 64512;
       $65 = ($64|0)==(56320);
       if (!($65)) {
        $$0 = 2;
        break L4;
       }
       $66 = HEAP32[$to_nxt>>2]|0;
       $67 = $66;
       $68 = (($$pre1) - ($67))|0;
       $69 = ($68|0)<(4);
       if ($69) {
        $$0 = 1;
        break L4;
       }
       $70 = $14 & 960;
       $71 = $70 << 10;
       $72 = (($71) + 65536)|0;
       $73 = $14 << 10;
       $74 = $73 & 64512;
       $75 = $72 | $74;
       $76 = $63 & 1023;
       $77 = $75 | $76;
       $78 = ($77>>>0)>($Maxcode>>>0);
       if ($78) {
        $$0 = 2;
        break L4;
       }
       HEAP32[$frm_nxt>>2] = $61;
       $79 = $70 >>> 6;
       $80 = (($79) + 1)|0;
       $81 = $80 >>> 2;
       $82 = $81 | 240;
       $83 = $82&255;
       $84 = HEAP32[$to_nxt>>2]|0;
       $85 = ((($84)) + 1|0);
       HEAP32[$to_nxt>>2] = $85;
       HEAP8[$84>>0] = $83;
       $86 = $80 << 4;
       $87 = $86 & 48;
       $88 = $14 >>> 2;
       $89 = $88 & 15;
       $90 = $89 | $87;
       $91 = $90 | 128;
       $92 = $91&255;
       $93 = HEAP32[$to_nxt>>2]|0;
       $94 = ((($93)) + 1|0);
       HEAP32[$to_nxt>>2] = $94;
       HEAP8[$93>>0] = $92;
       $95 = $14 << 4;
       $96 = $95 & 48;
       $97 = $63 >>> 6;
       $98 = $97 & 15;
       $99 = $96 | $98;
       $100 = $99 | 128;
       $101 = $100&255;
       $102 = HEAP32[$to_nxt>>2]|0;
       $103 = ((($102)) + 1|0);
       HEAP32[$to_nxt>>2] = $103;
       HEAP8[$102>>0] = $101;
       $104 = $63 & 63;
       $105 = $104 | 128;
       $106 = $105&255;
       $107 = HEAP32[$to_nxt>>2]|0;
       $108 = ((($107)) + 1|0);
       HEAP32[$to_nxt>>2] = $108;
       HEAP8[$107>>0] = $106;
      }
     } while(0);
     $129 = HEAP32[$frm_nxt>>2]|0;
     $130 = ((($129)) + 2|0);
     HEAP32[$frm_nxt>>2] = $130;
     $131 = ($130>>>0)<($frm_end>>>0);
     if ($131) {
      $13 = $130;
     } else {
      $$0 = 0;
      break;
     }
    }
   } else {
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$lcssa = 0, $$off = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre$pre = 0, $$pre4 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 if ($1) {
  $$pre4 = $frm_end;
  $$pre = $to;$$pre$phiZ2D = $$pre4;
 } else {
  $2 = HEAP32[$frm_nxt>>2]|0;
  $3 = $frm_end;
  $4 = $2;
  $5 = (($3) - ($4))|0;
  $6 = ($5|0)>(2);
  if ($6) {
   $7 = HEAP8[$2>>0]|0;
   $8 = ($7<<24>>24)==(-17);
   if ($8) {
    $9 = ((($2)) + 1|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(-69);
    if ($11) {
     $12 = ((($2)) + 2|0);
     $13 = HEAP8[$12>>0]|0;
     $14 = ($13<<24>>24)==(-65);
     if ($14) {
      $15 = ((($2)) + 3|0);
      HEAP32[$frm_nxt>>2] = $15;
      $$pre$pre = HEAP32[$to_nxt>>2]|0;
      $$pre = $$pre$pre;$$pre$phiZ2D = $3;
     } else {
      $$pre = $to;$$pre$phiZ2D = $3;
     }
    } else {
     $$pre = $to;$$pre$phiZ2D = $3;
    }
   } else {
    $$pre = $to;$$pre$phiZ2D = $3;
   }
  } else {
   $$pre = $to;$$pre$phiZ2D = $3;
  }
 }
 $16 = $to_end;
 $17 = HEAP32[$frm_nxt>>2]|0;
 $18 = ($17>>>0)<($frm_end>>>0);
 $19 = ($$pre>>>0)<($to_end>>>0);
 $20 = $18 & $19;
 L9: do {
  if ($20) {
   $22 = $17;$27 = $$pre;
   while(1) {
    $21 = HEAP8[$22>>0]|0;
    $23 = $21&255;
    $24 = ($23>>>0)>($Maxcode>>>0);
    if ($24) {
     $$0 = 2;
     break L9;
    }
    $25 = ($21<<24>>24)>(-1);
    do {
     if ($25) {
      $26 = $21&255;
      HEAP16[$27>>1] = $26;
      $28 = ((($22)) + 1|0);
      HEAP32[$frm_nxt>>2] = $28;
     } else {
      $29 = ($21&255)<(194);
      if ($29) {
       $$0 = 2;
       break L9;
      }
      $30 = ($21&255)<(224);
      if ($30) {
       $31 = $22;
       $32 = (($$pre$phiZ2D) - ($31))|0;
       $33 = ($32|0)<(2);
       if ($33) {
        $$0 = 1;
        break L9;
       }
       $34 = ((($22)) + 1|0);
       $35 = HEAP8[$34>>0]|0;
       $36 = $35&255;
       $37 = $36 & 192;
       $38 = ($37|0)==(128);
       if (!($38)) {
        $$0 = 2;
        break L9;
       }
       $39 = $23 << 6;
       $40 = $39 & 1984;
       $41 = $36 & 63;
       $42 = $41 | $40;
       $43 = ($42>>>0)>($Maxcode>>>0);
       if ($43) {
        $$0 = 2;
        break L9;
       }
       $44 = $42&65535;
       HEAP16[$27>>1] = $44;
       $45 = ((($22)) + 2|0);
       HEAP32[$frm_nxt>>2] = $45;
       break;
      }
      $46 = ($21&255)<(240);
      if ($46) {
       $47 = $22;
       $48 = (($$pre$phiZ2D) - ($47))|0;
       $49 = ($48|0)<(3);
       if ($49) {
        $$0 = 1;
        break L9;
       }
       $50 = ((($22)) + 1|0);
       $51 = HEAP8[$50>>0]|0;
       $52 = ((($22)) + 2|0);
       $53 = HEAP8[$52>>0]|0;
       switch ($23|0) {
       case 224:  {
        $54 = $51 & -32;
        $55 = ($54<<24>>24)==(-96);
        if (!($55)) {
         $$0 = 2;
         break L9;
        }
        break;
       }
       case 237:  {
        $56 = $51 & -32;
        $57 = ($56<<24>>24)==(-128);
        if (!($57)) {
         $$0 = 2;
         break L9;
        }
        break;
       }
       default: {
        $58 = $51 & -64;
        $59 = ($58<<24>>24)==(-128);
        if (!($59)) {
         $$0 = 2;
         break L9;
        }
       }
       }
       $60 = $53&255;
       $61 = $60 & 192;
       $62 = ($61|0)==(128);
       if (!($62)) {
        $$0 = 2;
        break L9;
       }
       $63 = $23 << 12;
       $64 = $51&255;
       $65 = $64 << 6;
       $66 = $65 & 4032;
       $67 = $66 | $63;
       $68 = $60 & 63;
       $69 = $67 | $68;
       $70 = $69 & 65535;
       $71 = ($70>>>0)>($Maxcode>>>0);
       if ($71) {
        $$0 = 2;
        break L9;
       }
       $72 = $69&65535;
       HEAP16[$27>>1] = $72;
       $73 = ((($22)) + 3|0);
       HEAP32[$frm_nxt>>2] = $73;
       break;
      }
      $74 = ($21&255)<(245);
      if (!($74)) {
       $$0 = 2;
       break L9;
      }
      $75 = $22;
      $76 = (($$pre$phiZ2D) - ($75))|0;
      $77 = ($76|0)<(4);
      if ($77) {
       $$0 = 1;
       break L9;
      }
      $78 = ((($22)) + 1|0);
      $79 = HEAP8[$78>>0]|0;
      $80 = ((($22)) + 2|0);
      $81 = HEAP8[$80>>0]|0;
      $82 = ((($22)) + 3|0);
      $83 = HEAP8[$82>>0]|0;
      switch ($23|0) {
      case 240:  {
       $$off = (($79) + 112)<<24>>24;
       $84 = ($$off&255)<(48);
       if (!($84)) {
        $$0 = 2;
        break L9;
       }
       break;
      }
      case 244:  {
       $85 = $79 & -16;
       $86 = ($85<<24>>24)==(-128);
       if (!($86)) {
        $$0 = 2;
        break L9;
       }
       break;
      }
      default: {
       $87 = $79 & -64;
       $88 = ($87<<24>>24)==(-128);
       if (!($88)) {
        $$0 = 2;
        break L9;
       }
      }
      }
      $89 = $81&255;
      $90 = $89 & 192;
      $91 = ($90|0)==(128);
      if (!($91)) {
       $$0 = 2;
       break L9;
      }
      $92 = $83&255;
      $93 = $92 & 192;
      $94 = ($93|0)==(128);
      if (!($94)) {
       $$0 = 2;
       break L9;
      }
      $95 = $27;
      $96 = (($16) - ($95))|0;
      $97 = ($96|0)<(4);
      if ($97) {
       $$0 = 1;
       break L9;
      }
      $98 = $23 & 7;
      $99 = $98 << 18;
      $100 = $79&255;
      $101 = $100 << 12;
      $102 = $101 & 258048;
      $103 = $102 | $99;
      $104 = $89 << 6;
      $105 = $104 & 4032;
      $106 = $103 | $105;
      $107 = $92 & 63;
      $108 = $106 | $107;
      $109 = ($108>>>0)>($Maxcode>>>0);
      if ($109) {
       $$0 = 2;
       break L9;
      }
      $110 = $98 << 2;
      $111 = $100 >>> 4;
      $112 = $111 & 3;
      $113 = $112 | $110;
      $114 = $113 << 6;
      $115 = (($114) + 16320)|0;
      $116 = $100 << 2;
      $117 = $116 & 60;
      $118 = $89 >>> 4;
      $119 = $118 & 3;
      $120 = $117 | $119;
      $121 = $120 | $115;
      $122 = $121 | 55296;
      $123 = $122&65535;
      HEAP16[$27>>1] = $123;
      $124 = $104 & 960;
      $125 = $107 | $124;
      $126 = $125 | 56320;
      $127 = $126&65535;
      $128 = ((($27)) + 2|0);
      HEAP32[$to_nxt>>2] = $128;
      HEAP16[$128>>1] = $127;
      $129 = HEAP32[$frm_nxt>>2]|0;
      $130 = ((($129)) + 4|0);
      HEAP32[$frm_nxt>>2] = $130;
     }
    } while(0);
    $131 = HEAP32[$to_nxt>>2]|0;
    $132 = ((($131)) + 2|0);
    HEAP32[$to_nxt>>2] = $132;
    $133 = HEAP32[$frm_nxt>>2]|0;
    $134 = ($133>>>0)<($frm_end>>>0);
    $135 = ($132>>>0)<($to_end>>>0);
    $136 = $134 & $135;
    if ($136) {
     $22 = $133;$27 = $132;
    } else {
     $$lcssa = $134;
     label = 39;
     break;
    }
   }
  } else {
   $$lcssa = $18;
   label = 39;
  }
 } while(0);
 if ((label|0) == 39) {
  $137 = $$lcssa&1;
  $$0 = $137;
 }
 return ($$0|0);
}
function __ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$frm = 0, $$lcssa = 0, $$lcssa82 = 0, $$lcssa83 = 0, $$lcssa84 = 0, $$lcssa85 = 0, $$lcssa86 = 0, $$off = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$1$ph = 0, $frm_nxt$150 = 0, $frm_nxt$2 = 0, $nchar16_t$049 = 0, $nchar16_t$1 = 0, $or$cond = 0, $or$cond2 = 0, $or$cond48 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 $$pre = $frm_end;
 if ($1) {
  $frm_nxt$1$ph = $frm;
 } else {
  $2 = $frm;
  $3 = (($$pre) - ($2))|0;
  $4 = ($3|0)>(2);
  if ($4) {
   $5 = HEAP8[$frm>>0]|0;
   $6 = ($5<<24>>24)==(-17);
   if ($6) {
    $7 = ((($frm)) + 1|0);
    $8 = HEAP8[$7>>0]|0;
    $9 = ($8<<24>>24)==(-69);
    if ($9) {
     $10 = ((($frm)) + 2|0);
     $11 = HEAP8[$10>>0]|0;
     $12 = ($11<<24>>24)==(-65);
     $13 = ((($frm)) + 3|0);
     $$frm = $12 ? $13 : $frm;
     $frm_nxt$1$ph = $$frm;
    } else {
     $frm_nxt$1$ph = $frm;
    }
   } else {
    $frm_nxt$1$ph = $frm;
   }
  } else {
   $frm_nxt$1$ph = $frm;
  }
 }
 $14 = ($frm_nxt$1$ph>>>0)<($frm_end>>>0);
 $15 = ($mx|0)!=(0);
 $or$cond48 = $15 & $14;
 L7: do {
  if ($or$cond48) {
   $frm_nxt$150 = $frm_nxt$1$ph;$nchar16_t$049 = 0;
   L8: while(1) {
    $16 = HEAP8[$frm_nxt$150>>0]|0;
    $17 = $16&255;
    $18 = ($17>>>0)>($Maxcode>>>0);
    if ($18) {
     $frm_nxt$1$lcssa = $frm_nxt$150;
     label = 42;
     break L7;
    }
    $19 = ($16<<24>>24)>(-1);
    do {
     if ($19) {
      $20 = ((($frm_nxt$150)) + 1|0);
      $frm_nxt$2 = $20;$nchar16_t$1 = $nchar16_t$049;
     } else {
      $21 = ($16&255)<(194);
      if ($21) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $22 = ($16&255)<(224);
      if ($22) {
       $23 = $frm_nxt$150;
       $24 = (($$pre) - ($23))|0;
       $25 = ($24|0)<(2);
       if ($25) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $26 = ((($frm_nxt$150)) + 1|0);
       $27 = HEAP8[$26>>0]|0;
       $28 = $27&255;
       $29 = $28 & 192;
       $30 = ($29|0)==(128);
       if (!($30)) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $31 = $17 << 6;
       $32 = $31 & 1984;
       $33 = $28 & 63;
       $34 = $33 | $32;
       $35 = ($34>>>0)>($Maxcode>>>0);
       if ($35) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $36 = ((($frm_nxt$150)) + 2|0);
       $frm_nxt$2 = $36;$nchar16_t$1 = $nchar16_t$049;
       break;
      }
      $37 = ($16&255)<(240);
      if ($37) {
       $38 = $frm_nxt$150;
       $39 = (($$pre) - ($38))|0;
       $40 = ($39|0)<(3);
       if ($40) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $41 = ((($frm_nxt$150)) + 1|0);
       $42 = HEAP8[$41>>0]|0;
       $43 = ((($frm_nxt$150)) + 2|0);
       $44 = HEAP8[$43>>0]|0;
       switch ($17|0) {
       case 224:  {
        $45 = $42 & -32;
        $46 = ($45<<24>>24)==(-96);
        if (!($46)) {
         $$lcssa85 = $38;
         label = 20;
         break L8;
        }
        break;
       }
       case 237:  {
        $49 = $42 & -32;
        $50 = ($49<<24>>24)==(-128);
        if (!($50)) {
         $$lcssa84 = $38;
         label = 22;
         break L8;
        }
        break;
       }
       default: {
        $53 = $42 & -64;
        $54 = ($53<<24>>24)==(-128);
        if (!($54)) {
         $$lcssa86 = $38;
         label = 24;
         break L8;
        }
       }
       }
       $57 = $44&255;
       $58 = $57 & 192;
       $59 = ($58|0)==(128);
       if (!($59)) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $60 = $17 << 12;
       $61 = $60 & 61440;
       $62 = $42&255;
       $63 = $62 << 6;
       $64 = $63 & 4032;
       $65 = $64 | $61;
       $66 = $57 & 63;
       $67 = $65 | $66;
       $68 = ($67>>>0)>($Maxcode>>>0);
       if ($68) {
        $frm_nxt$1$lcssa = $frm_nxt$150;
        label = 42;
        break L7;
       }
       $69 = ((($frm_nxt$150)) + 3|0);
       $frm_nxt$2 = $69;$nchar16_t$1 = $nchar16_t$049;
       break;
      }
      $70 = ($16&255)<(245);
      if (!($70)) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $71 = $frm_nxt$150;
      $72 = (($$pre) - ($71))|0;
      $73 = ($72|0)<(4);
      $74 = (($mx) - ($nchar16_t$049))|0;
      $75 = ($74>>>0)<(2);
      $or$cond2 = $75 | $73;
      if ($or$cond2) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $76 = ((($frm_nxt$150)) + 1|0);
      $77 = HEAP8[$76>>0]|0;
      $78 = ((($frm_nxt$150)) + 2|0);
      $79 = HEAP8[$78>>0]|0;
      $80 = ((($frm_nxt$150)) + 3|0);
      $81 = HEAP8[$80>>0]|0;
      switch ($17|0) {
      case 240:  {
       $$off = (($77) + 112)<<24>>24;
       $82 = ($$off&255)<(48);
       if (!($82)) {
        $$lcssa82 = $71;
        label = 32;
        break L8;
       }
       break;
      }
      case 244:  {
       $85 = $77 & -16;
       $86 = ($85<<24>>24)==(-128);
       if (!($86)) {
        $$lcssa = $71;
        label = 34;
        break L8;
       }
       break;
      }
      default: {
       $89 = $77 & -64;
       $90 = ($89<<24>>24)==(-128);
       if (!($90)) {
        $$lcssa83 = $71;
        label = 36;
        break L8;
       }
      }
      }
      $93 = $79&255;
      $94 = $93 & 192;
      $95 = ($94|0)==(128);
      if (!($95)) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $96 = $81&255;
      $97 = $96 & 192;
      $98 = ($97|0)==(128);
      if (!($98)) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $99 = $17 << 18;
      $100 = $99 & 1835008;
      $101 = $77&255;
      $102 = $101 << 12;
      $103 = $102 & 258048;
      $104 = $103 | $100;
      $105 = $93 << 6;
      $106 = $105 & 4032;
      $107 = $104 | $106;
      $108 = $96 & 63;
      $109 = $107 | $108;
      $110 = ($109>>>0)>($Maxcode>>>0);
      if ($110) {
       $frm_nxt$1$lcssa = $frm_nxt$150;
       label = 42;
       break L7;
      }
      $111 = (($nchar16_t$049) + 1)|0;
      $112 = ((($frm_nxt$150)) + 4|0);
      $frm_nxt$2 = $112;$nchar16_t$1 = $111;
     }
    } while(0);
    $113 = (($nchar16_t$1) + 1)|0;
    $114 = ($frm_nxt$2>>>0)<($frm_end>>>0);
    $115 = ($113>>>0)<($mx>>>0);
    $or$cond = $115 & $114;
    if ($or$cond) {
     $frm_nxt$150 = $frm_nxt$2;$nchar16_t$049 = $113;
    } else {
     $frm_nxt$1$lcssa = $frm_nxt$2;
     label = 42;
     break L7;
    }
   }
   if ((label|0) == 20) {
    $47 = $frm;
    $48 = (($$lcssa85) - ($47))|0;
    $$0 = $48;
    break;
   }
   else if ((label|0) == 22) {
    $51 = $frm;
    $52 = (($$lcssa84) - ($51))|0;
    $$0 = $52;
    break;
   }
   else if ((label|0) == 24) {
    $55 = $frm;
    $56 = (($$lcssa86) - ($55))|0;
    $$0 = $56;
    break;
   }
   else if ((label|0) == 32) {
    $83 = $frm;
    $84 = (($$lcssa82) - ($83))|0;
    $$0 = $84;
    break;
   }
   else if ((label|0) == 34) {
    $87 = $frm;
    $88 = (($$lcssa) - ($87))|0;
    $$0 = $88;
    break;
   }
   else if ((label|0) == 36) {
    $91 = $frm;
    $92 = (($$lcssa83) - ($91))|0;
    $$0 = $92;
    break;
   }
  } else {
   $frm_nxt$1$lcssa = $frm_nxt$1$ph;
   label = 42;
  }
 } while(0);
 if ((label|0) == 42) {
  $116 = $frm_nxt$1$lcssa;
  $117 = $frm;
  $118 = (($116) - ($117))|0;
  $$0 = $118;
 }
 return ($$0|0);
}
function __ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 2;
 $1 = ($0|0)==(0);
 $$pre1 = $to_end;
 if ($1) {
  label = 4;
 } else {
  $2 = $to;
  $3 = (($$pre1) - ($2))|0;
  $4 = ($3|0)<(3);
  if ($4) {
   $$0 = 1;
  } else {
   $5 = ((($to)) + 1|0);
   HEAP32[$to_nxt>>2] = $5;
   HEAP8[$to>>0] = -17;
   $6 = HEAP32[$to_nxt>>2]|0;
   $7 = ((($6)) + 1|0);
   HEAP32[$to_nxt>>2] = $7;
   HEAP8[$6>>0] = -69;
   $8 = HEAP32[$to_nxt>>2]|0;
   $9 = ((($8)) + 1|0);
   HEAP32[$to_nxt>>2] = $9;
   HEAP8[$8>>0] = -65;
   label = 4;
  }
 }
 L4: do {
  if ((label|0) == 4) {
   $$pre = HEAP32[$frm_nxt>>2]|0;
   $10 = ($$pre>>>0)<($frm_end>>>0);
   if ($10) {
    $12 = $$pre;
    while(1) {
     $11 = HEAP32[$12>>2]|0;
     $13 = $11 & -2048;
     $14 = ($13|0)==(55296);
     $15 = ($11>>>0)>($Maxcode>>>0);
     $or$cond = $15 | $14;
     if ($or$cond) {
      $$0 = 2;
      break L4;
     }
     $16 = ($11>>>0)<(128);
     do {
      if ($16) {
       $17 = HEAP32[$to_nxt>>2]|0;
       $18 = $17;
       $19 = (($$pre1) - ($18))|0;
       $20 = ($19|0)<(1);
       if ($20) {
        $$0 = 1;
        break L4;
       }
       $21 = $11&255;
       $22 = ((($17)) + 1|0);
       HEAP32[$to_nxt>>2] = $22;
       HEAP8[$17>>0] = $21;
      } else {
       $23 = ($11>>>0)<(2048);
       if ($23) {
        $24 = HEAP32[$to_nxt>>2]|0;
        $25 = $24;
        $26 = (($$pre1) - ($25))|0;
        $27 = ($26|0)<(2);
        if ($27) {
         $$0 = 1;
         break L4;
        }
        $28 = $11 >>> 6;
        $29 = $28 | 192;
        $30 = $29&255;
        $31 = ((($24)) + 1|0);
        HEAP32[$to_nxt>>2] = $31;
        HEAP8[$24>>0] = $30;
        $32 = $11 & 63;
        $33 = $32 | 128;
        $34 = $33&255;
        $35 = HEAP32[$to_nxt>>2]|0;
        $36 = ((($35)) + 1|0);
        HEAP32[$to_nxt>>2] = $36;
        HEAP8[$35>>0] = $34;
        break;
       }
       $37 = ($11>>>0)<(65536);
       $38 = HEAP32[$to_nxt>>2]|0;
       $39 = $38;
       $40 = (($$pre1) - ($39))|0;
       if ($37) {
        $41 = ($40|0)<(3);
        if ($41) {
         $$0 = 1;
         break L4;
        }
        $42 = $11 >>> 12;
        $43 = $42 | 224;
        $44 = $43&255;
        $45 = ((($38)) + 1|0);
        HEAP32[$to_nxt>>2] = $45;
        HEAP8[$38>>0] = $44;
        $46 = $11 >>> 6;
        $47 = $46 & 63;
        $48 = $47 | 128;
        $49 = $48&255;
        $50 = HEAP32[$to_nxt>>2]|0;
        $51 = ((($50)) + 1|0);
        HEAP32[$to_nxt>>2] = $51;
        HEAP8[$50>>0] = $49;
        $52 = $11 & 63;
        $53 = $52 | 128;
        $54 = $53&255;
        $55 = HEAP32[$to_nxt>>2]|0;
        $56 = ((($55)) + 1|0);
        HEAP32[$to_nxt>>2] = $56;
        HEAP8[$55>>0] = $54;
        break;
       } else {
        $57 = ($40|0)<(4);
        if ($57) {
         $$0 = 1;
         break L4;
        }
        $58 = $11 >>> 18;
        $59 = $58 | 240;
        $60 = $59&255;
        $61 = ((($38)) + 1|0);
        HEAP32[$to_nxt>>2] = $61;
        HEAP8[$38>>0] = $60;
        $62 = $11 >>> 12;
        $63 = $62 & 63;
        $64 = $63 | 128;
        $65 = $64&255;
        $66 = HEAP32[$to_nxt>>2]|0;
        $67 = ((($66)) + 1|0);
        HEAP32[$to_nxt>>2] = $67;
        HEAP8[$66>>0] = $65;
        $68 = $11 >>> 6;
        $69 = $68 & 63;
        $70 = $69 | 128;
        $71 = $70&255;
        $72 = HEAP32[$to_nxt>>2]|0;
        $73 = ((($72)) + 1|0);
        HEAP32[$to_nxt>>2] = $73;
        HEAP8[$72>>0] = $71;
        $74 = $11 & 63;
        $75 = $74 | 128;
        $76 = $75&255;
        $77 = HEAP32[$to_nxt>>2]|0;
        $78 = ((($77)) + 1|0);
        HEAP32[$to_nxt>>2] = $78;
        HEAP8[$77>>0] = $76;
        break;
       }
      }
     } while(0);
     $79 = HEAP32[$frm_nxt>>2]|0;
     $80 = ((($79)) + 4|0);
     HEAP32[$frm_nxt>>2] = $80;
     $81 = ($80>>>0)<($frm_end>>>0);
     if ($81) {
      $12 = $80;
     } else {
      $$0 = 0;
      break;
     }
    }
   } else {
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$lcssa = 0, $$off = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre$pre = 0, $$pre4 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 if ($1) {
  $$pre4 = $frm_end;
  $$pre = $to;$$pre$phiZ2D = $$pre4;
 } else {
  $2 = HEAP32[$frm_nxt>>2]|0;
  $3 = $frm_end;
  $4 = $2;
  $5 = (($3) - ($4))|0;
  $6 = ($5|0)>(2);
  if ($6) {
   $7 = HEAP8[$2>>0]|0;
   $8 = ($7<<24>>24)==(-17);
   if ($8) {
    $9 = ((($2)) + 1|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(-69);
    if ($11) {
     $12 = ((($2)) + 2|0);
     $13 = HEAP8[$12>>0]|0;
     $14 = ($13<<24>>24)==(-65);
     if ($14) {
      $15 = ((($2)) + 3|0);
      HEAP32[$frm_nxt>>2] = $15;
      $$pre$pre = HEAP32[$to_nxt>>2]|0;
      $$pre = $$pre$pre;$$pre$phiZ2D = $3;
     } else {
      $$pre = $to;$$pre$phiZ2D = $3;
     }
    } else {
     $$pre = $to;$$pre$phiZ2D = $3;
    }
   } else {
    $$pre = $to;$$pre$phiZ2D = $3;
   }
  } else {
   $$pre = $to;$$pre$phiZ2D = $3;
  }
 }
 $16 = HEAP32[$frm_nxt>>2]|0;
 $17 = ($16>>>0)<($frm_end>>>0);
 $18 = ($$pre>>>0)<($to_end>>>0);
 $19 = $17 & $18;
 L9: do {
  if ($19) {
   $21 = $16;$25 = $$pre;
   while(1) {
    $20 = HEAP8[$21>>0]|0;
    $22 = $20&255;
    $23 = ($20<<24>>24)>(-1);
    do {
     if ($23) {
      $24 = ($22>>>0)>($Maxcode>>>0);
      if ($24) {
       $$0 = 2;
       break L9;
      }
      HEAP32[$25>>2] = $22;
      $26 = ((($21)) + 1|0);
      HEAP32[$frm_nxt>>2] = $26;
     } else {
      $27 = ($20&255)<(194);
      if ($27) {
       $$0 = 2;
       break L9;
      }
      $28 = ($20&255)<(224);
      if ($28) {
       $29 = $21;
       $30 = (($$pre$phiZ2D) - ($29))|0;
       $31 = ($30|0)<(2);
       if ($31) {
        $$0 = 1;
        break L9;
       }
       $32 = ((($21)) + 1|0);
       $33 = HEAP8[$32>>0]|0;
       $34 = $33&255;
       $35 = $34 & 192;
       $36 = ($35|0)==(128);
       if (!($36)) {
        $$0 = 2;
        break L9;
       }
       $37 = $22 << 6;
       $38 = $37 & 1984;
       $39 = $34 & 63;
       $40 = $39 | $38;
       $41 = ($40>>>0)>($Maxcode>>>0);
       if ($41) {
        $$0 = 2;
        break L9;
       }
       HEAP32[$25>>2] = $40;
       $42 = ((($21)) + 2|0);
       HEAP32[$frm_nxt>>2] = $42;
       break;
      }
      $43 = ($20&255)<(240);
      if ($43) {
       $44 = $21;
       $45 = (($$pre$phiZ2D) - ($44))|0;
       $46 = ($45|0)<(3);
       if ($46) {
        $$0 = 1;
        break L9;
       }
       $47 = ((($21)) + 1|0);
       $48 = HEAP8[$47>>0]|0;
       $49 = ((($21)) + 2|0);
       $50 = HEAP8[$49>>0]|0;
       switch ($22|0) {
       case 224:  {
        $51 = $48 & -32;
        $52 = ($51<<24>>24)==(-96);
        if (!($52)) {
         $$0 = 2;
         break L9;
        }
        break;
       }
       case 237:  {
        $53 = $48 & -32;
        $54 = ($53<<24>>24)==(-128);
        if (!($54)) {
         $$0 = 2;
         break L9;
        }
        break;
       }
       default: {
        $55 = $48 & -64;
        $56 = ($55<<24>>24)==(-128);
        if (!($56)) {
         $$0 = 2;
         break L9;
        }
       }
       }
       $57 = $50&255;
       $58 = $57 & 192;
       $59 = ($58|0)==(128);
       if (!($59)) {
        $$0 = 2;
        break L9;
       }
       $60 = $22 << 12;
       $61 = $60 & 61440;
       $62 = $48&255;
       $63 = $62 << 6;
       $64 = $63 & 4032;
       $65 = $64 | $61;
       $66 = $57 & 63;
       $67 = $65 | $66;
       $68 = ($67>>>0)>($Maxcode>>>0);
       if ($68) {
        $$0 = 2;
        break L9;
       }
       HEAP32[$25>>2] = $67;
       $69 = ((($21)) + 3|0);
       HEAP32[$frm_nxt>>2] = $69;
       break;
      }
      $70 = ($20&255)<(245);
      if (!($70)) {
       $$0 = 2;
       break L9;
      }
      $71 = $21;
      $72 = (($$pre$phiZ2D) - ($71))|0;
      $73 = ($72|0)<(4);
      if ($73) {
       $$0 = 1;
       break L9;
      }
      $74 = ((($21)) + 1|0);
      $75 = HEAP8[$74>>0]|0;
      $76 = ((($21)) + 2|0);
      $77 = HEAP8[$76>>0]|0;
      $78 = ((($21)) + 3|0);
      $79 = HEAP8[$78>>0]|0;
      switch ($22|0) {
      case 240:  {
       $$off = (($75) + 112)<<24>>24;
       $80 = ($$off&255)<(48);
       if (!($80)) {
        $$0 = 2;
        break L9;
       }
       break;
      }
      case 244:  {
       $81 = $75 & -16;
       $82 = ($81<<24>>24)==(-128);
       if (!($82)) {
        $$0 = 2;
        break L9;
       }
       break;
      }
      default: {
       $83 = $75 & -64;
       $84 = ($83<<24>>24)==(-128);
       if (!($84)) {
        $$0 = 2;
        break L9;
       }
      }
      }
      $85 = $77&255;
      $86 = $85 & 192;
      $87 = ($86|0)==(128);
      if (!($87)) {
       $$0 = 2;
       break L9;
      }
      $88 = $79&255;
      $89 = $88 & 192;
      $90 = ($89|0)==(128);
      if (!($90)) {
       $$0 = 2;
       break L9;
      }
      $91 = $22 << 18;
      $92 = $91 & 1835008;
      $93 = $75&255;
      $94 = $93 << 12;
      $95 = $94 & 258048;
      $96 = $95 | $92;
      $97 = $85 << 6;
      $98 = $97 & 4032;
      $99 = $96 | $98;
      $100 = $88 & 63;
      $101 = $99 | $100;
      $102 = ($101>>>0)>($Maxcode>>>0);
      if ($102) {
       $$0 = 2;
       break L9;
      }
      HEAP32[$25>>2] = $101;
      $103 = ((($21)) + 4|0);
      HEAP32[$frm_nxt>>2] = $103;
     }
    } while(0);
    $104 = HEAP32[$to_nxt>>2]|0;
    $105 = ((($104)) + 4|0);
    HEAP32[$to_nxt>>2] = $105;
    $106 = HEAP32[$frm_nxt>>2]|0;
    $107 = ($106>>>0)<($frm_end>>>0);
    $108 = ($105>>>0)<($to_end>>>0);
    $109 = $107 & $108;
    if ($109) {
     $21 = $106;$25 = $105;
    } else {
     $$lcssa = $107;
     label = 38;
     break;
    }
   }
  } else {
   $$lcssa = $17;
   label = 38;
  }
 } while(0);
 if ((label|0) == 38) {
  $110 = $$lcssa&1;
  $$0 = $110;
 }
 return ($$0|0);
}
function __ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$frm = 0, $$lcssa = 0, $$lcssa80 = 0, $$lcssa81 = 0, $$lcssa82 = 0, $$lcssa83 = 0, $$lcssa84 = 0, $$off = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$1$ph = 0, $frm_nxt$148 = 0, $frm_nxt$2 = 0, $nchar32_t$047 = 0, $or$cond = 0, $or$cond46 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 $$pre = $frm_end;
 if ($1) {
  $frm_nxt$1$ph = $frm;
 } else {
  $2 = $frm;
  $3 = (($$pre) - ($2))|0;
  $4 = ($3|0)>(2);
  if ($4) {
   $5 = HEAP8[$frm>>0]|0;
   $6 = ($5<<24>>24)==(-17);
   if ($6) {
    $7 = ((($frm)) + 1|0);
    $8 = HEAP8[$7>>0]|0;
    $9 = ($8<<24>>24)==(-69);
    if ($9) {
     $10 = ((($frm)) + 2|0);
     $11 = HEAP8[$10>>0]|0;
     $12 = ($11<<24>>24)==(-65);
     $13 = ((($frm)) + 3|0);
     $$frm = $12 ? $13 : $frm;
     $frm_nxt$1$ph = $$frm;
    } else {
     $frm_nxt$1$ph = $frm;
    }
   } else {
    $frm_nxt$1$ph = $frm;
   }
  } else {
   $frm_nxt$1$ph = $frm;
  }
 }
 $14 = ($frm_nxt$1$ph>>>0)<($frm_end>>>0);
 $15 = ($mx|0)!=(0);
 $or$cond46 = $15 & $14;
 L7: do {
  if ($or$cond46) {
   $frm_nxt$148 = $frm_nxt$1$ph;$nchar32_t$047 = 0;
   L8: while(1) {
    $16 = HEAP8[$frm_nxt$148>>0]|0;
    $17 = $16&255;
    $18 = ($16<<24>>24)>(-1);
    do {
     if ($18) {
      $19 = ($17>>>0)>($Maxcode>>>0);
      if ($19) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $20 = ((($frm_nxt$148)) + 1|0);
      $frm_nxt$2 = $20;
     } else {
      $21 = ($16&255)<(194);
      if ($21) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $22 = ($16&255)<(224);
      if ($22) {
       $23 = $frm_nxt$148;
       $24 = (($$pre) - ($23))|0;
       $25 = ($24|0)<(2);
       if ($25) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $26 = ((($frm_nxt$148)) + 1|0);
       $27 = HEAP8[$26>>0]|0;
       $28 = $27&255;
       $29 = $28 & 192;
       $30 = ($29|0)==(128);
       if (!($30)) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $31 = $17 << 6;
       $32 = $31 & 1984;
       $33 = $28 & 63;
       $34 = $33 | $32;
       $35 = ($34>>>0)>($Maxcode>>>0);
       if ($35) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $36 = ((($frm_nxt$148)) + 2|0);
       $frm_nxt$2 = $36;
       break;
      }
      $37 = ($16&255)<(240);
      if ($37) {
       $38 = $frm_nxt$148;
       $39 = (($$pre) - ($38))|0;
       $40 = ($39|0)<(3);
       if ($40) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $41 = ((($frm_nxt$148)) + 1|0);
       $42 = HEAP8[$41>>0]|0;
       $43 = ((($frm_nxt$148)) + 2|0);
       $44 = HEAP8[$43>>0]|0;
       switch ($17|0) {
       case 224:  {
        $45 = $42 & -32;
        $46 = ($45<<24>>24)==(-96);
        if (!($46)) {
         $$lcssa83 = $38;
         label = 20;
         break L8;
        }
        break;
       }
       case 237:  {
        $49 = $42 & -32;
        $50 = ($49<<24>>24)==(-128);
        if (!($50)) {
         $$lcssa82 = $38;
         label = 22;
         break L8;
        }
        break;
       }
       default: {
        $53 = $42 & -64;
        $54 = ($53<<24>>24)==(-128);
        if (!($54)) {
         $$lcssa84 = $38;
         label = 24;
         break L8;
        }
       }
       }
       $57 = $44&255;
       $58 = $57 & 192;
       $59 = ($58|0)==(128);
       if (!($59)) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $60 = $17 << 12;
       $61 = $60 & 61440;
       $62 = $42&255;
       $63 = $62 << 6;
       $64 = $63 & 4032;
       $65 = $64 | $61;
       $66 = $57 & 63;
       $67 = $65 | $66;
       $68 = ($67>>>0)>($Maxcode>>>0);
       if ($68) {
        $frm_nxt$1$lcssa = $frm_nxt$148;
        label = 42;
        break L7;
       }
       $69 = ((($frm_nxt$148)) + 3|0);
       $frm_nxt$2 = $69;
       break;
      }
      $70 = ($16&255)<(245);
      if (!($70)) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $71 = $frm_nxt$148;
      $72 = (($$pre) - ($71))|0;
      $73 = ($72|0)<(4);
      if ($73) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $74 = ((($frm_nxt$148)) + 1|0);
      $75 = HEAP8[$74>>0]|0;
      $76 = ((($frm_nxt$148)) + 2|0);
      $77 = HEAP8[$76>>0]|0;
      $78 = ((($frm_nxt$148)) + 3|0);
      $79 = HEAP8[$78>>0]|0;
      switch ($17|0) {
      case 240:  {
       $$off = (($75) + 112)<<24>>24;
       $80 = ($$off&255)<(48);
       if (!($80)) {
        $$lcssa80 = $71;
        label = 32;
        break L8;
       }
       break;
      }
      case 244:  {
       $83 = $75 & -16;
       $84 = ($83<<24>>24)==(-128);
       if (!($84)) {
        $$lcssa = $71;
        label = 34;
        break L8;
       }
       break;
      }
      default: {
       $87 = $75 & -64;
       $88 = ($87<<24>>24)==(-128);
       if (!($88)) {
        $$lcssa81 = $71;
        label = 36;
        break L8;
       }
      }
      }
      $91 = $77&255;
      $92 = $91 & 192;
      $93 = ($92|0)==(128);
      if (!($93)) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $94 = $79&255;
      $95 = $94 & 192;
      $96 = ($95|0)==(128);
      if (!($96)) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $97 = $17 << 18;
      $98 = $97 & 1835008;
      $99 = $75&255;
      $100 = $99 << 12;
      $101 = $100 & 258048;
      $102 = $101 | $98;
      $103 = $91 << 6;
      $104 = $103 & 4032;
      $105 = $102 | $104;
      $106 = $94 & 63;
      $107 = $105 | $106;
      $108 = ($107>>>0)>($Maxcode>>>0);
      if ($108) {
       $frm_nxt$1$lcssa = $frm_nxt$148;
       label = 42;
       break L7;
      }
      $109 = ((($frm_nxt$148)) + 4|0);
      $frm_nxt$2 = $109;
     }
    } while(0);
    $110 = (($nchar32_t$047) + 1)|0;
    $111 = ($frm_nxt$2>>>0)<($frm_end>>>0);
    $112 = ($110>>>0)<($mx>>>0);
    $or$cond = $112 & $111;
    if ($or$cond) {
     $frm_nxt$148 = $frm_nxt$2;$nchar32_t$047 = $110;
    } else {
     $frm_nxt$1$lcssa = $frm_nxt$2;
     label = 42;
     break L7;
    }
   }
   if ((label|0) == 20) {
    $47 = $frm;
    $48 = (($$lcssa83) - ($47))|0;
    $$0 = $48;
    break;
   }
   else if ((label|0) == 22) {
    $51 = $frm;
    $52 = (($$lcssa82) - ($51))|0;
    $$0 = $52;
    break;
   }
   else if ((label|0) == 24) {
    $55 = $frm;
    $56 = (($$lcssa84) - ($55))|0;
    $$0 = $56;
    break;
   }
   else if ((label|0) == 32) {
    $81 = $frm;
    $82 = (($$lcssa80) - ($81))|0;
    $$0 = $82;
    break;
   }
   else if ((label|0) == 34) {
    $85 = $frm;
    $86 = (($$lcssa) - ($85))|0;
    $$0 = $86;
    break;
   }
   else if ((label|0) == 36) {
    $89 = $frm;
    $90 = (($$lcssa81) - ($89))|0;
    $$0 = $90;
    break;
   }
  } else {
   $frm_nxt$1$lcssa = $frm_nxt$1$ph;
   label = 42;
  }
 } while(0);
 if ((label|0) == 42) {
  $113 = $frm_nxt$1$lcssa;
  $114 = $frm;
  $115 = (($113) - ($114))|0;
  $$0 = $115;
 }
 return ($$0|0);
}
function ___cxx_global_array_dtor($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((11368));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((11356));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((11344));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((11332));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((11320));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((11308));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((11296));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((11284));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((11272));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((11260));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((11248));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((11236));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((11224));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(11212);
 return;
}
function ___cxx_global_array_dtor54($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((11540));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((11528));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((11516));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((11504));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((11492));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((11480));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((11468));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((11456));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((11444));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((11432));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((11420));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((11408));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((11396));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(11384);
 return;
}
function ___cxx_global_array_dtor69($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((12172));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((12160));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((12148));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((12136));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((12124));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((12112));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((12100));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((12088));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((12076));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((12064));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((12052));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((12040));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((12028));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((12016));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((12004));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((11992));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((11980));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((11968));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((11956));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((11944));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((11932));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((11920));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((11908));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(11896);
 return;
}
function ___cxx_global_array_dtor93($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((12464));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((12452));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((12440));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((12428));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((12416));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((12404));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((12392));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((12380));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((12368));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((12356));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((12344));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((12332));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((12320));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((12308));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((12296));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((12284));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((12272));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((12260));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((12248));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((12236));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((12224));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((12212));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((12200));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12188);
 return;
}
function ___cxx_global_array_dtor117($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((13276));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((13264));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((13252));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((13240));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((13228));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((13216));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((13204));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((13192));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((13180));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((13168));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((13156));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((13144));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((13132));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((13120));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((13108));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((13096));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((13084));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((13072));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((13060));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((13048));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((13036));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((13024));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((13012));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(13000);
 return;
}
function ___cxx_global_array_dtor120($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((13568));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((13556));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((13544));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((13532));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((13520));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((13508));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((13496));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((13484));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((13472));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((13460));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((13448));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((13436));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((13424));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((13412));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((13400));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((13388));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((13376));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((13364));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((13352));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((13340));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((13328));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((13316));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((13304));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(13292);
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i1 = 0, $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__v = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v = sp;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ($7>>>0)<($__n>>>0);
 if ($8) {
  $9 = ((($this)) + 16|0);
  $10 = HEAP32[$this>>2]|0;
  $11 = $10;
  $12 = (($5) - ($11))|0;
  $13 = $12 >> 2;
  $14 = (($13) + ($__n))|0;
  $15 = ($14>>>0)>(1073741823);
  if ($15) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
   // unreachable;
  }
  $16 = (($4) - ($11))|0;
  $17 = $16 >> 2;
  $18 = ($17>>>0)<(536870911);
  if ($18) {
   $19 = $16 >> 1;
   $20 = ($19>>>0)<($14>>>0);
   $21 = $20 ? $14 : $19;
   $$0$i1 = $21;
  } else {
   $$0$i1 = 1073741823;
  }
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($__v,$$0$i1,$13,$9);
  $22 = ((($__v)) + 8|0);
  $$pre$i = HEAP32[$22>>2]|0;
  $23 = $__n << 2;
  _memset(($$pre$i|0),0,($23|0))|0;
  $scevgep = (($$pre$i) + ($__n<<2)|0);
  HEAP32[$22>>2] = $scevgep;
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this,$__v);
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($__v);
 } else {
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n);
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0 = 0, $$pre = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $$pre = HEAP32[$0>>2]|0;
 $$0 = $__n;$1 = $$pre;
 while(1) {
  HEAP32[$1>>2] = 0;
  $2 = HEAP32[$0>>2]|0;
  $3 = ((($2)) + 4|0);
  HEAP32[$0>>2] = $3;
  $4 = (($$0) + -1)|0;
  $5 = ($4|0)==(0);
  if ($5) {
   break;
  } else {
   $$0 = $4;$1 = $3;
  }
 }
 return;
}
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $$not$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 16|0);
 HEAP32[$1>>2] = $__a;
 $2 = ($__cap|0)==(0);
 do {
  if ($2) {
   $8 = 0;
  } else {
   $3 = ((($__a)) + 112|0);
   $4 = HEAP8[$3>>0]|0;
   $$not$i$i = ($4<<24>>24)==(0);
   $5 = ($__cap>>>0)<(29);
   $or$cond$i$i = $5 & $$not$i$i;
   if ($or$cond$i$i) {
    HEAP8[$3>>0] = 1;
    $8 = $__a;
    break;
   } else {
    $6 = $__cap << 2;
    $7 = (__Znwj($6)|0);
    $8 = $7;
    break;
   }
  }
 } while(0);
 HEAP32[$this>>2] = $8;
 $9 = (($8) + ($__start<<2)|0);
 $10 = ((($this)) + 8|0);
 HEAP32[$10>>2] = $9;
 $11 = ((($this)) + 4|0);
 HEAP32[$11>>2] = $9;
 $12 = (($8) + ($__cap<<2)|0);
 $13 = ((($this)) + 12|0);
 HEAP32[$13>>2] = $12;
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($this)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($__v)) + 4|0);
 $4 = $2;
 $5 = $0;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = HEAP32[$3>>2]|0;
 $9 = (0 - ($7))|0;
 $10 = (($8) + ($9<<2)|0);
 HEAP32[$3>>2] = $10;
 _memcpy(($10|0),($0|0),($6|0))|0;
 $11 = HEAP32[$this>>2]|0;
 $12 = HEAP32[$3>>2]|0;
 HEAP32[$this>>2] = $12;
 HEAP32[$3>>2] = $11;
 $13 = ((($__v)) + 8|0);
 $14 = HEAP32[$1>>2]|0;
 $15 = HEAP32[$13>>2]|0;
 HEAP32[$1>>2] = $15;
 HEAP32[$13>>2] = $14;
 $16 = ((($this)) + 8|0);
 $17 = ((($__v)) + 12|0);
 $18 = HEAP32[$16>>2]|0;
 $19 = HEAP32[$17>>2]|0;
 HEAP32[$16>>2] = $19;
 HEAP32[$17>>2] = $18;
 $20 = HEAP32[$3>>2]|0;
 HEAP32[$__v>>2] = $20;
 return;
}
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this|0;
 var $$lcssa = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 8|0);
 $$pre$i$i$i = HEAP32[$2>>2]|0;
 $3 = ($$pre$i$i$i|0)==($1|0);
 if (!($3)) {
  $5 = $$pre$i$i$i;
  while(1) {
   $4 = ((($5)) + -4|0);
   $6 = ($4|0)==($1|0);
   if ($6) {
    $$lcssa = $4;
    break;
   } else {
    $5 = $4;
   }
  }
  HEAP32[$2>>2] = $$lcssa;
 }
 $7 = HEAP32[$this>>2]|0;
 $8 = ($7|0)==(0|0);
 do {
  if (!($8)) {
   $9 = ((($this)) + 16|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==($7|0);
   if ($11) {
    $12 = ((($10)) + 112|0);
    HEAP8[$12>>0] = 0;
    break;
   } else {
    __ZdlPv($7);
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i$i = 0, $$not$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(1073741823);
 if ($0) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ((($this)) + 128|0);
 $2 = HEAP8[$1>>0]|0;
 $$not$i$i = ($2<<24>>24)==(0);
 $3 = ($__n>>>0)<(29);
 $or$cond$i$i = $3 & $$not$i$i;
 if ($or$cond$i$i) {
  $4 = ((($this)) + 16|0);
  HEAP8[$1>>0] = 1;
  $$0$i$i = $4;
 } else {
  $5 = $__n << 2;
  $6 = (__Znwj($5)|0);
  $$0$i$i = $6;
 }
 $7 = ((($this)) + 4|0);
 HEAP32[$7>>2] = $$0$i$i;
 HEAP32[$this>>2] = $$0$i$i;
 $8 = (($$0$i$i) + ($__n<<2)|0);
 $9 = ((($this)) + 8|0);
 HEAP32[$9>>2] = $8;
 return;
}
function __ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (+_strtold($__a,$__p2));
   $5 = HEAP32[$1>>2]|0;
   $6 = ($5|0)==(0);
   if ($6) {
    HEAP32[$1>>2] = $2;
   }
   $7 = HEAP32[$__p2>>2]|0;
   $8 = ($7|0)==($__a_end|0);
   if (!($8)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0.0;
    break;
   }
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
    $$0 = $4;
   } else {
    $$0 = $4;
   }
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (+_strtold($__a,$__p2));
   $5 = HEAP32[$1>>2]|0;
   $6 = ($5|0)==(0);
   if ($6) {
    HEAP32[$1>>2] = $2;
   }
   $7 = HEAP32[$__p2>>2]|0;
   $8 = ($7|0)==($__a_end|0);
   if (!($8)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0.0;
    break;
   }
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
    $$0 = $4;
   } else {
    $$0 = $4;
   }
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $10 = 0.0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (+_strtold($__a,$__p2));
   $5 = HEAP32[$1>>2]|0;
   $6 = ($5|0)==(0);
   if ($6) {
    HEAP32[$1>>2] = $2;
   }
   $7 = HEAP32[$__p2>>2]|0;
   $8 = ($7|0)==($__a_end|0);
   if (!($8)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0.0;
    break;
   }
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
   }
   $10 = $4;
   $$0 = $10;
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $13 = 0;$14 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $13 = 0;$14 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $13 = 0;$14 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   if ($12) {
    HEAP32[$__err>>2] = 4;
    $13 = -1;$14 = -1;
   } else {
    $13 = $7;$14 = $6;
   }
  }
 } while(0);
 tempRet0 = ($13);
 STACKTOP = sp;return ($14|0);
}
function __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   $13 = ($7>>>0)>(0);
   $14 = ($6>>>0)>(4294967295);
   $15 = ($7|0)==(0);
   $16 = $15 & $14;
   $17 = $13 | $16;
   $or$cond = $17 | $12;
   if ($or$cond) {
    HEAP32[$__err>>2] = 4;
    $$0 = -1;
    break;
   } else {
    $$0 = $6;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   $13 = ($7>>>0)>(0);
   $14 = ($6>>>0)>(4294967295);
   $15 = ($7|0)==(0);
   $16 = $15 & $14;
   $17 = $13 | $16;
   $or$cond = $17 | $12;
   if ($or$cond) {
    HEAP32[$__err>>2] = 4;
    $$0 = -1;
    break;
   } else {
    $$0 = $6;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__p2 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   $13 = ($7>>>0)>(0);
   $14 = ($6>>>0)>(65535);
   $15 = ($7|0)==(0);
   $16 = $15 & $14;
   $17 = $13 | $16;
   $or$cond = $17 | $12;
   if ($or$cond) {
    HEAP32[$__err>>2] = 4;
    $$0 = -1;
    break;
   } else {
    $18 = $6&65535;
    $$0 = $18;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $18 = 0;$19 = 0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (_strtoll_l($__a,$__p2,$__base,$3)|0);
   $5 = tempRet0;
   $6 = HEAP32[$1>>2]|0;
   $7 = ($6|0)==(0);
   if ($7) {
    HEAP32[$1>>2] = $2;
   }
   $8 = HEAP32[$__p2>>2]|0;
   $9 = ($8|0)==($__a_end|0);
   if (!($9)) {
    HEAP32[$__err>>2] = 4;
    $18 = 0;$19 = 0;
    break;
   }
   $10 = ($6|0)==(34);
   if ($10) {
    HEAP32[$__err>>2] = 4;
    $11 = ($5|0)>(0);
    $12 = ($4>>>0)>(0);
    $13 = ($5|0)==(0);
    $14 = $13 & $12;
    $15 = $11 | $14;
    $16 = $15 ? -1 : 0;
    $17 = $15 ? 2147483647 : -2147483648;
    tempRet0 = ($17);
    STACKTOP = sp;return ($16|0);
   } else {
    $18 = $5;$19 = $4;
   }
  }
 } while(0);
 tempRet0 = ($18);
 STACKTOP = sp;return ($19|0);
}
function __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 L1: do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (_strtoll_l($__a,$__p2,$__base,$3)|0);
   $5 = tempRet0;
   $6 = HEAP32[$1>>2]|0;
   $7 = ($6|0)==(0);
   if ($7) {
    HEAP32[$1>>2] = $2;
   }
   $8 = HEAP32[$__p2>>2]|0;
   $9 = ($8|0)==($__a_end|0);
   if (!($9)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $10 = ($6|0)==(34);
   do {
    if ($10) {
     HEAP32[$__err>>2] = 4;
     $21 = ($5|0)>(0);
     $22 = ($4>>>0)>(0);
     $23 = ($5|0)==(0);
     $24 = $23 & $22;
     $25 = $21 | $24;
     if ($25) {
      $$0 = 2147483647;
      break L1;
     }
    } else {
     $11 = ($5|0)<(-1);
     $12 = ($4>>>0)<(2147483648);
     $13 = ($5|0)==(-1);
     $14 = $13 & $12;
     $15 = $11 | $14;
     if ($15) {
      HEAP32[$__err>>2] = 4;
      break;
     }
     $16 = ($5|0)>(0);
     $17 = ($4>>>0)>(2147483647);
     $18 = ($5|0)==(0);
     $19 = $18 & $17;
     $20 = $16 | $19;
     if ($20) {
      HEAP32[$__err>>2] = 4;
      $$0 = 2147483647;
      break L1;
     } else {
      $$0 = $4;
      break L1;
     }
    }
   } while(0);
   $$0 = -2147483648;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__114__shared_countD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__114__shared_count12__add_sharedEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;HEAP32[$0>>2] = (($1+1)|0);
 return;
}
function __ZNSt3__114__shared_count16__release_sharedEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;HEAP32[$0>>2] = (($1+-1)|0);
 $2 = ($1|0)==(0);
 if ($2) {
  $3 = HEAP32[$this>>2]|0;
  $4 = ((($3)) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  FUNCTION_TABLE_vi[$5 & 1023]($this);
  $$0 = 1;
 } else {
  $$0 = 0;
 }
 return ($$0|0);
}
function __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (2704);
 $0 = ((($this)) + 4|0);
 $1 = HEAP8[$msg>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 $4 = ((($msg)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($msg)) + 1|0);
 $7 = $3 ? $6 : $5;
 __THREW__ = 0;
 invoke_vii(535,($0|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if ($9) {
  $10 = ___cxa_find_matching_catch()|0;
  $11 = tempRet0;
  ___resumeException($10|0);
  // unreachable;
 } else {
  return;
 }
}
function __ZNSt13runtime_errorC2EPKc($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (2704);
 $0 = ((($this)) + 4|0);
 __THREW__ = 0;
 invoke_vii(535,($0|0),($msg|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch()|0;
  $4 = tempRet0;
  ___resumeException($3|0);
  // unreachable;
 } else {
  return;
 }
}
function __ZNSt3__118__libcpp_refstringC2EPKc($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen($msg)|0);
 $1 = (($0) + 13)|0;
 $2 = (__Znwj($1)|0);
 HEAP32[$2>>2] = $0;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = $0;
 $4 = ((($2)) + 8|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($2)) + 12|0);
 $6 = (($0) + 1)|0;
 _memcpy(($5|0),($msg|0),($6|0))|0;
 HEAP32[$this>>2] = $5;
 return;
}
function __ZNKSt3__114error_category23default_error_conditionEi($agg$result,$this,$ev) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = $ev;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = $this;
 return;
}
function __ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE($this,$code,$condition) {
 $this = $this|0;
 $code = $code|0;
 $condition = $condition|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $1 = HEAP32[$this>>2]|0;
 $2 = ((($1)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 FUNCTION_TABLE_viii[$3 & 1023]($0,$this,$code);
 $4 = ((($0)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($condition)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($5|0)==($7|0);
 if ($8) {
  $9 = HEAP32[$0>>2]|0;
  $10 = HEAP32[$condition>>2]|0;
  $11 = ($9|0)==($10|0);
  $12 = $11;
 } else {
  $12 = 0;
 }
 STACKTOP = sp;return ($12|0);
}
function __ZNKSt3__114error_category10equivalentERKNS_10error_codeEi($this,$code,$condition) {
 $this = $this|0;
 $code = $code|0;
 $condition = $condition|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($code)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==($this|0);
 $3 = HEAP32[$code>>2]|0;
 $4 = ($3|0)==($condition|0);
 $5 = $2 & $4;
 return ($5|0);
}
function __ZNKSt3__112__do_message7messageEi($agg$result,$this,$ev) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strerror($ev)|0);
 $1 = (_strlen($0)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,$0,$1);
 return;
}
function __ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result,$ec,$what_arg) {
 $agg$result = $agg$result|0;
 $ec = $ec|0;
 $what_arg = $what_arg|0;
 var $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $1 = HEAP32[$ec>>2]|0;
 $2 = ($1|0)==(0);
 do {
  if (!($2)) {
   $3 = HEAP8[$what_arg>>0]|0;
   $4 = $3 & 1;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $8 = $3&255;
    $9 = $8 >>> 1;
    $11 = $9;
   } else {
    $6 = ((($what_arg)) + 4|0);
    $7 = HEAP32[$6>>2]|0;
    $11 = $7;
   }
   $10 = ($11|0)==(0);
   if ($10) {
    $17 = $1;
   } else {
    (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($what_arg,26959)|0);
    $$pre = HEAP32[$ec>>2]|0;
    $17 = $$pre;
   }
   $12 = ((($ec)) + 4|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = HEAP32[$13>>2]|0;
   $15 = ((($14)) + 24|0);
   $16 = HEAP32[$15>>2]|0;
   FUNCTION_TABLE_viii[$16 & 1023]($0,$13,$17);
   $18 = HEAP8[$0>>0]|0;
   $19 = $18 & 1;
   $20 = ($19<<24>>24)==(0);
   $21 = ((($0)) + 8|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ((($0)) + 1|0);
   $24 = $20 ? $23 : $22;
   $25 = ((($0)) + 4|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = $18&255;
   $28 = $27 >>> 1;
   $29 = $20 ? $28 : $26;
   __THREW__ = 0;
   (invoke_iiii(536,($what_arg|0),($24|0),($29|0))|0);
   $30 = __THREW__; __THREW__ = 0;
   $31 = $30&1;
   if ($31) {
    $32 = ___cxa_find_matching_catch()|0;
    $33 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    ___resumeException($32|0);
    // unreachable;
   } else {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    break;
   }
  }
 } while(0);
 ;HEAP32[$agg$result>>2]=HEAP32[$what_arg>>2]|0;HEAP32[$agg$result+4>>2]=HEAP32[$what_arg+4>>2]|0;HEAP32[$agg$result+8>>2]=HEAP32[$what_arg+8>>2]|0;
 HEAP32[$what_arg>>2] = 0;
 $34 = ((($what_arg)) + 4|0);
 HEAP32[$34>>2] = 0;
 $35 = ((($what_arg)) + 8|0);
 HEAP32[$35>>2] = 0;
 STACKTOP = sp;return;
}
function __ZNSt3__112system_errorC2ENS_10error_codeEPKc($this,$ec,$what_arg) {
 $this = $this|0;
 $ec = $ec|0;
 $what_arg = $what_arg|0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 12|0;
 $1 = sp;
 $2 = (_strlen($what_arg)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1,$what_arg,$2);
 __THREW__ = 0;
 invoke_viii(537,($0|0),($ec|0),($1|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if ($4) {
   $18 = ___cxa_find_matching_catch()|0;
   $19 = tempRet0;
   $$0 = $19;$$01 = $18;
  } else {
   __THREW__ = 0;
   invoke_vii(538,($this|0),($0|0));
   $5 = __THREW__; __THREW__ = 0;
   $6 = $5&1;
   if ($6) {
    $20 = ___cxa_find_matching_catch()|0;
    $21 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    $$0 = $21;$$01 = $20;
    break;
   } else {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    HEAP32[$this>>2] = (13916);
    $7 = ((($this)) + 8|0);
    $8 = $ec;
    $9 = $8;
    $10 = HEAP32[$9>>2]|0;
    $11 = (($8) + 4)|0;
    $12 = $11;
    $13 = HEAP32[$12>>2]|0;
    $14 = $7;
    $15 = $14;
    HEAP32[$15>>2] = $10;
    $16 = (($14) + 4)|0;
    $17 = $16;
    HEAP32[$17>>2] = $13;
    STACKTOP = sp;return;
   }
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 ___resumeException($$01|0);
 // unreachable;
}
function __ZNSt3__112system_errorD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt13runtime_errorD2Ev($this);
 return;
}
function __ZNSt3__112system_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt13runtime_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__114error_categoryD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__111__call_onceERVmPvPFvS2_E($flag,$arg,$func) {
 $flag = $flag|0;
 $arg = $arg|0;
 $func = $func|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 (_pthread_mutex_lock((13928|0))|0);
 $0 = HEAP32[$flag>>2]|0;
 $1 = ($0|0)==(1);
 if ($1) {
  while(1) {
   (_pthread_cond_wait((13956|0),(13928|0))|0);
   $2 = HEAP32[$flag>>2]|0;
   $3 = ($2|0)==(1);
   if (!($3)) {
    break;
   }
  }
 }
 $4 = HEAP32[$flag>>2]|0;
 $5 = ($4|0)==(0);
 do {
  if ($5) {
   HEAP32[$flag>>2] = 1;
   __THREW__ = 0;
   (invoke_ii(539,(13928|0))|0);
   $6 = __THREW__; __THREW__ = 0;
   $7 = $6&1;
   if (!($7)) {
    __THREW__ = 0;
    invoke_vi($func|0,($arg|0));
    $8 = __THREW__; __THREW__ = 0;
    $9 = $8&1;
    if (!($9)) {
     __THREW__ = 0;
     (invoke_ii(540,(13928|0))|0);
     $10 = __THREW__; __THREW__ = 0;
     $11 = $10&1;
     if (!($11)) {
      HEAP32[$flag>>2] = -1;
      __THREW__ = 0;
      (invoke_ii(539,(13928|0))|0);
      $12 = __THREW__; __THREW__ = 0;
      $13 = $12&1;
      if (!($13)) {
       __THREW__ = 0;
       (invoke_ii(541,(13956|0))|0);
       $14 = __THREW__; __THREW__ = 0;
       $15 = $14&1;
       if (!($15)) {
        break;
       }
      }
     }
    }
   }
   $16 = ___cxa_find_matching_catch(0|0)|0;
   $17 = tempRet0;
   (___cxa_begin_catch(($16|0))|0);
   __THREW__ = 0;
   (invoke_ii(540,(13928|0))|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if (!($19)) {
    HEAP32[$flag>>2] = 0;
    __THREW__ = 0;
    (invoke_ii(539,(13928|0))|0);
    $20 = __THREW__; __THREW__ = 0;
    $21 = $20&1;
    if (!($21)) {
     __THREW__ = 0;
     (invoke_ii(541,(13956|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if (!($23)) {
      __THREW__ = 0;
      invoke_v(542);
      $24 = __THREW__; __THREW__ = 0;
     }
    }
   }
   $25 = ___cxa_find_matching_catch()|0;
   $26 = tempRet0;
   __THREW__ = 0;
   invoke_v(361);
   $27 = __THREW__; __THREW__ = 0;
   $28 = $27&1;
   if ($28) {
    $29 = ___cxa_find_matching_catch(0|0)|0;
    $30 = tempRet0;
    ___clang_call_terminate($29);
    // unreachable;
   } else {
    ___resumeException($25|0);
    // unreachable;
   }
  } else {
   (_pthread_mutex_unlock((13928|0))|0);
  }
 } while(0);
 return;
}
function runPostSets() {

}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
    stop = (ptr + num)|0;
    if ((num|0) >= 20) {
      // This is unaligned, but quite large, so work hard to get to aligned settings
      value = value & 0xff;
      unaligned = ptr & 3;
      value4 = value | (value << 8) | (value << 16) | (value << 24);
      stop4 = stop & ~3;
      if (unaligned) {
        unaligned = (ptr + 4 - unaligned)|0;
        while ((ptr|0) < (unaligned|0)) { // no need to check for stop, since we have large num
          HEAP8[((ptr)>>0)]=value;
          ptr = (ptr+1)|0;
        }
      }
      while ((ptr|0) < (stop4|0)) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    while ((ptr|0) < (stop|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (ptr-num)|0;
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if ((num|0) >= 4096) return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    ret = dest|0;
    if ((dest&3) == (src&3)) {
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      while ((num|0) >= 4) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
        num = (num-4)|0;
      }
    }
    while ((num|0) > 0) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
      num = (num-1)|0;
    }
    return ret|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function _memmove(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {
      // Unlikely case: Copy backwards in a safe manner
      ret = dest;
      src = (src + num)|0;
      dest = (dest + num)|0;
      while ((num|0) > 0) {
        dest = (dest - 1)|0;
        src = (src - 1)|0;
        num = (num - 1)|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      }
      dest = ret;
    } else {
      _memcpy(dest, src, num) | 0;
    }
    return dest | 0;
}
function _bitshift64Ashr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = (high|0) < 0 ? -1 : 0;
    return (high >> (bits - 32))|0;
  }
function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = ((HEAP8[(((cttz_i8)+(x & 0xff))>>0)])|0);
    if ((ret|0) < 8) return ret|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 8)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 16)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 16)|0;
    return (((HEAP8[(((cttz_i8)+(x >>> 24))>>0)])|0) + 24)|0;
  }

// ======== compiled code from system/lib/compiler-rt , see readme therein
function ___muldsi3($a, $b) {
  $a = $a | 0;
  $b = $b | 0;
  var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
  $1 = $a & 65535;
  $2 = $b & 65535;
  $3 = Math_imul($2, $1) | 0;
  $6 = $a >>> 16;
  $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
  $11 = $b >>> 16;
  $12 = Math_imul($11, $1) | 0;
  return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___divdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $7$0 = 0, $7$1 = 0, $8$0 = 0, $10$0 = 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  $7$0 = $2$0 ^ $1$0;
  $7$1 = $2$1 ^ $1$1;
  $8$0 = ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, 0) | 0;
  $10$0 = _i64Subtract($8$0 ^ $7$0, tempRet0 ^ $7$1, $7$0, $7$1) | 0;
  return $10$0 | 0;
}
function ___remdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  $rem = __stackBase__ | 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, $rem) | 0;
  $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0, HEAP32[$rem + 4 >> 2] ^ $1$1, $1$0, $1$1) | 0;
  $10$1 = tempRet0;
  STACKTOP = __stackBase__;
  return (tempRet0 = $10$1, $10$0) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
  $x_sroa_0_0_extract_trunc = $a$0;
  $y_sroa_0_0_extract_trunc = $b$0;
  $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
  $1$1 = tempRet0;
  $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
  return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0;
  $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
  return $1$0 | 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  $rem = __stackBase__ | 0;
  ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
  STACKTOP = __stackBase__;
  return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  $rem = $rem | 0;
  var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
  $n_sroa_0_0_extract_trunc = $a$0;
  $n_sroa_1_4_extract_shift$0 = $a$1;
  $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
  $d_sroa_0_0_extract_trunc = $b$0;
  $d_sroa_1_4_extract_shift$0 = $b$1;
  $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
  if (($n_sroa_1_4_extract_trunc | 0) == 0) {
    $4 = ($rem | 0) != 0;
    if (($d_sroa_1_4_extract_trunc | 0) == 0) {
      if ($4) {
        HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
        HEAP32[$rem + 4 >> 2] = 0;
      }
      $_0$1 = 0;
      $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$4) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    }
  }
  $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
  do {
    if (($d_sroa_0_0_extract_trunc | 0) == 0) {
      if ($17) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      if (($n_sroa_0_0_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0;
          HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
      if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
        }
        $_0$1 = 0;
        $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
      $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
      if ($51 >>> 0 <= 30) {
        $57 = $51 + 1 | 0;
        $58 = 31 - $51 | 0;
        $sr_1_ph = $57;
        $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
        $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
        $q_sroa_0_1_ph = 0;
        $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
        break;
      }
      if (($rem | 0) == 0) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = 0 | $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$17) {
        $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
        $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($119 >>> 0 <= 31) {
          $125 = $119 + 1 | 0;
          $126 = 31 - $119 | 0;
          $130 = $119 - 31 >> 31;
          $sr_1_ph = $125;
          $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
      if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
        $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
        $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        $89 = 64 - $88 | 0;
        $91 = 32 - $88 | 0;
        $92 = $91 >> 31;
        $95 = $88 - 32 | 0;
        $105 = $95 >> 31;
        $sr_1_ph = $88;
        $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
        $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
        $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
        $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
        break;
      }
      if (($rem | 0) != 0) {
        HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
        HEAP32[$rem + 4 >> 2] = 0;
      }
      if (($d_sroa_0_0_extract_trunc | 0) == 1) {
        $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$0 = 0 | $a$0 & -1;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
        $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
        $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
  } while (0);
  if (($sr_1_ph | 0) == 0) {
    $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
    $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
    $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
    $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = 0;
  } else {
    $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
    $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
    $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
    $137$1 = tempRet0;
    $q_sroa_1_1198 = $q_sroa_1_1_ph;
    $q_sroa_0_1199 = $q_sroa_0_1_ph;
    $r_sroa_1_1200 = $r_sroa_1_1_ph;
    $r_sroa_0_1201 = $r_sroa_0_1_ph;
    $sr_1202 = $sr_1_ph;
    $carry_0203 = 0;
    while (1) {
      $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
      $149 = $carry_0203 | $q_sroa_0_1199 << 1;
      $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
      $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
      _i64Subtract($137$0, $137$1, $r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1) | 0;
      $150$1 = tempRet0;
      $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
      $152 = $151$0 & 1;
      $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1, $151$0 & $d_sroa_0_0_insert_insert99$0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1) | 0;
      $r_sroa_0_0_extract_trunc = $154$0;
      $r_sroa_1_4_extract_trunc = tempRet0;
      $155 = $sr_1202 - 1 | 0;
      if (($155 | 0) == 0) {
        break;
      } else {
        $q_sroa_1_1198 = $147;
        $q_sroa_0_1199 = $149;
        $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
        $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
        $sr_1202 = $155;
        $carry_0203 = $152;
      }
    }
    $q_sroa_1_1_lcssa = $147;
    $q_sroa_0_1_lcssa = $149;
    $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
    $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = $152;
  }
  $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
  $q_sroa_0_0_insert_ext75$1 = 0;
  $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
  if (($rem | 0) != 0) {
    HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
    HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
  }
  $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
  $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
}
// =======================================================================



  
function dynCall_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0;
  return FUNCTION_TABLE_iiiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0)|0;
}


function dynCall_viiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  FUNCTION_TABLE_viiiii[index&31](a1|0,a2|0,a3|0,a4|0,a5|0);
}


function dynCall_iiiiiid(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=+a6;
  return FUNCTION_TABLE_iiiiiid[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,+a6)|0;
}


function dynCall_vi(index,a1) {
  index = index|0;
  a1=a1|0;
  FUNCTION_TABLE_vi[index&1023](a1|0);
}


function dynCall_vii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  FUNCTION_TABLE_vii[index&1023](a1|0,a2|0);
}


function dynCall_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  return FUNCTION_TABLE_iiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0)|0;
}


function dynCall_ii(index,a1) {
  index = index|0;
  a1=a1|0;
  return FUNCTION_TABLE_ii[index&1023](a1|0)|0;
}


function dynCall_iiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0; a10=a10|0; a11=a11|0;
  return FUNCTION_TABLE_iiiiiiiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0,a10|0,a11|0)|0;
}


function dynCall_iiii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return FUNCTION_TABLE_iiii[index&1023](a1|0,a2|0,a3|0)|0;
}


function dynCall_viiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0; a10=a10|0; a11=a11|0; a12=a12|0; a13=a13|0; a14=a14|0; a15=a15|0;
  FUNCTION_TABLE_viiiiiiiiiiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0,a10|0,a11|0,a12|0,a13|0,a14|0,a15|0);
}


function dynCall_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  FUNCTION_TABLE_viiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
}


function dynCall_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0;
  FUNCTION_TABLE_viiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0);
}


function dynCall_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0; a10=a10|0;
  FUNCTION_TABLE_viiiiiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0,a10|0);
}


function dynCall_iii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  return FUNCTION_TABLE_iii[index&1023](a1|0,a2|0)|0;
}


function dynCall_iiiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  return FUNCTION_TABLE_iiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0)|0;
}


function dynCall_diii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return +FUNCTION_TABLE_diii[index&1023](a1|0,a2|0,a3|0);
}


function dynCall_i(index) {
  index = index|0;
  
  return FUNCTION_TABLE_i[index&511]()|0;
}


function dynCall_iiiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return FUNCTION_TABLE_iiiii[index&1023](a1|0,a2|0,a3|0,a4|0)|0;
}


function dynCall_viii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  FUNCTION_TABLE_viii[index&1023](a1|0,a2|0,a3|0);
}


function dynCall_v(index) {
  index = index|0;
  
  FUNCTION_TABLE_v[index&1023]();
}


function dynCall_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;
  return FUNCTION_TABLE_iiiiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0)|0;
}


function dynCall_iiiiid(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=+a5;
  return FUNCTION_TABLE_iiiiid[index&255](a1|0,a2|0,a3|0,a4|0,+a5)|0;
}


function dynCall_viiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  FUNCTION_TABLE_viiii[index&511](a1|0,a2|0,a3|0,a4|0);
}

function b0(p0,p1,p2,p3,p4,p5,p6) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0; nullFunc_iiiiiiii(0);return 0; }
function b1(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_viiiii(1); }
function b2(p0,p1,p2,p3,p4,p5) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = +p5; nullFunc_iiiiiid(2);return 0; }
function b3(p0) { p0 = p0|0; nullFunc_vi(3); }
function b4(p0,p1) { p0 = p0|0;p1 = p1|0; nullFunc_vii(4); }
function b5(p0,p1,p2,p3,p4,p5) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; nullFunc_iiiiiii(5);return 0; }
function b6(p0) { p0 = p0|0; nullFunc_ii(6);return 0; }
function _pthread_mutex_unlock__wrapper(p0) { p0 = p0|0; return _pthread_mutex_unlock(p0|0)|0; }
function _pthread_mutex_lock__wrapper(p0) { p0 = p0|0; return _pthread_mutex_lock(p0|0)|0; }
function _pthread_cond_broadcast__wrapper(p0) { p0 = p0|0; return _pthread_cond_broadcast(p0|0)|0; }
function b7(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0;p9 = p9|0;p10 = p10|0; nullFunc_iiiiiiiiiiii(7);return 0; }
function b8(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(8);return 0; }
function b9(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0;p9 = p9|0;p10 = p10|0;p11 = p11|0;p12 = p12|0;p13 = p13|0;p14 = p14|0; nullFunc_viiiiiiiiiiiiiii(9); }
function b10(p0,p1,p2,p3,p4,p5) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; nullFunc_viiiiii(10); }
function b11(p0,p1,p2,p3,p4,p5,p6) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0; nullFunc_viiiiiii(11); }
function b12(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0;p9 = p9|0; nullFunc_viiiiiiiiii(12); }
function b13(p0,p1) { p0 = p0|0;p1 = p1|0; nullFunc_iii(13);return 0; }
function b14(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(14);return 0; }
function b15(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_diii(15);return +0; }
function b16() { ; nullFunc_i(16);return 0; }
function b17(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(17);return 0; }
function b18(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_viii(18); }
function b19() { ; nullFunc_v(19); }
function ___cxa_end_catch__wrapper() { ; ___cxa_end_catch(); }
function ___cxa_rethrow__wrapper() { ; ___cxa_rethrow(); }
function b20(p0,p1,p2,p3,p4,p5,p6,p7) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(20);return 0; }
function b21(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = +p4; nullFunc_iiiiid(21);return 0; }
function b22(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_viiii(22); }

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiiiiiii = [b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc,b0,b0,__ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE,b0,b0,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb,b0,b0,b0,b0,__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0];
var FUNCTION_TABLE_viiiii = [b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b1,b1,b1,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b1,b1,b1,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib
,b1,b1,b1];
var FUNCTION_TABLE_iiiiiid = [b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce,b2,b2,b2,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2];
var FUNCTION_TABLE_vi = [b3,b3,__ZNSt9bad_allocD2Ev,__ZNSt9bad_allocD0Ev,b3,__ZNSt13runtime_errorD2Ev,__ZNSt13runtime_errorD0Ev,b3,__ZNSt14overflow_errorD0Ev,__ZNSt8bad_castD2Ev,__ZNSt8bad_castD0Ev,b3,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv123__fundamental_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,b3,__ZN10__cxxabiv117__class_type_infoD0Ev,b3,b3,b3,b3,__ZN10__cxxabiv120__si_class_type_infoD0Ev,b3,b3,b3,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,b3,b3
,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev,__ZNSt3__111__stdoutbufIwED0Ev,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__110__stdinbufIwED0Ev,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
,__ZNSt3__111__stdoutbufIcED0Ev,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__110__stdinbufIcED0Ev,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev,b3,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED0Ev,b3,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev
,__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__18ios_base7failureD2Ev,__ZNSt3__18ios_base7failureD0Ev,__ZNSt3__18ios_baseD2Ev,__ZNSt3__18ios_baseD0Ev,__ZNSt3__114error_categoryD2Ev,__ZNSt3__119__iostream_categoryD0Ev,b3,b3,b3,b3,b3,__ZNSt3__17collateIcED2Ev,__ZNSt3__17collateIcED0Ev,__ZNSt3__16locale5facet16__on_zero_sharedEv,b3,b3,b3,__ZNSt3__17collateIwED2Ev,__ZNSt3__17collateIwED0Ev
,b3,b3,b3,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev
,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b3,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b3,__ZNSt3__110moneypunctIcLb0EED2Ev,__ZNSt3__110moneypunctIcLb0EED0Ev,b3
,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__110moneypunctIcLb1EED2Ev,__ZNSt3__110moneypunctIcLb1EED0Ev,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__110moneypunctIwLb0EED2Ev,__ZNSt3__110moneypunctIwLb0EED0Ev,b3,b3,b3,b3,b3,b3,b3,b3,b3
,__ZNSt3__110moneypunctIwLb1EED2Ev,__ZNSt3__110moneypunctIwLb1EED0Ev,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b3,b3,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b3,b3,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b3,b3,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b3,b3,__ZNSt3__18messagesIcED2Ev,__ZNSt3__18messagesIcED0Ev,b3
,b3,b3,__ZNSt3__18messagesIwED2Ev,__ZNSt3__18messagesIwED0Ev,b3,b3,b3,__ZNSt3__16locale5__impD2Ev,__ZNSt3__16locale5__impD0Ev,__ZNSt3__15ctypeIcED2Ev,__ZNSt3__15ctypeIcED0Ev,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__17codecvtIwc11__mbstate_tED2Ev,__ZNSt3__17codecvtIwc11__mbstate_tED0Ev,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__18numpunctIcED2Ev,__ZNSt3__18numpunctIcED0Ev
,b3,b3,b3,b3,b3,__ZNSt3__18numpunctIwED2Ev,__ZNSt3__18numpunctIwED0Ev,b3,b3,b3,b3,b3,__ZNSt3__16locale5facetD2Ev,__ZNSt3__16locale5facetD0Ev,__ZNSt3__15ctypeIwED0Ev,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__17codecvtIcc11__mbstate_tED0Ev,b3,b3
,b3,b3,b3,b3,b3,__ZNSt3__17codecvtIDsc11__mbstate_tED0Ev,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__17codecvtIDic11__mbstate_tED0Ev,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__116__narrow_to_utf8ILj32EED0Ev,__ZNSt3__117__widen_from_utf8ILj32EED0Ev,__ZNSt3__112system_errorD2Ev,__ZNSt3__112system_errorD0Ev,b3,b3,b3,b3,b3
,b3,__ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv,b3,b3,b3,b3,b3,b3,b3,b3,__ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv,_cleanup392,_cleanup397,b3,b3
,b3,b3,__ZNSt3__18ios_base4InitD2Ev,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,_freelocale,b3,b3,__ZNSt3__112__do_nothingEPv,b3,__ZNSt3__121__throw_runtime_errorEPKc,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__16locale2id6__initEv,__ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv,b3,b3,b3,b3,b3,b3,b3
,b3,b3,___cxx_global_array_dtor,b3,___cxx_global_array_dtor54,b3,___cxx_global_array_dtor69,___cxx_global_array_dtor93,___cxx_global_array_dtor117,___cxx_global_array_dtor120,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,b3,b3,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,_free,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3];
var FUNCTION_TABLE_vii = [b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__111__stdoutbufIwE5imbueERKNS_6localeE,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE,b4,b4,b4,b4,b4,b4,b4
,b4,__ZNSt3__111__stdoutbufIcE5imbueERKNS_6localeE,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,b4,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,__ZNKSt3__110moneypunctIcLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv,b4,__ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv,b4,b4,b4,b4,__ZNKSt3__110moneypunctIcLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv,b4,__ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv,b4,b4,b4,b4,__ZNKSt3__110moneypunctIwLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv,b4,__ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv
,b4,b4,b4,b4,__ZNKSt3__110moneypunctIwLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv,b4,__ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,__ZNKSt3__18messagesIcE8do_closeEi,b4,b4,b4,b4,__ZNKSt3__18messagesIwE8do_closeEi,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,__ZNKSt3__18numpunctIcE11do_groupingEv,__ZNKSt3__18numpunctIcE11do_truenameEv,__ZNKSt3__18numpunctIcE12do_falsenameEv,b4,b4,b4,b4,__ZNKSt3__18numpunctIwE11do_groupingEv,__ZNKSt3__18numpunctIwE11do_truenameEv,__ZNKSt3__18numpunctIwE12do_falsenameEv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_,b4,b4
,__ZNSt3__18ios_base5clearEj,b4,b4,__ZN9BitVectorILj128EE25randomVectorLeadingZeroesEj,b4,b4,b4,b4,__ZN9BitVectorILj128EE5clearEj,b4,b4,b4,__ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE6rehashEj,__ZN9BitVectorILj256EE25randomVectorLeadingZeroesEj,b4,b4,b4,__ZN9BitVectorILj256EE5clearEj,b4,b4,__ZN9BitVectorILj384EE25randomVectorLeadingZeroesEj,b4,b4,b4,__ZN9BitVectorILj384EE5clearEj,b4,b4,b4,b4,b4
,_abort_message,b4,b4,b4,b4,b4,b4,__ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv,b4,__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc,b4,__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__18ios_base4initEPv
,b4,b4,b4,__ZNSt13runtime_errorC2EPKc,b4,b4,__ZNSt3__18ios_base16__call_callbacksENS0_5eventE,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryC2ERS3_,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc,b4,b4,b4,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj,b4,b4,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw,b4,b4,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj,b4,b4,b4,b4,b4,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej,b4,__ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_,__ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_,__ZNSt3__17codecvtIwc11__mbstate_tEC2Ej,__ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_
,__ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_,b4,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj,__ZNSt3__118__libcpp_refstringC2EPKc,b4,b4,__ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4];
var FUNCTION_TABLE_iiiiiii = [b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,b5,b5,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,b5
,b5,b5,b5,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx,b5,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy,b5,b5,b5,b5,b5,b5,b5,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx,b5,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy,b5,b5,b5,b5,b5,b5,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE,b5,b5,b5,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5];
var FUNCTION_TABLE_ii = [b6,b6,b6,b6,__ZNKSt9bad_alloc4whatEv,b6,b6,__ZNKSt13runtime_error4whatEv,b6,b6,b6,__ZNKSt8bad_cast4whatEv,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,___stdio_close,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZNSt3__111__stdoutbufIwE4syncEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9showmanycEv,b6,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9underflowEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5uflowEv,b6,b6,b6,b6,b6,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE4syncEv,__ZNSt3__110__stdinbufIwE9underflowEv,__ZNSt3__110__stdinbufIwE5uflowEv,b6,b6,b6,b6
,b6,b6,b6,b6,b6,__ZNSt3__111__stdoutbufIcE4syncEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv,b6,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv,b6,b6,b6,b6,b6,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__110__stdinbufIcE9underflowEv,__ZNSt3__110__stdinbufIcE5uflowEv,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZNKSt3__119__iostream_category4nameEv,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv,b6,b6,b6,b6,b6,b6,__ZNKSt3__120__time_get_c_storageIcE7__weeksEv,__ZNKSt3__120__time_get_c_storageIcE8__monthsEv
,__ZNKSt3__120__time_get_c_storageIcE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIcE3__cEv,__ZNKSt3__120__time_get_c_storageIcE3__rEv,__ZNKSt3__120__time_get_c_storageIcE3__xEv,__ZNKSt3__120__time_get_c_storageIcE3__XEv,b6,b6,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv,b6,b6,b6,b6,b6,b6,__ZNKSt3__120__time_get_c_storageIwE7__weeksEv,__ZNKSt3__120__time_get_c_storageIwE8__monthsEv,__ZNKSt3__120__time_get_c_storageIwE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIwE3__cEv,__ZNKSt3__120__time_get_c_storageIwE3__rEv,__ZNKSt3__120__time_get_c_storageIwE3__xEv,__ZNKSt3__120__time_get_c_storageIwE3__XEv,b6,b6,b6,b6,b6,b6,b6,b6,__ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv
,__ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv,b6,b6,b6,b6,__ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv,b6,b6,b6,b6,__ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv,b6,b6,b6,b6,__ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv,b6,b6,b6,b6,__ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv,b6,b6,b6,b6,__ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv,b6,b6
,b6,b6,__ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv,b6,b6,b6,b6,__ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv,b6,__ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv,b6,b6
,__ZNKSt3__18numpunctIcE16do_decimal_pointEv,__ZNKSt3__18numpunctIcE16do_thousands_sepEv,b6,b6,b6,b6,b6,__ZNKSt3__18numpunctIwE16do_decimal_pointEv,__ZNKSt3__18numpunctIwE16do_thousands_sepEv,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,__ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv,b6,__ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv,b6,b6,b6,b6,__ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv,b6,__ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv,b6,b6,b6,b6,__ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv,b6,__ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv,b6,b6,b6,b6,__ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_,b6,b6,__ZNKSt3__18ios_base6getlocEv,b6
,b6,b6,b6,b6,__ZNK9BitVectorILj128EE11getFirstOneEv,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZNK9BitVectorILj256EE11getFirstOneEv,b6,b6,b6,b6,b6,b6,__ZNK9BitVectorILj384EE11getFirstOneEv,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv,b6,b6,__Znwj,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,_uselocale,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,_wcslen,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,_pthread_mutex_unlock__wrapper,_pthread_mutex_lock__wrapper,_pthread_cond_broadcast__wrapper,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6];
var FUNCTION_TABLE_iiiiiiiiiiii = [b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_,b7,b7
,b7,b7,b7,b7,b7,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7];
var FUNCTION_TABLE_iiii = [b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,__ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv,b8,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,_sn_write,b8,___stdio_write,___stdio_seek,___stdio_read,___stdout_write,b8,b8,b8,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi,b8,b8,b8,b8,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi,b8,b8,b8,__ZNSt3__111__stdoutbufIwE6xsputnEPKwi,b8,b8,b8,b8,b8,b8,b8,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi,b8,b8
,b8,b8,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci,b8,b8,b8,b8,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci,b8,b8,b8,__ZNSt3__111__stdoutbufIcE6xsputnEPKci,b8,b8,b8,b8,b8,b8,b8,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,__ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE,__ZNKSt3__114error_category10equivalentERKNS_10error_codeEi,b8,b8,b8,b8,b8,b8,__ZNKSt3__17collateIcE7do_hashEPKcS3_,b8,b8
,b8,b8,__ZNKSt3__17collateIwE7do_hashEPKwS3_,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,__ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE
,b8,b8,b8,b8,__ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,b8,b8,b8,b8,b8,b8,b8,__ZNKSt3__15ctypeIcE10do_toupperEPcPKc,b8,__ZNKSt3__15ctypeIcE10do_tolowerEPcPKc,b8,b8,__ZNKSt3__15ctypeIcE9do_narrowEcc,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,__ZNKSt3__15ctypeIwE5do_isEtw,b8,b8,b8,b8,__ZNKSt3__15ctypeIwE10do_toupperEPwPKw,b8,__ZNKSt3__15ctypeIwE10do_tolowerEPwPKw,b8,b8,__ZNKSt3__15ctypeIwE9do_narrowEwc,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj,b8
,b8,b8,__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc,b8,b8,__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_,__ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_,b8,__ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_,b8,b8,b8,b8,b8,b8,__ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_,b8,__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_,b8,b8,b8,b8,__ZN10__cxxabiv112_GLOBAL__N_118parse_template_argINS0_2DbEEEPKcS4_S4_RT_,b8,b8,b8,b8,b8,_do_read,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,_newlocale,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_,b8,b8,b8,b8,b8,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,_wcrtomb,b8,b8
,_mbtowc,_mbrlen,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,_vasprintf,b8,b8,b8,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8];
var FUNCTION_TABLE_viiiiiiiiiiiiiii = [b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,__ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i,b9,__ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9];
var FUNCTION_TABLE_viiiiii = [b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b10,b10,b10,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b10,b10,b10,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,__ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,b10,b10,b10,b10,__ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10];
var FUNCTION_TABLE_viiiiiii = [b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE,b11,b11,__ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE,b11,b11,__ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE,__ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11];
var FUNCTION_TABLE_viiiiiiiiii = [b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,__ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri
,b12,b12,b12,b12,b12,b12,__ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri,b12,b12,b12,b12,__ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri,b12,__ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12];
var FUNCTION_TABLE_iii = [b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj,b13,__ZNSt3__111__stdoutbufIwE8overflowEj,b13,b13,b13,b13,b13,__ZNSt3__110__stdinbufIwE9pbackfailEj,b13,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE8overflowEj,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi,b13,__ZNSt3__111__stdoutbufIcE8overflowEi,b13,b13,b13,b13,b13,__ZNSt3__110__stdinbufIcE9pbackfailEi,b13,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZNKSt3__15ctypeIcE10do_toupperEc,b13,__ZNKSt3__15ctypeIcE10do_tolowerEc,b13,__ZNKSt3__15ctypeIcE8do_widenEc,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZNKSt3__15ctypeIwE10do_toupperEw,b13,__ZNKSt3__15ctypeIwE10do_tolowerEw,b13,__ZNKSt3__15ctypeIwE8do_widenEc,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZNKSt3__16locale9use_facetERNS0_2idE,b13,b13,b13
,b13,b13,b13,b13,b13,__ZNKSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE4findIiEENS_21__hash_const_iteratorIPNS_11__hash_nodeIiPvEEEERKT_,__ZN9BitVectorILj128EEaSERKS0_,b13,b13,b13,b13,b13,b13,b13,b13,__ZN9BitVectorILj256EEaSERKS0_,b13,b13,b13,b13,b13,b13,__ZN9BitVectorILj384EEaSERKS0_,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,_isxdigit_l,_isdigit_l,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc,b13,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13];
var FUNCTION_TABLE_iiiiii = [b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,__ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_,b14,b14,b14,b14
,__ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl,b14,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm,b14,b14,b14,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv,b14,b14,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl,b14,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm,b14,b14,b14,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,__ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc,b14,b14,b14,b14,__ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b14,b14,__ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,__ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc,b14,b14,b14
,__ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b14,b14,__ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j,b14,b14,b14,b14,__ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b14,b14,__ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j,b14,b14,b14,b14,__ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b14,b14,__ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,_wcsnrtombs,b14,_mbsnrtowcs,b14
,b14,b14,b14];
var FUNCTION_TABLE_diii = [b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZNSt3__115__num_get_floatIfEET_PKcS3_Rj,__ZNSt3__115__num_get_floatIdEET_PKcS3_Rj,__ZNSt3__115__num_get_floatIeEET_PKcS3_Rj,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15];
var FUNCTION_TABLE_i = [b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,___cxa_get_globals_fast,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,__ZNSt3__16__clocEv,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,__ZNSt3__16locale5__imp12make_classicEv,b16,__ZNSt3__16locale5__imp11make_globalEv,__ZNSt3__16locale8__globalEv,b16,b16,___ctype_b_loc,___ctype_toupper_loc,___ctype_tolower_loc,b16,b16,b16,b16
,b16,b16,b16];
var FUNCTION_TABLE_iiiii = [b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt,__ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_,__ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_,b17,b17,b17,b17,b17,__ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj,b17,b17,b17,b17,b17,b17,b17,b17,__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_,__ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_,b17,b17,b17,__ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z,b17,b17,b17,__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz,b17,b17,b17,b17,b17,b17,b17,b17,_mbsrtowcs,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,_catgets,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,_mbrtowc
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji,__ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17];
var FUNCTION_TABLE_viii = [b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,__ZNKSt3__114error_category23default_error_conditionEi,b18,b18,__ZNKSt3__119__iostream_category7messageEi,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,__ZN9BitMatrixILj128ELj128EE3setEjj,b18,__ZN9BitMatrixILj128ELj128EE6setRowEjRK9BitVectorILj128EE,__ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE15__insert_uniqueERKi,__ZNK9BitMatrixILj128ELj128EEmlILj128EEEKS_ILj128EXT_EERS3_,b18,b18,b18,b18,__ZN9BitMatrixILj256ELj256EE3setEjj,b18,__ZN9BitMatrixILj256ELj256EE6setRowEjRK9BitVectorILj256EE,__ZNK9BitMatrixILj256ELj256EEmlILj256EEEKS_ILj256EXT_EERS3_,b18,b18,b18,__ZN9BitMatrixILj384ELj384EE3setEjj,b18,__ZN9BitMatrixILj384ELj384EE6setRowEjRK9BitVectorILj384EE,__ZNK9BitMatrixILj384ELj384EEmlILj384EEEKS_ILj384EXT_EERS3_,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj,b18,__ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_,b18,__ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_,b18,__ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_,b18,b18,__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,__ZNSt3__18ios_base7failureC2EPKcRKNS_10error_codeE,b18,b18,b18,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,__ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,__ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,b18,b18,b18,b18,b18,__ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,b18,b18,b18,b18,b18,b18,b18,b18,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,__ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18];
var FUNCTION_TABLE_v = [b19,__ZL25default_terminate_handlerv,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,___cxa_end_catch__wrapper,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,__ZSt17__throw_bad_allocv,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,___cxa_rethrow__wrapper,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19];
var FUNCTION_TABLE_iiiiiiiii = [b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,__ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,__ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_
,b20,b20,b20,b20,b20,b20,__ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_,b20,b20,b20,b20,b20,b20,__ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20];
var FUNCTION_TABLE_iiiiid = [b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce,b21,b21,b21,b21,b21,b21,b21,b21,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21];
var FUNCTION_TABLE_viiii = [b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b22,b22,b22,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b22,b22,b22
,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,__ZNKSt3__17collateIcE12do_transformEPKcS3_,b22,b22,b22
,b22,__ZNKSt3__17collateIwE12do_transformEPKwS3_,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,__ZN10__cxxabiv112_GLOBAL__N_18demangleINS0_2DbEEEvPKcS4_RT_Ri,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcjj,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22];

  return { _malloc: _malloc, ___cxa_can_catch: ___cxa_can_catch, _free: _free, _main: _main, ___cxa_is_pointer_type: ___cxa_is_pointer_type, _i64Add: _i64Add, _memmove: _memmove, _i64Subtract: _i64Subtract, _memset: _memset, ___cxa_demangle: ___cxa_demangle, _memcpy: _memcpy, ___getTypeName: ___getTypeName, _bitshift64Lshr: _bitshift64Lshr, _fflush: _fflush, ___errno_location: ___errno_location, _bitshift64Shl: _bitshift64Shl, __GLOBAL__sub_I_test_KryptnosticClient_cpp: __GLOBAL__sub_I_test_KryptnosticClient_cpp, __GLOBAL__sub_I_bind_cpp: __GLOBAL__sub_I_bind_cpp, __GLOBAL__sub_I_iostream_cpp: __GLOBAL__sub_I_iostream_cpp, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, establishStackSpace: establishStackSpace, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiiiiiii: dynCall_iiiiiiii, dynCall_viiiii: dynCall_viiiii, dynCall_iiiiiid: dynCall_iiiiiid, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_iiiiiii: dynCall_iiiiiii, dynCall_ii: dynCall_ii, dynCall_iiiiiiiiiiii: dynCall_iiiiiiiiiiii, dynCall_iiii: dynCall_iiii, dynCall_viiiiiiiiiiiiiii: dynCall_viiiiiiiiiiiiiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_viiiiiii: dynCall_viiiiiii, dynCall_viiiiiiiiii: dynCall_viiiiiiiiii, dynCall_iii: dynCall_iii, dynCall_iiiiii: dynCall_iiiiii, dynCall_diii: dynCall_diii, dynCall_i: dynCall_i, dynCall_iiiii: dynCall_iiiii, dynCall_viii: dynCall_viii, dynCall_v: dynCall_v, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_iiiiid: dynCall_iiiiid, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
var real___GLOBAL__sub_I_test_KryptnosticClient_cpp = asm["__GLOBAL__sub_I_test_KryptnosticClient_cpp"]; asm["__GLOBAL__sub_I_test_KryptnosticClient_cpp"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real___GLOBAL__sub_I_test_KryptnosticClient_cpp.apply(null, arguments);
};

var real____cxa_demangle = asm["___cxa_demangle"]; asm["___cxa_demangle"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____cxa_demangle.apply(null, arguments);
};

var real____cxa_can_catch = asm["___cxa_can_catch"]; asm["___cxa_can_catch"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____cxa_can_catch.apply(null, arguments);
};

var real___GLOBAL__sub_I_bind_cpp = asm["__GLOBAL__sub_I_bind_cpp"]; asm["__GLOBAL__sub_I_bind_cpp"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real___GLOBAL__sub_I_bind_cpp.apply(null, arguments);
};

var real__free = asm["_free"]; asm["_free"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__free.apply(null, arguments);
};

var real__main = asm["_main"]; asm["_main"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__main.apply(null, arguments);
};

var real____cxa_is_pointer_type = asm["___cxa_is_pointer_type"]; asm["___cxa_is_pointer_type"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____cxa_is_pointer_type.apply(null, arguments);
};

var real__i64Add = asm["_i64Add"]; asm["_i64Add"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Add.apply(null, arguments);
};

var real__memmove = asm["_memmove"]; asm["_memmove"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__memmove.apply(null, arguments);
};

var real__i64Subtract = asm["_i64Subtract"]; asm["_i64Subtract"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Subtract.apply(null, arguments);
};

var real__malloc = asm["_malloc"]; asm["_malloc"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__malloc.apply(null, arguments);
};

var real____getTypeName = asm["___getTypeName"]; asm["___getTypeName"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____getTypeName.apply(null, arguments);
};

var real___GLOBAL__sub_I_iostream_cpp = asm["__GLOBAL__sub_I_iostream_cpp"]; asm["__GLOBAL__sub_I_iostream_cpp"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real___GLOBAL__sub_I_iostream_cpp.apply(null, arguments);
};

var real__bitshift64Lshr = asm["_bitshift64Lshr"]; asm["_bitshift64Lshr"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Lshr.apply(null, arguments);
};

var real__fflush = asm["_fflush"]; asm["_fflush"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__fflush.apply(null, arguments);
};

var real____errno_location = asm["___errno_location"]; asm["___errno_location"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____errno_location.apply(null, arguments);
};

var real__bitshift64Shl = asm["_bitshift64Shl"]; asm["_bitshift64Shl"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Shl.apply(null, arguments);
};
var __GLOBAL__sub_I_test_KryptnosticClient_cpp = Module["__GLOBAL__sub_I_test_KryptnosticClient_cpp"] = asm["__GLOBAL__sub_I_test_KryptnosticClient_cpp"];
var ___cxa_demangle = Module["___cxa_demangle"] = asm["___cxa_demangle"];
var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
var __GLOBAL__sub_I_bind_cpp = Module["__GLOBAL__sub_I_bind_cpp"] = asm["__GLOBAL__sub_I_bind_cpp"];
var _free = Module["_free"] = asm["_free"];
var _main = Module["_main"] = asm["_main"];
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var ___getTypeName = Module["___getTypeName"] = asm["___getTypeName"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var __GLOBAL__sub_I_iostream_cpp = Module["__GLOBAL__sub_I_iostream_cpp"] = asm["__GLOBAL__sub_I_iostream_cpp"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _fflush = Module["_fflush"] = asm["_fflush"];
var ___errno_location = Module["___errno_location"] = asm["___errno_location"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_iiiiiid = Module["dynCall_iiiiiid"] = asm["dynCall_iiiiiid"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_iiiiiiiiiiii = Module["dynCall_iiiiiiiiiiii"] = asm["dynCall_iiiiiiiiiiii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiiiiiiiiiiiii = Module["dynCall_viiiiiiiiiiiiiii"] = asm["dynCall_viiiiiiiiiiiiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_viiiiiiiiii = Module["dynCall_viiiiiiiiii"] = asm["dynCall_viiiiiiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_diii = Module["dynCall_diii"] = asm["dynCall_diii"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_iiiiid = Module["dynCall_iiiiid"] = asm["dynCall_iiiiid"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
;

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];
Runtime.establishStackSpace = asm['establishStackSpace'];

Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];



// === Auto-generated postamble setup entry stuff ===


function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = Runtime.stackSave();

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      Runtime.stackRestore(initialStackTop);
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return; 

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') implicitly called by end of main(), but noExitRuntime, so not exiting the runtime (you can use emscripten_force_exit, if you want to force a true shutdown)');
    return;
  }

  if (Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') called, but noExitRuntime, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)');
  } else {

    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    // Work around a node.js bug where stdout buffer is not flushed at process exit:
    // Instead of process.exit() directly, wait for stdout flush event.
    // See https://github.com/joyent/node/issues/1669 and https://github.com/kripken/emscripten/issues/2582
    // Workaround is based on https://github.com/RReverser/acorn/commit/50ab143cecc9ed71a2d66f78b4aec3bb2e9844f6
    process['stdout']['once']('drain', function () {
      process['exit'](status);
    });
    console.log(' '); // Make sure to print something to force the drain event to occur, in case the stdout buffer was empty.
    // Work around another node bug where sometimes 'drain' is never fired - make another effort
    // to emit the exit status, after a significant delay (if node hasn't fired drain by then, give up)
    setTimeout(function() {
      process['exit'](status);
    }, 500);
  } else
  if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {
    quit(status);
  }
  // if we reach here, we must throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}



